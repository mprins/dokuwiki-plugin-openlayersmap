{"version":3,"file":"ol.js","sources":["../ol/events/Event.js","../ol/ObjectEventType.js","../ol/Disposable.js","../ol/array.js","../ol/functions.js","../ol/obj.js","../ol/events/Target.js","../ol/events/EventType.js","../ol/events.js","../ol/Observable.js","../ol/util.js","../ol/Object.js","../ol/CollectionEventType.js","../ol/Collection.js","../ol/TileState.js","../ol/easing.js","../ol/Tile.js","../ol/has.js","../ol/dom.js","../ol/DataTile.js","../ol/asserts.js","../ol/Feature.js","../ol/transform.js","../ol/extent/Relationship.js","../ol/extent.js","../ol/proj/Units.js","../ol/proj/Projection.js","../ol/proj/epsg3857.js","../ol/proj/epsg4326.js","../ol/proj/projections.js","../ol/proj/transforms.js","../ol/math.js","../ol/string.js","../ol/coordinate.js","../ol/sphere.js","../ol/console.js","../ol/proj.js","../ol/geom/flat/transform.js","../ol/geom/Geometry.js","../ol/geom/SimpleGeometry.js","../ol/geom/flat/closest.js","../ol/geom/flat/deflate.js","../ol/geom/flat/simplify.js","../ol/geom/flat/inflate.js","../ol/geom/flat/area.js","../ol/geom/LinearRing.js","../ol/geom/Point.js","../ol/geom/flat/contains.js","../ol/geom/flat/interiorpoint.js","../ol/geom/flat/segments.js","../ol/geom/flat/intersectsextent.js","../ol/geom/flat/reverse.js","../ol/geom/flat/orient.js","../ol/geom/Polygon.js","../ol/Geolocation.js","../ol/ImageState.js","../ol/Image.js","../ol/ImageCanvas.js","../ol/ImageTile.js","../ol/Kinetic.js","../../node_modules/color-space/rgb.js","../../node_modules/color-space/xyz.js","../../node_modules/color-space/luv.js","../../node_modules/color-space/lchuv.js","../../node_modules/color-name/index.js","../../node_modules/color-parse/index.js","../../node_modules/color-space/hsl.js","../../node_modules/color-rgba/index.js","../ol/color.js","../ol/style/IconImageCache.js","../ol/layer/Property.js","../ol/layer/Base.js","../ol/render/EventType.js","../ol/ViewHint.js","../ol/ViewProperty.js","../ol/tilegrid/common.js","../ol/centerconstraint.js","../ol/resolutionconstraint.js","../ol/rotationconstraint.js","../ol/View.js","../ol/layer/Layer.js","../ol/renderer/Map.js","../ol/render/Event.js","../ol/css.js","../ol/render/canvas.js","../ol/renderer/Composite.js","../ol/layer/Group.js","../ol/MapEvent.js","../ol/MapBrowserEvent.js","../ol/MapBrowserEventType.js","../ol/pointer/EventType.js","../ol/MapBrowserEventHandler.js","../ol/MapEventType.js","../ol/MapProperty.js","../ol/structs/PriorityQueue.js","../ol/TileQueue.js","../ol/control/Control.js","../ol/control/Attribution.js","../ol/control/Rotate.js","../ol/control/Zoom.js","../ol/control/defaults.js","../ol/interaction/Property.js","../ol/interaction/Interaction.js","../ol/interaction/DoubleClickZoom.js","../ol/interaction/Pointer.js","../ol/events/condition.js","../ol/interaction/DragPan.js","../ol/interaction/DragRotate.js","../ol/render/Box.js","../ol/interaction/DragBox.js","../ol/interaction/DragZoom.js","../ol/events/Key.js","../ol/interaction/KeyboardPan.js","../ol/interaction/KeyboardZoom.js","../ol/interaction/MouseWheelZoom.js","../ol/interaction/PinchRotate.js","../ol/interaction/PinchZoom.js","../ol/interaction/defaults.js","../ol/size.js","../ol/Map.js","../ol/Overlay.js","../ol/structs/LRUCache.js","../ol/tilecoord.js","../ol/TileCache.js","../ol/TileRange.js","../ol/VectorRenderTile.js","../ol/colorlike.js","../ol/featureloader.js","../ol/net.js","../ol/loadingstrategy.js","../ol/render/VectorContext.js","../ol/render/canvas/Immediate.js","../ol/renderer/vector.js","../ol/render.js","../ol/reproj.js","../ol/resolution.js","../ol/reproj/common.js","../ol/reproj/Triangulation.js","../ol/reproj/Tile.js","../ol/source/TileEventType.js","../ol/source/Source.js","../ol/tilegrid/TileGrid.js","../ol/tilegrid/WMTS.js","../ol/tilegrid.js","../ol/source/Tile.js","../ol/tileurlfunction.js","../ol/source/UrlTile.js","../ol/source/TileImage.js","../ol/source/BingMaps.js","../ol/source/XYZ.js","../../node_modules/quickselect/index.js","../../node_modules/rbush/index.js","../ol/structs/RBush.js","../ol/geom/Circle.js","../ol/geom/GeometryCollection.js","../ol/geom/flat/interpolate.js","../ol/geom/flat/length.js","../ol/geom/LineString.js","../ol/geom/MultiLineString.js","../ol/geom/MultiPoint.js","../ol/geom/flat/center.js","../ol/geom/MultiPolygon.js","../ol/render/Feature.js","../ol/source/VectorEventType.js","../ol/source/Vector.js","../ol/source/Cluster.js","../ol/reproj/DataTile.js","../ol/source/DataTile.js","../ol/reproj/Image.js","../ol/source/common.js","../ol/source/Image.js","../ol/uri.js","../ol/source/arcgisRest.js","../ol/source/ImageArcGISRest.js","../ol/source/ImageCanvas.js","../ol/source/static.js","../ol/source/ImageStatic.js","../ol/source/wms.js","../ol/source/ImageWMS.js","../ol/source/ogcTileUtil.js","../ol/source/OGCMapTile.js","../ol/source/OSM.js","../ol/layer/BaseImage.js","../ol/renderer/Layer.js","../ol/renderer/canvas/Layer.js","../ol/renderer/canvas/ImageLayer.js","../ol/layer/Image.js","../ol/layer/TileProperty.js","../ol/layer/BaseTile.js","../ol/renderer/canvas/TileLayer.js","../ol/layer/Tile.js","../ol/source/Raster.js","../ol/source/StadiaMaps.js","../ol/source/TileArcGISRest.js","../ol/source/TileDebug.js","../ol/source/TileJSON.js","../ol/source/TileWMS.js","../ol/source/UTFGrid.js","../ol/source/WMTS.js","../ol/xml.js","../ol/vec/mat4.js","../ol/style/Image.js","../ol/style/RegularShape.js","../ol/style/Circle.js","../ol/style/Fill.js","../ol/style/IconImage.js","../ol/style/Icon.js","../ol/style/Stroke.js","../ol/style/Style.js","../ol/style/Text.js","../ol/style/flat.js","../ol/structs/LinkedList.js","../ol/render/canvas/Instruction.js","../ol/render/canvas/Builder.js","../ol/render/canvas/ImageBuilder.js","../ol/render/canvas/LineStringBuilder.js","../ol/render/canvas/PolygonBuilder.js","../ol/geom/flat/linechunk.js","../ol/geom/flat/straightchunk.js","../ol/render/canvas/TextBuilder.js","../ol/render/canvas/BuilderGroup.js","../ol/geom/flat/textpath.js","../ol/render/canvas/Executor.js","../ol/render/canvas/ExecutorGroup.js","../ol/render/canvas/hitdetect.js","../ol/renderer/canvas/VectorLayer.js","../ol/renderer/canvas/VectorImageLayer.js","../ol/expr/expression.js","../ol/expr/cpu.js","../ol/render/canvas/style.js","../ol/proj/proj4.js","../ol/layer/BaseVector.js","../ol/layer/Vector.js","../ol/geom/flat/geodesic.js","../ol/layer/Graticule.js","../ol/webgl.js","../ol/webgl/Buffer.js","../ol/webgl/ContextEventType.js","../ol/webgl/PostProcessingPass.js","../ol/webgl/Helper.js","../ol/renderer/webgl/Layer.js","../ol/webgl/RenderTarget.js","../ol/render/webgl/constants.js","../../node_modules/earcut/src/earcut.js","../ol/render/webgl/utils.js","../ol/renderer/webgl/PointsLayer.js","../ol/worker/webgl.js","../ol/renderer/webgl/worldUtil.js","../ol/webgl/PaletteTexture.js","../ol/renderer/webgl/TileLayer.js","../ol/renderer/webgl/TileLayerBase.js","../ol/expr/gpu.js","../ol/webgl/ShaderBuilder.js","../ol/layer/Heatmap.js","../ol/layer/VectorImage.js","../ol/interaction/DblClickDragZoom.js","../ol/interaction/DragAndDrop.js","../ol/interaction/DragRotateAndZoom.js","../ol/interaction/Draw.js","../ol/interaction/Extent.js","../ol/interaction/Link.js","../ol/interaction/Modify.js","../ol/interaction/Select.js","../ol/events/SnapEvent.js","../ol/interaction/Snap.js","../ol/interaction/Translate.js","../ol/geom/flat/flip.js","../ol/format/Feature.js","../ol/format/XMLFeature.js","../ol/format/xsd.js","../ol/format/GPX.js","../ol/format/JSONFeature.js","../ol/format/GeoJSON.js","../ol/format/TextFeature.js","../ol/format/IGC.js","../ol/format/KML.js","../../node_modules/ieee754/index.js","../../node_modules/pbf/index.js","../ol/format/MVT.js","../ol/format/OSMXML.js","../ol/format/XML.js","../ol/format/xlink.js","../ol/format/OWS.js","../ol/format/Polyline.js","../ol/format/TopoJSON.js","../ol/format/GMLBase.js","../ol/format/GML2.js","../ol/format/GML3.js","../ol/format/GML32.js","../ol/format/filter/Filter.js","../ol/format/filter/LogicalNary.js","../ol/format/filter/And.js","../ol/format/filter/Bbox.js","../ol/format/WFS.js","../ol/format/filter.js","../ol/format/WMSGetFeatureInfo.js","../ol/format/WMTSCapabilities.js","../ol/control/FullScreen.js","../ol/control/MousePosition.js","../ol/control/OverviewMap.js","../ol/control/ScaleLine.js","../ol/control/ZoomSlider.js","../ol/control/ZoomToExtent.js","../index.js","../ol/geom/flat/topology.js","../ol/source.js"],"sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '8.2.0';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile|null}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    let tile = this.interimTile;\n    if (!tile) {\n      //empty chain\n      return this;\n    }\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    let tile = this.interimTile;\n    if (!tile) {\n      return;\n    }\n\n    /** @type {Tile} */\n    let prev = this;\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      }\n      if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement ||\n    data instanceof ImageBitmap\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true}\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`'\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, precision) {\n  const numberString =\n    precision !== undefined ? number.toFixed(precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      }\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/Geolocation\n */\nimport BaseEvent from './events/Event.js';\nimport BaseObject from './Object.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  identityTransform,\n} from './proj.js';\nimport {toRadians} from './math.js';\n\n/**\n * @enum {string}\n */\nconst Property = {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions',\n};\n\n/**\n * @enum string\n */\nconst GeolocationErrorType = {\n  /**\n   * Triggered when a `GeolocationPositionError` occurs.\n   * @event module:ol/Geolocation.GeolocationError#error\n   * @api\n   */\n  ERROR: 'error',\n};\n\n/**\n * @classdesc\n * Events emitted on [GeolocationPositionError](https://developer.mozilla.org/en-US/docs/Web/API/GeolocationPositionError).\n */\nexport class GeolocationError extends BaseEvent {\n  /**\n   * @param {GeolocationPositionError} error error object.\n   */\n  constructor(error) {\n    super(GeolocationErrorType.ERROR);\n\n    /**\n     * Code of the underlying `GeolocationPositionError`.\n     * @type {number}\n     * @api\n     */\n    this.code = error.code;\n\n    /**\n     * Message of the underlying `GeolocationPositionError`.\n     * @type {string}\n     * @api\n     */\n    this.message = error.message;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See https://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {import(\"./proj.js\").ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:accuracy'|'change:accuracyGeometry'|'change:altitude'|\n *    'change:altitudeAccuracy'|'change:heading'|'change:position'|'change:projection'|'change:speed'|'change:tracking'|\n *    'change:trackingOptions'} GeolocationObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<GeolocationObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'error', GeolocationError, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|GeolocationObjectEventTypes, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return>} GeolocationOnSignature\n */\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](https://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes and errors, register listeners for the generic\n * `change` event and the `error` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     const geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       console.log(geolocation.getPosition());\n *     });\n *     // listen to error\n *     geolocation.on('error', function(evt) {\n *       window.console.log(evt.message);\n *     });\n *\n * @fires GeolocationError\n * @api\n */\nclass Geolocation extends BaseObject {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GeolocationOnSignature<void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * The unprojected (EPSG:4326) device position.\n     * @private\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.position_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./proj.js\").TransformFunction}\n     */\n    this.transform_ = identityTransform;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.watchId_ = undefined;\n\n    this.addChangeListener(Property.PROJECTION, this.handleProjectionChanged_);\n    this.addChangeListener(Property.TRACKING, this.handleTrackingChanged_);\n\n    if (options.projection !== undefined) {\n      this.setProjection(options.projection);\n    }\n    if (options.trackingOptions !== undefined) {\n      this.setTrackingOptions(options.trackingOptions);\n    }\n\n    this.setTracking(options.tracking !== undefined ? options.tracking : false);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTracking(false);\n    super.disposeInternal();\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    const projection = this.getProjection();\n    if (projection) {\n      this.transform_ = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        projection\n      );\n      if (this.position_) {\n        this.set(Property.POSITION, this.transform_(this.position_));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleTrackingChanged_() {\n    if ('geolocation' in navigator) {\n      const tracking = this.getTracking();\n      if (tracking && this.watchId_ === undefined) {\n        this.watchId_ = navigator.geolocation.watchPosition(\n          this.positionChange_.bind(this),\n          this.positionError_.bind(this),\n          this.getTrackingOptions()\n        );\n      } else if (!tracking && this.watchId_ !== undefined) {\n        navigator.geolocation.clearWatch(this.watchId_);\n        this.watchId_ = undefined;\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPosition} position position event.\n   */\n  positionChange_(position) {\n    const coords = position.coords;\n    this.set(Property.ACCURACY, coords.accuracy);\n    this.set(\n      Property.ALTITUDE,\n      coords.altitude === null ? undefined : coords.altitude\n    );\n    this.set(\n      Property.ALTITUDE_ACCURACY,\n      coords.altitudeAccuracy === null ? undefined : coords.altitudeAccuracy\n    );\n    this.set(\n      Property.HEADING,\n      coords.heading === null ? undefined : toRadians(coords.heading)\n    );\n    if (!this.position_) {\n      this.position_ = [coords.longitude, coords.latitude];\n    } else {\n      this.position_[0] = coords.longitude;\n      this.position_[1] = coords.latitude;\n    }\n    const projectedPosition = this.transform_(this.position_);\n    this.set(Property.POSITION, projectedPosition.slice());\n    this.set(Property.SPEED, coords.speed === null ? undefined : coords.speed);\n    const geometry = circularPolygon(this.position_, coords.accuracy);\n    geometry.applyTransform(this.transform_);\n    this.set(Property.ACCURACY_GEOMETRY, geometry);\n    this.changed();\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPositionError} error error object.\n   */\n  positionError_(error) {\n    this.dispatchEvent(new GeolocationError(error));\n  }\n\n  /**\n   * Get the accuracy of the position in meters.\n   * @return {number|undefined} The accuracy of the position measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAccuracy() {\n    return /** @type {number|undefined} */ (this.get(Property.ACCURACY));\n  }\n\n  /**\n   * Get a geometry of the position accuracy.\n   * @return {?import(\"./geom/Polygon.js\").default} A geometry of the position accuracy.\n   * @observable\n   * @api\n   */\n  getAccuracyGeometry() {\n    return /** @type {?import(\"./geom/Polygon.js\").default} */ (\n      this.get(Property.ACCURACY_GEOMETRY) || null\n    );\n  }\n\n  /**\n   * Get the altitude associated with the position.\n   * @return {number|undefined} The altitude of the position in meters above mean\n   *     sea level.\n   * @observable\n   * @api\n   */\n  getAltitude() {\n    return /** @type {number|undefined} */ (this.get(Property.ALTITUDE));\n  }\n\n  /**\n   * Get the altitude accuracy of the position.\n   * @return {number|undefined} The accuracy of the altitude measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAltitudeAccuracy() {\n    return /** @type {number|undefined} */ (\n      this.get(Property.ALTITUDE_ACCURACY)\n    );\n  }\n\n  /**\n   * Get the heading as radians clockwise from North.\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n   * is set to `true` in the tracking options.\n   * @return {number|undefined} The heading of the device in radians from north.\n   * @observable\n   * @api\n   */\n  getHeading() {\n    return /** @type {number|undefined} */ (this.get(Property.HEADING));\n  }\n\n  /**\n   * Get the position of the device.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The current position of the device reported\n   *     in the current projection.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the projection associated with the position.\n   * @return {import(\"./proj/Projection.js\").default|undefined} The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"./proj/Projection.js\").default|undefined} */ (\n      this.get(Property.PROJECTION)\n    );\n  }\n\n  /**\n   * Get the speed in meters per second.\n   * @return {number|undefined} The instantaneous speed of the device in meters\n   *     per second.\n   * @observable\n   * @api\n   */\n  getSpeed() {\n    return /** @type {number|undefined} */ (this.get(Property.SPEED));\n  }\n\n  /**\n   * Determine if the device location is being tracked.\n   * @return {boolean} The device location is being tracked.\n   * @observable\n   * @api\n   */\n  getTracking() {\n    return /** @type {boolean} */ (this.get(Property.TRACKING));\n  }\n\n  /**\n   * Get the tracking options.\n   * See https://www.w3.org/TR/geolocation-API/#position-options.\n   * @return {PositionOptions|undefined} PositionOptions as defined by\n   *     the [HTML5 Geolocation spec\n   *     ](https://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  getTrackingOptions() {\n    return /** @type {PositionOptions|undefined} */ (\n      this.get(Property.TRACKING_OPTIONS)\n    );\n  }\n\n  /**\n   * Set the projection to use for transforming the coordinates.\n   * @param {import(\"./proj.js\").ProjectionLike} projection The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(Property.PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * Enable or disable tracking.\n   * @param {boolean} tracking Enable tracking.\n   * @observable\n   * @api\n   */\n  setTracking(tracking) {\n    this.set(Property.TRACKING, tracking);\n  }\n\n  /**\n   * Set the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @param {PositionOptions} options PositionOptions as defined by the\n   *     [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  setTrackingOptions(options) {\n    this.set(Property.TRACKING_OPTIONS, options);\n  }\n}\n\nexport default Geolocation;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(this.getExtent(), requestResolution, this.getPixelRatio())\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e)\n          )\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageState from './ImageState.js';\nimport ImageWrapper from './Image.js';\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nclass ImageCanvas extends ImageWrapper {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, loader) {\n    const state = loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = loader !== undefined ? loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\nexport default ImageCanvas;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\n\nexport default {\n\tname: 'rgb',\n\tmin: [0,0,0],\n\tmax: [255,255,255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nvar xyz = {\n\tname: 'xyz',\n\tmin: [0,0,0],\n\tchannel: ['X','Y','Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931']\n};\n\n\n/**\n * Whitepoint reference values with observer/illuminant\n *\n * http://en.wikipedia.org/wiki/Standard_illuminant\n */\nxyz.whitepoint = {\n\t//1931 2°\n\t2: {\n\t\t//incadescent\n\t\tA:[109.85, 100, 35.585],\n\t\t// B:[],\n\t\tC: [98.074, 100, 118.232],\n\t\tD50: [96.422, 100, 82.521],\n\t\tD55: [95.682, 100, 92.149],\n\t\t//daylight\n\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\tD75: [94.972, 100, 122.638],\n\t\t//flourescent\n\t\t// F1: [],\n\t\tF2: [99.187, 100, 67.395],\n\t\t// F3: [],\n\t\t// F4: [],\n\t\t// F5: [],\n\t\t// F6:[],\n\t\tF7: [95.044, 100, 108.755],\n\t\t// F8: [],\n\t\t// F9: [],\n\t\t// F10: [],\n\t\tF11: [100.966, 100, 64.370],\n\t\t// F12: [],\n\t\tE: [100,100,100]\n\t},\n\n\t//1964  10°\n\t10: {\n\t\t//incadescent\n\t\tA:[111.144, 100, 35.200],\n\t\tC: [97.285, 100, 116.145],\n\t\tD50: [96.720, 100, 81.427],\n\t\tD55: [95.799, 100, 90.926],\n\t\t//daylight\n\t\tD65: [94.811, 100, 107.304],\n\t\tD75: [94.416, 100, 120.641],\n\t\t//flourescent\n\t\tF2: [103.280, 100, 69.026],\n\t\tF7: [95.792, 100, 107.687],\n\t\tF11: [103.866, 100, 65.627],\n\t\tE: [100,100,100]\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array} xyz Array of xyz values\n *\n * @return {Array} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t//FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array} rgb RGB channels\n *\n * @return {Array} XYZ channels\n */\nrgb.xyz = function(rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\n import xyz from './xyz.js';\n\nexport default {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0,-134,-140],\n\tmax: [100,224,122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function(arg, i, o){\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0,0,0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow( (l + 16) / 116 , 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function(arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y/yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1/3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n//cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0,0,0],\n\tmax: [100,100,360],\n\n\tluv: function(luv){\n\t\tvar l = luv[0],\n\t\tc = luv[1],\n\t\th = luv[2],\n\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function(arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default lchuv;\n\nluv.lchuv = function(luv){\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u*u + v*v);\n\tvar hr = Math.atan2(v,u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l,c,h]\n};\n\nxyz.lchuv = function(arg){\n  return luv.lchuv(xyz.luv(arg));\n};\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n","/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nexport default {\n\tname: 'hsl',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function(hsl) {\n\t\tvar h = hsl[0]/360, s = hsl[1]/100, l = hsl[2]/100, t1, t2, t3, rgb, val, i=0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (;i<3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t3 * t3 < 2 ?  t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\n\n//extend rgb\nrgb.hsl = function(rgb) {\n\tvar r = rgb[0]/255,\n\t\t\tg = rgb[1]/255,\n\t\t\tb = rgb[2]/255,\n\t\t\tmin = Math.min(r, g, b),\n\t\t\tmax = Math.max(r, g, b),\n\t\t\tdelta = max - min,\n\t\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g)/ delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n","/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n","/**\n * @module ol/color\n */\nimport lchuv from 'color-space/lchuv.js';\nimport parseRgba from 'color-rgba';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('Failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('Failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number'\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`'\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`'\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.'\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {}\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    this.declutterLayers_ = [];\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const declutterLayers = this.declutterLayers_;\n    declutterLayers.length = 0;\n\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    this.flushDeclutterItems(frameState);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {\n    const layers = this.declutterLayers_;\n    for (let i = layers.length - 1; i >= 0; --i) {\n      layers[i].renderDeclutter(frameState);\n    }\n    layers.length = 0;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`'\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue'\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * This method is meant to be called in a layer's `prerender` listener. It causes all collected\n   * declutter items to be decluttered and rendered on the map immediately. This is useful for\n   * layers that need to appear entirely above the decluttered items of layers lower in the layer\n   * stack.\n   * @api\n   */\n  flushDeclutterItems() {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return;\n    }\n    this.renderer_.flushDeclutterItems(frameState);\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`'\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`'\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`'\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already'\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Executor groups for decluttering, by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.declutterExecutorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      const context = this.context_[key];\n      releaseCanvas(context);\n      canvasPool.push(context.canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json') {\n        source = JSON.parse(xhr.responseText);\n      } else if (type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {Function} [errback] Callback on error.\n * @param {string} [callbackParam] Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, errback, callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src =\n    url +\n    (url.includes('?') ? '&' : '?') +\n    (callbackParam || 'callback') +\n    '=' +\n    key;\n  const timer = setTimeout(function () {\n    cleanup();\n    if (errback) {\n      errback();\n    }\n  }, 10000);\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.head.appendChild(script);\n}\n\nexport class ResponseError extends Error {\n  /**\n   * @param {XMLHttpRequest} response The XHR object.\n   */\n  constructor(response) {\n    const message = 'Unexpected response status: ' + response.status;\n    super(message);\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ResponseError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.response = response;\n  }\n}\n\nexport class ClientError extends Error {\n  /**\n   * @param {XMLHttpRequest} client The XHR object.\n   */\n  constructor(client) {\n    super('Failed to issue request');\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ClientError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.client = client;\n  }\n}\n\n/**\n * @param {string} url The URL.\n * @return {Promise<Object>} A promise that resolves to the JSON response.\n */\nexport function getJSON(url) {\n  return new Promise(function (resolve, reject) {\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The load event.\n     */\n    function onLoad(event) {\n      const client = event.target;\n      // status will be 0 for file:// urls\n      if (!client.status || (client.status >= 200 && client.status < 300)) {\n        let data;\n        try {\n          data = JSON.parse(client.responseText);\n        } catch (err) {\n          const message = 'Error parsing response text as JSON: ' + err.message;\n          reject(new Error(message));\n          return;\n        }\n        resolve(data);\n        return;\n      }\n\n      reject(new ResponseError(client));\n    }\n\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The error event.\n     */\n    function onError(event) {\n      reject(new ClientError(event.target));\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener('load', onLoad);\n    client.addEventListener('error', onError);\n    client.open('GET', url);\n    client.setRequestHeader('Accept', 'application/json');\n    client.send();\n  });\n}\n\n/**\n * @param {string} base The base URL.\n * @param {string} url The potentially relative URL.\n * @return {string} The full URL.\n */\nexport function resolveUrl(base, url) {\n  if (url.includes('://')) {\n    return url;\n  }\n  return new URL(url, base).href;\n}\n\nlet originalXHR;\nexport function overrideXHR(xhr) {\n  if (typeof XMLHttpRequest !== 'undefined') {\n    originalXHR = XMLHttpRequest;\n  }\n  global.XMLHttpRequest = xhr;\n}\n\nexport function restoreXHR() {\n  global.XMLHttpRequest = originalXHR;\n}\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/render\n */\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply as multiplyTransform,\n  scale as scaleTransform,\n} from './transform.js';\nimport {getSquaredTolerance} from './renderer/vector.js';\nimport {getTransformFromProjections, getUserProjection} from './proj.js';\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render.js';\n * import Fill from 'ol/style/Fill.js';\n * import Polygon from 'ol/geom/Polygon.js';\n *\n * const canvas = document.createElement('canvas');\n * const render = toContext(\n *     canvas.getContext('2d'),\n *     {size: [100, 100]}\n * );\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]])\n * );\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions} [options] Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, options) {\n  const canvas = context.canvas;\n  options = options ? options : {};\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  const size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  const extent = [0, 0, canvas.width, canvas.height];\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @return {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n  if (!(event.context instanceof CanvasRenderingContext2D)) {\n    throw new Error('Only works for render events from Canvas 2D layers');\n  }\n\n  // canvas may be at a different pixel ratio than frameState.pixelRatio\n  const a = event.inversePixelTransform[0];\n  const b = event.inversePixelTransform[1];\n  const canvasPixelRatio = Math.sqrt(a * a + b * b);\n  const frameState = event.frameState;\n  const transform = multiplyTransform(\n    event.inversePixelTransform.slice(),\n    frameState.coordinateToPixelTransform\n  );\n  const squaredTolerance = getSquaredTolerance(\n    frameState.viewState.resolution,\n    canvasPixelRatio\n  );\n  let userTransform;\n  const userProjection = getUserProjection();\n  if (userProjection) {\n    userTransform = getTransformFromProjections(\n      userProjection,\n      frameState.viewState.projection\n    );\n  }\n\n  return new CanvasImmediateRenderer(\n    event.context,\n    canvasPixelRatio,\n    frameState.extent,\n    transform,\n    frameState.viewState.rotation,\n    squaredTolerance,\n    userTransform\n  );\n}\n\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @return {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n  return applyTransform(event.inversePixelTransform, pixel.slice(0));\n}\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    const canvasWidthInUnits = getWidth(sourceDataExtent);\n    const canvasHeightInUnits = getHeight(sourceDataExtent);\n    stitchContext = createCanvasContext2D(\n      Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n      Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n      canvasPool\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n\n    const stitchScale = pixelRatio / sourceResolution;\n\n    sources.forEach(function (src, i, arr) {\n      const xPos = src.extent[0] - sourceDataExtent[0];\n      const yPos = -(src.extent[3] - sourceDataExtent[3]);\n      const srcWidth = getWidth(src.extent);\n      const srcHeight = getHeight(src.extent);\n\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          xPos * stitchScale,\n          yPos * stitchScale,\n          srcWidth * stitchScale,\n          srcHeight * stitchScale\n        );\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(\n        sourceResolution / pixelRatio,\n        -sourceResolution / pixelRatio\n      );\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/resolution\n */\n\n/**\n * @typedef {number|Array<number>} ResolutionLike\n */\n\n/**\n * @param {ResolutionLike} resolution Resolution.\n * @return {number} Resolution.\n */\nexport function fromResolutionLike(resolution) {\n  if (Array.isArray(resolution)) {\n    return Math.min(...resolution);\n  }\n  return resolution;\n}\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true\n      ),\n      '`resolutions` must be sorted in descending order'\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal'\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal'\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport TileGrid from './TileGrid.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile~TileSource} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes,\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent} [extent] An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>} [matrixLimits] An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(\n  matrixSet,\n  extent,\n  matrixLimits\n) {\n  /** @type {!Array<number>} */\n  const resolutions = [];\n  /** @type {!Array<string>} */\n  const matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  const origins = [];\n  /** @type {!Array<number|import(\"../size.js\").Size>} */\n  const tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const sizes = [];\n\n  matrixLimits = matrixLimits !== undefined ? matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function (a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function (elt) {\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = matrixLimits.find(function (elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (!elt[identifierPropName].includes(':')) {\n          return (\n            matrixSet[identifierPropName] + ':' + elt[identifierPropName] ===\n            elt_ml[matrixIdsPropName]\n          );\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution =\n        (elt[scaleDenominatorPropName] * 0.28e-3) / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([\n          elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0],\n        ]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(\n        tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight]\n      );\n      sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes,\n  });\n}\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.'\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          if (!range) {\n            throw new Error(\n              'The {-y} placeholder requires a tile grid with extent'\n            );\n          }\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/BingMaps\n */\n\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {createOrUpdate} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\n\n/**\n * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  const z = tileCoord[0];\n  const digits = new Array(z);\n  let mask = 1 << (z - 1);\n  let i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nconst TOS_ATTRIBUTION =\n  '<a class=\"ol-attribution-bing-tos\" ' +\n  'href=\"https://www.microsoft.com/maps/product/terms.html\" target=\"_blank\">' +\n  'Terms of Use</a>';\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at https://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n * @property {boolean} [placeholderTiles] Whether to show BingMaps placeholder tiles when zoomed past the maximum level provided in an area. When `false`, requests beyond\n * the maximum zoom level will return no tile. When `true`, the placeholder tile will be returned. When not set, the default behaviour of the imagery set takes place,\n * which is unique for each imagery set in BingMaps.\n */\n\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources Resources.\n */\n\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nclass BingMaps extends TileImage {\n  /**\n   * @param {Options} options Bing Maps options.\n   */\n  constructor(options) {\n    const hidpi = options.hidpi !== undefined ? options.hidpi : false;\n\n    super({\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: options.interpolate,\n      opaque: true,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: hidpi ? 2 : 1,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = hidpi;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.apiKey_ = options.key;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.imagerySet_ = options.imagerySet;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.placeholderTiles_ = options.placeholderTiles;\n\n    const url =\n      'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n      this.imagerySet_ +\n      '?uriScheme=https&include=ImageryProviders&key=' +\n      this.apiKey_ +\n      '&c=' +\n      this.culture_;\n\n    fetch(url)\n      .then((response) => response.json())\n      .then((json) => this.handleImageryMetadataResponse(json));\n  }\n\n  /**\n   * Get the api key used for this source.\n   *\n   * @return {string} The api key.\n   * @api\n   */\n  getApiKey() {\n    return this.apiKey_;\n  }\n\n  /**\n   * Get the imagery set associated with this source.\n   *\n   * @return {string} The imagery set.\n   * @api\n   */\n  getImagerySet() {\n    return this.imagerySet_;\n  }\n\n  /**\n   * @param {BingMapsImageryMetadataResponse} response Response.\n   */\n  handleImageryMetadataResponse(response) {\n    if (\n      response.statusCode != 200 ||\n      response.statusDescription != 'OK' ||\n      response.authenticationResultCode != 'ValidCredentials' ||\n      response.resourceSets.length != 1 ||\n      response.resourceSets[0].resources.length != 1\n    ) {\n      this.setState('error');\n      return;\n    }\n\n    const resource = response.resourceSets[0].resources[0];\n    const maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n\n    const sourceProjection = this.getProjection();\n    const extent = extentFromProjection(sourceProjection);\n    const scale = this.hidpi_ ? 2 : 1;\n    const tileSize =\n      resource.imageWidth == resource.imageHeight\n        ? resource.imageWidth / scale\n        : [resource.imageWidth / scale, resource.imageHeight / scale];\n\n    const tileGrid = createXYZ({\n      extent: extent,\n      minZoom: resource.zoomMin,\n      maxZoom: maxZoom,\n      tileSize: tileSize,\n    });\n    this.tileGrid = tileGrid;\n\n    const culture = this.culture_;\n    const hidpi = this.hidpi_;\n    const placeholderTiles = this.placeholderTiles_;\n    this.tileUrlFunction = createFromTileUrlFunctions(\n      resource.imageUrlSubdomains.map(function (subdomain) {\n        /** @type {import('../tilecoord.js').TileCoord} */\n        const quadKeyTileCoord = [0, 0, 0];\n        const imageUrl = resource.imageUrl\n          .replace('{subdomain}', subdomain)\n          .replace('{culture}', culture);\n        return (\n          /**\n           * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n           * @param {number} pixelRatio Pixel ratio.\n           * @param {import(\"../proj/Projection.js\").default} projection Projection.\n           * @return {string|undefined} Tile URL.\n           */\n          function (tileCoord, pixelRatio, projection) {\n            if (!tileCoord) {\n              return undefined;\n            }\n            createOrUpdate(\n              tileCoord[0],\n              tileCoord[1],\n              tileCoord[2],\n              quadKeyTileCoord\n            );\n            const url = new URL(\n              imageUrl.replace('{quadkey}', quadKey(quadKeyTileCoord))\n            );\n            const params = url.searchParams;\n            if (hidpi) {\n              params.set('dpi', 'd1');\n              params.set('device', 'mobile');\n            }\n            if (placeholderTiles === true) {\n              params.delete('n');\n            } else if (placeholderTiles === false) {\n              params.set('n', 'z');\n            }\n            return url.toString();\n          }\n        );\n      })\n    );\n\n    if (resource.imageryProviders) {\n      const transform = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        this.getProjection()\n      );\n\n      this.setAttributions((frameState) => {\n        const attributions = [];\n        const viewState = frameState.viewState;\n        const tileGrid = this.getTileGrid();\n        const z = tileGrid.getZForResolution(\n          viewState.resolution,\n          this.zDirection\n        );\n        const tileCoord = tileGrid.getTileCoordForCoordAndZ(\n          viewState.center,\n          z\n        );\n        const zoom = tileCoord[0];\n        resource.imageryProviders.map(function (imageryProvider) {\n          let intersecting = false;\n          const coverageAreas = imageryProvider.coverageAreas;\n          for (let i = 0, ii = coverageAreas.length; i < ii; ++i) {\n            const coverageArea = coverageAreas[i];\n            if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\n              const bbox = coverageArea.bbox;\n              const epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n              const extent = applyTransform(epsg4326Extent, transform);\n              if (intersects(extent, frameState.extent)) {\n                intersecting = true;\n                break;\n              }\n            }\n          }\n          if (intersecting) {\n            attributions.push(imageryProvider.attribution);\n          }\n        });\n\n        attributions.push(TOS_ATTRIBUTION);\n        return attributions;\n      });\n    }\n\n    this.setState('ready');\n  }\n}\n\nexport default BingMaps;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/geom/Circle\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `layout` and no\n   *     `radius` are also accepted.\n   * @param {number} [radius] Radius in units of the projection.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(center, radius, layout) {\n    super();\n    if (layout !== undefined && radius === undefined) {\n      this.setFlatCoordinates(layout, center);\n    } else {\n      radius = radius ? radius : 0;\n      this.setCenterAndRadius(center, radius, layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Circle';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, layout) {\n    this.setLayout(layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  getCoordinates() {\n    return null;\n  }\n\n  setCoordinates(coordinates, layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center)\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [geometries] Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries ? geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.ends_ = ends;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<number>} */ (this.ends_),\n        2,\n        flatCenter,\n        0\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds())\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = /** @type {Array<number>} */ (renderFeature.getEnds());\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport RenderFeature from '../render/Feature.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureClass=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureClass} [feature] Feature.\n   * @param {Array<FeatureClass>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureClass|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureClass>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureClass=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureClass>|Collection<FeatureClass>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureClass=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureClass>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureClass>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureClass>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, FeatureClass|Array<RenderFeature>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureClass>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureClass>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureClass>} */\n    let collection;\n    /** @type {Array<FeatureClass>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureClass} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureClass} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureClass} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureClass} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else {\n          if (!Array.isArray(indexedFeature)) {\n            this.idIndex_[id] = [indexedFeature, feature];\n          } else {\n            indexedFeature.push(feature);\n          }\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source'\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureClass>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureClass>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureClass>} */\n    const newFeatures = [];\n    /** @type Array<FeatureClass> */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureClass>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureClass>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureClass>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureClass>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureClass>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureClass): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureClass): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureClass): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureClass): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureClass} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureClass>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureClass>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureClass>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureClass):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureClass} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureClass} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClass|Array<RenderFeature>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureClass|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureClass} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureClass} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {FeatureClass} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureClass} feature Feature.\n   * @return {FeatureClass|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureClass} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      const indexedFeature = this.idIndex_[id];\n      if (\n        feature instanceof RenderFeature &&\n        Array.isArray(indexedFeature) &&\n        indexedFeature.includes(feature)\n      ) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n      } else if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/source/Cluster\n */\n\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from './Vector.js';\nimport {add as addCoordinate, scale as scaleCoordinate} from '../coordinate.js';\nimport {assert} from '../asserts.js';\nimport {\n  buffer,\n  createEmpty,\n  createOrUpdateFromCoordinate,\n  getCenter,\n} from '../extent.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Distance in pixels within which features will\n * be clustered together.\n * @property {number} [minDistance=0] Minimum distance in pixels between clusters.\n * Will be capped at the configured distance.\n * By default no minimum distance is guaranteed. This config can be used to avoid\n * overlapping icons. As a tradoff, the cluster feature's position will no longer be\n * the center of all its features.\n * @property {function(Feature):Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Point~Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underlying source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {function(Point, Array<Feature>):Feature} [createCluster]\n * Function that takes the cluster's center {@link module:ol/geom/Point~Point} and an array\n * of {@link module:ol/Feature~Feature} included in this cluster. Must return a\n * {@link module:ol/Feature~Feature} that will be used to render. Default implementation is:\n * ```js\n * function(point, features) {\n *   return new Feature({\n *     geometry: point,\n *     features: features\n *   });\n * }\n * ```\n * @property {VectorSource} [source=null] Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n *\n * If the instance is disposed without also disposing the underlying\n * source `setSource(null)` has to be called to remove the listener reference\n * from the wrapped source.\n * @api\n */\nclass Cluster extends VectorSource {\n  /**\n   * @param {Options} options Cluster options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.resolution = undefined;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.distance = options.distance !== undefined ? options.distance : 20;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.minDistance = options.minDistance || 0;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.interpolationRatio = 0;\n\n    /**\n     * @type {Array<Feature>}\n     * @protected\n     */\n    this.features = [];\n\n    /**\n     * @param {Feature} feature Feature.\n     * @return {Point} Cluster calculation point.\n     * @protected\n     */\n    this.geometryFunction =\n      options.geometryFunction ||\n      function (feature) {\n        const geometry = /** @type {Point} */ (feature.getGeometry());\n        assert(\n          !geometry || geometry.getType() === 'Point',\n          'The default `geometryFunction` can only handle `Point` or null geometries'\n        );\n        return geometry;\n      };\n\n    /**\n     * @type {function(Point, Array<Feature>):Feature}\n     * @private\n     */\n    this.createCustomCluster_ = options.createCluster;\n\n    /**\n     * @type {VectorSource|null}\n     * @protected\n     */\n    this.source = null;\n\n    /**\n     * @private\n     */\n    this.boundRefresh_ = this.refresh.bind(this);\n\n    this.updateDistance(this.distance, this.minDistance);\n    this.setSource(options.source || null);\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/VectorEventType~VectorEventType#removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    this.features.length = 0;\n    super.clear(fast);\n  }\n\n  /**\n   * Get the distance in pixels between clusters.\n   * @return {number} Distance.\n   * @api\n   */\n  getDistance() {\n    return this.distance;\n  }\n\n  /**\n   * Get a reference to the wrapped source.\n   * @return {VectorSource|null} Source.\n   * @api\n   */\n  getSource() {\n    return this.source;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    this.source.loadFeatures(extent, resolution, projection);\n    if (resolution !== this.resolution) {\n      this.resolution = resolution;\n      this.refresh();\n    }\n  }\n\n  /**\n   * Set the distance within which features will be clusterd together.\n   * @param {number} distance The distance in pixels.\n   * @api\n   */\n  setDistance(distance) {\n    this.updateDistance(distance, this.minDistance);\n  }\n\n  /**\n   * Set the minimum distance between clusters. Will be capped at the\n   * configured distance.\n   * @param {number} minDistance The minimum distance in pixels.\n   * @api\n   */\n  setMinDistance(minDistance) {\n    this.updateDistance(this.distance, minDistance);\n  }\n\n  /**\n   * The configured minimum distance between clusters.\n   * @return {number} The minimum distance in pixels.\n   * @api\n   */\n  getMinDistance() {\n    return this.minDistance;\n  }\n\n  /**\n   * Replace the wrapped source.\n   * @param {VectorSource|null} source The new source for this instance.\n   * @api\n   */\n  setSource(source) {\n    if (this.source) {\n      this.source.removeEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.source = source;\n    if (source) {\n      source.addEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.refresh();\n  }\n\n  /**\n   * Handle the source changing.\n   */\n  refresh() {\n    this.clear();\n    this.cluster();\n    this.addFeatures(this.features);\n  }\n\n  /**\n   * Update the distances and refresh the source if necessary.\n   * @param {number} distance The new distance.\n   * @param {number} minDistance The new minimum distance.\n   */\n  updateDistance(distance, minDistance) {\n    const ratio =\n      distance === 0 ? 0 : Math.min(minDistance, distance) / distance;\n    const changed =\n      distance !== this.distance || this.interpolationRatio !== ratio;\n    this.distance = distance;\n    this.minDistance = minDistance;\n    this.interpolationRatio = ratio;\n    if (changed) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  cluster() {\n    if (this.resolution === undefined || !this.source) {\n      return;\n    }\n    const extent = createEmpty();\n    const mapDistance = this.distance * this.resolution;\n    const features = this.source.getFeatures();\n\n    /** @type {Object<string, true>} */\n    const clustered = {};\n\n    for (let i = 0, ii = features.length; i < ii; i++) {\n      const feature = features[i];\n      if (!(getUid(feature) in clustered)) {\n        const geometry = this.geometryFunction(feature);\n        if (geometry) {\n          const coordinates = geometry.getCoordinates();\n          createOrUpdateFromCoordinate(coordinates, extent);\n          buffer(extent, mapDistance, extent);\n\n          const neighbors = this.source\n            .getFeaturesInExtent(extent)\n            .filter(function (neighbor) {\n              const uid = getUid(neighbor);\n              if (uid in clustered) {\n                return false;\n              }\n              clustered[uid] = true;\n              return true;\n            });\n          this.features.push(this.createCluster(neighbors, extent));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Feature>} features Features\n   * @param {import(\"../extent.js\").Extent} extent The searched extent for these features.\n   * @return {Feature} The cluster feature.\n   * @protected\n   */\n  createCluster(features, extent) {\n    const centroid = [0, 0];\n    for (let i = features.length - 1; i >= 0; --i) {\n      const geometry = this.geometryFunction(features[i]);\n      if (geometry) {\n        addCoordinate(centroid, geometry.getCoordinates());\n      } else {\n        features.splice(i, 1);\n      }\n    }\n    scaleCoordinate(centroid, 1 / features.length);\n    const searchCenter = getCenter(extent);\n    const ratio = this.interpolationRatio;\n    const geometry = new Point([\n      centroid[0] * (1 - ratio) + searchCenter[0] * ratio,\n      centroid[1] * (1 - ratio) + searchCenter[1] * ratio,\n    ]);\n    if (this.createCustomCluster_) {\n      return this.createCustomCluster_(geometry, features);\n    }\n    return new Feature({\n      geometry,\n      features,\n    });\n  }\n}\n\nexport default Cluster;\n","/**\n * @module ol/reproj/DataTile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport DataTile, {asArrayLike, asImageLike, toArray} from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D, releaseCanvas} from '../dom.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../DataTile.js\").default} TileGetter\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n * @property {import(\"../proj/Projection.js\").default} targetProj Target projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n * @property {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n * @property {import(\"../tilecoord.js\").TileCoord} [wrappedTileCoord] Coordinate of the tile wrapped in X.\n * @property {number} pixelRatio Pixel ratio.\n * @property {number} gutter Gutter of the source tiles.\n * @property {TileGetter} getTileFunction Function returning source tiles (z, x, y, pixelRatio).\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {number} [errorThreshold] Acceptable reprojection error (in px).\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected data tile.\n * See {@link module:ol/source/DataTile~DataTileSource}.\n *\n */\nclass ReprojDataTile extends DataTile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    super({\n      tileCoord: options.tileCoord,\n      loader: () => Promise.resolve(new Uint8Array(4)),\n      interpolate: options.interpolate,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter;\n\n    /**\n     * @type {import(\"../DataTile.js\").Data}\n     * @private\n     */\n    this.reprojData_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.reprojError_ = null;\n\n    /**\n     * @type {import('../size.js').Size}\n     * @private\n     */\n    this.reprojSize_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = options.sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = options.targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = options.wrappedTileCoord || options.tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<DataTile>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProj = options.sourceProj;\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = this.targetTileGrid_.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const targetProj = options.targetProj;\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      options.errorThreshold !== undefined\n        ? options.errorThreshold\n        : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = this.sourceTileGrid_.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = this.sourceTileGrid_.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n      const getTile = options.getTileFunction;\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTile(this.sourceZ_, srcX, srcY, this.pixelRatio_);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('../size.js').Size} Tile size.\n   */\n  getSize() {\n    return this.reprojSize_;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {import(\"../DataTile.js\").Data} Tile data.\n   */\n  getData() {\n    return this.reprojData_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   */\n  getError() {\n    return this.reprojError_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const dataSources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const size = tile.getSize();\n      const gutter = this.gutter_;\n      /**\n       * @type {import(\"../DataTile.js\").ArrayLike}\n       */\n      let tileData;\n      const arrayData = asArrayLike(tile.getData());\n      if (arrayData) {\n        tileData = arrayData;\n      } else {\n        tileData = toArray(asImageLike(tile.getData()));\n      }\n      const pixelSize = [size[0] + 2 * gutter, size[1] + 2 * gutter];\n      const isFloat = tileData instanceof Float32Array;\n      const pixelCount = pixelSize[0] * pixelSize[1];\n      const DataType = isFloat ? Float32Array : Uint8Array;\n      const tileDataR = new DataType(tileData.buffer);\n      const bytesPerElement = DataType.BYTES_PER_ELEMENT;\n      const bytesPerPixel = (bytesPerElement * tileDataR.length) / pixelCount;\n      const bytesPerRow = tileDataR.byteLength / pixelSize[1];\n      const bandCount = Math.floor(\n        bytesPerRow / bytesPerElement / pixelSize[0]\n      );\n      const packedLength = pixelCount * bandCount;\n      let packedData = tileDataR;\n      if (tileDataR.length !== packedLength) {\n        packedData = new DataType(packedLength);\n        let dataIndex = 0;\n        let rowOffset = 0;\n        const colCount = pixelSize[0] * bandCount;\n        for (let rowIndex = 0; rowIndex < pixelSize[1]; ++rowIndex) {\n          for (let colIndex = 0; colIndex < colCount; ++colIndex) {\n            packedData[dataIndex++] = tileDataR[rowOffset + colIndex];\n          }\n          rowOffset += bytesPerRow / bytesPerElement;\n        }\n      }\n      dataSources.push({\n        extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n        data: new Uint8Array(packedData.buffer),\n        dataType: DataType,\n        bytesPerPixel: bytesPerPixel,\n        pixelSize: pixelSize,\n      });\n    });\n    this.sourceTiles_.length = 0;\n\n    if (dataSources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const targetWidth = typeof size === 'number' ? size : size[0];\n      const targetHeight = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      let dataR, dataU;\n\n      const bytesPerPixel = dataSources[0].bytesPerPixel;\n\n      const reprojs = Math.ceil(bytesPerPixel / 3);\n      for (let reproj = reprojs - 1; reproj >= 0; --reproj) {\n        const sources = [];\n        for (let i = 0, len = dataSources.length; i < len; ++i) {\n          const dataSource = dataSources[i];\n          const buffer = dataSource.data;\n          const pixelSize = dataSource.pixelSize;\n          const width = pixelSize[0];\n          const height = pixelSize[1];\n          const context = createCanvasContext2D(width, height, canvasPool);\n          const imageData = context.createImageData(width, height);\n          const data = imageData.data;\n          let offset = reproj * 3;\n          for (let j = 0, len = data.length; j < len; j += 4) {\n            data[j] = buffer[offset];\n            data[j + 1] = buffer[offset + 1];\n            data[j + 2] = buffer[offset + 2];\n            data[j + 3] = 255;\n            offset += bytesPerPixel;\n          }\n          context.putImageData(imageData, 0, 0);\n          sources.push({\n            extent: dataSource.extent,\n            image: context.canvas,\n          });\n        }\n\n        const canvas = renderReprojected(\n          targetWidth,\n          targetHeight,\n          this.pixelRatio_,\n          sourceResolution,\n          this.sourceTileGrid_.getExtent(),\n          targetResolution,\n          targetExtent,\n          this.triangulation_,\n          sources,\n          this.gutter_,\n          false,\n          false\n        );\n\n        for (let i = 0, len = sources.length; i < len; ++i) {\n          const canvas = sources[i].image;\n          const context = canvas.getContext('2d');\n          releaseCanvas(context);\n          canvasPool.push(context.canvas);\n        }\n\n        const context = canvas.getContext('2d');\n        const imageData = context.getImageData(\n          0,\n          0,\n          canvas.width,\n          canvas.height\n        );\n\n        releaseCanvas(context);\n        canvasPool.push(canvas);\n\n        if (!dataR) {\n          dataU = new Uint8Array(\n            bytesPerPixel * imageData.width * imageData.height\n          );\n          dataR = new dataSources[0].dataType(dataU.buffer);\n        }\n\n        const data = imageData.data;\n        let offset = reproj * 3;\n        for (let i = 0, len = data.length; i < len; i += 4) {\n          if (data[i + 3] === 255) {\n            dataU[offset] = data[i];\n            dataU[offset + 1] = data[i + 1];\n            dataU[offset + 2] = data[i + 2];\n          } else {\n            dataU[offset] = 0;\n            dataU[offset + 1] = 0;\n            dataU[offset + 2] = 0;\n          }\n          offset += bytesPerPixel;\n        }\n      }\n\n      this.reprojData_ = dataR;\n      this.reprojSize_ = [\n        Math.round(targetWidth * this.pixelRatio_),\n        Math.round(targetHeight * this.pixelRatio_),\n      ];\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    let leftToLoad = 0;\n\n    this.sourcesListenerKeys_ = [];\n    this.sourceTiles_.forEach((tile) => {\n      const state = tile.getState();\n      if (state !== TileState.IDLE && state !== TileState.LOADING) {\n        return;\n      }\n      leftToLoad++;\n\n      const sourceListenKey = listen(\n        tile,\n        EventType.CHANGE,\n        function () {\n          const state = tile.getState();\n          if (\n            state == TileState.LOADED ||\n            state == TileState.ERROR ||\n            state == TileState.EMPTY\n          ) {\n            unlistenByKey(sourceListenKey);\n            leftToLoad--;\n            if (leftToLoad === 0) {\n              this.unlistenSources_();\n              this.reproject_();\n            }\n          }\n        },\n        this\n      );\n      this.sourcesListenerKeys_.push(sourceListenKey);\n    });\n\n    if (leftToLoad === 0) {\n      setTimeout(this.reproject_.bind(this), 0);\n    } else {\n      this.sourceTiles_.forEach(function (tile) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojDataTile;\n","/**\n * @module ol/source/DataTile\n */\nimport DataTile from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport ReprojDataTile from '../reproj/DataTile.js';\nimport TileCache from '../TileCache.js';\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {\n  createXYZ,\n  extentFromProjection,\n  getForProjection as getTileGridForProjection,\n} from '../tilegrid.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\nimport {toPromise} from '../functions.js';\nimport {toSize} from '../size.js';\n\n/**\n * Data tile loading function.  The function is called with z, x, and y tile coordinates and\n * returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * @typedef {function(number, number, number) : (import(\"../DataTile.js\").Data|Promise<import(\"../DataTile.js\").Data>)} Loader\n */\n\n/**\n * @typedef {Object} Options\n * @property {Loader} [loader] Data loader.  Called with z, x, and y tile coordinates.\n * Returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The pixel width and height of the source tiles.\n * This may be different than the rendered pixel size if a `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around data tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported data should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Tile projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"./Source.js\").State} [state] The source state.\n * @property {boolean} [wrapX=false] Render tiles beyond the antimeridian.\n * @property {number} [transition] Transition time when fading in new tiles (in milliseconds).\n * @property {number} [bandCount=4] Number of bands represented in the data.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * A source for typed array data tiles.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass DataTileSource extends TileSource {\n  /**\n   * @param {Options} options DataTile source options.\n   */\n  constructor(options) {\n    const projection =\n      options.projection === undefined ? 'EPSG:3857' : options.projection;\n\n    let tileGrid = options.tileGrid;\n    if (tileGrid === undefined && projection) {\n      tileGrid = createXYZ({\n        extent: extentFromProjection(projection),\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize,\n      });\n    }\n\n    super({\n      cacheSize: 0.1, // don't cache on the source\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: projection,\n      tileGrid: tileGrid,\n      opaque: options.opaque,\n      state: options.state,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {import('../size.js').Size|null}\n     */\n    this.tileSize_ = options.tileSize ? toSize(options.tileSize) : null;\n\n    /**\n     * @private\n     * @type {Array<import('../size.js').Size>|null}\n     */\n    this.tileSizes_ = null;\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n    /**\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    this.handleTileChange_ = this.handleTileChange_.bind(this);\n\n    /**\n     * @type {number}\n     */\n    this.bandCount = options.bandCount === undefined ? 4 : options.bandCount; // assume RGBA if undefined\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../TileCache.js\").default>}\n     */\n    this.tileCacheForProjection_ = {};\n  }\n\n  /**\n   * Set the source tile sizes.  The length of the array is expected to match the number of\n   * levels in the tile grid.\n   * @protected\n   * @param {Array<import('../size.js').Size>} tileSizes An array of tile sizes.\n   */\n  setTileSizes(tileSizes) {\n    this.tileSizes_ = tileSizes;\n  }\n\n  /**\n   * Get the source tile size at the given zoom level.  This may be different than the rendered tile\n   * size.\n   * @protected\n   * @param {number} z Tile zoom level.\n   * @return {import('../size.js').Size} The source tile size.\n   */\n  getTileSize(z) {\n    if (this.tileSizes_) {\n      return this.tileSizes_[z];\n    }\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    const tileGrid = this.getTileGrid();\n    return tileGrid ? toSize(tileGrid.getTileSize(z)) : [256, 256];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.gutter_;\n    }\n\n    return 0;\n  }\n\n  /**\n   * @param {Loader} loader The data loader.\n   * @protected\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} targetProj The output projection.\n   * @param {import(\"../proj/Projection.js\").default} sourceProj The input projection.\n   * @return {!DataTile} Tile.\n   */\n  getReprojTile_(z, x, y, targetProj, sourceProj) {\n    const cache = this.getTileCacheForProjection(targetProj);\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (cache.containsKey(tileCoordKey)) {\n      const tile = cache.get(tileCoordKey);\n      if (tile && tile.key == this.getKey()) {\n        return tile;\n      }\n    }\n\n    const tileGrid = this.getTileGrid();\n    const reprojTilePixelRatio = Math.max.apply(\n      null,\n      tileGrid.getResolutions().map((r, z) => {\n        const tileSize = toSize(tileGrid.getTileSize(z));\n        const textureSize = this.getTileSize(z);\n        return Math.max(\n          textureSize[0] / tileSize[0],\n          textureSize[1] / tileSize[1]\n        );\n      })\n    );\n\n    const sourceTileGrid = this.getTileGridForProjection(sourceProj);\n    const targetTileGrid = this.getTileGridForProjection(targetProj);\n    const tileCoord = [z, x, y];\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      targetProj\n    );\n\n    const options = Object.assign(\n      {\n        sourceProj,\n        sourceTileGrid,\n        targetProj,\n        targetTileGrid,\n        tileCoord,\n        wrappedTileCoord,\n        pixelRatio: reprojTilePixelRatio,\n        gutter: this.getGutterForProjection(sourceProj),\n        getTileFunction: (z, x, y, pixelRatio) =>\n          this.getTile(z, x, y, pixelRatio, sourceProj),\n      },\n      this.tileOptions\n    );\n    const newTile = new ReprojDataTile(options);\n    newTile.key = this.getKey();\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!DataTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      sourceProjection &&\n      projection &&\n      !equivalent(sourceProjection, projection)\n    ) {\n      return this.getReprojTile_(z, x, y, projection, sourceProjection);\n    }\n\n    const size = this.getTileSize(z);\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return this.tileCache.get(tileCoordKey);\n    }\n\n    const sourceLoader = this.loader_;\n\n    function loader() {\n      return toPromise(function () {\n        return sourceLoader(z, x, y);\n      });\n    }\n\n    const options = Object.assign(\n      {\n        tileCoord: [z, x, y],\n        loader: loader,\n        size: size,\n      },\n      this.tileOptions\n    );\n\n    const tile = new DataTile(options);\n    tile.key = this.getKey();\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange_);\n\n    this.tileCache.set(tileCoordKey, tile);\n    return tile;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   */\n  handleTileChange_(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection_)) {\n      this.tileGridForProjection_[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection_[projKey];\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection_)) {\n        this.tileGridForProjection_[projKey] = tilegrid;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection_)) {\n      this.tileCacheForProjection_[projKey] = new TileCache(0.1); // don't cache\n    }\n    return this.tileCacheForProjection_[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection_) {\n      const tileCache = this.tileCacheForProjection_[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection_) {\n      this.tileCacheForProjection_[id].clear();\n    }\n  }\n}\n\nexport default DataTileSource;\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport {\n  getCenter,\n  getHeight,\n  getIntersection,\n  getWidth,\n  isEmpty,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../Image.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageWrapper {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    interpolate\n  ) {\n    let maxSourceExtent = sourceProj.getExtent();\n    if (maxSourceExtent && sourceProj.canWrapX()) {\n      maxSourceExtent = maxSourceExtent.slice();\n      maxSourceExtent[0] = -Infinity;\n      maxSourceExtent[2] = Infinity;\n    }\n    let maxTargetExtent = targetProj.getExtent();\n    if (maxTargetExtent && targetProj.canWrapX()) {\n      maxTargetExtent = maxTargetExtent.slice();\n      maxTargetExtent[0] = -Infinity;\n      maxTargetExtent[2] = Infinity;\n    }\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = isEmpty(sourceExtent)\n      ? null\n      : getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        fromResolutionLike(this.sourceImage_.getResolution()),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.interpolate_,\n        true\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          function (e) {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n          this\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_)\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nexport const DECIMALS = 4;\n","/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport {DECIMALS} from './common.js';\nimport {ceil} from '../math.js';\nimport {\n  containsExtent,\n  equals,\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport {linearFindNearest} from '../array.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../Image.js\").Loader} [loader] Loader. Can either be a custom loader, or one of the\n * loaders created with a `createLoader()` function ({@link module:ol/source/wms.createLoader wms},\n * {@link module:ol/source/arcgisRest.createLoader arcgisRest}, {@link module:ol/source/mapguide.createLoader mapguide},\n * {@link module:ol/source/static.createLoader static}).\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./Source.js\").State} [state] State.\n */\n\n/**\n * @classdesc\n * Base class for sources providing a single image.\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n    });\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").Loader}\n     */\n    this.loader = options.loader || null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image = null;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.wantedExtent_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.wantedResolution_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.static_ = options.loader ? options.loader.length === 0 : false;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.wantedProjection_ = null;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {Array<number>|null} resolutions Resolutions.\n   */\n  setResolutions(resolutions) {\n    this.resolutions_ = resolutions;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    const resolutions = this.getResolutions();\n    if (resolutions) {\n      const idx = linearFindNearest(resolutions, resolution, 0);\n      resolution = resolutions[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    }\n    if (this.reprojectedImage_) {\n      if (\n        this.reprojectedRevision_ == this.getRevision() &&\n        equivalent(this.reprojectedImage_.getProjection(), projection) &&\n        this.reprojectedImage_.getResolution() == resolution &&\n        equals(this.reprojectedImage_.getExtent(), extent)\n      ) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new ReprojImage(\n      sourceProjection,\n      projection,\n      extent,\n      resolution,\n      pixelRatio,\n      (extent, resolution, pixelRatio) =>\n        this.getImageInternal(extent, resolution, pixelRatio, sourceProjection),\n      this.getInterpolate()\n    );\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.loader) {\n      const requestExtent = getRequestExtent(extent, resolution, pixelRatio, 1);\n      const requestResolution = this.findNearestResolution(resolution);\n      if (\n        this.image &&\n        (this.static_ ||\n          (this.wantedProjection_ === projection &&\n            ((this.wantedExtent_ &&\n              containsExtent(this.wantedExtent_, requestExtent)) ||\n              containsExtent(this.image.getExtent(), requestExtent)) &&\n            ((this.wantedResolution_ &&\n              fromResolutionLike(this.wantedResolution_) ===\n                requestResolution) ||\n              fromResolutionLike(this.image.getResolution()) ===\n                requestResolution)))\n      ) {\n        return this.image;\n      }\n      this.wantedProjection_ = projection;\n      this.wantedExtent_ = requestExtent;\n      this.wantedResolution_ = requestResolution;\n      this.image = new ImageWrapper(\n        requestExtent,\n        requestResolution,\n        pixelRatio,\n        this.loader\n      );\n      this.image.addEventListener(\n        EventType.CHANGE,\n        this.handleImageChange.bind(this)\n      );\n    }\n    return this.image;\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    let type;\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        type = ImageSourceEventType.IMAGELOADSTART;\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADEND;\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADERROR;\n        break;\n      default:\n        return;\n    }\n    if (this.hasListener(type)) {\n      this.dispatchEvent(new ImageSourceEvent(type, image));\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\n/**\n * Adjusts the extent so it aligns with pixel boundaries.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} resolution Reolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} ratio Ratio between request size and view size.\n * @return {import(\"../extent.js\").Extent} Request extent.\n */\nexport function getRequestExtent(extent, resolution, pixelRatio, ratio) {\n  const imageResolution = resolution / pixelRatio;\n  const center = getCenter(extent);\n  const viewWidth = ceil(getWidth(extent) / imageResolution, DECIMALS);\n  const viewHeight = ceil(getHeight(extent) / imageResolution, DECIMALS);\n  const marginWidth = ceil(((ratio - 1) * viewWidth) / 2, DECIMALS);\n  const requestWidth = viewWidth + 2 * marginWidth;\n  const marginHeight = ceil(((ratio - 1) * viewHeight) / 2, DECIMALS);\n  const requestHeight = viewHeight + 2 * marginHeight;\n  return getForViewAndSize(center, imageResolution, 0, [\n    requestWidth,\n    requestHeight,\n  ]);\n}\n\nexport default ImageSource;\n","/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n","/**\n * @module ol/source/arcgisRest\n */\n\nimport {DECIMALS} from './common.js';\nimport {appendParams} from '../uri.js';\nimport {decode} from '../Image.js';\nimport {getHeight, getWidth} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport {getRequestExtent} from './Image.js';\nimport {round} from '../math.js';\n\n/**\n * @param {string} baseUrl Base URL for the ArcGIS Rest service.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"../proj/Projection.js\").default} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n */\nexport function getRequestUrl(\n  baseUrl,\n  extent,\n  resolution,\n  pixelRatio,\n  projection,\n  params\n) {\n  // ArcGIS Server only wants the numeric portion of the projection ID.\n  // (if there is no numeric portion the entire projection code must\n  // form a valid ArcGIS SpatialReference definition).\n  const srid = projection\n    .getCode()\n    .split(/:(?=\\d+$)/)\n    .pop();\n\n  const imageResolution = resolution / pixelRatio;\n\n  const imageSize = [\n    round(getWidth(extent) / imageResolution, DECIMALS),\n    round(getHeight(extent) / imageResolution, DECIMALS),\n  ];\n\n  params['SIZE'] = imageSize[0] + ',' + imageSize[1];\n  params['BBOX'] = extent.join(',');\n  params['BBOXSR'] = srid;\n  params['IMAGESR'] = srid;\n  params['DPI'] = Math.round(\n    params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio\n  );\n\n  const modifiedUrl = baseUrl\n    .replace(/MapServer\\/?$/, 'MapServer/export')\n    .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n  if (modifiedUrl == baseUrl) {\n    throw new Error('`options.featureTypes` should be an Array');\n  }\n  return appendParams(modifiedUrl, params);\n}\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is 'EPSG:3857'.\n * The projection code must contain a numeric end portion separated by :\n * or the entire code must form a valid ArcGIS SpatialReference definition.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n * @property {function(HTMLImageElement, string): Promise<import('../DataTile.js').ImageLike>} [load] Function\n * to perform loading of the image. Receives the created `HTMLImageElement` and the desired `src` as argument and\n * returns a promise resolving to the loaded or decoded image. Default is {@link module:ol/Image.decode}.\n */\n\n/**\n * Creates a loader for ArcGIS Rest images.\n * @param {LoaderOptions} options Image ArcGIS Rest Options.\n * @return {import('../Image.js').ImageObjectPromiseLoader} ArcGIS Rest image.\n * @api\n */\nexport function createLoader(options) {\n  const load = options.load ? options.load : decode;\n  const projection = getProjection(options.projection || 'EPSG:3857');\n\n  /** @type {import('../Image.js').ImageObjectPromiseLoader} */\n  return function (extent, resolution, pixelRatio) {\n    pixelRatio = options.hidpi ? pixelRatio : 1;\n\n    const params = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true,\n    };\n    Object.assign(params, options.params);\n\n    extent = getRequestExtent(extent, resolution, pixelRatio, options.ratio);\n\n    const src = getRequestUrl(\n      options.url,\n      extent,\n      resolution,\n      pixelRatio,\n      projection,\n      params\n    );\n\n    const image = new Image();\n    if (options.crossOrigin !== null) {\n      image.crossOrigin = options.crossOrigin;\n    }\n\n    return load(image, src).then((image) => {\n      // Update resolution, because the server may return a smaller size than requested\n      const resolution = (getWidth(extent) / image.width) * pixelRatio;\n      return {image, extent, resolution, pixelRatio};\n    });\n  };\n}\n","/**\n * @module ol/source/ImageArcGISRest\n */\n\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport {createLoader} from './arcgisRest.js';\nimport {decode} from '../Image.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given\n * a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * The projection code must contain a numeric end portion separated by :\n * or the entire code must form a valid ArcGIS SpatialReference definition.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {Array<number>} [resolutions] Resolutions. If specified, requests will be made for\n * these resolutions only.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n */\n\n/**\n * @classdesc\n * Source for data from ArcGIS Rest services providing single, untiled images.\n * Useful when underlying map service has labels.\n *\n * If underlying map service is not using labels,\n * take advantage of ol image caching and use\n * {@link module:ol/source/TileArcGISRest~TileArcGISRest} data source.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageArcGISRest extends ImageSource {\n  /**\n   * @param {Options} [options] Image ArcGIS Rest Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.loaderProjection_ = null;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n    if (!this.loader || this.loaderProjection_ !== projection) {\n      // Lazily create loader to pick up the view projection and to allow `params` updates\n      this.loaderProjection_ = projection;\n      this.loader = createLoader({\n        crossOrigin: this.crossOrigin_,\n        params: this.params_,\n        projection: projection,\n        hidpi: this.hidpi_,\n        url: this.url_,\n        ratio: this.ratio_,\n        load: (image, src) => {\n          this.image.setImage(image);\n          this.imageLoadFunction_(this.image, src);\n          return decode(image);\n        },\n      });\n    }\n\n    return super.getImageInternal(extent, resolution, pixelRatio, projection);\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * Return the URL used for this ArcGIS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.image_ = null;\n    this.changed();\n  }\n}\n\nexport default ImageArcGISRest;\n","/**\n * @module ol/source/ImageCanvas\n */\n\nimport ImageCanvas from '../ImageCanvas.js';\nimport ImageSource from './Image.js';\nimport {\n  containsExtent,\n  getHeight,\n  getWidth,\n  scaleFromCenter,\n} from '../extent.js';\n\n/**\n * A function returning the canvas element (`{HTMLCanvasElement}`)\n * used by the source as an image. The arguments passed to the function are:\n * {@link module:ol/extent~Extent} the image extent, `{number}` the image resolution,\n * `{number}` the pixel ratio of the map, {@link module:ol/size~Size} the image size,\n * and {@link module:ol/proj/Projection~Projection} the image projection. The canvas returned by\n * this function is cached by the source. The this keyword inside the function\n * references the {@link module:ol/source/ImageCanvas~ImageCanvasSource}.\n *\n * @typedef {function(this:import(\"../ImageCanvas.js\").default, import(\"../extent.js\").Extent, number,\n *     number, import(\"../size.js\").Size, import(\"../proj/Projection.js\").default): HTMLCanvasElement} FunctionType\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {FunctionType} [canvasFunction] Canvas function.\n * The function returning the canvas element used by the source\n * as an image. The arguments passed to the function are: {@link import(\"../extent.js\").Extent} the\n * image extent, `{number}` the image resolution, `{number}` the pixel ratio of the map,\n * {@link import(\"../size.js\").Size} the image size, and {@link import(\"../proj/Projection.js\").default} the image\n * projection. The canvas returned by this function is cached by the source. If\n * the value returned by the function is later changed then\n * `changed` should be called on the source for the source to\n * invalidate the current cached image. See: {@link module:ol/Observable~Observable#changed}\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. 1 means canvases are the size of the map viewport, 2 means twice the\n * width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, new canvases will be created for these resolutions\n * @property {import(\"./Source.js\").State} [state] Source state.\n */\n\n/**\n * @classdesc\n * Base class for image sources where a canvas element is the image.\n * @api\n */\nclass ImageCanvasSource extends ImageSource {\n  /**\n   * @param {Options} [options] ImageCanvas options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n      state: options.state,\n    });\n\n    /**\n     * @private\n     * @type {FunctionType}\n     */\n    this.canvasFunction_ = options.canvasFunction;\n\n    /**\n     * @private\n     * @type {import(\"../ImageCanvas.js\").default}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n\n    let canvas = this.canvas_;\n    if (\n      canvas &&\n      this.renderedRevision_ == this.getRevision() &&\n      canvas.getResolution() == resolution &&\n      canvas.getPixelRatio() == pixelRatio &&\n      containsExtent(canvas.getExtent(), extent)\n    ) {\n      return canvas;\n    }\n\n    extent = extent.slice();\n    scaleFromCenter(extent, this.ratio_);\n    const width = getWidth(extent) / resolution;\n    const height = getHeight(extent) / resolution;\n    const size = [width * pixelRatio, height * pixelRatio];\n\n    const canvasElement = this.canvasFunction_.call(\n      this,\n      extent,\n      resolution,\n      pixelRatio,\n      size,\n      projection\n    );\n    if (canvasElement) {\n      canvas = new ImageCanvas(extent, resolution, pixelRatio, canvasElement);\n    }\n    this.canvas_ = canvas;\n    this.renderedRevision_ = this.getRevision();\n\n    return canvas;\n  }\n}\n\nexport default ImageCanvasSource;\n","/**\n * @module ol/source/static\n */\n\nimport {decode} from '../Image.js';\nimport {getHeight, getWidth} from '../extent.js';\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image. When using this loader with an\n * `ol/source/Image`, the same extent must be set as `extent` of the `ol/layer/Image`.\n * @property {string} url Image URL.\n * @property {function(HTMLImageElement, string): Promise<import('../DataTile.js').ImageLike>} [load] Function\n * to perform loading of the image. Receives the created `HTMLImageElement` and the desired `src` as argument and\n * returns a promise resolving to the loaded or decoded image. Default is {@link module:ol/Image.decode}.\n */\n\n/**\n * Creates a loader for static images.\n * @param {LoaderOptions} options Loader options.\n * @return {import(\"../Image.js\").ImageObjectPromiseLoader} Loader.\n * @api\n */\nexport function createLoader(options) {\n  const load = options.load || decode;\n  const extent = options.imageExtent;\n  const image = new Image();\n  if (options.crossOrigin !== null) {\n    image.crossOrigin = options.crossOrigin;\n  }\n\n  return () =>\n    load(image, options.url).then((image) => {\n      const resolutionX = getWidth(extent) / image.width;\n      const resolutionY = getHeight(extent) / image.height;\n      const resolution =\n        resolutionX !== resolutionY ? [resolutionX, resolutionY] : resolutionY;\n      return {image, extent, resolution, pixelRatio: 1};\n    });\n}\n","/**\n * @module ol/source/ImageStatic\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageWrapper, {decode} from '../Image.js';\nimport {createLoader} from './static.js';\nimport {get as getProjection} from '../proj.js';\nimport {intersects} from '../extent.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} imageExtent Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {string} url Image URL.\n */\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nclass Static extends ImageSource {\n  /**\n   * @param {Options} options ImageStatic options.\n   */\n  constructor(options) {\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const /** @type {import(\"../Image.js\").LoadFunction} */ imageLoadFunction =\n        options.imageLoadFunction !== undefined\n          ? options.imageLoadFunction\n          : defaultImageLoadFunction;\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: getProjection(options.projection),\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.imageExtent_ = options.imageExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image = null;\n\n    this.image = new ImageWrapper(\n      this.imageExtent_,\n      undefined,\n      1,\n      createLoader({\n        url: options.url,\n        imageExtent: options.imageExtent,\n        crossOrigin,\n        load: (image, src) => {\n          this.image.setImage(image);\n          imageLoadFunction(this.image, src);\n          return decode(image);\n        },\n      })\n    );\n\n    this.image.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this)\n    );\n  }\n\n  /**\n   * Returns the image extent\n   * @return {import(\"../extent.js\").Extent} image extent.\n   * @api\n   */\n  getImageExtent() {\n    return this.imageExtent_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (intersects(extent, this.image.getExtent())) {\n      return this.image;\n    }\n    return null;\n  }\n\n  /**\n   * Return the URL used for this image source.\n   * @return {string} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n}\n\nexport default Static;\n","/**\n * @module ol/source/wms\n */\n\nimport {DECIMALS} from './common.js';\nimport {appendParams} from '../uri.js';\nimport {compareVersions} from '../string.js';\nimport {decode} from '../Image.js';\nimport {floor, round} from '../math.js';\nimport {getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport {getRequestExtent} from './Image.js';\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_VERSION = '1.3.0';\n\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nconst GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n/**\n * @api\n * @typedef {'carmentaserver' | 'geoserver' | 'mapserver' | 'qgis'} ServerType\n * Set the server type to use implementation-specific parameters beyond the WMS specification.\n *  - `'carmentaserver'`: HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n *  - `'geoserver'`: HiDPI support for [GeoServer](https://geoserver.org/)\n *  - `'mapserver'`: HiDPI support for [MapServer](https://mapserver.org/)\n *  - `'qgis'`: HiDPI support for [QGIS](https://qgis.org/)\n */\n\n/**\n * @param {string} baseUrl Base URL.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {import(\"../proj/Projection.js\").default} projection Projection.\n * @param {Object} params WMS params. Will be modified in place.\n * @return {string} Request URL.\n */\nexport function getRequestUrl(baseUrl, extent, size, projection, params) {\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  const v13 = compareVersions(params['VERSION'], '1.3') >= 0;\n  params[v13 ? 'CRS' : 'SRS'] = projection.getCode();\n  if (v13 && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (baseUrl), params);\n}\n\n/**\n * @param {import(\"../extent\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio pixel ratio.\n * @param {import(\"../proj.js\").Projection} projection Projection.\n * @param {string} url WMS service url.\n * @param {Object} params WMS params.\n * @param {import(\"./wms.js\").ServerType} serverType The type of the remote WMS server.\n * @return {string} Image src.\n */\nexport function getImageSrc(\n  extent,\n  resolution,\n  pixelRatio,\n  projection,\n  url,\n  params,\n  serverType\n) {\n  params = Object.assign({REQUEST: 'GetMap'}, params);\n\n  const imageResolution = resolution / pixelRatio;\n\n  const imageSize = [\n    round(getWidth(extent) / imageResolution, DECIMALS),\n    round(getHeight(extent) / imageResolution, DECIMALS),\n  ];\n\n  if (pixelRatio != 1) {\n    switch (serverType) {\n      case 'geoserver':\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case 'mapserver':\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case 'carmentaserver':\n      case 'qgis':\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        throw new Error('Unknown `serverType` configured');\n    }\n  }\n\n  const src = getRequestUrl(url, extent, imageSize, projection, params);\n  return src;\n}\n\n/**\n * @param {Object} params WMS params.\n * @param {string} request WMS `REQUEST`.\n * @return {Object} WMS params with required properties set.\n */\nexport function getRequestParams(params, request) {\n  return Object.assign(\n    {\n      'REQUEST': request,\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'FORMAT': 'image/png',\n      'STYLES': '',\n      'TRANSPARENT': true,\n    },\n    params\n  );\n}\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {Object<string,*>} [params] WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT` and `BBOX` will be set\n * dynamically. `CRS` (`SRS` for WMS version < 1.3.0) will is derived from the `proection` config.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is 'EPSG:3857'.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {string} url WMS service URL.\n * @property {function(HTMLImageElement, string): Promise<import('../DataTile.js').ImageLike>} [load] Function\n * to perform loading of the image. Receives the created `HTMLImageElement` and the desired `src` as argument and\n * returns a promise resolving to the loaded or decoded image. Default is {@link module:ol/Image.decode}.\n */\n\n/**\n * Creates a loader for WMS images.\n * @param {LoaderOptions} options Loader options.\n * @return {import(\"../Image.js\").ImageObjectPromiseLoader} Loader.\n * @api\n */\nexport function createLoader(options) {\n  const hidpi = options.hidpi === undefined ? true : options.hidpi;\n  const projection = getProjection(options.projection || 'EPSG:3857');\n  const ratio = options.ratio || 1.5;\n  const load = options.load || decode;\n\n  /**\n   * @type {import(\"../Image.js\").Loader}\n   */\n  return (extent, resolution, pixelRatio) => {\n    extent = getRequestExtent(extent, resolution, pixelRatio, ratio);\n    if (pixelRatio != 1 && (!hidpi || options.serverType === undefined)) {\n      pixelRatio = 1;\n    }\n    const src = getImageSrc(\n      extent,\n      resolution,\n      pixelRatio,\n      projection,\n      options.url,\n      getRequestParams(options.params, 'GetMap'),\n      options.serverType\n    );\n    const image = new Image();\n    if (options.crossOrigin !== null) {\n      image.crossOrigin = options.crossOrigin;\n    }\n    return load(image, src).then((image) => ({image, extent, pixelRatio}));\n  };\n}\n\n/**\n * Get the GetFeatureInfo URL for the passed coordinate and resolution. Returns `undefined` if the\n * GetFeatureInfo URL cannot be constructed.\n * @param {LoaderOptions} options Options passed the `createWMSLoader()` function. In addition to\n * the params required by the loader, `INFO_FORMAT` should be specified, it defaults to\n * `application/json`. If `QUERY_LAYERS` is not provided, then the layers specified in the `LAYERS`\n * parameter will be used.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nexport function getFeatureInfoUrl(options, coordinate, resolution) {\n  if (options.url === undefined) {\n    return undefined;\n  }\n\n  const projectionObj = getProjection(options.projection || 'EPSG:3857');\n\n  const extent = getForViewAndSize(\n    coordinate,\n    resolution,\n    0,\n    GETFEATUREINFO_IMAGE_SIZE\n  );\n\n  const baseParams = {\n    'QUERY_LAYERS': options.params['LAYERS'],\n    'INFO_FORMAT': 'application/json',\n  };\n  Object.assign(\n    baseParams,\n    getRequestParams(options.params, 'GetFeatureInfo'),\n    options.params\n  );\n\n  const x = floor((coordinate[0] - extent[0]) / resolution, DECIMALS);\n  const y = floor((extent[3] - coordinate[1]) / resolution, DECIMALS);\n  const v13 = compareVersions(baseParams['VERSION'], '1.3') >= 0;\n  baseParams[v13 ? 'I' : 'X'] = x;\n  baseParams[v13 ? 'J' : 'Y'] = y;\n\n  return getRequestUrl(\n    options.url,\n    extent,\n    GETFEATUREINFO_IMAGE_SIZE,\n    projectionObj,\n    baseParams\n  );\n}\n\n/**\n * Get the GetLegendGraphic URL, optionally optimized for the passed resolution and possibly\n * including any passed specific parameters. Returns `undefined` if the GetLegendGraphic URL\n * cannot be constructed.\n *\n * @param {LoaderOptions} options Options passed the `createWMSLoader()` function.\n * @param {number} [resolution] Resolution. If not provided, `SCALE` will not be calculated and\n * included in URL.\n * @return {string|undefined} GetLegendGraphic URL.\n * @api\n */\nexport function getLegendUrl(options, resolution) {\n  if (options.url === undefined) {\n    return undefined;\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_VERSION,\n    'REQUEST': 'GetLegendGraphic',\n    'FORMAT': 'image/png',\n  };\n\n  if (options.params === undefined || options.params['LAYER'] === undefined) {\n    const layers = options.params.LAYERS;\n    const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n    if (!isSingleLayer) {\n      return undefined;\n    }\n    baseParams['LAYER'] = layers;\n  }\n\n  if (resolution !== undefined) {\n    const mpu =\n      getProjection(options.projection || 'EPSG:3857').getMetersPerUnit() || 1;\n    const pixelSize = 0.00028;\n    baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n  }\n\n  Object.assign(baseParams, options.params);\n\n  return appendParams(options.url, baseParams);\n}\n","/**\n * @module ol/source/ImageWMS\n */\n\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {createLoader, getFeatureInfoUrl, getLegendUrl} from './wms.js';\nimport {decode} from '../Image.js';\nimport {get as getProjection, transform} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} [url] WMS service URL.\n */\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageWMS extends ImageSource {\n  /**\n   * @param {Options} [options] ImageWMS options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params;\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.loaderProjection_ = null;\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      resolution = calculateSourceResolution(\n        sourceProjectionObj,\n        projectionObj,\n        coordinate,\n        resolution\n      );\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const options = {\n      url: this.url_,\n      params: {\n        ...this.params_,\n        ...params,\n      },\n      projection: sourceProjectionObj || projectionObj,\n    };\n    return getFeatureInfoUrl(options, coordinate, resolution);\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    return getLegendUrl(\n      {\n        url: this.url_,\n        params: {\n          ...this.params_,\n          ...params,\n        },\n      },\n      resolution\n    );\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n    if (!this.loader || this.loaderProjection_ !== projection) {\n      // Lazily create loader to pick up the view projection and to allow `params` updates\n      this.loaderProjection_ = projection;\n      this.loader = createLoader({\n        crossOrigin: this.crossOrigin_,\n        params: this.params_,\n        projection: projection,\n        serverType: this.serverType_,\n        hidpi: this.hidpi_,\n        url: this.url_,\n        ratio: this.ratio_,\n        load: (image, src) => {\n          this.image.setImage(image);\n          this.imageLoadFunction_(this.image, src);\n          return decode(image);\n        },\n      });\n    }\n\n    return super.getImageInternal(extent, resolution, pixelRatio, projection);\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * Return the URL used for this WMS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.loader = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.changed();\n  }\n\n  changed() {\n    this.image = null;\n    super.changed();\n  }\n}\n\nexport default ImageWMS;\n","/**\n * @module ol/source/ogcTileUtil\n */\n\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport {getJSON, resolveUrl} from '../net.js';\nimport {get as getProjection} from '../proj.js';\nimport {getIntersection as intersectExtents} from '../extent.js';\n\n/**\n * See https://ogcapi.ogc.org/tiles/.\n */\n\n/**\n * @typedef {'map' | 'vector'} TileType\n */\n\n/**\n * @typedef {'topLeft' | 'bottomLeft'} CornerOfOrigin\n */\n\n/**\n * @typedef {Object} TileSet\n * @property {TileType} dataType Type of data represented in the tileset.\n * @property {string} [tileMatrixSetDefinition] Reference to a tile matrix set definition.\n * @property {TileMatrixSet} [tileMatrixSet] Tile matrix set definition.\n * @property {Array<TileMatrixSetLimit>} [tileMatrixSetLimits] Tile matrix set limits.\n * @property {Array<Link>} links Tileset links.\n */\n\n/**\n * @typedef {Object} Link\n * @property {string} rel The link rel attribute.\n * @property {string} href The link URL.\n * @property {string} type The link type.\n */\n\n/**\n * @typedef {Object} TileMatrixSetLimit\n * @property {string} tileMatrix The tile matrix id.\n * @property {number} minTileRow The minimum tile row.\n * @property {number} maxTileRow The maximum tile row.\n * @property {number} minTileCol The minimum tile column.\n * @property {number} maxTileCol The maximum tile column.\n */\n\n/**\n * @typedef {Object} TileMatrixSet\n * @property {string} id The tile matrix set identifier.\n * @property {string} crs The coordinate reference system.\n * @property {Array<TileMatrix>} tileMatrices Array of tile matrices.\n */\n\n/**\n * @typedef {Object} TileMatrix\n * @property {string} id The tile matrix identifier.\n * @property {number} cellSize The pixel resolution (map units per pixel).\n * @property {Array<number>} pointOfOrigin The map location of the matrix origin.\n * @property {CornerOfOrigin} [cornerOfOrigin='topLeft'] The corner of the matrix that represents the origin ('topLeft' or 'bottomLeft').\n * @property {number} matrixWidth The number of columns.\n * @property {number} matrixHeight The number of rows.\n * @property {number} tileWidth The pixel width of a tile.\n * @property {number} tileHeight The pixel height of a tile.\n */\n\n/**\n * @type {Object<string, boolean>}\n */\nconst knownMapMediaTypes = {\n  'image/png': true,\n  'image/jpeg': true,\n  'image/gif': true,\n  'image/webp': true,\n};\n\n/**\n * @type {Object<string, boolean>}\n */\nconst knownVectorMediaTypes = {\n  'application/vnd.mapbox-vector-tile': true,\n  'application/geo+json': true,\n};\n\n/**\n * @typedef {Object} TileSetInfo\n * @property {string} urlTemplate The tile URL template.\n * @property {import(\"../tilegrid/TileGrid.js\").default} grid The tile grid.\n * @property {import(\"../Tile.js\").UrlFunction} urlFunction The tile URL function.\n */\n\n/**\n * @typedef {Object} SourceInfo\n * @property {string} url The tile set URL.\n * @property {string} mediaType The preferred tile media type.\n * @property {Array<string>} [supportedMediaTypes] The supported media types.\n * @property {import(\"../proj/Projection.js\").default} projection The source projection.\n * @property {Object} [context] Optional context for constructing the URL.\n */\n\n/**\n * @param {Array<Link>} links Tileset links.\n * @param {string} [mediaType] The preferred media type.\n * @return {string} The tile URL template.\n */\nexport function getMapTileUrlTemplate(links, mediaType) {\n  let tileUrlTemplate;\n  let fallbackUrlTemplate;\n  for (let i = 0; i < links.length; ++i) {\n    const link = links[i];\n    if (link.rel === 'item') {\n      if (link.type === mediaType) {\n        tileUrlTemplate = link.href;\n        break;\n      }\n      if (knownMapMediaTypes[link.type]) {\n        fallbackUrlTemplate = link.href;\n      } else if (!fallbackUrlTemplate && link.type.startsWith('image/')) {\n        fallbackUrlTemplate = link.href;\n      }\n    }\n  }\n\n  if (!tileUrlTemplate) {\n    if (fallbackUrlTemplate) {\n      tileUrlTemplate = fallbackUrlTemplate;\n    } else {\n      throw new Error('Could not find \"item\" link');\n    }\n  }\n\n  return tileUrlTemplate;\n}\n\n/**\n * @param {Array<Link>} links Tileset links.\n * @param {string} [mediaType] The preferred media type.\n * @param {Array<string>} [supportedMediaTypes] The media types supported by the parser.\n * @return {string} The tile URL template.\n */\nexport function getVectorTileUrlTemplate(\n  links,\n  mediaType,\n  supportedMediaTypes\n) {\n  let tileUrlTemplate;\n  let fallbackUrlTemplate;\n\n  /**\n   * Lookup of URL by media type.\n   * @type {Object<string, string>}\n   */\n  const hrefLookup = {};\n\n  for (let i = 0; i < links.length; ++i) {\n    const link = links[i];\n    hrefLookup[link.type] = link.href;\n    if (link.rel === 'item') {\n      if (link.type === mediaType) {\n        tileUrlTemplate = link.href;\n        break;\n      }\n      if (knownVectorMediaTypes[link.type]) {\n        fallbackUrlTemplate = link.href;\n      }\n    }\n  }\n\n  if (!tileUrlTemplate && supportedMediaTypes) {\n    for (let i = 0; i < supportedMediaTypes.length; ++i) {\n      const supportedMediaType = supportedMediaTypes[i];\n      if (hrefLookup[supportedMediaType]) {\n        tileUrlTemplate = hrefLookup[supportedMediaType];\n        break;\n      }\n    }\n  }\n\n  if (!tileUrlTemplate) {\n    if (fallbackUrlTemplate) {\n      tileUrlTemplate = fallbackUrlTemplate;\n    } else {\n      throw new Error('Could not find \"item\" link');\n    }\n  }\n\n  return tileUrlTemplate;\n}\n\n/**\n * @param {SourceInfo} sourceInfo The source info.\n * @param {TileMatrixSet} tileMatrixSet Tile matrix set.\n * @param {string} tileUrlTemplate Tile URL template.\n * @param {Array<TileMatrixSetLimit>} [tileMatrixSetLimits] Tile matrix set limits.\n * @return {TileSetInfo} Tile set info.\n */\nfunction parseTileMatrixSet(\n  sourceInfo,\n  tileMatrixSet,\n  tileUrlTemplate,\n  tileMatrixSetLimits\n) {\n  let projection = sourceInfo.projection;\n  if (!projection) {\n    projection = getProjection(tileMatrixSet.crs);\n    if (!projection) {\n      throw new Error(`Unsupported CRS: ${tileMatrixSet.crs}`);\n    }\n  }\n  const backwards = projection.getAxisOrientation().substr(0, 2) !== 'en';\n\n  const matrices = tileMatrixSet.tileMatrices;\n\n  /**\n   * @type {Object<string, TileMatrix>}\n   */\n  const matrixLookup = {};\n  for (let i = 0; i < matrices.length; ++i) {\n    const matrix = matrices[i];\n    matrixLookup[matrix.id] = matrix;\n  }\n\n  /**\n   * @type {Object<string, TileMatrixSetLimit>}\n   */\n  const limitLookup = {};\n\n  /**\n   * @type {Array<string>}\n   */\n  const matrixIds = [];\n\n  if (tileMatrixSetLimits) {\n    for (let i = 0; i < tileMatrixSetLimits.length; ++i) {\n      const limit = tileMatrixSetLimits[i];\n      const id = limit.tileMatrix;\n      matrixIds.push(id);\n      limitLookup[id] = limit;\n    }\n  } else {\n    for (let i = 0; i < matrices.length; ++i) {\n      const id = matrices[i].id;\n      matrixIds.push(id);\n    }\n  }\n\n  const length = matrixIds.length;\n  const origins = new Array(length);\n  const resolutions = new Array(length);\n  const sizes = new Array(length);\n  const tileSizes = new Array(length);\n  const extent = [-Infinity, -Infinity, Infinity, Infinity];\n\n  for (let i = 0; i < length; ++i) {\n    const id = matrixIds[i];\n    const matrix = matrixLookup[id];\n    const origin = matrix.pointOfOrigin;\n    if (backwards) {\n      origins[i] = [origin[1], origin[0]];\n    } else {\n      origins[i] = origin;\n    }\n    resolutions[i] = matrix.cellSize;\n    sizes[i] = [matrix.matrixWidth, matrix.matrixHeight];\n    tileSizes[i] = [matrix.tileWidth, matrix.tileHeight];\n    const limit = limitLookup[id];\n    if (limit) {\n      const tileMapWidth = matrix.cellSize * matrix.tileWidth;\n      const minX = origins[i][0] + limit.minTileCol * tileMapWidth;\n      const maxX = origins[i][0] + (limit.maxTileCol + 1) * tileMapWidth;\n\n      const tileMapHeight = matrix.cellSize * matrix.tileHeight;\n      const upsideDown = matrix.cornerOfOrigin === 'bottomLeft';\n\n      let minY;\n      let maxY;\n      if (upsideDown) {\n        minY = origins[i][1] + limit.minTileRow * tileMapHeight;\n        maxY = origins[i][1] + (limit.maxTileRow + 1) * tileMapHeight;\n      } else {\n        minY = origins[i][1] - (limit.maxTileRow + 1) * tileMapHeight;\n        maxY = origins[i][1] - limit.minTileRow * tileMapHeight;\n      }\n\n      intersectExtents(extent, [minX, minY, maxX, maxY], extent);\n    }\n  }\n\n  const tileGrid = new TileGrid({\n    origins: origins,\n    resolutions: resolutions,\n    sizes: sizes,\n    tileSizes: tileSizes,\n    extent: tileMatrixSetLimits ? extent : undefined,\n  });\n\n  const context = sourceInfo.context;\n  const base = sourceInfo.url;\n\n  /** @type {import('../Tile.js').UrlFunction} */\n  function tileUrlFunction(tileCoord, pixelRatio, projection) {\n    if (!tileCoord) {\n      return undefined;\n    }\n\n    const id = matrixIds[tileCoord[0]];\n    const matrix = matrixLookup[id];\n    const upsideDown = matrix.cornerOfOrigin === 'bottomLeft';\n\n    const localContext = {\n      tileMatrix: id,\n      tileCol: tileCoord[1],\n      tileRow: upsideDown ? -tileCoord[2] - 1 : tileCoord[2],\n    };\n\n    if (tileMatrixSetLimits) {\n      const limit = limitLookup[matrix.id];\n      if (\n        localContext.tileCol < limit.minTileCol ||\n        localContext.tileCol > limit.maxTileCol ||\n        localContext.tileRow < limit.minTileRow ||\n        localContext.tileRow > limit.maxTileRow\n      ) {\n        return undefined;\n      }\n    }\n\n    Object.assign(localContext, context);\n\n    const url = tileUrlTemplate.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n      return localContext[p];\n    });\n\n    return resolveUrl(base, url);\n  }\n\n  return {\n    grid: tileGrid,\n    urlTemplate: tileUrlTemplate,\n    urlFunction: tileUrlFunction,\n  };\n}\n\n/**\n * @param {SourceInfo} sourceInfo The source info.\n * @param {TileSet} tileSet Tile set.\n * @return {TileSetInfo|Promise<TileSetInfo>} Tile set info.\n */\nfunction parseTileSetMetadata(sourceInfo, tileSet) {\n  const tileMatrixSetLimits = tileSet.tileMatrixSetLimits;\n  /** @type {string} */\n  let tileUrlTemplate;\n\n  if (tileSet.dataType === 'map') {\n    tileUrlTemplate = getMapTileUrlTemplate(\n      tileSet.links,\n      sourceInfo.mediaType\n    );\n  } else if (tileSet.dataType === 'vector') {\n    tileUrlTemplate = getVectorTileUrlTemplate(\n      tileSet.links,\n      sourceInfo.mediaType,\n      sourceInfo.supportedMediaTypes\n    );\n  } else {\n    throw new Error('Expected tileset data type to be \"map\" or \"vector\"');\n  }\n\n  if (tileSet.tileMatrixSet) {\n    return parseTileMatrixSet(\n      sourceInfo,\n      tileSet.tileMatrixSet,\n      tileUrlTemplate,\n      tileMatrixSetLimits\n    );\n  }\n\n  const tileMatrixSetLink = tileSet.links.find(\n    (link) =>\n      link.rel === 'http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme'\n  );\n  if (!tileMatrixSetLink) {\n    throw new Error(\n      'Expected http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme link or tileMatrixSet'\n    );\n  }\n  const tileMatrixSetDefinition = tileMatrixSetLink.href;\n\n  const url = resolveUrl(sourceInfo.url, tileMatrixSetDefinition);\n  return getJSON(url).then(function (tileMatrixSet) {\n    return parseTileMatrixSet(\n      sourceInfo,\n      tileMatrixSet,\n      tileUrlTemplate,\n      tileMatrixSetLimits\n    );\n  });\n}\n\n/**\n * @param {SourceInfo} sourceInfo Source info.\n * @return {Promise<TileSetInfo>} Tile set info.\n */\nexport function getTileSetInfo(sourceInfo) {\n  return getJSON(sourceInfo.url).then(function (tileSet) {\n    return parseTileSetMetadata(sourceInfo, tileSet);\n  });\n}\n","/**\n * @module ol/source/OGCMapTile\n */\nimport TileImage from './TileImage.js';\nimport {getTileSetInfo} from './ogcTileUtil.js';\nimport {error as logError} from '../console.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} url URL to the OGC Map Tileset endpoint.\n * @property {Object} [context] A lookup of values to use in the tile URL template.  The `{tileMatrix}`\n * (zoom level), `{tileRow}`, and `{tileCol}` variables in the URL will always be provided by the source.\n * @property {string} [mediaType] The content type for the tiles (e.g. \"image/png\").  If not provided,\n * the source will try to find a link with rel=\"item\" that uses a supported image type.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. By default, the projection\n * will be derived from the `crs` of the `tileMatrixSet`.  You can override this by supplying\n * a projection to the constructor.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will be ignored if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(tile, src) {\n *   tile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n/**\n * @classdesc\n * Layer source for map tiles from an [OGC API - Tiles](https://ogcapi.ogc.org/tiles/) service that provides \"map\" type tiles.\n * The service must conform to at least the core (http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/core)\n * and tileset (http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/tileset) conformance classes.\n * @api\n */\nclass OGCMapTile extends TileImage {\n  /**\n   * @param {Options} options OGC map tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n    });\n\n    const sourceInfo = {\n      url: options.url,\n      projection: this.getProjection(),\n      mediaType: options.mediaType,\n      context: options.context || null,\n    };\n\n    getTileSetInfo(sourceInfo)\n      .then(this.handleTileSetInfo_.bind(this))\n      .catch(this.handleError_.bind(this));\n  }\n\n  /**\n   * @param {import(\"./ogcTileUtil.js\").TileSetInfo} tileSetInfo Tile set info.\n   * @private\n   */\n  handleTileSetInfo_(tileSetInfo) {\n    this.tileGrid = tileSetInfo.grid;\n    this.setTileUrlFunction(tileSetInfo.urlFunction, tileSetInfo.urlTemplate);\n    this.setState('ready');\n  }\n\n  /**\n   * @private\n   * @param {Error} error The error.\n   */\n  handleError_(error) {\n    logError(error);\n    this.setState('error');\n  }\n}\n\nexport default OGCMapTile;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../Image.js\").default}\n     */\n    this.image_ = null;\n  }\n\n  /**\n   * @return {import('../../DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return !this.image_ ? null : this.image_.getImage();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection)\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image_ = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image_ = null;\n          }\n        }\n      } else {\n        this.image_ = null;\n      }\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image_.getExtent();\n    const img = this.image_.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth)\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight)\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const [imageResolutionX, imageResolutionY] = Array.isArray(imageResolution)\n      ? imageResolution\n      : [imageResolution, imageResolution];\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scaleX =\n      (pixelRatio * imageResolutionX) / (viewResolution * imagePixelRatio);\n    const scaleY =\n      (pixelRatio * imageResolutionY) / (viewResolution * imagePixelRatio);\n\n    const extent = frameState.extent;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.context;\n    const canvas = context.canvas;\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scaleX,\n      scaleY,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolutionX,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolutionY\n    );\n\n    this.renderedResolution = (imageResolutionY * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      let previousAlpha;\n      if (opacity !== 1) {\n        previousAlpha = context.globalAlpha;\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.globalAlpha = previousAlpha;\n      }\n    }\n    this.postRender(context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/source/Raster\n */\nimport Disposable from '../Disposable.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport ImageLayer from '../layer/Image.js';\nimport ImageSource from './Image.js';\nimport Source from './Source.js';\nimport TileLayer from '../layer/Tile.js';\nimport TileQueue from '../TileQueue.js';\nimport TileSource from './Tile.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {create as createTransform} from '../transform.js';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport {getUid} from '../util.js';\n\nlet hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet context;\n\n/**\n * @param {Uint8ClampedArray} data Image data.\n * @param {number} width Number of columns.\n * @param {number} height Number of rows.\n * @return {ImageData} Image data.\n */\nexport function newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  }\n\n  if (!context) {\n    context = document.createElement('canvas').getContext('2d');\n  }\n  const imageData = context.createImageData(width, height);\n  imageData.data.set(data);\n  return imageData;\n}\n\n/**\n * @typedef {Object} MinionData\n * @property {Array<ArrayBuffer>} buffers Array of buffers.\n * @property {Object} meta Operation metadata.\n * @property {boolean} imageOps The operation is an image operation.\n * @property {number} width The width of the image.\n * @property {number} height The height of the image.\n */\n\n/* istanbul ignore next */\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(MinionData):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  let workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    }\n    return {data: data, width: width, height: height};\n  }\n\n  return function (data) {\n    // bracket notation for minification support\n    const buffers = data['buffers'];\n    const meta = data['meta'];\n    const imageOps = data['imageOps'];\n    const width = data['width'];\n    const height = data['height'];\n\n    const numBuffers = buffers.length;\n    const numBytes = buffers[0].byteLength;\n\n    if (imageOps) {\n      const images = new Array(numBuffers);\n      for (let b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n          new Uint8ClampedArray(buffers[b]),\n          width,\n          height\n        );\n      }\n      const output = operation(images, meta).data;\n      return output.buffer;\n    }\n\n    const output = new Uint8ClampedArray(numBytes);\n    const arrays = new Array(numBuffers);\n    const pixels = new Array(numBuffers);\n    for (let b = 0; b < numBuffers; ++b) {\n      arrays[b] = new Uint8ClampedArray(buffers[b]);\n      pixels[b] = [0, 0, 0, 0];\n    }\n    for (let i = 0; i < numBytes; i += 4) {\n      for (let j = 0; j < numBuffers; ++j) {\n        const array = arrays[j];\n        pixels[j][0] = array[i];\n        pixels[j][1] = array[i + 1];\n        pixels[j][2] = array[i + 2];\n        pixels[j][3] = array[i + 3];\n      }\n      const pixel = operation(pixels, meta);\n      output[i] = pixel[0];\n      output[i + 1] = pixel[1];\n      output[i + 2] = pixel[2];\n      output[i + 3] = pixel[3];\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {ProcessorOptions} config Processor options.\n * @param {function(MessageEvent): void} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  const lib = Object.keys(config.lib || {}).map(function (name) {\n    return 'const ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  const lines = lib.concat([\n    'const __minion__ = (' + createMinion.toString() + ')(',\n    config.operation.toString(),\n    ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  const buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});',\n  ]);\n\n  const worker = new Worker(\n    typeof Blob === 'undefined'\n      ? 'data:text/javascript;base64,' +\n        Buffer.from(lines.join('\\n'), 'binary').toString('base64')\n      : URL.createObjectURL(new Blob(lines, {type: 'text/javascript'}))\n  );\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * @typedef {Object} FauxMessageEvent\n * @property {Object} data Message data.\n */\n\n/**\n * Create a faux worker for running operations.\n * @param {ProcessorOptions} config Configuration.\n * @param {function(FauxMessageEvent): void} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  const minion = createMinion(config.operation);\n  let terminated = false;\n  return {\n    postMessage: function (data) {\n      setTimeout(function () {\n        if (terminated) {\n          return;\n        }\n        onMessage({data: {buffer: minion(data), meta: data['meta']}});\n      }, 0);\n    },\n    terminate: function () {\n      terminated = true;\n    },\n  };\n}\n\n/**\n * @typedef {function(Error, ImageData, (Object|Array<Object>)): void} JobCallback\n */\n\n/**\n * @typedef {Object} Job\n * @property {Object} meta Job metadata.\n * @property {Array<ImageData>} inputs Array of input data.\n * @property {JobCallback} callback Called when the job is complete.\n */\n\n/**\n * @typedef {Object} ProcessorOptions\n * @property {number} threads Number of workers to spawn.\n * @property {Operation} operation The operation.\n * @property {Object<string, Function>} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} queue The number of queued jobs to allow.\n * @property {boolean} [imageOps=false] Pass all the image data to the operation instead of a single pixel.\n */\n\n/**\n * @classdesc\n * A processor runs pixel or image operations in workers.\n */\nexport class Processor extends Disposable {\n  /**\n   * @param {ProcessorOptions} config Configuration.\n   */\n  constructor(config) {\n    super();\n\n    this._imageOps = !!config.imageOps;\n    let threads;\n    if (config.threads === 0) {\n      threads = 0;\n    } else if (this._imageOps) {\n      threads = 1;\n    } else {\n      threads = config.threads || 1;\n    }\n\n    /**\n     * @type {Array<Worker>}\n     */\n    const workers = new Array(threads);\n    if (threads) {\n      for (let i = 0; i < threads; ++i) {\n        workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n      }\n    } else {\n      workers[0] = createFauxWorker(\n        config,\n        this._onWorkerMessage.bind(this, 0)\n      );\n    }\n    this._workers = workers;\n\n    /**\n     * @type {Array<Job>}\n     * @private\n     */\n    this._queue = [];\n\n    this._maxQueueLength = config.queue || Infinity;\n    this._running = 0;\n\n    /**\n     * @type {Object<number, any>}\n     * @private\n     */\n    this._dataLookup = {};\n\n    /**\n     * @type {Job}\n     * @private\n     */\n    this._job = null;\n  }\n\n  /**\n   * Run operation on input data.\n   * @param {Array<ImageData>} inputs Array of image data.\n   * @param {Object} meta A user data object.  This is passed to all operations\n   *     and must be serializable.\n   * @param {function(Error, ImageData, Object): void} callback Called when work\n   *     completes.  The first argument is any error.  The second is the ImageData\n   *     generated by operations.  The third is the user data object.\n   */\n  process(inputs, meta, callback) {\n    this._enqueue({\n      inputs: inputs,\n      meta: meta,\n      callback: callback,\n    });\n    this._dispatch();\n  }\n\n  /**\n   * Add a job to the queue.\n   * @param {Job} job The job.\n   */\n  _enqueue(job) {\n    this._queue.push(job);\n    while (this._queue.length > this._maxQueueLength) {\n      this._queue.shift().callback(null, null);\n    }\n  }\n\n  /**\n   * Dispatch a job.\n   */\n  _dispatch() {\n    if (this._running || this._queue.length === 0) {\n      return;\n    }\n\n    const job = this._queue.shift();\n    this._job = job;\n    const width = job.inputs[0].width;\n    const height = job.inputs[0].height;\n    const buffers = job.inputs.map(function (input) {\n      return input.data.buffer;\n    });\n    const threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage(\n        {\n          buffers: buffers,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        buffers\n      );\n      return;\n    }\n\n    const length = job.inputs[0].data.length;\n    const segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (let i = 0; i < threads; ++i) {\n      const offset = i * segmentLength;\n      const slices = [];\n      for (let j = 0, jj = buffers.length; j < jj; ++j) {\n        slices.push(buffers[j].slice(offset, offset + segmentLength));\n      }\n      this._workers[i].postMessage(\n        {\n          buffers: slices,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        slices\n      );\n    }\n  }\n\n  /**\n   * Handle messages from the worker.\n   * @param {number} index The worker index.\n   * @param {MessageEvent} event The message event.\n   */\n  _onWorkerMessage(index, event) {\n    if (this.disposed) {\n      return;\n    }\n    this._dataLookup[index] = event.data;\n    --this._running;\n    if (this._running === 0) {\n      this._resolveJob();\n    }\n  }\n\n  /**\n   * Resolve a job.  If there are no more worker threads, the processor callback\n   * will be called.\n   */\n  _resolveJob() {\n    const job = this._job;\n    const threads = this._workers.length;\n    let data, meta;\n    if (threads === 1) {\n      data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n      meta = this._dataLookup[0]['meta'];\n    } else {\n      const length = job.inputs[0].data.length;\n      data = new Uint8ClampedArray(length);\n      meta = new Array(threads);\n      const segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (let i = 0; i < threads; ++i) {\n        const buffer = this._dataLookup[i]['buffer'];\n        const offset = i * segmentLength;\n        data.set(new Uint8ClampedArray(buffer), offset);\n        meta[i] = this._dataLookup[i]['meta'];\n      }\n    }\n    this._job = null;\n    this._dataLookup = {};\n    job.callback(\n      null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height),\n      meta\n    );\n    this._dispatch();\n  }\n\n  /**\n   * Terminate all workers associated with the processor.\n   */\n  disposeInternal() {\n    for (let i = 0; i < this._workers.length; ++i) {\n      this._workers[i].terminate();\n    }\n    this._workers.length = 0;\n  }\n}\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData)\n * and should return a single\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData).\n * The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n\n/**\n * @enum {string}\n */\nconst RasterEventType = {\n  /**\n   * Triggered before operations are run.  Listeners will receive an event object with\n   * a `data` property that can be used to make data available to operations.\n   * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.  Listeners will receive an event object with\n   * a `data` property.  If more than one thread is used, `data` will be an array of\n   * objects.  If a single thread is used, `data` will be a single object.\n   * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations',\n};\n\n/**\n * @typedef {'pixel' | 'image'} RasterOperationType\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n */\n\n/**\n * @typedef {import(\"./Image.js\").ImageSourceEventTypes|'beforeoperations'|'afteroperations'} RasterSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster~RasterSource} instances are instances of this\n * type.\n */\nexport class RasterSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Object|Array<Object>} data An object made available to operations.  For \"afteroperations\" evenets\n   * this will be an array of objects if more than one thread is used.\n   */\n  constructor(type, frameState, data) {\n    super(type);\n\n    /**\n     * The raster extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n * @property {Array<number>|null} [resolutions] Resolutions. If specified, raster operations will only\n * be run at the given resolutions.  By default, the resolutions of the first source with resolutions\n * specified will be used, if any. Set to `null` to use any view resolution instead.\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Image.js\").ImageSourceEventTypes, import(\"./Image.js\").ImageSourceEvent, Return> &\n *   import(\"../Observable\").OnSignature<RasterSourceEventTypes, RasterSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |RasterSourceEventTypes, Return>} RasterSourceOnSignature\n */\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nclass RasterSource extends ImageSource {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      projection: null,\n    });\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {RasterSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Processor}\n     */\n    this.processor_ = null;\n\n    /**\n     * @private\n     * @type {RasterOperationType}\n     */\n    this.operationType_ =\n      options.operationType !== undefined ? options.operationType : 'pixel';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array<import(\"../layer/Layer.js\").default>}\n     */\n    this.layers_ = createLayers(options.sources);\n\n    const changed = this.changed.bind(this);\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      this.layers_[i].addEventListener(EventType.CHANGE, changed);\n    }\n\n    /** @type {boolean} */\n    this.useResolutions_ = options.resolutions !== null;\n\n    /**\n     * @private\n     * @type {import(\"../TileQueue.js\").default}\n     */\n    this.tileQueue_ = new TileQueue(function () {\n      return 1;\n    }, this.processSources_.bind(this));\n\n    /**\n     * The most recently requested frame state.\n     * @type {import(\"../Map.js\").FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {import(\"../ImageCanvas.js\").default}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      declutterTree: null,\n      extent: null,\n      index: 0,\n      layerIndex: 0,\n      layerStatesArray: getLayerStatesArray(this.layers_),\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {import(\"../View.js\").State} */ ({\n        rotation: 0,\n      }),\n      viewHints: [],\n      wantedTiles: {},\n      mapId: getUid(this),\n      renderTargets: {},\n    };\n\n    this.setAttributions(function (frameState) {\n      const attributions = [];\n      for (\n        let index = 0, iMax = options.sources.length;\n        index < iMax;\n        ++index\n      ) {\n        const sourceOrLayer = options.sources[index];\n        const source =\n          sourceOrLayer instanceof Source\n            ? sourceOrLayer\n            : sourceOrLayer.getSource();\n        if (!source) {\n          continue;\n        }\n        const attributionGetter = source.getAttributions();\n        if (typeof attributionGetter === 'function') {\n          const sourceAttribution = attributionGetter(frameState);\n          attributions.push.apply(attributions, sourceAttribution);\n        }\n      }\n      return attributions.length !== 0 ? attributions : null;\n    });\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n  }\n\n  /**\n   * Set the operation.\n   * @param {Operation} operation New operation.\n   * @param {Object} [lib] Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  setOperation(operation, lib) {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n\n    this.processor_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === 'image',\n      queue: 1,\n      lib: lib,\n      threads: this.threads_,\n    });\n    this.changed();\n  }\n\n  /**\n   * Update the stored frame state.\n   * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n   * @return {import(\"../Map.js\").FrameState} The updated frame state.\n   * @private\n   */\n  updateFrameState_(extent, resolution, projection) {\n    const frameState = /** @type {import(\"../Map.js\").FrameState} */ (\n      Object.assign({}, this.frameState_)\n    );\n\n    frameState.viewState = /** @type {import(\"../View.js\").State} */ (\n      Object.assign({}, frameState.viewState)\n    );\n\n    const center = getCenter(extent);\n\n    frameState.size[0] = Math.ceil(getWidth(extent) / resolution);\n    frameState.size[1] = Math.ceil(getHeight(extent) / resolution);\n    frameState.extent = [\n      center[0] - (frameState.size[0] * resolution) / 2,\n      center[1] - (frameState.size[1] * resolution) / 2,\n      center[0] + (frameState.size[0] * resolution) / 2,\n      center[1] + (frameState.size[1] * resolution) / 2,\n    ];\n    frameState.time = Date.now();\n\n    const viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  }\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  allSourcesReady_() {\n    let ready = true;\n    let source;\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      source = this.layers_[i].getSource();\n      if (!source || source.getState() !== 'ready') {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    this.tileQueue_.loadMoreTiles(16, 16);\n\n    resolution = this.findNearestResolution(resolution);\n    const frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      const renderedResolution = this.renderedImageCanvas_.getResolution();\n      const renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (\n        resolution !== renderedResolution ||\n        !equals(frameState.extent, renderedExtent)\n      ) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (\n      !this.renderedImageCanvas_ ||\n      this.getRevision() !== this.renderedRevision_\n    ) {\n      this.processSources_();\n    }\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  }\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  processSources_() {\n    const frameState = this.requestedFrameState_;\n    const len = this.layers_.length;\n    const imageDatas = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      frameState.layerIndex = i;\n      frameState.renderTargets = {};\n      const imageData = getImageData(this.layers_[i], frameState);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    const data = {};\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data)\n    );\n    this.processor_.process(\n      imageDatas,\n      data,\n      this.onWorkerComplete_.bind(this, frameState)\n    );\n  }\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object|Array<Object>} data The user data (or an array if more than one thread).\n   * @private\n   */\n  onWorkerComplete_(frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    if (\n      resolution !== this.requestedFrameState_.viewState.resolution ||\n      !equals(extent, this.requestedFrameState_.extent)\n    ) {\n      return;\n    }\n\n    let context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      const width = Math.round(getWidth(extent) / resolution);\n      const height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(\n        extent,\n        resolution,\n        1,\n        context.canvas\n      );\n    }\n    context.putImageData(output, 0, 0);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    } else {\n      this.changed();\n    }\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data)\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    if (!this.useResolutions_) {\n      return null;\n    }\n    let resolutions = super.getResolutions();\n    if (!resolutions) {\n      for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n        const source = this.layers_[i].getSource();\n        resolutions = source.getResolutions(projection);\n        if (resolutions) {\n          break;\n        }\n      }\n    }\n    return resolutions;\n  }\n\n  disposeInternal() {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n    super.disposeInternal();\n  }\n}\n\n/**\n * Clean up and unregister the worker.\n * @function\n * @api\n */\nRasterSource.prototype.dispose;\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nlet sharedContext = null;\n\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState) {\n  const renderer = layer.getRenderer();\n  if (!renderer) {\n    throw new Error('Unsupported layer type: ' + layer);\n  }\n\n  if (!renderer.prepareFrame(frameState)) {\n    return null;\n  }\n  const width = frameState.size[0];\n  const height = frameState.size[1];\n  if (width === 0 || height === 0) {\n    return null;\n  }\n  const container = renderer.renderFrame(frameState, null);\n  let element;\n  if (container instanceof HTMLCanvasElement) {\n    element = container;\n  } else {\n    if (container) {\n      element = container.firstElementChild;\n    }\n    if (!(element instanceof HTMLCanvasElement)) {\n      throw new Error('Unsupported rendered element: ' + element);\n    }\n    if (element.width === width && element.height === height) {\n      const context = element.getContext('2d');\n      return context.getImageData(0, 0, width, height);\n    }\n  }\n\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height, undefined, {\n      willReadFrequently: true,\n    });\n  } else {\n    const canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height, undefined, {\n        willReadFrequently: true,\n      });\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  sharedContext.drawImage(element, 0, 0, width, height);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n  return layers.map(function (layer) {\n    return layer.getLayerState();\n  });\n}\n\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n  const len = sources.length;\n  const layers = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    layers[i] = createLayer(sources[i]);\n  }\n  return layers;\n}\n\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n  // @type {import(\"../layer/Layer.js\").default}\n  let layer;\n  if (layerOrSource instanceof Source) {\n    if (layerOrSource instanceof TileSource) {\n      layer = new TileLayer({source: layerOrSource});\n    } else if (layerOrSource instanceof ImageSource) {\n      layer = new ImageLayer({source: layerOrSource});\n    }\n  } else {\n    layer = layerOrSource;\n  }\n  return layer;\n}\n\nexport default RasterSource;\n","/**\n * @module ol/source/StadiaMaps\n */\n\nimport XYZ from './XYZ.js';\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from './OSM.js';\n\n/**\n * @const\n * @type string\n */\nconst STADIA_ATTRIBUTION =\n  '&copy; <a href=\"https://www.stadiamaps.com/\" target=\"_blank\">Stadia Maps</a>';\n\n/**\n * @const\n * @type string\n */\nconst OMT_ATTRIBUTION =\n  '&copy; <a href=\"https://openmaptiles.org/\" target=\"_blank\">OpenMapTiles</a>';\n\n/**\n * @const\n * @type string\n */\nconst STAMEN_ATTRIBUTION =\n  '&copy; <a href=\"https://stamen.com/\" target=\"_blank\">Stamen Design</a>';\n\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nconst LayerConfig = {\n  'stamen_terrain': {\n    extension: 'png',\n    opaque: true,\n  },\n  'stamen_terrain_background': {\n    extension: 'png',\n    opaque: true,\n  },\n  'stamen_terrain_labels': {\n    extension: 'png',\n    opaque: false,\n  },\n  'stamen_terrain_lines': {\n    extension: 'png',\n    opaque: false,\n  },\n  'stamen_toner_background': {\n    extension: 'png',\n    opaque: true,\n  },\n  'stamen_toner': {\n    extension: 'png',\n    opaque: true,\n  },\n  'stamen_toner_labels': {\n    extension: 'png',\n    opaque: false,\n  },\n  'stamen_toner_lines': {\n    extension: 'png',\n    opaque: false,\n  },\n  'stamen_toner_lite': {\n    extension: 'png',\n    opaque: true,\n  },\n  'stamen_watercolor': {\n    extension: 'jpg',\n    opaque: true,\n  },\n  'alidade_smooth': {\n    extension: 'png',\n    opaque: true,\n  },\n  'alidade_smooth_dark': {\n    extension: 'png',\n    opaque: true,\n  },\n  'outdoors': {\n    extension: 'png',\n    opaque: true,\n  },\n  'osm_bright': {\n    extension: 'png',\n    opaque: true,\n  },\n};\n\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number, retina: boolean}>}\n */\nconst ProviderConfig = {\n  'stamen_terrain': {\n    minZoom: 0,\n    maxZoom: 18,\n    retina: true,\n  },\n  'stamen_toner': {\n    minZoom: 0,\n    maxZoom: 20,\n    retina: true,\n  },\n  'stamen_watercolor': {\n    minZoom: 1,\n    maxZoom: 18,\n    retina: false,\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {string} layer Layer name. Valid values: `alidade_smooth`, `alidade_smooth_dark`, `outdoors`, `stamen_terrain`, `stamen_terrain_background`, `stamen_terrain_labels`, `stamen_terrain_lines`, `stamen_toner_background`, `stamen_toner`, `stamen_toner_labels`, `stamen_toner_lines`, `stamen_toner_lite`, `stamen_watercolor`, and `osm_bright`.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n * @property {string} [apiKey] Stadia Maps API key. Not required for localhost or most public web deployments. See https://docs.stadiamaps.com/authentication/ for details.\n * @property {boolean} [retina] Use retina tiles (if available; not available for Stamen Watercolor).\n */\n\n/**\n * @classdesc\n * Layer source for the Stadia Maps tile server.\n * @api\n */\nclass StadiaMaps extends XYZ {\n  /**\n   * @param {Options} options StadiaMaps options.\n   */\n  constructor(options) {\n    const i = options.layer.indexOf('-');\n    const provider = i == -1 ? options.layer : options.layer.slice(0, i);\n    const providerConfig = ProviderConfig[provider] || {\n      'minZoom': 0,\n      'maxZoom': 20,\n      'retina': true,\n    };\n\n    const layerConfig = LayerConfig[options.layer];\n    const query = options.apiKey ? '?api_key=' + options.apiKey : '';\n    const retina = providerConfig.retina && options.retina ? '@2x' : '';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tiles.stadiamaps.com/tiles/' +\n          options.layer +\n          '/{z}/{x}/{y}' +\n          retina +\n          '.' +\n          layerConfig.extension +\n          query;\n\n    const attributions = [STADIA_ATTRIBUTION, OMT_ATTRIBUTION, OSM_ATTRIBUTION];\n\n    if (options.layer.startsWith('stamen_')) {\n      attributions.splice(1, 0, STAMEN_ATTRIBUTION);\n    }\n\n    super({\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: options.interpolate,\n      maxZoom:\n        options.maxZoom !== undefined\n          ? options.maxZoom\n          : providerConfig.maxZoom,\n      minZoom:\n        options.minZoom !== undefined\n          ? options.minZoom\n          : providerConfig.minZoom,\n      opaque: layerConfig.opaque,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      tilePixelRatio: retina ? 2 : 1,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default StadiaMaps;\n","/**\n * @module ol/source/TileArcGISRest\n */\n\nimport TileImage from './TileImage.js';\nimport {createEmpty} from '../extent.js';\nimport {getRequestUrl} from './arcgisRest.js';\nimport {modulo} from '../math.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\n * default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`,\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\n * override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * The projection code must contain a numeric end portion separated by :\n * or the entire code must form a valid ArcGIS SpatialReference definition.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\n * The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\n * url should include /MapServer or /ImageServer.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\n * transition, pass `transition: 0`.\n * @property {Array<string>} [urls] ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\n * Service supports multiple urls for export requests.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from ArcGIS Rest services. Map and Image\n * Services are supported.\n *\n * For cached ArcGIS services, better performance is available using the\n * {@link module:ol/source/XYZ~XYZ} data source.\n * @api\n */\nclass TileArcGISRest extends TileImage {\n  /**\n   * @param {Options} [options] Tile ArcGIS Rest options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(\n    tileCoord,\n    tileSize,\n    tileExtent,\n    pixelRatio,\n    projection,\n    params\n  ) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n\n    return getRequestUrl(\n      url,\n      tileExtent,\n      (\n        this.tileGrid || this.getTileGridForProjection(projection)\n      ).getResolution(tileCoord[0]),\n      pixelRatio,\n      projection,\n      params\n    );\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.hidpi_ ? pixelRatio : 1;\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && !this.hidpi_) {\n      pixelRatio = 1;\n    }\n\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    // Apply default params and override with user specified values.\n    const baseParams = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true,\n    };\n    Object.assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams\n    );\n  }\n}\n\nexport default TileArcGISRest;\n","/**\n * @module ol/source/TileDebug\n */\n\nimport XYZ from './XYZ.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Optional projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Set to `1` when debugging `VectorTile` sources with a default configuration.\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n * @property {string} [template='z:{z} x:{x} y:{y}'] Template for labeling the tiles.\n * Should include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n */\n\n/**\n * @classdesc\n * A pseudo tile source, which does not fetch tiles from a server, but renders\n * a grid outline for the tile grid/projection along with the coordinates for\n * each tile. See examples/canvas-tiles for an example.\n * @api\n */\nclass TileDebug extends XYZ {\n  /**\n   * @param {Options} [options] Debug tile options.\n   */\n  constructor(options) {\n    /**\n     * @type {Options}\n     */\n    options = options || {};\n\n    super({\n      opaque: false,\n      projection: options.projection,\n      tileGrid: options.tileGrid,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      zDirection: options.zDirection,\n      url: options.template || 'z:{z} x:{x} y:{y}',\n      tileLoadFunction: (tile, text) => {\n        const z = tile.getTileCoord()[0];\n        const tileSize = toSize(this.tileGrid.getTileSize(z));\n        const context = createCanvasContext2D(tileSize[0], tileSize[1]);\n\n        context.strokeStyle = 'grey';\n        context.strokeRect(0.5, 0.5, tileSize[0] + 0.5, tileSize[1] + 0.5);\n\n        context.fillStyle = 'grey';\n        context.strokeStyle = 'white';\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.font = '24px sans-serif';\n        context.lineWidth = 4;\n        context.strokeText(text, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n        context.fillText(text, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n\n        /** @type {import(\"../ImageTile.js\").default} */ (tile).setImage(\n          context.canvas\n        );\n      },\n    });\n  }\n}\n\nexport default TileDebug;\n","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See https://mapbox.com/developers/api/.\n */\n\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Note: `tileSize` and other non-standard TileJSON properties are currently ignored.\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nclass TileJSON extends TileImage {\n  /**\n   * @param {Options} options TileJSON options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @type {Config}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     * @private\n     */\n    this.tileSize_ = options.tileSize;\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this)\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      throw new Error('Either `url` or `tileJSON` options must be provided');\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {Config} */ (JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * @return {Config} The tilejson object.\n   * @api\n   */\n  getTileJSON() {\n    return this.tileJSON_;\n  }\n\n  /**\n   * @protected\n   * @param {Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n      tileSize: this.tileSize_,\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n\n    if (tileJSON['attribution'] && !this.getAttributions()) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState('ready');\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n}\n\nexport default TileJSON;\n","/**\n * @module ol/source/TileWMS\n */\n\nimport TileImage from './TileImage.js';\nimport {DEFAULT_VERSION, getImageSrc, getRequestParams} from './wms.js';\nimport {appendParams} from '../uri.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {compareVersions} from '../string.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport {modulo} from '../math.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See https://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nclass TileWMS extends TileImage {\n  /**\n   * @param {Options} [options] Tile WMS options.\n   */\n  constructor(options) {\n    options = options ? options : /** @type {Options} */ ({});\n\n    const params = Object.assign({}, options.params);\n\n    const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: !transparent,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection() || projectionObj;\n\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(sourceProjectionObj);\n    }\n\n    const sourceProjCoord = transform(\n      coordinate,\n      projectionObj,\n      sourceProjectionObj\n    );\n    const sourceResolution = calculateSourceResolution(\n      sourceProjectionObj,\n      projectionObj,\n      coordinate,\n      resolution\n    );\n\n    const z = tileGrid.getZForResolution(sourceResolution, this.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n    const tileCoord = tileGrid.getTileCoordForCoordAndZ(sourceProjCoord, z);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    const baseParams = {\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    Object.assign(\n      baseParams,\n      getRequestParams(this.params_, 'GetFeatureInfo'),\n      params\n    );\n\n    const x = Math.floor((sourceProjCoord[0] - tileExtent[0]) / tileResolution);\n    const y = Math.floor((tileExtent[3] - sourceProjCoord[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileExtent,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.urls[0] === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    Object.assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.urls[0]), baseParams);\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(tileCoord, tileExtent, pixelRatio, projection, params) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n\n    return getImageSrc(\n      tileExtent,\n      (\n        this.tileGrid || this.getTileGridForProjection(projection)\n      ).getResolution(tileCoord[0]),\n      pixelRatio,\n      projection,\n      url,\n      params,\n      this.serverType_\n    );\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return !this.hidpi_ || this.serverType_ === undefined ? 1 : pixelRatio;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    const baseParams = Object.assign(\n      {},\n      getRequestParams(this.params_, 'GetMap')\n    );\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams\n    );\n  }\n}\n\nexport default TileWMS;\n","/**\n * @module ol/source/UTFGrid\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileSource from './Tile.js';\nimport TileState from '../TileState.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {listenOnce} from '../events.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @typedef {Object} UTFGridJSON\n * @property {Array<string>} grid The grid.\n * @property {Array<string>} keys The keys.\n * @property {Object<string, Object>} [data] Optional data.\n */\n\nexport class CustomTile extends Tile {\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {import(\"../extent.js\").Extent} extent Extent of the tile.\n   * @param {boolean} preemptive Load the tile when visible (before it's needed).\n   * @param {boolean} jsonp Load the tile as a script.\n   */\n  constructor(tileCoord, state, src, extent, preemptive, jsonp) {\n    super(tileCoord, state);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = preemptive;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.grid_ = null;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.keys_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Object>|undefined}\n     */\n    this.data_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = jsonp;\n  }\n\n  /**\n   * Get the image element for this tile.\n   * @return {HTMLImageElement} Image.\n   */\n  getImage() {\n    return null;\n  }\n\n  /**\n   * Synchronously returns data at given coordinate (if available).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {*} The data.\n   */\n  getData(coordinate) {\n    if (!this.grid_ || !this.keys_) {\n      return null;\n    }\n    const xRelative =\n      (coordinate[0] - this.extent_[0]) / (this.extent_[2] - this.extent_[0]);\n    const yRelative =\n      (coordinate[1] - this.extent_[1]) / (this.extent_[3] - this.extent_[1]);\n\n    const row = this.grid_[Math.floor((1 - yRelative) * this.grid_.length)];\n\n    if (typeof row !== 'string') {\n      return null;\n    }\n\n    let code = row.charCodeAt(Math.floor(xRelative * row.length));\n    if (code >= 93) {\n      code--;\n    }\n    if (code >= 35) {\n      code--;\n    }\n    code -= 32;\n\n    let data = null;\n    if (code in this.keys_) {\n      const id = this.keys_[code];\n      if (this.data_ && id in this.data_) {\n        data = this.data_[id];\n      } else {\n        data = id;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate (or `null` if not yet loaded).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(*): void} callback Callback.\n   * @param {boolean} [request] If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   */\n  forDataAtCoordinate(coordinate, callback, request) {\n    if (this.state == TileState.EMPTY && request === true) {\n      this.state = TileState.IDLE;\n      listenOnce(\n        this,\n        EventType.CHANGE,\n        function (e) {\n          callback(this.getData(coordinate));\n        },\n        this\n      );\n      this.loadInternal_();\n    } else {\n      if (request === true) {\n        setTimeout(() => {\n          callback(this.getData(coordinate));\n        }, 0);\n      } else {\n        callback(this.getData(coordinate));\n      }\n    }\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.src_;\n  }\n\n  /**\n   * @private\n   */\n  handleError_() {\n    this.state = TileState.ERROR;\n    this.changed();\n  }\n\n  /**\n   * @param {!UTFGridJSON} json UTFGrid data.\n   * @private\n   */\n  handleLoad_(json) {\n    this.grid_ = json['grid'];\n    this.keys_ = json['keys'];\n    this.data_ = json['data'];\n\n    this.state = TileState.LOADED;\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  loadInternal_() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      if (this.jsonp_) {\n        requestJSONP(\n          this.src_,\n          this.handleLoad_.bind(this),\n          this.handleError_.bind(this)\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', this.src_);\n        client.send();\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {!UTFGridJSON} */ (\n          JSON.parse(client.responseText)\n        );\n      } catch (err) {\n        this.handleError_();\n        return;\n      }\n      this.handleLoad_(response);\n    } else {\n      this.handleError_();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleError_();\n  }\n\n  /**\n   */\n  load() {\n    if (this.preemptive_) {\n      this.loadInternal_();\n    } else {\n      this.setState(TileState.EMPTY);\n    }\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [preemptive=true]\n * If `true` the UTFGrid source loads the tiles based on their \"visibility\".\n * This improves the speed of response, but increases traffic.\n * Note that if set to `false` (lazy loading), you need to pass `true` as\n * `request` to the `forDataAtCoordinateAndResolution` method otherwise no\n * data will ever be loaded.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {import(\"./TileJSON.js\").Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {string} [url] TileJSON endpoint that provides the configuration for this source.\n * Request will be made through JSONP. If not provided, `tileJSON` must be configured.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for UTFGrid interaction data loaded from TileJSON format.\n * @api\n */\nclass UTFGrid extends TileSource {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super({\n      projection: getProjection('EPSG:3857'),\n      state: 'loading',\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ =\n      options.preemptive !== undefined ? options.preemptive : true;\n\n    /**\n     * @private\n     * @type {!import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction_ = nullTileUrlFunction;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.template_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = options.jsonp || false;\n\n    if (options.url) {\n      if (this.jsonp_) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this)\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      throw new Error('Either `url` or `tileJSON` options must be provided');\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {import(\"./TileJSON.js\").Config} */ (\n          JSON.parse(client.responseText)\n        );\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * Return the template from TileJSON.\n   * @return {string|undefined} The template from TileJSON.\n   * @api\n   */\n  getTemplate() {\n    return this.template_;\n  }\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate and resolution (or `null` if not yet loaded or\n   * in case of an error).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {function(*): void} callback Callback.\n   * @param {boolean} [request] If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   * @api\n   */\n  forDataAtCoordinateAndResolution(coordinate, resolution, callback, request) {\n    if (this.tileGrid) {\n      const z = this.tileGrid.getZForResolution(resolution, this.zDirection);\n      const tileCoord = this.tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = /** @type {!CustomTile} */ (\n        this.getTile(\n          tileCoord[0],\n          tileCoord[1],\n          tileCoord[2],\n          1,\n          this.getProjection()\n        )\n      );\n      tile.forDataAtCoordinate(coordinate, callback, request);\n    } else {\n      if (request === true) {\n        setTimeout(function () {\n          callback(null);\n        }, 0);\n      } else {\n        callback(null);\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n\n  /**\n   * TODO: very similar to ol/source/TileJSON#handleTileJSONResponse\n   * @protected\n   * @param {import(\"./TileJSON.js\").Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n    });\n    this.tileGrid = tileGrid;\n\n    this.template_ = tileJSON['template'];\n\n    const grids = tileJSON['grids'];\n    if (!grids) {\n      this.setState('error');\n      return;\n    }\n\n    this.tileUrlFunction_ = createFromTemplates(grids, tileGrid);\n\n    if (tileJSON['attribution'] !== undefined) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n\n    this.setState('ready');\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!CustomTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return this.tileCache.get(tileCoordKey);\n    }\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = this.tileUrlFunction_(urlTileCoord, pixelRatio, projection);\n    const tile = new CustomTile(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.tileGrid.getTileCoordExtent(tileCoord),\n      this.preemptive_,\n      this.jsonp_\n    );\n    this.tileCache.set(tileCoordKey, tile);\n    return tile;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UTFGrid;\n","/**\n * @module ol/source/WMTS\n */\n\nimport TileImage from './TileImage.js';\nimport {appendParams} from '../uri.js';\nimport {containsExtent} from '../extent.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {createFromTileUrlFunctions, expandUrl} from '../tileurlfunction.js';\nimport {equivalent, get as getProjection, transformExtent} from '../proj.js';\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @typedef {'KVP' | 'REST'} RequestEncoding\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {RequestEncoding} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nclass WMTS extends TileImage {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    // TODO: add support for TileMatrixLimits\n\n    const requestEncoding =\n      options.requestEncoding !== undefined ? options.requestEncoding : 'KVP';\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    const tileGrid = options.tileGrid;\n\n    let urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ =\n      options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {RequestEncoding}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      );\n    }\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @param {Array<string>} urls URLs.\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    this.setTileUrlFunction(\n      createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      ),\n      key\n    );\n  }\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  getDimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  getMatrixSet() {\n    return this.matrixSet_;\n  }\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {RequestEncoding} Request encoding.\n   * @api\n   */\n  getRequestEncoding() {\n    return this.requestEncoding_;\n  }\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  getVersion() {\n    return this.version_;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  getKeyForDimensions_() {\n    const res = this.urls ? this.urls.slice(0) : [];\n    for (const key in this.dimensions_) {\n      res.push(key + '-' + this.dimensions_[key]);\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  updateDimensions(dimensions) {\n    Object.assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  }\n\n  /**\n   * @param {string} template Template.\n   * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n   */\n  createFromWMTSTemplate(template) {\n    const requestEncoding = this.requestEncoding_;\n\n    // context property names are lower case to allow for a case insensitive\n    // replacement as some services use different naming conventions\n    const context = {\n      'layer': this.layer_,\n      'style': this.style_,\n      'tilematrixset': this.matrixSet_,\n    };\n\n    if (requestEncoding == 'KVP') {\n      Object.assign(context, {\n        'Service': 'WMTS',\n        'Request': 'GetTile',\n        'Version': this.version_,\n        'Format': this.format_,\n      });\n    }\n\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n\n    template =\n      requestEncoding == 'KVP'\n        ? appendParams(template, context)\n        : template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return p.toLowerCase() in context ? context[p.toLowerCase()] : m;\n          });\n\n    const tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (\n      this.tileGrid\n    );\n    const dimensions = this.dimensions_;\n\n    return (\n      /**\n       * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {import(\"../proj/Projection.js\").default} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        }\n        const localContext = {\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n          'TileCol': tileCoord[1],\n          'TileRow': tileCoord[2],\n        };\n        Object.assign(localContext, dimensions);\n        let url = template;\n        if (requestEncoding == 'KVP') {\n          url = appendParams(url, localContext);\n        } else {\n          url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return localContext[p];\n          });\n        }\n        return url;\n      }\n    );\n  }\n}\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {Options|null} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = layers.find(function (elt) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (!l) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        const tileMatrixSet = tileMatrixSets.find(function (el) {\n          return el['Identifier'] == elt['TileMatrixSet'];\n        });\n        const supportedCRS = tileMatrixSet['SupportedCRS'];\n        const proj1 = getProjection(supportedCRS);\n        const proj2 = getProjection(config['projection']);\n        if (proj1 && proj2) {\n          return equivalent(proj1, proj2);\n        }\n        return supportedCRS == config['projection'];\n      });\n    } else {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        return elt['TileMatrixSet'] == config['matrixSet'];\n      });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet =\n    /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits =\n    /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = l['Style'].findIndex(function (elt) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    }\n    return elt['isDefault'];\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function (elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = matrixSets.find(function (elt) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  let wrapX = false;\n  const switchXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  let matrix = matrixSetObj.TileMatrix[0];\n\n  // create default matrixLimit\n  let selectedMatrixLimit = {\n    MinTileCol: 0,\n    MinTileRow: 0,\n    // subtract one to end up at tile top left\n    MaxTileCol: matrix.MatrixWidth - 1,\n    MaxTileRow: matrix.MatrixHeight - 1,\n  };\n\n  //in case of matrix limits, use matrix limits to calculate extent\n  if (matrixLimits) {\n    selectedMatrixLimit = matrixLimits[matrixLimits.length - 1];\n    const m = matrixSetObj.TileMatrix.find(\n      (tileMatrixValue) =>\n        tileMatrixValue.Identifier === selectedMatrixLimit.TileMatrix ||\n        matrixSetObj.Identifier + ':' + tileMatrixValue.Identifier ===\n          selectedMatrixLimit.TileMatrix\n    );\n    if (m) {\n      matrix = m;\n    }\n  }\n\n  const resolution =\n    (matrix.ScaleDenominator * 0.00028) / projection.getMetersPerUnit(); // WMTS 1.0.0: standardized rendering pixel size\n  const origin = switchXY\n    ? [matrix.TopLeftCorner[1], matrix.TopLeftCorner[0]]\n    : matrix.TopLeftCorner;\n  const tileSpanX = matrix.TileWidth * resolution;\n  const tileSpanY = matrix.TileHeight * resolution;\n  let matrixSetExtent = matrixSetObj['BoundingBox'];\n  if (matrixSetExtent && switchXY) {\n    matrixSetExtent = [\n      matrixSetExtent[1],\n      matrixSetExtent[0],\n      matrixSetExtent[3],\n      matrixSetExtent[2],\n    ];\n  }\n  let extent = [\n    origin[0] + tileSpanX * selectedMatrixLimit.MinTileCol,\n    // add one to get proper bottom/right coordinate\n    origin[1] - tileSpanY * (1 + selectedMatrixLimit.MaxTileRow),\n    origin[0] + tileSpanX * (1 + selectedMatrixLimit.MaxTileCol),\n    origin[1] - tileSpanY * selectedMatrixLimit.MinTileRow,\n  ];\n\n  if (\n    matrixSetExtent !== undefined &&\n    !containsExtent(matrixSetExtent, extent)\n  ) {\n    const wgs84BoundingBox = l['WGS84BoundingBox'];\n    const wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    extent = matrixSetExtent;\n    if (wgs84BoundingBox) {\n      wrapX =\n        wgs84BoundingBox[0] === wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] === wgs84ProjectionExtent[2];\n    } else {\n      const wgs84MatrixSetExtent = transformExtent(\n        matrixSetExtent,\n        matrixSetObj['SupportedCRS'],\n        'EPSG:4326'\n      );\n      // Ignore slight deviation from the correct x limits\n      wrapX =\n        wgs84MatrixSetExtent[0] - 1e-10 <= wgs84ProjectionExtent[0] &&\n        wgs84MatrixSetExtent[2] + 1e-10 >= wgs84ProjectionExtent[2];\n    }\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(\n    matrixSetObj,\n    extent,\n    matrixLimits\n  );\n\n  /** @type {!Array<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if (\n    'OperationsMetadata' in wmtsCap &&\n    'GetTile' in wmtsCap['OperationsMetadata']\n  ) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = gets[i]['Constraint'].find(function (element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === 'KVP') {\n          if (encodings.includes('KVP')) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = 'KVP';\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = 'REST';\n    l['ResourceURL'].forEach(function (element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin'],\n  };\n}\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml.makeChildAppender} or\n * {@link module:ol/xml.makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Element} node Node.\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        let array;\n        if (name in object) {\n          array = object[name];\n        } else {\n          array = [];\n          object[name] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        object[name] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, thisArg) {\n  return function (node, value, objectStack) {\n    nodeWriter.call(\n      thisArg !== undefined ? thisArg : this,\n      node,\n      value,\n      objectStack\n    );\n    const parent = /** @type {NodeStackItem} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml.serialize}. This can be used by the parent writer to have the\n * `nodeWriter` called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, thisArg) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `keys` passed to\n * {@link module:ol/xml.serialize} or {@link module:ol/xml.pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [fixedNodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [fixedNamespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(fixedNodeName, fixedNamespaceURI) {\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [newNodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, newNodeName) {\n      const context = /** @type {NodeStackItem} */ (\n        objectStack[objectStack.length - 1]\n      );\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = newNodeName;\n      }\n\n      const namespaceURI =\n        fixedNamespaceURI !== undefined ? fixedNamespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, structureNS) {\n  structureNS = structureNS !== undefined ? structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, thisArg) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(thisArg, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, thisArg) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, thisArg);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg\n) {\n  const length = (keys !== undefined ? keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        thisArg !== undefined ? thisArg : this,\n        value,\n        objectStack,\n        keys !== undefined ? keys[i] : undefined\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          thisArg,\n          node,\n          value,\n          objectStack\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg\n) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, keys, thisArg);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n","/**\n * @module ol/vec/mat4\n */\n\n/**\n * @return {Array<number>} \"4x4 matrix representing a 3D identity transform.\"\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} \"2D transformation matrix as flattened 4x4 matrix.\"\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvases_;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvases_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvases_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvases_ = {};\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n * @param {string} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image instanceof HTMLImageElement ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time'\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided'\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`'\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if (image instanceof HTMLImageElement) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`'\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/style/flat\n */\n\n/**\n * @api\n * @fileoverview Vector layers can be styled with an object literal containing properties for\n * stroke, fill, image, and text styles.  The types below can be composed into a single object.\n * For example, a style with both stroke and fill properties could look like this:\n *\n *     const style = {\n *       'stroke-color': 'yellow',\n *       'stroke-width': 1.5,\n *       'fill-color': 'orange',\n *     };\n *\n * See details about the available properties depending on what type of symbolizer should be applied:\n *  * {@link module:ol/style/flat~FlatStroke Stroke} - properties for applying a stroke to lines and polygons\n *  * {@link module:ol/style/flat~FlatFill Fill} - properties for filling polygons\n *  * {@link module:ol/style/flat~FlatText Text} - properties for labeling points, lines, and polygons\n *  * {@link module:ol/style/flat~FlatIcon Icon} - properties for rendering points with an icon\n *  * {@link module:ol/style/flat~FlatCircle Circle} - properties for rendering points with a circle\n *  * {@link module:ol/style/flat~FlatShape Shape} - properties for rendering points with a regular shape\n *\n * To conditionally apply styles based on a filter, a list of {@link module:ol/style/flat~Rule rules} can be used.\n * For example, to style points with a big orange circle if the population is greater than 1 million and\n * a smaller blue circle otherwise:\n *\n *     const rules = [\n *       {\n *         filter: ['>', ['get', 'population'], 1_000_000],\n *         style: {\n *           'circle-radius': 10,\n *           'circle-fill-color': 'red',\n *         }\n *       },\n *       {\n *         else: true,\n *         style: {\n *           'circle-radius': 5,\n *           'circle-fill-color': 'blue',\n *         },\n *       },\n *     ];\n */\n\n/**\n * A literal boolean (e.g. `true`) or an expression that evaluates to a boolean (e.g. `['>', ['get', 'population'], 1_000_000]`).\n *\n * @typedef {boolean|Array} BooleanExpression\n */\n\n/**\n * A literal string (e.g. `'hello'`) or an expression that evaluates to a string (e.g. `['get', 'greeting']`).\n *\n * @typedef {string|Array} StringExpression\n */\n\n/**\n * A literal number (e.g. `42`) or an expression that evaluates to a number (e.g. `['+', 40, 2]`).\n *\n * @typedef {number|Array} NumberExpression\n */\n\n/**\n * A CSS named color (e.g. `'blue'`), an array of 3 RGB values (e.g. `[0, 255, 0]`), an array of 4 RGBA values\n * (e.g. `[0, 255, 0, 0.5]`), or an expression that evaluates to one of these color types (e.g. `['get', 'color']`).\n *\n * @typedef {import(\"../color.js\").Color|string|Array} ColorExpression\n */\n\n/**\n * An array of numbers (e.g. `[1, 2, 3]`) or an expression that evaluates to the same (e.g. `['get', 'values']`).\n *\n * @typedef {Array<number>|Array} NumberArrayExpression\n */\n\n/**\n * An array of two numbers (e.g. `[10, 20]`) or an expression that evaluates to the same (e.g. `['get', 'size']`).\n *\n * @typedef {number|Array<number>|Array} SizeExpression\n */\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>|Array<Rule>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {ColorExpression} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {ColorExpression} [stroke-color] The stroke color.\n * @property {NumberExpression} [stroke-width] Stroke pixel width.\n * @property {StringExpression} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {StringExpression} [text-value] Text content (with `\\n` for line breaks).\n * @property {StringExpression} [text-font='10px sans-serif'] Font style as [CSS `font`](https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font) value.\n * @property {NumberExpression} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {NumberExpression} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {NumberExpression} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {BooleanExpression} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {StringExpression} [text-placement='point'] Text placement.\n * @property {NumberExpression} [text-repeat] Repeat interval in pixels. When set, the text will be repeated at this interval. Only available when\n * `text-placement` is set to `'line'`. Overrides `text-align`.\n * @property {SizeExpression} [text-scale] Scale.\n * @property {BooleanExpression} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {NumberExpression} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {StringExpression} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `'text-placement': 'point'`. For `'text-placement': 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {StringExpression} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `'text-placement': 'line'`.\n * @property {StringExpression} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {NumberArrayExpression} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {ColorExpression} [text-fill-color] The fill color. Specify `'none'` to avoid hit detection on the fill.\n * @property {ColorExpression} [text-background-fill-color] The fill color.\n * @property {ColorExpression} [text-stroke-color] The stroke color.\n * @property {StringExpression} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [text-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [text-stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [text-stroke-width] Stroke pixel width.\n * @property {ColorExpression} [text-background-stroke-color] The stroke color.\n * @property {StringExpression} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [text-background-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [text-background-stroke-width] Stroke pixel width.\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Icon style properties applied to point features. `icon-src` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {NumberArrayExpression} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {NumberArrayExpression} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {NumberExpression} [icon-opacity=1] Opacity of the icon.\n * @property {SizeExpression} [icon-scale=1] Scale.\n * @property {number} [icon-width] Width of the icon. If not specified, the actual image width will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-height] Height of the icon. If not specified, the actual image height will be used. Cannot be combined\n * with `scale`.\n * @property {NumberExpression} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {BooleanExpression} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {ColorExpression} [shape-fill-color] The fill color.\n * @property {ColorExpression} [shape-stroke-color] The stroke color.\n * @property {NumberExpression} [shape-stroke-width] Stroke pixel width.\n * @property {StringExpression} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [shape-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {NumberArrayExpression} [shape-displacement=[0,0]] Displacement of the shape\n * @property {NumberExpression} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {BooleanExpression} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {SizeExpression} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {ColorExpression} [circle-fill-color] The fill color.\n * @property {ColorExpression} [circle-stroke-color] The stroke color.\n * @property {NumberExpression} [circle-stroke-width] Stroke pixel width.\n * @property {StringExpression} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [circle-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [circle-stroke-miter-limit=10] Miter limit.\n * @property {NumberArrayExpression} [circle-displacement=[0,0]] displacement\n * @property {SizeExpression} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {NumberExpression} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {BooleanExpression} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * These default style properties are applied when no other style is given.\n *\n * @typedef {Object} DefaultStyle\n * @property {string} fill-color `'rgba(255,255,255,0.4)'`\n * @property {string} stroke-color `'#3399CC'`\n * @property {number} stroke-width `1.25`\n * @property {number} circle-radius `5`\n * @property {string} circle-fill-color `'rgba(255,255,255,0.4)'`\n * @property {number} circle-stroke-width `1.25`\n * @property {string} circle-stroke-color `'#3399CC'`\n */\n\n/**\n * @return {DefaultStyle} The default flat style.\n */\nexport function createDefaultStyle() {\n  return {\n    'fill-color': 'rgba(255,255,255,0.4)',\n    'stroke-color': '#3399CC',\n    'stroke-width': 1.25,\n    'circle-radius': 5,\n    'circle-fill-color': 'rgba(255,255,255,0.4)',\n    'circle-stroke-width': 1.25,\n    'circle-stroke-color': '#3399CC',\n  };\n}\n\n/**\n * A rule is used to conditionally apply a style.  If the rule's filter evaluates to true,\n * the style will be applied.\n *\n * @typedef {Object} Rule\n * @property {FlatStyle|Array<FlatStyle>} style The style to be applied if the filter matches.\n * @property {import(\"../expr/expression.js\").EncodedExpression} [filter] The filter used\n * to determine if a style applies.  If no filter is included, the rule always applies\n * (unless it is an else rule).\n * @property {boolean} [else] If true, the rule applies only if no other previous rule applies.\n * If the else rule also has a filter, the rule will not apply if the filter does not match.\n */\n","/**\n * @module ol/structs/LinkedList\n */\n\n/**\n * @typedef {Object} Item\n * @property {Item} [prev] Previous.\n * @property {Item} [next] Next.\n * @property {?} data Data.\n */\n\n/**\n * @classdesc\n * Creates an empty linked list structure.\n */\nclass LinkedList {\n  /**\n   * @param {boolean} [circular] The last item is connected to the first one,\n   * and the first item to the last one. Default is true.\n   */\n  constructor(circular) {\n    /**\n     * @private\n     * @type {Item|undefined}\n     */\n    this.first_;\n\n    /**\n     * @private\n     * @type {Item|undefined}\n     */\n    this.last_;\n\n    /**\n     * @private\n     * @type {Item|undefined}\n     */\n    this.head_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.circular_ = circular === undefined ? true : circular;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.length_ = 0;\n  }\n\n  /**\n   * Inserts an item into the linked list right after the current one.\n   *\n   * @param {?} data Item data.\n   */\n  insertItem(data) {\n    /** @type {Item} */\n    const item = {\n      prev: undefined,\n      next: undefined,\n      data: data,\n    };\n\n    const head = this.head_;\n\n    //Initialize the list.\n    if (!head) {\n      this.first_ = item;\n      this.last_ = item;\n      if (this.circular_) {\n        item.next = item;\n        item.prev = item;\n      }\n    } else {\n      //Link the new item to the adjacent ones.\n      const next = head.next;\n      item.prev = head;\n      item.next = next;\n      head.next = item;\n      if (next) {\n        next.prev = item;\n      }\n\n      if (head === this.last_) {\n        this.last_ = item;\n      }\n    }\n    this.head_ = item;\n    this.length_++;\n  }\n\n  /**\n   * Removes the current item from the list. Sets the cursor to the next item,\n   * if possible.\n   */\n  removeItem() {\n    const head = this.head_;\n    if (head) {\n      const next = head.next;\n      const prev = head.prev;\n      if (next) {\n        next.prev = prev;\n      }\n      if (prev) {\n        prev.next = next;\n      }\n      this.head_ = next || prev;\n\n      if (this.first_ === this.last_) {\n        this.head_ = undefined;\n        this.first_ = undefined;\n        this.last_ = undefined;\n      } else if (this.first_ === head) {\n        this.first_ = this.head_;\n      } else if (this.last_ === head) {\n        this.last_ = prev ? this.head_.prev : this.head_;\n      }\n      this.length_--;\n    }\n  }\n\n  /**\n   * Sets the cursor to the first item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  firstItem() {\n    this.head_ = this.first_;\n    if (this.head_) {\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the cursor to the last item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  lastItem() {\n    this.head_ = this.last_;\n    if (this.head_) {\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the cursor to the next item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  nextItem() {\n    if (this.head_ && this.head_.next) {\n      this.head_ = this.head_.next;\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the next item's data without moving the cursor.\n   *\n   * @return {?} Item data.\n   */\n  getNextItem() {\n    if (this.head_ && this.head_.next) {\n      return this.head_.next.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the cursor to the previous item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  prevItem() {\n    if (this.head_ && this.head_.prev) {\n      this.head_ = this.head_.prev;\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the previous item's data without moving the cursor.\n   *\n   * @return {?} Item data.\n   */\n  getPrevItem() {\n    if (this.head_ && this.head_.prev) {\n      return this.head_.prev.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the current item's data.\n   *\n   * @return {?} Item data.\n   */\n  getCurrItem() {\n    if (this.head_) {\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the first item of the list. This only works for circular lists, and sets\n   * the last item accordingly.\n   */\n  setFirstItem() {\n    if (this.circular_ && this.head_) {\n      this.first_ = this.head_;\n      this.last_ = this.head_.prev;\n    }\n  }\n\n  /**\n   * Concatenates two lists.\n   * @param {LinkedList} list List to merge into the current list.\n   */\n  concat(list) {\n    if (list.head_) {\n      if (this.head_) {\n        const end = this.head_.next;\n        this.head_.next = list.first_;\n        list.first_.prev = this.head_;\n        end.prev = list.last_;\n        list.last_.next = end;\n        this.length_ += list.length_;\n      } else {\n        this.head_ = list.head_;\n        this.first_ = list.first_;\n        this.last_ = list.last_;\n        this.length_ = list.length_;\n      }\n      list.head_ = undefined;\n      list.first_ = undefined;\n      list.last_ = undefined;\n      list.length_ = 0;\n    }\n  }\n\n  /**\n   * Returns the current length of the list.\n   *\n   * @return {number} Length.\n   */\n  getLength() {\n    return this.length_;\n  }\n}\n\nexport default LinkedList;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    let render =\n      (replayGroup && !replayGroup.isEmpty()) ||\n      (declutterExecutorGroup && !declutterExecutorGroup.isEmpty());\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/renderer/canvas/VectorImageLayer\n */\nimport CanvasImageLayerRenderer from './ImageLayer.js';\nimport CanvasVectorLayerRenderer from './VectorLayer.js';\nimport EventType from '../../events/EventType.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport ImageState from '../../ImageState.js';\nimport RBush from 'rbush';\nimport ViewHint from '../../ViewHint.js';\nimport {apply, compose, create} from '../../transform.js';\nimport {fromResolutionLike} from '../../resolution.js';\nimport {getHeight, getWidth, isEmpty, scaleFromCenter} from '../../extent.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasVectorImageLayerRenderer extends CanvasImageLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorImage.js\").default} layer Vector image layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = new CanvasVectorLayerRenderer(layer);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.layerImageRatio_ = layer.getImageRatio();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToVectorPixelTransform_ = create();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.vectorRenderer_.dispose();\n    super.disposeInternal();\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.vectorRenderer_) {\n      return Promise.resolve([]);\n    }\n    const vectorPixel = apply(\n      this.coordinateToVectorPixelTransform_,\n      apply(this.renderedPixelToCoordinateTransform_, pixel.slice())\n    );\n    return this.vectorRenderer_.getFeatures(vectorPixel);\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    this.vectorRenderer_.handleFontsChanged();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const hints = frameState.viewHints;\n    const vectorRenderer = this.vectorRenderer_;\n    let renderedExtent = frameState.extent;\n    if (this.layerImageRatio_ !== 1) {\n      renderedExtent = renderedExtent.slice(0);\n      scaleFromCenter(renderedExtent, this.layerImageRatio_);\n    }\n    const width = getWidth(renderedExtent) / viewResolution;\n    const height = getHeight(renderedExtent) / viewResolution;\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      vectorRenderer.useContainer(null, null);\n      const context = vectorRenderer.context;\n      const layerState = frameState.layerStatesArray[frameState.layerIndex];\n      const imageLayerState = Object.assign({}, layerState, {opacity: 1});\n      const imageFrameState = /** @type {import(\"../../Map.js\").FrameState} */ (\n        Object.assign({}, frameState, {\n          declutterTree: new RBush(9),\n          extent: renderedExtent,\n          size: [width, height],\n          viewState: /** @type {import(\"../../View.js\").State} */ (\n            Object.assign({}, frameState.viewState, {\n              rotation: 0,\n            })\n          ),\n          layerStatesArray: [imageLayerState],\n          layerIndex: 0,\n        })\n      );\n      let emptyImage = true;\n      const image = new ImageCanvas(\n        renderedExtent,\n        viewResolution,\n        pixelRatio,\n        context.canvas,\n        function (callback) {\n          if (\n            vectorRenderer.prepareFrame(imageFrameState) &&\n            vectorRenderer.replayGroupChanged\n          ) {\n            vectorRenderer.clipping = false;\n            if (vectorRenderer.renderFrame(imageFrameState, null)) {\n              vectorRenderer.renderDeclutter(imageFrameState);\n              emptyImage = false;\n            }\n            callback();\n          }\n        }\n      );\n\n      image.addEventListener(EventType.CHANGE, () => {\n        if (image.getState() !== ImageState.LOADED) {\n          return;\n        }\n        this.image_ = emptyImage ? null : image;\n        const imagePixelRatio = image.getPixelRatio();\n        const renderedResolution =\n          (fromResolutionLike(image.getResolution()) * pixelRatio) /\n          imagePixelRatio;\n        this.renderedResolution = renderedResolution;\n        this.coordinateToVectorPixelTransform_ = compose(\n          this.coordinateToVectorPixelTransform_,\n          width / 2,\n          height / 2,\n          1 / renderedResolution,\n          -1 / renderedResolution,\n          0,\n          -viewState.center[0],\n          -viewState.center[1]\n        );\n      });\n      image.load();\n    }\n\n    if (this.image_) {\n      this.renderedPixelToCoordinateTransform_ =\n        frameState.pixelToCoordinateTransform.slice();\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   */\n  preRender() {}\n\n  /**\n   */\n  postRender() {}\n\n  /**\n   */\n  renderDeclutter() {}\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(\n        coordinate,\n        frameState,\n        hitTolerance,\n        callback,\n        matches\n      );\n    }\n    return super.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      callback,\n      matches\n    );\n  }\n}\n\nexport default CanvasVectorImageLayerRenderer;\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {isStringColor} from '../color.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * The following operators can be used:\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels.\n *   * `['get', 'attributeName', typeHint]` fetches a feature property value, similar to `feature.get('attributeName')`\n *     A type hint can optionally be specified, in case the resulting expression contains a type ambiguity which\n *     will make it invalid. Type hints can be one of: 'string', 'color', 'number', 'boolean', 'number[]'\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection\n *   * `['resolution']` returns the current resolution\n *   * `['time']` returns the time in seconds since the creation of the layer\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` returns the current zoom level\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4.\n *   * `['color', red, green, blue, alpha]` creates a `color` value from `number` values; the `alpha` parameter is\n *     optional; if not specified, it will be set to 1.\n *     Note: `red`, `green` and `blue` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range).\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {import(\"../style/flat.js\").FlatStyle|import(\"../style/webgl.js\").WebGLStyle} style The style being parsed\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    style: {},\n  };\n}\n\n/**\n * @param {string} typeHint Type hint\n * @return {number} Resulting value type (will be a single type)\n */\nfunction getTypeFromHint(typeHint) {\n  switch (typeHint) {\n    case 'string':\n      return StringType;\n    case 'color':\n      return ColorType;\n    case 'number':\n      return NumberType;\n    case 'boolean':\n      return BooleanType;\n    case 'number[]':\n      return NumberArrayType;\n    default:\n      throw new Error(`Unrecognized type hint: ${typeHint}`);\n  }\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context, typeHint) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      let type = StringType;\n      if (isStringColor(encoded)) {\n        type |= ColorType;\n      }\n      // apply the given type hint only if it won't result in an empty type\n      if (!isType(type & typeHint, NoneType)) {\n        type &= typeHint;\n      }\n      return new LiteralExpression(type, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context, typeHint);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n  if (typeHint) {\n    type &= typeHint;\n  }\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n};\n\n/**\n * @typedef {function(Array, ParsingContext, number):Expression} Parser\n * Third argument is a type hint\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createParser(\n    ([_, typeHint]) => {\n      if (typeHint !== undefined) {\n        return getTypeFromHint(\n          /** @type {string} */ (\n            /** @type {LiteralExpression} */ (typeHint).value\n          )\n        );\n      }\n      return AnyType;\n    },\n    withArgsCount(1, 2),\n    withGetArgs\n  ),\n  [Ops.Var]: createParser(\n    ([firstArg]) => firstArg.type,\n    withArgsCount(1, 1),\n    withVarArgs\n  ),\n  [Ops.Id]: createParser(NumberType | StringType, withNoArgs, usesFeatureId),\n  [Ops.Concat]: createParser(\n    StringType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType)\n  ),\n  [Ops.GeometryType]: createParser(StringType, withNoArgs),\n  [Ops.Resolution]: createParser(NumberType, withNoArgs),\n  [Ops.Zoom]: createParser(NumberType, withNoArgs),\n  [Ops.Time]: createParser(NumberType, withNoArgs),\n  [Ops.Any]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType)\n  ),\n  [Ops.All]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType)\n  ),\n  [Ops.Not]: createParser(\n    BooleanType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType)\n  ),\n  [Ops.Equal]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.NotEqual]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.GreaterThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.LessThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.LessThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.Multiply]: createParser(\n    (parsedArgs) => {\n      let outputType = NumberType | ColorType;\n      for (let i = 0; i < parsedArgs.length; i++) {\n        outputType &= parsedArgs[i].type;\n      }\n      return outputType;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType | ColorType),\n    narrowArgsType\n  ),\n  [Ops.Divide]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Add]: createParser(\n    NumberType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Subtract]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Clamp]: createParser(\n    NumberType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Mod]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Pow]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Abs]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Floor]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Ceil]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Round]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Sin]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Cos]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Atan]: createParser(\n    NumberType,\n    withArgsCount(1, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Sqrt]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Match]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 2; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(4, Infinity),\n    withEvenArgs,\n    parseMatchArgs\n  ),\n  [Ops.Between]: createParser(\n    BooleanType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Interpolate]: createParser(\n    (parsedArgs) => {\n      let type = ColorType | NumberType;\n      for (let i = 3; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      return type;\n    },\n    withArgsCount(6, Infinity),\n    withEvenArgs,\n    parseInterpolateArgs\n  ),\n  [Ops.Case]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(3, Infinity),\n    withOddArgs,\n    parseCaseArgs\n  ),\n  [Ops.In]: createParser(BooleanType, withArgsCount(2, 2), parseInArgs),\n  [Ops.Number]: createParser(\n    NumberType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType)\n  ),\n  [Ops.String]: createParser(\n    StringType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType)\n  ),\n  [Ops.Array]: createParser(\n    (parsedArgs) => {\n      return parsedArgs.length === 3 || parsedArgs.length === 4\n        ? NumberArrayType | ColorType\n        : NumberArrayType;\n    },\n    withArgsCount(1, Infinity),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Color]: createParser(\n    ColorType,\n    withArgsCount(3, 4),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Band]: createParser(\n    NumberType,\n    withArgsCount(1, 3),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Palette]: createParser(ColorType, withArgsCount(2, 2), parsePaletteArgs),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, ParsingContext, Array<Expression>, number?):Array<Expression>|void} ArgValidator\n * An argument validator applies various checks to an encoded expression arguments\n * Returns the parsed arguments if any.\n * Third argument is the array of parsed arguments from previous validators\n * Fourth argument is an optional type hint\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  if (encoded.length === 3) {\n    const hint = parse(encoded[2], context);\n    return [arg, hint];\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context, parsedArgs, typeHint) {\n  const varName = encoded[1];\n  if (typeof varName !== 'string') {\n    throw new Error('Expected a string argument for var operation');\n  }\n  context.variables.add(varName);\n  if (\n    !('variables' in context.style) ||\n    context.style.variables[varName] === undefined\n  ) {\n    return [new LiteralExpression(AnyType, varName)];\n  }\n  const initialValue = context.style.variables[varName];\n  const arg = /** @type {LiteralExpression} */ (parse(initialValue, context));\n  arg.value = varName;\n  if (typeHint && !overlapsType(typeHint, arg.type)) {\n    throw new Error(\n      `The variable ${varName} has type ${typeName(\n        arg.type\n      )} but the following type was expected: ${typeName(typeHint)}`\n    );\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesFeatureId(encoded, context) {\n  context.featureId = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsCount(minArgs, maxArgs) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `Expected ${range} arguments for ${operation}, got ${argCount}`\n      );\n    }\n  };\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction parseArgsOfType(argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            `, got ${gotType} but expected ${expectedType}`\n        );\n      }\n      expression.type &= argType;\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction narrowArgsType(encoded, context, parsedArgs) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n\n  // first pass to determine a narrowed down type\n  let sameType = AnyType;\n  for (let i = 0; i < parsedArgs.length; ++i) {\n    sameType &= parsedArgs[i].type;\n  }\n\n  if (sameType === NoneType) {\n    throw new Error(\n      `No common type could be found for arguments of ${operation} operation`\n    );\n  }\n\n  // re-parse args\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    args[i] = parse(encoded[i + 1], context, sameType);\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withOddArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `An odd amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount\n      )} instead`\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withEvenArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `An even amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount\n      )} instead`\n    );\n  }\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseMatchArgs(encoded, context, parsedArgs, typeHint) {\n  const argsCount = encoded.length - 1;\n\n  const input = parse(encoded[1], context);\n  let inputType = input.type;\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context);\n    const output = parse(encoded[i + 3], context);\n    inputType &= match.type;\n    outputType &= output.type;\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  // check input and output types validity\n  const expectedInputType = StringType | NumberType | BooleanType;\n  if (!overlapsType(expectedInputType, inputType)) {\n    throw new Error(\n      `Expected an input of type ${typeName(\n        expectedInputType\n      )} for the interpolate operation` + `, got ${typeName(inputType)} instead`\n    );\n  }\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following match operation: ` +\n        JSON.stringify(encoded)\n    );\n  }\n\n  // parse again inputs and outputs with common type\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context, inputType);\n    const output = parse(encoded[i + 3], context, outputType);\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  return [\n    parse(encoded[1], context, inputType),\n    ...args,\n    parse(encoded[encoded.length - 1], context, outputType),\n  ];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInterpolateArgs(encoded, context, parsedArgs, typeHint) {\n  const interpolationType = encoded[1];\n  let interpolation;\n  switch (interpolationType[0]) {\n    case 'linear':\n      interpolation = 1;\n      break;\n    case 'exponential':\n      interpolation = interpolationType[1];\n      if (typeof interpolation !== 'number') {\n        throw new Error(\n          `Expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(interpolation)} instead`\n        );\n      }\n      break;\n    default:\n      interpolation = null;\n  }\n  if (!interpolation) {\n    throw new Error(\n      `Invalid interpolation type: ${JSON.stringify(interpolationType)}`\n    );\n  }\n  interpolation = parse(interpolation, context);\n\n  // check input types\n  let input = parse(encoded[2], context);\n  if (!overlapsType(NumberType, input.type)) {\n    throw new Error(\n      `Expected an input of type number for the interpolate operation` +\n        `, got ${typeName(input.type)} instead`\n    );\n  }\n  input = parse(encoded[2], context, NumberType); // parse again with narrower output\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    let stop = parse(encoded[i + 3], context);\n    if (!overlapsType(NumberType, stop.type)) {\n      throw new Error(\n        `Expected all stop input values in the interpolate operation to be of type number` +\n          `, got ${typeName(stop.type)} at position ${i + 2} instead`\n      );\n    }\n    let output = parse(encoded[i + 4], context);\n    if (!overlapsType(NumberType | ColorType, output.type)) {\n      throw new Error(\n        `Expected all stop output values in the interpolate operation to be a number or color` +\n          `, got ${typeName(output.type)} at position ${i + 3} instead`\n      );\n    }\n    // parse again with narrower types\n    stop = parse(encoded[i + 3], context, NumberType);\n    output = parse(encoded[i + 4], context, NumberType | ColorType);\n    args[i] = stop;\n    args[i + 1] = output;\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseCaseArgs(encoded, context, parsedArgs, typeHint) {\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    const condition = parse(encoded[i + 1], context);\n    const output = parse(encoded[i + 2], context);\n    if (!overlapsType(BooleanType, condition.type)) {\n      throw new Error(\n        `Expected all conditions in the case operation to be of type boolean` +\n          `, got ${typeName(condition.type)} at position ${i} instead`\n      );\n    }\n    outputType &= output.type;\n    args[i] = condition;\n    args[i + 1] = output;\n  }\n\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following case operation: ` +\n        JSON.stringify(encoded)\n    );\n  }\n\n  // parse again args with common output type\n  for (let i = 0; i < args.length - 1; i += 2) {\n    args[i + 1] = parse(encoded[i + 2], context, outputType);\n  }\n  args[args.length - 1] = parse(\n    encoded[encoded.length - 1],\n    context,\n    outputType\n  );\n\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInArgs(encoded, context) {\n  /** @type {Array<number|string>} */\n  let haystack = /** @type {any} */ (encoded[2]);\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `The \"in\" operator was provided a literal value which was not an array as second argument.`\n    );\n  }\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `For the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions.`\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `The \"in\" operator was provided a literal value which was not an array as second argument.`\n      );\n    }\n    haystack = haystack[1];\n  }\n\n  let needleType = StringType | NumberType;\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = parse(haystack[i], context);\n    needleType &= arg.type;\n    args[i] = arg;\n  }\n  if (isType(needleType, NoneType)) {\n    throw new Error(\n      `Could not find a common type for the following in operation: ` +\n        JSON.stringify(encoded)\n    );\n  }\n\n  const needle = parse(encoded[1], context, needleType);\n  return [needle, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parsePaletteArgs(encoded, context) {\n  const index = parse(encoded[1], context, NumberType);\n  if (index.type !== NumberType) {\n    throw new Error(\n      `The first argument of palette must be an number, got ${typeName(\n        index.type\n      )} instead`\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('The second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    const color = parse(colors[i], context, ColorType);\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `The palette color at index ${i} must be a literal value`\n      );\n    }\n    if (!overlapsType(color.type, ColorType)) {\n      throw new Error(\n        `The palette color at index ${i} should be of type color, got ${typeName(\n          color.type\n        )} instead`\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {number|function(Array<Expression>):number} returnType The return type of the operator; can be a fixed value or a callback taking the parsed\n * arguments\n * @param {Array<ArgValidator>} argValidators A chain of argument validators; the return value of the last validator\n * will be used as parsed arguments\n * @return {Parser} The parser.\n */\nfunction createParser(returnType, ...argValidators) {\n  return function (encoded, context, typeHint) {\n    const operator = encoded[0];\n    let parsedArgs = [];\n    for (let i = 0; i < argValidators.length; i++) {\n      parsedArgs =\n        argValidators[i](encoded, context, parsedArgs, typeHint) || parsedArgs;\n    }\n    let actualType =\n      typeof returnType === 'function' ? returnType(parsedArgs) : returnType;\n    if (typeHint !== undefined) {\n      if (!overlapsType(actualType, typeHint)) {\n        throw new Error(\n          `The following expression was expected to return ${typeName(\n            typeHint\n          )}, but returns ${typeName(actualType)} instead: ${JSON.stringify(\n            encoded\n          )}`\n        );\n      }\n      actualType &= typeHint;\n    }\n    if (actualType === NoneType) {\n      throw new Error(\n        `No matching type was found for the following expression: ${JSON.stringify(\n          encoded\n        )}`\n      );\n    }\n    return new CallExpression(actualType, operator, ...parsedArgs);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context, typeHint) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context, typeHint);\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  ColorType,\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  withAlpha,\n} from '../color.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (expression) => expression.featureId;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.GeometryType\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Between\n    // Ops.Case\n    // Ops.In\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle)\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'fill-color',\n    context\n  );\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context\n  );\n\n  const text = new Text({});\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align'\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline'\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units'\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units'\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(flatStyle, prefix + 'declutter');\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const radius = optionalNumber(flatStyle, prefix + 'radius');\n  const radius1 = optionalNumber(flatStyle, prefix + 'radius1');\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius1,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n","/**\n * @module ol/proj/proj4\n */\nimport Projection from './Projection.js';\nimport {\n  addCoordinateTransforms,\n  addEquivalentProjections,\n  addProjection,\n  createSafeCoordinateTransform,\n  get,\n} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\n\n/**\n * @type {import(\"proj4\")|null}\n */\nlet registered = null;\n\n/**\n * @return {boolean} Proj4 has been registered.\n */\nexport function isRegistered() {\n  return !!registered;\n}\n\n/**\n * Unsets the shared proj4 previously set with register.\n */\nexport function unregister() {\n  registered = null;\n}\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers. Requires proj4 >= 2.8.0.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {import(\"proj4\")} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  registered = proj4;\n\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      let units = /** @type {import(\"./Units.js\").Units} */ (def.units);\n      if (!units && def.projName === 'longlat') {\n        units = 'degrees';\n      }\n      addProjection(\n        new Projection({\n          code: code,\n          axisOrientation: def.axis,\n          metersPerUnit: def.to_meter,\n          units,\n        })\n      );\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(\n            proj1,\n            proj2,\n            createSafeCoordinateTransform(proj1, proj2, transform.forward),\n            createSafeCoordinateTransform(proj2, proj1, transform.inverse)\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {number} code The EPSG code.\n * @return {Promise<string>} The proj4 definition.\n */\nlet epsgLookup = async function (code) {\n  const response = await fetch(`https://epsg.io/${code}.proj4`);\n  if (!response.ok) {\n    throw new Error(`Unexpected response from epsg.io: ${response.status}`);\n  }\n  return response.text();\n};\n\n/**\n * Set the lookup function for getting proj4 definitions given an EPSG code.\n * By default, the {@link module:ol/proj/proj4.fromEPSGCode} function uses the\n * epsg.io website for proj4 definitions.  This can be changed by providing a\n * different lookup function.\n *\n * @param {function(number):Promise<string>} func The lookup function.\n * @api\n */\nexport function setEPSGLookup(func) {\n  epsgLookup = func;\n}\n\n/**\n * Get the current EPSG lookup function.\n *\n * @return {function(number):Promise<string>} The EPSG lookup function.\n */\nexport function getEPSGLookup() {\n  return epsgLookup;\n}\n\n/**\n * Get a projection from an EPSG code.  This function fetches the projection\n * definition from the epsg.io website, registers this definition for use with\n * proj4, and returns a configured projection.  You must call import proj4 and\n * call {@link module:ol/proj/proj4.register} before using this function.\n *\n * If the projection definition is already registered with proj4, it will not\n * be fetched again (so it is ok to call this function multiple times with the\n * same code).\n *\n * @param {number|string} code The EPSG code (e.g. 4326 or 'EPSG:4326').\n * @return {Promise<Projection>} The projection.\n * @api\n */\nexport async function fromEPSGCode(code) {\n  if (typeof code === 'string') {\n    code = parseInt(code.split(':').pop(), 10);\n  }\n\n  const proj4 = registered;\n  if (!proj4) {\n    throw new Error('Proj4 must be registered first with register(proj4)');\n  }\n\n  const epsgCode = 'EPSG:' + code;\n  if (proj4.defs(epsgCode)) {\n    return get(epsgCode);\n  }\n\n  proj4.defs(epsgCode, await epsgLookup(code));\n  register(proj4);\n\n  return get(epsgCode);\n}\n\n/**\n * Generate an EPSG lookup function which uses the MapTiler Coordinates API to find projection\n * definitions which do not require proj4 to be configured to handle `+nadgrids` parameters.\n * Call {@link module:ol/proj/proj4.setEPSGLookup} use the function for lookups\n * `setEPSGLookup(epsgLookupMapTiler('{YOUR_MAPTILER_API_KEY_HERE}'))`.\n *\n * @param {string} key MapTiler API key.  Get your own API key at https://www.maptiler.com/cloud/.\n * @return {function(number):Promise<string>} The EPSG lookup function.\n * @api\n */\nexport function epsgLookupMapTiler(key) {\n  return async function (code) {\n    const response = await fetch(\n      `https://api.maptiler.com/coordinates/search/code:${code}.json?transformations=true&exports=true&key=${key}`\n    );\n    if (!response.ok) {\n      throw new Error(\n        `Unexpected response from maptiler.com: ${response.status}`\n      );\n    }\n    return response.json().then((json) => {\n      const results = json['results'];\n      if (results?.length > 0) {\n        const result = results.filter(\n          (r) => r['id']?.['authority'] === 'EPSG' && r['id']?.['code'] === code\n        )[0];\n        if (result) {\n          const transforms = result['transformations'];\n          if (transforms?.length > 0) {\n            // use default transform if it does not require grids\n            const defaultTransform = result['default_transformation'];\n            if (\n              transforms.filter(\n                (t) =>\n                  t['id']?.['authority'] === defaultTransform?.['authority'] &&\n                  t['id']?.['code'] === defaultTransform?.['code'] &&\n                  t['grids']?.length === 0\n              ).length > 0\n            ) {\n              return result['exports']?.['proj4'];\n            }\n            // otherwise use most accurate alternative without grids\n            const transform = transforms\n              .filter(\n                (t) =>\n                  t['grids']?.length === 0 &&\n                  t['target_crs']?.['authority'] === 'EPSG' &&\n                  t['target_crs']?.['code'] === 4326 &&\n                  t['deprecated'] === false &&\n                  t['usable'] === true\n              )\n              .sort((t1, t2) => t1['accuracy'] - t2['accuracy'])[0]?.[\n              'exports'\n            ]?.['proj4'];\n            if (transform) {\n              return transform;\n            }\n          }\n          // fallback to default\n          return result['exports']?.['proj4'];\n        }\n      }\n    });\n  };\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/geom/flat/geodesic\n */\nimport {get as getProjection, getTransform} from '../../proj.js';\nimport {squaredSegmentDistance, toDegrees, toRadians} from '../../math.js';\n\n/**\n * @param {function(number): import(\"../../coordinate.js\").Coordinate} interpolate Interpolate function.\n * @param {import(\"../../proj.js\").TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n  // FIXME reduce garbage generation\n  // FIXME optimize stack operations\n\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n\n  let geoA = interpolate(0);\n  let geoB = interpolate(1);\n\n  let a = transform(geoA);\n  let b = transform(geoB);\n\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const geoStack = [geoB, geoA];\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const stack = [b, a];\n  /** @type {Array<number>} */\n  const fractionStack = [1, 0];\n\n  /** @type {!Object<string, boolean>} */\n  const fractions = {};\n\n  let maxIterations = 1e5;\n  let geoM, m, fracA, fracB, fracM, key;\n\n  while (--maxIterations > 0 && fractionStack.length > 0) {\n    // Pop the a coordinate off the stack\n    fracA = fractionStack.pop();\n    geoA = geoStack.pop();\n    a = stack.pop();\n    // Add the a coordinate if it has not been added yet\n    key = fracA.toString();\n    if (!(key in fractions)) {\n      flatCoordinates.push(a[0], a[1]);\n      fractions[key] = true;\n    }\n    // Pop the b coordinate off the stack\n    fracB = fractionStack.pop();\n    geoB = geoStack.pop();\n    b = stack.pop();\n    // Find the m point between the a and b coordinates\n    fracM = (fracA + fracB) / 2;\n    geoM = interpolate(fracM);\n    m = transform(geoM);\n    if (\n      squaredSegmentDistance(m[0], m[1], a[0], a[1], b[0], b[1]) <\n      squaredTolerance\n    ) {\n      // If the m point is sufficiently close to the straight line, then we\n      // discard it.  Just use the b coordinate and move on to the next line\n      // segment.\n      flatCoordinates.push(b[0], b[1]);\n      key = fracB.toString();\n      fractions[key] = true;\n    } else {\n      // Otherwise, we need to subdivide the current line segment.  Split it\n      // into two and push the two line segments onto the stack.\n      fractionStack.push(fracB, fracM, fracM, fracA);\n      stack.push(b, m, m, a);\n      geoStack.push(geoB, geoM, geoM, geoA);\n    }\n  }\n\n  return flatCoordinates;\n}\n\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function greatCircleArc(\n  lon1,\n  lat1,\n  lon2,\n  lat2,\n  projection,\n  squaredTolerance\n) {\n  const geoProjection = getProjection('EPSG:4326');\n\n  const cosLat1 = Math.cos(toRadians(lat1));\n  const sinLat1 = Math.sin(toRadians(lat1));\n  const cosLat2 = Math.cos(toRadians(lat2));\n  const sinLat2 = Math.sin(toRadians(lat2));\n  const cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n  const sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n  const d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      if (1 <= d) {\n        return [lon2, lat2];\n      }\n      const D = frac * Math.acos(d);\n      const cosD = Math.cos(D);\n      const sinD = Math.sin(D);\n      const y = sinDeltaLon * cosLat2;\n      const x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n      const theta = Math.atan2(y, x);\n      const lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n      const lon =\n        toRadians(lon1) +\n        Math.atan2(\n          Math.sin(theta) * sinD * cosLat1,\n          cosD - sinLat1 * Math.sin(lat)\n        );\n      return [toDegrees(lon), toDegrees(lat)];\n    },\n    getTransform(geoProjection, projection),\n    squaredTolerance\n  );\n}\n\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon, lat1 + (lat2 - lat1) * frac];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance\n  );\n}\n\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon1 + (lon2 - lon1) * frac, lat];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance\n  );\n}\n","/**\n * @module ol/layer/Graticule\n */\nimport Collection from '../Collection.js';\nimport EventType from '../render/EventType.js';\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport VectorLayer from './Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  applyTransform,\n  approximatelyEquals,\n  containsCoordinate,\n  containsExtent,\n  equals,\n  getCenter,\n  getIntersection,\n  getWidth,\n  intersects,\n  isEmpty,\n  wrapX as wrapExtentX,\n} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {degreesToStringHDMS} from '../coordinate.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n} from '../proj.js';\nimport {getVectorContext} from '../render.js';\nimport {meridian, parallel} from '../geom/flat/geodesic.js';\n\n/**\n * @type {Stroke}\n * @private\n * @const\n */\nconst DEFAULT_STROKE_STYLE = new Stroke({\n  color: 'rgba(0,0,0,0.2)',\n});\n\n/**\n * @type {Array<number>}\n * @private\n */\nconst INTERVALS = [\n  90,\n  45,\n  30,\n  20,\n  10,\n  5,\n  2,\n  1,\n  30 / 60,\n  20 / 60,\n  10 / 60,\n  5 / 60,\n  2 / 60,\n  1 / 60,\n  30 / 3600,\n  20 / 3600,\n  10 / 3600,\n  5 / 3600,\n  2 / 3600,\n  1 / 3600,\n];\n\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {Point} geom Geometry.\n * @property {string} text Text.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {Stroke} [strokeStyle] The\n * stroke style to use for drawing the graticule. If not provided, the following stroke will be used:\n * ```js\n * new Stroke({\n *   color: 'rgba(0, 0, 0, 0.2)' // a not fully opaque black\n * });\n * ```\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n * @property {Array<number>} [intervals=[90, 45, 30, 20, 10, 5, 2, 1, 30/60, 20/60, 10/60, 5/60, 2/60, 1/60, 30/3600, 20/3600, 10/3600, 5/3600, 2/3600, 1/3600]]\n * Intervals (in degrees) for the graticule. Example to limit graticules to 30 and 10 degrees intervals:\n * ```js\n * [30, 10]\n * ```\n * @property {boolean} [wrapX=true] Whether to repeat the graticule horizontally.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer that renders a grid for a coordinate system (currently only EPSG:4326 is supported).\n * Note that the view projection must define both extent and worldExtent.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {VectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nclass Graticule extends VectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign(\n      {\n        updateWhileAnimating: true,\n        updateWhileInteracting: true,\n        renderBuffer: 0,\n      },\n      options\n    );\n\n    delete baseOptions.maxLines;\n    delete baseOptions.strokeStyle;\n    delete baseOptions.targetSize;\n    delete baseOptions.showLabels;\n    delete baseOptions.lonLabelFormatter;\n    delete baseOptions.latLabelFormatter;\n    delete baseOptions.lonLabelPosition;\n    delete baseOptions.latLabelPosition;\n    delete baseOptions.lonLabelStyle;\n    delete baseOptions.latLabelStyle;\n    delete baseOptions.intervals;\n    super(baseOptions);\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLat_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLon_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLat_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLon_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxX_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxY_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minX_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minY_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.targetSize_ =\n      options.targetSize !== undefined ? options.targetSize : 100;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.meridians_ = [];\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.parallels_ = [];\n\n    /**\n     * @type {Stroke}\n     * @private\n     */\n    this.strokeStyle_ =\n      options.strokeStyle !== undefined\n        ? options.strokeStyle\n        : DEFAULT_STROKE_STYLE;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.fromLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.toLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.projectionCenterLonLat_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomRight_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topRight_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.meridiansLabels_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.parallelsLabels_ = null;\n\n    if (options.showLabels) {\n      /**\n       * @type {null|function(number):string}\n       * @private\n       */\n      this.lonLabelFormatter_ =\n        options.lonLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'EW')\n          : options.lonLabelFormatter;\n\n      /**\n       * @type {function(number):string}\n       * @private\n       */\n      this.latLabelFormatter_ =\n        options.latLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'NS')\n          : options.latLabelFormatter;\n\n      /**\n       * Longitude label position in fractions (0..1) of view extent. 0 means\n       * bottom, 1 means top.\n       * @type {number}\n       * @private\n       */\n      this.lonLabelPosition_ =\n        options.lonLabelPosition == undefined ? 0 : options.lonLabelPosition;\n\n      /**\n       * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n       * means right.\n       * @type {number}\n       * @private\n       */\n      this.latLabelPosition_ =\n        options.latLabelPosition == undefined ? 1 : options.latLabelPosition;\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.lonLabelStyleBase_ = new Style({\n        text:\n          options.lonLabelStyle !== undefined\n            ? options.lonLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textBaseline: 'bottom',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.lonLabelStyle_ = (feature) => {\n        const label = feature.get('graticule_label');\n        this.lonLabelStyleBase_.getText().setText(label);\n        return this.lonLabelStyleBase_;\n      };\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.latLabelStyleBase_ = new Style({\n        text:\n          options.latLabelStyle !== undefined\n            ? options.latLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textAlign: 'right',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.latLabelStyle_ = (feature) => {\n        const label = feature.get('graticule_label');\n        this.latLabelStyleBase_.getText().setText(label);\n        return this.latLabelStyleBase_;\n      };\n\n      this.meridiansLabels_ = [];\n      this.parallelsLabels_ = [];\n\n      this.addEventListener(EventType.POSTRENDER, this.drawLabels_.bind(this));\n    }\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.intervals_ =\n      options.intervals !== undefined ? options.intervals : INTERVALS;\n\n    // use a source with a custom loader for lines & text\n    this.setSource(\n      new VectorSource({\n        loader: this.loaderFunction.bind(this),\n        strategy: this.strategyFunction.bind(this),\n        features: new Collection(),\n        overlaps: false,\n        useSpatialIndex: false,\n        wrapX: options.wrapX,\n      })\n    );\n\n    /**\n     * feature pool to use when updating graticule\n     * @type {Array<Feature>}\n     * @private\n     */\n    this.featurePool_ = [];\n\n    /**\n     * @type {Style}\n     * @private\n     */\n    this.lineStyle_ = new Style({\n      stroke: this.strokeStyle_,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.loadedExtent_ = null;\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.renderedResolution_ = null;\n\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Strategy function for loading features based on the view's extent and\n   * resolution.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @return {Array<import(\"../extent.js\").Extent>} Extents.\n   */\n  strategyFunction(extent, resolution) {\n    // extents may be passed in different worlds, to avoid endless loop we use only one\n    let realWorldExtent = extent.slice();\n    if (this.projection_ && this.getSource().getWrapX()) {\n      wrapExtentX(realWorldExtent, this.projection_);\n    }\n    if (this.loadedExtent_) {\n      if (\n        approximatelyEquals(this.loadedExtent_, realWorldExtent, resolution)\n      ) {\n        // make sure result is exactly equal to previous extent\n        realWorldExtent = this.loadedExtent_.slice();\n      } else {\n        // we should not keep track of loaded extents\n        this.getSource().removeLoadedExtent(this.loadedExtent_);\n      }\n    }\n    return [realWorldExtent];\n  }\n\n  /**\n   * Update geometries in the source based on current view\n   * @param {import(\"../extent\").Extent} extent Extent\n   * @param {number} resolution Resolution\n   * @param {import(\"../proj/Projection.js\").default} projection Projection\n   */\n  loaderFunction(extent, resolution, projection) {\n    this.loadedExtent_ = extent;\n    const source = this.getSource();\n\n    // only consider the intersection between our own extent & the requested one\n    const layerExtent = this.getExtent() || [\n      -Infinity,\n      -Infinity,\n      Infinity,\n      Infinity,\n    ];\n    const renderExtent = getIntersection(layerExtent, extent);\n\n    if (\n      this.renderedExtent_ &&\n      equals(this.renderedExtent_, renderExtent) &&\n      this.renderedResolution_ === resolution\n    ) {\n      return;\n    }\n    this.renderedExtent_ = renderExtent;\n    this.renderedResolution_ = resolution;\n\n    // bail out if nothing to render\n    if (isEmpty(renderExtent)) {\n      return;\n    }\n\n    // update projection info\n    const center = getCenter(renderExtent);\n    const squaredTolerance = (resolution * resolution) / 4;\n\n    const updateProjectionInfo =\n      !this.projection_ || !equivalentProjection(this.projection_, projection);\n\n    if (updateProjectionInfo) {\n      this.updateProjectionInfo_(projection);\n    }\n\n    this.createGraticule_(renderExtent, center, resolution, squaredTolerance);\n\n    // first make sure we have enough features in the pool\n    let featureCount = this.meridians_.length + this.parallels_.length;\n    if (this.meridiansLabels_) {\n      featureCount += this.meridians_.length;\n    }\n    if (this.parallelsLabels_) {\n      featureCount += this.parallels_.length;\n    }\n\n    let feature;\n    while (featureCount > this.featurePool_.length) {\n      feature = new Feature();\n      this.featurePool_.push(feature);\n    }\n\n    const featuresColl = source.getFeaturesCollection();\n    featuresColl.clear();\n    let poolIndex = 0;\n\n    // add features for the lines & labels\n    let i, l;\n    for (i = 0, l = this.meridians_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.meridians_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n    for (i = 0, l = this.parallels_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.parallels_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, index) {\n    const lineString = this.getMeridian_(\n      lon,\n      minLat,\n      maxLat,\n      squaredTolerance,\n      index\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.meridiansLabels_) {\n        const text = this.lonLabelFormatter_(lon);\n        if (index in this.meridiansLabels_) {\n          this.meridiansLabels_[index].text = text;\n        } else {\n          this.meridiansLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.meridians_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addParallel_(lat, minLon, maxLon, squaredTolerance, extent, index) {\n    const lineString = this.getParallel_(\n      lat,\n      minLon,\n      maxLon,\n      squaredTolerance,\n      index\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.parallelsLabels_) {\n        const text = this.latLabelFormatter_(lat);\n        if (index in this.parallelsLabels_) {\n          this.parallelsLabels_[index].text = text;\n        } else {\n          this.parallelsLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.parallels_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {import(\"../render/Event.js\").default} event Render event.\n   * @private\n   */\n  drawLabels_(event) {\n    const rotation = event.frameState.viewState.rotation;\n    const resolution = event.frameState.viewState.resolution;\n    const size = event.frameState.size;\n    const extent = event.frameState.extent;\n    const rotationCenter = getCenter(extent);\n    let rotationExtent = extent;\n    if (rotation) {\n      const unrotatedWidth = size[0] * resolution;\n      const unrotatedHeight = size[1] * resolution;\n      rotationExtent = [\n        rotationCenter[0] - unrotatedWidth / 2,\n        rotationCenter[1] - unrotatedHeight / 2,\n        rotationCenter[0] + unrotatedWidth / 2,\n        rotationCenter[1] + unrotatedHeight / 2,\n      ];\n    }\n\n    let startWorld = 0;\n    let endWorld = 0;\n    let labelsAtStart = this.latLabelPosition_ < 0.5;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      startWorld = Math.floor((extent[0] - projectionExtent[0]) / worldWidth);\n      endWorld = Math.ceil((extent[2] - projectionExtent[2]) / worldWidth);\n      const inverted = Math.abs(rotation) > Math.PI / 2;\n      labelsAtStart = labelsAtStart !== inverted;\n    }\n    const vectorContext = getVectorContext(event);\n\n    for (let world = startWorld; world <= endWorld; ++world) {\n      let poolIndex = this.meridians_.length + this.parallels_.length;\n      let feature, index, l, textPoint;\n\n      if (this.meridiansLabels_) {\n        for (index = 0, l = this.meridiansLabels_.length; index < l; ++index) {\n          const lineString = this.meridians_[index];\n          if (!rotation && world === 0) {\n            textPoint = this.getMeridianPoint_(lineString, extent, index);\n          } else {\n            const clone = lineString.clone();\n            clone.translate(world * worldWidth, 0);\n            clone.rotate(-rotation, rotationCenter);\n            textPoint = this.getMeridianPoint_(clone, rotationExtent, index);\n            textPoint.rotate(rotation, rotationCenter);\n          }\n          feature = this.featurePool_[poolIndex++];\n          feature.setGeometry(textPoint);\n          feature.set('graticule_label', this.meridiansLabels_[index].text);\n          vectorContext.drawFeature(feature, this.lonLabelStyle_(feature));\n        }\n      }\n      if (this.parallelsLabels_) {\n        if (\n          (world === startWorld && labelsAtStart) ||\n          (world === endWorld && !labelsAtStart)\n        ) {\n          for (index = 0, l = this.parallels_.length; index < l; ++index) {\n            const lineString = this.parallels_[index];\n            if (!rotation && world === 0) {\n              textPoint = this.getParallelPoint_(lineString, extent, index);\n            } else {\n              const clone = lineString.clone();\n              clone.translate(world * worldWidth, 0);\n              clone.rotate(-rotation, rotationCenter);\n              textPoint = this.getParallelPoint_(clone, rotationExtent, index);\n              textPoint.rotate(rotation, rotationCenter);\n            }\n            feature = this.featurePool_[poolIndex++];\n            feature.setGeometry(textPoint);\n            feature.set('graticule_label', this.parallelsLabels_[index].text);\n            vectorContext.drawFeature(feature, this.latLabelStyle_(feature));\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @private\n   */\n  createGraticule_(extent, center, resolution, squaredTolerance) {\n    const interval = this.getInterval_(resolution);\n    if (interval == -1) {\n      this.meridians_.length = 0;\n      this.parallels_.length = 0;\n      if (this.meridiansLabels_) {\n        this.meridiansLabels_.length = 0;\n      }\n      if (this.parallelsLabels_) {\n        this.parallelsLabels_.length = 0;\n      }\n      return;\n    }\n\n    let wrapX = false;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      if (getWidth(extent) >= worldWidth) {\n        extent[0] = projectionExtent[0];\n        extent[2] = projectionExtent[2];\n      } else {\n        wrapX = true;\n      }\n    }\n\n    // Constrain the center to fit into the extent available to the graticule\n\n    const validCenterP = [\n      clamp(center[0], this.minX_, this.maxX_),\n      clamp(center[1], this.minY_, this.maxY_),\n    ];\n\n    // Transform the center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    const centerLonLat = this.toLonLatTransform_(validCenterP);\n    if (isNaN(centerLonLat[1])) {\n      centerLonLat[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n    let centerLon = clamp(centerLonLat[0], this.minLon_, this.maxLon_);\n    let centerLat = clamp(centerLonLat[1], this.minLat_, this.maxLat_);\n    const maxLines = this.maxLines_;\n    let cnt, idx, lat, lon;\n\n    // Limit the extent to fit into the extent available to the graticule\n\n    let validExtentP = extent;\n    if (!wrapX) {\n      validExtentP = [\n        clamp(extent[0], this.minX_, this.maxX_),\n        clamp(extent[1], this.minY_, this.maxY_),\n        clamp(extent[2], this.minX_, this.maxX_),\n        clamp(extent[3], this.minY_, this.maxY_),\n      ];\n    }\n\n    // Transform the extent to get the lon lat ranges for the edges of the extent\n\n    const validExtent = applyTransform(\n      validExtentP,\n      this.toLonLatTransform_,\n      undefined,\n      8\n    );\n\n    let maxLat = validExtent[3];\n    let maxLon = validExtent[2];\n    let minLat = validExtent[1];\n    let minLon = validExtent[0];\n\n    if (!wrapX) {\n      // Check if extremities of the world extent lie inside the extent\n      // (for example the pole in a polar projection)\n      // and extend the extent as appropriate\n\n      if (containsCoordinate(validExtentP, this.bottomLeft_)) {\n        minLon = this.minLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.bottomRight_)) {\n        maxLon = this.maxLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topLeft_)) {\n        minLon = this.minLon_;\n        maxLat = this.maxLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topRight_)) {\n        maxLon = this.maxLon_;\n        maxLat = this.maxLat_;\n      }\n\n      // The transformed center may also extend the lon lat ranges used for rendering\n\n      maxLat = clamp(maxLat, centerLat, this.maxLat_);\n      maxLon = clamp(maxLon, centerLon, this.maxLon_);\n      minLat = clamp(minLat, this.minLat_, centerLat);\n      minLon = clamp(minLon, this.minLon_, centerLon);\n    }\n\n    // Create meridians\n\n    centerLon = Math.floor(centerLon / interval) * interval;\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon -= interval) >= minLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    } else {\n      while (lon != this.minLon_ && cnt++ < maxLines) {\n        lon = Math.max(lon - interval, this.minLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    }\n\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon += interval) <= maxLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    } else {\n      while (lon != this.maxLon_ && cnt++ < maxLines) {\n        lon = Math.min(lon + interval, this.maxLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    }\n\n    this.meridians_.length = idx;\n    if (this.meridiansLabels_) {\n      this.meridiansLabels_.length = idx;\n    }\n\n    // Create parallels\n\n    centerLat = Math.floor(centerLat / interval) * interval;\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    while (lat != this.minLat_ && cnt++ < maxLines) {\n      lat = Math.max(lat - interval, this.minLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx\n      );\n    }\n\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    cnt = 0;\n    while (lat != this.maxLat_ && cnt++ < maxLines) {\n      lat = Math.min(lat + interval, this.maxLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx\n      );\n    }\n\n    this.parallels_.length = idx;\n    if (this.parallelsLabels_) {\n      this.parallelsLabels_.length = idx;\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @return {number} The interval in degrees.\n   * @private\n   */\n  getInterval_(resolution) {\n    const centerLon = this.projectionCenterLonLat_[0];\n    const centerLat = this.projectionCenterLonLat_[1];\n    let interval = -1;\n    const target = Math.pow(this.targetSize_ * resolution, 2);\n    /** @type {Array<number>} **/\n    const p1 = [];\n    /** @type {Array<number>} **/\n    const p2 = [];\n    for (let i = 0, ii = this.intervals_.length; i < ii; ++i) {\n      const delta = clamp(this.intervals_[i] / 2, 0, 90);\n      // Don't attempt to transform latitudes beyond the poles!\n      const clampedLat = clamp(centerLat, -90 + delta, 90 - delta);\n      p1[0] = centerLon - delta;\n      p1[1] = clampedLat - delta;\n      p2[0] = centerLon + delta;\n      p2[1] = clampedLat + delta;\n      this.fromLonLatTransform_(p1, p1);\n      this.fromLonLatTransform_(p2, p2);\n      const dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n      if (dist <= target) {\n        break;\n      }\n      interval = this.intervals_[i];\n    }\n    return interval;\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The meridian line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getMeridian_(lon, minLat, maxLat, squaredTolerance, index) {\n    const flatCoordinates = meridian(\n      lon,\n      minLat,\n      maxLat,\n      this.projection_,\n      squaredTolerance\n    );\n    let lineString = this.meridians_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n      this.meridians_[index] = lineString;\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Meridian\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Meridian point.\n   * @private\n   */\n  getMeridianPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let bottom = 1;\n    let top = flatCoordinates.length - 1;\n    if (flatCoordinates[bottom] > flatCoordinates[top]) {\n      bottom = top;\n      top = 1;\n    }\n    const clampedBottom = Math.max(extent[1], flatCoordinates[bottom]);\n    const clampedTop = Math.min(extent[3], flatCoordinates[top]);\n    const lat = clamp(\n      extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\n      clampedBottom,\n      clampedTop\n    );\n    const coordinate0 =\n      flatCoordinates[bottom - 1] +\n      ((flatCoordinates[top - 1] - flatCoordinates[bottom - 1]) *\n        (lat - flatCoordinates[bottom])) /\n        (flatCoordinates[top] - flatCoordinates[bottom]);\n    const coordinate = [coordinate0, lat];\n    const point = this.meridiansLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of meridians.  Meridians are lines of equal longitude.\n   * @return {Array<LineString>} The meridians.\n   * @api\n   */\n  getMeridians() {\n    return this.meridians_;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The parallel line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getParallel_(lat, minLon, maxLon, squaredTolerance, index) {\n    const flatCoordinates = parallel(\n      lat,\n      minLon,\n      maxLon,\n      this.projection_,\n      squaredTolerance\n    );\n    let lineString = this.parallels_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Parallels.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Parallel point.\n   * @private\n   */\n  getParallelPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let left = 0;\n    let right = flatCoordinates.length - 2;\n    if (flatCoordinates[left] > flatCoordinates[right]) {\n      left = right;\n      right = 0;\n    }\n    const clampedLeft = Math.max(extent[0], flatCoordinates[left]);\n    const clampedRight = Math.min(extent[2], flatCoordinates[right]);\n    const lon = clamp(\n      extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\n      clampedLeft,\n      clampedRight\n    );\n    const coordinate1 =\n      flatCoordinates[left + 1] +\n      ((flatCoordinates[right + 1] - flatCoordinates[left + 1]) *\n        (lon - flatCoordinates[left])) /\n        (flatCoordinates[right] - flatCoordinates[left]);\n    const coordinate = [lon, coordinate1];\n    const point = this.parallelsLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of parallels.  Parallels are lines of equal latitude.\n   * @return {Array<LineString>} The parallels.\n   * @api\n   */\n  getParallels() {\n    return this.parallels_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateProjectionInfo_(projection) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const worldExtent = projection.getWorldExtent();\n\n    this.maxLat_ = worldExtent[3];\n    this.maxLon_ = worldExtent[2];\n    this.minLat_ = worldExtent[1];\n    this.minLon_ = worldExtent[0];\n\n    // If the world extent crosses the dateline define a custom transform to\n    // return longitudes which wrap the dateline\n\n    const toLonLatTransform = getTransform(projection, epsg4326Projection);\n    if (this.minLon_ < this.maxLon_) {\n      this.toLonLatTransform_ = toLonLatTransform;\n    } else {\n      const split = this.minLon_ + this.maxLon_ / 2;\n      this.maxLon_ += 360;\n      this.toLonLatTransform_ = function (coordinates, output, dimension) {\n        dimension = dimension || 2;\n        const lonLatCoordinates = toLonLatTransform(\n          coordinates,\n          output,\n          dimension\n        );\n        for (let i = 0, l = lonLatCoordinates.length; i < l; i += dimension) {\n          if (lonLatCoordinates[i] < split) {\n            lonLatCoordinates[i] += 360;\n          }\n        }\n        return lonLatCoordinates;\n      };\n    }\n\n    // Transform the extent to get the limits of the view projection extent\n    // which should be available to the graticule\n\n    this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n    const worldExtentP = applyTransform(\n      [this.minLon_, this.minLat_, this.maxLon_, this.maxLat_],\n      this.fromLonLatTransform_,\n      undefined,\n      8\n    );\n\n    this.minX_ = worldExtentP[0];\n    this.maxX_ = worldExtentP[2];\n    this.minY_ = worldExtentP[1];\n    this.maxY_ = worldExtentP[3];\n\n    // Determine the view projection coordinates of the extremities of the world extent\n    // as these may lie inside a view extent (for example the pole in a polar projection)\n\n    this.bottomLeft_ = this.fromLonLatTransform_([this.minLon_, this.minLat_]);\n    this.bottomRight_ = this.fromLonLatTransform_([this.maxLon_, this.minLat_]);\n    this.topLeft_ = this.fromLonLatTransform_([this.minLon_, this.maxLat_]);\n    this.topRight_ = this.fromLonLatTransform_([this.maxLon_, this.maxLat_]);\n\n    // Transform the projection center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    this.projectionCenterLonLat_ = this.toLonLatTransform_(\n      getCenter(projection.getExtent())\n    );\n    if (isNaN(this.projectionCenterLonLat_[1])) {\n      this.projectionCenterLonLat_[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n\n    this.projection_ = projection;\n  }\n}\n\nexport default Graticule;\n","/**\n * @module ol/webgl\n */\n\nimport {SAFARI_BUG_237906} from './has.js';\n\n/**\n * Constants taken from goog.webgl\n */\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STREAM_DRAW = 0x88e0;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STATIC_DRAW = 0x88e4;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const DYNAMIC_DRAW = 0x88e8;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n/** end of goog.webgl constants\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object} [attributes] Attributes.\n * @return {WebGLRenderingContext|null} WebGL rendering context.\n */\nexport function getContext(canvas, attributes) {\n  attributes = Object.assign(\n    {\n      preserveDrawingBuffer: true,\n      antialias: SAFARI_BUG_237906 ? false : true, // https://bugs.webkit.org/show_bug.cgi?id=237906\n    },\n    attributes\n  );\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n/**\n * @type {Array<string>|null}\n */\nlet supportedExtensions = null;\n\n/**\n * @return {Array<string>|null} List of supported WebGL extensions.\n */\nexport function getSupportedExtensions() {\n  if (!supportedExtensions) {\n    const canvas = document.createElement('canvas');\n    const gl = getContext(canvas);\n    if (gl) {\n      supportedExtensions = gl.getSupportedExtensions();\n    }\n  }\n  return supportedExtensions;\n}\n","/**\n * @module ol/webgl/Buffer\n */\nimport {\n  ARRAY_BUFFER,\n  DYNAMIC_DRAW,\n  ELEMENT_ARRAY_BUFFER,\n  STATIC_DRAW,\n  STREAM_DRAW,\n} from '../webgl.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Used to describe the intended usage for the data: `STATIC_DRAW`, `STREAM_DRAW`\n * or `DYNAMIC_DRAW`.\n * @enum {number}\n */\nexport const BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW,\n};\n\n/**\n * @classdesc\n * Object used to store an array of data as well as usage information for that data.\n * Stores typed arrays internally, either Float32Array or Uint16/32Array depending on\n * the buffer type (ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER) and available extensions.\n *\n * To populate the array, you can either use:\n * * A size using `#ofSize(buffer)`\n * * An `ArrayBuffer` object using `#fromArrayBuffer(buffer)`\n * * A plain array using `#fromArray(array)`\n *\n * Note:\n * See the documentation of [WebGLRenderingContext.bufferData](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData)\n * for more info on buffer usage.\n */\nclass WebGLArrayBuffer {\n  /**\n   * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n   * @param {number} [usage] Intended usage, either `STATIC_DRAW`, `STREAM_DRAW` or `DYNAMIC_DRAW`.\n   * Default is `DYNAMIC_DRAW`.\n   */\n  constructor(type, usage) {\n    /**\n     * @private\n     * @type {Float32Array|Uint32Array|null}\n     */\n    this.array_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.type_ = type;\n\n    assert(\n      type === ARRAY_BUFFER || type === ELEMENT_ARRAY_BUFFER,\n      'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`'\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.usage_ = usage !== undefined ? usage : BufferUsage.STATIC_DRAW;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size (all values will be zeroes).\n   * @param {number} size Array size\n   * @return {WebGLArrayBuffer} This\n   */\n  ofSize(size) {\n    this.array_ = new (getArrayClassForType(this.type_))(size);\n    return this;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size.\n   * @param {Array<number>} array Numerical array\n   * @return {WebGLArrayBuffer} This\n   */\n  fromArray(array) {\n    this.array_ = getArrayClassForType(this.type_).from(array);\n    return this;\n  }\n\n  /**\n   * Populates the buffer with a raw binary array buffer.\n   * @param {ArrayBuffer} buffer Raw binary buffer to populate the array with. Note that this buffer must have been\n   * initialized for the same typed array class.\n   * @return {WebGLArrayBuffer} This\n   */\n  fromArrayBuffer(buffer) {\n    this.array_ = new (getArrayClassForType(this.type_))(buffer);\n    return this;\n  }\n\n  /**\n   * @return {number} Buffer type.\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Will return null if the buffer was not initialized\n   * @return {Float32Array|Uint32Array|null} Array.\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * @return {number} Usage.\n   */\n  getUsage() {\n    return this.usage_;\n  }\n\n  /**\n   * Will return 0 if the buffer is not initialized\n   * @return {number} Array size\n   */\n  getSize() {\n    return this.array_ ? this.array_.length : 0;\n  }\n}\n\n/**\n * Returns a typed array constructor based on the given buffer type\n * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n * @return {Float32ArrayConstructor|Uint32ArrayConstructor} The typed array class to use for this buffer.\n */\nexport function getArrayClassForType(type) {\n  switch (type) {\n    case ARRAY_BUFFER:\n      return Float32Array;\n    case ELEMENT_ARRAY_BUFFER:\n      return Uint32Array;\n    default:\n      return Float32Array;\n  }\n}\n\nexport default WebGLArrayBuffer;\n","/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored',\n};\n","/**\n * @module ol/webgl/PostProcessingPass\n */\n\nimport {getUid} from '../util.js';\n\nconst DEFAULT_VERTEX_SHADER = `\n  precision mediump float;\n  \n  attribute vec2 a_position;\n  varying vec2 v_texCoord;\n  varying vec2 v_screenCoord;\n  \n  uniform vec2 u_screenSize;\n   \n  void main() {\n    v_texCoord = a_position * 0.5 + 0.5;\n    v_screenCoord = v_texCoord * u_screenSize;\n    gl_Position = vec4(a_position, 0.0, 1.0);\n  }\n`;\n\nconst DEFAULT_FRAGMENT_SHADER = `\n  precision mediump float;\n   \n  uniform sampler2D u_image;\n  uniform float u_opacity;\n   \n  varying vec2 v_texCoord;\n   \n  void main() {\n    gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n  }\n`;\n\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {WebGLUniformLocation} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\n * premultiplied.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *   uniform float u_opacity;\n *\n *   varying vec2 v_texCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n *   }\n *   ```\n */\nclass WebGLPostProcessingPass {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    this.gl_ = options.webGlContext;\n    const gl = this.gl_;\n\n    this.scaleRatio_ = options.scaleRatio || 1;\n\n    this.renderTargetTexture_ = gl.createTexture();\n    this.renderTargetTextureSize_ = null;\n\n    this.frameBuffer_ = gl.createFramebuffer();\n    this.depthBuffer_ = gl.createRenderbuffer();\n\n    // compile the program for the frame buffer\n    // TODO: make compilation errors show up\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(\n      vertexShader,\n      options.vertexShader || DEFAULT_VERTEX_SHADER\n    );\n    gl.compileShader(vertexShader);\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(\n      fragmentShader,\n      options.fragmentShader || DEFAULT_FRAGMENT_SHADER\n    );\n    gl.compileShader(fragmentShader);\n    this.renderTargetProgram_ = gl.createProgram();\n    gl.attachShader(this.renderTargetProgram_, vertexShader);\n    gl.attachShader(this.renderTargetProgram_, fragmentShader);\n    gl.linkProgram(this.renderTargetProgram_);\n\n    // bind the vertices buffer for the frame buffer\n    this.renderTargetVerticesBuffer_ = gl.createBuffer();\n    const verticesArray = [-1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1];\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(verticesArray),\n      gl.STATIC_DRAW\n    );\n\n    this.renderTargetAttribLocation_ = gl.getAttribLocation(\n      this.renderTargetProgram_,\n      'a_position'\n    );\n    this.renderTargetUniformLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_screenSize'\n    );\n    this.renderTargetOpacityLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_opacity'\n    );\n    this.renderTargetTextureLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_image'\n    );\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    options.uniforms &&\n      Object.keys(options.uniforms).forEach((name) => {\n        this.uniforms_.push({\n          value: options.uniforms[name],\n          location: gl.getUniformLocation(this.renderTargetProgram_, name),\n        });\n      });\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Initialize the render target texture of the post process, make sure it is at the\n   * right size and bind it as a render target for the next draw calls.\n   * The last step to be initialized will be the one where the primitives are rendered.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   */\n  init(frameState) {\n    const gl = this.getGL();\n    const textureSize = [\n      gl.drawingBufferWidth * this.scaleRatio_,\n      gl.drawingBufferHeight * this.scaleRatio_,\n    ];\n\n    // rendering goes to my buffer\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n    gl.bindRenderbuffer(gl.RENDERBUFFER, this.getDepthBuffer());\n    gl.viewport(0, 0, textureSize[0], textureSize[1]);\n\n    // if size has changed: adjust canvas & render target texture\n    if (\n      !this.renderTargetTextureSize_ ||\n      this.renderTargetTextureSize_[0] !== textureSize[0] ||\n      this.renderTargetTextureSize_[1] !== textureSize[1]\n    ) {\n      this.renderTargetTextureSize_ = textureSize;\n\n      // create a new texture\n      const level = 0;\n      const internalFormat = gl.RGBA;\n      const border = 0;\n      const format = gl.RGBA;\n      const type = gl.UNSIGNED_BYTE;\n      const data = null;\n      gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        textureSize[0],\n        textureSize[1],\n        border,\n        format,\n        type,\n        data\n      );\n\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n      // bind the texture to the framebuffer\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        this.renderTargetTexture_,\n        0\n      );\n\n      gl.renderbufferStorage(\n        gl.RENDERBUFFER,\n        gl.DEPTH_COMPONENT16,\n        textureSize[0],\n        textureSize[1]\n      );\n      gl.framebufferRenderbuffer(\n        gl.FRAMEBUFFER,\n        gl.DEPTH_ATTACHMENT,\n        gl.RENDERBUFFER,\n        this.depthBuffer_\n      );\n    }\n  }\n\n  /**\n   * Render to the next postprocessing pass (or to the canvas if final pass).\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   */\n  apply(frameState, nextPass, preCompose, postCompose) {\n    const gl = this.getGL();\n    const size = frameState.size;\n\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER,\n      nextPass ? nextPass.getFrameBuffer() : null\n    );\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n\n    if (!nextPass) {\n      // clear the canvas if we are the first to render to it\n      // and preserveDrawingBuffer is true\n      const canvasId = getUid(gl.canvas);\n      if (!frameState.renderTargets[canvasId]) {\n        const attributes = gl.getContextAttributes();\n        if (attributes && attributes.preserveDrawingBuffer) {\n          gl.clearColor(0.0, 0.0, 0.0, 0.0);\n          gl.clearDepth(1.0);\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        }\n\n        frameState.renderTargets[canvasId] = true;\n      }\n    }\n\n    gl.disable(gl.DEPTH_TEST);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n\n    gl.useProgram(this.renderTargetProgram_);\n    gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n    gl.vertexAttribPointer(\n      this.renderTargetAttribLocation_,\n      2,\n      gl.FLOAT,\n      false,\n      0,\n      0\n    );\n    gl.uniform2f(this.renderTargetUniformLocation_, size[0], size[1]);\n    gl.uniform1i(this.renderTargetTextureLocation_, 0);\n\n    const opacity = frameState.layerStatesArray[frameState.layerIndex].opacity;\n    gl.uniform1f(this.renderTargetOpacityLocation_, opacity);\n\n    this.applyUniforms(frameState);\n\n    if (preCompose) {\n      preCompose(gl, frameState);\n    }\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n    if (postCompose) {\n      postCompose(gl, frameState);\n    }\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer\n   */\n  getFrameBuffer() {\n    return this.frameBuffer_;\n  }\n\n  /**\n   * @return {WebGLRenderbuffer} Depth buffer\n   */\n  getDepthBuffer() {\n    return this.depthBuffer_;\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 1;\n    this.uniforms_.forEach(function (uniform) {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.texture = gl.createTexture();\n        }\n        gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        if (value instanceof ImageData) {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            value.width,\n            value.height,\n            0,\n            gl.UNSIGNED_BYTE,\n            new Uint8Array(value.data)\n          );\n        } else {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value\n          );\n        }\n\n        // fill texture slots\n        gl.uniform1i(uniform.location, textureSlot++);\n      } else if (Array.isArray(value)) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(uniform.location, value[0], value[1]);\n            return;\n          case 3:\n            gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n            return;\n          case 4:\n            gl.uniform4f(\n              uniform.location,\n              value[0],\n              value[1],\n              value[2],\n              value[3]\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(uniform.location, value);\n      }\n    });\n  }\n}\n\nexport default WebGLPostProcessingPass;\n","/**\n * @module ol/webgl/Helper\n */\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport Disposable from '../Disposable.js';\nimport WebGLPostProcessingPass from './PostProcessingPass.js';\nimport {\n  FLOAT,\n  UNSIGNED_BYTE,\n  UNSIGNED_INT,\n  UNSIGNED_SHORT,\n  getContext,\n} from '../webgl.js';\nimport {clear} from '../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {create, fromTransform} from '../vec/mat4.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer Buffer.\n * @property {WebGLBuffer} webGlBuffer WebGlBuffer.\n */\n\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport const ShaderType = {\n  FRAGMENT_SHADER: 0x8b30,\n  VERTEX_SHADER: 0x8b31,\n};\n\n/**\n * Names of uniforms made available to all shaders.\n * Please note: changing these *will* break custom shaders!\n * @enum {string}\n */\nexport const DefaultUniform = {\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  SCREEN_TO_WORLD_MATRIX: 'u_screenToWorldMatrix',\n  TIME: 'u_time',\n  ZOOM: 'u_zoom',\n  RESOLUTION: 'u_resolution',\n  ROTATION: 'u_rotation',\n  VIEWPORT_SIZE_PX: 'u_viewportSizePx',\n  PIXEL_RATIO: 'u_pixelRatio',\n  HIT_DETECTION: 'u_hitDetection',\n};\n\n/**\n * Attribute types, either `UNSIGNED_BYTE`, `UNSIGNED_SHORT`, `UNSIGNED_INT` or `FLOAT`\n * Note: an attribute stored in a `Float32Array` should be of type `FLOAT`.\n * @enum {number}\n */\nexport const AttributeType = {\n  UNSIGNED_BYTE: UNSIGNED_BYTE,\n  UNSIGNED_SHORT: UNSIGNED_SHORT,\n  UNSIGNED_INT: UNSIGNED_INT,\n  FLOAT: FLOAT,\n};\n\n/**\n * Description of an attribute in a buffer\n * @typedef {Object} AttributeDescription\n * @property {string} name Attribute name to use in shaders\n * @property {number} size Number of components per attributes\n * @property {AttributeType} [type] Attribute type, i.e. number of bytes used to store the value. This is\n * determined by the class of typed array which the buffer uses (eg. `Float32Array` for a `FLOAT` attribute).\n * Default is `FLOAT`.\n */\n\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|import(\"../transform\").Transform} UniformLiteralValue\n */\n\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../Map.js\").FrameState):UniformLiteralValue} UniformValue\n */\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n * @property {string} [canvasCacheKey] The cache key for the canvas.\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue} [value] Value\n * @property {UniformValue} [prevValue] The previous value.\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @typedef {Object} CanvasCacheItem\n * @property {WebGLRenderingContext} context The context of this canvas.\n * @property {number} users The count of users of this canvas.\n */\n\n/**\n * @type {Object<string,CanvasCacheItem>}\n */\nconst canvasCache = {};\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {string} The shared cache key.\n */\nfunction getSharedCanvasCacheKey(key) {\n  return 'shared/' + key;\n}\n\nlet uniqueCanvasCacheKeyCount = 0;\n\n/**\n * @return {string} The unique cache key.\n */\nfunction getUniqueCanvasCacheKey() {\n  const key = 'unique/' + uniqueCanvasCacheKeyCount;\n  uniqueCanvasCacheKeyCount += 1;\n  return key;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {WebGLRenderingContext} The canvas.\n */\nfunction getOrCreateContext(key) {\n  let cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    canvas.style.position = 'absolute';\n    canvas.style.left = '0';\n    const context = getContext(canvas);\n    cacheItem = {users: 0, context};\n    canvasCache[key] = cacheItem;\n  }\n\n  cacheItem.users += 1;\n  return cacheItem.context;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n */\nfunction releaseCanvas(key) {\n  const cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    return;\n  }\n\n  cacheItem.users -= 1;\n  if (cacheItem.users > 0) {\n    return;\n  }\n\n  const gl = cacheItem.context;\n  const extension = gl.getExtension('WEBGL_lose_context');\n  if (extension) {\n    extension.loseContext();\n  }\n  const canvas = gl.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n\n  delete canvasCache[key];\n}\n\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls; note how a frameState is required to set up a program,\n *   // as several default uniforms are computed from it (projection matrix, zoom level, etc.)\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   const program = this.context.getProgram(fragmentShader, vertexShader);\n *   helper.useProgram(this.program, frameState);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   helper.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   const verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   const indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   helper.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   helper.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Specify the attribute names with\n *   {@link module:ol/webgl/Helper~WebGLHelper#enableAttributes} (see code snippet below).\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   helper.enableAttributes([\n *     {\n *        name: 'a_position',\n *        size: 2\n *     },\n *     {\n *       name: 'a_offset',\n *       size: 2\n *     },\n *     {\n *       name: 'a_texCoord',\n *       size: 2\n *     }\n *   ])\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   helper.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   helper.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   helper.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n */\nclass WebGLHelper extends Disposable {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n    options = options || {};\n\n    /** @private */\n    this.boundHandleWebGLContextLost_ = this.handleWebGLContextLost.bind(this);\n\n    /** @private */\n    this.boundHandleWebGLContextRestored_ =\n      this.handleWebGLContextRestored.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.canvasCacheKey_ = options.canvasCacheKey\n      ? getSharedCanvasCacheKey(options.canvasCacheKey)\n      : getUniqueCanvasCacheKey();\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = getOrCreateContext(this.canvasCacheKey_);\n\n    /**\n     * @private\n     * @type {!Object<string, BufferCacheEntry>}\n     */\n    this.bufferCache_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object>}\n     */\n    this.extensionCache_ = {};\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.currentProgram_ = null;\n\n    /**\n     * @private\n     * @type boolean\n     */\n    this.needsToBeRecreated_ = false;\n\n    const canvas = this.gl_.canvas;\n\n    canvas.addEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    canvas.addEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetRotateMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetScaleMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, WebGLUniformLocation>>}\n     */\n    this.uniformLocationsByProgram_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.attribLocationsByProgram_ = {};\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass.\n     * If the uniform is a texture, the WebGL Texture object will be stored here.\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    if (options.uniforms) {\n      this.setUniforms(options.uniforms);\n    }\n\n    /**\n     * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n     * options. If no post process was given, a default one is used (so as not to have to make an exception to\n     * the frame buffer logic).\n     * @type {Array<WebGLPostProcessingPass>}\n     * @private\n     */\n    this.postProcessPasses_ = options.postProcesses\n      ? options.postProcesses.map(\n          (options) =>\n            new WebGLPostProcessingPass({\n              webGlContext: this.gl_,\n              scaleRatio: options.scaleRatio,\n              vertexShader: options.vertexShader,\n              fragmentShader: options.fragmentShader,\n              uniforms: options.uniforms,\n            })\n        )\n      : [new WebGLPostProcessingPass({webGlContext: this.gl_})];\n\n    /**\n     * @type {string|null}\n     * @private\n     */\n    this.shaderCompileErrors_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.startTime_ = Date.now();\n  }\n\n  /**\n   * @param {Object<string, UniformValue>} uniforms Uniform definitions.\n   */\n  setUniforms(uniforms) {\n    this.uniforms_ = [];\n    this.addUniforms(uniforms);\n  }\n\n  /**\n   * @param {Object<string, UniformValue>} uniforms Uniform definitions.\n   */\n  addUniforms(uniforms) {\n    for (const name in uniforms) {\n      this.uniforms_.push({\n        name: name,\n        value: uniforms[name],\n      });\n    }\n  }\n\n  /**\n   * @param {string} canvasCacheKey The canvas cache key.\n   * @return {boolean} The provided key matches the one this helper was constructed with.\n   */\n  canvasCacheKeyMatches(canvasCacheKey) {\n    return this.canvasCacheKey_ === getSharedCanvasCacheKey(canvasCacheKey);\n  }\n\n  /**\n   * Get a WebGL extension.  If the extension is not supported, null is returned.\n   * Extensions are cached after they are enabled for the first time.\n   * @param {string} name The extension name.\n   * @return {Object|null} The extension or null if not supported.\n   */\n  getExtension(name) {\n    if (name in this.extensionCache_) {\n      return this.extensionCache_[name];\n    }\n    const extension = this.gl_.getExtension(name);\n    this.extensionCache_[name] = extension;\n    return extension;\n  }\n\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  bindBuffer(buffer) {\n    const gl = this.gl_;\n    const bufferKey = getUid(buffer);\n    let bufferCache = this.bufferCache_[bufferKey];\n    if (!bufferCache) {\n      const webGlBuffer = gl.createBuffer();\n      bufferCache = {\n        buffer: buffer,\n        webGlBuffer: webGlBuffer,\n      };\n      this.bufferCache_[bufferKey] = bufferCache;\n    }\n    gl.bindBuffer(buffer.getType(), bufferCache.webGlBuffer);\n  }\n\n  /**\n   * Update the data contained in the buffer array; this is required for the\n   * new data to be rendered\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  flushBufferData(buffer) {\n    const gl = this.gl_;\n    this.bindBuffer(buffer);\n    gl.bufferData(buffer.getType(), buffer.getArray(), buffer.getUsage());\n  }\n\n  /**\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\n   */\n  deleteBuffer(buf) {\n    const gl = this.gl_;\n    const bufferKey = getUid(buf);\n    const bufferCacheEntry = this.bufferCache_[bufferKey];\n    if (bufferCacheEntry && !gl.isContextLost()) {\n      gl.deleteBuffer(bufferCacheEntry.webGlBuffer);\n    }\n    delete this.bufferCache_[bufferKey];\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    const canvas = this.gl_.canvas;\n    canvas.removeEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    canvas.removeEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n\n    releaseCanvas(this.canvasCacheKey_);\n\n    delete this.gl_;\n  }\n\n  /**\n   * Clear the buffer & set the viewport to draw.\n   * Post process passes will be initialized here, the first one being bound as a render target for\n   * subsequent draw calls.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   * @param {boolean} [enableDepth] If true, enables depth testing.\n   */\n  prepareDraw(frameState, disableAlphaBlend, enableDepth) {\n    const gl = this.gl_;\n    const canvas = this.getCanvas();\n    const size = frameState.size;\n    const pixelRatio = frameState.pixelRatio;\n\n    if (\n      canvas.width !== size[0] * pixelRatio ||\n      canvas.height !== size[1] * pixelRatio\n    ) {\n      canvas.width = size[0] * pixelRatio;\n      canvas.height = size[1] * pixelRatio;\n      canvas.style.width = size[0] + 'px';\n      canvas.style.height = size[1] + 'px';\n    }\n\n    // loop backwards in post processes list\n    for (let i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n      this.postProcessPasses_[i].init(frameState);\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.depthRange(0.0, 1.0);\n    gl.clearDepth(1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n    if (enableDepth) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthFunc(gl.LEQUAL);\n    } else {\n      gl.disable(gl.DEPTH_TEST);\n    }\n  }\n\n  /**\n   * Prepare a program to use a texture.\n   * @param {WebGLTexture} texture The texture.\n   * @param {number} slot The texture slot.\n   * @param {string} uniformName The corresponding uniform name.\n   */\n  bindTexture(texture, slot, uniformName) {\n    const gl = this.gl_;\n    gl.activeTexture(gl.TEXTURE0 + slot);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.uniform1i(this.getUniformLocation(uniformName), slot);\n  }\n\n  /**\n   * Clear the render target & bind it for future draw operations.\n   * This is similar to `prepareDraw`, only post processes will not be applied.\n   * Note: the whole viewport will be drawn to the render target, regardless of its size.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {import(\"./RenderTarget.js\").default} renderTarget Render target to draw to\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   * @param {boolean} [enableDepth] If true, enables depth testing.\n   */\n  prepareDrawToRenderTarget(\n    frameState,\n    renderTarget,\n    disableAlphaBlend,\n    enableDepth\n  ) {\n    const gl = this.gl_;\n    const size = renderTarget.getSize();\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget.getFramebuffer());\n    gl.bindRenderbuffer(gl.RENDERBUFFER, renderTarget.getDepthbuffer());\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.bindTexture(gl.TEXTURE_2D, renderTarget.getTexture());\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.depthRange(0.0, 1.0);\n    gl.clearDepth(1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n    if (enableDepth) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthFunc(gl.LEQUAL);\n    } else {\n      gl.disable(gl.DEPTH_TEST);\n    }\n  }\n\n  /**\n   * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   */\n  drawElements(start, end) {\n    const gl = this.gl_;\n    this.getExtension('OES_element_index_uint');\n\n    const elementType = gl.UNSIGNED_INT;\n    const elementSize = 4;\n\n    const numItems = end - start;\n    const offsetInBytes = start * elementSize;\n    gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n  }\n\n  /**\n   * Apply the successive post process passes which will eventually render to the actual canvas.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   */\n  finalizeDraw(frameState, preCompose, postCompose) {\n    // apply post processes using the next one as target\n    for (let i = 0, ii = this.postProcessPasses_.length; i < ii; i++) {\n      if (i === ii - 1) {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          null,\n          preCompose,\n          postCompose\n        );\n      } else {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          this.postProcessPasses_[i + 1]\n        );\n      }\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getCanvas() {\n    return /** @type {HTMLCanvasElement} */ (this.gl_.canvas);\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyFrameState(frameState) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    this.setUniformFloatValue(\n      DefaultUniform.TIME,\n      (Date.now() - this.startTime_) * 0.001\n    );\n    this.setUniformFloatValue(DefaultUniform.ZOOM, frameState.viewState.zoom);\n    this.setUniformFloatValue(\n      DefaultUniform.RESOLUTION,\n      frameState.viewState.resolution\n    );\n    this.setUniformFloatValue(DefaultUniform.PIXEL_RATIO, pixelRatio);\n    this.setUniformFloatVec2(DefaultUniform.VIEWPORT_SIZE_PX, [\n      size[0],\n      size[1],\n    ]);\n    this.setUniformFloatValue(DefaultUniform.ROTATION, rotation);\n  }\n\n  /**\n   * Sets the `u_hitDetection` uniform.\n   * @param {boolean} enabled Whether to enable the hit detection code path\n   */\n  applyHitDetectionUniform(enabled) {\n    const loc = this.getUniformLocation(DefaultUniform.HIT_DETECTION);\n    this.getGL().uniform1i(loc, enabled ? 1 : 0);\n\n    // hit detection uses a fixed pixel ratio\n    if (enabled) {\n      this.setUniformFloatValue(DefaultUniform.PIXEL_RATIO, 0.5);\n    }\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyUniforms(frameState) {\n    const gl = this.gl_;\n\n    let value;\n    let textureSlot = 0;\n    this.uniforms_.forEach((uniform) => {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (\n        value instanceof HTMLCanvasElement ||\n        value instanceof HTMLImageElement ||\n        value instanceof ImageData\n      ) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.prevValue = undefined;\n          uniform.texture = gl.createTexture();\n        }\n        this.bindTexture(uniform.texture, textureSlot, uniform.name);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        const imageReady =\n          !(value instanceof HTMLImageElement) ||\n          /** @type {HTMLImageElement} */ (value).complete;\n        if (imageReady && uniform.prevValue !== value) {\n          uniform.prevValue = value;\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value\n          );\n        }\n        textureSlot++;\n      } else if (Array.isArray(value) && value.length === 6) {\n        this.setUniformMatrixValue(\n          uniform.name,\n          fromTransform(this.tmpMat4_, value)\n        );\n      } else if (Array.isArray(value) && value.length <= 4) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1]\n            );\n            return;\n          case 3:\n            gl.uniform3f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n              value[2]\n            );\n            return;\n          case 4:\n            gl.uniform4f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n              value[2],\n              value[3]\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(this.getUniformLocation(uniform.name), value);\n      }\n    });\n  }\n\n  /**\n   * Set up a program for use. The program will be set as the current one. Then, the uniforms used\n   * in the program will be set based on the current frame state and the helper configuration.\n   * @param {WebGLProgram} program Program.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  useProgram(program, frameState) {\n    const gl = this.gl_;\n    gl.useProgram(program);\n    this.currentProgram_ = program;\n    this.applyFrameState(frameState);\n    this.applyUniforms(frameState);\n  }\n\n  /**\n   * Will attempt to compile a vertex or fragment shader based on source\n   * On error, the shader will be returned but\n   * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n   * Use `gl.getShaderInfoLog(shader)` to have details\n   * @param {string} source Shader source\n   * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n   * @return {WebGLShader} Shader object\n   */\n  compileShader(source, type) {\n    const gl = this.gl_;\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    return shader;\n  }\n\n  /**\n   * Create a program for a vertex and fragment shader.  Throws if shader compilation fails.\n   * @param {string} fragmentShaderSource Fragment shader source.\n   * @param {string} vertexShaderSource Vertex shader source.\n   * @return {WebGLProgram} Program\n   */\n  getProgram(fragmentShaderSource, vertexShaderSource) {\n    const gl = this.gl_;\n\n    const fragmentShader = this.compileShader(\n      fragmentShaderSource,\n      gl.FRAGMENT_SHADER\n    );\n\n    const vertexShader = this.compileShader(\n      vertexShaderSource,\n      gl.VERTEX_SHADER\n    );\n\n    const program = gl.createProgram();\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      const message = `Fragment shader compilation failed: ${gl.getShaderInfoLog(\n        fragmentShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(fragmentShader);\n\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      const message = `Vertex shader compilation failed: ${gl.getShaderInfoLog(\n        vertexShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(vertexShader);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      const message = `GL program linking failed: ${gl.getProgramInfoLog(\n        program\n      )}`;\n      throw new Error(message);\n    }\n\n    return program;\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Uniform name\n   * @return {WebGLUniformLocation} uniformLocation\n   */\n  getUniformLocation(name) {\n    const programUid = getUid(this.currentProgram_);\n    if (this.uniformLocationsByProgram_[programUid] === undefined) {\n      this.uniformLocationsByProgram_[programUid] = {};\n    }\n    if (this.uniformLocationsByProgram_[programUid][name] === undefined) {\n      this.uniformLocationsByProgram_[programUid][name] =\n        this.gl_.getUniformLocation(this.currentProgram_, name);\n    }\n    return this.uniformLocationsByProgram_[programUid][name];\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Attribute name\n   * @return {number} attribLocation\n   */\n  getAttributeLocation(name) {\n    const programUid = getUid(this.currentProgram_);\n    if (this.attribLocationsByProgram_[programUid] === undefined) {\n      this.attribLocationsByProgram_[programUid] = {};\n    }\n    if (this.attribLocationsByProgram_[programUid][name] === undefined) {\n      this.attribLocationsByProgram_[programUid][name] =\n        this.gl_.getAttribLocation(this.currentProgram_, name);\n    }\n    return this.attribLocationsByProgram_[programUid][name];\n  }\n\n  /**\n   * Sets the given transform to apply the rotation/translation/scaling of the given frame state.\n   * The resulting transform can be used to convert world space coordinates to view coordinates in the [-1, 1] range.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../transform\").Transform} transform Transform to update.\n   * @return {import(\"../transform\").Transform} The updated transform object.\n   */\n  makeProjectionTransform(frameState, transform) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const resolution = frameState.viewState.resolution;\n    const center = frameState.viewState.center;\n    composeTransform(\n      transform,\n      0,\n      0,\n      2 / (resolution * size[0]),\n      2 / (resolution * size[1]),\n      -rotation,\n      -center[0],\n      -center[1]\n    );\n    return transform;\n  }\n\n  /**\n   * Give a value for a standard float uniform\n   * @param {string} uniform Uniform name\n   * @param {number} value Value\n   */\n  setUniformFloatValue(uniform, value) {\n    this.gl_.uniform1f(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec2 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec2(uniform, value) {\n    this.gl_.uniform2fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec4(uniform, value) {\n    this.gl_.uniform4fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a standard matrix4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Matrix value\n   */\n  setUniformMatrixValue(uniform, value) {\n    this.gl_.uniformMatrix4fv(this.getUniformLocation(uniform), false, value);\n  }\n\n  /**\n   * Will set the currently bound buffer to an attribute of the shader program. Used by `#enableAttributes`\n   * internally.\n   * @param {string} attribName Attribute name\n   * @param {number} size Number of components per attributes\n   * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n   * @param {number} stride Stride in bytes (0 means attribs are packed)\n   * @param {number} offset Offset in bytes\n   * @private\n   */\n  enableAttributeArray_(attribName, size, type, stride, offset) {\n    const location = this.getAttributeLocation(attribName);\n    // the attribute has not been found in the shaders or is not used; do not enable it\n    if (location < 0) {\n      return;\n    }\n    this.gl_.enableVertexAttribArray(location);\n    this.gl_.vertexAttribPointer(location, size, type, false, stride, offset);\n  }\n\n  /**\n   * Will enable the following attributes to be read from the currently bound buffer,\n   * i.e. tell the GPU where to read the different attributes in the buffer. An error in the\n   * size/type/order of attributes will most likely break the rendering and throw a WebGL exception.\n   * @param {Array<AttributeDescription>} attributes Ordered list of attributes to read from the buffer\n   */\n  enableAttributes(attributes) {\n    const stride = computeAttributesStride(attributes);\n    let offset = 0;\n    for (let i = 0; i < attributes.length; i++) {\n      const attr = attributes[i];\n      this.enableAttributeArray_(\n        attr.name,\n        attr.size,\n        attr.type || FLOAT,\n        stride,\n        offset\n      );\n      offset += attr.size * getByteSizeFromType(attr.type);\n    }\n  }\n\n  /**\n   * WebGL context was lost\n   * @param {WebGLContextEvent} event The context loss event.\n   * @private\n   */\n  handleWebGLContextLost(event) {\n    clear(this.bufferCache_);\n    this.currentProgram_ = null;\n\n    event.preventDefault();\n  }\n\n  /**\n   * WebGL context was restored\n   * @private\n   */\n  handleWebGLContextRestored() {\n    this.needsToBeRecreated_ = true;\n  }\n\n  /**\n   * Returns whether this helper needs to be recreated, as the context was lost and then restored.\n   * @return {boolean} Whether this helper needs to be recreated.\n   */\n  needsToBeRecreated() {\n    return this.needsToBeRecreated_;\n  }\n\n  /**\n   * Will create or reuse a given webgl texture and apply the given size. If no image data\n   * specified, the texture will be empty, otherwise image data will be used and the `size`\n   * parameter will be ignored.\n   * Note: wrap parameters are set to clamp to edge, min filter is set to linear.\n   * @param {Array<number>} size Expected size of the texture\n   * @param {ImageData|HTMLImageElement|HTMLCanvasElement} [data] Image data/object to bind to the texture\n   * @param {WebGLTexture} [texture] Existing texture to reuse\n   * @return {WebGLTexture} The generated texture\n   */\n  createTexture(size, data, texture) {\n    const gl = this.gl_;\n    texture = texture || gl.createTexture();\n\n    // set params & size\n    const level = 0;\n    const internalFormat = gl.RGBA;\n    const border = 0;\n    const format = gl.RGBA;\n    const type = gl.UNSIGNED_BYTE;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    if (data) {\n      gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, format, type, data);\n    } else {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        size[0],\n        size[1],\n        border,\n        format,\n        type,\n        null\n      );\n    }\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    return texture;\n  }\n}\n\n/**\n * Compute a stride in bytes based on a list of attributes\n * @param {Array<AttributeDescription>} attributes Ordered list of attributes\n * @return {number} Stride, ie amount of values for each vertex in the vertex buffer\n */\nexport function computeAttributesStride(attributes) {\n  let stride = 0;\n  for (let i = 0; i < attributes.length; i++) {\n    const attr = attributes[i];\n    stride += attr.size * getByteSizeFromType(attr.type);\n  }\n  return stride;\n}\n\n/**\n * Computes the size in byte of an attribute type.\n * @param {AttributeType} type Attribute type\n * @return {number} The size in bytes\n */\nfunction getByteSizeFromType(type) {\n  switch (type) {\n    case AttributeType.UNSIGNED_BYTE:\n      return Uint8Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_SHORT:\n      return Uint16Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_INT:\n      return Uint32Array.BYTES_PER_ELEMENT;\n    case AttributeType.FLOAT:\n    default:\n      return Float32Array.BYTES_PER_ELEMENT;\n  }\n}\n\nexport default WebGLHelper;\n","/**\n * @module ol/renderer/webgl/Layer\n */\nimport LayerProperty from '../../layer/Property.js';\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLHelper from '../../webgl/Helper.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * Base WebGL renderer class.\n * Holds all logic related to data manipulation & some common rendering logic\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass WebGLLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(layer, options) {\n    super(layer);\n\n    options = options || {};\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform is only\n     * set before dispatching rendering events.\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @private\n     */\n    this.postProcesses_ = options.postProcesses;\n\n    /**\n     * @private\n     */\n    this.uniforms_ = options.uniforms;\n\n    /**\n     * @type {WebGLHelper}\n     * @protected\n     */\n    this.helper;\n\n    layer.addChangeListener(LayerProperty.MAP, this.removeHelper.bind(this));\n\n    this.dispatchPreComposeEvent = this.dispatchPreComposeEvent.bind(this);\n    this.dispatchPostComposeEvent = this.dispatchPostComposeEvent.bind(this);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPreComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.PRECOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.PRECOMPOSE,\n        undefined,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPostComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.POSTCOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.POSTCOMPOSE,\n        undefined,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * Reset options (only handles uniforms).\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    this.uniforms_ = options.uniforms;\n    if (this.helper) {\n      this.helper.setUniforms(this.uniforms_);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  removeHelper() {\n    if (this.helper) {\n      this.helper.dispose();\n      delete this.helper;\n    }\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    if (this.getLayer().getRenderSource()) {\n      let incrementGroup = true;\n      let groupNumber = -1;\n      let className;\n      for (let i = 0, ii = frameState.layerStatesArray.length; i < ii; i++) {\n        const layer = frameState.layerStatesArray[i].layer;\n        const renderer = layer.getRenderer();\n        if (!(renderer instanceof WebGLLayerRenderer)) {\n          incrementGroup = true;\n          continue;\n        }\n        const layerClassName = layer.getClassName();\n        if (incrementGroup || layerClassName !== className) {\n          groupNumber += 1;\n          incrementGroup = false;\n        }\n        className = layerClassName;\n        if (renderer === this) {\n          break;\n        }\n      }\n\n      const canvasCacheKey =\n        'map/' + frameState.mapId + '/group/' + groupNumber;\n\n      if (\n        !this.helper ||\n        !this.helper.canvasCacheKeyMatches(canvasCacheKey) ||\n        this.helper.needsToBeRecreated()\n      ) {\n        this.removeHelper();\n\n        this.helper = new WebGLHelper({\n          postProcesses: this.postProcesses_,\n          uniforms: this.uniforms_,\n          canvasCacheKey: canvasCacheKey,\n        });\n\n        if (className) {\n          this.helper.getCanvas().className = className;\n        }\n\n        this.afterHelperCreated();\n      }\n    }\n\n    return this.prepareFrameInternal(frameState);\n  }\n\n  /**\n   * @protected\n   */\n  afterHelperCreated() {}\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @protected\n   */\n  prepareFrameInternal(frameState) {\n    return true;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.removeHelper();\n    super.disposeInternal();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      composeTransform(\n        this.inversePixelTransform_,\n        0,\n        0,\n        frameState.pixelRatio,\n        -frameState.pixelRatio,\n        0,\n        0,\n        -frameState.size[1]\n      );\n\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform_,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n}\n\nexport default WebGLLayerRenderer;\n","/**\n * A wrapper class to simplify rendering to a texture instead of the final canvas\n * @module ol/webgl/RenderTarget\n */\nimport {equals} from '../array.js';\n\n// for pixel color reading\nconst tmpArray4 = new Uint8Array(4);\n\n/**\n * @classdesc\n * This class is a wrapper around the association of both a `WebGLTexture` and a `WebGLFramebuffer` instances,\n * simplifying initialization and binding for rendering.\n */\nclass WebGLRenderTarget {\n  /**\n   * @param {import(\"./Helper.js\").default} helper WebGL helper; mandatory.\n   * @param {Array<number>} [size] Expected size of the render target texture; note: this can be changed later on.\n   */\n  constructor(helper, size) {\n    /**\n     * @private\n     * @type {import(\"./Helper.js\").default}\n     */\n    this.helper_ = helper;\n    const gl = helper.getGL();\n\n    /**\n     * @private\n     * @type {WebGLTexture}\n     */\n    this.texture_ = gl.createTexture();\n\n    /**\n     * @private\n     * @type {WebGLFramebuffer}\n     */\n    this.framebuffer_ = gl.createFramebuffer();\n\n    /**\n     * @private\n     * @type {WebGLRenderbuffer}\n     */\n    this.depthbuffer_ = gl.createRenderbuffer();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.size_ = size || [1, 1];\n\n    /**\n     * @type {Uint8Array}\n     * @private\n     */\n    this.data_ = new Uint8Array(0);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dataCacheDirty_ = true;\n\n    this.updateSize_();\n  }\n\n  /**\n   * Changes the size of the render target texture. Note: will do nothing if the size\n   * is already the same.\n   * @param {Array<number>} size Expected size of the render target texture\n   */\n  setSize(size) {\n    if (equals(size, this.size_)) {\n      return;\n    }\n    this.size_[0] = size[0];\n    this.size_[1] = size[1];\n    this.updateSize_();\n  }\n\n  /**\n   * Returns the size of the render target texture\n   * @return {Array<number>} Size of the render target texture\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * This will cause following calls to `#readAll` or `#readPixel` to download the content of the\n   * render target into memory, which is an expensive operation.\n   * This content will be kept in cache but should be cleared after each new render.\n   */\n  clearCachedData() {\n    this.dataCacheDirty_ = true;\n  }\n\n  /**\n   * Returns the full content of the frame buffer as a series of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * @return {Uint8Array} Integer array of color values\n   */\n  readAll() {\n    if (this.dataCacheDirty_) {\n      const size = this.size_;\n      const gl = this.helper_.getGL();\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n      gl.readPixels(\n        0,\n        0,\n        size[0],\n        size[1],\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data_\n      );\n      this.dataCacheDirty_ = false;\n    }\n    return this.data_;\n  }\n\n  /**\n   * Reads one pixel of the frame buffer as an array of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * If x and/or y are outside of existing data, an array filled with 0 is returned.\n   * @param {number} x Pixel coordinate\n   * @param {number} y Pixel coordinate\n   * @return {Uint8Array} Integer array with one color value (4 components)\n   */\n  readPixel(x, y) {\n    if (x < 0 || y < 0 || x > this.size_[0] || y >= this.size_[1]) {\n      tmpArray4[0] = 0;\n      tmpArray4[1] = 0;\n      tmpArray4[2] = 0;\n      tmpArray4[3] = 0;\n      return tmpArray4;\n    }\n\n    this.readAll();\n    const index =\n      Math.floor(x) + (this.size_[1] - Math.floor(y) - 1) * this.size_[0];\n    tmpArray4[0] = this.data_[index * 4];\n    tmpArray4[1] = this.data_[index * 4 + 1];\n    tmpArray4[2] = this.data_[index * 4 + 2];\n    tmpArray4[3] = this.data_[index * 4 + 3];\n    return tmpArray4;\n  }\n\n  /**\n   * @return {WebGLTexture} Texture to render to\n   */\n  getTexture() {\n    return this.texture_;\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer of the render target\n   */\n  getFramebuffer() {\n    return this.framebuffer_;\n  }\n\n  /**\n   * @return {WebGLRenderbuffer} Depth buffer of the render target\n   */\n  getDepthbuffer() {\n    return this.depthbuffer_;\n  }\n\n  /**\n   * @private\n   */\n  updateSize_() {\n    const size = this.size_;\n    const gl = this.helper_.getGL();\n\n    this.texture_ = this.helper_.createTexture(size, null, this.texture_);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture_,\n      0\n    );\n\n    gl.bindRenderbuffer(gl.RENDERBUFFER, this.depthbuffer_);\n    gl.renderbufferStorage(\n      gl.RENDERBUFFER,\n      gl.DEPTH_COMPONENT16,\n      size[0],\n      size[1]\n    );\n    gl.framebufferRenderbuffer(\n      gl.FRAMEBUFFER,\n      gl.DEPTH_ATTACHMENT,\n      gl.RENDERBUFFER,\n      this.depthbuffer_\n    );\n\n    this.data_ = new Uint8Array(size[0] * size[1] * 4);\n  }\n}\n\nexport default WebGLRenderTarget;\n","/**\n * @module ol/render/webgl/constants\n */\n\n/**\n * @enum {string}\n */\nexport const WebGLWorkerMessageType = {\n  GENERATE_POLYGON_BUFFERS: 'GENERATE_POLYGON_BUFFERS',\n  GENERATE_POINT_BUFFERS: 'GENERATE_POINT_BUFFERS',\n  GENERATE_LINE_STRING_BUFFERS: 'GENERATE_LINE_STRING_BUFFERS',\n};\n\n/**\n * @typedef {Object} WebGLWorkerGenerateBuffersMessage\n * This message will trigger the generation of a vertex and an index buffer based on the given render instructions.\n * When the buffers are generated, the worked will send a message of the same type to the main thread, with\n * the generated buffers in it.\n * Note that any addition properties present in the message *will* be sent back to the main thread.\n * @property {number} id Message id; will be used both in request and response as a means of identification\n * @property {WebGLWorkerMessageType} type Message type\n * @property {ArrayBuffer} renderInstructions render instructions raw binary buffer.\n * @property {number} [customAttributesSize] Amount of hit detection + custom attributes count in the render instructions.\n * @property {ArrayBuffer} [vertexBuffer] Vertices array raw binary buffer (sent by the worker).\n * @property {ArrayBuffer} [indexBuffer] Indices array raw binary buffer (sent by the worker).\n * @property {import(\"../../transform\").Transform} [renderInstructionsTransform] Transformation matrix used to project the instructions coordinates\n */\n","'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 32767 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim | 0);\n            triangles.push(ear.i / dim | 0);\n            triangles.push(next.i / dim | 0);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    var p = c.next;\n    while (p !== a) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(x0, y0, minX, minY, invSize),\n        maxZ = zOrder(x1, y1, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim | 0);\n            triangles.push(p.i / dim | 0);\n            triangles.push(b.i / dim | 0);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\n                earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    var bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n\n    var bridgeReverse = splitPolygon(bridge, hole);\n\n    // filter collinear points around the cuts\n    filterPoints(bridgeReverse, bridgeReverse.next);\n    return filterPoints(bridge, bridge.next);\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                m = p.x < p.next.x ? p : p.next;\n                if (x === hx) return m; // hole touches outer segment; pick leftmost endpoint\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === 0) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = (x - minX) * invSize | 0;\n    y = (y - minY) * invSize | 0;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) >= (ax - px) * (cy - py) &&\n           (ax - px) * (by - py) >= (bx - px) * (ay - py) &&\n           (bx - px) * (cy - py) >= (cx - px) * (by - py);\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = 0;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","/**\n * @module ol/render/webgl/utils\n */\nimport earcut from 'earcut';\nimport {apply as applyTransform} from '../../transform.js';\nimport {clamp} from '../../math.js';\n\nexport const LINESTRING_ANGLE_COSINE_CUTOFF = 0.985;\n\n/** @type {Array<number>} */\nconst tmpArray_ = [];\n\n/**\n * An object holding positions both in an index and a vertex buffer.\n * @typedef {Object} BufferPositions\n * @property {number} vertexPosition Position in the vertex buffer\n * @property {number} indexPosition Position in the index buffer\n */\nconst bufferPositions_ = {vertexPosition: 0, indexPosition: 0};\n\n/**\n * @param {Float32Array} buffer Buffer\n * @param {number} pos Position\n * @param {number} x X\n * @param {number} y Y\n * @param {number} index Index\n */\nfunction writePointVertex(buffer, pos, x, y, index) {\n  buffer[pos + 0] = x;\n  buffer[pos + 1] = y;\n  buffer[pos + 2] = index;\n}\n\n/**\n * Pushes a quad (two triangles) based on a point geometry\n * @param {Float32Array} instructions Array of render instructions for points.\n * @param {number} elementIndex Index from which render instructions will be read.\n * @param {Float32Array} vertexBuffer Buffer in the form of a typed array.\n * @param {Uint32Array} indexBuffer Buffer in the form of a typed array.\n * @param {number} customAttributesSize Amount of custom attributes for each element.\n * @param {BufferPositions} [bufferPositions] Buffer write positions; if not specified, positions will be set at 0.\n * @return {BufferPositions} New buffer positions where to write next\n * @property {number} vertexPosition New position in the vertex buffer where future writes should start.\n * @property {number} indexPosition New position in the index buffer where future writes should start.\n * @private\n */\nexport function writePointFeatureToBuffers(\n  instructions,\n  elementIndex,\n  vertexBuffer,\n  indexBuffer,\n  customAttributesSize,\n  bufferPositions\n) {\n  // This is for x, y and index\n  const baseVertexAttrsCount = 3;\n  const baseInstructionsCount = 2;\n  const stride = baseVertexAttrsCount + customAttributesSize;\n\n  const x = instructions[elementIndex + 0];\n  const y = instructions[elementIndex + 1];\n\n  // read custom numerical attributes on the feature\n  const customAttrs = tmpArray_;\n  customAttrs.length = customAttributesSize;\n  for (let i = 0; i < customAttrs.length; i++) {\n    customAttrs[i] = instructions[elementIndex + baseInstructionsCount + i];\n  }\n\n  let vPos = bufferPositions ? bufferPositions.vertexPosition : 0;\n  let iPos = bufferPositions ? bufferPositions.indexPosition : 0;\n  const baseIndex = vPos / stride;\n\n  // push vertices for each of the four quad corners (first standard then custom attributes)\n  writePointVertex(vertexBuffer, vPos, x, y, 0);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 1);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 2);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 3);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  indexBuffer[iPos++] = baseIndex;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 3;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 2;\n  indexBuffer[iPos++] = baseIndex + 3;\n\n  bufferPositions_.vertexPosition = vPos;\n  bufferPositions_.indexPosition = iPos;\n\n  return bufferPositions_;\n}\n\n/**\n * Pushes a single quad to form a line segment; also includes a computation for the join angles with previous and next\n * segment, in order to be able to offset the vertices correctly in the shader.\n * Join angles are between 0 and 2PI.\n * This also computes the length of the current segment and the sum of the join angle tangents in order\n * to store this information on each subsequent segment along the line. This is necessary to correctly render dashes\n * and symbols along the line.\n *\n *   pB (before)                          pA (after)\n *    X             negative             X\n *     \\             offset             /\n *      \\                              /\n *       \\   join              join   /\n *        \\ angle 0          angle 1 /\n *         \\←---                ←---/      positive\n *          \\   ←--          ←--   /        offset\n *           \\     ↑       ↓      /\n *            X────┴───────┴─────X\n *            p0                  p1\n *\n * @param {Float32Array} instructions Array of render instructions for lines.s\n * @param {number} segmentStartIndex Index of the segment start point from which render instructions will be read.\n * @param {number} segmentEndIndex Index of the segment end point from which render instructions will be read.\n * @param {number|null} beforeSegmentIndex Index of the point right before the segment (null if none, e.g this is a line start)\n * @param {number|null} afterSegmentIndex Index of the point right after the segment (null if none, e.g this is a line end)\n * @param {Array<number>} vertexArray Array containing vertices.\n * @param {Array<number>} indexArray Array containing indices.\n * @param {Array<number>} customAttributes Array of custom attributes value\n * @param {import('../../transform.js').Transform} toWorldTransform Transform matrix used to obtain world coordinates from instructions\n * @param {number} currentLength Cumulated length of segments processed so far\n * @param {number} currentAngleTangentSum Cumulated tangents of the join angles processed so far\n * @return {{length: number, angle: number}} Cumulated length with the newly processed segment (in world units), new sum of the join angle tangents\n * @private\n */\nexport function writeLineSegmentToBuffers(\n  instructions,\n  segmentStartIndex,\n  segmentEndIndex,\n  beforeSegmentIndex,\n  afterSegmentIndex,\n  vertexArray,\n  indexArray,\n  customAttributes,\n  toWorldTransform,\n  currentLength,\n  currentAngleTangentSum\n) {\n  // compute the stride to determine how many vertices were already pushed\n  const baseVertexAttrsCount = 8; // base attributes: x0, y0, x1, y1, angle0, angle1, distance, params\n  const stride = baseVertexAttrsCount + customAttributes.length;\n  const baseIndex = vertexArray.length / stride;\n\n  // The segment is composed of two positions called P0[x0, y0] and P1[x1, y1]\n  // Depending on whether there are points before and after the segment, its final shape\n  // will be different\n  const p0 = [\n    instructions[segmentStartIndex + 0],\n    instructions[segmentStartIndex + 1],\n  ];\n  const p1 = [instructions[segmentEndIndex], instructions[segmentEndIndex + 1]];\n\n  // to compute join angles we need to reproject coordinates back in world units\n  const p0world = applyTransform(toWorldTransform, [...p0]);\n  const p1world = applyTransform(toWorldTransform, [...p1]);\n\n  /**\n   * Compute the angle between p0pA and p0pB\n   * @param {import(\"../../coordinate.js\").Coordinate} p0 Point 0\n   * @param {import(\"../../coordinate.js\").Coordinate} pA Point A\n   * @param {import(\"../../coordinate.js\").Coordinate} pB Point B\n   * @return {number} a value in [0, 2PI]\n   */\n  function angleBetween(p0, pA, pB) {\n    const lenA = Math.sqrt(\n      (pA[0] - p0[0]) * (pA[0] - p0[0]) + (pA[1] - p0[1]) * (pA[1] - p0[1])\n    );\n    const tangentA = [(pA[0] - p0[0]) / lenA, (pA[1] - p0[1]) / lenA];\n    const orthoA = [-tangentA[1], tangentA[0]];\n    const lenB = Math.sqrt(\n      (pB[0] - p0[0]) * (pB[0] - p0[0]) + (pB[1] - p0[1]) * (pB[1] - p0[1])\n    );\n    const tangentB = [(pB[0] - p0[0]) / lenB, (pB[1] - p0[1]) / lenB];\n\n    // this angle can be clockwise or anticlockwise; hence the computation afterwards\n    const angle =\n      lenA === 0 || lenB === 0\n        ? 0\n        : Math.acos(\n            clamp(tangentB[0] * tangentA[0] + tangentB[1] * tangentA[1], -1, 1)\n          );\n    const isClockwise = tangentB[0] * orthoA[0] + tangentB[1] * orthoA[1] > 0;\n    return !isClockwise ? Math.PI * 2 - angle : angle;\n  }\n\n  // a negative angle indicates a line cap\n  let angle0 = -1;\n  let angle1 = -1;\n  let newAngleTangentSum = currentAngleTangentSum;\n\n  const joinBefore = beforeSegmentIndex !== null;\n  const joinAfter = afterSegmentIndex !== null;\n\n  // add vertices and adapt offsets for P0 in case of join\n  if (joinBefore) {\n    // B for before\n    const pB = [\n      instructions[beforeSegmentIndex],\n      instructions[beforeSegmentIndex + 1],\n    ];\n    const pBworld = applyTransform(toWorldTransform, [...pB]);\n    angle0 = angleBetween(p0world, p1world, pBworld);\n\n    // only add to the sum if the angle isn't too close to 0 or 2PI\n    if (Math.cos(angle0) <= LINESTRING_ANGLE_COSINE_CUTOFF) {\n      newAngleTangentSum += Math.tan((angle0 - Math.PI) / 2);\n    }\n  }\n  // adapt offsets for P1 in case of join; add to angle sum\n  if (joinAfter) {\n    // A for after\n    const pA = [\n      instructions[afterSegmentIndex],\n      instructions[afterSegmentIndex + 1],\n    ];\n    const pAworld = applyTransform(toWorldTransform, [...pA]);\n    angle1 = angleBetween(p1world, p0world, pAworld);\n\n    // only add to the sum if the angle isn't too close to 0 or 2PI\n    if (Math.cos(angle1) <= LINESTRING_ANGLE_COSINE_CUTOFF) {\n      newAngleTangentSum += Math.tan((Math.PI - angle1) / 2);\n    }\n  }\n\n  /**\n   * @param {number} vertexIndex From 0 to 3, indicating position in the quad\n   * @param {number} angleSum Sum of the join angles encountered so far (used to compute distance offset\n   * @return {number} A float value containing both information\n   */\n  function computeParameters(vertexIndex, angleSum) {\n    if (angleSum === 0) {\n      return vertexIndex * 10000;\n    }\n    return Math.sign(angleSum) * (vertexIndex * 10000 + Math.abs(angleSum));\n  }\n\n  // add main segment triangles\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(0, currentAngleTangentSum)\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(1, currentAngleTangentSum)\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(2, currentAngleTangentSum)\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(3, currentAngleTangentSum)\n  );\n  vertexArray.push(...customAttributes);\n\n  indexArray.push(\n    baseIndex,\n    baseIndex + 1,\n    baseIndex + 2,\n    baseIndex + 1,\n    baseIndex + 3,\n    baseIndex + 2\n  );\n\n  return {\n    length:\n      currentLength +\n      Math.sqrt(\n        (p1world[0] - p0world[0]) * (p1world[0] - p0world[0]) +\n          (p1world[1] - p0world[1]) * (p1world[1] - p0world[1])\n      ),\n    angle: newAngleTangentSum,\n  };\n}\n\n/**\n * Pushes several triangles to form a polygon, including holes\n * @param {Float32Array} instructions Array of render instructions for lines.\n * @param {number} polygonStartIndex Index of the polygon start point from which render instructions will be read.\n * @param {Array<number>} vertexArray Array containing vertices.\n * @param {Array<number>} indexArray Array containing indices.\n * @param {number} customAttributesSize Amount of custom attributes for each element.\n * @return {number} Next polygon instructions index\n * @private\n */\nexport function writePolygonTrianglesToBuffers(\n  instructions,\n  polygonStartIndex,\n  vertexArray,\n  indexArray,\n  customAttributesSize\n) {\n  const instructionsPerVertex = 2; // x, y\n  const attributesPerVertex = 2 + customAttributesSize;\n  let instructionsIndex = polygonStartIndex;\n  const customAttributes = instructions.slice(\n    instructionsIndex,\n    instructionsIndex + customAttributesSize\n  );\n  instructionsIndex += customAttributesSize;\n  const ringsCount = instructions[instructionsIndex++];\n  let verticesCount = 0;\n  const holes = new Array(ringsCount - 1);\n  for (let i = 0; i < ringsCount; i++) {\n    verticesCount += instructions[instructionsIndex++];\n    if (i < ringsCount - 1) {\n      holes[i] = verticesCount;\n    }\n  }\n  const flatCoords = instructions.slice(\n    instructionsIndex,\n    instructionsIndex + verticesCount * instructionsPerVertex\n  );\n\n  // pushing to vertices and indices!! this is where the magic happens\n  const result = earcut(flatCoords, holes, instructionsPerVertex);\n  for (let i = 0; i < result.length; i++) {\n    indexArray.push(result[i] + vertexArray.length / attributesPerVertex);\n  }\n  for (let i = 0; i < flatCoords.length; i += 2) {\n    vertexArray.push(flatCoords[i], flatCoords[i + 1], ...customAttributes);\n  }\n\n  return instructionsIndex + verticesCount * instructionsPerVertex;\n}\n\n/**\n * Returns a texture of 1x1 pixel, white\n * @private\n * @return {ImageData} Image data.\n */\nexport function getBlankImageData() {\n  const canvas = document.createElement('canvas');\n  const image = canvas.getContext('2d').createImageData(1, 1);\n  image.data[0] = 255;\n  image.data[1] = 255;\n  image.data[2] = 255;\n  image.data[3] = 255;\n  return image;\n}\n\n/**\n * Generates a color array based on a numerical id\n * Note: the range for each component is 0 to 1 with 256 steps\n * @param {number} id Id\n * @param {Array<number>} [array] Reusable array\n * @return {Array<number>} Color array containing the encoded id\n */\nexport function colorEncodeId(id, array) {\n  array = array || [];\n  const radix = 256;\n  const divide = radix - 1;\n  array[0] = Math.floor(id / radix / radix / radix) / divide;\n  array[1] = (Math.floor(id / radix / radix) % radix) / divide;\n  array[2] = (Math.floor(id / radix) % radix) / divide;\n  array[3] = (id % radix) / divide;\n  return array;\n}\n\n/**\n * Reads an id from a color-encoded array\n * Note: the expected range for each component is 0 to 1 with 256 steps.\n * @param {Array<number>} color Color array containing the encoded id\n * @return {number} Decoded id\n */\nexport function colorDecodeId(color) {\n  let id = 0;\n  const radix = 256;\n  const mult = radix - 1;\n  id += Math.round(color[0] * radix * radix * radix * mult);\n  id += Math.round(color[1] * radix * radix * mult);\n  id += Math.round(color[2] * radix * mult);\n  id += Math.round(color[3] * mult);\n  return id;\n}\n","/**\n * @module ol/renderer/webgl/PointsLayer\n */\nimport BaseVector from '../../layer/BaseVector.js';\nimport VectorEventType from '../../source/VectorEventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport WebGLRenderTarget from '../../webgl/RenderTarget.js';\nimport {ARRAY_BUFFER, DYNAMIC_DRAW, ELEMENT_ARRAY_BUFFER} from '../../webgl.js';\nimport {AttributeType, DefaultUniform} from '../../webgl/Helper.js';\nimport {WebGLWorkerMessageType} from '../../render/webgl/constants.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  makeInverse as makeInverseTransform,\n  multiply as multiplyTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {assert} from '../../asserts.js';\nimport {buffer, createEmpty, equals} from '../../extent.js';\nimport {colorDecodeId, colorEncodeId} from '../../render/webgl/utils.js';\nimport {create as createWebGLWorker} from '../../worker/webgl.js';\nimport {fromUserCoordinate, getUserProjection} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {getWorldParameters} from './worldUtil.js';\nimport {listen, unlistenByKey} from '../../events.js';\n\n/**\n * @typedef {Object} CustomAttribute A description of a custom attribute to be passed on to the GPU, with a value different\n * for each feature.\n * @property {string} name Attribute name.\n * @property {function(import(\"../../Feature\").default, Object<string, *>):number} callback This callback computes the numerical value of the\n * attribute for a given feature (properties are available as 2nd arg for quicker access).\n */\n\n/**\n * @typedef {Object} FeatureCacheItem Object that holds a reference to a feature, its geometry and properties. Used to optimize\n * rebuildBuffers by accessing these objects quicker.\n * @property {import(\"../../Feature\").default} feature Feature\n * @property {Object<string, *>} properties Feature properties\n * @property {import(\"../../geom\").Geometry} geometry Feature geometry\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the canvas element.\n * @property {Array<CustomAttribute>} [attributes] These attributes will be read from the features in the source and then\n * passed to the GPU. The `name` property of each attribute will serve as its identifier:\n *  * In the vertex shader as an `attribute` by prefixing it with `a_`\n *  * In the fragment shader as a `varying` by prefixing it with `v_`\n * Please note that these can only be numerical values.\n * @property {string} vertexShader Vertex shader source, mandatory.\n * @property {string} fragmentShader Fragment shader source, mandatory.\n * @property {boolean} [hitDetectionEnabled] Whether shader is hit detection aware.\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * Please note that `u_texture` is reserved for the main texture slot and `u_opacity` is reserved for the layer opacity.\n * @property {Array<import(\"./Layer\").PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * WebGL vector renderer optimized for points.\n * All features will be rendered as quads (two triangles forming a square). New data will be flushed to the GPU\n * every time the vector source changes.\n *\n * You need to provide vertex and fragment shaders for rendering. This can be done using\n * {@link module:ol/webgl/ShaderBuilder~ShaderBuilder} utilities. These shaders shall expect a `a_position` attribute\n * containing the screen-space projected center of the quad, as well as a `a_index` attribute\n * whose value (0, 1, 2 or 3) indicates which quad vertex is currently getting processed (see structure below).\n *\n * To include variable attributes in the shaders, you need to declare them using the `attributes` property of\n * the options object like so:\n * ```js\n * new WebGLPointsLayerRenderer(layer, {\n *   attributes: [\n *     {\n *       name: 'size',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *     {\n *       name: 'weight',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *   ],\n *   vertexShader:\n *     // shader using attribute a_weight and a_size\n *   fragmentShader:\n *     // shader using varying v_weight and v_size\n * ```\n *\n * To enable hit detection, you must as well provide dedicated shaders using the `hitVertexShader`\n * and `hitFragmentShader` properties. These shall expect the `a_hitColor` attribute to contain\n * the final color that will have to be output for hit detection to work.\n *\n * The following uniform is used for the main texture: `u_texture`.\n * The following uniform is used for the layer opacity: `u_opacity`.\n *\n * Please note that the main shader output should have premultiplied alpha, otherwise visual anomalies may occur.\n *\n * Points are rendered as quads with the following structure:\n *\n * ```\n *   (u0, v1)      (u1, v1)\n *  [3]----------[2]\n *   |`           |\n *   |  `         |\n *   |    `       |\n *   |      `     |\n *   |        `   |\n *   |          ` |\n *  [0]----------[1]\n *   (u0, v0)      (u1, v0)\n *  ```\n *\n * This uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\n *\n * @api\n */\nclass WebGLPointsLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n   * @param {Options} options Options.\n   */\n  constructor(layer, options) {\n    const uniforms = options.uniforms || {};\n    const projectionMatrixTransform = createTransform();\n    uniforms[DefaultUniform.PROJECTION_MATRIX] = projectionMatrixTransform;\n\n    super(layer, {\n      uniforms: uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    this.sourceRevision_ = -1;\n\n    this.verticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n    this.indicesBuffer_ = new WebGLArrayBuffer(\n      ELEMENT_ARRAY_BUFFER,\n      DYNAMIC_DRAW\n    );\n\n    /**\n     * @private\n     */\n    this.vertexShader_ = options.vertexShader;\n\n    /**\n     * @private\n     */\n    this.fragmentShader_ = options.fragmentShader;\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.program_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hitDetectionEnabled_ = options.hitDetectionEnabled ?? true;\n\n    const customAttributes = options.attributes\n      ? options.attributes.map(function (attribute) {\n          return {\n            name: 'a_prop_' + attribute.name,\n            size: 1,\n            type: AttributeType.FLOAT,\n          };\n        })\n      : [];\n\n    /**\n     * A list of attributes used by the renderer. By default only the position and\n     * index of the vertex (0 to 3) are required.\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     */\n    this.attributes = [\n      {\n        name: 'a_position',\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_index',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ];\n\n    if (this.hitDetectionEnabled_) {\n      this.attributes.push({\n        name: 'a_hitColor',\n        size: 4,\n        type: AttributeType.FLOAT,\n      });\n      this.attributes.push({\n        name: 'a_featureUid',\n        size: 1,\n        type: AttributeType.FLOAT,\n      });\n    }\n    this.attributes.push(...customAttributes);\n\n    this.customAttributes = options.attributes ? options.attributes : [];\n\n    this.previousExtent_ = createEmpty();\n\n    /**\n     * This transform is updated on every frame and is the composition of:\n     * - invert of the world->screen transform that was used when rebuilding buffers (see `this.renderTransform_`)\n     * - current world->screen transform\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.currentTransform_ = projectionMatrixTransform;\n\n    /**\n     * This transform is updated when buffers are rebuilt and converts world space coordinates to screen space\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.renderTransform_ = createTransform();\n\n    /**\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.invertRenderTransform_ = createTransform();\n\n    /**\n     * @type {Float32Array}\n     * @private\n     */\n    this.renderInstructions_ = new Float32Array(0);\n\n    /**\n     * @type {WebGLRenderTarget}\n     * @private\n     */\n    this.hitRenderTarget_;\n\n    /**\n     * Keep track of latest message sent to worker\n     * @type {number}\n     * @private\n     */\n    this.lastSentId = 0;\n\n    /**\n     * @private\n     */\n    this.worker_ = createWebGLWorker();\n\n    this.worker_.addEventListener(\n      'message',\n      /**\n       * @param {*} event Event.\n       */\n      (event) => {\n        const received = event.data;\n        if (received.type === WebGLWorkerMessageType.GENERATE_POINT_BUFFERS) {\n          const projectionTransform = received.projectionTransform;\n          this.verticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n          this.helper.flushBufferData(this.verticesBuffer_);\n          this.indicesBuffer_.fromArrayBuffer(received.indexBuffer);\n          this.helper.flushBufferData(this.indicesBuffer_);\n\n          this.renderTransform_ = projectionTransform;\n          makeInverseTransform(\n            this.invertRenderTransform_,\n            this.renderTransform_\n          );\n          this.renderInstructions_ = new Float32Array(\n            event.data.renderInstructions\n          );\n          if (received.id === this.lastSentId) {\n            this.ready = true;\n          }\n          this.getLayer().changed();\n        }\n      }\n    );\n\n    /**\n     * This object will be updated when the source changes. Key is uid.\n     * @type {Object<string, FeatureCacheItem>}\n     * @private\n     */\n    this.featureCache_ = {};\n\n    /**\n     * Amount of features in the cache.\n     * @type {number}\n     * @private\n     */\n    this.featureCount_ = 0;\n\n    const source = this.getLayer().getSource();\n    this.sourceListenKeys_ = [\n      listen(\n        source,\n        VectorEventType.ADDFEATURE,\n        this.handleSourceFeatureAdded_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.CHANGEFEATURE,\n        this.handleSourceFeatureChanged_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceFeatureDelete_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.CLEAR,\n        this.handleSourceFeatureClear_,\n        this\n      ),\n    ];\n    source.forEachFeature((feature) => {\n      this.featureCache_[getUid(feature)] = {\n        feature: feature,\n        properties: feature.getProperties(),\n        geometry: feature.getGeometry(),\n      };\n      this.featureCount_++;\n    });\n  }\n\n  afterHelperCreated() {\n    this.program_ = this.helper.getProgram(\n      this.fragmentShader_,\n      this.vertexShader_\n    );\n\n    if (this.hitDetectionEnabled_) {\n      this.hitRenderTarget_ = new WebGLRenderTarget(this.helper);\n    }\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureAdded_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n    this.featureCount_++;\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureChanged_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureDelete_(event) {\n    const feature = event.feature;\n    delete this.featureCache_[getUid(feature)];\n    this.featureCount_--;\n  }\n\n  /**\n   * @private\n   */\n  handleSourceFeatureClear_() {\n    this.featureCache_ = {};\n    this.featureCount_ = 0;\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    const gl = this.helper.getGL();\n    this.preRender(gl, frameState);\n    const [startWorld, endWorld, worldWidth] = getWorldParameters(\n      frameState,\n      this.getLayer()\n    );\n\n    // draw the normal canvas\n    this.renderWorlds(frameState, false, startWorld, endWorld, worldWidth);\n    this.helper.finalizeDraw(\n      frameState,\n      this.dispatchPreComposeEvent,\n      this.dispatchPostComposeEvent\n    );\n\n    if (this.hitDetectionEnabled_) {\n      // draw the hit buffer\n      this.renderWorlds(frameState, true, startWorld, endWorld, worldWidth);\n      this.hitRenderTarget_.clearCachedData();\n    }\n\n    this.postRender(gl, frameState);\n\n    const canvas = this.helper.getCanvas();\n    return canvas;\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrameInternal(frameState) {\n    const layer = this.getLayer();\n    const vectorSource = layer.getSource();\n    const viewState = frameState.viewState;\n    const viewNotMoving =\n      !frameState.viewHints[ViewHint.ANIMATING] &&\n      !frameState.viewHints[ViewHint.INTERACTING];\n    const extentChanged = !equals(this.previousExtent_, frameState.extent);\n    const sourceChanged = this.sourceRevision_ < vectorSource.getRevision();\n\n    if (sourceChanged) {\n      this.sourceRevision_ = vectorSource.getRevision();\n    }\n\n    if (viewNotMoving && (extentChanged || sourceChanged)) {\n      const projection = viewState.projection;\n      const resolution = viewState.resolution;\n\n      const renderBuffer =\n        layer instanceof BaseVector ? layer.getRenderBuffer() : 0;\n      const extent = buffer(frameState.extent, renderBuffer * resolution);\n      vectorSource.loadFeatures(extent, resolution, projection);\n\n      this.rebuildBuffers_(frameState);\n      this.previousExtent_ = frameState.extent.slice();\n    }\n\n    this.helper.useProgram(this.program_, frameState);\n    this.helper.prepareDraw(frameState);\n\n    // write new data\n    this.helper.bindBuffer(this.verticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n    this.helper.enableAttributes(this.attributes);\n\n    return true;\n  }\n\n  /**\n   * Rebuild internal webgl buffers based on current view extent; costly, should not be called too much\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  rebuildBuffers_(frameState) {\n    // saves the projection transform for the current frame state\n    const projectionTransform = createTransform();\n    this.helper.makeProjectionTransform(frameState, projectionTransform);\n\n    const userProjection = getUserProjection();\n\n    const baseInstructionLength = this.hitDetectionEnabled_ ? 7 : 2; // see below\n    const singleInstructionLength =\n      baseInstructionLength + this.customAttributes.length;\n    const totalSize = singleInstructionLength * this.featureCount_;\n    if (\n      !this.renderInstructions_ ||\n      this.renderInstructions_.length !== totalSize\n    ) {\n      this.renderInstructions_ = new Float32Array(totalSize);\n    }\n\n    // loop on features to fill the buffer\n    let featureCache, geometry;\n    const tmpCoords = [];\n    const tmpColor = [];\n    let idx = -1;\n    for (const featureUid in this.featureCache_) {\n      featureCache = this.featureCache_[featureUid];\n      geometry = /** @type {import(\"../../geom\").Point} */ (\n        featureCache.geometry\n      );\n      if (!geometry || geometry.getType() !== 'Point') {\n        continue;\n      }\n      if (userProjection) {\n        const userCoords = fromUserCoordinate(\n          geometry.getFlatCoordinates(),\n          frameState.viewState.projection\n        );\n        tmpCoords[0] = userCoords[0];\n        tmpCoords[1] = userCoords[1];\n      } else {\n        tmpCoords[0] = geometry.getFlatCoordinates()[0];\n        tmpCoords[1] = geometry.getFlatCoordinates()[1];\n      }\n      applyTransform(projectionTransform, tmpCoords);\n\n      this.renderInstructions_[++idx] = tmpCoords[0];\n      this.renderInstructions_[++idx] = tmpCoords[1];\n\n      // for hit detection, the feature uid is saved in the opacity value\n      // and the index of the opacity value is encoded in the color values\n      if (this.hitDetectionEnabled_) {\n        const hitColor = colorEncodeId(idx + 5, tmpColor);\n        this.renderInstructions_[++idx] = hitColor[0];\n        this.renderInstructions_[++idx] = hitColor[1];\n        this.renderInstructions_[++idx] = hitColor[2];\n        this.renderInstructions_[++idx] = hitColor[3];\n        this.renderInstructions_[++idx] = Number(featureUid);\n      }\n\n      // pushing custom attributes\n      for (let j = 0; j < this.customAttributes.length; j++) {\n        const value = this.customAttributes[j].callback(\n          featureCache.feature,\n          featureCache.properties\n        );\n        this.renderInstructions_[++idx] = value;\n      }\n    }\n\n    /** @type {import('../../render/webgl/constants.js').WebGLWorkerGenerateBuffersMessage} */\n    const message = {\n      id: ++this.lastSentId,\n      type: WebGLWorkerMessageType.GENERATE_POINT_BUFFERS,\n      renderInstructions: this.renderInstructions_.buffer,\n      customAttributesSize: singleInstructionLength - 2,\n    };\n    // additional properties will be sent back as-is by the worker\n    message['projectionTransform'] = projectionTransform;\n    this.ready = false;\n    this.worker_.postMessage(message, [this.renderInstructions_.buffer]);\n    this.renderInstructions_ = null;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    assert(\n      this.hitDetectionEnabled_,\n      '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has been disabled using the `disableHitDetection: true` option.'\n    );\n    if (!this.renderInstructions_ || !this.hitDetectionEnabled_) {\n      return undefined;\n    }\n\n    const pixel = applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice()\n    );\n\n    const data = this.hitRenderTarget_.readPixel(pixel[0] / 2, pixel[1] / 2);\n    const color = [data[0] / 255, data[1] / 255, data[2] / 255, data[3] / 255];\n    const index = colorDecodeId(color);\n    const opacity = this.renderInstructions_[index];\n    const uid = Math.floor(opacity).toString();\n\n    const source = this.getLayer().getSource();\n    const feature = source.getFeatureByUid(uid);\n    if (feature) {\n      return callback(feature, this.getLayer(), null);\n    }\n    return undefined;\n  }\n\n  /**\n   * Render the world, either to the main framebuffer or to the hit framebuffer\n   * @param {import(\"../../Map.js\").FrameState} frameState current frame state\n   * @param {boolean} forHitDetection whether the rendering is for hit detection\n   * @param {number} startWorld the world to render in the first iteration\n   * @param {number} endWorld the last world to render\n   * @param {number} worldWidth the width of the worlds being rendered\n   */\n  renderWorlds(frameState, forHitDetection, startWorld, endWorld, worldWidth) {\n    let world = startWorld;\n\n    this.helper.useProgram(this.program_, frameState);\n\n    if (forHitDetection) {\n      this.hitRenderTarget_.setSize([\n        Math.floor(frameState.size[0] / 2),\n        Math.floor(frameState.size[1] / 2),\n      ]);\n      this.helper.prepareDrawToRenderTarget(\n        frameState,\n        this.hitRenderTarget_,\n        true\n      );\n    }\n\n    this.helper.bindBuffer(this.verticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n    this.helper.enableAttributes(this.attributes);\n\n    do {\n      this.helper.makeProjectionTransform(frameState, this.currentTransform_);\n      translateTransform(this.currentTransform_, world * worldWidth, 0);\n      multiplyTransform(this.currentTransform_, this.invertRenderTransform_);\n      this.helper.applyUniforms(frameState);\n      this.helper.applyHitDetectionUniform(forHitDetection);\n      const renderCount = this.indicesBuffer_.getSize();\n      this.helper.drawElements(0, renderCount);\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.worker_.terminate();\n    this.layer_ = null;\n    this.sourceListenKeys_.forEach(function (key) {\n      unlistenByKey(key);\n    });\n    this.sourceListenKeys_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default WebGLPointsLayerRenderer;\n","\n        export function create() {\n          const source = \"const e=\\\"GENERATE_POLYGON_BUFFERS\\\",t=\\\"GENERATE_POINT_BUFFERS\\\",n=\\\"GENERATE_LINE_STRING_BUFFERS\\\";function r(e,t){const n=t[0],r=t[1];return t[0]=e[0]*n+e[2]*r+e[4],t[1]=e[1]*n+e[3]*r+e[5],t}function x(e,t){const n=(r=t)[0]*r[3]-r[1]*r[2];var r;!function(e,t){if(!e)throw new Error(t)}(0!==n,\\\"Transformation matrix cannot be inverted\\\");const x=t[0],i=t[1],u=t[2],o=t[3],f=t[4],s=t[5];return e[0]=o/n,e[1]=-i/n,e[2]=-u/n,e[3]=x/n,e[4]=(u*s-o*f)/n,e[5]=-(x*s-i*f)/n,e}function i(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\\\"default\\\")?e.default:e}new Array(6);var u={exports:{}};function o(e,t,n){n=n||2;var r,x,i,u,o,s,l,v=t&&t.length,h=v?t[0]*n:e.length,c=f(e,0,h,n,!0),g=[];if(!c||c.next===c.prev)return g;if(v&&(c=function(e,t,n,r){var x,i,u,o=[];for(x=0,i=t.length;x<i;x++)(u=f(e,t[x]*r,x<i-1?t[x+1]*r:e.length,r,!1))===u.next&&(u.steiner=!0),o.push(d(u));for(o.sort(p),x=0;x<o.length;x++)n=y(o[x],n);return n}(e,t,c,n)),e.length>80*n){r=i=e[0],x=u=e[1];for(var b=n;b<h;b+=n)(o=e[b])<r&&(r=o),(s=e[b+1])<x&&(x=s),o>i&&(i=o),s>u&&(u=s);l=0!==(l=Math.max(i-r,u-x))?32767/l:0}return a(c,g,n,r,x,l,0),g}function f(e,t,n,r,x){var i,u;if(x===O(e,t,n,r)>0)for(i=t;i<n;i+=r)u=P(i,e[i],e[i+1],u);else for(i=n-r;i>=t;i-=r)u=P(i,e[i],e[i+1],u);return u&&m(u,u.next)&&(B(u),u=u.next),u}function s(e,t){if(!e)return e;t||(t=e);var n,r=e;do{if(n=!1,r.steiner||!m(r,r.next)&&0!==w(r.prev,r,r.next))r=r.next;else{if(B(r),(r=t=r.prev)===r.next)break;n=!0}}while(n||r!==t);return t}function a(e,t,n,r,x,i,u){if(e){!u&&i&&function(e,t,n,r){var x=e;do{0===x.z&&(x.z=b(x.x,x.y,t,n,r)),x.prevZ=x.prev,x.nextZ=x.next,x=x.next}while(x!==e);x.prevZ.nextZ=null,x.prevZ=null,function(e){var t,n,r,x,i,u,o,f,s=1;do{for(n=e,e=null,i=null,u=0;n;){for(u++,r=n,o=0,t=0;t<s&&(o++,r=r.nextZ);t++);for(f=s;o>0||f>0&&r;)0!==o&&(0===f||!r||n.z<=r.z)?(x=n,n=n.nextZ,o--):(x=r,r=r.nextZ,f--),i?i.nextZ=x:e=x,x.prevZ=i,i=x;n=r}i.nextZ=null,s*=2}while(u>1)}(x)}(e,r,x,i);for(var o,f,p=e;e.prev!==e.next;)if(o=e.prev,f=e.next,i?v(e,r,x,i):l(e))t.push(o.i/n|0),t.push(e.i/n|0),t.push(f.i/n|0),B(e),e=f.next,p=f.next;else if((e=f)===p){u?1===u?a(e=h(s(e),t,n),t,n,r,x,i,2):2===u&&c(e,t,n,r,x,i):a(s(e),t,n,r,x,i,1);break}}}function l(e){var t=e.prev,n=e,r=e.next;if(w(t,n,r)>=0)return!1;for(var x=t.x,i=n.x,u=r.x,o=t.y,f=n.y,s=r.y,a=x<i?x<u?x:u:i<u?i:u,l=o<f?o<s?o:s:f<s?f:s,v=x>i?x>u?x:u:i>u?i:u,h=o>f?o>s?o:s:f>s?f:s,c=r.next;c!==t;){if(c.x>=a&&c.x<=v&&c.y>=l&&c.y<=h&&M(x,o,i,f,u,s,c.x,c.y)&&w(c.prev,c,c.next)>=0)return!1;c=c.next}return!0}function v(e,t,n,r){var x=e.prev,i=e,u=e.next;if(w(x,i,u)>=0)return!1;for(var o=x.x,f=i.x,s=u.x,a=x.y,l=i.y,v=u.y,h=o<f?o<s?o:s:f<s?f:s,c=a<l?a<v?a:v:l<v?l:v,p=o>f?o>s?o:s:f>s?f:s,y=a>l?a>v?a:v:l>v?l:v,g=b(h,c,t,n,r),d=b(p,y,t,n,r),Z=e.prevZ,m=e.nextZ;Z&&Z.z>=g&&m&&m.z<=d;){if(Z.x>=h&&Z.x<=p&&Z.y>=c&&Z.y<=y&&Z!==x&&Z!==u&&M(o,a,f,l,s,v,Z.x,Z.y)&&w(Z.prev,Z,Z.next)>=0)return!1;if(Z=Z.prevZ,m.x>=h&&m.x<=p&&m.y>=c&&m.y<=y&&m!==x&&m!==u&&M(o,a,f,l,s,v,m.x,m.y)&&w(m.prev,m,m.next)>=0)return!1;m=m.nextZ}for(;Z&&Z.z>=g;){if(Z.x>=h&&Z.x<=p&&Z.y>=c&&Z.y<=y&&Z!==x&&Z!==u&&M(o,a,f,l,s,v,Z.x,Z.y)&&w(Z.prev,Z,Z.next)>=0)return!1;Z=Z.prevZ}for(;m&&m.z<=d;){if(m.x>=h&&m.x<=p&&m.y>=c&&m.y<=y&&m!==x&&m!==u&&M(o,a,f,l,s,v,m.x,m.y)&&w(m.prev,m,m.next)>=0)return!1;m=m.nextZ}return!0}function h(e,t,n){var r=e;do{var x=r.prev,i=r.next.next;!m(x,i)&&A(x,r,r.next,i)&&z(x,i)&&z(i,x)&&(t.push(x.i/n|0),t.push(r.i/n|0),t.push(i.i/n|0),B(r),B(r.next),r=e=i),r=r.next}while(r!==e);return s(r)}function c(e,t,n,r,x,i){var u=e;do{for(var o=u.next.next;o!==u.prev;){if(u.i!==o.i&&Z(u,o)){var f=F(u,o);return u=s(u,u.next),f=s(f,f.next),a(u,t,n,r,x,i,0),void a(f,t,n,r,x,i,0)}o=o.next}u=u.next}while(u!==e)}function p(e,t){return e.x-t.x}function y(e,t){var n=function(e,t){var n,r=t,x=e.x,i=e.y,u=-1/0;do{if(i<=r.y&&i>=r.next.y&&r.next.y!==r.y){var o=r.x+(i-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(o<=x&&o>u&&(u=o,n=r.x<r.next.x?r:r.next,o===x))return n}r=r.next}while(r!==t);if(!n)return null;var f,s=n,a=n.x,l=n.y,v=1/0;r=n;do{x>=r.x&&r.x>=a&&x!==r.x&&M(i<l?x:u,i,a,l,i<l?u:x,i,r.x,r.y)&&(f=Math.abs(i-r.y)/(x-r.x),z(r,e)&&(f<v||f===v&&(r.x>n.x||r.x===n.x&&g(n,r)))&&(n=r,v=f)),r=r.next}while(r!==s);return n}(e,t);if(!n)return t;var r=F(n,e);return s(r,r.next),s(n,n.next)}function g(e,t){return w(e.prev,e,t.prev)<0&&w(t.next,e,e.next)<0}function b(e,t,n,r,x){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=(e-n)*x|0)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=(t-r)*x|0)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function d(e){var t=e,n=e;do{(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next}while(t!==e);return n}function M(e,t,n,r,x,i,u,o){return(x-u)*(t-o)>=(e-u)*(i-o)&&(e-u)*(r-o)>=(n-u)*(t-o)&&(n-u)*(i-o)>=(x-u)*(r-o)}function Z(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){var n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&A(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}(e,t)&&(z(e,t)&&z(t,e)&&function(e,t){var n=e,r=!1,x=(e.x+t.x)/2,i=(e.y+t.y)/2;do{n.y>i!=n.next.y>i&&n.next.y!==n.y&&x<(n.next.x-n.x)*(i-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==e);return r}(e,t)&&(w(e.prev,e,t.prev)||w(e,t.prev,t))||m(e,t)&&w(e.prev,e,e.next)>0&&w(t.prev,t,t.next)>0)}function w(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function m(e,t){return e.x===t.x&&e.y===t.y}function A(e,t,n,r){var x=I(w(e,t,n)),i=I(w(e,t,r)),u=I(w(n,r,e)),o=I(w(n,r,t));return x!==i&&u!==o||(!(0!==x||!E(e,n,t))||(!(0!==i||!E(e,r,t))||(!(0!==u||!E(n,e,r))||!(0!==o||!E(n,t,r)))))}function E(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function I(e){return e>0?1:e<0?-1:0}function z(e,t){return w(e.prev,e,e.next)<0?w(e,t,e.next)>=0&&w(e,e.prev,t)>=0:w(e,t,e.prev)<0||w(e,e.next,t)<0}function F(e,t){var n=new _(e.i,e.x,e.y),r=new _(t.i,t.x,t.y),x=e.next,i=t.prev;return e.next=t,t.prev=e,n.next=x,x.prev=n,r.next=n,n.prev=r,i.next=r,r.prev=i,r}function P(e,t,n,r){var x=new _(e,t,n);return r?(x.next=r.next,x.prev=r,r.next.prev=x,r.next=x):(x.prev=x,x.next=x),x}function B(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function _(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function O(e,t,n,r){for(var x=0,i=t,u=n-r;i<n;i+=r)x+=(e[u]-e[i])*(e[i+1]+e[u+1]),u=i;return x}u.exports=o,u.exports.default=o,o.deviation=function(e,t,n,r){var x=t&&t.length,i=x?t[0]*n:e.length,u=Math.abs(O(e,0,i,n));if(x)for(var o=0,f=t.length;o<f;o++){var s=t[o]*n,a=o<f-1?t[o+1]*n:e.length;u-=Math.abs(O(e,s,a,n))}var l=0;for(o=0;o<r.length;o+=3){var v=r[o]*n,h=r[o+1]*n,c=r[o+2]*n;l+=Math.abs((e[v]-e[c])*(e[h+1]-e[v+1])-(e[v]-e[h])*(e[c+1]-e[v+1]))}return 0===u&&0===l?0:Math.abs((l-u)/u)},o.flatten=function(e){for(var t=e[0][0].length,n={vertices:[],holes:[],dimensions:t},r=0,x=0;x<e.length;x++){for(var i=0;i<e[x].length;i++)for(var u=0;u<t;u++)n.vertices.push(e[x][i][u]);x>0&&(r+=e[x-1].length,n.holes.push(r))}return n};var N=i(u.exports);const R=[],S={vertexPosition:0,indexPosition:0};function T(e,t,n,r,x){e[t+0]=n,e[t+1]=r,e[t+2]=x}function U(e,t,n,r,x,i){const u=3+x,o=e[t+0],f=e[t+1],s=R;s.length=x;for(let n=0;n<s.length;n++)s[n]=e[t+2+n];let a=i?i.vertexPosition:0,l=i?i.indexPosition:0;const v=a/u;return T(n,a,o,f,0),s.length&&n.set(s,a+3),a+=u,T(n,a,o,f,1),s.length&&n.set(s,a+3),a+=u,T(n,a,o,f,2),s.length&&n.set(s,a+3),a+=u,T(n,a,o,f,3),s.length&&n.set(s,a+3),a+=u,r[l++]=v,r[l++]=v+1,r[l++]=v+3,r[l++]=v+1,r[l++]=v+2,r[l++]=v+3,S.vertexPosition=a,S.indexPosition=l,S}function k(e,t,n,x,i,u,o,f,s,a,l){const v=8+f.length,h=u.length/v,c=[e[t+0],e[t+1]],p=[e[n],e[n+1]],y=r(s,[...c]),g=r(s,[...p]);function b(e,t,n){const r=Math.sqrt((t[0]-e[0])*(t[0]-e[0])+(t[1]-e[1])*(t[1]-e[1])),x=[(t[0]-e[0])/r,(t[1]-e[1])/r],i=[-x[1],x[0]],u=Math.sqrt((n[0]-e[0])*(n[0]-e[0])+(n[1]-e[1])*(n[1]-e[1])),o=[(n[0]-e[0])/u,(n[1]-e[1])/u],f=0===r||0===u?0:Math.acos((s=o[0]*x[0]+o[1]*x[1],a=-1,l=1,Math.min(Math.max(s,a),l)));var s,a,l;return o[0]*i[0]+o[1]*i[1]>0?f:2*Math.PI-f}let d=-1,M=-1,Z=l;const w=null!==i;if(null!==x){d=b(y,g,r(s,[...[e[x],e[x+1]]])),Math.cos(d)<=.985&&(Z+=Math.tan((d-Math.PI)/2))}if(w){M=b(g,y,r(s,[...[e[i],e[i+1]]])),Math.cos(M)<=.985&&(Z+=Math.tan((Math.PI-M)/2))}function m(e,t){return 0===t?1e4*e:Math.sign(t)*(1e4*e+Math.abs(t))}return u.push(c[0],c[1],p[0],p[1],d,M,a,m(0,l)),u.push(...f),u.push(c[0],c[1],p[0],p[1],d,M,a,m(1,l)),u.push(...f),u.push(c[0],c[1],p[0],p[1],d,M,a,m(2,l)),u.push(...f),u.push(c[0],c[1],p[0],p[1],d,M,a,m(3,l)),u.push(...f),o.push(h,h+1,h+2,h+1,h+3,h+2),{length:a+Math.sqrt((g[0]-y[0])*(g[0]-y[0])+(g[1]-y[1])*(g[1]-y[1])),angle:Z}}function G(e,t,n,r,x){const i=2+x;let u=t;const o=e.slice(u,u+x);u+=x;const f=e[u++];let s=0;const a=new Array(f-1);for(let t=0;t<f;t++)s+=e[u++],t<f-1&&(a[t]=s);const l=e.slice(u,u+2*s),v=N(l,a,2);for(let e=0;e<v.length;e++)r.push(v[e]+n.length/i);for(let e=0;e<l.length;e+=2)n.push(l[e],l[e+1],...o);return u+2*s}const j=self;j.onmessage=r=>{const i=r.data;switch(i.type){case t:{const e=3,t=2,n=i.customAttributesSize,r=t+n,x=new Float32Array(i.renderInstructions),u=x.length/r,o=4*u*(n+e),f=new Uint32Array(6*u),s=new Float32Array(o);let a;for(let e=0;e<x.length;e+=r)a=U(x,e,s,f,n,a);const l=Object.assign({vertexBuffer:s.buffer,indexBuffer:f.buffer,renderInstructions:x.buffer},i);j.postMessage(l,[s.buffer,f.buffer,x.buffer]);break}case n:{const e=[],t=[],n=i.customAttributesSize,r=2,u=new Float32Array(i.renderInstructions);let o=0;const f=[1,0,0,1,0,0];let s,a;for(x(f,i.renderInstructionsTransform);o<u.length;){a=Array.from(u.slice(o,o+n)),o+=n,s=u[o++];const x=o,i=o+(s-1)*r,l=u[x]===u[i]&&u[x+1]===u[i+1];let v=0,h=0;for(let n=0;n<s-1;n++){let c=null;n>0?c=o+(n-1)*r:l&&(c=i-r);let p=null;n<s-2?p=o+(n+2)*r:l&&(p=x+r);const y=k(u,o+n*r,o+(n+1)*r,c,p,e,t,a,f,v,h);v=y.length,h=y.angle}o+=s*r}const l=Uint32Array.from(t),v=Float32Array.from(e),h=Object.assign({vertexBuffer:v.buffer,indexBuffer:l.buffer,renderInstructions:u.buffer},i);j.postMessage(h,[v.buffer,l.buffer,u.buffer]);break}case e:{const e=[],t=[],n=i.customAttributesSize,r=new Float32Array(i.renderInstructions);let x=0;for(;x<r.length;)x=G(r,x,e,t,n);const u=Uint32Array.from(t),o=Float32Array.from(e),f=Object.assign({vertexBuffer:o.buffer,indexBuffer:u.buffer,renderInstructions:r.buffer},i);j.postMessage(f,[o.buffer,u.buffer,r.buffer]);break}}};\";\n          return new Worker(typeof Blob === 'undefined'\n            ? 'data:application/javascript;base64,' + Buffer.from(source, 'binary').toString('base64')\n            : URL.createObjectURL(new Blob([source], {type: 'application/javascript'})));\n        }\n      \n","import {getWidth} from '../../extent.js';\n\n/**\n * Compute world params\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {any} layer The layer\n * @return {Array<number>} The world start, end and width.\n */\nexport function getWorldParameters(frameState, layer) {\n  const projection = frameState.viewState.projection;\n\n  const vectorSource = layer.getSource();\n  const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n  const projectionExtent = projection.getExtent();\n\n  const extent = frameState.extent;\n  const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n  const endWorld = multiWorld\n    ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n    : 1;\n\n  const startWorld = multiWorld\n    ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n    : 0;\n\n  return [startWorld, endWorld, worldWidth];\n}\n","/**\n * @module ol/webgl/PaletteTexture\n */\n\nclass PaletteTexture {\n  /**\n   * @param {string} name The name of the texture.\n   * @param {Uint8Array} data The texture data.\n   */\n  constructor(name, data) {\n    this.name = name;\n    this.data = data;\n\n    /**\n     * @type {WebGLTexture|null}\n     * @private\n     */\n    this.texture_ = null;\n  }\n\n  /**\n   * @param {WebGLRenderingContext} gl Rendering context.\n   * @return {WebGLTexture} The texture.\n   */\n  getTexture(gl) {\n    if (!this.texture_) {\n      const texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,\n        gl.RGBA,\n        this.data.length / 4,\n        1,\n        0,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data\n      );\n      this.texture_ = texture;\n    }\n    return this.texture_;\n  }\n}\n\nexport default PaletteTexture;\n","/**\n * @module ol/renderer/webgl/TileLayer\n */\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileState from '../../TileState.js';\nimport TileTexture from '../../webgl/TileTexture.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLBaseTileLayerRenderer, {\n  Uniforms as BaseUniforms,\n  getCacheKey,\n} from './TileLayerBase.js';\nimport {AttributeType} from '../../webgl/Helper.js';\nimport {ELEMENT_ARRAY_BUFFER, STATIC_DRAW} from '../../webgl.js';\nimport {apply as applyTransform} from '../../transform.js';\nimport {\n  boundingExtent,\n  containsCoordinate,\n  getIntersection,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {fromTransform as mat4FromTransform} from '../../vec/mat4.js';\nimport {toSize} from '../../size.js';\n\nexport const Uniforms = {\n  ...BaseUniforms,\n  TILE_TEXTURE_ARRAY: 'u_tileTextures',\n  TEXTURE_PIXEL_WIDTH: 'u_texturePixelWidth',\n  TEXTURE_PIXEL_HEIGHT: 'u_texturePixelHeight',\n  TEXTURE_RESOLUTION: 'u_textureResolution', // map units per texture pixel\n  TEXTURE_ORIGIN_X: 'u_textureOriginX', // map x coordinate of left edge of texture\n  TEXTURE_ORIGIN_Y: 'u_textureOriginY', // map y coordinate of top edge of texture\n};\n\nexport const Attributes = {\n  TEXTURE_COORD: 'a_textureCoord',\n};\n\n/**\n * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n */\nconst attributeDescriptions = [\n  {\n    name: Attributes.TEXTURE_COORD,\n    size: 2,\n    type: AttributeType.FLOAT,\n  },\n];\n\n/**\n * @typedef {Object} Options\n * @property {string} vertexShader Vertex shader source.\n * @property {string} fragmentShader Fragment shader source.\n * @property {Object<string, import(\"../../webgl/Helper\").UniformValue>} [uniforms] Additional uniforms\n * made available to shaders.\n * @property {Array<import(\"../../webgl/PaletteTexture.js\").default>} [paletteTextures] Palette textures.\n * @property {number} [cacheSize=512] The texture cache size.\n */\n\n/**\n * @typedef {import(\"../../layer/WebGLTile.js\").default} LayerType\n */\n/**\n * @typedef {import(\"../../webgl/TileTexture.js\").TileType} TileTextureType\n */\n/**\n * @typedef {import(\"../../webgl/TileTexture.js\").default} TileTextureRepresentation\n */\n\n/**\n * @classdesc\n * WebGL renderer for tile layers.\n * @extends {WebGLBaseTileLayerRenderer<LayerType, TileTextureType, TileTextureRepresentation>}\n * @api\n */\nclass WebGLTileLayerRenderer extends WebGLBaseTileLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} options Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer, options);\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.program_;\n\n    /**\n     * @private\n     */\n    this.vertexShader_ = options.vertexShader;\n\n    /**\n     * @private\n     */\n    this.fragmentShader_ = options.fragmentShader;\n\n    /**\n     * Tiles are rendered as a quad with the following structure:\n     *\n     *  [P3]---------[P2]\n     *   |`           |\n     *   |  `     B   |\n     *   |    `       |\n     *   |      `     |\n     *   |   A    `   |\n     *   |          ` |\n     *  [P0]---------[P1]\n     *\n     * Triangle A: P0, P1, P3\n     * Triangle B: P1, P2, P3\n     *\n     * @private\n     */\n    this.indices_ = new WebGLArrayBuffer(ELEMENT_ARRAY_BUFFER, STATIC_DRAW);\n    this.indices_.fromArray([0, 1, 3, 1, 2, 3]);\n\n    /**\n     * @type {Array<import(\"../../webgl/PaletteTexture.js\").default>}\n     * @private\n     */\n    this.paletteTextures_ = options.paletteTextures || [];\n  }\n\n  /**\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    super.reset(options);\n\n    this.vertexShader_ = options.vertexShader;\n    this.fragmentShader_ = options.fragmentShader;\n    this.paletteTextures_ = options.paletteTextures || [];\n    if (this.helper) {\n      this.program_ = this.helper.getProgram(\n        this.fragmentShader_,\n        this.vertexShader_\n      );\n    }\n  }\n\n  afterHelperCreated() {\n    this.program_ = this.helper.getProgram(\n      this.fragmentShader_,\n      this.vertexShader_\n    );\n    this.helper.flushBufferData(this.indices_);\n  }\n\n  createTileRepresentation(options) {\n    return new TileTexture(options);\n  }\n\n  beforeTilesRender(frameState, tilesWithAlpha) {\n    super.beforeTilesRender(frameState, tilesWithAlpha);\n    this.helper.useProgram(this.program_, frameState);\n  }\n\n  renderTile(\n    tileTexture,\n    tileTransform,\n    frameState,\n    renderExtent,\n    tileResolution,\n    tileSize,\n    tileOrigin,\n    tileExtent,\n    depth,\n    gutter,\n    alpha\n  ) {\n    const gl = this.helper.getGL();\n    this.helper.bindBuffer(tileTexture.coords);\n    this.helper.bindBuffer(this.indices_);\n    this.helper.enableAttributes(attributeDescriptions);\n\n    let textureSlot = 0;\n    while (textureSlot < tileTexture.textures.length) {\n      const uniformName = `${Uniforms.TILE_TEXTURE_ARRAY}[${textureSlot}]`;\n      this.helper.bindTexture(\n        tileTexture.textures[textureSlot],\n        textureSlot,\n        uniformName\n      );\n      ++textureSlot;\n    }\n\n    for (\n      let paletteIndex = 0;\n      paletteIndex < this.paletteTextures_.length;\n      ++paletteIndex\n    ) {\n      const paletteTexture = this.paletteTextures_[paletteIndex];\n      const texture = paletteTexture.getTexture(gl);\n      this.helper.bindTexture(texture, textureSlot, paletteTexture.name);\n      ++textureSlot;\n    }\n\n    const viewState = frameState.viewState;\n\n    const tileWidthWithGutter = tileSize[0] + 2 * gutter;\n    const tileHeightWithGutter = tileSize[1] + 2 * gutter;\n\n    const tile = tileTexture.tile;\n    const tileCoord = tile.tileCoord;\n\n    const tileCenterI = tileCoord[1];\n    const tileCenterJ = tileCoord[2];\n\n    this.helper.setUniformMatrixValue(\n      Uniforms.TILE_TRANSFORM,\n      mat4FromTransform(this.tempMat4, tileTransform)\n    );\n\n    this.helper.setUniformFloatValue(Uniforms.TRANSITION_ALPHA, alpha);\n    this.helper.setUniformFloatValue(Uniforms.DEPTH, depth);\n\n    let gutterExtent = renderExtent;\n    if (gutter > 0) {\n      gutterExtent = tileExtent;\n      getIntersection(gutterExtent, renderExtent, gutterExtent);\n    }\n    this.helper.setUniformFloatVec4(Uniforms.RENDER_EXTENT, gutterExtent);\n\n    this.helper.setUniformFloatValue(Uniforms.RESOLUTION, viewState.resolution);\n    this.helper.setUniformFloatValue(Uniforms.ZOOM, viewState.zoom);\n\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_PIXEL_WIDTH,\n      tileWidthWithGutter\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_PIXEL_HEIGHT,\n      tileHeightWithGutter\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_RESOLUTION,\n      tileResolution\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_ORIGIN_X,\n      tileOrigin[0] +\n        tileCenterI * tileSize[0] * tileResolution -\n        gutter * tileResolution\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_ORIGIN_Y,\n      tileOrigin[1] -\n        tileCenterJ * tileSize[1] * tileResolution +\n        gutter * tileResolution\n    );\n\n    this.helper.drawElements(0, this.indices_.getSize());\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView} Data at the pixel location.\n   */\n  getData(pixel) {\n    const gl = this.helper.getGL();\n    if (!gl) {\n      return null;\n    }\n\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const viewState = frameState.viewState;\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (\n        !containsCoordinate(\n          fromUserExtent(layerExtent, viewState.projection),\n          coordinate\n        )\n      ) {\n        return null;\n      }\n    }\n\n    // determine last source suitable for rendering at coordinate\n    const sources = layer.getSources(\n      boundingExtent([coordinate]),\n      viewState.resolution\n    );\n    let i, source, tileGrid;\n    for (i = sources.length - 1; i >= 0; --i) {\n      source = sources[i];\n      if (source.getState() === 'ready') {\n        tileGrid = source.getTileGridForProjection(viewState.projection);\n        if (source.getWrapX()) {\n          break;\n        }\n        const gridExtent = tileGrid.getExtent();\n        if (!gridExtent || containsCoordinate(gridExtent, coordinate)) {\n          break;\n        }\n      }\n    }\n    if (i < 0) {\n      return null;\n    }\n\n    const tileTextureCache = this.tileRepresentationCache;\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const cacheKey = getCacheKey(source, tileCoord);\n      if (!tileTextureCache.containsKey(cacheKey)) {\n        continue;\n      }\n      const tileTexture = tileTextureCache.get(cacheKey);\n      const tile = tileTexture.tile;\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tile.getState() === TileState.EMPTY\n      ) {\n        return null;\n      }\n      if (!tileTexture.loaded) {\n        continue;\n      }\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col =\n        (coordinate[0] - tileOrigin[0]) / tileResolution -\n        tileCoord[1] * tileSize[0];\n\n      const row =\n        (tileOrigin[1] - coordinate[1]) / tileResolution -\n        tileCoord[2] * tileSize[1];\n\n      return tileTexture.getPixelData(col, row);\n    }\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    const helper = this.helper;\n    if (helper) {\n      const gl = helper.getGL();\n      gl.deleteProgram(this.program_);\n      delete this.program_;\n      helper.deleteBuffer(this.indices_);\n    }\n    super.disposeInternal();\n    delete this.indices_;\n  }\n}\n\nexport default WebGLTileLayerRenderer;\n","/**\n * @module ol/renderer/webgl/TileLayerBase\n */\nimport LRUCache from '../../structs/LRUCache.js';\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport {abstract, getUid} from '../../util.js';\nimport {create as createMat4} from '../../vec/mat4.js';\nimport {\n  createOrUpdate as createTileCoord,\n  getKey as getTileCoordKey,\n} from '../../tilecoord.js';\nimport {\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {descending} from '../../array.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getIntersection, isEmpty} from '../../extent.js';\nimport {toSize} from '../../size.js';\n\nexport const Uniforms = {\n  TILE_TRANSFORM: 'u_tileTransform',\n  TRANSITION_ALPHA: 'u_transitionAlpha',\n  DEPTH: 'u_depth',\n  RENDER_EXTENT: 'u_renderExtent', // intersection of layer, source, and view extent\n  PATTERN_ORIGIN: 'u_patternOrigin',\n  RESOLUTION: 'u_resolution',\n  ZOOM: 'u_zoom',\n  GLOBAL_ALPHA: 'u_globalAlpha',\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  SCREEN_TO_WORLD_MATRIX: 'u_screenToWorldMatrix',\n};\n\n/**\n * @type {Object<string, boolean>}\n */\nconst empty = {};\n\n/**\n * Transform a zoom level into a depth value; zoom level zero has a depth value of 0.5, and increasing values\n * have a depth trending towards 0\n * @param {number} z A zoom level.\n * @return {number} A depth value.\n */\nfunction depthForZ(z) {\n  return 1 / (z + 2);\n}\n\n/**\n * @typedef {import(\"../../webgl/BaseTileRepresentation.js\").default<import(\"../../Tile.js\").default>} AbstractTileRepresentation\n */\n/**\n * @typedef {Object} TileRepresentationLookup\n * @property {Set<string>} tileIds The set of tile ids in the lookup.\n * @property {Object<number, Set<AbstractTileRepresentation>>} representationsByZ Tile representations by zoom level.\n */\n\n/**\n * @return {TileRepresentationLookup} A new tile representation lookup.\n */\nexport function newTileRepresentationLookup() {\n  return {tileIds: new Set(), representationsByZ: {}};\n}\n\n/**\n * Check if a tile is already in the tile representation lookup.\n * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of tile representations by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @return {boolean} The tile is already in the lookup.\n */\nfunction lookupHasTile(tileRepresentationLookup, tile) {\n  return tileRepresentationLookup.tileIds.has(getUid(tile));\n}\n\n/**\n * Add a tile representation to the lookup.\n * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of tile representations by zoom level.\n * @param {AbstractTileRepresentation} tileRepresentation A tile representation.\n * @param {number} z The zoom level.\n */\nfunction addTileRepresentationToLookup(\n  tileRepresentationLookup,\n  tileRepresentation,\n  z\n) {\n  const representationsByZ = tileRepresentationLookup.representationsByZ;\n  if (!(z in representationsByZ)) {\n    representationsByZ[z] = new Set();\n  }\n  representationsByZ[z].add(tileRepresentation);\n  tileRepresentationLookup.tileIds.add(getUid(tileRepresentation.tile));\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection)\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\nexport function getCacheKey(source, tileCoord) {\n  return `${source.getKey()},${getTileCoordKey(tileCoord)}`;\n}\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, import(\"../../webgl/Helper\").UniformValue>} [uniforms] Additional uniforms\n * made available to shaders.\n * @property {number} [cacheSize=512] The tile representation cache size.\n * @property {Array<import('./Layer.js').PostProcessesOptions>} [postProcesses] Post-processes definitions.\n */\n\n/**\n * @typedef {import(\"../../layer/BaseTile.js\").default} BaseLayerType\n */\n\n/**\n * @classdesc\n * Base WebGL renderer for tile layers.\n * @template {BaseLayerType} LayerType\n * @template {import(\"../../Tile.js\").default} TileType\n * @template {import(\"../../webgl/BaseTileRepresentation.js\").default<TileType>} TileRepresentation\n * @extends {WebGLLayerRenderer<LayerType>}\n */\nclass WebGLBaseTileLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} options Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer, {\n      uniforms: options.uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * This transform converts representation coordinates to screen coordinates.\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.tileTransform_ = createTransform();\n\n    /**\n     * @type {Array<number>}\n     * @protected\n     */\n    this.tempMat4 = createMat4();\n\n    /**\n     * @type {import(\"../../TileRange.js\").default}\n     * @private\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    /**\n     * @type {import(\"../../size.js\").Size}\n     * @private\n     */\n    this.tempSize_ = [0, 0];\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<TileRepresentation>}\n     * @protected\n     */\n    this.tileRepresentationCache = new LRUCache(cacheSize);\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.projection_ = undefined;\n  }\n\n  /**\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    super.reset({\n      uniforms: options.uniforms,\n    });\n  }\n\n  /**\n   * @param {TileType} tile Tile.\n   * @return {boolean} Tile is drawable.\n   * @private\n   */\n  isDrawableTile_(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrameInternal(frameState) {\n    if (!this.projection_) {\n      this.projection_ = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.projection_) {\n      this.clearCache();\n      this.projection_ = frameState.viewState.projection;\n    }\n\n    const layer = this.getLayer();\n    const source = layer.getRenderSource();\n    if (!source) {\n      return false;\n    }\n\n    if (isEmpty(getRenderExtent(frameState, frameState.extent))) {\n      return false;\n    }\n    return source.getState() === 'ready';\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../../webgl/BaseTileRepresentation.js\").TileRepresentationOptions<TileType>} options tile representation options\n   * @return {TileRepresentation} A new tile representation\n   * @protected\n   */\n  createTileRepresentation(options) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileRepresentationLookup} tileRepresentationLookup The zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(\n    frameState,\n    extent,\n    initialZ,\n    tileRepresentationLookup,\n    preload\n  ) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const gutter = tileSource.getGutterForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileRepresentationCache = this.tileRepresentationCache;\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0)\n        ),\n        tileSource.zDirection\n      )\n    );\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n          const cacheKey = getCacheKey(tileSource, tileCoord);\n\n          /** @type {TileRepresentation} */\n          let tileRepresentation;\n\n          /** @type {TileType} */\n          let tile;\n\n          if (tileRepresentationCache.containsKey(cacheKey)) {\n            tileRepresentation = tileRepresentationCache.get(cacheKey);\n            tile = tileRepresentation.tile;\n          }\n          if (\n            !tileRepresentation ||\n            tileRepresentation.tile.key !== tileSource.getKey()\n          ) {\n            tile = tileSource.getTile(\n              z,\n              x,\n              y,\n              frameState.pixelRatio,\n              viewState.projection\n            );\n          }\n\n          if (lookupHasTile(tileRepresentationLookup, tile)) {\n            continue;\n          }\n\n          if (!tileRepresentation) {\n            tileRepresentation = this.createTileRepresentation({\n              tile: tile,\n              grid: tileGrid,\n              helper: this.helper,\n              gutter: gutter,\n            });\n            tileRepresentationCache.set(cacheKey, tileRepresentation);\n          } else {\n            if (this.isDrawableTile_(tile)) {\n              tileRepresentation.setTile(tile);\n            } else {\n              const interimTile = /** @type {TileType} */ (\n                tile.getInterimTile()\n              );\n              tileRepresentation.setTile(interimTile);\n            }\n          }\n\n          addTileRepresentationToLookup(\n            tileRepresentationLookup,\n            tileRepresentation,\n            z\n          );\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} tilesWithAlpha True if at least one of the rendered tiles has alpha\n   * @protected\n   */\n  beforeTilesRender(frameState, tilesWithAlpha) {\n    this.helper.prepareDraw(this.frameState, !tilesWithAlpha, true);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} If returns false, tile mask rendering will be skipped\n   * @protected\n   */\n  beforeTilesMaskRender(frameState) {\n    return false;\n  }\n\n  /**\n   * @param {TileRepresentation} tileRepresentation Tile representation\n   * @param {import(\"../../transform.js\").Transform} tileTransform Tile transform\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state\n   * @param {import(\"../../extent.js\").Extent} renderExtent Render extent\n   * @param {number} tileResolution Tile resolution\n   * @param {import(\"../../size.js\").Size} tileSize Tile size\n   * @param {import(\"../../coordinate.js\").Coordinate} tileOrigin Tile origin\n   * @param {import(\"../../extent.js\").Extent} tileExtent tile Extent\n   * @param {number} depth Depth\n   * @param {number} gutter Gutter\n   * @param {number} alpha Alpha\n   * @protected\n   */\n  renderTile(\n    tileRepresentation,\n    tileTransform,\n    frameState,\n    renderExtent,\n    tileResolution,\n    tileSize,\n    tileOrigin,\n    tileExtent,\n    depth,\n    gutter,\n    alpha\n  ) {}\n\n  /**\n   * @param {TileRepresentation} tileRepresentation Tile representation\n   * @param {number} tileZ Tile Z\n   * @param {import(\"../../extent.js\").Extent} extent Render extent\n   * @param {number} depth Depth\n   * @protected\n   */\n  renderTileMask(tileRepresentation, tileZ, extent, depth) {}\n\n  drawTile_(\n    frameState,\n    tileRepresentation,\n    tileZ,\n    gutter,\n    extent,\n    alphaLookup,\n    tileGrid\n  ) {\n    if (!tileRepresentation.ready) {\n      return;\n    }\n    const tile = tileRepresentation.tile;\n    const tileCoord = tile.tileCoord;\n    const tileCoordKey = getTileCoordKey(tileCoord);\n    const alpha = tileCoordKey in alphaLookup ? alphaLookup[tileCoordKey] : 1;\n\n    const tileResolution = tileGrid.getResolution(tileZ);\n    const tileSize = toSize(tileGrid.getTileSize(tileZ), this.tempSize_);\n    const tileOrigin = tileGrid.getOrigin(tileZ);\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord);\n    // tiles with alpha are rendered last to allow blending\n    const depth = alpha < 1 ? -1 : depthForZ(tileZ);\n    if (alpha < 1) {\n      frameState.animate = true;\n    }\n\n    const viewState = frameState.viewState;\n    const centerX = viewState.center[0];\n    const centerY = viewState.center[1];\n\n    const tileWidthWithGutter = tileSize[0] + 2 * gutter;\n    const tileHeightWithGutter = tileSize[1] + 2 * gutter;\n\n    const aspectRatio = tileWidthWithGutter / tileHeightWithGutter;\n\n    const centerI = (centerX - tileOrigin[0]) / (tileSize[0] * tileResolution);\n    const centerJ = (tileOrigin[1] - centerY) / (tileSize[1] * tileResolution);\n\n    const tileScale = viewState.resolution / tileResolution;\n\n    const tileCenterI = tileCoord[1];\n    const tileCenterJ = tileCoord[2];\n\n    resetTransform(this.tileTransform_);\n    scaleTransform(\n      this.tileTransform_,\n      2 / ((frameState.size[0] * tileScale) / tileWidthWithGutter),\n      -2 / ((frameState.size[1] * tileScale) / tileWidthWithGutter)\n    );\n    rotateTransform(this.tileTransform_, viewState.rotation);\n    scaleTransform(this.tileTransform_, 1, 1 / aspectRatio);\n    translateTransform(\n      this.tileTransform_,\n      (tileSize[0] * (tileCenterI - centerI) - gutter) / tileWidthWithGutter,\n      (tileSize[1] * (tileCenterJ - centerJ) - gutter) / tileHeightWithGutter\n    );\n\n    this.renderTile(\n      /** @type {TileRepresentation} */ (tileRepresentation),\n      this.tileTransform_,\n      frameState,\n      extent,\n      tileResolution,\n      tileSize,\n      tileOrigin,\n      tileExtent,\n      depth,\n      gutter,\n      alpha\n    );\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    this.frameState = frameState;\n    this.renderComplete = true;\n    const gl = this.helper.getGL();\n    this.preRender(gl, frameState);\n\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const gutter = tileSource.getGutterForProjection(viewState.projection);\n    const extent = getRenderExtent(frameState, frameState.extent);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection\n    );\n\n    /**\n     * @type {TileRepresentationLookup}\n     */\n    const tileRepresentationLookup = newTileRepresentationLookup();\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(\n        frameState,\n        nextExtent,\n        targetZ,\n        tileRepresentationLookup,\n        preload\n      );\n    }\n\n    this.enqueueTiles(frameState, extent, z, tileRepresentationLookup, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          extent,\n          z - 1,\n          tileRepresentationLookup,\n          preload - 1\n        );\n      }, 0);\n    }\n\n    /**\n     * A lookup of alpha values for tiles at the target rendering resolution\n     * for tiles that are in transition.  If a tile coord key is absent from\n     * this lookup, the tile should be rendered at alpha 1.\n     * @type {Object<string, number>}\n     */\n    const alphaLookup = {};\n\n    const uid = getUid(this);\n    const time = frameState.time;\n    let blend = false;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tileRepresentation of tileRepresentationLookup\n      .representationsByZ[z]) {\n      const tile = tileRepresentation.tile;\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tile.getState() === TileState.EMPTY\n      ) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileRepresentation.ready) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n        blend = true;\n        const tileCoordKey = getTileCoordKey(tileCoord);\n        alphaLookup[tileCoordKey] = alpha;\n      }\n      this.renderComplete = false;\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tileRepresentationLookup\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tileRepresentationLookup\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    const representationsByZ = tileRepresentationLookup.representationsByZ;\n    const zs = Object.keys(representationsByZ).map(Number).sort(descending);\n\n    const renderTileMask = this.beforeTilesMaskRender(frameState);\n\n    if (renderTileMask) {\n      for (let j = 0, jj = zs.length; j < jj; ++j) {\n        const tileZ = zs[j];\n        for (const tileRepresentation of representationsByZ[tileZ]) {\n          const tileCoord = tileRepresentation.tile.tileCoord;\n          const tileCoordKey = getTileCoordKey(tileCoord);\n          // do not render the tile mask if alpha < 1\n          if (tileCoordKey in alphaLookup) {\n            continue;\n          }\n          const tileExtent = tileGrid.getTileCoordExtent(tileCoord);\n          this.renderTileMask(\n            /** @type {TileRepresentation} */ (tileRepresentation),\n            tileZ,\n            tileExtent,\n            depthForZ(tileZ)\n          );\n        }\n      }\n    }\n\n    this.beforeTilesRender(frameState, blend);\n\n    for (let j = 0, jj = zs.length; j < jj; ++j) {\n      const tileZ = zs[j];\n      for (const tileRepresentation of representationsByZ[tileZ]) {\n        const tileCoord = tileRepresentation.tile.tileCoord;\n        const tileCoordKey = getTileCoordKey(tileCoord);\n        if (tileCoordKey in alphaLookup) {\n          continue;\n        }\n\n        this.drawTile_(\n          frameState,\n          tileRepresentation,\n          tileZ,\n          gutter,\n          extent,\n          alphaLookup,\n          tileGrid\n        );\n      }\n    }\n\n    for (const tileRepresentation of representationsByZ[z]) {\n      const tileCoord = tileRepresentation.tile.tileCoord;\n      const tileCoordKey = getTileCoordKey(tileCoord);\n      if (tileCoordKey in alphaLookup) {\n        this.drawTile_(\n          frameState,\n          tileRepresentation,\n          z,\n          gutter,\n          extent,\n          alphaLookup,\n          tileGrid\n        );\n      }\n    }\n\n    this.helper.finalizeDraw(\n      frameState,\n      this.dispatchPreComposeEvent,\n      this.dispatchPostComposeEvent\n    );\n\n    const canvas = this.helper.getCanvas();\n\n    const tileRepresentationCache = this.tileRepresentationCache;\n    while (tileRepresentationCache.canExpireCache()) {\n      const tileRepresentation = tileRepresentationCache.pop();\n      tileRepresentation.dispose();\n    }\n\n    // TODO: let the renderers manage their own cache instead of managing the source cache\n    /**\n     * Here we unconditionally expire the source cache since the renderer maintains\n     * its own cache.\n     * @param {import(\"../../Map.js\").default} map Map.\n     * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n     */\n    const postRenderFunction = function (map, frameState) {\n      tileSource.updateCacheSize(0.1, frameState.viewState.projection);\n      tileSource.expireCache(frameState.viewState.projection, empty);\n    };\n\n    frameState.postRenderFunctions.push(postRenderFunction);\n\n    this.postRender(gl, frameState);\n    return canvas;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile representation lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of\n   * tile representations by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tileRepresentationLookup) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileRepresentationCache = this.tileRepresentationCache;\n    const source = this.getLayer().getRenderSource();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(source, [altZ, x, y]);\n        let loaded = false;\n        if (tileRepresentationCache.containsKey(cacheKey)) {\n          const tileRepresentation = tileRepresentationCache.get(cacheKey);\n          if (\n            tileRepresentation.ready &&\n            !lookupHasTile(tileRepresentationLookup, tileRepresentation.tile)\n          ) {\n            addTileRepresentationToLookup(\n              tileRepresentationLookup,\n              tileRepresentation,\n              altZ\n            );\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  clearCache() {\n    const tileRepresentationCache = this.tileRepresentationCache;\n    tileRepresentationCache.forEach((tileRepresentation) =>\n      tileRepresentation.dispose()\n    );\n    tileRepresentationCache.clear();\n  }\n\n  removeHelper() {\n    if (this.helper) {\n      this.clearCache();\n    }\n\n    super.removeHelper();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    super.disposeInternal();\n    delete this.frameState;\n  }\n}\n\nexport default WebGLBaseTileLayerRenderer;\n","/**\n * @module ol/expr/gpu\n */\nimport PaletteTexture from '../webgl/PaletteTexture.js';\nimport {\n  BooleanType,\n  CallExpression,\n  ColorType,\n  NoneType,\n  NumberArrayType,\n  NumberType,\n  Ops,\n  StringType,\n  isType,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\nimport {Uniforms} from '../renderer/webgl/TileLayer.js';\nimport {asArray} from '../color.js';\n\n/**\n * @param {string} operator Operator\n * @param {CompilationContext} context Compilation context\n * @return {string} A function name based on the operator, unique in the given context\n */\nfunction computeOperatorFunctionName(operator, context) {\n  return `operator_${operator}_${Object.keys(context.functions).length}`;\n}\n\n/**\n * Will return the number as a float with a dot separator, which is required by GLSL.\n * @param {number} v Numerical value.\n * @return {string} The value as string.\n */\nexport function numberToGlsl(v) {\n  const s = v.toString();\n  return s.includes('.') ? s : s + '.0';\n}\n\n/**\n * Will return the number array as a float with a dot separator, concatenated with ', '.\n * @param {Array<number>} array Numerical values array.\n * @return {string} The array as a vector, e. g.: `vec3(1.0, 2.0, 3.0)`.\n */\nexport function arrayToGlsl(array) {\n  if (array.length < 2 || array.length > 4) {\n    throw new Error(\n      '`formatArray` can only output `vec2`, `vec3` or `vec4` arrays.'\n    );\n  }\n  return `vec${array.length}(${array.map(numberToGlsl).join(', ')})`;\n}\n\n/**\n * Will normalize and converts to string a `vec4` color array compatible with GLSL.\n * @param {string|import(\"../color.js\").Color} color Color either in string format or [r, g, b, a] array format,\n * with RGB components in the 0..255 range and the alpha component in the 0..1 range.\n * Note that the final array will always have 4 components.\n * @return {string} The color expressed in the `vec4(1.0, 1.0, 1.0, 1.0)` form.\n */\nexport function colorToGlsl(color) {\n  const array = asArray(color);\n  const alpha = array.length > 3 ? array[3] : 1;\n  // all components are premultiplied with alpha value\n  return arrayToGlsl([\n    (array[0] / 255) * alpha,\n    (array[1] / 255) * alpha,\n    (array[2] / 255) * alpha,\n    alpha,\n  ]);\n}\n\n/** @type {Object<string, number>} */\nconst stringToFloatMap = {};\nlet stringToFloatCounter = 0;\n\n/**\n * Returns a stable equivalent number for the string literal.\n * @param {string} string String literal value\n * @return {number} Number equivalent\n */\nexport function getStringNumberEquivalent(string) {\n  if (!(string in stringToFloatMap)) {\n    stringToFloatMap[string] = stringToFloatCounter++;\n  }\n  return stringToFloatMap[string];\n}\n\n/**\n * Returns a stable equivalent number for the string literal, for use in shaders. This number is then\n * converted to be a GLSL-compatible string.\n * Note: with a float precision of `mediump`, the amount of unique strings supported is 16,777,216\n * @param {string} string String literal value\n * @return {string} GLSL-compatible string containing a number\n */\nexport function stringToGlsl(string) {\n  return numberToGlsl(getStringNumberEquivalent(string));\n}\n\n/**\n * Get the uniform name given a variable name.\n * @param {string} variableName The variable name.\n * @return {string} The uniform name.\n */\nexport function uniformNameForVariable(variableName) {\n  return 'u_var_' + variableName;\n}\n\n/**\n * @typedef {import('./expression.js').ParsingContext} ParsingContext\n */\n/**\n *\n * @typedef {import(\"./expression.js\").Expression} Expression\n */\n/**\n *\n * @typedef {import(\"./expression.js\").LiteralExpression} LiteralExpression\n */\n\n/**\n * @typedef {Object} CompilationContextProperty\n * @property {string} name Name\n * @property {number} type Resolved property type\n * @property {function(import(\"../Feature.js\").FeatureLike): *} [evaluator] Function used for evaluating the value;\n */\n\n/**\n * @typedef {Object} CompilationContextVariable\n * @property {string} name Name\n * @property {number} type Resolved variable type\n * @property {function(Object): *} [evaluator] Function used for evaluating the value; argument is the style variables object\n */\n\n/**\n * @typedef {Object} CompilationContext\n * @property {boolean} [inFragmentShader] If false, means the expression output should be made for a vertex shader\n * @property {Object<string, CompilationContextProperty>} properties The values for properties used in 'get' expressions.\n * @property {Object<string, CompilationContextVariable>} variables The values for variables used in 'var' expressions.\n * @property {Object<string, string>} functions Lookup of functions used by the style.\n * @property {number} [bandCount] Number of bands per pixel.\n * @property {Array<PaletteTexture>} [paletteTextures] List of palettes used by the style.\n * @property {import(\"../style/webgl.js\").WebGLStyle} style Literal style.\n */\n\n/**\n * @return {CompilationContext} A new compilation context.\n */\nexport function newCompilationContext() {\n  return {\n    inFragmentShader: false,\n    variables: {},\n    properties: {},\n    functions: {},\n    bandCount: 0,\n    style: {},\n  };\n}\n\nconst GET_BAND_VALUE_FUNC = 'getBandValue';\n\nexport const PALETTE_TEXTURE_ARRAY = 'u_paletteTextures';\n\n/**\n * @typedef {string} CompiledExpression\n */\n\n/**\n * @typedef {function(CompilationContext, CallExpression, number): string} Compiler\n * Third argument is the expected value types\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} parsingContext The parsing context.\n * @param {CompilationContext} compilationContext An existing compilation context\n * @return {CompiledExpression} The compiled expression.\n */\nexport function buildExpression(\n  encoded,\n  type,\n  parsingContext,\n  compilationContext\n) {\n  const expression = parse(encoded, parsingContext, type);\n  if (isType(expression.type, NoneType)) {\n    throw new Error(`No matching type was found`);\n  }\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`\n    );\n  }\n  return compile(expression, type, compilationContext);\n}\n\n/**\n * @param {function(Array<CompiledExpression>, CompilationContext): string} output Function that takes in parsed arguments and returns a string\n * @return {function(CompilationContext, import(\"./expression.js\").CallExpression, number): string} Compiler for the call expression\n */\nfunction createCompiler(output) {\n  return (context, expression, type) => {\n    const length = expression.args.length;\n    const args = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      args[i] = compile(expression.args[i], type, context);\n    }\n    return output(args, context);\n  };\n}\n\n/**\n * @type {Object<string, Compiler>}\n */\nconst compilers = {\n  [Ops.Get]: (context, expression) => {\n    const firstArg = /** @type {LiteralExpression} */ (expression.args[0]);\n    const propName = /** @type {string} */ (firstArg.value);\n    const isExisting = propName in context.properties;\n    if (!isExisting) {\n      context.properties[propName] = {\n        name: propName,\n        type: expression.type,\n      };\n    }\n    const prefix = context.inFragmentShader ? 'v_prop_' : 'a_prop_';\n    return prefix + propName;\n  },\n  [Ops.GeometryType]: (context, expression, type) => {\n    const propName = 'geometryType';\n    const computeType = (geometry) => {\n      const type = geometry.getType();\n      switch (type) {\n        case 'Point':\n        case 'LineString':\n        case 'Polygon':\n          return type;\n        case 'MultiPoint':\n        case 'MultiLineString':\n        case 'MultiPolygon':\n          return type.substring(5);\n        case 'Circle':\n          return 'Polygon';\n        case 'GeometryCollection':\n          return computeType(geometry.getGeometries()[0]);\n        default:\n      }\n    };\n    const isExisting = propName in context.properties;\n    if (!isExisting) {\n      context.properties[propName] = {\n        name: propName,\n        type: StringType,\n        evaluator: (feature) => {\n          return computeType(feature.getGeometry());\n        },\n      };\n    }\n    const prefix = context.inFragmentShader ? 'v_prop_' : 'a_prop_';\n    return prefix + propName;\n  },\n  [Ops.Var]: (context, expression) => {\n    const firstArg = /** @type {LiteralExpression} */ (expression.args[0]);\n    const varName = /** @type {string} */ (firstArg.value);\n    const isExisting = varName in context.variables;\n    if (!isExisting) {\n      context.variables[varName] = {\n        name: varName,\n        type: expression.type,\n      };\n    }\n    return uniformNameForVariable(varName);\n  },\n  [Ops.Resolution]: () => 'u_resolution',\n  [Ops.Zoom]: () => 'u_zoom',\n  [Ops.Time]: () => 'u_time',\n  [Ops.Any]: createCompiler((compiledArgs) => `(${compiledArgs.join(` || `)})`),\n  [Ops.All]: createCompiler((compiledArgs) => `(${compiledArgs.join(` && `)})`),\n  [Ops.Not]: createCompiler(([value]) => `(!${value})`),\n  [Ops.Equal]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} == ${secondValue})`\n  ),\n  [Ops.NotEqual]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} != ${secondValue})`\n  ),\n  [Ops.GreaterThan]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} > ${secondValue})`\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} >= ${secondValue})`\n  ),\n  [Ops.LessThan]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} < ${secondValue})`\n  ),\n  [Ops.LessThanOrEqualTo]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} <= ${secondValue})`\n  ),\n  [Ops.Multiply]: createCompiler(\n    (compiledArgs) => `(${compiledArgs.join(' * ')})`\n  ),\n  [Ops.Divide]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} / ${secondValue})`\n  ),\n  [Ops.Add]: createCompiler((compiledArgs) => `(${compiledArgs.join(' + ')})`),\n  [Ops.Subtract]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} - ${secondValue})`\n  ),\n  [Ops.Clamp]: createCompiler(\n    ([value, min, max]) => `clamp(${value}, ${min}, ${max})`\n  ),\n  [Ops.Mod]: createCompiler(([value, modulo]) => `mod(${value}, ${modulo})`),\n  [Ops.Pow]: createCompiler(([value, power]) => `pow(${value}, ${power})`),\n  [Ops.Abs]: createCompiler(([value]) => `abs(${value})`),\n  [Ops.Floor]: createCompiler(([value]) => `floor(${value})`),\n  [Ops.Ceil]: createCompiler(([value]) => `ceil(${value})`),\n  [Ops.Round]: createCompiler(([value]) => `floor(${value} + 0.5)`),\n  [Ops.Sin]: createCompiler(([value]) => `sin(${value})`),\n  [Ops.Cos]: createCompiler(([value]) => `cos(${value})`),\n  [Ops.Atan]: createCompiler(([firstValue, secondValue]) => {\n    return secondValue !== undefined\n      ? `atan(${firstValue}, ${secondValue})`\n      : `atan(${firstValue})`;\n  }),\n  [Ops.Sqrt]: createCompiler(([value]) => `sqrt(${value})`),\n  [Ops.Match]: createCompiler((compiledArgs) => {\n    const input = compiledArgs[0];\n    const fallback = compiledArgs[compiledArgs.length - 1];\n    let result = null;\n    for (let i = compiledArgs.length - 3; i >= 1; i -= 2) {\n      const match = compiledArgs[i];\n      const output = compiledArgs[i + 1];\n      result = `(${input} == ${match} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  }),\n  [Ops.Between]: createCompiler(\n    ([value, min, max]) => `(${value} >= ${min} && ${value} <= ${max})`\n  ),\n  [Ops.Interpolate]: createCompiler(([exponent, input, ...compiledArgs]) => {\n    let result = '';\n    for (let i = 0; i < compiledArgs.length - 2; i += 2) {\n      const stop1 = compiledArgs[i];\n      const output1 = result || compiledArgs[i + 1];\n      const stop2 = compiledArgs[i + 2];\n      const output2 = compiledArgs[i + 3];\n      let ratio;\n      if (exponent === numberToGlsl(1)) {\n        ratio = `(${input} - ${stop1}) / (${stop2} - ${stop1})`;\n      } else {\n        ratio = `(pow(${exponent}, (${input} - ${stop1})) - 1.0) / (pow(${exponent}, (${stop2} - ${stop1})) - 1.0)`;\n      }\n      result = `mix(${output1}, ${output2}, clamp(${ratio}, 0.0, 1.0))`;\n    }\n    return result;\n  }),\n  [Ops.Case]: createCompiler((compiledArgs) => {\n    const fallback = compiledArgs[compiledArgs.length - 1];\n    let result = null;\n    for (let i = compiledArgs.length - 3; i >= 0; i -= 2) {\n      const condition = compiledArgs[i];\n      const output = compiledArgs[i + 1];\n      result = `(${condition} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  }),\n  [Ops.In]: createCompiler(([needle, ...haystack], context) => {\n    const funcName = computeOperatorFunctionName('in', context);\n    const tests = [];\n    for (let i = 0; i < haystack.length; i += 1) {\n      tests.push(`  if (inputValue == ${haystack[i]}) { return true; }`);\n    }\n    context.functions[funcName] = `bool ${funcName}(float inputValue) {\n${tests.join('\\n')}\n  return false;\n}`;\n    return `${funcName}(${needle})`;\n  }),\n  [Ops.Array]: createCompiler(\n    (args) => `vec${args.length}(${args.join(', ')})`\n  ),\n  [Ops.Color]: createCompiler((compiledArgs) => {\n    const rgb = compiledArgs.slice(0, 3).map((color) => `${color} / 255.0`);\n    if (compiledArgs.length === 3) {\n      return `vec4(${rgb.join(', ')}, 1.0)`;\n    }\n    const alpha = compiledArgs[3];\n    return `(${alpha} * vec4(${rgb.join(', ')}, 1.0))`;\n  }),\n  [Ops.Band]: createCompiler(([band, xOffset, yOffset], context) => {\n    if (!(GET_BAND_VALUE_FUNC in context.functions)) {\n      let ifBlocks = '';\n      const bandCount = context.bandCount || 1;\n      for (let i = 0; i < bandCount; i++) {\n        const colorIndex = Math.floor(i / 4);\n        let bandIndex = i % 4;\n        if (i === bandCount - 1 && bandIndex === 1) {\n          // LUMINANCE_ALPHA - band 1 assigned to rgb and band 2 assigned to alpha\n          bandIndex = 3;\n        }\n        const textureName = `${Uniforms.TILE_TEXTURE_ARRAY}[${colorIndex}]`;\n        ifBlocks += `  if (band == ${i + 1}.0) {\n    return texture2D(${textureName}, v_textureCoord + vec2(dx, dy))[${bandIndex}];\n  }\n`;\n      }\n\n      context.functions[\n        GET_BAND_VALUE_FUNC\n      ] = `float getBandValue(float band, float xOffset, float yOffset) {\n  float dx = xOffset / ${Uniforms.TEXTURE_PIXEL_WIDTH};\n  float dy = yOffset / ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n${ifBlocks}\n}`;\n    }\n\n    return `${GET_BAND_VALUE_FUNC}(${band}, ${xOffset ?? '0.0'}, ${\n      yOffset ?? '0.0'\n    })`;\n  }),\n  [Ops.Palette]: (context, expression) => {\n    const [index, ...colors] = expression.args;\n    const numColors = colors.length;\n    const palette = new Uint8Array(numColors * 4);\n    for (let i = 0; i < colors.length; i++) {\n      const parsedValue = /** @type {string | Array<number>} */ (\n        /** @type {LiteralExpression} */ (colors[i]).value\n      );\n      const color = asArray(parsedValue);\n      const offset = i * 4;\n      palette[offset] = color[0];\n      palette[offset + 1] = color[1];\n      palette[offset + 2] = color[2];\n      palette[offset + 3] = color[3] * 255;\n    }\n    if (!context.paletteTextures) {\n      context.paletteTextures = [];\n    }\n    const paletteName = `${PALETTE_TEXTURE_ARRAY}[${context.paletteTextures.length}]`;\n    const paletteTexture = new PaletteTexture(paletteName, palette);\n    context.paletteTextures.push(paletteTexture);\n    const compiledIndex = compile(index, NumberType, context);\n    return `texture2D(${paletteName}, vec2((${compiledIndex} + 0.5) / ${numColors}.0, 0.5))`;\n  },\n  // TODO: unimplemented\n  // Ops.Number\n  // Ops.String\n  // Ops.Concat\n};\n\n/**\n * @param {Expression} expression The expression.\n * @param {number} returnType The expected return type.\n * @param {CompilationContext} context The compilation context.\n * @return {CompiledExpression} The compiled expression\n */\nfunction compile(expression, returnType, context) {\n  // operator\n  if (expression instanceof CallExpression) {\n    const compiler = compilers[expression.operator];\n    if (compiler === undefined) {\n      throw new Error(\n        `No compiler defined for this operator: ${JSON.stringify(\n          expression.operator\n        )}`\n      );\n    }\n    return compiler(context, expression, returnType);\n  }\n\n  if ((expression.type & NumberType) > 0) {\n    return numberToGlsl(/** @type {number} */ (expression.value));\n  }\n\n  if ((expression.type & BooleanType) > 0) {\n    return expression.value.toString();\n  }\n\n  if ((expression.type & StringType) > 0) {\n    return stringToGlsl(expression.value.toString());\n  }\n\n  if ((expression.type & ColorType) > 0) {\n    return colorToGlsl(\n      /** @type {Array<number> | string} */ (expression.value)\n    );\n  }\n\n  if ((expression.type & NumberArrayType) > 0) {\n    return arrayToGlsl(/** @type {Array<number>} */ (expression.value));\n  }\n\n  throw new Error(\n    `Unexpected expression ${expression.value} (expected type ${typeName(\n      returnType\n    )})`\n  );\n}\n","/**\n * Class for generating shaders from literal style objects\n * @module ol/webgl/ShaderBuilder\n */\nimport {LINESTRING_ANGLE_COSINE_CUTOFF} from '../render/webgl/utils.js';\nimport {colorToGlsl, numberToGlsl, stringToGlsl} from '../expr/gpu.js';\nimport {createDefaultStyle} from '../style/flat.js';\n\nexport const COMMON_HEADER = `#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\nuniform mat4 u_projectionMatrix;\nuniform mat4 u_screenToWorldMatrix;\nuniform vec2 u_viewportSizePx;\nuniform float u_pixelRatio;\nuniform float u_globalAlpha;\nuniform float u_time;\nuniform float u_zoom;\nuniform float u_resolution;\nuniform float u_rotation;\nuniform vec4 u_renderExtent;\nuniform vec2 u_patternOrigin;\nuniform float u_depth;\nuniform mediump int u_hitDetection;\n\nconst float PI = 3.141592653589793238;\nconst float TWO_PI = 2.0 * PI;\n\n// this used to produce an alpha-premultiplied color from a texture\nvec4 samplePremultiplied(sampler2D sampler, vec2 texCoord) {\n  vec4 color = texture2D(sampler, texCoord);\n  return vec4(color.rgb * color.a, color.a);\n}\n`;\n\nconst DEFAULT_STYLE = createDefaultStyle();\n\n/**\n * @typedef {Object} VaryingDescription\n * @property {string} name Varying name, as will be declared in the header.\n * @property {string} type Varying type, either `float`, `vec2`, `vec4`...\n * @property {string} expression Expression which will be assigned to the varying in the vertex shader, and\n * passed on to the fragment shader.\n */\n\n/**\n * @classdesc\n * This class implements a classic builder pattern for generating many different types of shaders.\n * Methods can be chained, e. g.:\n *\n * ```js\n * const shader = new ShaderBuilder()\n *   .addVarying('v_width', 'float', 'a_width')\n *   .addUniform('u_time')\n *   .setColorExpression('...')\n *   .setSymbolSizeExpression('...')\n *   .getSymbolFragmentShader();\n * ```\n */\nexport class ShaderBuilder {\n  constructor() {\n    /**\n     * Uniforms; these will be declared in the header (should include the type).\n     * @type {Array<string>}\n     * @private\n     */\n    this.uniforms_ = [];\n\n    /**\n     * Attributes; these will be declared in the header (should include the type).\n     * @type {Array<string>}\n     * @private\n     */\n    this.attributes_ = [];\n\n    /**\n     * Varyings with a name, a type and an expression.\n     * @type {Array<VaryingDescription>}\n     * @private\n     */\n    this.varyings_ = [];\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasSymbol_ = false;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolSizeExpression_ = `vec2(${numberToGlsl(\n      DEFAULT_STYLE['circle-radius']\n    )} + ${numberToGlsl(DEFAULT_STYLE['circle-stroke-width'] * 0.5)})`;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolRotationExpression_ = '0.0';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolOffsetExpression_ = 'vec2(0.0)';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolColorExpression_ = colorToGlsl(\n      /** @type {string} */ (DEFAULT_STYLE['circle-fill-color'])\n    );\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.texCoordExpression_ = 'vec4(0.0, 0.0, 1.0, 1.0)';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.discardExpression_ = 'false';\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.symbolRotateWithView_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasStroke_ = false;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.strokeWidthExpression_ = numberToGlsl(DEFAULT_STYLE['stroke-width']);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.strokeColorExpression_ = colorToGlsl(\n      /** @type {string} */ (DEFAULT_STYLE['stroke-color'])\n    );\n\n    /**\n     * @private\n     */\n    this.strokeOffsetExpression_ = '0.';\n\n    /**\n     * @private\n     */\n    this.strokeCapExpression_ = stringToGlsl('round');\n\n    /**\n     * @private\n     */\n    this.strokeJoinExpression_ = stringToGlsl('round');\n\n    /**\n     * @private\n     */\n    this.strokeMiterLimitExpression_ = '10.';\n\n    /**\n     * @private\n     */\n    this.strokeDistanceFieldExpression_ = '-1000.';\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasFill_ = false;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.fillColorExpression_ = colorToGlsl(\n      /** @type {string} */ (DEFAULT_STYLE['fill-color'])\n    );\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.vertexShaderFunctions_ = [];\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.fragmentShaderFunctions_ = [];\n  }\n\n  /**\n   * Adds a uniform accessible in both fragment and vertex shaders.\n   * The given name should include a type, such as `sampler2D u_texture`.\n   * @param {string} name Uniform name\n   * @return {ShaderBuilder} the builder object\n   */\n  addUniform(name) {\n    this.uniforms_.push(name);\n    return this;\n  }\n\n  /**\n   * Adds an attribute accessible in the vertex shader, read from the geometry buffer.\n   * The given name should include a type, such as `vec2 a_position`.\n   * @param {string} name Attribute name\n   * @return {ShaderBuilder} the builder object\n   */\n  addAttribute(name) {\n    this.attributes_.push(name);\n    return this;\n  }\n\n  /**\n   * Adds a varying defined in the vertex shader and accessible from the fragment shader.\n   * The type and expression of the varying have to be specified separately.\n   * @param {string} name Varying name\n   * @param {'float'|'vec2'|'vec3'|'vec4'} type Type\n   * @param {string} expression Expression used to assign a value to the varying.\n   * @return {ShaderBuilder} the builder object\n   */\n  addVarying(name, type, expression) {\n    this.varyings_.push({\n      name: name,\n      type: type,\n      expression: expression,\n    });\n    return this;\n  }\n\n  /**\n   * Sets an expression to compute the size of the shape.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec2` value.\n   * @param {string} expression Size expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolSizeExpression(expression) {\n    this.hasSymbol_ = true;\n    this.symbolSizeExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current symbol size expression\n   */\n  getSymbolSizeExpression() {\n    return this.symbolSizeExpression_;\n  }\n\n  /**\n   * Sets an expression to compute the rotation of the shape.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `float` value in radians.\n   * @param {string} expression Size expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolRotationExpression(expression) {\n    this.symbolRotationExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * Sets an expression to compute the offset of the symbol from the point center.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec2` value.\n   * @param {string} expression Offset expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolOffsetExpression(expression) {\n    this.symbolOffsetExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current symbol offset expression\n   */\n  getSymbolOffsetExpression() {\n    return this.symbolOffsetExpression_;\n  }\n\n  /**\n   * Sets an expression to compute the color of the shape.\n   * This expression can use all the uniforms, varyings and attributes available\n   * in the fragment shader, and should evaluate to a `vec4` value.\n   * @param {string} expression Color expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolColorExpression(expression) {\n    this.hasSymbol_ = true;\n    this.symbolColorExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current symbol color expression\n   */\n  getSymbolColorExpression() {\n    return this.symbolColorExpression_;\n  }\n\n  /**\n   * Sets an expression to compute the texture coordinates of the vertices.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec4` value.\n   * @param {string} expression Texture coordinate expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setTextureCoordinateExpression(expression) {\n    this.texCoordExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * Sets an expression to determine whether a fragment (pixel) should be discarded,\n   * i.e. not drawn at all.\n   * This expression can use all the uniforms, varyings and attributes available\n   * in the fragment shader, and should evaluate to a `bool` value (it will be\n   * used in an `if` statement)\n   * @param {string} expression Fragment discard expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setFragmentDiscardExpression(expression) {\n    this.discardExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current fragment discard expression\n   */\n  getFragmentDiscardExpression() {\n    return this.discardExpression_;\n  }\n\n  /**\n   * Sets whether the symbols should rotate with the view or stay aligned with the map.\n   * Note: will only be used for point geometry shaders.\n   * @param {boolean} rotateWithView Rotate with view\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolRotateWithView(rotateWithView) {\n    this.symbolRotateWithView_ = rotateWithView;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke width expression, returning value in pixels\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeWidthExpression(expression) {\n    this.hasStroke_ = true;\n    this.strokeWidthExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke color expression, evaluate to `vec4`: can rely on currentLengthPx and currentRadiusPx\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeColorExpression(expression) {\n    this.hasStroke_ = true;\n    this.strokeColorExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current stroke color expression\n   */\n  getStrokeColorExpression() {\n    return this.strokeColorExpression_;\n  }\n\n  /**\n   * @param {string} expression Stroke color expression, evaluate to `float`\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeOffsetExpression(expression) {\n    this.strokeOffsetExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke line cap expression, evaluate to `float`\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeCapExpression(expression) {\n    this.strokeCapExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke line join expression, evaluate to `float`\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeJoinExpression(expression) {\n    this.strokeJoinExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke miter limit expression, evaluate to `float`\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeMiterLimitExpression(expression) {\n    this.strokeMiterLimitExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke distance field expression, evaluate to `float`\n   * This can override the default distance field; can rely on currentLengthPx and currentRadiusPx\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeDistanceFieldExpression(expression) {\n    this.strokeDistanceFieldExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Fill color expression, evaluate to `vec4`\n   * @return {ShaderBuilder} the builder object\n   */\n  setFillColorExpression(expression) {\n    this.hasFill_ = true;\n    this.fillColorExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current fill color expression\n   */\n  getFillColorExpression() {\n    return this.fillColorExpression_;\n  }\n\n  addVertexShaderFunction(code) {\n    if (this.vertexShaderFunctions_.includes(code)) {\n      return;\n    }\n    this.vertexShaderFunctions_.push(code);\n  }\n  addFragmentShaderFunction(code) {\n    if (this.fragmentShaderFunctions_.includes(code)) {\n      return;\n    }\n    this.fragmentShaderFunctions_.push(code);\n  }\n\n  /**\n   * Generates a symbol vertex shader from the builder parameters\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getSymbolVertexShader() {\n    if (!this.hasSymbol_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nattribute vec2 a_position;\nattribute float a_index;\nattribute vec4 a_hitColor;\n${this.attributes_\n  .map(function (attribute) {\n    return 'attribute ' + attribute + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_texCoord;\nvarying vec2 v_quadCoord;\nvarying vec4 v_hitColor;\nvarying vec2 v_centerPx;\nvarying float v_angle;\nvarying vec2 v_quadSizePx;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.vertexShaderFunctions_.join('\\n')}\nvec2 pxToScreen(vec2 coordPx) {\n  vec2 scaled = coordPx / u_viewportSizePx / 0.5;\n  return scaled;\n}\n\nvec2 screenToPx(vec2 coordScreen) {\n  return (coordScreen * 0.5 + 0.5) * u_viewportSizePx;\n}\n\nvoid main(void) {\n  v_quadSizePx = ${this.symbolSizeExpression_};\n  vec2 halfSizePx = v_quadSizePx * 0.5;\n  vec2 centerOffsetPx = ${this.symbolOffsetExpression_};\n  vec2 offsetPx = centerOffsetPx;\n  if (a_index == 0.0) {\n    offsetPx -= halfSizePx;\n  } else if (a_index == 1.0) {\n    offsetPx += halfSizePx * vec2(1., -1.);\n  } else if (a_index == 2.0) {\n    offsetPx += halfSizePx;\n  } else {\n    offsetPx += halfSizePx * vec2(-1., 1.);\n  }\n  float angle = ${this.symbolRotationExpression_};\n  ${this.symbolRotateWithView_ ? 'angle += u_rotation;' : ''}\n  float c = cos(-angle);\n  float s = sin(-angle);\n  offsetPx = vec2(c * offsetPx.x - s * offsetPx.y, s * offsetPx.x + c * offsetPx.y);\n  vec4 center = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\n  gl_Position = center + vec4(pxToScreen(offsetPx), u_depth, 0.);\n  vec4 texCoord = ${this.texCoordExpression_};\n  float u = a_index == 0.0 || a_index == 3.0 ? texCoord.s : texCoord.p;\n  float v = a_index == 2.0 || a_index == 3.0 ? texCoord.t : texCoord.q;\n  v_texCoord = vec2(u, v);\n  v_hitColor = a_hitColor;\n  v_angle = angle;\n  c = cos(-v_angle);\n  s = sin(-v_angle);\n  centerOffsetPx = vec2(c * centerOffsetPx.x - s * centerOffsetPx.y, s * centerOffsetPx.x + c * centerOffsetPx.y); \n  v_centerPx = screenToPx(center.xy) + centerOffsetPx;\n${this.varyings_\n  .map(function (varying) {\n    return '  ' + varying.name + ' = ' + varying.expression + ';';\n  })\n  .join('\\n')}\n}`;\n  }\n\n  /**\n   * Generates a symbol fragment shader from the builder parameters\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getSymbolFragmentShader() {\n    if (!this.hasSymbol_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_texCoord;\nvarying vec4 v_hitColor;\nvarying vec2 v_centerPx;\nvarying float v_angle;\nvarying vec2 v_quadSizePx;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.fragmentShaderFunctions_.join('\\n')}\n\nvoid main(void) {\n  if (${this.discardExpression_}) { discard; }\n  vec2 coordsPx = gl_FragCoord.xy / u_pixelRatio - v_centerPx; // relative to center\n  float c = cos(v_angle);\n  float s = sin(v_angle);\n  coordsPx = vec2(c * coordsPx.x - s * coordsPx.y, s * coordsPx.x + c * coordsPx.y);\n  gl_FragColor = ${this.symbolColorExpression_};\n  if (u_hitDetection > 0) {\n    if (gl_FragColor.a < 0.05) { discard; };\n    gl_FragColor = v_hitColor;\n  }\n}`;\n  }\n\n  /**\n   * Generates a stroke vertex shader from the builder parameters\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getStrokeVertexShader() {\n    if (!this.hasStroke_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nattribute vec2 a_position;\nattribute float a_index;\nattribute vec2 a_segmentStart;\nattribute vec2 a_segmentEnd;\nattribute float a_parameters;\nattribute float a_distance;\nattribute vec2 a_joinAngles;\nattribute vec4 a_hitColor;\n${this.attributes_\n  .map(function (attribute) {\n    return 'attribute ' + attribute + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_segmentStart;\nvarying vec2 v_segmentEnd;\nvarying float v_angleStart;\nvarying float v_angleEnd;\nvarying float v_width;\nvarying vec4 v_hitColor;\nvarying float v_distanceOffsetPx;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.vertexShaderFunctions_.join('\\n')}\nvec2 worldToPx(vec2 worldPos) {\n  vec4 screenPos = u_projectionMatrix * vec4(worldPos, 0.0, 1.0);\n  return (0.5 * screenPos.xy + 0.5) * u_viewportSizePx;\n}\n\nvec4 pxToScreen(vec2 pxPos) {\n  vec2 screenPos = 2.0 * pxPos / u_viewportSizePx - 1.0;\n  return vec4(screenPos, u_depth, 1.0);\n}\n\nbool isCap(float joinAngle) {\n  return joinAngle < -0.1;\n}\n\nvec2 getJoinOffsetDirection(vec2 normalPx, float joinAngle) {\n  float halfAngle = joinAngle / 2.0;\n  float c = cos(halfAngle);\n  float s = sin(halfAngle);\n  vec2 angleBisectorNormal = vec2(s * normalPx.x + c * normalPx.y, -c * normalPx.x + s * normalPx.y);\n  float length = 1.0 / s;\n  return angleBisectorNormal * length;\n}\n\nvec2 getOffsetPoint(vec2 point, vec2 normal, float joinAngle, float offsetPx) {\n  // if on a cap or the join angle is too high, offset the line along the segment normal\n  if (cos(joinAngle) > 0.998 || isCap(joinAngle)) {\n    return point - normal * offsetPx;\n  }\n  // offset is applied along the inverted normal (positive offset goes \"right\" relative to line direction)\n  return point - getJoinOffsetDirection(normal, joinAngle) * offsetPx;\n}\n\nvoid main(void) {\n  v_angleStart = a_joinAngles.x;\n  v_angleEnd = a_joinAngles.y;\n  float vertexNumber = floor(abs(a_parameters) / 10000. + 0.5);\n  // we're reading the fractional part while keeping the sign (so -4.12 gives -0.12, 3.45 gives 0.45)\n  float angleTangentSum = fract(abs(a_parameters) / 10000.) * 10000. * sign(a_parameters);\n\n  float lineWidth = ${this.strokeWidthExpression_};\n  float lineOffsetPx = ${this.strokeOffsetExpression_};\n\n  // compute segment start/end in px with offset\n  vec2 segmentStartPx = worldToPx(a_segmentStart);\n  vec2 segmentEndPx = worldToPx(a_segmentEnd);\n  vec2 tangentPx = normalize(segmentEndPx - segmentStartPx);\n  vec2 normalPx = vec2(-tangentPx.y, tangentPx.x);\n  segmentStartPx = getOffsetPoint(segmentStartPx, normalPx, v_angleStart, lineOffsetPx),\n  segmentEndPx = getOffsetPoint(segmentEndPx, normalPx, v_angleEnd, lineOffsetPx);\n  \n  // compute current vertex position\n  float normalDir = vertexNumber < 0.5 || (vertexNumber > 1.5 && vertexNumber < 2.5) ? 1.0 : -1.0;\n  float tangentDir = vertexNumber < 1.5 ? 1.0 : -1.0;\n  float angle = vertexNumber < 1.5 ? v_angleStart : v_angleEnd;\n  vec2 joinDirection;\n  vec2 positionPx = vertexNumber < 1.5 ? segmentStartPx : segmentEndPx;\n  // if angle is too high, do not make a proper join\n  if (cos(angle) > ${LINESTRING_ANGLE_COSINE_CUTOFF} || isCap(angle)) {\n    joinDirection = normalPx * normalDir - tangentPx * tangentDir;\n  } else {\n    joinDirection = getJoinOffsetDirection(normalPx * normalDir, angle);\n  }\n  positionPx = positionPx + joinDirection * lineWidth * 0.5;\n  gl_Position = pxToScreen(positionPx);\n\n  v_segmentStart = segmentStartPx;\n  v_segmentEnd = segmentEndPx;\n  v_width = lineWidth;\n  v_hitColor = a_hitColor;\n  v_distanceOffsetPx = a_distance / u_resolution - (lineOffsetPx * angleTangentSum);\n${this.varyings_\n  .map(function (varying) {\n    return '  ' + varying.name + ' = ' + varying.expression + ';';\n  })\n  .join('\\n')}\n}`;\n  }\n\n  /**\n   * Generates a stroke fragment shader from the builder parameters\n   *\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getStrokeFragmentShader() {\n    if (!this.hasStroke_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_segmentStart;\nvarying vec2 v_segmentEnd;\nvarying float v_angleStart;\nvarying float v_angleEnd;\nvarying float v_width;\nvarying vec4 v_hitColor;\nvarying float v_distanceOffsetPx;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.fragmentShaderFunctions_.join('\\n')}\n\nvec2 pxToWorld(vec2 pxPos) {\n  vec2 screenPos = 2.0 * pxPos / u_viewportSizePx - 1.0;\n  return (u_screenToWorldMatrix * vec4(screenPos, 0.0, 1.0)).xy;\n}\n\nbool isCap(float joinAngle) {\n  return joinAngle < -0.1;\n}\n\nfloat segmentDistanceField(vec2 point, vec2 start, vec2 end, float width) {\n  vec2 tangent = normalize(end - start);\n  vec2 normal = vec2(-tangent.y, tangent.x);\n  vec2 startToPoint = point - start;\n  return abs(dot(startToPoint, normal)) - width * 0.5;\n}\n\nfloat buttCapDistanceField(vec2 point, vec2 start, vec2 end) {\n  vec2 startToPoint = point - start;\n  vec2 tangent = normalize(end - start);\n  return dot(startToPoint, -tangent);\n}\n\nfloat squareCapDistanceField(vec2 point, vec2 start, vec2 end, float width) {\n  return buttCapDistanceField(point, start, end) - width * 0.5;\n}\n\nfloat roundCapDistanceField(vec2 point, vec2 start, vec2 end, float width) {\n  float onSegment = max(0., 1000. * dot(point - start, end - start)); // this is very high when inside the segment\n  return length(point - start) - width * 0.5 - onSegment;\n}\n\nfloat roundJoinDistanceField(vec2 point, vec2 start, vec2 end, float width) {\n  return roundCapDistanceField(point, start, end, width);\n}\n\nfloat bevelJoinField(vec2 point, vec2 start, vec2 end, float width, float joinAngle) {\n  vec2 startToPoint = point - start;\n  vec2 tangent = normalize(end - start);\n  float c = cos(joinAngle * 0.5);\n  float s = sin(joinAngle * 0.5);\n  float direction = -sign(sin(joinAngle));\n  vec2 bisector = vec2(c * tangent.x - s * tangent.y, s * tangent.x + c * tangent.y);\n  float radius = width * 0.5 * s;\n  return dot(startToPoint, bisector * direction) - radius;\n}\n\nfloat miterJoinDistanceField(vec2 point, vec2 start, vec2 end, float width, float joinAngle) {\n  if (cos(joinAngle) > ${LINESTRING_ANGLE_COSINE_CUTOFF}) { // avoid risking a division by zero\n    return bevelJoinField(point, start, end, width, joinAngle);\n  }\n  float miterLength = 1. / sin(joinAngle * 0.5);\n  float miterLimit = ${this.strokeMiterLimitExpression_};\n  if (miterLength > miterLimit) {\n    return bevelJoinField(point, start, end, width, joinAngle);\n  }\n  return -1000.;\n}\n\nfloat capDistanceField(vec2 point, vec2 start, vec2 end, float width, float capType) {\n   if (capType == ${stringToGlsl('butt')}) {\n    return buttCapDistanceField(point, start, end);\n  } else if (capType == ${stringToGlsl('square')}) {\n    return squareCapDistanceField(point, start, end, width);\n  }\n  return roundCapDistanceField(point, start, end, width);\n}\n\nfloat joinDistanceField(vec2 point, vec2 start, vec2 end, float width, float joinAngle, float joinType) {\n  if (joinType == ${stringToGlsl('bevel')}) {\n    return bevelJoinField(point, start, end, width, joinAngle);\n  } else if (joinType == ${stringToGlsl('miter')}) {\n    return miterJoinDistanceField(point, start, end, width, joinAngle);\n  }\n  return roundJoinDistanceField(point, start, end, width);\n}\n\nfloat computeSegmentPointDistance(vec2 point, vec2 start, vec2 end, float width, float joinAngle, float capType, float joinType) {\n  if (isCap(joinAngle)) {\n    return capDistanceField(point, start, end, width, capType);\n  }\n  return joinDistanceField(point, start, end, width, joinAngle, joinType);\n}\n\nvoid main(void) {\n  vec2 currentPoint = gl_FragCoord.xy / u_pixelRatio;\n  #ifdef GL_FRAGMENT_PRECISION_HIGH\n  vec2 worldPos = pxToWorld(currentPoint);\n  if (\n    abs(u_renderExtent[0] - u_renderExtent[2]) > 0.0 && (\n      worldPos[0] < u_renderExtent[0] ||\n      worldPos[1] < u_renderExtent[1] ||\n      worldPos[0] > u_renderExtent[2] ||\n      worldPos[1] > u_renderExtent[3]\n    )\n  ) {\n    discard;\n  }\n  #endif\n  if (${this.discardExpression_}) { discard; }\n\n  float segmentLength = length(v_segmentEnd - v_segmentStart);\n  vec2 segmentTangent = (v_segmentEnd - v_segmentStart) / segmentLength;\n  vec2 segmentNormal = vec2(-segmentTangent.y, segmentTangent.x);\n  vec2 startToPoint = currentPoint - v_segmentStart;\n  float currentLengthPx = max(0., min(dot(segmentTangent, startToPoint), segmentLength)) + v_distanceOffsetPx; \n  float currentRadiusPx = abs(dot(segmentNormal, startToPoint));\n  float currentRadiusRatio = dot(segmentNormal, startToPoint) * 2. / v_width;\n  vec4 color = ${this.strokeColorExpression_} * u_globalAlpha;\n  float capType = ${this.strokeCapExpression_};\n  float joinType = ${this.strokeJoinExpression_};\n  float segmentStartDistance = computeSegmentPointDistance(currentPoint, v_segmentStart, v_segmentEnd, v_width, v_angleStart, capType, joinType);\n  float segmentEndDistance = computeSegmentPointDistance(currentPoint, v_segmentEnd, v_segmentStart, v_width, v_angleEnd, capType, joinType);\n  float distance = max(\n    segmentDistanceField(currentPoint, v_segmentStart, v_segmentEnd, v_width),\n    max(segmentStartDistance, segmentEndDistance)\n  );\n  distance = max(distance, ${this.strokeDistanceFieldExpression_});\n  gl_FragColor = color * smoothstep(0., -1., distance);\n  if (u_hitDetection > 0) {\n    if (gl_FragColor.a < 0.1) { discard; };\n    gl_FragColor = v_hitColor;\n  }\n}`;\n  }\n\n  /**\n   * Generates a fill vertex shader from the builder parameters\n   *\n   * @return {string|null} The full shader as a string; null if no color specified\n   */\n  getFillVertexShader() {\n    if (!this.hasFill_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nattribute vec2 a_position;\nattribute vec4 a_hitColor;\n${this.attributes_\n  .map(function (attribute) {\n    return 'attribute ' + attribute + ';';\n  })\n  .join('\\n')}\nvarying vec4 v_hitColor;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.vertexShaderFunctions_.join('\\n')}\nvoid main(void) {\n  gl_Position = u_projectionMatrix * vec4(a_position, u_depth, 1.0);\n  v_hitColor = a_hitColor;\n${this.varyings_\n  .map(function (varying) {\n    return '  ' + varying.name + ' = ' + varying.expression + ';';\n  })\n  .join('\\n')}\n}`;\n  }\n\n  /**\n   * Generates a fill fragment shader from the builder parameters\n   * @return {string|null} The full shader as a string; null if no color specified\n   */\n  getFillFragmentShader() {\n    if (!this.hasFill_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nvarying vec4 v_hitColor;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.fragmentShaderFunctions_.join('\\n')}\nvec2 pxToWorld(vec2 pxPos) {\n  vec2 screenPos = 2.0 * pxPos / u_viewportSizePx - 1.0;\n  return (u_screenToWorldMatrix * vec4(screenPos, 0.0, 1.0)).xy;\n}\n\nvec2 worldToPx(vec2 worldPos) {\n  vec4 screenPos = u_projectionMatrix * vec4(worldPos, 0.0, 1.0);\n  return (0.5 * screenPos.xy + 0.5) * u_viewportSizePx;\n}\n\nvoid main(void) {\n  vec2 pxPos = gl_FragCoord.xy / u_pixelRatio;\n  vec2 pxOrigin = worldToPx(u_patternOrigin);\n  #ifdef GL_FRAGMENT_PRECISION_HIGH\n  vec2 worldPos = pxToWorld(pxPos);\n  if (\n    abs(u_renderExtent[0] - u_renderExtent[2]) > 0.0 && (\n      worldPos[0] < u_renderExtent[0] ||\n      worldPos[1] < u_renderExtent[1] ||\n      worldPos[0] > u_renderExtent[2] ||\n      worldPos[1] > u_renderExtent[3]\n    )\n  ) {\n    discard;\n  }\n  #endif\n  if (${this.discardExpression_}) { discard; }\n  gl_FragColor = ${this.fillColorExpression_} * u_globalAlpha;\n  if (u_hitDetection > 0) {\n    if (gl_FragColor.a < 0.1) { discard; };\n    gl_FragColor = v_hitColor;\n  }\n}`;\n  }\n}\n","/**\n * @module ol/layer/Heatmap\n */\nimport BaseVector from './BaseVector.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport {ShaderBuilder} from '../webgl/ShaderBuilder.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"../source/Vector.js\").default} [source] Point source.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius',\n};\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {BaseVector<import(\"../source/Vector.js\").default, WebGLPointsLayerRenderer>}\n * @api\n */\nclass Heatmap extends BaseVector {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.weight;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.gradient_ = null;\n\n    this.addChangeListener(Property.GRADIENT, this.handleGradientChanged_);\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    const weight = options.weight ? options.weight : 'weight';\n    if (typeof weight === 'string') {\n      this.weightFunction_ = function (feature) {\n        return feature.get(weight);\n      };\n    } else {\n      this.weightFunction_ = weight;\n    }\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  getBlur() {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  }\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array<string>} Colors.\n   * @api\n   * @observable\n   */\n  getGradient() {\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n  }\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  getRadius() {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  }\n\n  /**\n   * @private\n   */\n  handleGradientChanged_() {\n    this.gradient_ = createGradient(this.getGradient());\n  }\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  setBlur(blur) {\n    this.set(Property.BLUR, blur);\n  }\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  setGradient(colors) {\n    this.set(Property.GRADIENT, colors);\n  }\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  setRadius(radius) {\n    this.set(Property.RADIUS, radius);\n  }\n\n  createRenderer() {\n    const builder = new ShaderBuilder()\n      .addAttribute('float a_prop_weight')\n      .addVarying('v_prop_weight', 'float', 'a_prop_weight')\n      .addUniform('float u_size')\n      .addUniform('float u_blurSlope')\n      .setSymbolSizeExpression('vec2(u_size)')\n      .setSymbolColorExpression(\n        'vec4(smoothstep(0., 1., (1. - length(coordsPx * 2. / v_quadSizePx)) * u_blurSlope) * v_prop_weight)'\n      );\n\n    return new WebGLPointsLayerRenderer(this, {\n      className: this.getClassName(),\n      attributes: [\n        {\n          name: 'weight',\n          callback: (feature) => {\n            const weight = this.weightFunction_(feature);\n            return weight !== undefined ? clamp(weight, 0, 1) : 1;\n          },\n        },\n      ],\n      uniforms: {\n        u_size: () => {\n          return (this.get(Property.RADIUS) + this.get(Property.BLUR)) * 2;\n        },\n        u_blurSlope: () => {\n          return (\n            this.get(Property.RADIUS) / Math.max(1, this.get(Property.BLUR))\n          );\n        },\n      },\n      hitDetectionEnabled: true,\n      vertexShader: builder.getSymbolVertexShader(),\n      fragmentShader: builder.getSymbolFragmentShader(),\n      postProcesses: [\n        {\n          fragmentShader: `\n            precision mediump float;\n\n            uniform sampler2D u_image;\n            uniform sampler2D u_gradientTexture;\n            uniform float u_opacity;\n\n            varying vec2 v_texCoord;\n\n            void main() {\n              vec4 color = texture2D(u_image, v_texCoord);\n              gl_FragColor.a = color.a * u_opacity;\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\n              gl_FragColor.rgb *= gl_FragColor.a;\n            }`,\n          uniforms: {\n            u_gradientTexture: () => this.gradient_,\n            u_opacity: () => this.getOpacity(),\n          },\n        },\n      ],\n    });\n  }\n\n  renderDeclutter() {}\n}\n\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {HTMLCanvasElement} canvas with gradient texture.\n */\nfunction createGradient(colors) {\n  const width = 1;\n  const height = 256;\n  const context = createCanvasContext2D(width, height);\n\n  const gradient = context.createLinearGradient(0, 0, width, height);\n  const step = 1 / (colors.length - 1);\n  for (let i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.canvas;\n}\n\nexport default Heatmap;\n","/**\n * @module ol/layer/VectorImage\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorImageLayerRenderer from '../renderer/canvas/VectorImageLayer.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text on this layer. The priority is defined\n * by the `zIndex` of the style and the render order of features. Higher z-index means higher priority.\n * Within the same z-index, a feature rendered before another has higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {number} [imageRatio=1] Ratio by which the rendered extent should be larger than the\n * viewport extent. A larger ratio avoids cut images during panning, but will cause a decrease in performance.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, to an image. This layer type provides great performance\n * during panning and zooming, but point symbols and texts are always rotated with the view and\n * pixels are scaled during zoom animations. For more accurate rendering of vector data, use\n * {@link module:ol/layer/Vector~VectorLayer} instead.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorImageLayerRenderer>}\n * @api\n */\nclass VectorImageLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.imageRatio;\n    super(baseOptions);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.imageRatio_ =\n      options.imageRatio !== undefined ? options.imageRatio : 1;\n  }\n\n  /**\n   * @return {number} Ratio between rendered extent size and viewport extent size.\n   */\n  getImageRatio() {\n    return this.imageRatio_;\n  }\n\n  createRenderer() {\n    return new CanvasVectorImageLayerRenderer(this);\n  }\n}\n\nexport default VectorImageLayer;\n","/**\n * @module ol/interaction/DblClickDragZoom\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds. *\n * @property {number} [delta=1] The zoom delta applied on move of one pixel. *\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by double tap/click then drag up/down\n * with one finger/left mouse.\n * @api\n */\nclass DblClickDragZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleDeltaByPixel_ = options.delta ? options.delta : 0.01;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.handlingDownUpSequence_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.handlingDoubleDownSequence_ = false;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.doubleTapTimeoutId_ = undefined;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent  map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence_) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence_ = handledUp;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        if (this.handlingDoubleDownSequence_) {\n          this.handlingDoubleDownSequence_ = false;\n          const handled = this.handleDownEvent(mapBrowserEvent);\n          this.handlingDownUpSequence_ = handled;\n          stopEvent = this.stopDown(handled);\n        } else {\n          stopEvent = this.stopDown(false);\n          this.waitForDblTap_();\n        }\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.down_.originalEvent;\n    const distance = touch0.clientY - touch1.clientY;\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta =\n        1 - (this.lastDistance_ - distance) * this.scaleDeltaByPixel_;\n    }\n    this.lastDistance_ = distance;\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale, bypass the resolution constraint\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    map.render();\n    view.adjustResolutionInternal(scaleDelta);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length == 1) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      this.down_ = mapBrowserEvent;\n      if (!this.handlingDownUpSequence_) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer up events zooming out.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length == 0) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      this.handlingDownUpSequence_ = false;\n      this.handlingDoubleDownSequence_ = false;\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = Object.values(this.trackedPointers_);\n    }\n  }\n\n  /**\n   * Wait the second double finger tap.\n   * @private\n   */\n  waitForDblTap_() {\n    if (this.doubleTapTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.doubleTapTimeoutId_);\n      this.doubleTapTimeoutId_ = undefined;\n    } else {\n      this.handlingDoubleDownSequence_ = true;\n      this.doubleTapTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.handlingDoubleDownSequence_ = false;\n    this.doubleTapTimeoutId_ = undefined;\n  }\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default DblClickDragZoom;\n","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport {TRUE} from '../functions.js';\nimport {get as getProjection, getUserProjection} from '../proj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default|import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors\n * (and/or formats pre-constructed with options).\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n/**\n * @enum {string}\n */\nconst DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nexport class DragAndDropEvent extends Event {\n  /**\n   * @param {DragAndDropEventType} type Type.\n   * @param {File} file File.\n   * @param {Array<import(\"../Feature.js\").default>} [features] Features.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   */\n  constructor(type, file, features, projection) {\n    super(type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     * @api\n     */\n    this.projection = projection;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'addfeatures', DragAndDropEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'addfeatures', Return>} DragAndDropOnSignature\n */\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * @api\n *\n * @fires DragAndDropEvent\n */\nclass DragAndDrop extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      handleEvent: TRUE,\n    });\n\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragAndDropOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.readAsBuffer_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../format/Feature.js\").default>}\n     */\n    this.formats_ = [];\n    const formatConstructors = options.formatConstructors\n      ? options.formatConstructors\n      : [];\n    for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      let format = formatConstructors[i];\n      if (typeof format === 'function') {\n        format = new format();\n      }\n      this.formats_.push(format);\n      this.readAsBuffer_ =\n        this.readAsBuffer_ || format.getType() === 'arraybuffer';\n    }\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = options.projection\n      ? getProjection(options.projection)\n      : null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../source/Vector.js\").default}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.target = options.target ? options.target : null;\n  }\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  handleResult_(file, event) {\n    const result = event.target.result;\n    const map = this.getMap();\n    let projection = this.projection_;\n    if (!projection) {\n      projection = getUserProjection();\n      if (!projection) {\n        const view = map.getView();\n        projection = view.getProjection();\n      }\n    }\n\n    let text;\n    const formats = this.formats_;\n    for (let i = 0, ii = formats.length; i < ii; ++i) {\n      const format = formats[i];\n      let input = result;\n      if (this.readAsBuffer_ && format.getType() !== 'arraybuffer') {\n        if (text === undefined) {\n          text = new TextDecoder().decode(result);\n        }\n        input = text;\n      }\n      const features = this.tryReadFeatures_(format, input, {\n        featureProjection: projection,\n      });\n      if (features && features.length > 0) {\n        if (this.source_) {\n          this.source_.clear();\n          this.source_.addFeatures(features);\n        }\n        this.dispatchEvent(\n          new DragAndDropEvent(\n            DragAndDropEventType.ADD_FEATURES,\n            file,\n            features,\n            projection\n          )\n        );\n        break;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  registerListeners_() {\n    const map = this.getMap();\n    if (map) {\n      const dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [\n        listen(dropArea, EventType.DROP, this.handleDrop, this),\n        listen(dropArea, EventType.DRAGENTER, this.handleStop, this),\n        listen(dropArea, EventType.DRAGOVER, this.handleStop, this),\n        listen(dropArea, EventType.DROP, this.handleStop, this),\n      ];\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (!this.getActive() && active) {\n      this.registerListeners_();\n    }\n    if (this.getActive() && !active) {\n      this.unregisterListeners_();\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.unregisterListeners_();\n    super.setMap(map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  }\n\n  /**\n   * @param {import(\"../format/Feature.js\").default} format Format.\n   * @param {string} text Text.\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n   * @private\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  tryReadFeatures_(format, text, options) {\n    try {\n      return (\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        (format.readFeatures(text, options))\n      );\n    } catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * @private\n   */\n  unregisterListeners_() {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleDrop(event) {\n    const files = event.dataTransfer.files;\n    for (let i = 0, ii = files.length; i < ii; ++i) {\n      const file = files.item(i);\n      const reader = new FileReader();\n      reader.addEventListener(\n        EventType.LOAD,\n        this.handleResult_.bind(this, file)\n      );\n      if (this.readAsBuffer_) {\n        reader.readAsArrayBuffer(file);\n      } else {\n        reader.readAsText(file);\n      }\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleStop(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n  }\n}\n\nexport default DragAndDrop;\n","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport PointerInteraction from './Pointer.js';\nimport {mouseOnly, shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nclass DragRotateAndZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastMagnitude_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const deltaX = offset[0] - size[0] / 2;\n    const deltaY = size[1] / 2 - offset[1];\n    const theta = Math.atan2(deltaY, deltaX);\n    const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    const view = map.getView();\n    if (this.lastAngle_ !== undefined) {\n      const angleDelta = this.lastAngle_ - theta;\n      view.adjustRotationInternal(angleDelta);\n    }\n    this.lastAngle_ = theta;\n    if (this.lastMagnitude_ !== undefined) {\n      view.adjustResolutionInternal(this.lastMagnitude_ / magnitude);\n    }\n    if (this.lastMagnitude_ !== undefined) {\n      this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n    }\n    this.lastMagnitude_ = magnitude;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n    view.endInteraction(this.duration_, direction);\n    this.lastScaleDelta_ = 0;\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (this.condition_(mapBrowserEvent)) {\n      mapBrowserEvent.map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      this.lastMagnitude_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotateAndZoom;\n","/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {\n  always,\n  never,\n  noModifierKeys,\n  shiftKeyOnly,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../extent.js';\nimport {clamp, squaredDistance, toFixed} from '../math.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {\n  distance,\n  squaredDistance as squaredCoordinateDistance,\n} from '../coordinate.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/Geometry.js\").Type} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style for sketch features. The draw interaction can have up to three sketch features, depending on the mode.\n * It will always contain a feature with a `Point` geometry that corresponds to the current cursor position.\n * If the mode is `LineString` or `Polygon`, and there is at least one drawn point, it will also contain a feature with\n * a `LineString` geometry that corresponds to the line between the already drawn points and the current cursor position.\n * If the mode is `Polygon`, and there is at least one drawn point, it will also contain a feature with a `Polygon`\n * geometry that corresponds to the polygon between the already drawn points and the current cursor position\n * (note that this polygon has only two points if only one point is drawn).\n * If the mode is `Circle`, and there is one point drawn, it will also contain a feature with a `Circle` geometry whose\n * center is the drawn point and the radius is determined by the distance between the drawn point and the cursor.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition.noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition.shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean|import(\"../events/condition.js\").Condition} [trace=false] Trace a portion of another geometry.\n * Ignored when in freehand mode.\n * @property {VectorSource} [traceSource] Source for features to trace.  If tracing is active and a `traceSource` is\n * not provided, the interaction's `source` will be used.  Tracing requires that the interaction is configured with\n * either a `traceSource` or a `source`.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the draw interaction.\n */\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n/**\n * @typedef {Object} TraceState\n * @property {boolean} active Tracing active.\n * @property {import(\"../pixel.js\").Pixel} [startPx] The initially clicked pixel location.\n * @property {Array<TraceTarget>} [targets] Targets available for tracing.\n * @property {number} [targetIndex] The index of the currently traced target.  A value of -1 indicates\n * that no trace target is active.\n */\n\n/**\n * @typedef {Object} TraceTarget\n * @property {Array<import(\"../coordinate.js\").Coordinate>} coordinates Target coordinates.\n * @property {boolean} ring The target coordinates are a linear ring.\n * @property {number} startIndex The index of first traced coordinate.  A fractional index represents an\n * edge intersection.  Index values for rings will wrap (may be negative or larger than coordinates length).\n * @property {number} endIndex The index of last traced coordinate.  Details from startIndex also apply here.\n */\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'Polygon' | 'Circle'} Mode\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n */\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend',\n  /**\n   * Triggered upon feature draw abortion\n   * @event DrawEvent#drawabort\n   * @api\n   */\n  DRAWABORT: 'drawabort',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nexport class DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n  }\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {Array<Feature>} features The candidate features.\n * @return {Array<TraceTarget>} The trace targets.\n */\nfunction getTraceTargets(coordinate, features) {\n  /**\n   * @type {Array<TraceTarget>}\n   */\n  const targets = [];\n\n  for (let i = 0; i < features.length; ++i) {\n    const feature = features[i];\n    const geometry = feature.getGeometry();\n    appendGeometryTraceTargets(coordinate, geometry, targets);\n  }\n\n  return targets;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} a One coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b Another coordinate.\n * @return {number} The squared distance between the two coordinates.\n */\nfunction getSquaredDistance(a, b) {\n  return squaredDistance(a[0], a[1], b[0], b[1]);\n}\n\n/**\n * @param {LineCoordType} coordinates The ring coordinates.\n * @param {number} index The index.  May be wrapped.\n * @return {import(\"../coordinate.js\").Coordinate} The coordinate.\n */\nfunction getCoordinate(coordinates, index) {\n  const count = coordinates.length;\n  if (index < 0) {\n    return coordinates[index + count];\n  }\n  if (index >= count) {\n    return coordinates[index - count];\n  }\n  return coordinates[index];\n}\n\n/**\n * Get the cumulative squared distance along a ring path.  The end index index may be \"wrapped\" and it may\n * be less than the start index to indicate the direction of travel.  The start and end index may have\n * a fractional part to indicate a point between two coordinates.\n * @param {LineCoordType} coordinates Ring coordinates.\n * @param {number} startIndex The start index.\n * @param {number} endIndex The end index.\n * @return {number} The cumulative squared distance along the ring path.\n */\nfunction getCumulativeSquaredDistance(coordinates, startIndex, endIndex) {\n  let lowIndex, highIndex;\n  if (startIndex < endIndex) {\n    lowIndex = startIndex;\n    highIndex = endIndex;\n  } else {\n    lowIndex = endIndex;\n    highIndex = startIndex;\n  }\n  const lowWholeIndex = Math.ceil(lowIndex);\n  const highWholeIndex = Math.floor(highIndex);\n\n  if (lowWholeIndex > highWholeIndex) {\n    // both start and end are on the same segment\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    return getSquaredDistance(start, end);\n  }\n\n  let sd = 0;\n\n  if (lowIndex < lowWholeIndex) {\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = getCoordinate(coordinates, lowWholeIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  if (highWholeIndex < highIndex) {\n    const start = getCoordinate(coordinates, highWholeIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  for (let i = lowWholeIndex; i < highWholeIndex - 1; ++i) {\n    const start = getCoordinate(coordinates, i);\n    const end = getCoordinate(coordinates, i + 1);\n    sd += getSquaredDistance(start, end);\n  }\n\n  return sd;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {import(\"../geom/Geometry.js\").default} geometry The candidate geometry.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendGeometryTraceTargets(coordinate, geometry, targets) {\n  if (geometry instanceof LineString) {\n    appendTraceTarget(coordinate, geometry.getCoordinates(), false, targets);\n    return;\n  }\n  if (geometry instanceof MultiLineString) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], false, targets);\n    }\n    return;\n  }\n  if (geometry instanceof Polygon) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], true, targets);\n    }\n    return;\n  }\n  if (geometry instanceof MultiPolygon) {\n    const polys = geometry.getCoordinates();\n    for (let i = 0, ii = polys.length; i < ii; ++i) {\n      const coordinates = polys[i];\n      for (let j = 0, jj = coordinates.length; j < jj; ++j) {\n        appendTraceTarget(coordinate, coordinates[j], true, targets);\n      }\n    }\n    return;\n  }\n  if (geometry instanceof GeometryCollection) {\n    const geometries = geometry.getGeometries();\n    for (let i = 0; i < geometries.length; ++i) {\n      appendGeometryTraceTargets(coordinate, geometries[i], targets);\n    }\n    return;\n  }\n  // other types cannot be traced\n}\n\n/**\n * @typedef {Object} TraceTargetUpdateInfo\n * @property {number} index The new target index.\n * @property {number} endIndex The new segment end index.\n */\n\n/**\n * @type {TraceTargetUpdateInfo}\n */\nconst sharedUpdateInfo = {index: -1, endIndex: NaN};\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {TraceState} traceState The trace state.\n * @param {import(\"../Map.js\").default} map The map.\n * @param {number} snapTolerance The snap tolerance.\n * @return {TraceTargetUpdateInfo} Information about the new trace target.  The returned\n * object is reused between calls and must not be modified by the caller.\n */\nfunction getTraceTargetUpdate(coordinate, traceState, map, snapTolerance) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n\n  let closestTargetDistance = Infinity;\n\n  let newTargetIndex = -1;\n  let newEndIndex = NaN;\n\n  for (\n    let targetIndex = 0;\n    targetIndex < traceState.targets.length;\n    ++targetIndex\n  ) {\n    const target = traceState.targets[targetIndex];\n    const coordinates = target.coordinates;\n\n    let minSegmentDistance = Infinity;\n    let endIndex;\n    for (\n      let coordinateIndex = 0;\n      coordinateIndex < coordinates.length - 1;\n      ++coordinateIndex\n    ) {\n      const start = coordinates[coordinateIndex];\n      const end = coordinates[coordinateIndex + 1];\n      const rel = getPointSegmentRelationship(x, y, start, end);\n      if (rel.squaredDistance < minSegmentDistance) {\n        minSegmentDistance = rel.squaredDistance;\n        endIndex = coordinateIndex + rel.along;\n      }\n    }\n\n    if (minSegmentDistance < closestTargetDistance) {\n      closestTargetDistance = minSegmentDistance;\n      if (target.ring && traceState.targetIndex === targetIndex) {\n        // same target, maintain the same trace direction\n        if (target.endIndex > target.startIndex) {\n          // forward trace\n          if (endIndex < target.startIndex) {\n            endIndex += coordinates.length;\n          }\n        } else if (target.endIndex < target.startIndex) {\n          // reverse trace\n          if (endIndex > target.startIndex) {\n            endIndex -= coordinates.length;\n          }\n        }\n      }\n      newEndIndex = endIndex;\n      newTargetIndex = targetIndex;\n    }\n  }\n\n  const newTarget = traceState.targets[newTargetIndex];\n  let considerBothDirections = newTarget.ring;\n  if (traceState.targetIndex === newTargetIndex && considerBothDirections) {\n    // only consider switching trace direction if close to the start\n    const newCoordinate = interpolateCoordinate(\n      newTarget.coordinates,\n      newEndIndex\n    );\n    const pixel = map.getPixelFromCoordinate(newCoordinate);\n    if (distance(pixel, traceState.startPx) > snapTolerance) {\n      considerBothDirections = false;\n    }\n  }\n\n  if (considerBothDirections) {\n    const coordinates = newTarget.coordinates;\n    const count = coordinates.length;\n    const startIndex = newTarget.startIndex;\n    const endIndex = newEndIndex;\n    if (startIndex < endIndex) {\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex\n      );\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex - count\n      );\n      if (reverseDistance < forwardDistance) {\n        newEndIndex -= count;\n      }\n    } else {\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex\n      );\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex + count\n      );\n      if (forwardDistance < reverseDistance) {\n        newEndIndex += count;\n      }\n    }\n  }\n\n  sharedUpdateInfo.index = newTargetIndex;\n  sharedUpdateInfo.endIndex = newEndIndex;\n  return sharedUpdateInfo;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The clicked coordinate.\n * @param {Array<import(\"../coordinate.js\").Coordinate>} coordinates The geometry component coordinates.\n * @param {boolean} ring The coordinates represent a linear ring.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendTraceTarget(coordinate, coordinates, ring, targets) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const start = coordinates[i];\n    const end = coordinates[i + 1];\n    const rel = getPointSegmentRelationship(x, y, start, end);\n    if (rel.squaredDistance === 0) {\n      const index = i + rel.along;\n      targets.push({\n        coordinates: coordinates,\n        ring: ring,\n        startIndex: index,\n        endIndex: index,\n      });\n      return;\n    }\n  }\n}\n\n/**\n * @typedef {Object} PointSegmentRelationship\n * @property {number} along The closest point expressed as a fraction along the segment length.\n * @property {number} squaredDistance The squared distance of the point to the segment.\n */\n\n/**\n * @type {PointSegmentRelationship}\n */\nconst sharedRel = {along: 0, squaredDistance: 0};\n\n/**\n * @param {number} x The point x.\n * @param {number} y The point y.\n * @param {import(\"../coordinate.js\").Coordinate} start The segment start.\n * @param {import(\"../coordinate.js\").Coordinate} end The segment end.\n * @return {PointSegmentRelationship} The point segment relationship.  The returned object is\n * shared between calls and must not be modified by the caller.\n */\nfunction getPointSegmentRelationship(x, y, start, end) {\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  let along = 0;\n  let px = x1;\n  let py = y1;\n  if (dx !== 0 || dy !== 0) {\n    along = clamp(((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy), 0, 1);\n    px += dx * along;\n    py += dy * along;\n  }\n\n  sharedRel.along = along;\n  sharedRel.squaredDistance = toFixed(squaredDistance(x, y, px, py), 10);\n  return sharedRel;\n}\n\n/**\n * @param {LineCoordType} coordinates The coordinates.\n * @param {number} index The index.  May be fractional and may wrap.\n * @return {import(\"../coordinate.js\").Coordinate} The interpolated coordinate.\n */\nfunction interpolateCoordinate(coordinates, index) {\n  const count = coordinates.length;\n\n  let startIndex = Math.floor(index);\n  const along = index - startIndex;\n  if (startIndex >= count) {\n    startIndex -= count;\n  } else if (startIndex < 0) {\n    startIndex += count;\n  }\n\n  let endIndex = startIndex + 1;\n  if (endIndex >= count) {\n    endIndex -= count;\n  }\n\n  const start = coordinates[startIndex];\n  const x0 = start[0];\n  const y0 = start[1];\n  const end = coordinates[endIndex];\n  const dx = end[0] - x0;\n  const dy = end[1] - y0;\n\n  return [x0 + dx * along, y0 + dy * along];\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'drawabort'|'drawend'|'drawstart', DrawEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'drawabort'|'drawend'|'drawstart', Return>} DrawOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DrawOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * Pointer type of the last pointermove event\n     * @type {string}\n     * @private\n     */\n    this.pointerType_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {import(\"../geom/Geometry.js\").Type}\n     * @private\n     */\n    this.type_ = /** @type {import(\"../geom/Geometry.js\").Type} */ (\n      options.type\n    );\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints\n      ? options.minPoints\n      : this.mode_ === 'Polygon'\n      ? 3\n      : 2;\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ =\n      this.mode_ === 'Circle'\n        ? 2\n        : options.maxPoints\n        ? options.maxPoints\n        : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition\n      ? options.finishCondition\n      : TRUE;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      const mode = this.mode_;\n      if (mode === 'Circle') {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          const circle = geometry\n            ? /** @type {Circle} */ (geometry)\n            : new Circle([NaN, NaN]);\n          const center = fromUserCoordinate(coordinates[0], projection);\n          const squaredLength = squaredCoordinateDistance(\n            center,\n            fromUserCoordinate(coordinates[coordinates.length - 1], projection)\n          );\n          circle.setCenterAndRadius(\n            center,\n            Math.sqrt(squaredLength),\n            this.geometryLayout_\n          );\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        let Constructor;\n        if (mode === 'Point') {\n          Constructor = Point;\n        } else if (mode === 'LineString') {\n          Constructor = LineString;\n        } else if (mode === 'Polygon') {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          if (geometry) {\n            if (mode === 'Polygon') {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates(\n                  [coordinates[0].concat([coordinates[0][0]])],\n                  this.geometryLayout_\n                );\n              } else {\n                geometry.setCoordinates([], this.geometryLayout_);\n              }\n            } else {\n              geometry.setCoordinates(coordinates, this.geometryLayout_);\n            }\n          } else {\n            geometry = new Constructor(coordinates, this.geometryLayout_);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ =\n      options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature<import('../geom/SimpleGeometry.js').default>}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance\n      ? options.clickTolerance * options.clickTolerance\n      : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition\n        ? options.freehandCondition\n        : shiftKeyOnly;\n    }\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.traceCondition_;\n    this.setTrace(options.trace || false);\n\n    /**\n     * @type {TraceState}\n     * @private\n     */\n    this.traceState_ = {active: false};\n\n    /**\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.traceSource_ = options.traceSource || options.source || null;\n\n    this.addChangeListener(InteractionProperty.ACTIVE, this.updateState_);\n  }\n\n  /**\n   * Toggle tracing mode or set a tracing condition.\n   *\n   * @param {boolean|import(\"../events/condition.js\").Condition} trace A boolean to toggle tracing mode or an event\n   *     condition that will be checked when a feature is clicked to determine if tracing should be active.\n   */\n  setTrace(trace) {\n    let condition;\n    if (!trace) {\n      condition = never;\n    } else if (trace === true) {\n      condition = always;\n    } else {\n      condition = trace;\n    }\n    this.traceCondition_ = condition;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.originalEvent.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== 'Point' && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (\n      !this.freehand_ &&\n      this.lastDragTime_ &&\n      event.type === MapBrowserEventType.POINTERDRAG\n    ) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null\n    ) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN\n    ) {\n      pass = false;\n    } else if (move && this.getPointerCount() < 2) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        this.handlePointerMove_(event);\n        if (this.shouldHandle_) {\n          // Avoid page scrolling when freehand drawing on mobile\n          event.originalEvent.preventDefault();\n        }\n      } else if (\n        event.originalEvent.pointerType === 'mouse' ||\n        (event.type === MapBrowserEventType.POINTERDRAG &&\n          this.downTimeout_ === undefined)\n      ) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event.coordinate);\n      }\n      return true;\n    }\n\n    if (!this.condition_(event)) {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(() => {\n      this.handlePointerMove_(\n        new MapBrowserEvent(\n          MapBrowserEventType.POINTERMOVE,\n          event.map,\n          event.originalEvent,\n          false,\n          event.frameState\n        )\n      );\n    }, this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  deactivateTrace_() {\n    this.traceState_ = {active: false};\n  }\n\n  /**\n   * Activate or deactivate trace state based on a browser event.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  toggleTraceState_(event) {\n    if (!this.traceSource_ || !this.traceCondition_(event)) {\n      return;\n    }\n\n    if (this.traceState_.active) {\n      this.deactivateTrace_();\n      return;\n    }\n\n    const map = this.getMap();\n    const lowerLeft = map.getCoordinateFromPixel([\n      event.pixel[0] - this.snapTolerance_,\n      event.pixel[1] + this.snapTolerance_,\n    ]);\n    const upperRight = map.getCoordinateFromPixel([\n      event.pixel[0] + this.snapTolerance_,\n      event.pixel[1] - this.snapTolerance_,\n    ]);\n    const extent = boundingExtent([lowerLeft, upperRight]);\n    const features = this.traceSource_.getFeaturesInExtent(extent);\n    if (features.length === 0) {\n      return;\n    }\n\n    const targets = getTraceTargets(event.coordinate, features);\n    if (targets.length) {\n      this.traceState_ = {\n        active: true,\n        startPx: event.pixel.slice(),\n        targets: targets,\n        targetIndex: -1,\n      };\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} endIndex The new end index of the trace.\n   * @private\n   */\n  addOrRemoveTracedCoordinates_(target, endIndex) {\n    // three cases to handle:\n    //  1. traced in the same direction and points need adding\n    //  2. traced in the same direction and points need removing\n    //  3. traced in a new direction\n    const previouslyForward = target.startIndex <= target.endIndex;\n    const currentlyForward = target.startIndex <= endIndex;\n    if (previouslyForward === currentlyForward) {\n      // same direction\n      if (\n        (previouslyForward && endIndex > target.endIndex) ||\n        (!previouslyForward && endIndex < target.endIndex)\n      ) {\n        // case 1 - add new points\n        this.addTracedCoordinates_(target, target.endIndex, endIndex);\n      } else if (\n        (previouslyForward && endIndex < target.endIndex) ||\n        (!previouslyForward && endIndex > target.endIndex)\n      ) {\n        // case 2 - remove old points\n        this.removeTracedCoordinates_(endIndex, target.endIndex);\n      }\n    } else {\n      // case 3 - remove old points, add new points\n      this.removeTracedCoordinates_(target.startIndex, target.endIndex);\n      this.addTracedCoordinates_(target, target.startIndex, endIndex);\n    }\n  }\n\n  /**\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  removeTracedCoordinates_(fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    let remove = 0;\n    if (fromIndex < toIndex) {\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        end -= 1;\n      }\n      remove = end - start + 1;\n    } else {\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      remove = start - end + 1;\n    }\n\n    if (remove > 0) {\n      this.removeLastPoints_(remove);\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  addTracedCoordinates_(target, fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    const coordinates = [];\n    if (fromIndex < toIndex) {\n      // forward trace\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        // if end is snapped to a vertex, it will be added later\n        end -= 1;\n      }\n      for (let i = start; i <= end; ++i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    } else {\n      // reverse trace\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      for (let i = start; i >= end; --i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    }\n    if (coordinates.length) {\n      this.appendCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * Update the trace.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  updateTrace_(event) {\n    const traceState = this.traceState_;\n    if (!traceState.active) {\n      return;\n    }\n\n    if (traceState.targetIndex === -1) {\n      // check if we are ready to pick a target\n      if (distance(traceState.startPx, event.pixel) < this.snapTolerance_) {\n        return;\n      }\n    }\n\n    const updatedTraceTarget = getTraceTargetUpdate(\n      event.coordinate,\n      traceState,\n      this.getMap(),\n      this.snapTolerance_\n    );\n\n    if (traceState.targetIndex !== updatedTraceTarget.index) {\n      // target changed\n      if (traceState.targetIndex !== -1) {\n        // remove points added during previous trace\n        const oldTarget = traceState.targets[traceState.targetIndex];\n        this.removeTracedCoordinates_(oldTarget.startIndex, oldTarget.endIndex);\n      }\n      // add points for the new target\n      const newTarget = traceState.targets[updatedTraceTarget.index];\n      this.addTracedCoordinates_(\n        newTarget,\n        newTarget.startIndex,\n        updatedTraceTarget.endIndex\n      );\n    } else {\n      // target stayed the same\n      const target = traceState.targets[traceState.targetIndex];\n      this.addOrRemoveTracedCoordinates_(target, updatedTraceTarget.endIndex);\n    }\n\n    // modify the state with updated info\n    traceState.targetIndex = updatedTraceTarget.index;\n    const target = traceState.targets[traceState.targetIndex];\n    target.endIndex = updatedTraceTarget.endIndex;\n\n    // update event coordinate and pixel to match end point of final segment\n    const coordinate = interpolateCoordinate(\n      target.coordinates,\n      target.endIndex\n    );\n    const pixel = this.getMap().getPixelFromCoordinate(coordinate);\n    event.coordinate = coordinate;\n    event.pixel = [Math.round(pixel[0]), Math.round(pixel[1])];\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.getPointerCount() === 0) {\n      if (this.downTimeout_) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n\n      this.handlePointerMove_(event);\n      const tracing = this.traceState_.active;\n      this.toggleTraceState_(event);\n\n      if (this.shouldHandle_) {\n        const startingToDraw = !this.finishCoordinate_;\n        if (startingToDraw) {\n          this.startDrawing_(event.coordinate);\n        }\n        if (!startingToDraw && this.freehand_) {\n          this.finishDrawing();\n        } else if (\n          !this.freehand_ &&\n          (!startingToDraw || this.mode_ === 'Point')\n        ) {\n          if (this.atFinish_(event.pixel, tracing)) {\n            if (this.finishCondition_(event)) {\n              this.finishDrawing();\n            }\n          } else {\n            this.addToDrawing_(event.coordinate);\n          }\n        }\n        pass = false;\n      } else if (this.freehand_) {\n        this.abortDrawing();\n      }\n    }\n\n    if (!pass && this.stopClick_) {\n      event.preventDefault();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @private\n   */\n  handlePointerMove_(event) {\n    this.pointerType_ = event.originalEvent.pointerType;\n    if (\n      this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))\n    ) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_\n        ? squaredDistance > this.squaredClickTolerance_\n        : squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return;\n      }\n    }\n\n    if (!this.finishCoordinate_) {\n      this.createOrUpdateSketchPoint_(event.coordinate.slice());\n      return;\n    }\n\n    this.updateTrace_(event);\n    this.modifyDrawing_(event.coordinate);\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {boolean} [tracing] Drawing in trace mode (only stop if at the starting point).\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(pixel, tracing) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      const mode = this.mode_;\n      if (mode === 'Point') {\n        at = true;\n      } else if (mode === 'Circle') {\n        at = this.sketchCoords_.length === 2;\n      } else if (mode === 'LineString') {\n        potentiallyDone =\n          !tracing && this.sketchCoords_.length > this.minPoints_;\n      } else if (mode === 'Polygon') {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [\n          sketchCoords[0][0],\n          sketchCoords[0][sketchCoords[0].length - 2],\n        ];\n        if (tracing) {\n          potentiallyFinishCoordinates = [sketchCoords[0][0]];\n        } else {\n          potentiallyFinishCoordinates = [\n            sketchCoords[0][0],\n            sketchCoords[0][sketchCoords[0].length - 2],\n          ];\n        }\n      }\n      if (potentiallyDone) {\n        const map = this.getMap();\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../coordinate\").Coordinate} coordinates Coordinate.\n   * @private\n   */\n  createOrUpdateSketchPoint_(coordinates) {\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @private\n   */\n  createOrUpdateCustomSketchLine_(geometry) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature();\n    }\n    const ring = geometry.getLinearRing(0);\n    let sketchLineGeom = this.sketchLine_.getGeometry();\n    if (!sketchLineGeom) {\n      sketchLineGeom = new LineString(\n        ring.getFlatCoordinates(),\n        ring.getLayout()\n      );\n      this.sketchLine_.setGeometry(sketchLineGeom);\n    } else {\n      sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(),\n        ring.getFlatCoordinates()\n      );\n      sketchLineGeom.changed();\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n   * @private\n   */\n  startDrawing_(start) {\n    const projection = this.getMap().getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    while (start.length < stride) {\n      start.push(0);\n    }\n    this.finishCoordinate_ = start;\n    if (this.mode_ === 'Point') {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === 'Polygon') {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(\n      this.sketchCoords_,\n      undefined,\n      projection\n    );\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @private\n   */\n  modifyDrawing_(coordinate) {\n    const map = this.getMap();\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = map.getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    let coordinates, last;\n    while (coordinate.length < stride) {\n      coordinate.push(0);\n    }\n    if (this.mode_ === 'Point') {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(\n      /** @type {!LineCoordType} */ (this.sketchCoords_),\n      geometry,\n      projection\n    );\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    if (geometry.getType() === 'Polygon' && this.mode_ !== 'Polygon') {\n      this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n    } else if (this.sketchLineCoords_) {\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @private\n   */\n  addToDrawing_(coordinate) {\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let done;\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === 'LineString' || mode === 'Circle') {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (mode === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.createOrUpdateSketchPoint_(coordinate.slice());\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  }\n\n  /**\n   * @param {number} n The number of points to remove.\n   */\n  removeLastPoints_(n) {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    const mode = this.mode_;\n    for (let i = 0; i < n; ++i) {\n      let coordinates;\n      if (mode === 'LineString' || mode === 'Circle') {\n        coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n        coordinates.splice(-2, 1);\n        if (coordinates.length >= 2) {\n          this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n          const finishCoordinate = this.finishCoordinate_.slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        this.geometryFunction_(coordinates, geometry, projection);\n        if (geometry.getType() === 'Polygon' && this.sketchLine_) {\n          this.createOrUpdateCustomSketchLine_(\n            /** @type {Polygon} */ (geometry)\n          );\n        }\n      } else if (mode === 'Polygon') {\n        coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n        coordinates.splice(-2, 1);\n        const sketchLineGeom = this.sketchLine_.getGeometry();\n        if (coordinates.length >= 2) {\n          const finishCoordinate = coordinates[coordinates.length - 2].slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        sketchLineGeom.setCoordinates(coordinates);\n        this.geometryFunction_(this.sketchCoords_, geometry, projection);\n      }\n\n      if (coordinates.length === 1) {\n        this.abortDrawing();\n        break;\n      }\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn. Does not do anything when\n   * drawing POINT or MULTI_POINT geometries.\n   * @api\n   */\n  removeLastPoint() {\n    this.removeLastPoints_(1);\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    if (this.mode_ === 'LineString') {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === 'Polygon') {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === 'MultiPoint') {\n      sketchFeature.setGeometry(\n        new MultiPoint([/** @type {PointCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === 'MultiLineString') {\n      sketchFeature.setGeometry(\n        new MultiLineString([/** @type {LineCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === 'MultiPolygon') {\n      sketchFeature.setGeometry(\n        new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)])\n      );\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    this.deactivateTrace_();\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @api\n   */\n  abortDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (sketchFeature) {\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n    }\n  }\n\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon. If no geometry is being drawn, a new one will be created.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n   * the coordinate array.\n   * @api\n   */\n  appendCoordinates(coordinates) {\n    const mode = this.mode_;\n    const newDrawing = !this.sketchFeature_;\n    if (newDrawing) {\n      this.startDrawing_(coordinates[0]);\n    }\n    /** @type {LineCoordType} */\n    let sketchCoords;\n    if (mode === 'LineString' || mode === 'Circle') {\n      sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n    } else if (mode === 'Polygon') {\n      sketchCoords =\n        this.sketchCoords_ && this.sketchCoords_.length\n          ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n          : [];\n    } else {\n      return;\n    }\n\n    if (newDrawing) {\n      sketchCoords.shift();\n    }\n\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    sketchCoords.pop();\n\n    // Append coordinate list\n    for (let i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n\n    const ending = coordinates[coordinates.length - 1];\n    // Duplicate last coordinate for sketch drawing (cursor position)\n    this.addToDrawing_(ending);\n    this.modifyDrawing_(ending);\n  }\n\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.sketchPoint_ = new Feature(new Point(last));\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function (feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * {@link import(\"../geom/Circle.js\").Circle} geometry.\n * @param {number} [sides] Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number} [angle] Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(sides, angle) {\n  return function (coordinates, geometry, projection) {\n    const center = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[0],\n      projection\n    );\n    const end = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1],\n      projection\n    );\n    const radius = Math.sqrt(squaredCoordinateDistance(center, end));\n    geometry = geometry || fromCircle(new Circle(center), sides);\n\n    let internalAngle = angle;\n    if (!angle && angle !== 0) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      internalAngle = Math.atan2(y, x);\n    }\n    makeRegular(\n      /** @type {Polygon} */ (geometry),\n      center,\n      radius,\n      internalAngle\n    );\n\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return function (coordinates, geometry, projection) {\n    const extent = boundingExtent(\n      /** @type {LineCoordType} */ ([\n        coordinates[0],\n        coordinates[coordinates.length - 1],\n      ]).map(function (coordinate) {\n        return fromUserCoordinate(coordinate, projection);\n      })\n    );\n    const boxCoordinates = [\n      [\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent),\n      ],\n    ];\n    if (geometry) {\n      geometry.setCoordinates(boxCoordinates);\n    } else {\n      geometry = new Polygon(boxCoordinates);\n    }\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Get the drawing mode.  The mode for multi-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n      return 'Point';\n    case 'LineString':\n    case 'MultiLineString':\n      return 'LineString';\n    case 'Polygon':\n    case 'MultiPolygon':\n      return 'Polygon';\n    case 'Circle':\n      return 'Circle';\n    default:\n      throw new Error('Invalid type: ' + type);\n  }\n}\n\nexport default Draw;\n","/**\n * @module ol/interaction/Extent\n */\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {always} from '../events/condition.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {toUserExtent} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to the `Polygon` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to the `Point` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n/**\n * @enum {string}\n */\nconst ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event ExtentEvent#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nexport class ExtentEvent extends Event {\n  /**\n   * @param {import(\"../extent.js\").Extent} extent the new extent\n   */\n  constructor(extent) {\n    super(ExtentEventType.EXTENTCHANGED);\n\n    /**\n     * The current extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = extent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'extentchanged', ExtentEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'extentchanged', Return>} ExtentOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires ExtentEvent\n * @api\n */\nclass Extent extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ExtentOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * Condition\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * Extent of the drawn box\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.extent_ = null;\n\n    /**\n     * Handler for pointer move events\n     * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n     * @private\n     */\n    this.pointerHandler_ = null;\n\n    /**\n     * Pixel threshold to snap to extent\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Is the pointer snapped to an extent vertex\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Feature for displaying the visible extent\n     * @type {Feature}\n     * @private\n     */\n    this.extentFeature_ = null;\n\n    /**\n     * Feature for displaying the visible pointer\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    if (!options) {\n      options = {};\n    }\n\n    /**\n     * Layer for the extentFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.extentOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.boxStyle\n        ? options.boxStyle\n        : getDefaultExtentStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Layer for the vertexFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.vertexOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.pointerStyle\n        ? options.pointerStyle\n        : getDefaultPointerStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    if (options.extent) {\n      this.setExtent(options.extent);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n   * @param {import(\"../Map.js\").default} map map\n   * @return {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n   * @private\n   */\n  snapToVertex_(pixel, map) {\n    const pixelCoordinate = map.getCoordinateFromPixelInternal(pixel);\n    const sortByDistance = function (a, b) {\n      return (\n        squaredDistanceToSegment(pixelCoordinate, a) -\n        squaredDistanceToSegment(pixelCoordinate, b)\n      );\n    };\n    const extent = this.getExtentInternal();\n    if (extent) {\n      //convert extents to line segments and find the segment closest to pixelCoordinate\n      const segments = getSegments(extent);\n      segments.sort(sortByDistance);\n      const closestSegment = segments[0];\n\n      let vertex = closestOnSegment(pixelCoordinate, closestSegment);\n      const vertexPixel = map.getPixelFromCoordinateInternal(vertex);\n\n      //if the distance is within tolerance, snap to the segment\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        //test if we should further snap to a vertex\n        const pixel1 = map.getPixelFromCoordinateInternal(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinateInternal(closestSegment[1]);\n        const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex =\n            squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        }\n        return vertex;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n   * @private\n   */\n  handlePointerMove_(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    let vertex = this.snapToVertex_(pixel, map);\n    if (!vertex) {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n    }\n    this.createOrUpdatePointerFeature_(vertex);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent extent\n   * @return {Feature} extent as featrue\n   * @private\n   */\n  createOrUpdateExtentFeature_(extent) {\n    let extentFeature = this.extentFeature_;\n\n    if (!extentFeature) {\n      if (!extent) {\n        extentFeature = new Feature({});\n      } else {\n        extentFeature = new Feature(polygonFromExtent(extent));\n      }\n      this.extentFeature_ = extentFeature;\n      this.extentOverlay_.getSource().addFeature(extentFeature);\n    } else {\n      if (!extent) {\n        extentFeature.setGeometry(undefined);\n      } else {\n        extentFeature.setGeometry(polygonFromExtent(extent));\n      }\n    }\n    return extentFeature;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n   * @return {Feature} vertex as feature\n   * @private\n   */\n  createOrUpdatePointerFeature_(vertex) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(vertex));\n      this.vertexFeature_ = vertexFeature;\n      this.vertexOverlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(vertex);\n    }\n    return vertexFeature;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent || !this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    //display pointer (if not dragging)\n    if (\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    //call pointer to determine up/down/drag\n    super.handleEvent(mapBrowserEvent);\n    //return false to stop propagation\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    const extent = this.getExtentInternal();\n    let vertex = this.snapToVertex_(pixel, map);\n\n    //find the extent corner opposite the passed corner\n    const getOpposingPoint = function (point) {\n      let x_ = null;\n      let y_ = null;\n      if (point[0] == extent[0]) {\n        x_ = extent[2];\n      } else if (point[0] == extent[2]) {\n        x_ = extent[0];\n      }\n      if (point[1] == extent[1]) {\n        y_ = extent[3];\n      } else if (point[1] == extent[3]) {\n        y_ = extent[1];\n      }\n      if (x_ !== null && y_ !== null) {\n        return [x_, y_];\n      }\n      return null;\n    };\n    if (vertex && extent) {\n      const x =\n        vertex[0] == extent[0] || vertex[0] == extent[2] ? vertex[0] : null;\n      const y =\n        vertex[1] == extent[1] || vertex[1] == extent[3] ? vertex[1] : null;\n\n      //snap to point\n      if (x !== null && y !== null) {\n        this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n        //snap to edge\n      } else if (x !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([x, extent[1]]),\n          getOpposingPoint([x, extent[3]])\n        );\n      } else if (y !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([extent[0], y]),\n          getOpposingPoint([extent[2], y])\n        );\n      }\n      //no snap - new bbox\n    } else {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n      this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n      this.pointerHandler_ = getPointHandler(vertex);\n    }\n    return true; //event handled; start downup sequence\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (this.pointerHandler_) {\n      const pixelCoordinate = mapBrowserEvent.coordinate;\n      this.setExtent(this.pointerHandler_(pixelCoordinate));\n      this.createOrUpdatePointerFeature_(pixelCoordinate);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.pointerHandler_ = null;\n    //If bbox is zero area, set to null;\n    const extent = this.getExtentInternal();\n    if (!extent || getArea(extent) === 0) {\n      this.setExtent(null);\n    }\n    return false; //Stop handling downup sequence\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.extentOverlay_.setMap(map);\n    this.vertexOverlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection (or user projection if set)\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtent() {\n    return toUserExtent(\n      this.getExtentInternal(),\n      this.getMap().getView().getProjection()\n    );\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtentInternal() {\n    return this.extent_;\n  }\n\n  /**\n   * Manually sets the drawn extent, using the view projection.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent\n   * @api\n   */\n  setExtent(extent) {\n    //Null extent means no bbox\n    this.extent_ = extent ? extent : null;\n    this.createOrUpdateExtentFeature_(extent);\n    this.dispatchEvent(new ExtentEvent(this.extent_));\n  }\n}\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Polygon'];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function (point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  }\n  if (fixedP1[1] == fixedP2[1]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  }\n  return null;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [\n      [extent[0], extent[1]],\n      [extent[0], extent[3]],\n    ],\n    [\n      [extent[0], extent[3]],\n      [extent[2], extent[3]],\n    ],\n    [\n      [extent[2], extent[3]],\n      [extent[2], extent[1]],\n    ],\n    [\n      [extent[2], extent[1]],\n      [extent[0], extent[1]],\n    ],\n  ];\n}\n\nexport default Extent;\n","/**\n * @module ol/interaction/Link\n */\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport MapEventType from '../MapEventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {toFixed} from '../math.js';\n\n/**\n * @param {number} number A number.\n * @return {number} A number with at most 5 decimal places.\n */\nfunction to5(number) {\n  return toFixed(number, 5);\n}\n\n/**\n * @param {string} string A string.\n * @return {number} A number representing the string.\n */\nfunction readNumber(string) {\n  return parseFloat(string);\n}\n\n/**\n * @param {number} number A number.\n * @return {string} A string representing the number.\n */\nfunction writeNumber(number) {\n  return to5(number).toString();\n}\n\n/**\n * @param {number} a A number.\n * @param {number} b A number.\n * @return {boolean} The numbers are different.\n */\nfunction differentNumber(a, b) {\n  if (isNaN(a)) {\n    return false;\n  }\n  return a !== readNumber(writeNumber(b));\n}\n\n/**\n * @param {Array<number>} a An array of two numbers.\n * @param {Array<number>} b An array of two numbers.\n * @return {boolean} The arrays are different.\n */\nfunction differentArray(a, b) {\n  return differentNumber(a[0], b[0]) || differentNumber(a[1], b[1]);\n}\n\n/** @typedef {'x'|'y'|'z'|'r'|'l'} Params */\n\n/**\n * @typedef {function(string):void} Callback\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean|import('../View.js').AnimationOptions} [animate=true] Animate view transitions.\n * @property {Array<Params>} [params=['x', 'y', 'z', 'r', 'l']] Properties to track. Default is to track\n * `x` (center x), `y` (center y), `z` (zoom), `r` (rotation) and `l` (layers).\n * @property {boolean} [replace=false] Replace the current URL without creating the new entry in browser history.\n * By default, changes in the map state result in a new entry being added to the browser history.\n * @property {string} [prefix=''] By default, the URL will be updated with search parameters x, y, z, and r.  To\n * avoid collisions with existing search parameters that your application uses, you can supply a custom prefix for\n * the ones used by this interaction (e.g. 'ol:').\n */\n\n/**\n * @classdesc\n * An interaction that synchronizes the map state with the URL.\n *\n * @api\n */\nclass Link extends Interaction {\n  /**\n   * @param {Options} [options] Link options.\n   */\n  constructor(options) {\n    super();\n\n    options = Object.assign(\n      {\n        animate: true,\n        params: ['x', 'y', 'z', 'r', 'l'],\n        replace: false,\n        prefix: '',\n      },\n      options || {}\n    );\n\n    let animationOptions;\n    if (options.animate === true) {\n      animationOptions = {duration: 250};\n    } else if (!options.animate) {\n      animationOptions = null;\n    } else {\n      animationOptions = options.animate;\n    }\n\n    /**\n     * @type {import('../View.js').AnimationOptions|null}\n     * @private\n     */\n    this.animationOptions_ = animationOptions;\n\n    /**\n     * @type {Object<Params, boolean>}\n     * @private\n     */\n    this.params_ = options.params.reduce((acc, value) => {\n      acc[value] = true;\n      return acc;\n    }, {});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.replace_ = options.replace;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.prefix_ = options.prefix;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.initial_ = true;\n\n    this.updateState_ = this.updateState_.bind(this);\n\n    /**\n     * The tracked parameter callbacks.\n     * @private\n     * @type {Object<string, Callback>}\n     */\n    this.trackedCallbacks_ = {};\n\n    /**\n     * The tracked parameter values.\n     * @private\n     * @type {Object<string, string|null>}\n     */\n    this.trackedValues_ = {};\n  }\n\n  /**\n   * @private\n   * @param {string} name A parameter name.\n   * @return {string} A name with the prefix applied.\n   */\n  getParamName_(name) {\n    if (!this.prefix_) {\n      return name;\n    }\n    return this.prefix_ + name;\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   * @return {string|null} The parameter value.\n   */\n  get_(params, name) {\n    return params.get(this.getParamName_(name));\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   * @param {string} value The param value.\n   */\n  set_(params, name, value) {\n    if (!(name in this.params_)) {\n      return;\n    }\n    params.set(this.getParamName_(name), value);\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   */\n  delete_(params, name) {\n    if (!(name in this.params_)) {\n      return;\n    }\n    params.delete(this.getParamName_(name));\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      this.unregisterListeners_(oldMap);\n    }\n    if (map) {\n      this.initial_ = true;\n      this.updateState_();\n      this.registerListeners_(map);\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   * @private\n   */\n  registerListeners_(map) {\n    this.listenerKeys_.push(\n      listen(map, MapEventType.MOVEEND, this.updateUrl_, this),\n      listen(map.getLayerGroup(), EventType.CHANGE, this.updateUrl_, this),\n      listen(map, 'change:layergroup', this.handleChangeLayerGroup_, this)\n    );\n\n    if (!this.replace_) {\n      addEventListener('popstate', this.updateState_);\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   * @private\n   */\n  unregisterListeners_(map) {\n    for (let i = 0, ii = this.listenerKeys_.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys_[i]);\n    }\n    this.listenerKeys_.length = 0;\n\n    if (!this.replace_) {\n      removeEventListener('popstate', this.updateState_);\n    }\n\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    this.delete_(params, 'x');\n    this.delete_(params, 'y');\n    this.delete_(params, 'z');\n    this.delete_(params, 'r');\n    this.delete_(params, 'l');\n    window.history.replaceState(null, '', url);\n  }\n\n  /**\n   * @private\n   */\n  handleChangeLayerGroup_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    this.unregisterListeners_(map);\n    this.registerListeners_(map);\n    this.initial_ = true;\n    this.updateUrl_();\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    for (const key in this.trackedCallbacks_) {\n      const value = params.get(key);\n      if (key in this.trackedCallbacks_ && value !== this.trackedValues_[key]) {\n        this.trackedValues_[key] = value;\n        this.trackedCallbacks_[key](value);\n      }\n    }\n\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    if (!view) {\n      return;\n    }\n\n    let updateView = false;\n\n    /**\n     * @type {import('../View.js').AnimationOptions}\n     */\n    const viewProperties = {};\n\n    const zoom = readNumber(this.get_(params, 'z'));\n    if ('z' in this.params_ && differentNumber(zoom, view.getZoom())) {\n      updateView = true;\n      viewProperties.zoom = zoom;\n    }\n\n    const rotation = readNumber(this.get_(params, 'r'));\n    if ('r' in this.params_ && differentNumber(rotation, view.getRotation())) {\n      updateView = true;\n      viewProperties.rotation = rotation;\n    }\n\n    const center = [\n      readNumber(this.get_(params, 'x')),\n      readNumber(this.get_(params, 'y')),\n    ];\n    if (\n      ('x' in this.params_ || 'y' in this.params_) &&\n      differentArray(center, view.getCenter())\n    ) {\n      updateView = true;\n      viewProperties.center = center;\n    }\n\n    if (updateView) {\n      if (!this.initial_ && this.animationOptions_) {\n        view.animate(Object.assign(viewProperties, this.animationOptions_));\n      } else {\n        if (viewProperties.center) {\n          view.setCenter(viewProperties.center);\n        }\n        if ('zoom' in viewProperties) {\n          view.setZoom(viewProperties.zoom);\n        }\n        if ('rotation' in viewProperties) {\n          view.setRotation(viewProperties.rotation);\n        }\n      }\n    }\n\n    const layers = map.getAllLayers();\n    const layersParam = this.get_(params, 'l');\n    if (\n      'l' in this.params_ &&\n      layersParam &&\n      layersParam.length === layers.length\n    ) {\n      for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const value = parseInt(layersParam[i]);\n        if (!isNaN(value)) {\n          const visible = Boolean(value);\n          const layer = layers[i];\n          if (layer.getVisible() !== visible) {\n            layer.setVisible(visible);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Register a listener for a URL search parameter.  The callback will be called with a new value\n   * when the corresponding search parameter changes due to history events (e.g. browser navigation).\n   *\n   * @param {string} key The URL search parameter.\n   * @param {Callback} callback The function to call when the search parameter changes.\n   * @return {string|null} The initial value of the search parameter (or null if absent from the URL).\n   * @api\n   */\n  track(key, callback) {\n    this.trackedCallbacks_[key] = callback;\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    const value = params.get(key);\n    this.trackedValues_[key] = value;\n    return value;\n  }\n\n  /**\n   * Update the URL with a new search parameter value.  If the value is null, it will be\n   * deleted from the search parameters.\n   *\n   * @param {string} key The URL search parameter.\n   * @param {string|null} value The updated value (or null to remove it from the URL).\n   * @api\n   */\n  update(key, value) {\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    if (value === null) {\n      params.delete(key);\n    } else {\n      params.set(key, value);\n    }\n    if (key in this.trackedValues_) {\n      this.trackedValues_[key] = value;\n    }\n    this.updateHistory_(url);\n  }\n\n  /**\n   * @private\n   */\n  updateUrl_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    if (!view) {\n      return;\n    }\n\n    const center = view.getCenter();\n    const zoom = view.getZoom();\n    const rotation = view.getRotation();\n\n    const layers = map.getAllLayers();\n    const visibilities = new Array(layers.length);\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      visibilities[i] = layers[i].getVisible() ? '1' : '0';\n    }\n\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n\n    this.set_(params, 'x', writeNumber(center[0]));\n    this.set_(params, 'y', writeNumber(center[1]));\n    this.set_(params, 'z', writeNumber(zoom));\n    this.set_(params, 'r', writeNumber(rotation));\n    this.set_(params, 'l', visibilities.join(''));\n\n    this.updateHistory_(url);\n    this.initial_ = false;\n  }\n\n  /**\n   * @private\n   * @param {URL} url The URL.\n   */\n  updateHistory_(url) {\n    if (url.href !== window.location.href) {\n      if (this.initial_ || this.replace_) {\n        window.history.replaceState(history.state, '', url);\n      } else {\n        window.history.pushState(null, '', url);\n      }\n    }\n  }\n}\n\nexport default Link;\n","/**\n * @module ol/interaction/Modify\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  altKeyOnly,\n  always,\n  primaryAction,\n  singleClick,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  buffer as bufferExtent,\n  createOrUpdateFromCoordinate as createExtent,\n} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  equals as coordinatesEqual,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {equals} from '../array.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\nconst tempExtent = [0, 0, 0, 0];\nconst tempSegment = [];\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend',\n};\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth] Depth.\n * @property {Feature} feature Feature.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} [index] Index.\n * @property {Array<Array<number>>} segment Segment.\n * @property {Array<SegmentData>} [featureSegments] FeatureSegments.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition.primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition.singleClick} with\n * {@link module:ol/events/condition.altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition.always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style used for the modification point or vertex. For linestrings and polygons, this will\n * be the affected vertex, for circles a point along the circle, and for points the actual\n * point. If not configured, the default edit style is used (see {@link module:ol/style/Style~Style}).\n * When using a style function, the point feature passed to the function will have a `features`\n * property - an array whose entries are the features that are being modified, and a `geometries`\n * property - an array whose entries are the geometries that are being modified. Both arrays are\n * in the same order. The `geometries` are only useful when modifying geometry collections, where\n * the geometry will be the particular geometry from the collection that is being modified.\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the `features` option.\n * @property {boolean|import(\"../layer/BaseVector\").default} [hitDetection] When configured, point\n * features will be considered for modification based on their visual appearance, instead of being within\n * the `pixelTolerance` from the pointer location. When a {@link module:ol/layer/BaseVector~BaseVectorLayer} is\n * provided, only the rendered representation of the features on that layer will be considered.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the `source` option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {boolean} [snapToPointer=!hitDetection] The vertex, point or segment being modified snaps to the\n * pointer coordinate when clicked within the `pixelTolerance`.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport class ModifyEvent extends Event {\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {Collection<Feature>} features\n   * The features modified.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent\n   * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, features, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'modifyend'|'modifystart', ModifyEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'modifyend'|'modifystart', Return>} ModifyOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * Cartesian distance from the pointer is used to determine the features that\n * will be modified. This means that geometries will only be considered for\n * modification when they are within the configured `pixelTolerance`. For point\n * geometries, the `hitDetection` option can be used to match their visual\n * appearance.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nclass Modify extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ModifyOnSignature<void>}\n     */\n    this.un;\n\n    /** @private */\n    this.boundHandleFeatureChange_ = this.handleFeatureChange_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition\n      ? options.deleteCondition\n      : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition\n      ? options.insertVertexCondition\n      : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.featuresBeingModified_ = null;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n    };\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    /**\n     * @type {boolean|import(\"../layer/BaseVector\").default}\n     */\n    this.hitDetection_ = null;\n\n    /** @type {Collection<Feature>} */\n    let features;\n    if (options.features) {\n      features = options.features;\n    } else if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      this.source_.addEventListener(\n        VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_.bind(this)\n      );\n      this.source_.addEventListener(\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_.bind(this)\n      );\n    }\n    if (!features) {\n      throw new Error(\n        'The modify interaction requires features, a source or a layer'\n      );\n    }\n    if (options.hitDetection) {\n      this.hitDetection_ = options.hitDetection;\n    }\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    this.features_.addEventListener(\n      CollectionEventType.ADD,\n      this.handleFeatureAdd_.bind(this)\n    );\n    this.features_.addEventListener(\n      CollectionEventType.REMOVE,\n      this.handleFeatureRemove_.bind(this)\n    );\n\n    /**\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n    /**\n     * Delta (x, y in map units) between matched rtree vertex and pointer vertex.\n     * @type {Array<number>}\n     */\n    this.delta_ = [0, 0];\n\n    /**\n     * @private\n     */\n    this.snapToPointer_ =\n      options.snapToPointer === undefined\n        ? !this.hitDetection_\n        : options.snapToPointer;\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  addFeature_(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (writer) {\n        writer(feature, geometry);\n      }\n    }\n    const map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @param {Array<Array<SegmentData>>} segments The segments subject to modification.\n   * @private\n   */\n  willModifyFeatures_(evt, segments) {\n    if (!this.featuresBeingModified_) {\n      this.featuresBeingModified_ = new Collection();\n      const features = this.featuresBeingModified_.getArray();\n      for (let i = 0, ii = segments.length; i < ii; ++i) {\n        const segment = segments[i];\n        for (let s = 0, ss = segment.length; s < ss; ++s) {\n          const feature = segment[s].feature;\n          if (feature && !features.includes(feature)) {\n            this.featuresBeingModified_.push(feature);\n          }\n        }\n      }\n      if (this.featuresBeingModified_.getLength() === 0) {\n        this.featuresBeingModified_ = null;\n      } else {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYSTART,\n            this.featuresBeingModified_,\n            evt\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeature_(feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of candidate features is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    feature.removeEventListener(\n      EventType.CHANGE,\n      this.boundHandleFeatureChange_\n    );\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureSegmentData_(feature) {\n    const rBush = this.rBush_;\n    /** @type {Array<SegmentData>} */\n    const nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      }\n    );\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      const nodeToRemove = nodesToRemove[i];\n      for (let j = this.dragSegments_.length - 1; j >= 0; --j) {\n        if (this.dragSegments_[j][0] === nodeToRemove) {\n          this.dragSegments_.splice(j, 1);\n        }\n      }\n      rBush.remove(nodeToRemove);\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.overlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders the modification point or vertex to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceAdd_(event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceRemove_(event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    this.addFeature_(evt.element);\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    if (!this.changingFeature_) {\n      const feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    this.removeFeature_(evt.element);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n\n    /** @type {SegmentData} */\n    const segmentData = {\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates],\n    };\n\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates],\n      };\n\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment,\n      };\n\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n\n          /** @type {SegmentData} */\n          const segmentData = {\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment,\n          };\n\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const coordinates = geometry.getCenter();\n\n    /** @type {SegmentData} */\n    const centerSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    /** @type {SegmentData} */\n    const circumferenceSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = featureSegments;\n    circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n    let circleGeometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection && this.getMap()) {\n      const projection = this.getMap().getView().getProjection();\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n      circleGeometry = fromCircle(\n        /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n      ).transform(projection, userProjection);\n    }\n    this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const geometry = geometries[i];\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      writer(feature, geometry);\n    }\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {Array<Feature>} features The features being modified.\n   * @param {Array<import(\"../geom/SimpleGeometry.js\").default>} geometries The geometries being modified.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  createOrUpdateVertexFeature_(coordinates, features, geometries) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(coordinates);\n    }\n    vertexFeature.set('features', features);\n    vertexFeature.set('geometries', geometries);\n    return vertexFeature;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may modify the geometry.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    let handled;\n    if (\n      !mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (\n        mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_\n      ) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return super.handleEvent(mapBrowserEvent) && !handled;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   */\n  handleDragEvent(evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt, this.dragSegments_);\n\n    const vertex = [\n      evt.coordinate[0] + this.delta_[0],\n      evt.coordinate[1] + this.delta_[1],\n    ];\n    const features = [];\n    const geometries = [];\n    for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      const dragSegment = this.dragSegments_[i];\n      const segmentData = dragSegment[0];\n      const feature = segmentData.feature;\n      if (!features.includes(feature)) {\n        features.push(feature);\n      }\n      const geometry = segmentData.geometry;\n      if (!geometries.includes(geometry)) {\n        geometries.push(geometry);\n      }\n      const depth = segmentData.depth;\n      let coordinates;\n      const segment = segmentData.segment;\n      const index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case 'Point':\n          coordinates = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'MultiPoint':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'LineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiLineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Polygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiPolygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Circle':\n          segment[0] = vertex;\n          segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else {\n            // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            const projection = evt.map.getView().getProjection();\n            let radius = coordinateDistance(\n              fromUserCoordinate(geometry.getCenter(), projection),\n              fromUserCoordinate(vertex, projection)\n            );\n            const userProjection = getUserProjection();\n            if (userProjection) {\n              const circleGeometry = geometry\n                .clone()\n                .transform(userProjection, projection);\n              circleGeometry.setRadius(radius);\n              radius = circleGeometry\n                .transform(projection, userProjection)\n                .getRadius();\n            }\n            geometry.setRadius(radius);\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex, features, geometries);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    const pixelCoordinate = evt.coordinate;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, pixelCoordinate);\n    this.dragSegments_.length = 0;\n    this.featuresBeingModified_ = null;\n    const vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      const projection = evt.map.getView().getProjection();\n      const insertVertices = [];\n      const vertex = vertexFeature.getGeometry().getCoordinates();\n      const vertexExtent = boundingExtent([vertex]);\n      const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      const componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        const segmentDataMatch = segmentDataMatches[i];\n        const segment = segmentDataMatch.segment;\n        let uid = getUid(segmentDataMatch.geometry);\n        const depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n\n        if (\n          segmentDataMatch.geometry.getType() === 'Circle' &&\n          segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          const closestVertex = closestOnSegmentData(\n            pixelCoordinate,\n            segmentDataMatch,\n            projection\n          );\n          if (\n            coordinatesEqual(closestVertex, vertex) &&\n            !componentSegments[uid][0]\n          ) {\n            this.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]\n        ) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]\n        ) {\n          if (\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0\n          ) {\n            let coordinates = segmentDataMatch.geometry.getCoordinates();\n            switch (segmentDataMatch.geometry.getType()) {\n              // prevent dragging closed linestrings by the connecting node\n              case 'LineString':\n              case 'MultiLineString':\n                continue;\n              // if dragging the first vertex of a polygon, ensure the other segment\n              // belongs to the closing vertex of the linear ring\n              case 'MultiPolygon':\n                coordinates = coordinates[depth[1]];\n              /* falls through */\n              case 'Polygon':\n                if (\n                  segmentDataMatch.index !==\n                  coordinates[depth[0]].length - 2\n                ) {\n                  continue;\n                }\n                break;\n              default:\n              // pass\n            }\n          }\n\n          this.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          getUid(segment) in this.vertexSegments_ &&\n          !componentSegments[uid][0] &&\n          !componentSegments[uid][1] &&\n          this.insertVertexCondition_(evt)\n        ) {\n          insertVertices.push(segmentDataMatch);\n        }\n      }\n\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt, [insertVertices]);\n      }\n\n      for (let j = insertVertices.length - 1; j >= 0; --j) {\n        this.insertVertex_(insertVertices[j], vertex);\n      }\n    }\n    return !!this.vertexFeature_;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n      const segmentData = this.dragSegments_[i][0];\n      const geometry = segmentData.geometry;\n      if (geometry.getType() === 'Circle') {\n        // Update a circle object in the R* bush:\n        const coordinates = geometry.getCenter();\n        const centerSegmentData = segmentData.featureSegments[0];\n        const circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = coordinates;\n        centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = coordinates;\n        circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createExtent(coordinates), centerSegmentData);\n        let circleGeometry = geometry;\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          const projection = evt.map.getView().getProjection();\n          circleGeometry = circleGeometry\n            .clone()\n            .transform(userProjection, projection);\n          circleGeometry = fromCircle(circleGeometry).transform(\n            projection,\n            userProjection\n          );\n        }\n        this.rBush_.update(\n          circleGeometry.getExtent(),\n          circumferenceSegmentData\n        );\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.featuresBeingModified_) {\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYEND,\n          this.featuresBeingModified_,\n          evt\n        )\n      );\n      this.featuresBeingModified_ = null;\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  handlePointerMove_(evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, evt.coordinate);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../Map.js\").default} map Map.\n   * @param {import(\"../coordinate.js\").Coordinate} [coordinate] The pixel Coordinate.\n   * @private\n   */\n  handlePointerAtPixel_(pixel, map, coordinate) {\n    const pixelCoordinate = coordinate || map.getCoordinateFromPixel(pixel);\n    const projection = map.getView().getProjection();\n    const sortByDistance = function (a, b) {\n      return (\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection)\n      );\n    };\n\n    /** @type {Array<SegmentData>|undefined} */\n    let nodes;\n    /** @type {Point|undefined} */\n    let hitPointGeometry;\n    if (this.hitDetection_) {\n      const layerFilter =\n        typeof this.hitDetection_ === 'object'\n          ? (layer) => layer === this.hitDetection_\n          : undefined;\n      map.forEachFeatureAtPixel(\n        pixel,\n        (feature, layer, geometry) => {\n          if (geometry && geometry.getType() === 'Point') {\n            geometry = new Point(\n              toUserCoordinate(geometry.getCoordinates(), projection)\n            );\n          }\n          const geom = geometry || feature.getGeometry();\n          if (\n            feature instanceof Feature &&\n            this.features_.getArray().includes(feature)\n          ) {\n            hitPointGeometry = /** @type {Point} */ (geom);\n            const coordinate = /** @type {Point} */ (feature.getGeometry())\n              .getFlatCoordinates()\n              .slice(0, 2);\n            nodes = [\n              {\n                feature,\n                geometry: hitPointGeometry,\n                segment: [coordinate, coordinate],\n              },\n            ];\n          }\n          return true;\n        },\n        {layerFilter}\n      );\n    }\n    if (!nodes) {\n      const viewExtent = fromUserExtent(\n        createExtent(pixelCoordinate, tempExtent),\n        projection\n      );\n      const buffer = map.getView().getResolution() * this.pixelTolerance_;\n      const box = toUserExtent(\n        bufferExtent(viewExtent, buffer, tempExtent),\n        projection\n      );\n      nodes = this.rBush_.getInExtent(box);\n    }\n\n    if (nodes && nodes.length > 0) {\n      const node = nodes.sort(sortByDistance)[0];\n      const closestSegment = node.segment;\n      let vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n      let dist = coordinateDistance(pixel, vertexPixel);\n      if (hitPointGeometry || dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        const vertexSegments = {};\n        vertexSegments[getUid(closestSegment)] = true;\n\n        if (!this.snapToPointer_) {\n          this.delta_[0] = vertex[0] - pixelCoordinate[0];\n          this.delta_[1] = vertex[1] - pixelCoordinate[1];\n        }\n        if (\n          node.geometry.getType() === 'Circle' &&\n          node.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n        } else {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex =\n              squaredDist1 > squaredDist2\n                ? closestSegment[1]\n                : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n          const geometries = {};\n          geometries[getUid(node.geometry)] = true;\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\n            const segment = nodes[i].segment;\n            if (\n              (coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1])) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0]))\n            ) {\n              const geometryUid = getUid(nodes[i].geometry);\n              if (!(geometryUid in geometries)) {\n                geometries[geometryUid] = true;\n                vertexSegments[getUid(segment)] = true;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  }\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  insertVertex_(segmentData, vertex) {\n    const segment = segmentData.segment;\n    const feature = segmentData.feature;\n    const geometry = segmentData.geometry;\n    const depth = segmentData.depth;\n    const index = segmentData.index;\n    let coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case 'MultiLineString':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'Polygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'MultiPolygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'LineString':\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    const rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n\n    /** @type {SegmentData} */\n    const newSegmentData = {\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    /** @type {SegmentData} */\n    const newSegmentData2 = {\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  }\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  removePoint() {\n    if (\n      this.lastPointerEvent_ &&\n      this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG\n    ) {\n      const evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt, this.dragSegments_);\n      const removed = this.removeVertex_();\n      if (this.featuresBeingModified_) {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYEND,\n            this.featuresBeingModified_,\n            evt\n          )\n        );\n      }\n\n      this.featuresBeingModified_ = null;\n      return removed;\n    }\n    return false;\n  }\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  removeVertex_() {\n    const dragSegments = this.dragSegments_;\n    const segmentsByFeature = {};\n    let deleted = false;\n    let component, coordinates, dragSegment, geometry, i, index, left;\n    let newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case 'MultiLineString':\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'LineString':\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'MultiPolygon':\n          component = component[segmentData.depth[1]];\n        /* falls through */\n        case 'Polygon':\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        const segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          /** @type {SegmentData} */\n          const newSegmentData = {\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments,\n          };\n\n          this.rBush_.insert(\n            boundingExtent(newSegmentData.segment),\n            newSegmentData\n          );\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n    }\n    return deleted;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  setGeometryCoordinates_(geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  updateSegmentIndices_(geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(\n      geometry.getExtent(),\n      function (segmentDataMatch) {\n        if (\n          segmentDataMatch.geometry === geometry &&\n          (depth === undefined ||\n            segmentDataMatch.depth === undefined ||\n            equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index\n        ) {\n          segmentDataMatch.index += delta;\n        }\n      }\n    );\n  }\n}\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction projectedDistanceToSegmentDataSquared(\n  pointCoordinates,\n  segmentData,\n  projection\n) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === 'Circle') {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n          circleGeometry.clone().transform(userProjection, projection)\n        );\n      }\n      const distanceToCenterSquared = squaredCoordinateDistance(\n        circleGeometry.getCenter(),\n        fromUserCoordinate(pointCoordinates, projection)\n      );\n      const distanceToCircumference =\n        Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return squaredDistanceToSegment(coordinate, tempSegment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n  const geometry = segmentData.geometry;\n\n  if (\n    geometry.getType() === 'Circle' &&\n    segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX\n  ) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n        circleGeometry.clone().transform(userProjection, projection)\n      );\n    }\n    return toUserCoordinate(\n      circleGeometry.getClosestPoint(\n        fromUserCoordinate(pointCoordinates, projection)\n      ),\n      projection\n    );\n  }\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return toUserCoordinate(\n    closestOnSegment(coordinate, tempSegment),\n    projection\n  );\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n\nexport default Modify;\n","/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport Interaction from './Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {TRUE} from '../functions.js';\nimport {clear} from '../obj.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {never, shiftKeyOnly, singleClick} from '../events/condition.js';\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").default, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style/Style~Style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {Collection<Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature~Feature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nexport class SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nconst originalFeatureStyles = {};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'select', Return>} SelectOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * @fires SelectEvent\n * @api\n */\nclass Select extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SelectOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     */\n    this.boundAddFeature_ = this.addFeature_.bind(this);\n\n    /**\n     * @private\n     */\n    this.boundRemoveFeature_ = this.removeFeature_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition\n      ? options.removeCondition\n      : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition\n      ? options.toggleCondition\n      : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n    this.style_ =\n      options.style !== undefined ? options.style : getDefaultStyleFunction();\n\n    /**\n     * @private\n     * @type {Collection<Feature>}\n     */\n    this.features_ = options.features || new Collection();\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  addFeatureLayerAssociation_(feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  }\n\n  /**\n   * Get the selected features.\n   * @return {Collection<Feature>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~VectorLayer vector layer} of\n   * a selected feature.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n  getLayer(feature) {\n    return /** @type {import('../layer/Vector.js').default} */ (\n      this.featureLayerAssociation_[getUid(feature)]\n    );\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n    super.setMap(map);\n    if (map) {\n      this.features_.addEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.addEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.removeEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n    if (!this.getLayer(feature)) {\n      const layer = /** @type {VectorLayer} */ (\n        this.getMap()\n          .getAllLayers()\n          .find(function (layer) {\n            if (\n              layer instanceof VectorLayer &&\n              layer.getSource() &&\n              layer.getSource().hasFeature(feature)\n            ) {\n              return layer;\n            }\n          })\n      );\n      if (layer) {\n        this.addFeatureLayerAssociation_(feature, layer);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    if (this.style_) {\n      this.restorePreviousStyle_(evt.element);\n    }\n  }\n\n  /**\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  applySelectedStyle_(feature) {\n    const key = getUid(feature);\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n    feature.setStyle(this.style_);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  restorePreviousStyle_(feature) {\n    const interactions = this.getMap().getInteractions().getArray();\n    for (let i = interactions.length - 1; i >= 0; --i) {\n      const interaction = interactions[i];\n      if (\n        interaction !== this &&\n        interaction instanceof Select &&\n        interaction.getStyle() &&\n        interaction.getFeatures().getArray().lastIndexOf(feature) !== -1\n      ) {\n        feature.setStyle(interaction.getStyle());\n        return;\n      }\n    }\n\n    const key = getUid(feature);\n    feature.setStyle(originalFeatureStyles[key]);\n    delete originalFeatureStyles[key];\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureLayerAssociation_(feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may change the\n   * selected state of features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const add = this.addCondition_(mapBrowserEvent);\n    const remove = this.removeCondition_(mapBrowserEvent);\n    const toggle = this.toggleCondition_(mapBrowserEvent);\n    const set = !add && !remove && !toggle;\n    const map = mapBrowserEvent.map;\n    const features = this.getFeatures();\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const deselected = [];\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const selected = [];\n\n    if (set) {\n      // Replace the currently selected feature(s) with the feature(s) at the\n      // pixel, or clear the selected feature(s) if there is no feature at\n      // the pixel.\n      clear(this.featureLayerAssociation_);\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        (feature, layer) => {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          this.addFeatureLayerAssociation_(feature, layer);\n          selected.push(feature);\n          return !this.multi_;\n        },\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let i = features.getLength() - 1; i >= 0; --i) {\n        const feature = features.item(i);\n        const index = selected.indexOf(feature);\n        if (index > -1) {\n          // feature is already selected\n          selected.splice(index, 1);\n        } else {\n          features.remove(feature);\n          deselected.push(feature);\n        }\n      }\n      if (selected.length !== 0) {\n        features.extend(selected);\n      }\n    } else {\n      // Modify the currently selected feature(s).\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        (feature, layer) => {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          if ((add || toggle) && !features.getArray().includes(feature)) {\n            this.addFeatureLayerAssociation_(feature, layer);\n            selected.push(feature);\n          } else if (\n            (remove || toggle) &&\n            features.getArray().includes(feature)\n          ) {\n            deselected.push(feature);\n            this.removeFeatureLayerAssociation_(feature);\n          }\n          return !this.multi_;\n        },\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let j = deselected.length - 1; j >= 0; --j) {\n        features.remove(deselected[j]);\n      }\n      features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n      this.dispatchEvent(\n        new SelectEvent(\n          SelectEventType.SELECT,\n          selected,\n          deselected,\n          mapBrowserEvent\n        )\n      );\n    }\n    return true;\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles['Polygon'], styles['LineString']);\n  extend(styles['GeometryCollection'], styles['LineString']);\n\n  return function (feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\nexport default Select;\n","/**\n * @module ol/events/SnapEvent\n */\nimport Event from './Event.js';\n\n/**\n * @enum {string}\n */\nexport const SnapEventType = {\n  /**\n   * Triggered upon snapping to vertex or edge\n   * @event SnapEvent#snap\n   * @api\n   */\n  SNAP: 'snap',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Snap~Snap} instances are instances of this\n */\nexport class SnapEvent extends Event {\n  /**\n   * @param {SnapEventType} type Type.\n   * @param {Object} options Options.\n   * @param {import(\"../coordinate.js\").Coordinate} options.vertex The snapped vertex.\n   * @param {import(\"../coordinate.js\").Coordinate} options.vertexPixel The pixel of the snapped vertex.\n   * @param {import(\"../Feature.js\").default} options.feature The feature being snapped.\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|null} options.segment Segment, or `null` if snapped to a vertex.\n   */\n  constructor(type, options) {\n    super(type);\n    /**\n     * The Map coordinate of the snapped point.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.vertex = options.vertex;\n    /**\n     * The Map pixel of the snapped point.\n     * @type {Array<number>&Array<number>}\n     * @api\n     */\n    this.vertexPixel = options.vertexPixel;\n    /**\n     * The feature closest to the snapped point.\n     * @type {import(\"../Feature.js\").default<import(\"../geom/Geometry.js\").default>}\n     * @api\n     */\n    this.feature = options.feature;\n    /**\n     * The segment closest to the snapped point, if snapped to a segment.\n     * @type {Array<import(\"../coordinate.js\").Coordinate>|null}\n     * @api\n     */\n    this.segment = options.segment;\n  }\n}\n","/**\n * @module ol/interaction/Snap\n */\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {SnapEvent, SnapEventType} from '../events/SnapEvent.js';\nimport {boundingExtent, buffer, createEmpty} from '../extent.js';\nimport {\n  closestOnCircle,\n  closestOnSegment,\n  squaredDistance,\n} from '../coordinate.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Result\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex Vertex.\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel VertexPixel.\n * @property {import(\"../Feature.js\").default|null} feature Feature.\n * @property {Array<import(\"../coordinate.js\").Coordinate>|null} segment Segment, or `null` if snapped to a vertex.\n */\n\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature Feature.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment Segment.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n * @return {import(\"../Feature.js\").default|null} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n  if (\n    /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature\n  ) {\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt)\n      .feature;\n  }\n  if (\n    /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element\n  ) {\n    return /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element;\n  }\n  return null;\n}\n\nconst tempSegment = [];\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'snap', SnapEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'snap', Return>} SnapOnSignature\n */\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector~VectorSource} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap.js';\n *\n *     const snap = new Snap({\n *       source: source\n *     });\n *\n *     map.addInteraction(snap);\n *\n * @fires SnapEvent\n * @api\n */\nclass Snap extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.handleDownEvent) {\n      pointerOptions.handleDownEvent = TRUE;\n    }\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {SnapOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SnapOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SnapOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {import(\"../source/Vector.js\").default|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<string, import(\"../extent.js\").Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Segment RTree for each layer\n     * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @const\n     * @private\n     * @type {Object<string, function(Array<Array<import('../coordinate.js').Coordinate>>, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.GEOMETRY_SEGMENTERS_ = {\n      'Point': this.segmentPointGeometry_.bind(this),\n      'LineString': this.segmentLineStringGeometry_.bind(this),\n      'LinearRing': this.segmentLineStringGeometry_.bind(this),\n      'Polygon': this.segmentPolygonGeometry_.bind(this),\n      'MultiPoint': this.segmentMultiPointGeometry_.bind(this),\n      'MultiLineString': this.segmentMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.segmentMultiPolygonGeometry_.bind(this),\n      'GeometryCollection': this.segmentGeometryCollectionGeometry_.bind(this),\n      'Circle': this.segmentCircleGeometry_.bind(this),\n    };\n  }\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {boolean} [register] Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  addFeature(feature, register) {\n    register = register !== undefined ? register : true;\n    const feature_uid = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const segmenter = this.GEOMETRY_SEGMENTERS_[geometry.getType()];\n      if (segmenter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(\n          createEmpty()\n        );\n        const segments =\n          /** @type {Array<Array<import('../coordinate.js').Coordinate>>} */ ([]);\n        segmenter(segments, geometry);\n        if (segments.length === 1) {\n          this.rBush_.insert(boundingExtent(segments[0]), {\n            feature: feature,\n            segment: segments[0],\n          });\n        } else if (segments.length > 1) {\n          const extents = segments.map((s) => boundingExtent(s));\n          const segmentsData = segments.map((segment) => ({\n            feature: feature,\n            segment: segment,\n          }));\n          this.rBush_.load(extents, segmentsData);\n        }\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_,\n        this\n      );\n    }\n  }\n\n  /**\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  getFeatures_() {\n    /** @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} */\n    let features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return features;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(evt) {\n    const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n    if (result) {\n      evt.coordinate = result.vertex.slice(0, 2);\n      evt.pixel = result.vertexPixel;\n      this.dispatchEvent(\n        new SnapEvent(SnapEventType.SNAP, {\n          vertex: evt.coordinate,\n          vertexPixel: evt.pixel,\n          feature: result.feature,\n          segment: result.segment,\n        })\n      );\n    }\n    return super.handleEvent(evt);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    if (feature) {\n      this.addFeature(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    if (feature) {\n      this.removeFeature(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    const feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      const uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    const featuresToUpdate = Object.values(this.pendingFeatures_);\n    if (featuresToUpdate.length) {\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\n      this.pendingFeatures_ = {};\n    }\n    return false;\n  }\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {boolean} [unlisten] Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  removeFeature(feature, unlisten) {\n    const unregister = unlisten !== undefined ? unlisten : true;\n    const feature_uid = getUid(feature);\n    const extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      const rBush = this.rBush_;\n      const nodesToRemove = [];\n      rBush.forEachInExtent(extent, function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    const keys = this.featuresListenerKeys_;\n    const features = /** @type {Array<import(\"../Feature.js\").default>} */ (\n      this.getFeatures_()\n    );\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      this.rBush_.clear();\n      Object.values(this.featureChangeListenerKeys_).forEach(unlistenByKey);\n      this.featureChangeListenerKeys_ = {};\n    }\n    super.setMap(map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(\n            this.features_,\n            CollectionEventType.ADD,\n            this.handleFeatureAdd_,\n            this\n          ),\n          listen(\n            this.features_,\n            CollectionEventType.REMOVE,\n            this.handleFeatureRemove_,\n            this\n          )\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(\n            this.source_,\n            VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_,\n            this\n          ),\n          listen(\n            this.source_,\n            VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_,\n            this\n          )\n        );\n      }\n      features.forEach((feature) => this.addFeature(feature));\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n   * @param {import(\"../Map.js\").default} map Map.\n   * @return {Result|null} Snap result\n   */\n  snapTo(pixel, pixelCoordinate, map) {\n    const projection = map.getView().getProjection();\n    const projectedCoordinate = fromUserCoordinate(pixelCoordinate, projection);\n\n    const box = toUserExtent(\n      buffer(\n        boundingExtent([projectedCoordinate]),\n        map.getView().getResolution() * this.pixelTolerance_\n      ),\n      projection\n    );\n\n    const segments = this.rBush_.getInExtent(box);\n    const segmentsLength = segments.length;\n    if (segmentsLength === 0) {\n      return null;\n    }\n\n    let closestVertex;\n    let minSquaredDistance = Infinity;\n    let closestFeature;\n    let closestSegment = null;\n\n    const squaredPixelTolerance = this.pixelTolerance_ * this.pixelTolerance_;\n    const getResult = () => {\n      if (closestVertex) {\n        const vertexPixel = map.getPixelFromCoordinate(closestVertex);\n        const squaredPixelDistance = squaredDistance(pixel, vertexPixel);\n        if (squaredPixelDistance <= squaredPixelTolerance) {\n          return {\n            vertex: closestVertex,\n            vertexPixel: [\n              Math.round(vertexPixel[0]),\n              Math.round(vertexPixel[1]),\n            ],\n            feature: closestFeature,\n            segment: closestSegment,\n          };\n        }\n      }\n      return null;\n    };\n\n    if (this.vertex_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() !== 'Circle') {\n          segmentData.segment.forEach((vertex) => {\n            const tempVertexCoord = fromUserCoordinate(vertex, projection);\n            const delta = squaredDistance(projectedCoordinate, tempVertexCoord);\n            if (delta < minSquaredDistance) {\n              closestVertex = vertex;\n              minSquaredDistance = delta;\n              closestFeature = segmentData.feature;\n            }\n          });\n        }\n      }\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    if (this.edge_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        let vertex = null;\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() === 'Circle') {\n          let circleGeometry = segmentData.feature.getGeometry();\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circleGeometry = circleGeometry\n              .clone()\n              .transform(userProjection, projection);\n          }\n          vertex = closestOnCircle(\n            projectedCoordinate,\n            /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n          );\n        } else {\n          const [segmentStart, segmentEnd] = segmentData.segment;\n          // points have only one coordinate\n          if (segmentEnd) {\n            tempSegment[0] = fromUserCoordinate(segmentStart, projection);\n            tempSegment[1] = fromUserCoordinate(segmentEnd, projection);\n            vertex = closestOnSegment(projectedCoordinate, tempSegment);\n          }\n        }\n        if (vertex) {\n          const delta = squaredDistance(projectedCoordinate, vertex);\n          if (delta < minSquaredDistance) {\n            closestVertex = toUserCoordinate(vertex, projection);\n            closestSegment =\n              segmentData.feature.getGeometry().getType() === 'Circle'\n                ? null\n                : segmentData.segment;\n            minSquaredDistance = delta;\n          }\n        }\n      }\n\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  updateFeature_(feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentCircleGeometry_(segments, geometry) {\n    const projection = this.getMap().getView().getProjection();\n    let circleGeometry = geometry;\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n        circleGeometry.clone().transform(userProjection, projection)\n      );\n    }\n    const polygon = fromCircle(circleGeometry);\n    if (userProjection) {\n      polygon.transform(projection, userProjection);\n    }\n    const coordinates = polygon.getCoordinates()[0];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segments.push(coordinates.slice(i, i + 2));\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentGeometryCollectionGeometry_(segments, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const segmenter = this.GEOMETRY_SEGMENTERS_[geometries[i].getType()];\n      if (segmenter) {\n        segmenter(segments, geometries[i]);\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentLineStringGeometry_(segments, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segments.push(coordinates.slice(i, i + 2));\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiLineStringGeometry_(segments, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segments.push(coordinates.slice(i, i + 2));\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiPointGeometry_(segments, geometry) {\n    geometry.getCoordinates().forEach((point) => {\n      segments.push([point]);\n    });\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiPolygonGeometry_(segments, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          segments.push(coordinates.slice(i, i + 2));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentPointGeometry_(segments, geometry) {\n    segments.push([geometry.getCoordinates()]);\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentPolygonGeometry_(segments, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segments.push(coordinates.slice(i, i + 2));\n      }\n    }\n  }\n}\n\nexport default Snap;\n","/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport InteractionProperty from './Property.js';\nimport PointerInteraction from './Pointer.js';\nimport {TRUE} from '../functions.js';\nimport {always} from '../events/condition.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\n\n/**\n * @enum {string}\n */\nconst TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @typedef {function(Feature, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {Collection<Feature>} [features] Features contained in this collection will be able to be translated together.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * Not used if `features` is provided.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature~Feature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * translated or `false` otherwise. Not used if `features` is provided.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nexport class TranslateEvent extends Event {\n  /**\n   * @param {TranslateEventType} type Type.\n   * @param {Collection<Feature>} features The features translated.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} startCoordinate The original coordinates before.translation started\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   */\n  constructor(type, features, coordinate, startCoordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being translated.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * The coordinate of the start position before translation started.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.startCoordinate = startCoordinate;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'translateend'|'translatestart'|'translating', TranslateEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'translateend'|'translatestart'|'translating', Return>} TranslateOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n * If you want to translate multiple features in a single action (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.\n *\n * @fires TranslateEvent\n * @api\n */\nclass Translate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {TranslateOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TranslateOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TranslateOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * The last position we translated to.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = null;\n\n    /**\n     * The start position before translation started.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.startCoordinate_ = null;\n\n    /**\n     * @type {Collection<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features !== undefined ? options.features : null;\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers && !this.features_) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter && !this.features_ ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @type {Feature}\n     * @private\n     */\n    this.lastFeature_ = null;\n\n    this.addChangeListener(\n      InteractionProperty.ACTIVE,\n      this.handleActiveChanged_\n    );\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    if (!event.originalEvent || !this.condition_(event)) {\n      return false;\n    }\n    this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n    if (!this.lastCoordinate_ && this.lastFeature_) {\n      this.startCoordinate_ = event.coordinate;\n      this.lastCoordinate_ = event.coordinate;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATESTART,\n          features,\n          event.coordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    if (this.lastCoordinate_) {\n      this.lastCoordinate_ = null;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATEEND,\n          features,\n          event.coordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n      // cleanup\n      this.startCoordinate_ = null;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  handleDragEvent(event) {\n    if (this.lastCoordinate_) {\n      const newCoordinate = event.coordinate;\n      const projection = event.map.getView().getProjection();\n\n      const newViewCoordinate = fromUserCoordinate(newCoordinate, projection);\n      const lastViewCoordinate = fromUserCoordinate(\n        this.lastCoordinate_,\n        projection\n      );\n      const deltaX = newViewCoordinate[0] - lastViewCoordinate[0];\n      const deltaY = newViewCoordinate[1] - lastViewCoordinate[1];\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n      const userProjection = getUserProjection();\n\n      features.forEach(function (feature) {\n        const geom = feature.getGeometry();\n        if (userProjection) {\n          geom.transform(userProjection, projection);\n          geom.translate(deltaX, deltaY);\n          geom.transform(projection, userProjection);\n        } else {\n          geom.translate(deltaX, deltaY);\n        }\n        feature.setGeometry(geom);\n      });\n\n      this.lastCoordinate_ = newCoordinate;\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATING,\n          features,\n          newCoordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n    }\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  handleMoveEvent(event) {\n    const elem = event.map.getViewport();\n\n    // Change the cursor to grab/grabbing if hovering any of the features managed\n    // by the interaction\n    if (this.featuresAtPixel_(event.pixel, event.map)) {\n      elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n      elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n    } else {\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {import(\"../Map.js\").default} map Map to test the intersection on.\n   * @return {Feature} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  featuresAtPixel_(pixel, map) {\n    return map.forEachFeatureAtPixel(\n      pixel,\n      (feature, layer) => {\n        if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n          return undefined;\n        }\n        if (this.features_ && !this.features_.getArray().includes(feature)) {\n          return undefined;\n        }\n        return feature;\n      },\n      {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_,\n      }\n    );\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    this.updateState_(oldMap);\n  }\n\n  /**\n   * @private\n   */\n  handleActiveChanged_() {\n    this.updateState_(null);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} oldMap Old map.\n   * @private\n   */\n  updateState_(oldMap) {\n    let map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        const elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  }\n}\n\nexport default Translate;\n","/**\n * @module ol/geom/flat/flip\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destOffset] Destination offset.\n * @return {Array<number>} Flat coordinates.\n */\nexport function flipXY(flatCoordinates, offset, end, stride, dest, destOffset) {\n  if (dest !== undefined) {\n    dest = dest;\n    destOffset = destOffset !== undefined ? destOffset : 0;\n  } else {\n    dest = [];\n    destOffset = 0;\n  }\n  let j = offset;\n  while (j < end) {\n    const x = flatCoordinates[j++];\n    dest[destOffset++] = flatCoordinates[j++];\n    dest[destOffset++] = x;\n    for (let k = 2; k < stride; ++k) {\n      dest[destOffset++] = flatCoordinates[j++];\n    }\n  }\n  dest.length = destOffset;\n  return dest;\n}\n","/**\n * @module ol/format/Feature\n */\nimport Feature from '../Feature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  GeometryCollection,\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n  transformExtent,\n} from '../proj.js';\nimport {\n  linearRingsAreOriented,\n  linearRingssAreOriented,\n  orientLinearRings,\n  orientLinearRingsArray,\n} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @typedef {Object} SimpleGeometryObject\n * @property {import('../geom/Geometry.js').Type} type Type.\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>|Array<Array<number>>} [ends] Ends or endss.\n * @property {import('../geom/Geometry.js').GeometryLayout} [layout] Layout.\n */\n\n/**\n * @typedef {Array<GeometryObject>} GeometryCollectionObject\n */\n\n/**\n * @typedef {SimpleGeometryObject|GeometryCollectionObject} GeometryObject\n */\n\n/**\n * @typedef {Object} FeatureObject\n * @property {string|number} [id] Id.\n * @property {GeometryObject} [geometry] Geometry.\n * @property {Object<string, *>} [properties] Properties.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass = Feature;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n        featureClass: this.featureClass,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|Array<import(\"../render/Feature.js\").default>} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @template {import(\"../geom/Geometry.js\").default|RenderFeature} T\n * @param {T} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {T} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed = geometry;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    if (write) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    const fromProjection = write ? featureProjection : dataProjection;\n    const toProjection = write ? dataProjection : featureProjection;\n    if (fromProjection.getUnits() === 'tile-pixels') {\n      transformed.transform(fromProjection, toProjection);\n    } else {\n      transformed.applyTransform(getTransform(fromProjection, toProjection));\n    }\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n\nconst GeometryConstructor = {\n  Point: Point,\n  LineString: LineString,\n  Polygon: Polygon,\n  MultiPoint: MultiPoint,\n  MultiLineString: MultiLineString,\n  MultiPolygon: MultiPolygon,\n};\n\nfunction orientFlatCoordinates(flatCoordinates, ends, stride) {\n  if (Array.isArray(ends[0])) {\n    // MultiPolagon\n    if (!linearRingssAreOriented(flatCoordinates, 0, ends, stride)) {\n      flatCoordinates = flatCoordinates.slice();\n      orientLinearRingsArray(flatCoordinates, 0, ends, stride);\n    }\n    return flatCoordinates;\n  }\n  if (!linearRingsAreOriented(flatCoordinates, 0, ends, stride)) {\n    flatCoordinates = flatCoordinates.slice();\n    orientLinearRings(flatCoordinates, 0, ends, stride);\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {FeatureObject} object Feature object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {RenderFeature|Array<RenderFeature>} Render feature.\n */\nexport function createRenderFeature(object, options) {\n  const geometry = object.geometry;\n  if (!geometry) {\n    return [];\n  }\n  if (Array.isArray(geometry)) {\n    return geometry\n      .map((geometry) => createRenderFeature({...object, geometry}))\n      .flat();\n  }\n\n  const geometryType =\n    geometry.type === 'MultiPolygon' ? 'Polygon' : geometry.type;\n  if (geometryType === 'GeometryCollection' || geometryType === 'Circle') {\n    throw new Error('Unsupported geometry type: ' + geometryType);\n  }\n\n  const stride = geometry.layout.length;\n  return transformGeometryWithOptions(\n    new RenderFeature(\n      geometryType,\n      geometryType === 'Polygon'\n        ? orientFlatCoordinates(geometry.flatCoordinates, geometry.ends, stride)\n        : geometry.flatCoordinates,\n      geometry.ends?.flat(),\n      stride,\n      object.properties || {},\n      object.id\n    ).enableSimplifyTransformed(),\n    false,\n    options\n  );\n}\n\n/**\n * @param {GeometryObject|null} object Geometry object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nexport function createGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  if (Array.isArray(object)) {\n    const geometries = object.map((geometry) =>\n      createGeometry(geometry, options)\n    );\n    return new GeometryCollection(geometries);\n  }\n  const Geometry = GeometryConstructor[object.type];\n  return transformGeometryWithOptions(\n    new Geometry(object.flatCoordinates, object.layout, object.ends),\n    false,\n    options\n  );\n}\n","/**\n * @module ol/format/XMLFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport {abstract} from '../util.js';\nimport {extend} from '../array.js';\nimport {getXMLSerializer, isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nclass XMLFeature extends FeatureFormat {\n  constructor() {\n    super();\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = getXMLSerializer();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'xml';\n  }\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readFeatureFromDocument(\n        /** @type {Document} */ (source),\n        options\n      );\n    }\n    return this.readFeatureFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromDocument(doc, options) {\n    const features = this.readFeaturesFromDocument(doc, options);\n    if (features.length > 0) {\n      return features[0];\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    if (!source) {\n      return [];\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeaturesFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source),\n        options\n      );\n    }\n    return this.readFeaturesFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromDocument(doc, options) {\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    const features = [];\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          features,\n          this.readFeaturesFromNode(/** @type {Element} */ (n), options)\n        );\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readGeometryFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source),\n        options\n      );\n    }\n    return this.readGeometryFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromDocument(doc, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readProjectionFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    return this.dataProjection;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   */\n  writeFeature(feature, options) {\n    const node = this.writeFeatureNode(feature, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  writeFeatureNode(feature, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Result.\n   * @api\n   */\n  writeFeatures(features, options) {\n    const node = this.writeFeaturesNode(features, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeFeaturesNode(features, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   */\n  writeGeometry(geometry, options) {\n    const node = this.writeGeometryNode(geometry, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeGeometryNode(geometry, options) {\n    return null; // not implemented\n  }\n}\n\nexport default XMLFeature;\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, getDocument} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readPositiveInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(getDocument().createTextNode(string));\n}\n","/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  makeArrayPusher,\n  makeArraySerializer,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readDateTime,\n  readDecimal,\n  readPositiveInteger,\n  readString,\n  writeDateTimeTextNode,\n  writeDecimalTextNode,\n  writeNonNegativeIntegerTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.topografix.com/GPX/1/1 ' +\n  'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt,\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GPX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeArrayPusher(readRte),\n  'trk': makeArrayPusher(readTrk),\n  'wpt': makeArrayPusher(readWpt),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeObjectPropertySetter(readString, 'linkText'),\n  'type': makeObjectPropertySetter(readString, 'linkType'),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst GPX_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeChildAppender(writeRte),\n  'trk': makeChildAppender(writeTrk),\n  'wpt': makeChildAppender(writeWpt),\n});\n\n/**\n * @typedef {Object} Options\n * @property {function(Feature, Node):void} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ] HasZ.\n * @property {boolean} [hasM] HasM.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nclass GPX extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @type {function(Feature, Node): void|undefined}\n     * @private\n     */\n    this.readExtensions_ = options.readExtensions;\n  }\n\n  /**\n   * @param {Array<Feature>} features List of features.\n   * @private\n   */\n  handleReadExtensions_(features) {\n    if (!features) {\n      features = [];\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      if (this.readExtensions_) {\n        const extensionsNode = feature.get('extensionsNode_') || null;\n        this.readExtensions_(feature, extensionsNode);\n      }\n      feature.set('extensionsNode_', undefined);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    const featureReader = FEATURE_READER[node.localName];\n    if (!featureReader) {\n      return null;\n    }\n    const feature = featureReader(node, [this.getReadOptions(node, options)]);\n    if (!feature) {\n      return null;\n    }\n    this.handleReadExtensions_([feature]);\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return [];\n    }\n    if (node.localName == 'gpx') {\n      /** @type {Array<Feature>} */\n      const features = pushParseAndPop([], GPX_PARSERS, node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (features) {\n        this.handleReadExtensions_(features);\n        return features;\n      }\n      return [];\n    }\n    return [];\n  }\n\n  /**\n   * Encode an array of features in the GPX format as an XML node.\n   * LineString geometries are output as routes (`<rte>`), and MultiLineString\n   * as tracks (`<trk>`).\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    //FIXME Serialize metadata\n    const gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    gpx.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION\n    );\n    gpx.setAttribute('version', '1.1');\n    gpx.setAttribute('creator', 'OpenLayers');\n\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: gpx}),\n      GPX_SERIALIZERS,\n      GPX_NODE_FACTORY,\n      features,\n      [options]\n    );\n    return gpx;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readPositiveInteger),\n  'extensions': parseExtensions,\n  'type': makeObjectPropertySetter(readString),\n  'rtept': parseRtePt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTEPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readPositiveInteger),\n  'type': makeObjectPropertySetter(readString),\n  'extensions': parseExtensions,\n  'trkseg': parseTrkSeg,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKSEG_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': parseTrkPt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n  'magvar': makeObjectPropertySetter(readDecimal),\n  'geoidheight': makeObjectPropertySetter(readDecimal),\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'sym': makeObjectPropertySetter(readString),\n  'type': makeObjectPropertySetter(readString),\n  'fix': makeObjectPropertySetter(readString),\n  'sat': makeObjectPropertySetter(readPositiveInteger),\n  'hdop': makeObjectPropertySetter(readDecimal),\n  'vdop': makeObjectPropertySetter(readDecimal),\n  'pdop': makeObjectPropertySetter(readDecimal),\n  'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n  'dgpsid': makeObjectPropertySetter(readPositiveInteger),\n  'extensions': parseExtensions,\n});\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'rtept',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst RTE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'rtept': makeArraySerializer(makeChildAppender(writeWptType)),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTEPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['ele', 'time']);\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst TRK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'trkseg',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg)),\n});\n\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRKSEG_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': makeChildAppender(writeWptType),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'ele',\n  'time',\n  'magvar',\n  'geoidheight',\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'sym',\n  'type',\n  'fix',\n  'sat',\n  'hdop',\n  'vdop',\n  'pdop',\n  'ageofdgpsdata',\n  'dgpsid',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeChildAppender(writeDecimalTextNode),\n  'time': makeChildAppender(writeDateTimeTextNode),\n  'magvar': makeChildAppender(writeDecimalTextNode),\n  'geoidheight': makeChildAppender(writeDecimalTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'sym': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'fix': makeChildAppender(writeStringTextNode),\n  'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'hdop': makeChildAppender(writeDecimalTextNode),\n  'vdop': makeChildAppender(writeDecimalTextNode),\n  'pdop': makeChildAppender(writeDecimalTextNode),\n  'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n  'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk',\n};\n\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, nodeName) {\n  const geometry = /** @type {Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Element} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat'))\n  );\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>} [ends] Ends.\n * @return {import(\"../geom/Geometry.js\").GeometryLayout} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n  /** @type {import(\"../geom/Geometry.js\").GeometryLayout} */\n  let layout = 'XY';\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = 'XYZM';\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = 'XYZ';\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = 'XYM';\n    stride = 3;\n  }\n  if (stride !== 4) {\n    for (let i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = (flatCoordinates.length / 4) * stride;\n    if (ends) {\n      for (let i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = (ends[i] / 4) * stride;\n      }\n    }\n  }\n  return layout;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {!Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const flatCoordinates = /** @type {Array<number>} */ (\n      rteValues['flatCoordinates']\n    );\n    const layoutOptions = /** @type {LayoutOptions} */ (\n      rteValues['layoutOptions']\n    );\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {!Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const flatCoordinates = /** @type {Array<number>} */ (\n      trkValues['flatCoordinates']\n    );\n    const layoutOptions = /** @type {LayoutOptions} */ (\n      trkValues['layoutOptions']\n    );\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'layoutOptions': {},\n    },\n    RTE_PARSERS,\n    node,\n    objectStack\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n  const geometry = new LineString(flatCoordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'ends': [],\n      'layoutOptions': {},\n    },\n    TRK_PARSERS,\n    node,\n    objectStack\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(flatCoordinates, layout, ends);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = applyLayoutOptions(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [properties['linkText'], properties['linkType']];\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    link,\n    objectStack,\n    LINK_SEQUENCE\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  node.setAttributeNS(null, 'lat', String(coordinate[1]));\n  node.setAttributeNS(null, 'lon', String(coordinate[0]));\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case 'XYZM':\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n    // fall through\n    case 'XYZ':\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case 'XYM':\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n    // pass\n  }\n  const orderedKeys =\n    node.nodeName == 'rtept'\n      ? RTEPT_TYPE_SEQUENCE[namespaceURI]\n      : WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const properties = feature.getProperties();\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'LineString') {\n    const lineString = /** @type {LineString} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    context['geometryLayout'] = lineString.getLayout();\n    properties['rtept'] = lineString.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    RTE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const properties = feature.getProperties();\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'MultiLineString') {\n    const multiLineString = /** @type {MultiLineString} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    properties['trkseg'] = multiLineString.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    TRK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['geometryLayout'] = lineString.getLayout();\n  context['properties'] = {};\n  pushSerializeAndPop(\n    context,\n    TRKSEG_SERIALIZERS,\n    TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(),\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'Point') {\n    const point = /** @type {Point} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    context['geometryLayout'] = point.getLayout();\n    writeWptType(node, point.getCoordinates(), objectStack);\n  }\n}\n\nexport default GPX;\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|Array<import(\"../render/Feature.js\").default>} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default|import(\"../render/Feature.js\").default|Array<import(\"../render/Feature.js\").default>} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default|import(\"../render/Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  }\n  if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  createGeometry,\n  createRenderFeature,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport {\n  deflateCoordinatesArray,\n  deflateMultiCoordinatesArray,\n} from '../geom/flat/deflate.js';\nimport {getLayoutForStride} from '../geom/SimpleGeometry.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Feature class\n * to be used when reading features. The default is {@link module:ol/Feature~Feature}. If performance is\n * the primary concern, and features are not going to be modified or round-tripped through the format,\n * consider using {@link module:ol/render/Feature~RenderFeature}\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    if (options.featureClass) {\n      this.featureClass = options.featureClass;\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Feature|RenderFeature|Array<RenderFeature>}.default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometryInternal(geoJSONFeature['geometry'], options);\n    if (this.featureClass === RenderFeature) {\n      return createRenderFeature(\n        {\n          geometry,\n          id: geoJSONFeature['id'],\n          properties: geoJSONFeature['properties'],\n        },\n        options\n      );\n    }\n\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(createGeometry(geometry, options));\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature|RenderFeature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<Feature|RenderFeature|Array<RenderFeature>>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        const featureObject = this.readFeatureFromObject(\n          geoJSONFeatures[i],\n          options\n        );\n        if (!featureObject) {\n          continue;\n        }\n        features.push(featureObject);\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return features.flat();\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        throw new Error('Unknown SRS type');\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryObject} Geometry.\n */\nfunction readGeometryInternal(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /** @type {import(\"./Feature.js\").GeometryObject} */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return geometry;\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  const geometryObject = readGeometryInternal(object, options);\n  return createGeometry(geometryObject, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryCollectionObject} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"./Feature.js\").GeometryObject} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometryInternal(geometry, options);\n    }\n  );\n  return geometries;\n}\n\n/**\n * @param {GeoJSONPoint} object Input object.\n * @return {import(\"./Feature.js\").GeometryObject} Point geometry.\n */\nfunction readPointGeometry(object) {\n  const flatCoordinates = object['coordinates'];\n  return {\n    type: 'Point',\n    flatCoordinates,\n    layout: getLayoutForStride(flatCoordinates.length),\n  };\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} LineString geometry.\n */\nfunction readLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = coordinates.flat();\n  return {\n    type: 'LineString',\n    flatCoordinates,\n    ends: [flatCoordinates.length],\n    layout: getLayoutForStride(coordinates[0].length),\n  };\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiLineString geometry.\n */\nfunction readMultiLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const stride = coordinates[0][0].length;\n  const flatCoordinates = [];\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'MultiLineString',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPoint geometry.\n */\nfunction readMultiPointGeometry(object) {\n  const coordinates = object['coordinates'];\n  return {\n    type: 'MultiPoint',\n    flatCoordinates: coordinates.flat(),\n    layout: getLayoutForStride(coordinates[0].length),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPolygon geometry.\n */\nfunction readMultiPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0][0][0].length;\n  const endss = deflateMultiCoordinatesArray(\n    flatCoordinates,\n    0,\n    coordinates,\n    stride\n  );\n  return {\n    type: 'MultiPolygon',\n    flatCoordinates,\n    ends: endss,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0][0].length;\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'Polygon',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(\n        /** @type {import(\"../geom/Point.js\").default} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {import(\"../geom/LineString.js\").default} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {import(\"../geom/Polygon.js\").default} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {import(\"../geom/MultiPoint.js\").default} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {import(\"../geom/MultiLineString.js\").default} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {import(\"../geom/MultiPolygon.js\").default} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ),\n        options\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/format/TextFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nclass TextFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'text';\n  }\n\n  /**\n   * Read the feature from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromText(\n      getText(source),\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the features from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromText(\n      getText(source),\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the geometry from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromText(\n      getText(source),\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromText(getText(source));\n  }\n\n  /**\n   * @param {string} text Text.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjectionFromText(text) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as a string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return this.writeFeatureText(feature, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return this.writeFeaturesText(features, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return this.writeGeometryText(geometry, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  }\n  return '';\n}\n\nexport default TextFeature;\n","/**\n * @module ol/format/IGC\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport TextFeature from './TextFeature.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {'barometric' | 'gps' | 'none'} IGCZ\n * IGC altitude/z. One of 'barometric', 'gps', 'none'.\n */\n\n/**\n * @const\n * @type {RegExp}\n */\nconst B_RECORD_RE =\n  /^B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5})/;\n\n/**\n * @const\n * @type {RegExp}\n */\nconst H_RECORD_RE = /^H.([A-Z]{3}).*?:(.*)/;\n\n/**\n * @const\n * @type {RegExp}\n */\nconst HFDTE_RECORD_RE = /^HFDTE(\\d{2})(\\d{2})(\\d{2})/;\n\n/**\n * A regular expression matching the newline characters `\\r\\n`, `\\r` and `\\n`.\n *\n * @const\n * @type {RegExp}\n */\nconst NEWLINE_RE = /\\r\\n|\\r|\\n/;\n\n/**\n * @typedef {Object} Options\n * @property {IGCZ} [altitudeMode='none'] Altitude mode. Possible\n * values are `'barometric'`, `'gps'`, and `'none'`.\n */\n\n/**\n * @classdesc\n * Feature format for `*.igc` flight recording files.\n *\n * As IGC sources contain a single feature,\n * {@link module:ol/format/IGC~IGC#readFeatures} will return the feature in an\n * array\n *\n * @api\n */\nclass IGC extends TextFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {IGCZ}\n     */\n    this.altitudeMode_ = options.altitudeMode ? options.altitudeMode : 'none';\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    const altitudeMode = this.altitudeMode_;\n    const lines = text.split(NEWLINE_RE);\n    /** @type {Object<string, string>} */\n    const properties = {};\n    const flatCoordinates = [];\n    let year = 2000;\n    let month = 0;\n    let day = 1;\n    let lastDateTime = -1;\n    let i, ii;\n    for (i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      let m;\n      if (line.charAt(0) == 'B') {\n        m = B_RECORD_RE.exec(line);\n        if (m) {\n          const hour = parseInt(m[1], 10);\n          const minute = parseInt(m[2], 10);\n          const second = parseInt(m[3], 10);\n          let y = parseInt(m[4], 10) + parseInt(m[5], 10) / 60000;\n          if (m[6] == 'S') {\n            y = -y;\n          }\n          let x = parseInt(m[7], 10) + parseInt(m[8], 10) / 60000;\n          if (m[9] == 'W') {\n            x = -x;\n          }\n          flatCoordinates.push(x, y);\n          if (altitudeMode != 'none') {\n            let z;\n            if (altitudeMode == 'gps') {\n              z = parseInt(m[11], 10);\n            } else if (altitudeMode == 'barometric') {\n              z = parseInt(m[12], 10);\n            } else {\n              z = 0;\n            }\n            flatCoordinates.push(z);\n          }\n          let dateTime = Date.UTC(year, month, day, hour, minute, second);\n          // Detect UTC midnight wrap around.\n          if (dateTime < lastDateTime) {\n            dateTime = Date.UTC(year, month, day + 1, hour, minute, second);\n          }\n          flatCoordinates.push(dateTime / 1000);\n          lastDateTime = dateTime;\n        }\n      } else if (line.charAt(0) == 'H') {\n        m = HFDTE_RECORD_RE.exec(line);\n        if (m) {\n          day = parseInt(m[1], 10);\n          month = parseInt(m[2], 10) - 1;\n          year = 2000 + parseInt(m[3], 10);\n        } else {\n          m = H_RECORD_RE.exec(line);\n          if (m) {\n            properties[m[1]] = m[2].trim();\n          }\n        }\n      }\n    }\n    if (flatCoordinates.length === 0) {\n      return null;\n    }\n    const layout = altitudeMode == 'none' ? 'XYM' : 'XYZM';\n    const lineString = new LineString(flatCoordinates, layout);\n    const feature = new Feature(\n      transformGeometryWithOptions(lineString, false, options)\n    );\n    feature.setProperties(properties, true);\n    return feature;\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    const feature = this.readFeatureFromText(text, options);\n    if (feature) {\n      return [feature];\n    }\n    return [];\n  }\n}\n\nexport default IGC;\n","/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport Icon from '../style/Icon.js';\nimport ImageState from '../ImageState.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  isDocument,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeReplacer,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {asArray} from '../color.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readBoolean,\n  readDecimal,\n  readString,\n  writeBooleanTextNode,\n  writeCDATASection,\n  writeDecimalTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {toRadians} from '../math.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x X coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} xunits Units of x.\n * @property {number} y Y coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} yunits Units of Y.\n * @property {import(\"../style/Icon.js\").IconOrigin} [origin] Origin.\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<Array<number>>} coordinates Coordinates.\n * @property {Array<number>} whens Whens.\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst GX_NAMESPACE_URIS = ['http://www.google.com/kml/ext/2.2'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.opengis.net/kml/2.2 ' +\n  'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n/**\n * @type {Object<string, import(\"../style/Icon.js\").IconAnchorUnits>}\n */\nconst ICON_ANCHOR_UNITS_MAP = {\n  'fraction': 'fraction',\n  'pixels': 'pixels',\n  'insetPixels': 'pixels',\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PLACEMARK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readStyleURL),\n    'visibility': makeObjectPropertySetter(readBoolean),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry'),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': extendedDataParser,\n  'Region': regionParser,\n  'Link': linkParser,\n  'address': makeObjectPropertySetter(readString),\n  'description': makeObjectPropertySetter(readString),\n  'name': makeObjectPropertySetter(readString),\n  'open': makeObjectPropertySetter(readBoolean),\n  'phoneNumber': makeObjectPropertySetter(readString),\n  'visibility': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'href': makeObjectPropertySetter(readURI),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CAMERA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  Altitude: makeObjectPropertySetter(readDecimal),\n  Longitude: makeObjectPropertySetter(readDecimal),\n  Latitude: makeObjectPropertySetter(readDecimal),\n  Tilt: makeObjectPropertySetter(readDecimal),\n  AltitudeMode: makeObjectPropertySetter(readString),\n  Heading: makeObjectPropertySetter(readDecimal),\n  Roll: makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LatLonAltBox': latLonAltBoxParser,\n  'Lod': lodParser,\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['Document', 'Placemark']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Document': makeChildAppender(writeDocument),\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @type {import(\"../color.js\").Color}\n */\nlet DEFAULT_COLOR;\n\n/**\n * @type {Fill|null}\n */\nlet DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill|null} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nlet DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {import(\"../style/Image.js\").default|null}\n */\nlet DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default|null} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nlet DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {Stroke|null}\n */\nlet DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke|null} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {Stroke}\n */\nlet DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {Text|null}\n */\nlet DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text|null} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {Style|null}\n */\nlet DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {Style|null} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>|null} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\n/**\n * Function that returns the scale needed to normalize an icon image to 32 pixels.\n * @param {import(\"../size.js\").Size} size Image size.\n * @return {number} Scale.\n */\nfunction scaleForSize(size) {\n  return 32 / Math.min(size[0], size[1]);\n}\n\nfunction createStyleDefaults() {\n  DEFAULT_COLOR = [255, 255, 255, 1];\n\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR,\n  });\n\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2];\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = 'pixels';\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = 'pixels';\n\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n\n  DEFAULT_IMAGE_STYLE_SRC =\n    'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: 'bottom-left',\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: scaleForSize(DEFAULT_IMAGE_STYLE_SIZE),\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC,\n  });\n\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1,\n  });\n\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2,\n  });\n\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8,\n  });\n\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0,\n  });\n\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n\n/**\n * @type {HTMLTextAreaElement}\n */\nlet TEXTAREA;\n\n/**\n * A function that takes a url `{string}` and returns a url `{string}`.\n * Might be used to change an icon path or to substitute a\n * data url obtained from a KMZ array buffer.\n *\n * @typedef {function(string):string} IconUrlFunction\n * @api\n */\n\n/**\n * Function that returns a url unchanged.\n * @param {string} href Input url.\n * @return {string} Output url.\n */\nfunction defaultIconUrlFunction(href) {\n  return href;\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * @property {IconUrlFunction} [iconUrlFunction] Function that takes a url string and returns a url string.\n * Might be used to change an icon path or to substitute a data url obtained from a KMZ array buffer.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * @api\n */\nclass KML extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    if (!DEFAULT_STYLE_ARRAY) {\n      createStyleDefaults();\n    }\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {Array<Style>}\n     */\n    this.defaultStyle_ = options.defaultStyle\n      ? options.defaultStyle\n      : DEFAULT_STYLE_ARRAY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.extractStyles_ =\n      options.extractStyles !== undefined ? options.extractStyles : true;\n\n    /**\n     * @type {boolean}\n     */\n    this.writeStyles_ =\n      options.writeStyles !== undefined ? options.writeStyles : true;\n\n    /**\n     * @private\n     * @type {!Object<string, (Array<Style>|string)>}\n     */\n    this.sharedStyles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.showPointNames_ =\n      options.showPointNames !== undefined ? options.showPointNames : true;\n\n    /**\n     * @type {null|string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    /**\n     * @type {IconUrlFunction}\n     */\n    this.iconUrlFunction_ = options.iconUrlFunction\n      ? options.iconUrlFunction\n      : defaultIconUrlFunction;\n\n    this.supportedMediaTypes = ['application/vnd.google-earth.kml+xml'];\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<Feature>|undefined} Features.\n   */\n  readDocumentOrFolder_(node, objectStack) {\n    // FIXME use scope somehow\n    const parsersNS = makeStructureNS(NAMESPACE_URIS, {\n      'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this),\n    });\n    /** @type {Array<Feature>} */\n    // @ts-ignore\n    const features = pushParseAndPop([], parsersNS, node, objectStack, this);\n    if (features) {\n      return features;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Feature|undefined} Feature.\n   */\n  readPlacemark_(node, objectStack) {\n    const object = pushParseAndPop(\n      {'geometry': null},\n      PLACEMARK_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (!object) {\n      return undefined;\n    }\n    const feature = new Feature();\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      feature.setId(id);\n    }\n    const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n      objectStack[0]\n    );\n\n    const geometry = object['geometry'];\n    if (geometry) {\n      transformGeometryWithOptions(geometry, false, options);\n    }\n    feature.setGeometry(geometry);\n    delete object['geometry'];\n\n    if (this.extractStyles_) {\n      const style = object['Style'];\n      const styleUrl = object['styleUrl'];\n      const styleFunction = createFeatureStyleFunction(\n        style,\n        styleUrl,\n        this.defaultStyle_,\n        this.sharedStyles_,\n        this.showPointNames_\n      );\n      feature.setStyle(styleFunction);\n    }\n    delete object['Style'];\n    // we do not remove the styleUrl property from the object, so it\n    // gets stored on feature when setProperties is called\n\n    feature.setProperties(object, true);\n\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyle_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      const style = readStyle.call(this, node, objectStack);\n      if (style) {\n        let styleUri;\n        let baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n          baseURI = window.location.href;\n        }\n        if (baseURI) {\n          const url = new URL('#' + id, baseURI);\n          styleUri = url.href;\n        } else {\n          styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = style;\n      }\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyleMap_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id === null) {\n      return;\n    }\n    const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n    if (!styleMapValue) {\n      return;\n    }\n    let styleUri;\n    let baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n      baseURI = window.location.href;\n    }\n    if (baseURI) {\n      const url = new URL('#' + id, baseURI);\n      styleUri = url.href;\n    } else {\n      styleUri = '#' + id;\n    }\n    this.sharedStyles_[styleUri] = styleMapValue;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    const feature = this.readPlacemark_(node, [\n      this.getReadOptions(node, options),\n    ]);\n    if (feature) {\n      return feature;\n    }\n    return null;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return [];\n    }\n    let features;\n    const localName = node.localName;\n    if (localName == 'Document' || localName == 'Folder') {\n      features = this.readDocumentOrFolder_(node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (features) {\n        return features;\n      }\n      return [];\n    }\n    if (localName == 'Placemark') {\n      const feature = this.readPlacemark_(node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (feature) {\n        return [feature];\n      }\n      return [];\n    }\n    if (localName == 'kml') {\n      features = [];\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        const fs = this.readFeaturesFromNode(n, options);\n        if (fs) {\n          extend(features, fs);\n        }\n      }\n      return features;\n    }\n    return [];\n  }\n\n  /**\n   * Read the name of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {string|undefined} Name.\n   * @api\n   */\n  readName(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readNameFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readNameFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readNameFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {string|undefined} Name.\n   */\n  readNameFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        const name = this.readNameFromNode(/** @type {Element} */ (n));\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {string|undefined} Name.\n   */\n  readNameFromNode(node) {\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'name') {\n        return readString(n);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' ||\n          localName == 'Folder' ||\n          localName == 'Placemark' ||\n          localName == 'kml')\n      ) {\n        const name = this.readNameFromNode(n);\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Read the network links of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Network links.\n   * @api\n   */\n  readNetworkLinks(source) {\n    const networkLinks = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromNode(/** @type {Element} */ (source))\n      );\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromDocument(doc) {\n    const networkLinks = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          networkLinks,\n          this.readNetworkLinksFromNode(/** @type {Element} */ (n))\n        );\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromNode(node) {\n    const networkLinks = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        n.localName == 'NetworkLink'\n      ) {\n        const obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n        networkLinks.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(networkLinks, this.readNetworkLinksFromNode(n));\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * Read the regions of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Regions.\n   * @api\n   */\n  readRegion(source) {\n    const regions = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(regions, this.readRegionFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        regions,\n        this.readRegionFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(regions, this.readRegionFromNode(/** @type {Element} */ (source)));\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Region.\n   */\n  readRegionFromDocument(doc) {\n    const regions = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Region.\n   * @api\n   */\n  readRegionFromNode(node) {\n    const regions = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'Region') {\n        const obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n        regions.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(regions, this.readRegionFromNode(n));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @typedef {Object} KMLCamera Specifies the observer's viewpoint and associated view parameters.\n   * @property {number} [Latitude] Latitude of the camera.\n   * @property {number} [Longitude] Longitude of the camera.\n   * @property {number} [Altitude] Altitude of the camera.\n   * @property {string} [AltitudeMode] Floor-related altitude mode.\n   * @property {number} [Heading] Horizontal camera rotation.\n   * @property {number} [Tilt] Lateral camera rotation.\n   * @property {number} [Roll] Vertical camera rotation.\n   */\n\n  /**\n   * Read the cameras of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<KMLCamera>} Cameras.\n   * @api\n   */\n  readCamera(source) {\n    const cameras = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(cameras, this.readCameraFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        cameras,\n        this.readCameraFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(cameras, this.readCameraFromNode(/** @type {Element} */ (source)));\n    }\n    return cameras;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<KMLCamera>} Cameras.\n   */\n  readCameraFromDocument(doc) {\n    const cameras = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType === Node.ELEMENT_NODE) {\n        extend(cameras, this.readCameraFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return cameras;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<KMLCamera>} Cameras.\n   * @api\n   */\n  readCameraFromNode(node) {\n    const cameras = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName === 'Camera') {\n        const obj = pushParseAndPop({}, CAMERA_PARSERS, n, []);\n        cameras.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName === 'Document' ||\n          localName === 'Folder' ||\n          localName === 'Placemark' ||\n          localName === 'kml')\n      ) {\n        extend(cameras, this.readCameraFromNode(n));\n      }\n    }\n    return cameras;\n  }\n\n  /**\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    const kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    kml.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION\n    );\n\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: kml,\n      };\n    /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n    const properties = {};\n    if (features.length > 1) {\n      properties['Document'] = features;\n    } else if (features.length == 1) {\n      properties['Placemark'] = features[0];\n    }\n    const orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n    const values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(\n      context,\n      KML_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      [options],\n      orderedKeys,\n      this\n    );\n    return kml;\n  }\n}\n\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  const textOffset = [0, 0];\n  /** @type {CanvasTextAlign} */\n  let textAlign = 'start';\n  const imageStyle = foundStyle.getImage();\n  if (imageStyle) {\n    const imageSize = imageStyle.getSize();\n    if (imageSize && imageSize.length == 2) {\n      const imageScale = imageStyle.getScaleArray();\n      const anchor = imageStyle.getAnchor();\n      // Offset the label to be centered to the right of the icon,\n      // if there is one.\n      textOffset[0] = imageScale[0] * (imageSize[0] - anchor[0]);\n      textOffset[1] = imageScale[1] * (imageSize[1] / 2 - anchor[1]);\n      textAlign = 'left';\n    }\n  }\n  let textStyle = foundStyle.getText();\n  if (textStyle) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    textStyle = textStyle.clone();\n    textStyle.setFont(textStyle.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(textStyle.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(textStyle.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(textStyle.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    image: imageStyle,\n    text: textStyle,\n  });\n  return nameStyle;\n}\n\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(\n  style,\n  styleUrl,\n  defaultStyle,\n  sharedStyles,\n  showPointNames\n) {\n  return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>|Style} Style.\n     */\n    function (feature, resolution) {\n      let drawName = showPointNames;\n      let name = '';\n      let multiGeometryPoints = [];\n      if (drawName) {\n        const geometry = feature.getGeometry();\n        if (geometry) {\n          if (geometry instanceof GeometryCollection) {\n            multiGeometryPoints = geometry\n              .getGeometriesArrayRecursive()\n              .filter(function (geometry) {\n                const type = geometry.getType();\n                return type === 'Point' || type === 'MultiPoint';\n              });\n            drawName = multiGeometryPoints.length > 0;\n          } else {\n            const type = geometry.getType();\n            drawName = type === 'Point' || type === 'MultiPoint';\n          }\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (feature.get('name'));\n        drawName = drawName && !!name;\n        // convert any html character codes\n        if (drawName && /&[^&]+;/.test(name)) {\n          if (!TEXTAREA) {\n            TEXTAREA = document.createElement('textarea');\n          }\n          TEXTAREA.innerHTML = name;\n          name = TEXTAREA.value;\n        }\n      }\n\n      let featureStyle = defaultStyle;\n      if (style) {\n        featureStyle = style;\n      } else if (styleUrl) {\n        featureStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n      }\n      if (drawName) {\n        const nameStyle = createNameStyleFunction(featureStyle[0], name);\n        if (multiGeometryPoints.length > 0) {\n          // in multigeometries restrict the name style to points and create a\n          // style without image or text for geometries requiring fill or stroke\n          // including any polygon specific style if there is one\n          nameStyle.setGeometry(new GeometryCollection(multiGeometryPoints));\n          const baseStyle = new Style({\n            geometry: featureStyle[0].getGeometry(),\n            image: null,\n            fill: featureStyle[0].getFill(),\n            stroke: featureStyle[0].getStroke(),\n            text: null,\n          });\n          return [nameStyle, baseStyle].concat(featureStyle.slice(1));\n        }\n        return nameStyle;\n      }\n      return featureStyle;\n    }\n  );\n}\n\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  }\n  if (typeof styleValue === 'string') {\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  }\n  return defaultStyle;\n}\n\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n  const s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255,\n    ];\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  let s = getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  s = s.replace(/\\s*,\\s*/g, ',');\n  const re =\n    /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?),([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|,|$)(?:([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|$))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  const s = getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  }\n  return s;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readStyleURL(node) {\n  // KML files in the wild occasionally forget the leading\n  // `#` on styleUrlsdefined in the same document.\n  const s = getAllTextContent(node, false)\n    .trim()\n    .replace(/^(?!.*#)/, '#');\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  }\n  return s;\n}\n\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  /** @type {import('../style/Icon.js').IconOrigin} */\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = 'bottom-left';\n    } else {\n      origin = 'top-left';\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = 'bottom-right';\n    } else {\n      origin = 'top-right';\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin,\n  };\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Pair': pairDataParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack, this);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeObjectPropertySetter(readIcon),\n  'color': makeObjectPropertySetter(readColor),\n  'heading': makeObjectPropertySetter(readDecimal),\n  'hotSpot': makeObjectPropertySetter(readVec2),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = !('Icon' in object) || Object.keys(IconObject).length > 0;\n  let src;\n  const href = /** @type {string|undefined} */ (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  /** @type {import('../style/Icon.js').IconOrigin|undefined} */\n  let anchorOrigin = 'bottom-left';\n  const hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (/^https?:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    // Google hotspots from https://kml4earth.appspot.com/icons.html#notes\n    if (src.includes('pushpin')) {\n      anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (src.includes('arrow-reverse')) {\n      anchor = [54, 42];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (src.includes('paddle')) {\n      anchor = [32, 1];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    }\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */ (IconObject['x']);\n  const y = /** @type {number|undefined} */ (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */ (IconObject['w']);\n  const h = /** @type {number|undefined} */ (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */ (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  const scale = /** @type {number|undefined} */ (object['scale']);\n\n  const color = /** @type {Array<number>|undefined} */ (object['color']);\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: this.crossOrigin_,\n      offset: offset,\n      offsetOrigin: 'bottom-left',\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: this.iconUrlFunction_(src),\n      color: color,\n    });\n\n    const imageScale = imageStyle.getScaleArray()[0];\n    const imageSize = imageStyle.getSize();\n    if (imageSize === null) {\n      const imageState = imageStyle.getImageState();\n      if (imageState === ImageState.IDLE || imageState === ImageState.LOADING) {\n        const listener = function () {\n          const imageState = imageStyle.getImageState();\n          if (\n            !(\n              imageState === ImageState.IDLE ||\n              imageState === ImageState.LOADING\n            )\n          ) {\n            const imageSize = imageStyle.getSize();\n            if (imageSize && imageSize.length == 2) {\n              const resizeScale = scaleForSize(imageSize);\n              imageStyle.setScale(imageScale * resizeScale);\n            }\n            imageStyle.unlistenImageChange(listener);\n          }\n        };\n        imageStyle.listenImageChange(listener);\n        if (imageState === ImageState.IDLE) {\n          imageStyle.load();\n        }\n      }\n    } else if (imageSize.length == 2) {\n      const resizeScale = scaleForSize(imageSize);\n      imageStyle.setScale(imageScale * resizeScale);\n    }\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color:\n        /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    }),\n    scale: /** @type {number|undefined} */ (object['scale']),\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'width': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1),\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'fill': makeObjectPropertySetter(readBoolean),\n  'outline': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline = /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const coordinates = gxTrackObject.coordinates;\n  const s = getAllTextContent(node, false);\n  const re =\n    /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    coordinates.push([x, y, z]);\n  } else {\n    coordinates.push([]);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n  'Track': makeArrayPusher(readGxTrack),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  const lineStrings = pushParseAndPop(\n    [],\n    GX_MULTITRACK_GEOMETRY_PARSERS,\n    node,\n    objectStack\n  );\n  if (!lineStrings) {\n    return undefined;\n  }\n  return new MultiLineString(lineStrings);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_TRACK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'when': whenParser,\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'coord': gxCoordParser,\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  const gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n      coordinates: [],\n      whens: [],\n    }),\n    GX_TRACK_PARSERS,\n    node,\n    objectStack\n  );\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = [];\n  const coordinates = gxTrackObject.coordinates;\n  const whens = gxTrackObject.whens;\n  for (\n    let i = 0, ii = Math.min(coordinates.length, whens.length);\n    i < ii;\n    ++i\n  ) {\n    if (coordinates[i].length == 3) {\n      flatCoordinates.push(\n        coordinates[i][0],\n        coordinates[i][1],\n        coordinates[i][2],\n        whens[i]\n      );\n    }\n  }\n  return new LineString(flatCoordinates, 'XYZM');\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeObjectPropertySetter(readURI),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeObjectPropertySetter(readDecimal),\n    'y': makeObjectPropertySetter(readDecimal),\n    'w': makeObjectPropertySetter(readDecimal),\n    'h': makeObjectPropertySetter(readDecimal),\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  const iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  }\n  return null;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(\n    null,\n    GEOMETRY_FLAT_COORDINATES_PARSERS,\n    node,\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeObjectPropertySetter(readBoolean),\n  'tessellate': makeObjectPropertySetter(readBoolean),\n  'altitudeMode': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(flatCoordinates, 'XYZ');\n    lineString.setProperties(properties, true);\n    return lineString;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(flatCoordinates, 'XYZ', [\n      flatCoordinates.length,\n    ]);\n    polygon.setProperties(properties, true);\n    return polygon;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeArrayPusher(readLineString),\n  'LinearRing': makeArrayPusher(readLinearRing),\n  'MultiGeometry': makeArrayPusher(readMultiGeometry),\n  'Point': makeArrayPusher(readPoint),\n  'Polygon': makeArrayPusher(readPolygon),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  const geometries = pushParseAndPop(\n    [],\n    MULTI_GEOMETRY_PARSERS,\n    node,\n    objectStack\n  );\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry;\n  for (let i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == 'Point') {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (let i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'LineString') {\n      multiGeometry = new MultiLineString(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'Polygon') {\n      multiGeometry = new MultiPolygon(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'GeometryCollection') {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      throw new Error('Unknown geometry type found');\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(flatCoordinates, 'XYZ');\n    point.setProperties(properties, true);\n    return point;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'innerBoundaryIs': innerBoundaryIsParser,\n  'outerBoundaryIs': outerBoundaryIsParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  const properties = pushParseAndPop(\n    /** @type {Object<string,*>} */ ({}),\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatLinearRings = pushParseAndPop(\n    [null],\n    FLAT_LINEAR_RINGS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRings && flatLinearRings[0]) {\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    for (let i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    const polygon = new Polygon(flatCoordinates, 'XYZ', ends);\n    polygon.setProperties(properties, true);\n    return polygon;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': iconStyleParser,\n  'LabelStyle': labelStyleParser,\n  'LineStyle': lineStyleParser,\n  'PolyStyle': polyStyleParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  const styleObject = pushParseAndPop(\n    {},\n    STYLE_PARSERS,\n    node,\n    objectStack,\n    this\n  );\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle =\n    /** @type {Fill} */\n    (\n      'fillStyle' in styleObject ? styleObject['fillStyle'] : DEFAULT_FILL_STYLE\n    );\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle;\n  if ('imageStyle' in styleObject) {\n    if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n      imageStyle = /** @type {import(\"../style/Image.js\").default} */ (\n        styleObject['imageStyle']\n      );\n    }\n  } else {\n    imageStyle = DEFAULT_IMAGE_STYLE;\n  }\n  const textStyle =\n    /** @type {Text} */\n    (\n      'textStyle' in styleObject ? styleObject['textStyle'] : DEFAULT_TEXT_STYLE\n    );\n  const strokeStyle =\n    /** @type {Stroke} */\n    (\n      'strokeStyle' in styleObject\n        ? styleObject['strokeStyle']\n        : DEFAULT_STROKE_STYLE\n    );\n  const outline = /** @type {boolean|undefined} */ (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    // if the polystyle specifies no outline two styles are needed,\n    // one for non-polygon geometries where linestrings require a stroke\n    // and one for polygons where there should be no stroke\n    return [\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === 'GeometryCollection') {\n            const collection =\n              /** @type {import(\"../geom/GeometryCollection\").default} */ (\n                geometry\n              );\n            return new GeometryCollection(\n              collection\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type !== 'Polygon' && type !== 'MultiPolygon';\n                })\n            );\n          }\n          if (type !== 'Polygon' && type !== 'MultiPolygon') {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        image: imageStyle,\n        stroke: strokeStyle,\n        text: textStyle,\n        zIndex: undefined, // FIXME\n      }),\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === 'GeometryCollection') {\n            const collection =\n              /** @type {import(\"../geom/GeometryCollection\").default} */ (\n                geometry\n              );\n            return new GeometryCollection(\n              collection\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type === 'Polygon' || type === 'MultiPolygon';\n                })\n            );\n          }\n          if (type === 'Polygon' || type === 'MultiPolygon') {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        stroke: null,\n        zIndex: undefined, // FIXME\n      }),\n    ];\n  }\n  return [\n    new Style({\n      fill: fillStyle,\n      image: imageStyle,\n      stroke: strokeStyle,\n      text: textStyle,\n      zIndex: undefined, // FIXME\n    }),\n  ];\n}\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = false;\n  hasTessellate = false;\n  hasAltitudeMode = false;\n  for (let i = 0; i < ii; ++i) {\n    const geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'displayName': makeObjectPropertySetter(readString),\n  'value': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  const featureObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  if (name && featureObject.displayName) {\n    featureObject[name] = {\n      value: featureObject.value,\n      displayName: featureObject.displayName,\n      toString: function () {\n        return featureObject.value;\n      },\n    };\n  } else if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': dataParser,\n  'SchemaData': schemaDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Style': makeObjectPropertySetter(readStyle),\n  'key': makeObjectPropertySetter(readString),\n  'styleUrl': makeObjectPropertySetter(readStyleURL),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  const pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack, this);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */ (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const style = /** @type {Style} */ (pairObject['Style']);\n    if (style) {\n      objectStack[objectStack.length - 1] = style;\n    }\n  }\n}\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    throw new Error('`styleMapValue` has an unknown type');\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'SimpleData': simpleDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = readString(node);\n    const featureObject = /** @type {Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    featureObject[name] = data;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'altitudeMode': makeObjectPropertySetter(readString),\n  'minAltitude': makeObjectPropertySetter(readDecimal),\n  'maxAltitude': makeObjectPropertySetter(readDecimal),\n  'north': makeObjectPropertySetter(readDecimal),\n  'south': makeObjectPropertySetter(readDecimal),\n  'east': makeObjectPropertySetter(readDecimal),\n  'west': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  const object = pushParseAndPop(\n    {},\n    LAT_LON_ALT_BOX_PARSERS,\n    node,\n    objectStack\n  );\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north']),\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'minLodPixels': makeObjectPropertySetter(readDecimal),\n  'maxLodPixels': makeObjectPropertySetter(readDecimal),\n  'minFadeExtent': makeObjectPropertySetter(readDecimal),\n  'maxFadeExtent': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  const object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  // KML spec only allows one LinearRing  per innerBoundaryIs, but Google Earth\n  // allows multiple, so we parse multiple here too.\n  'LinearRing': makeArrayPusher(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  const innerBoundaryFlatLinearRings = pushParseAndPop(\n    /** @type {Array<Array<number>>} */ ([]),\n    INNER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack\n  );\n  if (innerBoundaryFlatLinearRings.length > 0) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(...innerBoundaryFlatLinearRings);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(\n    undefined,\n    OUTER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRing) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  const rgba = asArray(color);\n  const opacity = rgba.length == 4 ? rgba[3] : 1;\n  /** @type {Array<string|number>} */\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (let i = 0; i < 4; ++i) {\n    const hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n    abgr[i] = hex.length == 1 ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == 'XY' || layout == 'XYM') {\n    dimension = 2;\n  } else if (layout == 'XYZ' || layout == 'XYZM') {\n    dimension = 3;\n  } else {\n    throw new Error('Invalid geometry layout');\n  }\n\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (let d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (let i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (let d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': makeChildAppender(writeDataNode),\n  'value': makeChildAppender(writeDataNodeValue),\n  'displayName': makeChildAppender(writeDataNodeName),\n});\n\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.displayName],\n        objectStack,\n        ['displayName']\n      );\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.value],\n        objectStack,\n        ['value']\n      );\n    }\n  } else {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      [value],\n      objectStack,\n      ['value']\n    );\n  }\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst DOCUMENT_NODE_FACTORY = function (value, objectStack, nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    DOCUMENT_SERIALIZERS,\n    DOCUMENT_NODE_FACTORY,\n    features,\n    objectStack,\n    undefined,\n    this\n  );\n}\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n/**\n * @param {Element} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      DATA_NODE_FACTORY,\n      [{name: names[i], value: values[i]}],\n      objectStack\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS,\n  ['href'],\n  makeStructureNS(GX_NAMESPACE_URIS, ['x', 'y', 'w', 'h'])\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeChildAppender(writeStringTextNode),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeChildAppender(writeDecimalTextNode),\n    'y': makeChildAppender(writeDecimalTextNode),\n    'w': makeChildAppender(writeDecimalTextNode),\n    'h': makeChildAppender(writeDecimalTextNode),\n  })\n);\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GX_NODE_FACTORY = function (value, objectStack, nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + nodeName);\n};\n\n/**\n * @param {Element} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  let values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n  orderedKeys = ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    GX_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'scale',\n  'heading',\n  'Icon',\n  'color',\n  'hotSpot',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeChildAppender(writeIcon),\n  'color': makeChildAppender(writeColorTextNode),\n  'heading': makeChildAppender(writeDecimalTextNode),\n  'hotSpot': makeChildAppender(writeVec2),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const /** @type {Object<string, any>} */ properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src,\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {Vec2} */ hotSpot = {\n          x: anchor[0],\n          xunits: 'pixels',\n          y: size[1] - anchor[1],\n          yunits: 'pixels',\n        };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  let scale = style.getScaleArray()[0];\n  let imageSize = size;\n  if (imageSize === null) {\n    imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n  }\n  if (imageSize.length == 2) {\n    const resizeScale = scaleForSize(imageSize);\n    scale = scale / resizeScale;\n  }\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const color = style.getColor();\n  if (color) {\n    properties['color'] = color;\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'scale',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LABEL_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'width']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'width': makeChildAppender(writeDecimalTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': Number(style.getWidth()) || 1,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LINE_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry',\n};\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GEOMETRY_NODE_FACTORY = function (value, objectStack, nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      parentNode.namespaceURI,\n      GEOMETRY_TYPE_TO_NODENAME[\n        /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType()\n      ]\n    );\n  }\n};\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'GeometryCollection': makeChildAppender(writeMultiGeometry),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n  let geometries = [];\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type === 'GeometryCollection') {\n    /** @type {GeometryCollection} */ (geometry)\n      .getGeometriesArrayRecursive()\n      .forEach(function (geometry) {\n        const type = geometry.getType();\n        if (type === 'MultiPoint') {\n          geometries = geometries.concat(\n            /** @type {MultiPoint} */ (geometry).getPoints()\n          );\n        } else if (type === 'MultiLineString') {\n          geometries = geometries.concat(\n            /** @type {MultiLineString} */ (geometry).getLineStrings()\n          );\n        } else if (type === 'MultiPolygon') {\n          geometries = geometries.concat(\n            /** @type {MultiPolygon} */ (geometry).getPolygons()\n          );\n        } else if (\n          type === 'Point' ||\n          type === 'LineString' ||\n          type === 'Polygon'\n        ) {\n          geometries.push(geometry);\n        } else {\n          throw new Error('Unknown geometry type');\n        }\n      });\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type === 'MultiPoint') {\n    geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type === 'MultiLineString') {\n    geometries = /** @type {MultiLineString} */ (geometry).getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type === 'MultiPolygon') {\n    geometries = /** @type {MultiPolygon} */ (geometry).getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    throw new Error('Unknown geometry type');\n  }\n  pushSerializeAndPop(\n    context,\n    MULTI_GEOMETRY_SERIALIZERS,\n    factory,\n    geometries,\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    BOUNDARY_IS_SERIALIZERS,\n    LINEAR_RING_NODE_FACTORY,\n    [linearRing],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': makeChildAppender(writeExtendedData),\n  'MultiGeometry': makeChildAppender(writeMultiGeometry),\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'Style': makeChildAppender(writeStyle),\n  'address': makeChildAppender(writeStringTextNode),\n  'description': makeChildAppender(writeStringTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'open': makeChildAppender(writeBooleanTextNode),\n  'phoneNumber': makeChildAppender(writeStringTextNode),\n  'styleUrl': makeChildAppender(writeStringTextNode),\n  'visibility': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'open',\n  'visibility',\n  'address',\n  'phoneNumber',\n  'description',\n  'styleUrl',\n  'Style',\n]);\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', /** @type {string} */ (feature.getId()));\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {\n    'address': 1,\n    'description': 1,\n    'name': 1,\n    'open': 1,\n    'phoneNumber': 1,\n    'styleUrl': 1,\n    'visibility': 1,\n  };\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {})\n    .sort()\n    .filter(function (v) {\n      return !filter[v];\n    });\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction(feature, 0);\n    if (styles) {\n      const styleArray = Array.isArray(styles) ? styles : [styles];\n      let pointStyles = styleArray;\n      if (feature.getGeometry()) {\n        pointStyles = styleArray.filter(function (style) {\n          const geometry = style.getGeometryFunction()(feature);\n          if (geometry) {\n            const type = geometry.getType();\n            if (type === 'GeometryCollection') {\n              return /** @type {GeometryCollection} */ (geometry)\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type === 'Point' || type === 'MultiPoint';\n                }).length;\n            }\n            return type === 'Point' || type === 'MultiPoint';\n          }\n        });\n        ('Point');\n      }\n      if (this.writeStyles_) {\n        let lineStyles = styleArray;\n        let polyStyles = styleArray;\n        if (feature.getGeometry()) {\n          lineStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === 'GeometryCollection') {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return type === 'LineString' || type === 'MultiLineString';\n                  }).length;\n              }\n              return type === 'LineString' || type === 'MultiLineString';\n            }\n          });\n          polyStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === 'GeometryCollection') {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return type === 'Polygon' || type === 'MultiPolygon';\n                  }).length;\n              }\n              return type === 'Polygon' || type === 'MultiPolygon';\n            }\n          });\n        }\n        properties['Style'] = {\n          pointStyles: pointStyles,\n          lineStyles: lineStyles,\n          polyStyles: polyStyles,\n        };\n      }\n      if (pointStyles.length && properties['name'] === undefined) {\n        const textStyle = pointStyles[0].getText();\n        if (textStyle) {\n          properties['name'] = textStyle.getText();\n        }\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n\n  if (keys.length > 0) {\n    const sequence = makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    pushSerializeAndPop(\n      context,\n      PLACEMARK_SERIALIZERS,\n      EXTENDEDDATA_NODE_FACTORY,\n      [namesAndValues],\n      objectStack\n    );\n  }\n\n  // serialize geometry\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformGeometryWithOptions(geometry, true, options);\n  }\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    GEOMETRY_NODE_FACTORY,\n    [geometry],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'extrude',\n  'tessellate',\n  'altitudeMode',\n  'coordinates',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeChildAppender(writeBooleanTextNode),\n  'tessellate': makeChildAppender(writeBooleanTextNode),\n  'altitudeMode': makeChildAppender(writeStringTextNode),\n  'coordinates': makeChildAppender(writeCoordinatesTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PRIMITIVE_GEOMETRY_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'fill',\n  'outline',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n  'innerBoundaryIs': makeChildAppender(writeBoundaryIs),\n});\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n/**\n * @param {Element} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  // inner rings\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    INNER_BOUNDARY_NODE_FACTORY,\n    linearRings,\n    objectStack\n  );\n  // outer ring\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    OUTER_BOUNDARY_NODE_FACTORY,\n    [outerRing],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'fill': makeChildAppender(writeBooleanTextNode),\n  'outline': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const fill = style.getFill();\n  const stroke = style.getStroke();\n  const properties = {\n    'color': fill ? fill.getColor() : undefined,\n    'fill': fill ? undefined : false,\n    'outline': stroke ? undefined : false,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = POLY_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    POLY_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'IconStyle',\n  'LabelStyle',\n  'LineStyle',\n  'PolyStyle',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': makeChildAppender(writeIconStyle),\n  'LabelStyle': makeChildAppender(writeLabelStyle),\n  'LineStyle': makeChildAppender(writeLineStyle),\n  'PolyStyle': makeChildAppender(writePolyStyle),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Object<string, Array<Style>>} styles Styles.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, styles, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  if (styles.pointStyles.length) {\n    const textStyle = styles.pointStyles[0].getText();\n    if (textStyle) {\n      properties['LabelStyle'] = textStyle;\n    }\n    const imageStyle = styles.pointStyles[0].getImage();\n    if (\n      imageStyle &&\n      typeof (/** @type {?} */ (imageStyle).getSrc) === 'function'\n    ) {\n      properties['IconStyle'] = imageStyle;\n    }\n  }\n  if (styles.lineStyles.length) {\n    const strokeStyle = styles.lineStyles[0].getStroke();\n    if (strokeStyle) {\n      properties['LineStyle'] = strokeStyle;\n    }\n  }\n  if (styles.polyStyles.length) {\n    const strokeStyle = styles.polyStyles[0].getStroke();\n    if (strokeStyle && !properties['LineStyle']) {\n      properties['LineStyle'] = strokeStyle;\n    }\n    properties['PolyStyle'] = styles.polyStyles[0];\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', String(vec2.x));\n  node.setAttribute('y', String(vec2.y));\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\nexport default KML;\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos;\n        var pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return readUtf8TextDecoder(this.buf, pos, end);\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport {get} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options} [options] Options.\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    /**\n     * @private\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass_ = options.featureClass\n      ? options.featureClass\n      : RenderFeature;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1]\n          );\n          coordsLen += 2;\n        }\n      } else {\n        throw new Error('Invalid command found in the PBF');\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(\n        geometryType,\n        flatCoordinates,\n        ends,\n        2,\n        values,\n        id\n      );\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n            ? new LineString(flatCoordinates, 'XY')\n            : geometryType === 'MultiPoint'\n            ? new MultiPoint(flatCoordinates, 'XY')\n            : geometryType === 'MultiLineString'\n            ? new MultiLineString(flatCoordinates, 'XY', ends)\n            : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass_\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return feature;\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return features;\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n          ? pbf.readFloat()\n          : tag === 3\n          ? pbf.readDouble()\n          : tag === 4\n          ? pbf.readVarint64()\n          : tag === 5\n          ? pbf.readVarint()\n          : tag === 6\n          ? pbf.readSVarint()\n          : tag === 7\n          ? pbf.readBoolean()\n          : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../render/Feature.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../render/Feature.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/format/OSMXML\n */\n// FIXME add typedef for stack state objects\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport XMLFeature from './XMLFeature.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {makeStructureNS, pushParseAndPop} from '../xml.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @const\n * @type {Array<null>}\n */\nconst NAMESPACE_URIS = [null];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WAY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'nd': readNd,\n  'tag': readTag,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'node': readNode,\n  'way': readWay,\n});\n\n/**\n * @classdesc\n * Feature format for reading data in the\n * [OSMXML format](https://wiki.openstreetmap.org/wiki/OSM_XML).\n *\n * @api\n */\nclass OSMXML extends XMLFeature {\n  constructor() {\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    options = this.getReadOptions(node, options);\n    if (node.localName == 'osm') {\n      const state = pushParseAndPop(\n        {\n          nodes: {},\n          ways: [],\n          features: [],\n        },\n        PARSERS,\n        node,\n        [options]\n      );\n      // parse nodes in ways\n      for (let j = 0; j < state.ways.length; j++) {\n        const values = /** @type {Object} */ (state.ways[j]);\n        /** @type {Array<number>} */\n        const flatCoordinates = values.flatCoordinates;\n        if (!flatCoordinates.length) {\n          for (let i = 0, ii = values.ndrefs.length; i < ii; i++) {\n            const point = state.nodes[values.ndrefs[i]];\n            extend(flatCoordinates, point);\n          }\n        }\n        let geometry;\n        if (values.ndrefs[0] == values.ndrefs[values.ndrefs.length - 1]) {\n          // closed way\n          geometry = new Polygon(flatCoordinates, 'XY', [\n            flatCoordinates.length,\n          ]);\n        } else {\n          geometry = new LineString(flatCoordinates, 'XY');\n        }\n        transformGeometryWithOptions(geometry, false, options);\n        const feature = new Feature(geometry);\n        if (values.id !== undefined) {\n          feature.setId(values.id);\n        }\n        feature.setProperties(values.tags, true);\n        state.features.push(feature);\n      }\n      if (state.features) {\n        return state.features;\n      }\n    }\n    return [];\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'tag': readTag,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNode(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const id = node.getAttribute('id');\n  /** @type {import(\"../coordinate.js\").Coordinate} */\n  const coordinates = [\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')),\n  ];\n  state.nodes[id] = coordinates;\n\n  const values = pushParseAndPop(\n    {\n      tags: {},\n    },\n    NODE_PARSERS,\n    node,\n    objectStack\n  );\n  if (!isEmpty(values.tags)) {\n    const geometry = new Point(coordinates);\n    transformGeometryWithOptions(geometry, false, options);\n    const feature = new Feature(geometry);\n    if (id !== undefined) {\n      feature.setId(id);\n    }\n    feature.setProperties(values.tags, true);\n    state.features.push(feature);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readWay(node, objectStack) {\n  const id = node.getAttribute('id');\n  const values = pushParseAndPop(\n    {\n      id: id,\n      ndrefs: [],\n      flatCoordinates: [],\n      tags: {},\n    },\n    WAY_PARSERS,\n    node,\n    objectStack\n  );\n  const state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  state.ways.push(values);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNd(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values.ndrefs.push(node.getAttribute('ref'));\n  if (node.hasAttribute('lon') && node.hasAttribute('lat')) {\n    values.flatCoordinates.push(parseFloat(node.getAttribute('lon')));\n    values.flatCoordinates.push(parseFloat(node.getAttribute('lat')));\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readTag(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values.tags[node.getAttribute('k')] = node.getAttribute('v');\n}\n\nexport default OSMXML;\n","/**\n * @module ol/format/XML\n */\nimport {abstract} from '../util.js';\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nclass XML {\n  /**\n   * Read the source document.\n   *\n   * @param {Document|Element|string} source The XML source.\n   * @return {Object|null} An object representing the source.\n   * @api\n   */\n  read(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Object|null} Object\n   */\n  readFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   */\n  readFromNode(node) {\n    abstract();\n  }\n}\n\nexport default XML;\n","/**\n * @module ol/format/xlink\n */\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n/**\n * @param {Element} node Node.\n * @return {string|null} href.\n */\nexport function readHref(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n","/**\n * @module ol/format/OWS\n */\nimport XML from './XML.js';\nimport {\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readHref} from './xlink.js';\nimport {readString} from './xsd.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n  'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n  'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata),\n});\n\nclass OWS extends XML {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   */\n  readFromNode(node) {\n    const owsObject = pushParseAndPop({}, PARSERS, node, []);\n    return owsObject ? owsObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DeliveryPoint': makeObjectPropertySetter(readString),\n  'City': makeObjectPropertySetter(readString),\n  'AdministrativeArea': makeObjectPropertySetter(readString),\n  'PostalCode': makeObjectPropertySetter(readString),\n  'Country': makeObjectPropertySetter(readString),\n  'ElectronicMailAddress': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ALLOWED_VALUES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Value': makeObjectPropertyPusher(readValue),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONSTRAINT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'AllowedValues': makeObjectPropertySetter(readAllowedValues),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_INFO_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Phone': makeObjectPropertySetter(readPhone),\n  'Address': makeObjectPropertySetter(readAddress),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DCP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'HTTP': makeObjectPropertySetter(readHttp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Get': makeObjectPropertyPusher(readGet),\n  'Post': undefined, // TODO\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DCP': makeObjectPropertySetter(readDcp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATIONS_METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Operation': readOperation,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PHONE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Voice': makeObjectPropertySetter(readString),\n  'Facsimile': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REQUEST_METHOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Constraint': makeObjectPropertyPusher(readConstraint),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_CONTACT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IndividualName': makeObjectPropertySetter(readString),\n  'PositionName': makeObjectPropertySetter(readString),\n  'ContactInfo': makeObjectPropertySetter(readContactInfo),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_IDENTIFICATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Abstract': makeObjectPropertySetter(readString),\n  'AccessConstraints': makeObjectPropertySetter(readString),\n  'Fees': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'ServiceTypeVersion': makeObjectPropertySetter(readString),\n  'ServiceType': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PROVIDER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ProviderName': makeObjectPropertySetter(readString),\n  'ProviderSite': makeObjectPropertySetter(readHref),\n  'ServiceContact': makeObjectPropertySetter(readServiceContact),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({}, ADDRESS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({}, ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({'name': name}, CONSTRAINT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({}, DCP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  const href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop(\n    {'href': href},\n    REQUEST_METHOD_PARSERS,\n    node,\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = pushParseAndPop({}, OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  object[name] = value;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONS_METADATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({}, PHONE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_IDENTIFICATION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_CONTACT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PROVIDER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\n\nexport default OWS;\n","/**\n * @module ol/format/Polyline\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport TextFeature from './TextFeature.js';\nimport {flipXY} from '../geom/flat/flip.js';\nimport {get as getProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the format reader.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the Encoded\n * Polyline Algorithm Format.\n *\n * When reading features, the coordinates are assumed to be in two dimensions\n * and in [latitude, longitude] order.\n *\n * As Polyline sources contain a single feature,\n * {@link module:ol/format/Polyline~Polyline#readFeatures} will return the\n * feature in an array.\n *\n * @api\n */\nclass Polyline extends TextFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.factor_ = options.factor ? options.factor : 1e5;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    const geometry = this.readGeometryFromText(text, options);\n    return new Feature(geometry);\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    const feature = this.readFeatureFromText(text, options);\n    return [feature];\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, options) {\n    const stride = getStrideForLayout(this.geometryLayout_);\n    const flatCoordinates = decodeDeltas(text, stride, this.factor_);\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    const coordinates = inflateCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    const lineString = new LineString(coordinates, this.geometryLayout_);\n\n    return transformGeometryWithOptions(\n      lineString,\n      false,\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default<LineString>} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, options) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, options);\n    }\n    throw new Error('Expected `feature` to have a geometry');\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default<LineString>>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, options) {\n    return this.writeFeatureText(features[0], options);\n  }\n\n  /**\n   * @param {LineString} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, options) {\n    geometry =\n      /** @type {LineString} */\n      (\n        transformGeometryWithOptions(geometry, true, this.adaptOptions(options))\n      );\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    return encodeDeltas(flatCoordinates, stride, this.factor_);\n  }\n}\n\n/**\n * Encode a list of n-dimensional points and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of n-dimensional points.\n * @param {number} stride The number of dimension of the points in the list.\n * @param {number} [factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeDeltas(numbers, stride, factor) {\n  factor = factor ? factor : 1e5;\n  let d;\n\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      const num = numbers[i];\n      const delta = num - lastNumbers[d];\n      lastNumbers[d] = num;\n\n      numbers[i] = delta;\n    }\n  }\n\n  return encodeFloats(numbers, factor);\n}\n\n/**\n * Decode a list of n-dimensional points from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} stride The number of dimension of the points in the\n *     encoded string.\n * @param {number} [factor] The factor by which the resulting numbers will\n *     be divided. Default is `1e5`.\n * @return {Array<number>} A list of n-dimensional points.\n * @api\n */\nexport function decodeDeltas(encoded, stride, factor) {\n  factor = factor ? factor : 1e5;\n  let d;\n\n  /** @type {Array<number>} */\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  const numbers = decodeFloats(encoded, factor);\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      lastNumbers[d] += numbers[i];\n\n      numbers[i] = lastNumbers[d];\n    }\n  }\n\n  return numbers;\n}\n\n/**\n * Encode a list of floating point numbers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of floating point numbers.\n * @param {number} [factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeFloats(numbers, factor) {\n  factor = factor ? factor : 1e5;\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] = Math.round(numbers[i] * factor);\n  }\n\n  return encodeSignedIntegers(numbers);\n}\n\n/**\n * Decode a list of floating point numbers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} [factor] The factor by which the result will be divided.\n *     Default is `1e5`.\n * @return {Array<number>} A list of floating point numbers.\n * @api\n */\nexport function decodeFloats(encoded, factor) {\n  factor = factor ? factor : 1e5;\n  const numbers = decodeSignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] /= factor;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of signed integers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of signed integers.\n * @return {string} The encoded string.\n */\nexport function encodeSignedIntegers(numbers) {\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num < 0 ? ~(num << 1) : num << 1;\n  }\n  return encodeUnsignedIntegers(numbers);\n}\n\n/**\n * Decode a list of signed integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of signed integers.\n */\nexport function decodeSignedIntegers(encoded) {\n  const numbers = decodeUnsignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num & 1 ? ~(num >> 1) : num >> 1;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of unsigned integers and return an encoded string\n *\n * @param {Array<number>} numbers A list of unsigned integers.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedIntegers(numbers) {\n  let encoded = '';\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    encoded += encodeUnsignedInteger(numbers[i]);\n  }\n  return encoded;\n}\n\n/**\n * Decode a list of unsigned integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of unsigned integers.\n */\nexport function decodeUnsignedIntegers(encoded) {\n  const numbers = [];\n  let current = 0;\n  let shift = 0;\n  for (let i = 0, ii = encoded.length; i < ii; ++i) {\n    const b = encoded.charCodeAt(i) - 63;\n    current |= (b & 0x1f) << shift;\n    if (b < 0x20) {\n      numbers.push(current);\n      current = 0;\n      shift = 0;\n    } else {\n      shift += 5;\n    }\n  }\n  return numbers;\n}\n\n/**\n * Encode one single unsigned integer and return an encoded string\n *\n * @param {number} num Unsigned integer that should be encoded.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedInteger(num) {\n  let value,\n    encoded = '';\n  while (num >= 0x20) {\n    value = (0x20 | (num & 0x1f)) + 63;\n    encoded += String.fromCharCode(value);\n    num >>= 5;\n  }\n  value = num + 63;\n  encoded += String.fromCharCode(value);\n  return encoded;\n}\n\nexport default Polyline;\n","/**\n * @module ol/format/TopoJSON\n */\nimport Feature from '../Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"topojson-specification\").Topology} TopoJSONTopology\n * @typedef {import(\"topojson-specification\").GeometryCollection} TopoJSONGeometryCollection\n * @typedef {import(\"topojson-specification\").GeometryObject} TopoJSONGeometry\n * @typedef {import(\"topojson-specification\").Point} TopoJSONPoint\n * @typedef {import(\"topojson-specification\").MultiPoint} TopoJSONMultiPoint\n * @typedef {import(\"topojson-specification\").LineString} TopoJSONLineString\n * @typedef {import(\"topojson-specification\").MultiLineString} TopoJSONMultiLineString\n * @typedef {import(\"topojson-specification\").Polygon} TopoJSONPolygon\n * @typedef {import(\"topojson-specification\").MultiPolygon} TopoJSONMultiPolygon\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {string} [layerName] Set the name of the TopoJSON topology\n * `objects`'s children as feature property with the specified name. This means\n * that when set to `'layer'`, a topology like\n * ```\n * {\n *   \"type\": \"Topology\",\n *   \"objects\": {\n *     \"example\": {\n *       \"type\": \"GeometryCollection\",\n *       \"geometries\": []\n *     }\n *   }\n * }\n * ```\n * will result in features that have a property `'layer'` set to `'example'`.\n * When not set, no property will be added to features.\n * @property {Array<string>} [layers] Names of the TopoJSON topology's\n * `objects`'s children to read features from.  If not provided, features will\n * be read from all children.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the TopoJSON format.\n *\n * @api\n */\nclass TopoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.layerName_ = options.layerName;\n\n    /**\n     * @private\n     * @type {?Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    if (object.type == 'Topology') {\n      const topoJSONTopology = /** @type {TopoJSONTopology} */ (object);\n      let transform,\n        scale = null,\n        translate = null;\n      if (topoJSONTopology['transform']) {\n        transform = topoJSONTopology['transform'];\n        scale = transform['scale'];\n        translate = transform['translate'];\n      }\n      const arcs = topoJSONTopology['arcs'];\n      if (transform) {\n        transformArcs(arcs, scale, translate);\n      }\n      /** @type {Array<Feature>} */\n      const features = [];\n      const topoJSONFeatures = topoJSONTopology['objects'];\n      const property = this.layerName_;\n      let feature;\n      for (const objectName in topoJSONFeatures) {\n        if (this.layers_ && !this.layers_.includes(objectName)) {\n          continue;\n        }\n        if (topoJSONFeatures[objectName].type === 'GeometryCollection') {\n          feature = /** @type {TopoJSONGeometryCollection} */ (\n            topoJSONFeatures[objectName]\n          );\n          features.push.apply(\n            features,\n            readFeaturesFromGeometryCollection(\n              feature,\n              arcs,\n              scale,\n              translate,\n              property,\n              objectName,\n              options\n            )\n          );\n        } else {\n          feature = /** @type {TopoJSONGeometry} */ (\n            topoJSONFeatures[objectName]\n          );\n          features.push(\n            readFeatureFromGeometry(\n              feature,\n              arcs,\n              scale,\n              translate,\n              property,\n              objectName,\n              options\n            )\n          );\n        }\n      }\n      return features;\n    }\n    return [];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return this.dataProjection;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, function(TopoJSONGeometry, Array, ...Array=): import(\"../geom/Geometry.js\").default>}\n */\nconst GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry,\n};\n\n/**\n * Concatenate arcs into a coordinate array.\n * @param {Array<number>} indices Indices of arcs to concatenate.  Negative\n *     values indicate arcs need to be reversed.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs (already\n *     transformed).\n * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates array.\n */\nfunction concatenateArcs(indices, arcs) {\n  /** @type {Array<import(\"../coordinate.js\").Coordinate>} */\n  const coordinates = [];\n  let index;\n  for (let i = 0, ii = indices.length; i < ii; ++i) {\n    index = indices[i];\n    if (i > 0) {\n      // splicing together arcs, discard last point\n      coordinates.pop();\n    }\n    if (index >= 0) {\n      // forward arc\n      const arc = arcs[index];\n      for (let j = 0, jj = arc.length; j < jj; ++j) {\n        coordinates.push(arc[j].slice(0));\n      }\n    } else {\n      // reverse arc\n      const arc = arcs[~index];\n      for (let j = arc.length - 1; j >= 0; --j) {\n        coordinates.push(arc[j].slice(0));\n      }\n    }\n  }\n  return coordinates;\n}\n\n/**\n * Create a point from a TopoJSON geometry object.\n *\n * @param {TopoJSONPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {Point} Geometry.\n */\nfunction readPointGeometry(object, scale, translate) {\n  const coordinates = object['coordinates'];\n  if (scale && translate) {\n    transformVertex(coordinates, scale, translate);\n  }\n  return new Point(coordinates);\n}\n\n/**\n * Create a multi-point from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {MultiPoint} Geometry.\n */\nfunction readMultiPointGeometry(object, scale, translate) {\n  const coordinates = object['coordinates'];\n  if (scale && translate) {\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      transformVertex(coordinates[i], scale, translate);\n    }\n  }\n  return new MultiPoint(coordinates);\n}\n\n/**\n * Create a linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {LineString} Geometry.\n */\nfunction readLineStringGeometry(object, arcs) {\n  const coordinates = concatenateArcs(object['arcs'], arcs);\n  return new LineString(coordinates);\n}\n\n/**\n * Create a multi-linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiLineString} Geometry.\n */\nfunction readMultiLineStringGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n  }\n  return new MultiLineString(coordinates);\n}\n\n/**\n * Create a polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {Polygon} Geometry.\n */\nfunction readPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n  }\n  return new Polygon(coordinates);\n}\n\n/**\n * Create a multi-polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiPolygon} Geometry.\n */\nfunction readMultiPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    // for each polygon\n    const polyArray = object['arcs'][i];\n    const ringCoords = [];\n    for (let j = 0, jj = polyArray.length; j < jj; ++j) {\n      // for each ring\n      ringCoords[j] = concatenateArcs(polyArray[j], arcs);\n    }\n    coordinates[i] = ringCoords;\n  }\n  return new MultiPolygon(coordinates);\n}\n\n/**\n * Create features from a TopoJSON GeometryCollection object.\n *\n * @param {TopoJSONGeometryCollection} collection TopoJSON Geometry\n *     object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {Array<Feature>} Array of features.\n */\nfunction readFeaturesFromGeometryCollection(\n  collection,\n  arcs,\n  scale,\n  translate,\n  property,\n  name,\n  options\n) {\n  const geometries = collection['geometries'];\n  const features = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    features[i] = readFeatureFromGeometry(\n      geometries[i],\n      arcs,\n      scale,\n      translate,\n      property,\n      name,\n      options\n    );\n  }\n  return features;\n}\n\n/**\n * Create a feature from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON geometry object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {Feature} Feature.\n */\nfunction readFeatureFromGeometry(\n  object,\n  arcs,\n  scale,\n  translate,\n  property,\n  name,\n  options\n) {\n  let geometry = null;\n  const type = object.type;\n  if (type) {\n    const geometryReader = GEOMETRY_READERS[type];\n    if (type === 'Point' || type === 'MultiPoint') {\n      geometry = geometryReader(object, scale, translate);\n    } else {\n      geometry = geometryReader(object, arcs);\n    }\n    geometry = transformGeometryWithOptions(geometry, false, options);\n  }\n  const feature = new Feature({geometry: geometry});\n  if (object.id !== undefined) {\n    feature.setId(object.id);\n  }\n  let properties = object.properties;\n  if (property) {\n    if (!properties) {\n      properties = {};\n    }\n    properties[property] = name;\n  }\n  if (properties) {\n    feature.setProperties(properties, true);\n  }\n  return feature;\n}\n\n/**\n * Apply a linear transform to array of arcs.  The provided array of arcs is\n * modified in place.\n *\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArcs(arcs, scale, translate) {\n  for (let i = 0, ii = arcs.length; i < ii; ++i) {\n    transformArc(arcs[i], scale, translate);\n  }\n}\n\n/**\n * Apply a linear transform to an arc.  The provided arc is modified in place.\n *\n * @param {Array<import(\"../coordinate.js\").Coordinate>} arc Arc.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArc(arc, scale, translate) {\n  let x = 0;\n  let y = 0;\n  for (let i = 0, ii = arc.length; i < ii; ++i) {\n    const vertex = arc[i];\n    x += vertex[0];\n    y += vertex[1];\n    vertex[0] = x;\n    vertex[1] = y;\n    transformVertex(vertex, scale, translate);\n  }\n}\n\n/**\n * Apply a linear transform to a vertex.  The provided vertex is modified in\n * place.\n *\n * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformVertex(vertex, scale, translate) {\n  vertex[0] = vertex[0] * scale[0] + translate[0];\n  vertex[1] = vertex[1] * scale[1] + translate[1];\n}\n\nexport default TopoJSON;\n","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport Feature from '../Feature.js';\nimport Geometry from '../geom/Geometry.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport XMLFeature from './XMLFeature.js';\nimport {extend} from '../array.js';\nimport {\n  getAllTextContent,\n  getAttributeNS,\n  makeArrayPusher,\n  makeReplacer,\n  parseNode,\n  pushParseAndPop,\n} from '../xml.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\n\n/**\n * @const\n * @type {string}\n */\nexport const GMLNS = 'http://www.opengis.net/gml';\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc.\n *\n * @const\n * @type {RegExp}\n */\nconst ONLY_WHITESPACE_RE = /^\\s*$/;\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] Feature\n * namespace. If not defined will be derived from GML. If multiple\n * feature types have been configured which come from different feature\n * namespaces, this will be an object with the keys being the prefixes used\n * in the entries of featureType array. The values of the object will be the\n * feature namespaces themselves. So for instance there might be a featureType\n * item `topp:states` in the `featureType` array and then there will be a key\n * `topp` in the featureNS object with value `http://www.openplans.org/topp`.\n * @property {Array<string>|string} [featureType] Feature type(s) to parse.\n * If multiple feature types need to be configured\n * which come from different feature namespaces, `featureNS` will be an object\n * with the keys being the prefixes used in the entries of featureType array.\n * The values of the object will be the feature namespaces themselves.\n * So for instance there might be a featureType item `topp:states` and then\n * there will be a key named `topp` in the featureNS object with value\n * `http://www.openplans.org/topp`.\n * @property {string} [srsName] srsName to use when writing geometries.\n * @property {boolean} [surface=false] Write gml:Surface instead of gml:Polygon\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [curve=false] Write gml:Curve instead of gml:LineString\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [multiCurve=true] Write gml:MultiCurve instead of gml:MultiLineString.\n * Since the latter is deprecated in GML 3.\n * @property {boolean} [multiSurface=true] Write gml:multiSurface instead of\n * gml:MultiPolygon. Since the latter is deprecated in GML 3.\n * @property {string} [schemaLocation] Optional schemaLocation to use when\n * writing out the GML, this will override the default provided.\n * @property {boolean} [hasZ=false] If coordinates have a Z value.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes GML2 and GML3.\n *\n * @abstract\n * @api\n */\nclass GMLBase extends XMLFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @protected\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType = options.featureType;\n\n    /**\n     * @protected\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS = options.featureNS;\n\n    /**\n     * @protected\n     * @type {string|undefined}\n     */\n    this.srsName = options.srsName;\n\n    /**\n     * @protected\n     * @type {string}\n     */\n    this.schemaLocation = '';\n\n    /**\n     * @type {Object<string, Object<string, Object>>}\n     */\n    this.FEATURE_COLLECTION_PARSERS = {};\n    this.FEATURE_COLLECTION_PARSERS[this.namespace] = {\n      'featureMember': makeArrayPusher(this.readFeaturesInternal),\n      'featureMembers': makeReplacer(this.readFeaturesInternal),\n    };\n\n    this.supportedMediaTypes = ['application/gml+xml'];\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<Feature> | undefined} Features.\n   */\n  readFeaturesInternal(node, objectStack) {\n    const localName = node.localName;\n    let features = null;\n    if (localName == 'FeatureCollection') {\n      features = pushParseAndPop(\n        [],\n        this.FEATURE_COLLECTION_PARSERS,\n        node,\n        objectStack,\n        this\n      );\n    } else if (\n      localName == 'featureMembers' ||\n      localName == 'featureMember' ||\n      localName == 'member'\n    ) {\n      const context = objectStack[0];\n      let featureType = context['featureType'];\n      let featureNS = context['featureNS'];\n      const prefix = 'p';\n      const defaultPrefix = 'p0';\n      if (!featureType && node.childNodes) {\n        (featureType = []), (featureNS = {});\n        for (let i = 0, ii = node.childNodes.length; i < ii; ++i) {\n          const child = /** @type {Element} */ (node.childNodes[i]);\n          if (child.nodeType === 1) {\n            const ft = child.nodeName.split(':').pop();\n            if (!featureType.includes(ft)) {\n              let key = '';\n              let count = 0;\n              const uri = child.namespaceURI;\n              for (const candidate in featureNS) {\n                if (featureNS[candidate] === uri) {\n                  key = candidate;\n                  break;\n                }\n                ++count;\n              }\n              if (!key) {\n                key = prefix + count;\n                featureNS[key] = uri;\n              }\n              featureType.push(key + ':' + ft);\n            }\n          }\n        }\n        if (localName != 'featureMember') {\n          // recheck featureType for each featureMember\n          context['featureType'] = featureType;\n          context['featureNS'] = featureNS;\n        }\n      }\n      if (typeof featureNS === 'string') {\n        const ns = featureNS;\n        featureNS = {};\n        featureNS[defaultPrefix] = ns;\n      }\n      /** @type {Object<string, Object<string, import(\"../xml.js\").Parser>>} */\n      const parsersNS = {};\n      const featureTypes = Array.isArray(featureType)\n        ? featureType\n        : [featureType];\n      for (const p in featureNS) {\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        const parsers = {};\n        for (let i = 0, ii = featureTypes.length; i < ii; ++i) {\n          const featurePrefix = featureTypes[i].includes(':')\n            ? featureTypes[i].split(':')[0]\n            : defaultPrefix;\n          if (featurePrefix === p) {\n            parsers[featureTypes[i].split(':').pop()] =\n              localName == 'featureMembers'\n                ? makeArrayPusher(this.readFeatureElement, this)\n                : makeReplacer(this.readFeatureElement, this);\n          }\n        }\n        parsersNS[featureNS[p]] = parsers;\n      }\n      if (localName == 'featureMember' || localName == 'member') {\n        features = pushParseAndPop(undefined, parsersNS, node, objectStack);\n      } else {\n        features = pushParseAndPop([], parsersNS, node, objectStack);\n      }\n    }\n    if (features === null) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent|undefined} Geometry.\n   */\n  readGeometryOrExtent(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    context['srsName'] = node.firstElementChild.getAttribute('srsName');\n    context['srsDimension'] =\n      node.firstElementChild.getAttribute('srsDimension');\n    return pushParseAndPop(\n      null,\n      this.GEOMETRY_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Geometry.\n   */\n  readExtentElement(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    const extent = /** @type {import(\"../extent.js\").Extent} */ (\n      this.readGeometryOrExtent(node, objectStack)\n    );\n    return extent ? transformExtentWithOptions(extent, context) : undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../geom/Geometry.js\").default|undefined} Geometry.\n   */\n  readGeometryElement(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    const geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      this.readGeometryOrExtent(node, objectStack)\n    );\n    return geometry\n      ? transformGeometryWithOptions(geometry, false, context)\n      : undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {boolean} asFeature whether result should be wrapped as a feature.\n   * @return {Feature|Object} Feature\n   */\n  readFeatureElementInternal(node, objectStack, asFeature) {\n    let geometryName;\n    const values = {};\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      let value;\n      const localName = n.localName;\n      // first, check if it is simple attribute\n      if (\n        n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n          (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))\n      ) {\n        value = getAllTextContent(n, false);\n        if (ONLY_WHITESPACE_RE.test(value)) {\n          value = undefined;\n        }\n      } else {\n        if (asFeature) {\n          //if feature, try it as a geometry or extent\n          value =\n            localName === 'boundedBy'\n              ? this.readExtentElement(n, objectStack)\n              : this.readGeometryElement(n, objectStack);\n        }\n        if (!value) {\n          //if not a geometry or not a feature, treat it as a complex attribute\n          value = this.readFeatureElementInternal(n, objectStack, false);\n        } else if (localName !== 'boundedBy') {\n          // boundedBy is an extent and must not be considered as a geometry\n          geometryName = localName;\n        }\n      }\n\n      const len = n.attributes.length;\n      if (len > 0 && !(value instanceof Geometry)) {\n        value = {_content_: value};\n        for (let i = 0; i < len; i++) {\n          const attName = n.attributes[i].name;\n          value[attName] = n.attributes[i].value;\n        }\n      }\n\n      if (values[localName]) {\n        if (!(values[localName] instanceof Array)) {\n          values[localName] = [values[localName]];\n        }\n        values[localName].push(value);\n      } else {\n        values[localName] = value;\n      }\n    }\n    if (!asFeature) {\n      return values;\n    }\n    const feature = new Feature(values);\n    if (geometryName) {\n      feature.setGeometryName(geometryName);\n    }\n    const fid =\n      node.getAttribute('fid') || getAttributeNS(node, this.namespace, 'id');\n    if (fid) {\n      feature.setId(fid);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Feature} Feature.\n   */\n  readFeatureElement(node, objectStack) {\n    return this.readFeatureElementInternal(node, objectStack, true);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Point|undefined} Point.\n   */\n  readPoint(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      return new Point(flatCoordinates, 'XYZ');\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPoint|undefined} MultiPoint.\n   */\n  readMultiPoint(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const coordinates = pushParseAndPop(\n      [],\n      this.MULTIPOINT_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (coordinates) {\n      return new MultiPoint(coordinates);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  readMultiLineString(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTILINESTRING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (lineStrings) {\n      return new MultiLineString(lineStrings);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiPolygon(node, objectStack) {\n    /** @type {Array<Polygon>} */\n    const polygons = pushParseAndPop(\n      [],\n      this.MULTIPOLYGON_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  pointMemberParser(node, objectStack) {\n    parseNode(this.POINTMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  lineStringMemberParser(node, objectStack) {\n    parseNode(this.LINESTRINGMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  polygonMemberParser(node, objectStack) {\n    parseNode(this.POLYGONMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n  readLineString(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, 'XYZ');\n      return lineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} LinearRing flat coordinates.\n   */\n  readFlatLinearRing(node, objectStack) {\n    const ring = pushParseAndPop(\n      null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (ring) {\n      return ring;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LinearRing|undefined} LinearRing.\n   */\n  readLinearRing(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      return new LinearRing(flatCoordinates, 'XYZ');\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n  readPolygon(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const flatLinearRings = pushParseAndPop(\n      [null],\n      this.FLAT_LINEAR_RINGS_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, 'XYZ', ends);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>} Flat coordinates.\n   */\n  readFlatCoordinatesFromNode(node, objectStack) {\n    return pushParseAndPop(\n      null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, options) {\n    const geometry = this.readGeometryElement(node, [\n      this.getReadOptions(node, options ? options : {}),\n    ]);\n    return geometry ? geometry : null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    const internalOptions = {\n      featureType: this.featureType,\n      featureNS: this.featureNS,\n    };\n    if (internalOptions) {\n      Object.assign(internalOptions, this.getReadOptions(node, options));\n    }\n    const features = this.readFeaturesInternal(node, [internalOptions]);\n    return features || [];\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return getProjection(\n      this.srsName\n        ? this.srsName\n        : node.firstElementChild.getAttribute('srsName')\n    );\n  }\n}\n\nGMLBase.prototype.namespace = GMLNS;\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTIPOINT_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser\n    ),\n    'lineStringMembers': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.POINTMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n  },\n};\n\nexport default GMLBase;\n","/**\n * @module ol/format/GML2\n */\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  createElementNS,\n  getAllTextContent,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n  makeSimpleNodeFactory,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {createOrUpdate} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport {writeStringTextNode} from './xsd.js';\n\n/**\n * @const\n * @type {string}\n */\nconst schemaLocation =\n  GMLNS + ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember',\n};\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @api\n */\nclass GML2 extends GMLBase {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    this.FEATURE_COLLECTION_PARSERS[GMLNS]['featureMember'] = makeArrayPusher(\n      this.readFeaturesInternal\n    );\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : schemaLocation;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatCoordinates(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n      objectStack[0]\n    );\n    const containerSrs = context['srsName'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      if (proj) {\n        axisOrientation = proj.getAxisOrientation();\n      }\n    }\n    const coordsGroups = s.trim().split(/\\s+/);\n    const flatCoordinates = [];\n    for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n      const coords = coordsGroups[i].split(/,+/);\n      const x = parseFloat(coords[0]);\n      const y = parseFloat(coords[1]);\n      const z = coords.length === 3 ? parseFloat(coords[2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  readBox(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.BOX_PARSERS_,\n      node,\n      objectStack,\n      this\n    );\n    return createOrUpdate(\n      flatCoordinates[1][0],\n      flatCoordinates[1][1],\n      flatCoordinates[1][3],\n      flatCoordinates[1][4]\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  innerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  outerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const multiCurve = context['multiCurve'];\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        value\n      ).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS('http://www.opengis.net/gml', nodeName);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const keys = [];\n    const values = [];\n    if (feature.hasProperties()) {\n      const properties = feature.getProperties();\n      for (const key in properties) {\n        const value = properties[key];\n        if (value !== null) {\n          keys.push(key);\n          values.push(value);\n          if (\n            key == geometryName ||\n            typeof (/** @type {?} */ (value).getSimplifiedGeometry) ===\n              'function'\n          ) {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] = makeChildAppender(\n                this.writeGeometryElement,\n                this\n              );\n            }\n          } else {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] =\n                makeChildAppender(writeStringTextNode);\n            }\n          }\n        }\n      }\n    }\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack,\n      keys\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (\n      node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment'\n    ) {\n      const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n      node.appendChild(coordinates);\n      this.writeCoordinates_(coordinates, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLineStringOrCurveMember(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      lines,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const item = Object.assign({}, context);\n    item['node'] = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      value = transformExtentWithOptions(\n        /** @type {import(\"../extent.js\").Extent} */ (geometry),\n        context\n      );\n    } else {\n      value = transformGeometryWithOptions(\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry),\n        true,\n        context\n      );\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      this.GEOMETRY_SERIALIZERS,\n      this.GEOMETRY_NODE_FACTORY_,\n      [value],\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {string} namespaceURI XML namespace.\n   * @return {Element} coordinates node.\n   * @private\n   */\n  createCoordinatesNode_(namespaceURI) {\n    const coordinates = createElementNS(namespaceURI, 'coordinates');\n    coordinates.setAttribute('decimal', '.');\n    coordinates.setAttribute('cs', ',');\n    coordinates.setAttribute('ts', ' ');\n\n    return coordinates;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/LineString.js\").default|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCoordinates_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      const point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString(child, line, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS,\n        this.RING_NODE_FACTORY_,\n        rings,\n        objectStack,\n        undefined,\n        this\n      );\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(\n      parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs'\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeRing(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string} [srsName] Optional srsName\n   * @param {boolean} [hasZ] whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, srsName, hasZ) {\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    let coords =\n      axisOrientation.substr(0, 2) === 'en'\n        ? point[0] + ',' + point[1]\n        : point[1] + ',' + point[0];\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ',' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    const point = geometry.getCoordinates();\n    const coord = this.getCoords_(point, srsName, hasZ);\n    writeStringTextNode(coordinates, coord);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiPoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS,\n      makeSimpleNodeFactory('pointMember'),\n      points,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePointMember(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint(child, point, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLinearRing(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      polygons,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygonMember(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}),\n      this.ENVELOPE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack,\n      keys,\n      this\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      'http://www.opengis.net/gml',\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeArrayPusher(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Box': makeReplacer(GML2.prototype.readBox),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(GML2.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML2.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML2.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML2.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML2.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString\n    ),\n    'LinearRing': makeChildAppender(GML2.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Surface': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Envelope': makeChildAppender(GML2.prototype.writeEnvelope),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember\n    ),\n    'curveMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': makeChildAppender(GML2.prototype.writeRing),\n    'innerBoundaryIs': makeChildAppender(GML2.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(GML2.prototype.writePointMember),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember\n    ),\n    'polygonMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\nexport default GML2;\n","/**\n * @module ol/format/GML3\n */\nimport GML2 from './GML2.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n  makeSimpleNodeFactory,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {createOrUpdate} from '../extent.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {readNonNegativeIntegerString, writeStringTextNode} from './xsd.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\n\n/**\n * @const\n * @type {string}\n * @private\n */\nconst schemaLocation =\n  GMLNS +\n  ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n  '1.0.0/gmlsf.xsd';\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember',\n};\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @api\n */\nclass GML3 extends GMLBase {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.surface_ = options.surface !== undefined ? options.surface : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.curve_ = options.curve !== undefined ? options.curve : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiCurve_ =\n      options.multiCurve !== undefined ? options.multiCurve : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiSurface_ =\n      options.multiSurface !== undefined ? options.multiSurface : true;\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : schemaLocation;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hasZ = options.hasZ !== undefined ? options.hasZ : false;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  readMultiCurve(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTICURVE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (lineStrings) {\n      const multiLineString = new MultiLineString(lineStrings);\n      return multiLineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Polygon.\n   */\n  readFlatCurveRing(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTICURVE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    const flatCoordinates = [];\n    for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n      extend(flatCoordinates, lineStrings[i].getFlatCoordinates());\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiSurface(node, objectStack) {\n    /** @type {Array<Polygon>} */\n    const polygons = pushParseAndPop(\n      [],\n      this.MULTISURFACE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  curveMemberParser(node, objectStack) {\n    parseNode(this.CURVEMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  surfaceMemberParser(node, objectStack) {\n    parseNode(this.SURFACEMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  readPatch(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.PATCHES_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  readSegment(node, objectStack) {\n    return pushParseAndPop([], this.SEGMENTS_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  readPolygonPatch(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.FLAT_LINEAR_RINGS_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  readLineStringSegment(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  interiorParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  exteriorParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n  readSurface(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const flatLinearRings = pushParseAndPop(\n      [null],\n      this.SURFACE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, 'XYZ', ends);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n  readCurve(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.CURVE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, 'XYZ');\n      return lineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  readEnvelope(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.ENVELOPE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    return createOrUpdate(\n      flatCoordinates[1][0],\n      flatCoordinates[1][1],\n      flatCoordinates[2][0],\n      flatCoordinates[2][1]\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatPos(node, objectStack) {\n    let s = getAllTextContent(node, false);\n    const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n    /** @type {Array<number>} */\n    const flatCoordinates = [];\n    let m;\n    while ((m = re.exec(s))) {\n      flatCoordinates.push(parseFloat(m[1]));\n      s = s.substr(m[0].length);\n    }\n    if (s !== '') {\n      return undefined;\n    }\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    if (axisOrientation === 'neu') {\n      let i, ii;\n      for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n        const y = flatCoordinates[i];\n        const x = flatCoordinates[i + 1];\n        flatCoordinates[i] = x;\n        flatCoordinates[i + 1] = y;\n      }\n    }\n    const len = flatCoordinates.length;\n    if (len == 2) {\n      flatCoordinates.push(0);\n    }\n    if (len === 0) {\n      return undefined;\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatPosList(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    const contextDimension = context['srsDimension'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    const coords = s.split(/\\s+/);\n    // The \"dimension\" attribute is from the GML 3.0.1 spec.\n    let dim = 2;\n    if (node.getAttribute('srsDimension')) {\n      dim = readNonNegativeIntegerString(node.getAttribute('srsDimension'));\n    } else if (node.getAttribute('dimension')) {\n      dim = readNonNegativeIntegerString(node.getAttribute('dimension'));\n    } else if (\n      /** @type {Element} */ (node.parentNode).getAttribute('srsDimension')\n    ) {\n      dim = readNonNegativeIntegerString(\n        /** @type {Element} */ (node.parentNode).getAttribute('srsDimension')\n      );\n    } else if (contextDimension) {\n      dim = readNonNegativeIntegerString(contextDimension);\n    }\n    let x, y, z;\n    const flatCoordinates = [];\n    for (let i = 0, ii = coords.length; i < ii; i += dim) {\n      x = parseFloat(coords[i]);\n      y = parseFloat(coords[i + 1]);\n      z = dim === 3 ? parseFloat(coords[i + 2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} value Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePos_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    const point = value.getCoordinates();\n    let coords;\n    // only 2d for simple features profile\n    if (axisOrientation.substr(0, 2) === 'en') {\n      coords = point[0] + ' ' + point[1];\n    } else {\n      coords = point[1] + ' ' + point[0];\n    }\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n    writeStringTextNode(node, coords);\n  }\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string} [srsName] Optional srsName\n   * @param {boolean} [hasZ] whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, srsName, hasZ) {\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    let coords =\n      axisOrientation.substr(0, 2) === 'en'\n        ? point[0] + ' ' + point[1]\n        : point[1] + ' ' + point[0];\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePosList_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    let point;\n    for (let i = 0; i < len; ++i) {\n      point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const pos = createElementNS(node.namespaceURI, 'pos');\n    node.appendChild(pos);\n    this.writePos_(pos, geometry, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}),\n      this.ENVELOPE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack,\n      keys,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLinearRing(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const posList = createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(\n      parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'interior' : 'exterior'\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS,\n        this.RING_NODE_FACTORY_,\n        rings,\n        objectStack,\n        undefined,\n        this\n      );\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (\n      node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment'\n    ) {\n      const posList = createElementNS(node.namespaceURI, 'posList');\n      node.appendChild(posList);\n      this.writePosList_(posList, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiPolygon} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      polygons,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiPoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    const hasZ = context['hasZ'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS,\n      makeSimpleNodeFactory('pointMember'),\n      points,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiLineString} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      lines,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeRing(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygonMember(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePointMember(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint(child, point, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLineStringOrCurveMember(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString(child, line, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const item = Object.assign({}, context);\n    item['node'] = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      value = transformExtentWithOptions(\n        /** @type {import(\"../extent.js\").Extent} */ (geometry),\n        context\n      );\n    } else {\n      value = transformGeometryWithOptions(\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry),\n        true,\n        context\n      );\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      this.GEOMETRY_SERIALIZERS,\n      this.GEOMETRY_NODE_FACTORY_,\n      [value],\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const keys = [];\n    const values = [];\n    if (feature.hasProperties()) {\n      const properties = feature.getProperties();\n      for (const key in properties) {\n        const value = properties[key];\n        if (value !== null) {\n          keys.push(key);\n          values.push(value);\n          if (\n            key == geometryName ||\n            typeof (/** @type {?} */ (value).getSimplifiedGeometry) ===\n              'function'\n          ) {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] = makeChildAppender(\n                this.writeGeometryElement,\n                this\n              );\n            }\n          } else {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] =\n                makeChildAppender(writeStringTextNode);\n            }\n          }\n        }\n      }\n    }\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack,\n      keys\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeFeatureMembers_(node, features, objectStack) {\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureType = context['featureType'];\n    const featureNS = context['featureNS'];\n    /** @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>} */\n    const serializers = {};\n    serializers[featureNS] = {};\n    serializers[featureNS][featureType] = makeChildAppender(\n      this.writeFeatureElement,\n      this\n    );\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      serializers,\n      makeSimpleNodeFactory(featureType, featureNS),\n      features,\n      objectStack\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      this.namespace,\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const curve = context['curve'];\n    const multiCurve = context['multiCurve'];\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        value\n      ).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'LineString' && curve === true) {\n        nodeName = 'Curve';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS(this.namespace, nodeName);\n  }\n\n  /**\n   * Encode a geometry in GML 3.1.1 Simple Features.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeGeometryNode(geometry, options) {\n    options = this.adaptOptions(options);\n    const geom = createElementNS(this.namespace, 'geom');\n    const context = {\n      node: geom,\n      hasZ: this.hasZ,\n      srsName: this.srsName,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n    };\n    if (options) {\n      Object.assign(context, options);\n    }\n    this.writeGeometryElement(geom, geometry, [context]);\n    return geom;\n  }\n\n  /**\n   * Encode an array of features in the GML 3.1.1 format as an XML node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Element} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    const node = createElementNS(this.namespace, 'featureMembers');\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      this.schemaLocation\n    );\n    const context = {\n      srsName: this.srsName,\n      hasZ: this.hasZ,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n      featureNS: this.featureNS,\n      featureType: this.featureType,\n    };\n    if (options) {\n      Object.assign(context, options);\n    }\n    this.writeFeatureMembers_(node, features, [context]);\n    return node;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList),\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser,\n    'exterior': GML3.prototype.exteriorParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML3.prototype.readSurface),\n    'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface),\n    'Curve': makeReplacer(GML3.prototype.readCurve),\n    'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve),\n    'Envelope': makeReplacer(GML3.prototype.readEnvelope),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.MULTICURVE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser),\n    'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.MULTISURFACE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n    'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.CURVEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SURFACEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SURFACE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'patches': makeReplacer(GML3.prototype.readPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.CURVE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'segments': makeReplacer(GML3.prototype.readSegment),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.ENVELOPE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n    'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.PATCHES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SEGMENTS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': makeArrayExtender(\n      GML3.prototype.readLineStringSegment\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n    'Ring': makeReplacer(GML3.prototype.readFlatCurveRing),\n  },\n};\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing),\n    'interior': makeChildAppender(GML3.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember\n    ),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(GML3.prototype.writePointMember),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember\n    ),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML3.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString\n    ),\n    'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Envelope': makeChildAppender(GML3.prototype.writeEnvelope),\n  },\n};\n\nexport default GML3;\n","/**\n * @module ol/format/GML32\n */\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GMLBase from './GMLBase.js';\nimport {\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n} from '../xml.js';\nimport {writeStringTextNode} from '../format/xsd.js';\n\n/**\n * @classdesc Feature format for reading and writing data in the GML format\n *            version 3.2.1.\n * @api\n */\nclass GML32 extends GML3 {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : this.namespace + ' http://schemas.opengis.net/gml/3.2.1/gml.xsd';\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    objectStack[objectStack.length - 1] = Object.assign(\n      {multiCurve: true, multiSurface: true},\n      context\n    );\n    super.writeGeometryElement(node, geometry, objectStack);\n  }\n}\n\nGML32.prototype.namespace = 'http://www.opengis.net/gml/3.2';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList),\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'interior': GML3.prototype.interiorParser,\n    'exterior': GML3.prototype.exteriorParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML32.prototype.readSurface),\n    'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface),\n    'Curve': makeReplacer(GML32.prototype.readCurve),\n    'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve),\n    'Envelope': makeReplacer(GML32.prototype.readEnvelope),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTICURVE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser),\n    'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTISURFACE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n    'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.CURVEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SURFACEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SURFACE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'patches': makeReplacer(GML3.prototype.readPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.CURVE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'segments': makeReplacer(GML3.prototype.readSegment),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.ENVELOPE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n    'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.PATCHES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SEGMENTS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineStringSegment': makeArrayExtender(\n      GML3.prototype.readLineStringSegment\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTIPOINT_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTILINESTRING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser\n    ),\n    'lineStringMembers': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTIPOLYGON_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.POINTMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.LINESTRINGMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.POLYGONMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n    'Ring': makeReplacer(GML32.prototype.readFlatCurveRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing),\n    'interior': makeChildAppender(GML3.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember\n    ),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeChildAppender(GML3.prototype.writePointMember),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember\n    ),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML32.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString\n    ),\n    'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Envelope': makeChildAppender(GML3.prototype.writeEnvelope),\n  },\n};\n\nexport default GML32;\n","/**\n * @module ol/format/filter/Filter\n */\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @abstract\n */\nclass Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   */\n  constructor(tagName) {\n    /**\n     * @private\n     * @type {!string}\n     */\n    this.tagName_ = tagName;\n  }\n\n  /**\n   * The XML tag name for a filter.\n   * @return {!string} Name.\n   */\n  getTagName() {\n    return this.tagName_;\n  }\n}\n\nexport default Filter;\n","/**\n * @module ol/format/filter/LogicalNary\n */\nimport Filter from './Filter.js';\nimport {assert} from '../../asserts.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @abstract\n */\nclass LogicalNary extends Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   * @param {Array<import(\"./Filter.js\").default>} conditions Conditions.\n   */\n  constructor(tagName, conditions) {\n    super(tagName);\n\n    /**\n     * @type {Array<import(\"./Filter.js\").default>}\n     */\n    this.conditions = conditions;\n    assert(this.conditions.length >= 2, 'At least 2 conditions are required');\n  }\n}\n\nexport default LogicalNary;\n","/**\n * @module ol/format/filter/And\n */\nimport LogicalNary from './LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @abstract\n */\nclass And extends LogicalNary {\n  /**\n   * @param {...import(\"./Filter.js\").default} conditions Conditions.\n   */\n  constructor(conditions) {\n    super('And', Array.prototype.slice.call(arguments));\n  }\n}\n\nexport default And;\n","/**\n * @module ol/format/filter/Bbox\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @api\n */\nclass Bbox extends Filter {\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../../extent.js\").Extent} extent Extent.\n   * @param {string} [srsName] SRS name. No srsName attribute will be set\n   * on geometries when this is not provided.\n   */\n  constructor(geometryName, extent, srsName) {\n    super('BBOX');\n\n    /**\n     * @type {!string}\n     */\n    this.geometryName = geometryName;\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent = extent;\n    if (extent.length !== 4) {\n      throw new Error(\n        'Expected an extent with four values ([minX, minY, maxX, maxY])'\n      );\n    }\n\n    /**\n     * @type {string|undefined}\n     */\n    this.srsName = srsName;\n  }\n}\n\nexport default Bbox;\n","/**\n * @module ol/format/WFS\n */\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GML32 from './GML32.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  isDocument,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSimpleNodeFactory,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {and as andFilterFn, bbox as bboxFilterFn} from './filter.js';\nimport {assert} from '../asserts.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readNonNegativeIntegerString,\n  readPositiveInteger,\n  writeStringTextNode,\n} from './xsd.js';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst FEATURE_COLLECTION_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': makeObjectPropertySetter(\n      GMLBase.prototype.readExtentElement,\n      'bounds'\n    ),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'member': makeArrayPusher(GMLBase.prototype.readFeaturesInternal),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst TRANSACTION_SUMMARY_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst TRANSACTION_RESPONSE_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary,\n      'transactionSummary'\n    ),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds'),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary,\n      'transactionSummary'\n    ),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds'),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst QUERY_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': makeChildAppender(writeStringTextNode),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'PropertyName': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst TRANSACTION_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative),\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] The namespace URI used for features.\n * @property {Array<string>|string} [featureType] The feature type to parse. Only used for read operations.\n * @property {GMLBase} [gmlFormat] The GML format to use to parse the response.\n * Default is `ol/format/GML2` for WFS 1.0.0, `ol/format/GML3` for WFS 1.1.0 and `ol/format/GML32` for WFS 2.0.0.\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\n * @property {string} [version='1.1.0'] WFS version to use. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * @typedef {Object} WriteGetFeatureOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {Array<string|FeatureType>} featureTypes The feature type names or FeatureType objects to\n * define a unique bbox filter per feature type name (in this case, options `bbox` and `geometryName` are\n * ignored.).\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {string} [outputFormat] Output format.\n * @property {number} [maxFeatures] Maximum number of features to fetch.\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\n * @property {Array<string>} [propertyNames] Optional list of property names to serialize.\n * @property {string} [viewParams] viewParams GeoServer vendor parameter.\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\n * @property {number} [count] Number of features to retrieve when paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\n * Web Feature Services have repurposed `maxfeatures` instead.\n * @property {import(\"../extent.js\").Extent} [bbox] Extent to use for the BBOX filter. The `geometryName`\n * option must be set.\n * @property {import(\"./filter/Filter.js\").default} [filter] Filter condition. See\n * {@link module:ol/format/filter} for more information.\n * @property {string} [resultType] Indicates what response should be returned,\n * e.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\n */\n\n/**\n * @typedef {Object} FeatureType\n * @property {!string} name The feature type name.\n * @property {!import(\"../extent.js\").Extent} bbox Extent to use for the BBOX filter.\n * @property {!string} geometryName Geometry name to use in the BBOX filter.\n */\n\n/**\n * @typedef {Object} WriteTransactionOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {string} featureType The feature type name.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\n * @property {Array<Object>} nativeElements Native elements. Currently not supported.\n * @property {import(\"./GMLBase.js\").Options} [gmlOptions] GML options for the WFS transaction writer.\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * Number of features; bounds/extent.\n * @typedef {Object} FeatureCollectionMetadata\n * @property {number} numberOfFeatures NumberOfFeatures.\n * @property {import(\"../extent.js\").Extent} bounds Bounds.\n */\n\n/**\n * Total deleted; total inserted; total updated; array of insert ids.\n * @typedef {Object} TransactionResponse\n * @property {number} totalDeleted TotalDeleted.\n * @property {number} totalInserted TotalInserted.\n * @property {number} totalUpdated TotalUpdated.\n * @property {Array<string>} insertIds InsertIds.\n */\n\n/**\n * @type {string}\n */\nconst FEATURE_PREFIX = 'feature';\n\n/**\n * @type {string}\n */\nconst XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n/**\n * @type {Object<string, string>}\n */\nconst OGCNS = {\n  '2.0.0': 'http://www.opengis.net/ogc/1.1',\n  '1.1.0': 'http://www.opengis.net/ogc',\n  '1.0.0': 'http://www.opengis.net/ogc',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst WFSNS = {\n  '2.0.0': 'http://www.opengis.net/wfs/2.0',\n  '1.1.0': 'http://www.opengis.net/wfs',\n  '1.0.0': 'http://www.opengis.net/wfs',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst FESNS = {\n  '2.0.0': 'http://www.opengis.net/fes/2.0',\n  '1.1.0': 'http://www.opengis.net/fes',\n  '1.0.0': 'http://www.opengis.net/fes',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst SCHEMA_LOCATIONS = {\n  '2.0.0':\n    'http://www.opengis.net/wfs/2.0 http://schemas.opengis.net/wfs/2.0/wfs.xsd',\n  '1.1.0':\n    'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0':\n    'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd',\n};\n\n/**\n * @type {Object<string, object>}\n */\nconst GML_FORMATS = {\n  '2.0.0': GML32,\n  '1.1.0': GML3,\n  '1.0.0': GML2,\n};\n\n/**\n * @const\n * @type {string}\n */\nconst DEFAULT_VERSION = '1.1.0';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option to override the default.\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\n *\n * @api\n */\nclass WFS extends XMLFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version ? options.version : DEFAULT_VERSION;\n\n    /**\n     * @private\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType_ = options.featureType;\n\n    /**\n     * @private\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS_ = options.featureNS;\n\n    /**\n     * @private\n     * @type {GMLBase}\n     */\n    this.gmlFormat_ = options.gmlFormat\n      ? options.gmlFormat\n      : new GML_FORMATS[this.version_]();\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.schemaLocation_ = options.schemaLocation\n      ? options.schemaLocation\n      : SCHEMA_LOCATIONS[this.version_];\n  }\n\n  /**\n   * @return {Array<string>|string|undefined} featureType\n   */\n  getFeatureType() {\n    return this.featureType_;\n  }\n\n  /**\n   * @param {Array<string>|string|undefined} featureType Feature type(s) to parse.\n   */\n  setFeatureType(featureType) {\n    this.featureType_ = featureType;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    const context = {\n      node,\n    };\n    Object.assign(context, {\n      'featureType': this.featureType_,\n      'featureNS': this.featureNS_,\n    });\n\n    Object.assign(context, this.getReadOptions(node, options ? options : {}));\n    const objectStack = [context];\n    let featuresNS;\n    if (this.version_ === '2.0.0') {\n      featuresNS = FEATURE_COLLECTION_PARSERS;\n    } else {\n      featuresNS = this.gmlFormat_.FEATURE_COLLECTION_PARSERS;\n    }\n    let features = pushParseAndPop(\n      [],\n      featuresNS,\n      node,\n      objectStack,\n      this.gmlFormat_\n    );\n    if (!features) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * Read transaction response of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {TransactionResponse|undefined} Transaction response.\n   * @api\n   */\n  readTransactionResponse(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readTransactionResponseFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readTransactionResponseFromDocument(\n        /** @type {Document} */ (source)\n      );\n    }\n    return this.readTransactionResponseFromNode(\n      /** @type {Element} */ (source)\n    );\n  }\n\n  /**\n   * Read feature collection metadata of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   * @api\n   */\n  readFeatureCollectionMetadata(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureCollectionMetadataFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readFeatureCollectionMetadataFromDocument(\n        /** @type {Document} */ (source)\n      );\n    }\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Element} */ (source)\n    );\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFeatureCollectionMetadataFromNode(\n          /** @type {Element} */ (n)\n        );\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromNode(node) {\n    const result = {};\n    const value = readNonNegativeIntegerString(\n      node.getAttribute('numberOfFeatures')\n    );\n    result['numberOfFeatures'] = value;\n    return pushParseAndPop(\n      /** @type {FeatureCollectionMetadata} */ (result),\n      FEATURE_COLLECTION_PARSERS,\n      node,\n      [],\n      this.gmlFormat_\n    );\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readTransactionResponseFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromNode(node) {\n    return pushParseAndPop(\n      /** @type {TransactionResponse} */ ({}),\n      TRANSACTION_RESPONSE_PARSERS,\n      node,\n      []\n    );\n  }\n\n  /**\n   * Encode format as WFS `GetFeature` and return the Node.\n   *\n   * @param {WriteGetFeatureOptions} options Options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeGetFeature(options) {\n    const node = createElementNS(WFSNS[this.version_], 'GetFeature');\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', this.version_);\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', String(options.maxFeatures));\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', String(options.startIndex));\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', String(options.count));\n    }\n    if (options.viewParams !== undefined) {\n      node.setAttribute('viewParams', options.viewParams);\n    }\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      this.schemaLocation_\n    );\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    const context = {\n      node,\n    };\n    Object.assign(context, {\n      'version': this.version_,\n      'srsName': options.srsName,\n      'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n      'featurePrefix': options.featurePrefix,\n      'propertyNames': options.propertyNames ? options.propertyNames : [],\n    });\n    assert(\n      Array.isArray(options.featureTypes),\n      '`options.featureTypes` must be an Array'\n    );\n    if (typeof options.featureTypes[0] === 'string') {\n      let filter = options.filter;\n      if (options.bbox) {\n        assert(\n          options.geometryName,\n          '`options.geometryName` must also be provided when `options.bbox` is set'\n        );\n        filter = this.combineBboxAndFilter(\n          options.geometryName,\n          options.bbox,\n          options.srsName,\n          filter\n        );\n      }\n      Object.assign(context, {\n        'geometryName': options.geometryName,\n        'filter': filter,\n      });\n      writeGetFeature(\n        node,\n        /** @type {!Array<string>} */ (options.featureTypes),\n        [context]\n      );\n    } else {\n      // Write one query node per element in featuresType.\n      options.featureTypes.forEach((/** @type {FeatureType} */ featureType) => {\n        const completeFilter = this.combineBboxAndFilter(\n          featureType.geometryName,\n          featureType.bbox,\n          options.srsName,\n          options.filter\n        );\n        Object.assign(context, {\n          'geometryName': featureType.geometryName,\n          'filter': completeFilter,\n        });\n        writeGetFeature(node, [featureType.name], [context]);\n      });\n    }\n    return node;\n  }\n\n  /**\n   * Create a bbox filter and combine it with another optional filter.\n   *\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../extent.js\").Extent} extent Extent.\n   * @param {string} [srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   * @param {import(\"./filter/Filter.js\").default} [filter] Filter condition.\n   * @return {import(\"./filter/Filter.js\").default} The filter.\n   */\n  combineBboxAndFilter(geometryName, extent, srsName, filter) {\n    const bboxFilter = bboxFilterFn(geometryName, extent, srsName);\n    if (filter) {\n      // if bbox and filter are both set, combine the two into a single filter\n      return andFilterFn(filter, bboxFilter);\n    }\n    return bboxFilter;\n  }\n\n  /**\n   * Encode format as WFS `Transaction` and return the Node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} inserts The features to insert.\n   * @param {Array<import(\"../Feature.js\").default>} updates The features to update.\n   * @param {Array<import(\"../Feature.js\").default>} deletes The features to delete.\n   * @param {WriteTransactionOptions} options Write options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeTransaction(inserts, updates, deletes, options) {\n    const objectStack = [];\n    const version = options.version ? options.version : this.version_;\n    const node = createElementNS(WFSNS[version], 'Transaction');\n\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', version);\n    let baseObj;\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    if (options) {\n      baseObj = options.gmlOptions ? options.gmlOptions : {};\n      if (options.handle) {\n        node.setAttribute('handle', options.handle);\n      }\n    }\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATIONS[version]\n    );\n\n    const request = createTransactionRequest(node, baseObj, version, options);\n    if (inserts) {\n      serializeTransactionRequest('Insert', inserts, objectStack, request);\n    }\n    if (updates) {\n      serializeTransactionRequest('Update', updates, objectStack, request);\n    }\n    if (deletes) {\n      serializeTransactionRequest('Delete', deletes, objectStack, request);\n    }\n    if (options.nativeElements) {\n      serializeTransactionRequest(\n        'Native',\n        options.nativeElements,\n        objectStack,\n        request\n      );\n    }\n    return node;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readProjectionFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    if (node.firstElementChild && node.firstElementChild.firstElementChild) {\n      node = node.firstElementChild.firstElementChild;\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        if (\n          !(\n            n.childNodes.length === 0 ||\n            (n.childNodes.length === 1 && n.firstChild.nodeType === 3)\n          )\n        ) {\n          const objectStack = [{}];\n          this.gmlFormat_.readGeometryElement(n, objectStack);\n          return getProjection(objectStack.pop().srsName);\n        }\n      }\n    }\n\n    return null;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {*} baseObj Base object.\n * @param {string} version Version.\n * @param {WriteTransactionOptions} options Options.\n * @return {Object} Request object.\n */\nfunction createTransactionRequest(node, baseObj, version, options) {\n  const featurePrefix = options.featurePrefix\n    ? options.featurePrefix\n    : FEATURE_PREFIX;\n  let gmlVersion;\n  if (version === '1.0.0') {\n    gmlVersion = 2;\n  } else if (version === '1.1.0') {\n    gmlVersion = 3;\n  } else if (version === '2.0.0') {\n    gmlVersion = 3.2;\n  }\n  const obj = Object.assign(\n    {node},\n    {\n      version,\n      'featureNS': options.featureNS,\n      'featureType': options.featureType,\n      'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion,\n      'hasZ': options.hasZ,\n      'srsName': options.srsName,\n    },\n    baseObj\n  );\n  return obj;\n}\n\n/**\n * @param {string} type Request type.\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @param {Element} request Transaction Request.\n */\nfunction serializeTransactionRequest(type, features, objectStack, request) {\n  pushSerializeAndPop(\n    request,\n    TRANSACTION_SERIALIZERS,\n    makeSimpleNodeFactory(type),\n    features,\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n */\nfunction readTransactionSummary(node, objectStack) {\n  return pushParseAndPop({}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst OGC_FID_PARSERS = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    }),\n  },\n  'http://www.opengis.net/ogc/1.1': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    }),\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction fidParser(node, objectStack) {\n  parseNode(OGC_FID_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst INSERT_RESULTS_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'Feature': fidParser,\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Feature': fidParser,\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Insert results.\n */\nfunction readInsertResults(node, objectStack) {\n  return pushParseAndPop([], INSERT_RESULTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFeature(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else if (gmlVersion === 3) {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML32.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeOgcFidFilter(node, fid, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const version = context['version'];\n  const ns = OGCNS[version];\n  const filter = createElementNS(ns, 'Filter');\n  const child = createElementNS(ns, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', /** @type {string} */ (fid));\n  node.appendChild(filter);\n}\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @return {string} The value of the typeName property.\n */\nfunction getTypeName(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.startsWith(prefix)) {\n    return featureType;\n  }\n  return prefix + featureType;\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDelete(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 'Features must have an id set');\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeUpdate(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 'Features must have an id set');\n  const version = context['version'];\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (\n          value &&\n          typeof (/** @type {?} */ (value).getSimplifiedGeometry) === 'function'\n        ) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */ ({\n        version,\n        'gmlVersion': context['gmlVersion'],\n        node,\n        'hasZ': context['hasZ'],\n        'srsName': context['srsName'],\n      }),\n      TRANSACTION_SERIALIZERS,\n      makeSimpleNodeFactory('Property'),\n      values,\n      objectStack\n    );\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeProperty(node, pair, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const version = context['version'];\n  const ns = WFSNS[version];\n  const tagName = version === '2.0.0' ? 'ValueReference' : 'Name';\n  const name = createElementNS(ns, tagName);\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = createElementNS(ns, 'Value');\n    node.appendChild(value);\n    if (\n      pair.value &&\n      typeof (/** @type {?} */ (pair.value).getSimplifiedGeometry) ===\n        'function'\n    ) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else if (gmlVersion === 3) {\n        GML3.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else {\n        GML32.prototype.writeGeometryElement(value, pair.value, objectStack);\n      }\n    } else {\n      writeStringTextNode(value, pair.value);\n    }\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}} nativeElement The native element.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNative(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', String(nativeElement.safeToIgnore));\n  }\n  if (nativeElement.value !== undefined) {\n    writeStringTextNode(node, nativeElement.value);\n  }\n}\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst GETFEATURE_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Query': makeChildAppender(writeQuery),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Query': makeChildAppender(writeQuery),\n  },\n  'http://www.opengis.net/ogc': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter),\n  },\n  'http://www.opengis.net/fes/2.0': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Disjoint': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'ResourceId': makeChildAppender(writeResourceIdFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter),\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {string} featureType Feature type.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeQuery(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const version = context['version'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = getTypeName(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  let typeNameAttr;\n  if (version === '2.0.0') {\n    typeNameAttr = 'typeNames';\n  } else {\n    typeNameAttr = 'typeName';\n  }\n  node.setAttribute(typeNameAttr, typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  }\n  const item = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n    Object.assign({}, context)\n  );\n  item.node = node;\n  pushSerializeAndPop(\n    item,\n    QUERY_SERIALIZERS,\n    makeSimpleNodeFactory('PropertyName'),\n    propertyNames,\n    objectStack\n  );\n  const filter = context['filter'];\n  if (filter) {\n    const child = createElementNS(getFilterNS(version), 'Filter');\n    node.appendChild(child);\n    writeFilterCondition(child, filter, objectStack);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFilterCondition(node, filter, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(filter.getTagName()),\n    [filter],\n    objectStack\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Bbox.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeBboxFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  parent['srsName'] = filter.srsName;\n  const format = GML_FORMATS[version];\n\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.extent, objectStack);\n}\n\n/**\n * @param {Element} node Element.\n * @param {import(\"./filter/ResourceId.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeResourceIdFilter(node, filter, objectStack) {\n  node.setAttribute('rid', /** @type {string} */ (filter.rid));\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Spatial.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeSpatialFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  parent['srsName'] = filter.srsName;\n  const format = GML_FORMATS[version];\n\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/DWithin.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDWithinFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  writeSpatialFilter(node, filter, objectStack);\n  const distance = createElementNS(getFilterNS(version), 'Distance');\n  writeStringTextNode(distance, filter.distance.toString());\n  if (version === '2.0.0') {\n    distance.setAttribute('uom', filter.unit);\n  } else {\n    distance.setAttribute('units', filter.unit);\n  }\n  node.appendChild(distance);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/During.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDuringFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n\n  writeExpression(FESNS[version], 'ValueReference', node, filter.propertyName);\n  const timePeriod = createElementNS(GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = createElementNS(GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  writeTimeInstant(begin, filter.begin);\n\n  const end = createElementNS(GMLNS, 'end');\n  timePeriod.appendChild(end);\n  writeTimeInstant(end, filter.end);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/LogicalNary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLogicalFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    pushSerializeAndPop(\n      item,\n      GETFEATURE_SERIALIZERS,\n      makeSimpleNodeFactory(condition.getTagName()),\n      [condition],\n      objectStack\n    );\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/Not.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNotFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  const condition = filter.condition;\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(condition.getTagName()),\n    [condition],\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/ComparisonBinary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeComparisonFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.expression);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsNull.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsNullFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  writePropertyName(version, node, filter.propertyName);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsBetween.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsBetweenFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  const ns = getFilterNS(version);\n\n  writePropertyName(version, node, filter.propertyName);\n\n  const lowerBoundary = createElementNS(ns, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  writeLiteral(version, lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = createElementNS(ns, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  writeLiteral(version, upperBoundary, '' + filter.upperBoundary);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/IsLike.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsLikeFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.pattern);\n}\n\n/**\n * @param {string} ns Namespace.\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n */\nfunction writeExpression(ns, tagName, node, value) {\n  const property = createElementNS(ns, tagName);\n  writeStringTextNode(property, value);\n  node.appendChild(property);\n}\n\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeLiteral(version, node, value) {\n  writeExpression(getFilterNS(version), 'Literal', node, value);\n}\n\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writePropertyName(version, node, value) {\n  if (version === '2.0.0') {\n    writeExpression(FESNS[version], 'ValueReference', node, value);\n  } else {\n    writeExpression(OGCNS[version], 'PropertyName', node, value);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n */\nfunction writeTimeInstant(node, time) {\n  const timeInstant = createElementNS(GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = createElementNS(GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  writeStringTextNode(timePosition, time);\n}\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {string} version WFS version. If not provided defaults to '1.1.0'\n * @return {Node} Result.\n * @api\n */\nexport function writeFilter(filter, version) {\n  version = version || '1.1.0';\n  const child = createElementNS(getFilterNS(version), 'Filter');\n  const context = {\n    node: child,\n  };\n  Object.assign(context, {\n    'version': version,\n    'filter': filter,\n  });\n  writeFilterCondition(child, filter, [context]);\n  return child;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<string>} featureTypes Feature types.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeGetFeature(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n    Object.assign({}, context)\n  );\n  item.node = node;\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory('Query'),\n    featureTypes,\n    objectStack\n  );\n}\n\nfunction getFilterNS(version) {\n  let ns;\n  if (version === '2.0.0') {\n    ns = FESNS[version];\n  } else {\n    ns = OGCNS[version];\n  }\n  return ns;\n}\n\nexport default WFS;\n","/**\n * @module ol/format/filter\n */\nimport And from './filter/And.js';\nimport Bbox from './filter/Bbox.js';\nimport Contains from './filter/Contains.js';\nimport DWithin from './filter/DWithin.js';\nimport Disjoint from './filter/Disjoint.js';\nimport During from './filter/During.js';\nimport EqualTo from './filter/EqualTo.js';\nimport GreaterThan from './filter/GreaterThan.js';\nimport GreaterThanOrEqualTo from './filter/GreaterThanOrEqualTo.js';\nimport Intersects from './filter/Intersects.js';\nimport IsBetween from './filter/IsBetween.js';\nimport IsLike from './filter/IsLike.js';\nimport IsNull from './filter/IsNull.js';\nimport LessThan from './filter/LessThan.js';\nimport LessThanOrEqualTo from './filter/LessThanOrEqualTo.js';\nimport Not from './filter/Not.js';\nimport NotEqualTo from './filter/NotEqualTo.js';\nimport Or from './filter/Or.js';\nimport ResourceId from './filter/ResourceId.js';\nimport Within from './filter/Within.js';\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @return {!And} `<And>` operator.\n * @api\n */\nexport function and(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(And, params))();\n}\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @return {!Or} `<Or>` operator.\n * @api\n */\nexport function or(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(Or, params))();\n}\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!import(\"./filter/Filter.js\").default} condition Filter condition.\n * @return {!Not} `<Not>` operator.\n * @api\n */\nexport function not(condition) {\n  return new Not(condition);\n}\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../extent.js\").Extent} extent Extent.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Bbox} `<BBOX>` operator.\n * @api\n */\nexport function bbox(geometryName, extent, srsName) {\n  return new Bbox(geometryName, extent, srsName);\n}\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Contains} `<Contains>` operator.\n * @api\n */\nexport function contains(geometryName, geometry, srsName) {\n  return new Contains(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Intersects} `<Intersects>` operator.\n * @api\n */\nexport function intersects(geometryName, geometry, srsName) {\n  return new Intersects(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Disjoint>` operator to test whether a geometry-valued property\n * is disjoint to a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Disjoint} `<Disjoint>` operator.\n * @api\n */\nexport function disjoint(geometryName, geometry, srsName) {\n  return new Disjoint(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Within} `<Within>` operator.\n * @api\n */\nexport function within(geometryName, geometry, srsName) {\n  return new Within(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<DWithin>` operator to test whether a geometry-valued property\n * is within a distance to a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {!number} distance Distance.\n * @param {!string} unit Unit.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!DWithin} `<DWithin>` operator.\n * @api\n */\nexport function dwithin(geometryName, geometry, distance, unit, srsName) {\n  return new DWithin(geometryName, geometry, distance, unit, srsName);\n}\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\nexport function equalTo(propertyName, expression, matchCase) {\n  return new EqualTo(propertyName, expression, matchCase);\n}\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\nexport function notEqualTo(propertyName, expression, matchCase) {\n  return new NotEqualTo(propertyName, expression, matchCase);\n}\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\nexport function lessThan(propertyName, expression) {\n  return new LessThan(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\nexport function lessThanOrEqualTo(propertyName, expression) {\n  return new LessThanOrEqualTo(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\nexport function greaterThan(propertyName, expression) {\n  return new GreaterThan(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\nexport function greaterThanOrEqualTo(propertyName, expression) {\n  return new GreaterThanOrEqualTo(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @return {!IsNull} `<PropertyIsNull>` operator.\n * @api\n */\nexport function isNull(propertyName) {\n  return new IsNull(propertyName);\n}\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @return {!IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\nexport function between(propertyName, lowerBoundary, upperBoundary) {\n  return new IsBetween(propertyName, lowerBoundary, upperBoundary);\n}\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string} [wildCard] Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string} [singleChar] pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string} [escapeChar] Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!IsLike} `<PropertyIsLike>` operator.\n * @api\n */\nexport function like(\n  propertyName,\n  pattern,\n  wildCard,\n  singleChar,\n  escapeChar,\n  matchCase\n) {\n  return new IsLike(\n    propertyName,\n    pattern,\n    wildCard,\n    singleChar,\n    escapeChar,\n    matchCase\n  );\n}\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @return {!During} `<During>` operator.\n * @api\n */\nexport function during(propertyName, begin, end) {\n  return new During(propertyName, begin, end);\n}\n\nexport function resourceId(rid) {\n  return new ResourceId(rid);\n}\n","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport GML2 from './GML2.js';\nimport XMLFeature from './XMLFeature.js';\nimport {extend} from '../array.js';\nimport {makeArrayPusher, makeStructureNS, pushParseAndPop} from '../xml.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<string>} [layers] If set, only features of the given layers will be returned by the format when read.\n */\n\n/**\n * @const\n * @type {string}\n */\nconst featureIdentifier = '_feature';\n\n/**\n * @const\n * @type {string}\n */\nconst layerIdentifier = '_layer';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link module:ol/format/GML2~GML2} to read features.\n *\n * @api\n */\nclass WMSGetFeatureInfo extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n    /**\n     * @private\n     * @type {GML2}\n     */\n    this.gmlFormat_ = new GML2();\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n  }\n\n  /**\n   * @return {Array<string>|null} layers\n   */\n  getLayers() {\n    return this.layers_;\n  }\n\n  /**\n   * @param {Array<string>|null} layers Layers to parse.\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  readFeatures_(node, objectStack) {\n    node.setAttribute('namespaceURI', this.featureNS_);\n    const localName = node.localName;\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = [];\n    if (node.childNodes.length === 0) {\n      return features;\n    }\n    if (localName == 'msGMLOutput') {\n      for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n        const layer = node.childNodes[i];\n        if (layer.nodeType !== Node.ELEMENT_NODE) {\n          continue;\n        }\n\n        const layerElement = /** @type {Element} */ (layer);\n        const context = objectStack[0];\n\n        const toRemove = layerIdentifier;\n        const layerName = layerElement.localName.replace(toRemove, '');\n\n        if (this.layers_ && !this.layers_.includes(layerName)) {\n          continue;\n        }\n\n        const featureType = layerName + featureIdentifier;\n\n        context['featureType'] = featureType;\n        context['featureNS'] = this.featureNS_;\n\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        const parsers = {};\n        parsers[featureType] = makeArrayPusher(\n          this.gmlFormat_.readFeatureElement,\n          this.gmlFormat_\n        );\n        const parsersNS = makeStructureNS(\n          [context['featureNS'], null],\n          parsers\n        );\n        layerElement.setAttribute('namespaceURI', this.featureNS_);\n        const layerFeatures = pushParseAndPop(\n          [],\n          // @ts-ignore\n          parsersNS,\n          layerElement,\n          objectStack,\n          this.gmlFormat_\n        );\n        if (layerFeatures) {\n          extend(features, layerFeatures);\n        }\n      }\n    }\n    if (localName == 'FeatureCollection') {\n      const gmlFeatures = pushParseAndPop(\n        [],\n        this.gmlFormat_.FEATURE_COLLECTION_PARSERS,\n        node,\n        [{}],\n        this.gmlFormat_\n      );\n      if (gmlFeatures) {\n        features = gmlFeatures;\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    const internalOptions = {};\n    if (options) {\n      Object.assign(internalOptions, this.getReadOptions(node, options));\n    }\n    return this.readFeatures_(node, [internalOptions]);\n  }\n}\n\nexport default WMSGetFeatureInfo;\n","/**\n * @module ol/format/WMTSCapabilities\n */\nimport OWS from './OWS.js';\nimport XML from './XML.js';\nimport {boundingExtent} from '../extent.js';\nimport {\n  makeArrayPusher,\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readDecimal, readPositiveInteger, readString} from './xsd.js';\nimport {readHref} from './xlink.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/wmts/1.0'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst OWS_NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Contents': makeObjectPropertySetter(readContents),\n});\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\nclass WMTSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {OWS}\n     * @private\n     */\n    this.owsParser_ = new OWS();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   */\n  readFromNode(node) {\n    let version = node.getAttribute('version');\n    if (version) {\n      version = version.trim();\n    }\n    let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n    if (!WMTSCapabilityObject) {\n      return null;\n    }\n    WMTSCapabilityObject['version'] = version;\n    WMTSCapabilityObject = pushParseAndPop(\n      WMTSCapabilityObject,\n      PARSERS,\n      node,\n      []\n    );\n    return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTENTS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Layer': makeObjectPropertyPusher(readLayer),\n  'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readBoundingBox),\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LINKS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixSet': makeObjectPropertySetter(readString),\n  'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_LIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrix': makeObjectPropertySetter(readString),\n  'MinTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MinTileCol': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileCol': makeObjectPropertySetter(readPositiveInteger),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DIMENSION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WGS84_BBOX_READERS = makeStructureNS(OWS_NAMESPACE_URIS, {\n  'LowerCorner': makeArrayPusher(readCoordinates),\n  'UpperCorner': makeArrayPusher(readCoordinates),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n    'BoundingBox': makeObjectPropertySetter(readBoundingBox),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TM_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readPositiveInteger),\n    'TileHeight': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixWidth': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixHeight': makeObjectPropertySetter(readPositiveInteger),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  const style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBox(node, objectStack) {\n  const coordinates = pushParseAndPop(\n    [],\n    WGS84_BBOX_READERS,\n    node,\n    objectStack\n  );\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = readHref(node);\n  return legend;\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n  const coordinates = readString(node).split(/\\s+/);\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\n\nexport default WMTSCapabilities;\n","/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceNode} from '../dom.js';\n\nconst events = [\n  'fullscreenchange',\n  'webkitfullscreenchange',\n  'MSFullscreenChange',\n];\n\n/**\n * @enum {string}\n */\nconst FullScreenEventType = {\n  /**\n   * Triggered after the map entered fullscreen.\n   * @event FullScreenEventType#enterfullscreen\n   * @api\n   */\n  ENTERFULLSCREEN: 'enterfullscreen',\n\n  /**\n   * Triggered after the map leave fullscreen.\n   * @event FullScreenEventType#leavefullscreen\n   * @api\n   */\n  LEAVEFULLSCREEN: 'leavefullscreen',\n};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen', import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen'|import(\"../ObjectEventType\").Types, Return>} FullScreenOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text|HTMLElement} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [activeClassName=className + '-true'] CSS class name for the button\n * when full-screen is active.\n * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button\n * when full-screen is inactive.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](https://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @fires FullScreenEventType#enterfullscreen\n * @fires FullScreenEventType#leavefullscreen\n * @api\n */\nclass FullScreen extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FullScreenOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.isInFullscreen_ = false;\n\n    /**\n     * @private\n     */\n    this.boundHandleMapTargetChange_ = this.handleMapTargetChange_.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ =\n      options.className !== undefined ? options.className : 'ol-full-screen';\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.documentListeners_ = [];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.activeClassName_ =\n      options.activeClassName !== undefined\n        ? options.activeClassName.split(' ')\n        : [this.cssClassName_ + '-true'];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.inactiveClassName_ =\n      options.inactiveClassName !== undefined\n        ? options.inactiveClassName.split(' ')\n        : [this.cssClassName_ + '-false'];\n\n    const label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelNode_ =\n      typeof label === 'string' ? document.createTextNode(label) : label;\n\n    const labelActive =\n      options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelActiveNode_ =\n      typeof labelActive === 'string'\n        ? document.createTextNode(labelActive)\n        : labelActive;\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n    this.button_.title = tipLabel;\n    this.button_.setAttribute('type', 'button');\n    this.button_.appendChild(this.labelNode_);\n    this.button_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n    this.setClassName_(this.button_, this.isInFullscreen_);\n\n    this.element.className = `${this.cssClassName_} ${CLASS_UNSELECTABLE} ${CLASS_CONTROL}`;\n    this.element.appendChild(this.button_);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreen_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const doc = map.getOwnerDocument();\n    if (!isFullScreenSupported(doc)) {\n      return;\n    }\n    if (isFullScreen(doc)) {\n      exitFullScreen(doc);\n    } else {\n      let element;\n      if (this.source_) {\n        element =\n          typeof this.source_ === 'string'\n            ? doc.getElementById(this.source_)\n            : this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreenChange_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const wasInFullscreen = this.isInFullscreen_;\n    this.isInFullscreen_ = isFullScreen(map.getOwnerDocument());\n    if (wasInFullscreen !== this.isInFullscreen_) {\n      this.setClassName_(this.button_, this.isInFullscreen_);\n      if (this.isInFullscreen_) {\n        replaceNode(this.labelActiveNode_, this.labelNode_);\n        this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\n      } else {\n        replaceNode(this.labelNode_, this.labelActiveNode_);\n        this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\n      }\n      map.updateSize();\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  setClassName_(element, fullscreen) {\n    if (fullscreen) {\n      element.classList.remove(...this.inactiveClassName_);\n      element.classList.add(...this.activeClassName_);\n    } else {\n      element.classList.remove(...this.activeClassName_);\n      element.classList.add(...this.inactiveClassName_);\n    }\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (oldMap) {\n      oldMap.removeChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_\n      );\n    }\n\n    super.setMap(map);\n\n    this.handleMapTargetChange_();\n    if (map) {\n      map.addChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleMapTargetChange_() {\n    const listeners = this.documentListeners_;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      unlistenByKey(listeners[i]);\n    }\n    listeners.length = 0;\n\n    const map = this.getMap();\n    if (map) {\n      const doc = map.getOwnerDocument();\n      if (isFullScreenSupported(doc)) {\n        this.element.classList.remove(CLASS_UNSUPPORTED);\n      } else {\n        this.element.classList.add(CLASS_UNSUPPORTED);\n      }\n\n      for (let i = 0, ii = events.length; i < ii; ++i) {\n        listeners.push(\n          listen(doc, events[i], this.handleFullScreenChange_, this)\n        );\n      }\n      this.handleFullScreenChange_();\n    }\n  }\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported(doc) {\n  const body = doc.body;\n  return !!(\n    body['webkitRequestFullscreen'] ||\n    (body.requestFullscreen && doc.fullscreenEnabled)\n  );\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen(doc) {\n  return !!(doc['webkitIsFullScreen'] || doc.fullscreenElement);\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n * @param {Document} doc The document to exit fullscren from\n */\nfunction exitFullScreen(doc) {\n  if (doc.exitFullscreen) {\n    doc.exitFullscreen();\n  } else if (doc['webkitExitFullscreen']) {\n    doc['webkitExitFullscreen']();\n  }\n}\n\nexport default FullScreen;\n","/**\n * @module ol/control/MousePosition\n */\n\nimport Control from './Control.js';\nimport EventType from '../pointer/EventType.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  getUserProjection,\n  identityTransform,\n} from '../proj.js';\nimport {listen} from '../events.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', Return>} MousePositionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [placeholder] Markup to show when the mouse position is not\n * available (e.g. when the pointer leaves the map viewport).  By default, a non-breaking space is rendered\n * initially and the last position is retained when the mouse leaves the viewport.\n * When a string is provided (e.g. `'no position'` or `''` for an empty string) it is used as a\n * placeholder.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the projection's antimeridian, if it\n * is a global projection.\n */\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nclass MousePosition extends Control {\n  /**\n   * @param {Options} [options] Mouse position options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.className =\n      options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MousePositionOnSignature<void>}\n     */\n    this.un;\n\n    this.addChangeListener(PROJECTION, this.handleProjectionChanged_);\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = options.placeholder !== undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.placeholder_ = this.renderOnMouseOut_ ? options.placeholder : '&#160;';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {?import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX === false ? false : true;\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    this.transform_ = null;\n  }\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  getCoordinateFormat() {\n    return /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (\n      this.get(COORDINATE_FORMAT)\n    );\n  }\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"../proj/Projection.js\").default|undefined} */ (\n      this.get(PROJECTION)\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event Browser event.\n   * @protected\n   */\n  handleMouseMove(event) {\n    const map = this.getMap();\n    this.updateHTML_(map.getEventPixel(event));\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseOut(event) {\n    this.updateHTML_(null);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      const viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this)\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this)\n        );\n      }\n      this.updateHTML_(null);\n    }\n  }\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  setCoordinateFormat(format) {\n    this.set(COORDINATE_FORMAT, format);\n  }\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  updateHTML_(pixel) {\n    let html = this.placeholder_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        const projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            projection\n          );\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      const map = this.getMap();\n      const coordinate = map.getCoordinateFromPixelInternal(pixel);\n      if (coordinate) {\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            userProjection\n          );\n        }\n        this.transform_(coordinate, coordinate);\n        if (this.wrapX_) {\n          const projection =\n            userProjection || this.getProjection() || this.mapProjection_;\n          wrapX(coordinate, projection);\n        }\n        const coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  }\n\n  /**\n   * Update the projection. Rendering of the coordinates is done in\n   * `handleMouseMove` and `handleMouseUp`.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.mapProjection_ = null;\n    } else {\n      if (this.mapProjection_ != frameState.viewState.projection) {\n        this.mapProjection_ = frameState.viewState.projection;\n        this.transform_ = null;\n      }\n    }\n  }\n}\n\nexport default MousePosition;\n","/**\n * @module ol/control/OverviewMap\n */\nimport Collection from '../Collection.js';\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport View from '../View.js';\nimport ViewProperty from '../ViewProperty.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {\n  containsExtent,\n  equals as equalsExtent,\n  getBottomRight,\n  getTopLeft,\n  scaleFromCenter,\n} from '../extent.js';\nimport {listen, listenOnce} from '../events.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {replaceNode} from '../dom.js';\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nconst MAX_RATIO = 0.75;\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nconst MIN_RATIO = 0.1;\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='‹'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='›'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Base.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Base.js\").default>} [layers]\n * Layers for the overview map.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {boolean} [rotateWithView=false] Whether the control view should rotate with the main map view.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {View} [view] Custom view for the overview map (should use same projection as main map). If not provided,\n * a default view with the same projection as the main map will be used.\n */\n\n/**\n * Create a new control with a map acting as an overview map for another\n * defined map.\n *\n * @api\n */\nclass OverviewMap extends Control {\n  /**\n   * @param {Options} [options] OverviewMap options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     */\n    this.boundHandleRotationChanged_ = this.handleRotationChanged_.bind(this);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.viewExtent_ = undefined;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u2039';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : '\\u203A';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('div');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * Explicitly given view to be used instead of a view derived from the main map.\n     * @type {View}\n     * @private\n     */\n    this.view_ = options.view;\n\n    const ovmap = new Map({\n      view: options.view,\n      controls: new Collection(),\n      interactions: new Collection(),\n    });\n\n    /**\n     * @type {Map}\n     * @private\n     */\n    this.ovmap_ = ovmap;\n\n    if (options.layers) {\n      options.layers.forEach(function (layer) {\n        ovmap.addLayer(layer);\n      });\n    }\n\n    const box = document.createElement('div');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {import(\"../Overlay.js\").default}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: 'center-center',\n      element: box,\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    const scope = this;\n\n    const overlay = this.boxOverlay_;\n    const overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    const computeDesiredMousePosition = function (mousePosition) {\n      return {\n        clientX: mousePosition.clientX,\n        clientY: mousePosition.clientY,\n      };\n    };\n\n    const move = function (event) {\n      const position = /** @type {?} */ (computeDesiredMousePosition(event));\n      const coordinates = ovmap.getEventCoordinateInternal(\n        /** @type {MouseEvent} */ (position)\n      );\n\n      overlay.setPosition(coordinates);\n    };\n\n    const endMoving = function (event) {\n      const coordinates = ovmap.getEventCoordinateInternal(event);\n\n      scope.getMap().getView().setCenterInternal(coordinates);\n\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', endMoving);\n    };\n\n    /* Binding */\n\n    overlayBox.addEventListener('mousedown', function () {\n      window.addEventListener('mousemove', move);\n      window.addEventListener('mouseup', endMoving);\n    });\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      const oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    super.setMap(map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(\n        listen(\n          map,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleMapPropertyChange_,\n          this\n        )\n      );\n\n      const view = map.getView();\n      if (view) {\n        this.bindView_(view);\n        if (view.isDef()) {\n          this.ovmap_.updateSize();\n          this.resetExtent_();\n        }\n      }\n\n      if (!this.ovmap_.isRendered()) {\n        this.updateBoxAfterOvmapIsRendered_();\n      }\n    }\n  }\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n   * @private\n   */\n  handleMapPropertyChange_(event) {\n    if (event.key === MapProperty.VIEW) {\n      const oldView = /** @type {import(\"../View.js\").default} */ (\n        event.oldValue\n      );\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      const newView = this.getMap().getView();\n      this.bindView_(newView);\n    } else if (\n      !this.ovmap_.isRendered() &&\n      (event.key === MapProperty.TARGET || event.key === MapProperty.SIZE)\n    ) {\n      this.ovmap_.updateSize();\n    }\n  }\n\n  /**\n   * Register listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  bindView_(view) {\n    if (!this.view_) {\n      // Unless an explicit view definition was given, derive default from whatever main map uses.\n      const newView = new View({\n        projection: view.getProjection(),\n      });\n      this.ovmap_.setView(newView);\n    }\n\n    view.addChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_\n    );\n    // Sync once with the new view\n    this.handleRotationChanged_();\n  }\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  unbindView_(view) {\n    view.removeChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_\n    );\n  }\n\n  /**\n   * Handle rotation changes to the main map.\n   * @private\n   */\n  handleRotationChanged_() {\n    if (this.rotateWithView_) {\n      this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n    }\n  }\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  validateExtent_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    if (this.viewExtent_ && equalsExtent(extent, this.viewExtent_)) {\n      // repeats of the same extent may indicate constraint conflicts leading to an endless cycle\n      return;\n    }\n    this.viewExtent_ = extent;\n\n    const ovmapSize = /** @type {import(\"../size.js\").Size} */ (\n      ovmap.getSize()\n    );\n\n    const ovview = ovmap.getView();\n    const ovextent = ovview.calculateExtentInternal(ovmapSize);\n\n    const topLeftPixel = ovmap.getPixelFromCoordinateInternal(\n      getTopLeft(extent)\n    );\n    const bottomRightPixel = ovmap.getPixelFromCoordinateInternal(\n      getBottomRight(extent)\n    );\n\n    const boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    const boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    const ovmapWidth = ovmapSize[0];\n    const ovmapHeight = ovmapSize[1];\n\n    if (\n      boxWidth < ovmapWidth * MIN_RATIO ||\n      boxHeight < ovmapHeight * MIN_RATIO ||\n      boxWidth > ovmapWidth * MAX_RATIO ||\n      boxHeight > ovmapHeight * MAX_RATIO\n    ) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  }\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  resetExtent_() {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    const ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    const steps = Math.log(MAX_RATIO / MIN_RATIO) / Math.LN2;\n    const ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fitInternal(polygonFromExtent(extent));\n  }\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  recenter_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    ovview.setCenterInternal(view.getCenterInternal());\n  }\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  updateBox_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    const rotation = this.rotateWithView_ ? 0 : -view.getRotation();\n\n    const overlay = this.boxOverlay_;\n    const box = this.boxOverlay_.getElement();\n    const center = view.getCenterInternal();\n    const resolution = view.getResolution();\n    const ovresolution = ovview.getResolution();\n    const width = (mapSize[0] * resolution) / ovresolution;\n    const height = (mapSize[1] * resolution) / ovresolution;\n\n    // set position using center coordinates\n    overlay.setPosition(center);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = width + 'px';\n      box.style.height = height + 'px';\n      const transform = 'rotate(' + rotation + 'rad)';\n      box.style.transform = transform;\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateBoxAfterOvmapIsRendered_() {\n    if (this.ovmapPostrenderKey_) {\n      return;\n    }\n    this.ovmapPostrenderKey_ = listenOnce(\n      this.ovmap_,\n      MapEventType.POSTRENDER,\n      function (event) {\n        delete this.ovmapPostrenderKey_;\n        this.updateBox_();\n      },\n      this\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    const ovmap = this.ovmap_;\n    if (!this.collapsed_) {\n      if (ovmap.isRendered()) {\n        this.viewExtent_ = undefined;\n        ovmap.render();\n        return;\n      }\n      ovmap.updateSize();\n      this.resetExtent_();\n      this.updateBoxAfterOvmapIsRendered_();\n    }\n  }\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the overview map view can rotate, `false` otherwise.\n   * @return {boolean} True if the control view can rotate.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Set whether the overview map view should rotate with the main map view.\n   * @param {boolean} rotateWithView True if the control view should rotate.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    if (this.rotateWithView_ === rotateWithView) {\n      return;\n    }\n    this.rotateWithView_ = rotateWithView;\n    if (this.getMap().getView().getRotation() !== 0) {\n      if (this.rotateWithView_) {\n        this.handleRotationChanged_();\n      } else {\n        this.ovmap_.getView().setRotation(0);\n      }\n      this.viewExtent_ = undefined;\n      this.validateExtent_();\n      this.updateBox_();\n    }\n  }\n\n  /**\n   * Return the overview map.\n   * @return {import(\"../Map.js\").default} Overview map.\n   * @api\n   */\n  getOverviewMap() {\n    return this.ovmap_;\n  }\n\n  /**\n   * Update the overview map element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.validateExtent_();\n    this.updateBox_();\n  }\n}\n\nexport default OverviewMap;\n","/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * @typedef {'degrees' | 'imperial' | 'nautical' | 'metric' | 'us'} Units\n * Units for the scale line.\n */\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className] CSS class name. The default is `ol-scale-bar` when configured with\n * `bar: true`. Otherwise the default is `ol-scale-line`.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {number} [maxWidth] Maximum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options} [options] Scale line options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.style.pointerEvents = 'none';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ScaleLineOnSignature<void>}\n     */\n    this.un;\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n        ? 'ol-scale-bar'\n        : 'ol-scale-line';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.maxWidth_ = options.maxWidth;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addChangeListener(UNITS_PROP, this.handleUnitsChanged_);\n\n    this.setUnits(options.units || 'metric');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits = units == 'degrees' ? 'degrees' : 'm';\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    const maxWidth =\n      this.maxWidth_ !== undefined\n        ? (this.maxWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI\n        : undefined;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == 'degrees') {\n      const metersPerDegree = METERS_PER_UNIT.degrees;\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == 'imperial') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == 'nautical') {\n      pointResolution /= 1852;\n      suffix = 'NM';\n    } else if (units == 'metric') {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == 'us') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      throw new Error('Invalid units');\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    let previousCount, previousWidth, previousDecimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      }\n      if (maxWidth !== undefined && width >= maxWidth) {\n        count = previousCount;\n        width = previousWidth;\n        decimalCount = previousDecimalCount;\n        break;\n      } else if (width >= minWidth) {\n        break;\n      }\n      previousCount = count;\n      previousWidth = width;\n      previousDecimalCount = decimalCount;\n      ++i;\n    }\n    const html = this.scaleBar_\n      ? this.createScaleBar(width, count, suffix)\n      : count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @return {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const resolutionScale = this.getScaleForResolution();\n    const mapScale =\n      resolutionScale < 1\n        ? Math.round(1 / resolutionScale).toLocaleString() + ' : 1'\n        : '1 : ' + Math.round(resolutionScale).toLocaleString();\n    const steps = this.scaleBarSteps_;\n    const stepWidth = width / steps;\n    const scaleSteps = [this.createMarker('absolute')];\n    for (let i = 0; i < steps; ++i) {\n      const cls =\n        i % 2 === 0 ? 'ol-scale-singlebar-odd' : 'ol-scale-singlebar-even';\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          `class=\"ol-scale-singlebar ${cls}\" ` +\n          `style=\"width: ${stepWidth}px;\"` +\n          '>' +\n          '</div>' +\n          this.createMarker('relative') +\n          // render text every second step, except when only 2 steps\n          (i % 2 === 0 || steps === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>'\n      );\n    }\n    // render text at the end\n    scaleSteps.push(this.createStepText(steps, width, true, scale, suffix));\n\n    const scaleBarText = this.scaleBarText_\n      ? `<div class=\"ol-scale-text\" style=\"width: ${width}px;\">` +\n        mapScale +\n        '</div>'\n      : '';\n    return scaleBarText + scaleSteps.join('');\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {'absolute'|'relative'} position The position, absolute or relative\n   * @return {string} The stringified div containing the marker\n   */\n  createMarker(position) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      `style=\"position: ${position}; top: ${top}px;\"` +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i The iterator\n   * @param {number} width The width the scalebar will currently use\n   * @param {boolean} isLast Flag indicating if we add the last step text\n   * @param {number} scale The current scale for the whole scalebar\n   * @param {string} suffix The suffix for the scale\n   * @return {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      `margin-left: ${margin}px;` +\n      `text-align: ${i === 0 ? 'left' : 'center'};` +\n      `min-width: ${minWidth}px;` +\n      `left: ${isLast ? width + 'px' : 'unset'};` +\n      '\">' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center,\n      'm'\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const inchesPerMeter = 1000 / 25.4;\n    return resolution * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n","/**\n * @module ol/control/ZoomSlider\n */\n\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {clamp} from '../math.js';\nimport {easeOut} from '../easing.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nconst Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1,\n};\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nclass ZoomSlider extends Control {\n  /**\n   * @param {Options} [options] Zoom slider options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      target: options.target,\n      element: document.createElement('div'),\n      render: options.render,\n    });\n\n    /**\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    this.currentResolution_ = undefined;\n\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    this.direction_ = Direction.VERTICAL;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.heightLimit_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.widthLimit_ = 0;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startX_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startY_;\n\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.thumbSize_ = null;\n\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    this.sliderInitialized_ = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoomslider';\n    const thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    const containerElement = this.element;\n    containerElement.className =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n\n    containerElement.addEventListener(\n      PointerEventType.POINTERDOWN,\n      this.handleDraggerStart_.bind(this),\n      false\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERMOVE,\n      this.handleDraggerDrag_.bind(this),\n      false\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERUP,\n      this.handleDraggerEnd_.bind(this),\n      false\n    );\n\n    containerElement.addEventListener(\n      EventType.CLICK,\n      this.handleContainerClick_.bind(this),\n      false\n    );\n    thumbElement.addEventListener(EventType.CLICK, stopPropagation, false);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      map.render();\n    }\n  }\n\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @return {boolean} Initialization successful\n   * @private\n   */\n  initSlider_() {\n    const container = this.element;\n    let containerWidth = container.offsetWidth;\n    let containerHeight = container.offsetHeight;\n    if (containerWidth === 0 && containerHeight === 0) {\n      return (this.sliderInitialized_ = false);\n    }\n\n    const containerStyle = getComputedStyle(container);\n    containerWidth -=\n      parseFloat(containerStyle['paddingRight']) +\n      parseFloat(containerStyle['paddingLeft']);\n    containerHeight -=\n      parseFloat(containerStyle['paddingTop']) +\n      parseFloat(containerStyle['paddingBottom']);\n    const thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n    const thumbStyle = getComputedStyle(thumb);\n    const thumbWidth =\n      thumb.offsetWidth +\n      parseFloat(thumbStyle['marginRight']) +\n      parseFloat(thumbStyle['marginLeft']);\n    const thumbHeight =\n      thumb.offsetHeight +\n      parseFloat(thumbStyle['marginTop']) +\n      parseFloat(thumbStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerWidth > containerHeight) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerWidth - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerHeight - thumbHeight;\n    }\n    return (this.sliderInitialized_ = true);\n  }\n\n  /**\n   * @param {PointerEvent} event The browser event to handle.\n   * @private\n   */\n  handleContainerClick_(event) {\n    const view = this.getMap().getView();\n\n    const relativePosition = this.getRelativePosition_(\n      event.offsetX - this.thumbSize_[0] / 2,\n      event.offsetY - this.thumbSize_[1] / 2\n    );\n\n    const resolution = this.getResolutionForPosition_(relativePosition);\n    const zoom = view.getConstrainedZoom(view.getZoomForResolution(resolution));\n\n    view.animateInternal({\n      zoom: zoom,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n\n  /**\n   * Handle dragger start events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerStart_(event) {\n    if (!this.dragging_ && event.target === this.element.firstElementChild) {\n      const element = /** @type {HTMLElement} */ (\n        this.element.firstElementChild\n      );\n      this.getMap().getView().beginInteraction();\n      this.startX_ = event.clientX - parseFloat(element.style.left);\n      this.startY_ = event.clientY - parseFloat(element.style.top);\n      this.dragging_ = true;\n\n      if (this.dragListenerKeys_.length === 0) {\n        const drag = this.handleDraggerDrag_;\n        const end = this.handleDraggerEnd_;\n        const doc = this.getMap().getOwnerDocument();\n        this.dragListenerKeys_.push(\n          listen(doc, PointerEventType.POINTERMOVE, drag, this),\n          listen(doc, PointerEventType.POINTERUP, end, this)\n        );\n      }\n    }\n  }\n\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerDrag_(event) {\n    if (this.dragging_) {\n      const deltaX = event.clientX - this.startX_;\n      const deltaY = event.clientY - this.startY_;\n      const relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ =\n        this.getResolutionForPosition_(relativePosition);\n      this.getMap().getView().setResolution(this.currentResolution_);\n    }\n  }\n\n  /**\n   * Handle dragger end events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerEnd_(event) {\n    if (this.dragging_) {\n      const view = this.getMap().getView();\n      view.endInteraction();\n\n      this.dragging_ = false;\n      this.startX_ = undefined;\n      this.startY_ = undefined;\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n    }\n  }\n\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  setThumbPosition_(res) {\n    const position = this.getPositionForResolution_(res);\n    const thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  }\n\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  getRelativePosition_(x, y) {\n    let amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  }\n\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  getResolutionForPosition_(position) {\n    const fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  }\n\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  getPositionForResolution_(res) {\n    const fn = this.getMap().getView().getValueForResolutionFunction();\n    return clamp(1 - fn(res), 0, 1);\n  }\n\n  /**\n   * Update the zoomslider element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    if (!mapEvent.frameState) {\n      return;\n    }\n    if (!this.sliderInitialized_ && !this.initSlider_()) {\n      return;\n    }\n    const res = mapEvent.frameState.viewState.resolution;\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\nexport default ZoomSlider;\n","/**\n * @module ol/control/ZoomToExtent\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nclass ZoomToExtent extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent|null}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    const label = options.label !== undefined ? options.label : 'E';\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label\n    );\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  }\n\n  /**\n   * @protected\n   */\n  handleZoomToExtent() {\n    const map = this.getMap();\n    const view = map.getView();\n    const extent = !this.extent\n      ? view.getProjection().getExtent()\n      : this.extent;\n    view.fitInternal(polygonFromExtent(extent));\n  }\n}\n\nexport default ZoomToExtent;\n","import {CollectionEvent as _ol_Collection$CollectionEvent} from './ol/Collection.js';\nimport $ol$Collection from './ol/Collection.js';\nimport {asImageLike as _ol_DataTile$asImageLike} from './ol/DataTile.js';\nimport {asArrayLike as _ol_DataTile$asArrayLike} from './ol/DataTile.js';\nimport {toArray as _ol_DataTile$toArray} from './ol/DataTile.js';\nimport $ol$DataTile from './ol/DataTile.js';\nimport $ol$Disposable from './ol/Disposable.js';\nimport $ol$Feature from './ol/Feature.js';\nimport {createStyleFunction as _ol_Feature$createStyleFunction} from './ol/Feature.js';\nimport {GeolocationError as _ol_Geolocation$GeolocationError} from './ol/Geolocation.js';\nimport $ol$Geolocation from './ol/Geolocation.js';\nimport $ol$Image from './ol/Image.js';\nimport {listenImage as _ol_Image$listenImage} from './ol/Image.js';\nimport {load as _ol_Image$load} from './ol/Image.js';\nimport {decodeFallback as _ol_Image$decodeFallback} from './ol/Image.js';\nimport {decode as _ol_Image$decode} from './ol/Image.js';\nimport $ol$ImageCanvas from './ol/ImageCanvas.js';\nimport $ol$ImageTile from './ol/ImageTile.js';\nimport $ol$Kinetic from './ol/Kinetic.js';\nimport $ol$Map from './ol/Map.js';\nimport $ol$MapBrowserEvent from './ol/MapBrowserEvent.js';\nimport $ol$MapBrowserEventHandler from './ol/MapBrowserEventHandler.js';\nimport $ol$MapEvent from './ol/MapEvent.js';\nimport {ObjectEvent as _ol_Object$ObjectEvent} from './ol/Object.js';\nimport $ol$Object from './ol/Object.js';\nimport $ol$Observable from './ol/Observable.js';\nimport {unByKey as _ol_Observable$unByKey} from './ol/Observable.js';\nimport $ol$Overlay from './ol/Overlay.js';\nimport $ol$Tile from './ol/Tile.js';\nimport $ol$TileCache from './ol/TileCache.js';\nimport $ol$TileQueue from './ol/TileQueue.js';\nimport {getTilePriority as _ol_TileQueue$getTilePriority} from './ol/TileQueue.js';\nimport $ol$TileRange from './ol/TileRange.js';\nimport {createOrUpdate as _ol_TileRange$createOrUpdate} from './ol/TileRange.js';\nimport $ol$VectorRenderTile from './ol/VectorRenderTile.js';\nimport $ol$View from './ol/View.js';\nimport {createCenterConstraint as _ol_View$createCenterConstraint} from './ol/View.js';\nimport {createResolutionConstraint as _ol_View$createResolutionConstraint} from './ol/View.js';\nimport {createRotationConstraint as _ol_View$createRotationConstraint} from './ol/View.js';\nimport {isNoopAnimation as _ol_View$isNoopAnimation} from './ol/View.js';\nimport {binarySearch as _ol_array$binarySearch} from './ol/array.js';\nimport {ascending as _ol_array$ascending} from './ol/array.js';\nimport {descending as _ol_array$descending} from './ol/array.js';\nimport {linearFindNearest as _ol_array$linearFindNearest} from './ol/array.js';\nimport {reverseSubArray as _ol_array$reverseSubArray} from './ol/array.js';\nimport {extend as _ol_array$extend} from './ol/array.js';\nimport {remove as _ol_array$remove} from './ol/array.js';\nimport {equals as _ol_array$equals} from './ol/array.js';\nimport {stableSort as _ol_array$stableSort} from './ol/array.js';\nimport {isSorted as _ol_array$isSorted} from './ol/array.js';\nimport {assert as _ol_asserts$assert} from './ol/asserts.js';\nimport {createExtent as _ol_centerconstraint$createExtent} from './ol/centerconstraint.js';\nimport {none as _ol_centerconstraint$none} from './ol/centerconstraint.js';\nimport {asString as _ol_color$asString} from './ol/color.js';\nimport {withAlpha as _ol_color$withAlpha} from './ol/color.js';\nimport {rgbaToLcha as _ol_color$rgbaToLcha} from './ol/color.js';\nimport {lchaToRgba as _ol_color$lchaToRgba} from './ol/color.js';\nimport {fromString as _ol_color$fromString} from './ol/color.js';\nimport {asArray as _ol_color$asArray} from './ol/color.js';\nimport {normalize as _ol_color$normalize} from './ol/color.js';\nimport {toString as _ol_color$toString} from './ol/color.js';\nimport {isStringColor as _ol_color$isStringColor} from './ol/color.js';\nimport {asColorLike as _ol_colorlike$asColorLike} from './ol/colorlike.js';\nimport {setLevel as _ol_console$setLevel} from './ol/console.js';\nimport {log as _ol_console$log} from './ol/console.js';\nimport {warn as _ol_console$warn} from './ol/console.js';\nimport {error as _ol_console$error} from './ol/console.js';\nimport {add as _ol_coordinate$add} from './ol/coordinate.js';\nimport {closestOnCircle as _ol_coordinate$closestOnCircle} from './ol/coordinate.js';\nimport {closestOnSegment as _ol_coordinate$closestOnSegment} from './ol/coordinate.js';\nimport {createStringXY as _ol_coordinate$createStringXY} from './ol/coordinate.js';\nimport {degreesToStringHDMS as _ol_coordinate$degreesToStringHDMS} from './ol/coordinate.js';\nimport {format as _ol_coordinate$format} from './ol/coordinate.js';\nimport {equals as _ol_coordinate$equals} from './ol/coordinate.js';\nimport {rotate as _ol_coordinate$rotate} from './ol/coordinate.js';\nimport {scale as _ol_coordinate$scale} from './ol/coordinate.js';\nimport {squaredDistance as _ol_coordinate$squaredDistance} from './ol/coordinate.js';\nimport {distance as _ol_coordinate$distance} from './ol/coordinate.js';\nimport {squaredDistanceToSegment as _ol_coordinate$squaredDistanceToSegment} from './ol/coordinate.js';\nimport {toStringHDMS as _ol_coordinate$toStringHDMS} from './ol/coordinate.js';\nimport {toStringXY as _ol_coordinate$toStringXY} from './ol/coordinate.js';\nimport {wrapX as _ol_coordinate$wrapX} from './ol/coordinate.js';\nimport {getWorldsAway as _ol_coordinate$getWorldsAway} from './ol/coordinate.js';\nimport {CLASS_HIDDEN as _ol_css$CLASS_HIDDEN} from './ol/css.js';\nimport {CLASS_SELECTABLE as _ol_css$CLASS_SELECTABLE} from './ol/css.js';\nimport {CLASS_UNSELECTABLE as _ol_css$CLASS_UNSELECTABLE} from './ol/css.js';\nimport {CLASS_UNSUPPORTED as _ol_css$CLASS_UNSUPPORTED} from './ol/css.js';\nimport {CLASS_CONTROL as _ol_css$CLASS_CONTROL} from './ol/css.js';\nimport {CLASS_COLLAPSED as _ol_css$CLASS_COLLAPSED} from './ol/css.js';\nimport {getFontParameters as _ol_css$getFontParameters} from './ol/css.js';\nimport {createCanvasContext2D as _ol_dom$createCanvasContext2D} from './ol/dom.js';\nimport {releaseCanvas as _ol_dom$releaseCanvas} from './ol/dom.js';\nimport {outerWidth as _ol_dom$outerWidth} from './ol/dom.js';\nimport {outerHeight as _ol_dom$outerHeight} from './ol/dom.js';\nimport {replaceNode as _ol_dom$replaceNode} from './ol/dom.js';\nimport {removeNode as _ol_dom$removeNode} from './ol/dom.js';\nimport {removeChildren as _ol_dom$removeChildren} from './ol/dom.js';\nimport {replaceChildren as _ol_dom$replaceChildren} from './ol/dom.js';\nimport {easeIn as _ol_easing$easeIn} from './ol/easing.js';\nimport {easeOut as _ol_easing$easeOut} from './ol/easing.js';\nimport {inAndOut as _ol_easing$inAndOut} from './ol/easing.js';\nimport {linear as _ol_easing$linear} from './ol/easing.js';\nimport {upAndDown as _ol_easing$upAndDown} from './ol/easing.js';\nimport {listen as _ol_events$listen} from './ol/events.js';\nimport {listenOnce as _ol_events$listenOnce} from './ol/events.js';\nimport {unlistenByKey as _ol_events$unlistenByKey} from './ol/events.js';\nimport {boundingExtent as _ol_extent$boundingExtent} from './ol/extent.js';\nimport {buffer as _ol_extent$buffer} from './ol/extent.js';\nimport {clone as _ol_extent$clone} from './ol/extent.js';\nimport {closestSquaredDistanceXY as _ol_extent$closestSquaredDistanceXY} from './ol/extent.js';\nimport {containsCoordinate as _ol_extent$containsCoordinate} from './ol/extent.js';\nimport {containsExtent as _ol_extent$containsExtent} from './ol/extent.js';\nimport {containsXY as _ol_extent$containsXY} from './ol/extent.js';\nimport {coordinateRelationship as _ol_extent$coordinateRelationship} from './ol/extent.js';\nimport {createEmpty as _ol_extent$createEmpty} from './ol/extent.js';\nimport {createOrUpdate as _ol_extent$createOrUpdate} from './ol/extent.js';\nimport {createOrUpdateEmpty as _ol_extent$createOrUpdateEmpty} from './ol/extent.js';\nimport {createOrUpdateFromCoordinate as _ol_extent$createOrUpdateFromCoordinate} from './ol/extent.js';\nimport {createOrUpdateFromCoordinates as _ol_extent$createOrUpdateFromCoordinates} from './ol/extent.js';\nimport {createOrUpdateFromFlatCoordinates as _ol_extent$createOrUpdateFromFlatCoordinates} from './ol/extent.js';\nimport {createOrUpdateFromRings as _ol_extent$createOrUpdateFromRings} from './ol/extent.js';\nimport {equals as _ol_extent$equals} from './ol/extent.js';\nimport {approximatelyEquals as _ol_extent$approximatelyEquals} from './ol/extent.js';\nimport {extend as _ol_extent$extend} from './ol/extent.js';\nimport {extendCoordinate as _ol_extent$extendCoordinate} from './ol/extent.js';\nimport {extendCoordinates as _ol_extent$extendCoordinates} from './ol/extent.js';\nimport {extendFlatCoordinates as _ol_extent$extendFlatCoordinates} from './ol/extent.js';\nimport {extendRings as _ol_extent$extendRings} from './ol/extent.js';\nimport {extendXY as _ol_extent$extendXY} from './ol/extent.js';\nimport {forEachCorner as _ol_extent$forEachCorner} from './ol/extent.js';\nimport {getArea as _ol_extent$getArea} from './ol/extent.js';\nimport {getBottomLeft as _ol_extent$getBottomLeft} from './ol/extent.js';\nimport {getBottomRight as _ol_extent$getBottomRight} from './ol/extent.js';\nimport {getCenter as _ol_extent$getCenter} from './ol/extent.js';\nimport {getCorner as _ol_extent$getCorner} from './ol/extent.js';\nimport {getEnlargedArea as _ol_extent$getEnlargedArea} from './ol/extent.js';\nimport {getForViewAndSize as _ol_extent$getForViewAndSize} from './ol/extent.js';\nimport {getRotatedViewport as _ol_extent$getRotatedViewport} from './ol/extent.js';\nimport {getHeight as _ol_extent$getHeight} from './ol/extent.js';\nimport {getIntersectionArea as _ol_extent$getIntersectionArea} from './ol/extent.js';\nimport {getIntersection as _ol_extent$getIntersection} from './ol/extent.js';\nimport {getMargin as _ol_extent$getMargin} from './ol/extent.js';\nimport {getSize as _ol_extent$getSize} from './ol/extent.js';\nimport {getTopLeft as _ol_extent$getTopLeft} from './ol/extent.js';\nimport {getTopRight as _ol_extent$getTopRight} from './ol/extent.js';\nimport {getWidth as _ol_extent$getWidth} from './ol/extent.js';\nimport {intersects as _ol_extent$intersects} from './ol/extent.js';\nimport {isEmpty as _ol_extent$isEmpty} from './ol/extent.js';\nimport {returnOrUpdate as _ol_extent$returnOrUpdate} from './ol/extent.js';\nimport {scaleFromCenter as _ol_extent$scaleFromCenter} from './ol/extent.js';\nimport {intersectsSegment as _ol_extent$intersectsSegment} from './ol/extent.js';\nimport {applyTransform as _ol_extent$applyTransform} from './ol/extent.js';\nimport {wrapX as _ol_extent$wrapX} from './ol/extent.js';\nimport {wrapAndSliceX as _ol_extent$wrapAndSliceX} from './ol/extent.js';\nimport {loadFeaturesXhr as _ol_featureloader$loadFeaturesXhr} from './ol/featureloader.js';\nimport {xhr as _ol_featureloader$xhr} from './ol/featureloader.js';\nimport {setWithCredentials as _ol_featureloader$setWithCredentials} from './ol/featureloader.js';\nimport {TRUE as _ol_functions$TRUE} from './ol/functions.js';\nimport {FALSE as _ol_functions$FALSE} from './ol/functions.js';\nimport {VOID as _ol_functions$VOID} from './ol/functions.js';\nimport {memoizeOne as _ol_functions$memoizeOne} from './ol/functions.js';\nimport {toPromise as _ol_functions$toPromise} from './ol/functions.js';\nimport {FIREFOX as _ol_has$FIREFOX} from './ol/has.js';\nimport {SAFARI as _ol_has$SAFARI} from './ol/has.js';\nimport {SAFARI_BUG_237906 as _ol_has$SAFARI_BUG_237906} from './ol/has.js';\nimport {WEBKIT as _ol_has$WEBKIT} from './ol/has.js';\nimport {MAC as _ol_has$MAC} from './ol/has.js';\nimport {DEVICE_PIXEL_RATIO as _ol_has$DEVICE_PIXEL_RATIO} from './ol/has.js';\nimport {WORKER_OFFSCREEN_CANVAS as _ol_has$WORKER_OFFSCREEN_CANVAS} from './ol/has.js';\nimport {IMAGE_DECODE as _ol_has$IMAGE_DECODE} from './ol/has.js';\nimport {CREATE_IMAGE_BITMAP as _ol_has$CREATE_IMAGE_BITMAP} from './ol/has.js';\nimport {PASSIVE_EVENT_LISTENERS as _ol_has$PASSIVE_EVENT_LISTENERS} from './ol/has.js';\nimport {all as _ol_loadingstrategy$all} from './ol/loadingstrategy.js';\nimport {bbox as _ol_loadingstrategy$bbox} from './ol/loadingstrategy.js';\nimport {tile as _ol_loadingstrategy$tile} from './ol/loadingstrategy.js';\nimport {clamp as _ol_math$clamp} from './ol/math.js';\nimport {squaredSegmentDistance as _ol_math$squaredSegmentDistance} from './ol/math.js';\nimport {squaredDistance as _ol_math$squaredDistance} from './ol/math.js';\nimport {solveLinearSystem as _ol_math$solveLinearSystem} from './ol/math.js';\nimport {toDegrees as _ol_math$toDegrees} from './ol/math.js';\nimport {toRadians as _ol_math$toRadians} from './ol/math.js';\nimport {modulo as _ol_math$modulo} from './ol/math.js';\nimport {lerp as _ol_math$lerp} from './ol/math.js';\nimport {toFixed as _ol_math$toFixed} from './ol/math.js';\nimport {round as _ol_math$round} from './ol/math.js';\nimport {floor as _ol_math$floor} from './ol/math.js';\nimport {ceil as _ol_math$ceil} from './ol/math.js';\nimport {jsonp as _ol_net$jsonp} from './ol/net.js';\nimport {ResponseError as _ol_net$ResponseError} from './ol/net.js';\nimport {ClientError as _ol_net$ClientError} from './ol/net.js';\nimport {getJSON as _ol_net$getJSON} from './ol/net.js';\nimport {resolveUrl as _ol_net$resolveUrl} from './ol/net.js';\nimport {overrideXHR as _ol_net$overrideXHR} from './ol/net.js';\nimport {restoreXHR as _ol_net$restoreXHR} from './ol/net.js';\nimport {clear as _ol_obj$clear} from './ol/obj.js';\nimport {isEmpty as _ol_obj$isEmpty} from './ol/obj.js';\nimport {disableCoordinateWarning as _ol_proj$disableCoordinateWarning} from './ol/proj.js';\nimport {cloneTransform as _ol_proj$cloneTransform} from './ol/proj.js';\nimport {identityTransform as _ol_proj$identityTransform} from './ol/proj.js';\nimport {addProjection as _ol_proj$addProjection} from './ol/proj.js';\nimport {addProjections as _ol_proj$addProjections} from './ol/proj.js';\nimport {get as _ol_proj$get} from './ol/proj.js';\nimport {getPointResolution as _ol_proj$getPointResolution} from './ol/proj.js';\nimport {addEquivalentProjections as _ol_proj$addEquivalentProjections} from './ol/proj.js';\nimport {addEquivalentTransforms as _ol_proj$addEquivalentTransforms} from './ol/proj.js';\nimport {clearAllProjections as _ol_proj$clearAllProjections} from './ol/proj.js';\nimport {createProjection as _ol_proj$createProjection} from './ol/proj.js';\nimport {createTransformFromCoordinateTransform as _ol_proj$createTransformFromCoordinateTransform} from './ol/proj.js';\nimport {addCoordinateTransforms as _ol_proj$addCoordinateTransforms} from './ol/proj.js';\nimport {fromLonLat as _ol_proj$fromLonLat} from './ol/proj.js';\nimport {toLonLat as _ol_proj$toLonLat} from './ol/proj.js';\nimport {equivalent as _ol_proj$equivalent} from './ol/proj.js';\nimport {getTransformFromProjections as _ol_proj$getTransformFromProjections} from './ol/proj.js';\nimport {getTransform as _ol_proj$getTransform} from './ol/proj.js';\nimport {transform as _ol_proj$transform} from './ol/proj.js';\nimport {transformExtent as _ol_proj$transformExtent} from './ol/proj.js';\nimport {transformWithProjections as _ol_proj$transformWithProjections} from './ol/proj.js';\nimport {setUserProjection as _ol_proj$setUserProjection} from './ol/proj.js';\nimport {clearUserProjection as _ol_proj$clearUserProjection} from './ol/proj.js';\nimport {getUserProjection as _ol_proj$getUserProjection} from './ol/proj.js';\nimport {useGeographic as _ol_proj$useGeographic} from './ol/proj.js';\nimport {toUserCoordinate as _ol_proj$toUserCoordinate} from './ol/proj.js';\nimport {fromUserCoordinate as _ol_proj$fromUserCoordinate} from './ol/proj.js';\nimport {toUserExtent as _ol_proj$toUserExtent} from './ol/proj.js';\nimport {fromUserExtent as _ol_proj$fromUserExtent} from './ol/proj.js';\nimport {toUserResolution as _ol_proj$toUserResolution} from './ol/proj.js';\nimport {fromUserResolution as _ol_proj$fromUserResolution} from './ol/proj.js';\nimport {createSafeCoordinateTransform as _ol_proj$createSafeCoordinateTransform} from './ol/proj.js';\nimport {addCommon as _ol_proj$addCommon} from './ol/proj.js';\nimport {toContext as _ol_render$toContext} from './ol/render.js';\nimport {getVectorContext as _ol_render$getVectorContext} from './ol/render.js';\nimport {getRenderPixel as _ol_render$getRenderPixel} from './ol/render.js';\nimport {canvasPool as _ol_reproj$canvasPool} from './ol/reproj.js';\nimport {calculateSourceResolution as _ol_reproj$calculateSourceResolution} from './ol/reproj.js';\nimport {calculateSourceExtentResolution as _ol_reproj$calculateSourceExtentResolution} from './ol/reproj.js';\nimport {render as _ol_reproj$render} from './ol/reproj.js';\nimport {fromResolutionLike as _ol_resolution$fromResolutionLike} from './ol/resolution.js';\nimport {createSnapToResolutions as _ol_resolutionconstraint$createSnapToResolutions} from './ol/resolutionconstraint.js';\nimport {createSnapToPower as _ol_resolutionconstraint$createSnapToPower} from './ol/resolutionconstraint.js';\nimport {createMinMaxResolution as _ol_resolutionconstraint$createMinMaxResolution} from './ol/resolutionconstraint.js';\nimport {disable as _ol_rotationconstraint$disable} from './ol/rotationconstraint.js';\nimport {none as _ol_rotationconstraint$none} from './ol/rotationconstraint.js';\nimport {createSnapToN as _ol_rotationconstraint$createSnapToN} from './ol/rotationconstraint.js';\nimport {createSnapToZero as _ol_rotationconstraint$createSnapToZero} from './ol/rotationconstraint.js';\nimport {buffer as _ol_size$buffer} from './ol/size.js';\nimport {hasArea as _ol_size$hasArea} from './ol/size.js';\nimport {scale as _ol_size$scale} from './ol/size.js';\nimport {toSize as _ol_size$toSize} from './ol/size.js';\nimport {sourcesFromTileGrid as _ol_source$sourcesFromTileGrid} from './ol/source.js';\nimport {DEFAULT_RADIUS as _ol_sphere$DEFAULT_RADIUS} from './ol/sphere.js';\nimport {getDistance as _ol_sphere$getDistance} from './ol/sphere.js';\nimport {getLength as _ol_sphere$getLength} from './ol/sphere.js';\nimport {getArea as _ol_sphere$getArea} from './ol/sphere.js';\nimport {offset as _ol_sphere$offset} from './ol/sphere.js';\nimport {padNumber as _ol_string$padNumber} from './ol/string.js';\nimport {compareVersions as _ol_string$compareVersions} from './ol/string.js';\nimport {createOrUpdate as _ol_tilecoord$createOrUpdate} from './ol/tilecoord.js';\nimport {getKeyZXY as _ol_tilecoord$getKeyZXY} from './ol/tilecoord.js';\nimport {getKey as _ol_tilecoord$getKey} from './ol/tilecoord.js';\nimport {getCacheKeyForTileKey as _ol_tilecoord$getCacheKeyForTileKey} from './ol/tilecoord.js';\nimport {fromKey as _ol_tilecoord$fromKey} from './ol/tilecoord.js';\nimport {hash as _ol_tilecoord$hash} from './ol/tilecoord.js';\nimport {withinExtentAndZ as _ol_tilecoord$withinExtentAndZ} from './ol/tilecoord.js';\nimport {getForProjection as _ol_tilegrid$getForProjection} from './ol/tilegrid.js';\nimport {wrapX as _ol_tilegrid$wrapX} from './ol/tilegrid.js';\nimport {createForExtent as _ol_tilegrid$createForExtent} from './ol/tilegrid.js';\nimport {createXYZ as _ol_tilegrid$createXYZ} from './ol/tilegrid.js';\nimport {createForProjection as _ol_tilegrid$createForProjection} from './ol/tilegrid.js';\nimport {extentFromProjection as _ol_tilegrid$extentFromProjection} from './ol/tilegrid.js';\nimport {createFromTemplate as _ol_tileurlfunction$createFromTemplate} from './ol/tileurlfunction.js';\nimport {createFromTemplates as _ol_tileurlfunction$createFromTemplates} from './ol/tileurlfunction.js';\nimport {createFromTileUrlFunctions as _ol_tileurlfunction$createFromTileUrlFunctions} from './ol/tileurlfunction.js';\nimport {nullTileUrlFunction as _ol_tileurlfunction$nullTileUrlFunction} from './ol/tileurlfunction.js';\nimport {expandUrl as _ol_tileurlfunction$expandUrl} from './ol/tileurlfunction.js';\nimport {create as _ol_transform$create} from './ol/transform.js';\nimport {reset as _ol_transform$reset} from './ol/transform.js';\nimport {multiply as _ol_transform$multiply} from './ol/transform.js';\nimport {set as _ol_transform$set} from './ol/transform.js';\nimport {setFromArray as _ol_transform$setFromArray} from './ol/transform.js';\nimport {apply as _ol_transform$apply} from './ol/transform.js';\nimport {rotate as _ol_transform$rotate} from './ol/transform.js';\nimport {scale as _ol_transform$scale} from './ol/transform.js';\nimport {makeScale as _ol_transform$makeScale} from './ol/transform.js';\nimport {translate as _ol_transform$translate} from './ol/transform.js';\nimport {compose as _ol_transform$compose} from './ol/transform.js';\nimport {composeCssTransform as _ol_transform$composeCssTransform} from './ol/transform.js';\nimport {invert as _ol_transform$invert} from './ol/transform.js';\nimport {makeInverse as _ol_transform$makeInverse} from './ol/transform.js';\nimport {determinant as _ol_transform$determinant} from './ol/transform.js';\nimport {toString as _ol_transform$toString} from './ol/transform.js';\nimport {appendParams as _ol_uri$appendParams} from './ol/uri.js';\nimport {abstract as _ol_util$abstract} from './ol/util.js';\nimport {getUid as _ol_util$getUid} from './ol/util.js';\nimport {VERSION as _ol_util$VERSION} from './ol/util.js';\nimport {XML_SCHEMA_INSTANCE_URI as _ol_xml$XML_SCHEMA_INSTANCE_URI} from './ol/xml.js';\nimport {createElementNS as _ol_xml$createElementNS} from './ol/xml.js';\nimport {getAllTextContent as _ol_xml$getAllTextContent} from './ol/xml.js';\nimport {getAllTextContent_ as _ol_xml$getAllTextContent_} from './ol/xml.js';\nimport {isDocument as _ol_xml$isDocument} from './ol/xml.js';\nimport {getAttributeNS as _ol_xml$getAttributeNS} from './ol/xml.js';\nimport {parse as _ol_xml$parse} from './ol/xml.js';\nimport {makeArrayExtender as _ol_xml$makeArrayExtender} from './ol/xml.js';\nimport {makeArrayPusher as _ol_xml$makeArrayPusher} from './ol/xml.js';\nimport {makeReplacer as _ol_xml$makeReplacer} from './ol/xml.js';\nimport {makeObjectPropertyPusher as _ol_xml$makeObjectPropertyPusher} from './ol/xml.js';\nimport {makeObjectPropertySetter as _ol_xml$makeObjectPropertySetter} from './ol/xml.js';\nimport {makeChildAppender as _ol_xml$makeChildAppender} from './ol/xml.js';\nimport {makeArraySerializer as _ol_xml$makeArraySerializer} from './ol/xml.js';\nimport {makeSimpleNodeFactory as _ol_xml$makeSimpleNodeFactory} from './ol/xml.js';\nimport {OBJECT_PROPERTY_NODE_FACTORY as _ol_xml$OBJECT_PROPERTY_NODE_FACTORY} from './ol/xml.js';\nimport {makeSequence as _ol_xml$makeSequence} from './ol/xml.js';\nimport {makeStructureNS as _ol_xml$makeStructureNS} from './ol/xml.js';\nimport {parseNode as _ol_xml$parseNode} from './ol/xml.js';\nimport {pushParseAndPop as _ol_xml$pushParseAndPop} from './ol/xml.js';\nimport {serialize as _ol_xml$serialize} from './ol/xml.js';\nimport {pushSerializeAndPop as _ol_xml$pushSerializeAndPop} from './ol/xml.js';\nimport {registerXMLSerializer as _ol_xml$registerXMLSerializer} from './ol/xml.js';\nimport {getXMLSerializer as _ol_xml$getXMLSerializer} from './ol/xml.js';\nimport {registerDocument as _ol_xml$registerDocument} from './ol/xml.js';\nimport {getDocument as _ol_xml$getDocument} from './ol/xml.js';\nimport {create as _ol_vec_mat4$create} from './ol/vec/mat4.js';\nimport {fromTransform as _ol_vec_mat4$fromTransform} from './ol/vec/mat4.js';\nimport $ol$tilegrid$TileGrid from './ol/tilegrid/TileGrid.js';\nimport $ol$tilegrid$WMTS from './ol/tilegrid/WMTS.js';\nimport {createFromCapabilitiesMatrixSet as _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet} from './ol/tilegrid/WMTS.js';\nimport {DEFAULT_MAX_ZOOM as _ol_tilegrid_common$DEFAULT_MAX_ZOOM} from './ol/tilegrid/common.js';\nimport {DEFAULT_TILE_SIZE as _ol_tilegrid_common$DEFAULT_TILE_SIZE} from './ol/tilegrid/common.js';\nimport $ol$style$Circle from './ol/style/Circle.js';\nimport $ol$style$Fill from './ol/style/Fill.js';\nimport $ol$style$Icon from './ol/style/Icon.js';\nimport $ol$style$IconImage from './ol/style/IconImage.js';\nimport {get as _ol_style_IconImage$get} from './ol/style/IconImage.js';\nimport $ol$style$IconImageCache from './ol/style/IconImageCache.js';\nimport {shared as _ol_style_IconImageCache$shared} from './ol/style/IconImageCache.js';\nimport $ol$style$Image from './ol/style/Image.js';\nimport $ol$style$RegularShape from './ol/style/RegularShape.js';\nimport $ol$style$Stroke from './ol/style/Stroke.js';\nimport $ol$style$Style from './ol/style/Style.js';\nimport {toFunction as _ol_style_Style$toFunction} from './ol/style/Style.js';\nimport {createDefaultStyle as _ol_style_Style$createDefaultStyle} from './ol/style/Style.js';\nimport {createEditingStyle as _ol_style_Style$createEditingStyle} from './ol/style/Style.js';\nimport $ol$style$Text from './ol/style/Text.js';\nimport {createDefaultStyle as _ol_style_flat$createDefaultStyle} from './ol/style/flat.js';\nimport $ol$structs$LRUCache from './ol/structs/LRUCache.js';\nimport $ol$structs$LinkedList from './ol/structs/LinkedList.js';\nimport {DROP as _ol_structs_PriorityQueue$DROP} from './ol/structs/PriorityQueue.js';\nimport $ol$structs$PriorityQueue from './ol/structs/PriorityQueue.js';\nimport $ol$structs$RBush from './ol/structs/RBush.js';\nimport {quadKey as _ol_source_BingMaps$quadKey} from './ol/source/BingMaps.js';\nimport $ol$source$BingMaps from './ol/source/BingMaps.js';\nimport $ol$source$Cluster from './ol/source/Cluster.js';\nimport $ol$source$DataTile from './ol/source/DataTile.js';\nimport {ImageSourceEvent as _ol_source_Image$ImageSourceEvent} from './ol/source/Image.js';\nimport $ol$source$Image from './ol/source/Image.js';\nimport {defaultImageLoadFunction as _ol_source_Image$defaultImageLoadFunction} from './ol/source/Image.js';\nimport {getRequestExtent as _ol_source_Image$getRequestExtent} from './ol/source/Image.js';\nimport $ol$source$ImageArcGISRest from './ol/source/ImageArcGISRest.js';\nimport $ol$source$ImageCanvas from './ol/source/ImageCanvas.js';\nimport $ol$source$ImageStatic from './ol/source/ImageStatic.js';\nimport $ol$source$ImageWMS from './ol/source/ImageWMS.js';\nimport $ol$source$OGCMapTile from './ol/source/OGCMapTile.js';\nimport {ATTRIBUTION as _ol_source_OSM$ATTRIBUTION} from './ol/source/OSM.js';\nimport $ol$source$OSM from './ol/source/OSM.js';\nimport {newImageData as _ol_source_Raster$newImageData} from './ol/source/Raster.js';\nimport {Processor as _ol_source_Raster$Processor} from './ol/source/Raster.js';\nimport {RasterSourceEvent as _ol_source_Raster$RasterSourceEvent} from './ol/source/Raster.js';\nimport $ol$source$Raster from './ol/source/Raster.js';\nimport $ol$source$Source from './ol/source/Source.js';\nimport $ol$source$StadiaMaps from './ol/source/StadiaMaps.js';\nimport $ol$source$Tile from './ol/source/Tile.js';\nimport {TileSourceEvent as _ol_source_Tile$TileSourceEvent} from './ol/source/Tile.js';\nimport $ol$source$TileArcGISRest from './ol/source/TileArcGISRest.js';\nimport $ol$source$TileDebug from './ol/source/TileDebug.js';\nimport $ol$source$TileImage from './ol/source/TileImage.js';\nimport $ol$source$TileJSON from './ol/source/TileJSON.js';\nimport $ol$source$TileWMS from './ol/source/TileWMS.js';\nimport {CustomTile as _ol_source_UTFGrid$CustomTile} from './ol/source/UTFGrid.js';\nimport $ol$source$UTFGrid from './ol/source/UTFGrid.js';\nimport $ol$source$UrlTile from './ol/source/UrlTile.js';\nimport {VectorSourceEvent as _ol_source_Vector$VectorSourceEvent} from './ol/source/Vector.js';\nimport $ol$source$Vector from './ol/source/Vector.js';\nimport $ol$source$WMTS from './ol/source/WMTS.js';\nimport {optionsFromCapabilities as _ol_source_WMTS$optionsFromCapabilities} from './ol/source/WMTS.js';\nimport $ol$source$XYZ from './ol/source/XYZ.js';\nimport {getRequestUrl as _ol_source_arcgisRest$getRequestUrl} from './ol/source/arcgisRest.js';\nimport {createLoader as _ol_source_arcgisRest$createLoader} from './ol/source/arcgisRest.js';\nimport {DEFAULT_WMS_VERSION as _ol_source_common$DEFAULT_WMS_VERSION} from './ol/source/common.js';\nimport {DECIMALS as _ol_source_common$DECIMALS} from './ol/source/common.js';\nimport {getMapTileUrlTemplate as _ol_source_ogcTileUtil$getMapTileUrlTemplate} from './ol/source/ogcTileUtil.js';\nimport {getVectorTileUrlTemplate as _ol_source_ogcTileUtil$getVectorTileUrlTemplate} from './ol/source/ogcTileUtil.js';\nimport {getTileSetInfo as _ol_source_ogcTileUtil$getTileSetInfo} from './ol/source/ogcTileUtil.js';\nimport {createLoader as _ol_source_static$createLoader} from './ol/source/static.js';\nimport {DEFAULT_VERSION as _ol_source_wms$DEFAULT_VERSION} from './ol/source/wms.js';\nimport {getRequestUrl as _ol_source_wms$getRequestUrl} from './ol/source/wms.js';\nimport {getImageSrc as _ol_source_wms$getImageSrc} from './ol/source/wms.js';\nimport {getRequestParams as _ol_source_wms$getRequestParams} from './ol/source/wms.js';\nimport {createLoader as _ol_source_wms$createLoader} from './ol/source/wms.js';\nimport {getFeatureInfoUrl as _ol_source_wms$getFeatureInfoUrl} from './ol/source/wms.js';\nimport {getLegendUrl as _ol_source_wms$getLegendUrl} from './ol/source/wms.js';\nimport $ol$reproj$DataTile from './ol/reproj/DataTile.js';\nimport $ol$reproj$Image from './ol/reproj/Image.js';\nimport $ol$reproj$Tile from './ol/reproj/Tile.js';\nimport $ol$reproj$Triangulation from './ol/reproj/Triangulation.js';\nimport {ERROR_THRESHOLD as _ol_reproj_common$ERROR_THRESHOLD} from './ol/reproj/common.js';\nimport $ol$renderer$Composite from './ol/renderer/Composite.js';\nimport $ol$renderer$Layer from './ol/renderer/Layer.js';\nimport $ol$renderer$Map from './ol/renderer/Map.js';\nimport {defaultOrder as _ol_renderer_vector$defaultOrder} from './ol/renderer/vector.js';\nimport {getSquaredTolerance as _ol_renderer_vector$getSquaredTolerance} from './ol/renderer/vector.js';\nimport {getTolerance as _ol_renderer_vector$getTolerance} from './ol/renderer/vector.js';\nimport {renderFeature as _ol_renderer_vector$renderFeature} from './ol/renderer/vector.js';\nimport $ol$renderer$canvas$ImageLayer from './ol/renderer/canvas/ImageLayer.js';\nimport {canvasPool as _ol_renderer_canvas_Layer$canvasPool} from './ol/renderer/canvas/Layer.js';\nimport $ol$renderer$canvas$Layer from './ol/renderer/canvas/Layer.js';\nimport $ol$renderer$canvas$TileLayer from './ol/renderer/canvas/TileLayer.js';\nimport $ol$renderer$canvas$VectorImageLayer from './ol/renderer/canvas/VectorImageLayer.js';\nimport $ol$renderer$canvas$VectorLayer from './ol/renderer/canvas/VectorLayer.js';\nimport $ol$render$Box from './ol/render/Box.js';\nimport $ol$render$Event from './ol/render/Event.js';\nimport $ol$render$Feature from './ol/render/Feature.js';\nimport {toGeometry as _ol_render_Feature$toGeometry} from './ol/render/Feature.js';\nimport {toFeature as _ol_render_Feature$toFeature} from './ol/render/Feature.js';\nimport $ol$render$VectorContext from './ol/render/VectorContext.js';\nimport {defaultFont as _ol_render_canvas$defaultFont} from './ol/render/canvas.js';\nimport {defaultFillStyle as _ol_render_canvas$defaultFillStyle} from './ol/render/canvas.js';\nimport {defaultLineCap as _ol_render_canvas$defaultLineCap} from './ol/render/canvas.js';\nimport {defaultLineDash as _ol_render_canvas$defaultLineDash} from './ol/render/canvas.js';\nimport {defaultLineDashOffset as _ol_render_canvas$defaultLineDashOffset} from './ol/render/canvas.js';\nimport {defaultLineJoin as _ol_render_canvas$defaultLineJoin} from './ol/render/canvas.js';\nimport {defaultMiterLimit as _ol_render_canvas$defaultMiterLimit} from './ol/render/canvas.js';\nimport {defaultStrokeStyle as _ol_render_canvas$defaultStrokeStyle} from './ol/render/canvas.js';\nimport {defaultTextAlign as _ol_render_canvas$defaultTextAlign} from './ol/render/canvas.js';\nimport {defaultTextBaseline as _ol_render_canvas$defaultTextBaseline} from './ol/render/canvas.js';\nimport {defaultPadding as _ol_render_canvas$defaultPadding} from './ol/render/canvas.js';\nimport {defaultLineWidth as _ol_render_canvas$defaultLineWidth} from './ol/render/canvas.js';\nimport {checkedFonts as _ol_render_canvas$checkedFonts} from './ol/render/canvas.js';\nimport {textHeights as _ol_render_canvas$textHeights} from './ol/render/canvas.js';\nimport {registerFont as _ol_render_canvas$registerFont} from './ol/render/canvas.js';\nimport {measureTextHeight as _ol_render_canvas$measureTextHeight} from './ol/render/canvas.js';\nimport {measureTextWidth as _ol_render_canvas$measureTextWidth} from './ol/render/canvas.js';\nimport {measureAndCacheTextWidth as _ol_render_canvas$measureAndCacheTextWidth} from './ol/render/canvas.js';\nimport {getTextDimensions as _ol_render_canvas$getTextDimensions} from './ol/render/canvas.js';\nimport {rotateAtOffset as _ol_render_canvas$rotateAtOffset} from './ol/render/canvas.js';\nimport {drawImageOrLabel as _ol_render_canvas$drawImageOrLabel} from './ol/render/canvas.js';\nimport $ol$render$canvas$Builder from './ol/render/canvas/Builder.js';\nimport $ol$render$canvas$BuilderGroup from './ol/render/canvas/BuilderGroup.js';\nimport $ol$render$canvas$Executor from './ol/render/canvas/Executor.js';\nimport $ol$render$canvas$ExecutorGroup from './ol/render/canvas/ExecutorGroup.js';\nimport {getPixelIndexArray as _ol_render_canvas_ExecutorGroup$getPixelIndexArray} from './ol/render/canvas/ExecutorGroup.js';\nimport $ol$render$canvas$ImageBuilder from './ol/render/canvas/ImageBuilder.js';\nimport $ol$render$canvas$Immediate from './ol/render/canvas/Immediate.js';\nimport {fillInstruction as _ol_render_canvas_Instruction$fillInstruction} from './ol/render/canvas/Instruction.js';\nimport {strokeInstruction as _ol_render_canvas_Instruction$strokeInstruction} from './ol/render/canvas/Instruction.js';\nimport {beginPathInstruction as _ol_render_canvas_Instruction$beginPathInstruction} from './ol/render/canvas/Instruction.js';\nimport {closePathInstruction as _ol_render_canvas_Instruction$closePathInstruction} from './ol/render/canvas/Instruction.js';\nimport $ol$render$canvas$LineStringBuilder from './ol/render/canvas/LineStringBuilder.js';\nimport $ol$render$canvas$PolygonBuilder from './ol/render/canvas/PolygonBuilder.js';\nimport {TEXT_ALIGN as _ol_render_canvas_TextBuilder$TEXT_ALIGN} from './ol/render/canvas/TextBuilder.js';\nimport $ol$render$canvas$TextBuilder from './ol/render/canvas/TextBuilder.js';\nimport {HIT_DETECT_RESOLUTION as _ol_render_canvas_hitdetect$HIT_DETECT_RESOLUTION} from './ol/render/canvas/hitdetect.js';\nimport {createHitDetectionImageData as _ol_render_canvas_hitdetect$createHitDetectionImageData} from './ol/render/canvas/hitdetect.js';\nimport {hitDetect as _ol_render_canvas_hitdetect$hitDetect} from './ol/render/canvas/hitdetect.js';\nimport {rulesToStyleFunction as _ol_render_canvas_style$rulesToStyleFunction} from './ol/render/canvas/style.js';\nimport {flatStylesToStyleFunction as _ol_render_canvas_style$flatStylesToStyleFunction} from './ol/render/canvas/style.js';\nimport {buildRuleSet as _ol_render_canvas_style$buildRuleSet} from './ol/render/canvas/style.js';\nimport {buildStyle as _ol_render_canvas_style$buildStyle} from './ol/render/canvas/style.js';\nimport $ol$proj$Projection from './ol/proj/Projection.js';\nimport {fromCode as _ol_proj_Units$fromCode} from './ol/proj/Units.js';\nimport {METERS_PER_UNIT as _ol_proj_Units$METERS_PER_UNIT} from './ol/proj/Units.js';\nimport {RADIUS as _ol_proj_epsg3857$RADIUS} from './ol/proj/epsg3857.js';\nimport {HALF_SIZE as _ol_proj_epsg3857$HALF_SIZE} from './ol/proj/epsg3857.js';\nimport {EXTENT as _ol_proj_epsg3857$EXTENT} from './ol/proj/epsg3857.js';\nimport {WORLD_EXTENT as _ol_proj_epsg3857$WORLD_EXTENT} from './ol/proj/epsg3857.js';\nimport {MAX_SAFE_Y as _ol_proj_epsg3857$MAX_SAFE_Y} from './ol/proj/epsg3857.js';\nimport {PROJECTIONS as _ol_proj_epsg3857$PROJECTIONS} from './ol/proj/epsg3857.js';\nimport {fromEPSG4326 as _ol_proj_epsg3857$fromEPSG4326} from './ol/proj/epsg3857.js';\nimport {toEPSG4326 as _ol_proj_epsg3857$toEPSG4326} from './ol/proj/epsg3857.js';\nimport {RADIUS as _ol_proj_epsg4326$RADIUS} from './ol/proj/epsg4326.js';\nimport {EXTENT as _ol_proj_epsg4326$EXTENT} from './ol/proj/epsg4326.js';\nimport {METERS_PER_UNIT as _ol_proj_epsg4326$METERS_PER_UNIT} from './ol/proj/epsg4326.js';\nimport {PROJECTIONS as _ol_proj_epsg4326$PROJECTIONS} from './ol/proj/epsg4326.js';\nimport {isRegistered as _ol_proj_proj4$isRegistered} from './ol/proj/proj4.js';\nimport {unregister as _ol_proj_proj4$unregister} from './ol/proj/proj4.js';\nimport {register as _ol_proj_proj4$register} from './ol/proj/proj4.js';\nimport {setEPSGLookup as _ol_proj_proj4$setEPSGLookup} from './ol/proj/proj4.js';\nimport {getEPSGLookup as _ol_proj_proj4$getEPSGLookup} from './ol/proj/proj4.js';\nimport {fromEPSGCode as _ol_proj_proj4$fromEPSGCode} from './ol/proj/proj4.js';\nimport {epsgLookupMapTiler as _ol_proj_proj4$epsgLookupMapTiler} from './ol/proj/proj4.js';\nimport {clear as _ol_proj_projections$clear} from './ol/proj/projections.js';\nimport {get as _ol_proj_projections$get} from './ol/proj/projections.js';\nimport {add as _ol_proj_projections$add} from './ol/proj/projections.js';\nimport {clear as _ol_proj_transforms$clear} from './ol/proj/transforms.js';\nimport {add as _ol_proj_transforms$add} from './ol/proj/transforms.js';\nimport {remove as _ol_proj_transforms$remove} from './ol/proj/transforms.js';\nimport {get as _ol_proj_transforms$get} from './ol/proj/transforms.js';\nimport $ol$layer$Base from './ol/layer/Base.js';\nimport $ol$layer$BaseImage from './ol/layer/BaseImage.js';\nimport $ol$layer$BaseTile from './ol/layer/BaseTile.js';\nimport $ol$layer$BaseVector from './ol/layer/BaseVector.js';\nimport $ol$layer$Graticule from './ol/layer/Graticule.js';\nimport {GroupEvent as _ol_layer_Group$GroupEvent} from './ol/layer/Group.js';\nimport $ol$layer$Group from './ol/layer/Group.js';\nimport $ol$layer$Heatmap from './ol/layer/Heatmap.js';\nimport $ol$layer$Image from './ol/layer/Image.js';\nimport $ol$layer$Layer from './ol/layer/Layer.js';\nimport {inView as _ol_layer_Layer$inView} from './ol/layer/Layer.js';\nimport $ol$layer$Tile from './ol/layer/Tile.js';\nimport $ol$layer$Vector from './ol/layer/Vector.js';\nimport $ol$layer$VectorImage from './ol/layer/VectorImage.js';\nimport $ol$interaction$DblClickDragZoom from './ol/interaction/DblClickDragZoom.js';\nimport $ol$interaction$DoubleClickZoom from './ol/interaction/DoubleClickZoom.js';\nimport {DragAndDropEvent as _ol_interaction_DragAndDrop$DragAndDropEvent} from './ol/interaction/DragAndDrop.js';\nimport $ol$interaction$DragAndDrop from './ol/interaction/DragAndDrop.js';\nimport {DragBoxEvent as _ol_interaction_DragBox$DragBoxEvent} from './ol/interaction/DragBox.js';\nimport $ol$interaction$DragBox from './ol/interaction/DragBox.js';\nimport $ol$interaction$DragPan from './ol/interaction/DragPan.js';\nimport $ol$interaction$DragRotate from './ol/interaction/DragRotate.js';\nimport $ol$interaction$DragRotateAndZoom from './ol/interaction/DragRotateAndZoom.js';\nimport $ol$interaction$DragZoom from './ol/interaction/DragZoom.js';\nimport {DrawEvent as _ol_interaction_Draw$DrawEvent} from './ol/interaction/Draw.js';\nimport $ol$interaction$Draw from './ol/interaction/Draw.js';\nimport {createRegularPolygon as _ol_interaction_Draw$createRegularPolygon} from './ol/interaction/Draw.js';\nimport {createBox as _ol_interaction_Draw$createBox} from './ol/interaction/Draw.js';\nimport {ExtentEvent as _ol_interaction_Extent$ExtentEvent} from './ol/interaction/Extent.js';\nimport $ol$interaction$Extent from './ol/interaction/Extent.js';\nimport $ol$interaction$Interaction from './ol/interaction/Interaction.js';\nimport {pan as _ol_interaction_Interaction$pan} from './ol/interaction/Interaction.js';\nimport {zoomByDelta as _ol_interaction_Interaction$zoomByDelta} from './ol/interaction/Interaction.js';\nimport $ol$interaction$KeyboardPan from './ol/interaction/KeyboardPan.js';\nimport $ol$interaction$KeyboardZoom from './ol/interaction/KeyboardZoom.js';\nimport $ol$interaction$Link from './ol/interaction/Link.js';\nimport {ModifyEvent as _ol_interaction_Modify$ModifyEvent} from './ol/interaction/Modify.js';\nimport $ol$interaction$Modify from './ol/interaction/Modify.js';\nimport $ol$interaction$MouseWheelZoom from './ol/interaction/MouseWheelZoom.js';\nimport $ol$interaction$PinchRotate from './ol/interaction/PinchRotate.js';\nimport $ol$interaction$PinchZoom from './ol/interaction/PinchZoom.js';\nimport $ol$interaction$Pointer from './ol/interaction/Pointer.js';\nimport {centroid as _ol_interaction_Pointer$centroid} from './ol/interaction/Pointer.js';\nimport {SelectEvent as _ol_interaction_Select$SelectEvent} from './ol/interaction/Select.js';\nimport $ol$interaction$Select from './ol/interaction/Select.js';\nimport $ol$interaction$Snap from './ol/interaction/Snap.js';\nimport {TranslateEvent as _ol_interaction_Translate$TranslateEvent} from './ol/interaction/Translate.js';\nimport $ol$interaction$Translate from './ol/interaction/Translate.js';\nimport {defaults as _ol_interaction_defaults$defaults} from './ol/interaction/defaults.js';\nimport $ol$geom$Circle from './ol/geom/Circle.js';\nimport $ol$geom$Geometry from './ol/geom/Geometry.js';\nimport $ol$geom$GeometryCollection from './ol/geom/GeometryCollection.js';\nimport $ol$geom$LineString from './ol/geom/LineString.js';\nimport $ol$geom$LinearRing from './ol/geom/LinearRing.js';\nimport $ol$geom$MultiLineString from './ol/geom/MultiLineString.js';\nimport $ol$geom$MultiPoint from './ol/geom/MultiPoint.js';\nimport $ol$geom$MultiPolygon from './ol/geom/MultiPolygon.js';\nimport $ol$geom$Point from './ol/geom/Point.js';\nimport $ol$geom$Polygon from './ol/geom/Polygon.js';\nimport {circular as _ol_geom_Polygon$circular} from './ol/geom/Polygon.js';\nimport {fromExtent as _ol_geom_Polygon$fromExtent} from './ol/geom/Polygon.js';\nimport {fromCircle as _ol_geom_Polygon$fromCircle} from './ol/geom/Polygon.js';\nimport {makeRegular as _ol_geom_Polygon$makeRegular} from './ol/geom/Polygon.js';\nimport $ol$geom$SimpleGeometry from './ol/geom/SimpleGeometry.js';\nimport {getLayoutForStride as _ol_geom_SimpleGeometry$getLayoutForStride} from './ol/geom/SimpleGeometry.js';\nimport {getStrideForLayout as _ol_geom_SimpleGeometry$getStrideForLayout} from './ol/geom/SimpleGeometry.js';\nimport {transformGeom2D as _ol_geom_SimpleGeometry$transformGeom2D} from './ol/geom/SimpleGeometry.js';\nimport {linearRing as _ol_geom_flat_area$linearRing} from './ol/geom/flat/area.js';\nimport {linearRings as _ol_geom_flat_area$linearRings} from './ol/geom/flat/area.js';\nimport {linearRingss as _ol_geom_flat_area$linearRingss} from './ol/geom/flat/area.js';\nimport {linearRingss as _ol_geom_flat_center$linearRingss} from './ol/geom/flat/center.js';\nimport {maxSquaredDelta as _ol_geom_flat_closest$maxSquaredDelta} from './ol/geom/flat/closest.js';\nimport {arrayMaxSquaredDelta as _ol_geom_flat_closest$arrayMaxSquaredDelta} from './ol/geom/flat/closest.js';\nimport {multiArrayMaxSquaredDelta as _ol_geom_flat_closest$multiArrayMaxSquaredDelta} from './ol/geom/flat/closest.js';\nimport {assignClosestPoint as _ol_geom_flat_closest$assignClosestPoint} from './ol/geom/flat/closest.js';\nimport {assignClosestArrayPoint as _ol_geom_flat_closest$assignClosestArrayPoint} from './ol/geom/flat/closest.js';\nimport {assignClosestMultiArrayPoint as _ol_geom_flat_closest$assignClosestMultiArrayPoint} from './ol/geom/flat/closest.js';\nimport {linearRingContainsExtent as _ol_geom_flat_contains$linearRingContainsExtent} from './ol/geom/flat/contains.js';\nimport {linearRingContainsXY as _ol_geom_flat_contains$linearRingContainsXY} from './ol/geom/flat/contains.js';\nimport {linearRingsContainsXY as _ol_geom_flat_contains$linearRingsContainsXY} from './ol/geom/flat/contains.js';\nimport {linearRingssContainsXY as _ol_geom_flat_contains$linearRingssContainsXY} from './ol/geom/flat/contains.js';\nimport {deflateCoordinate as _ol_geom_flat_deflate$deflateCoordinate} from './ol/geom/flat/deflate.js';\nimport {deflateCoordinates as _ol_geom_flat_deflate$deflateCoordinates} from './ol/geom/flat/deflate.js';\nimport {deflateCoordinatesArray as _ol_geom_flat_deflate$deflateCoordinatesArray} from './ol/geom/flat/deflate.js';\nimport {deflateMultiCoordinatesArray as _ol_geom_flat_deflate$deflateMultiCoordinatesArray} from './ol/geom/flat/deflate.js';\nimport {flipXY as _ol_geom_flat_flip$flipXY} from './ol/geom/flat/flip.js';\nimport {greatCircleArc as _ol_geom_flat_geodesic$greatCircleArc} from './ol/geom/flat/geodesic.js';\nimport {meridian as _ol_geom_flat_geodesic$meridian} from './ol/geom/flat/geodesic.js';\nimport {parallel as _ol_geom_flat_geodesic$parallel} from './ol/geom/flat/geodesic.js';\nimport {inflateCoordinates as _ol_geom_flat_inflate$inflateCoordinates} from './ol/geom/flat/inflate.js';\nimport {inflateCoordinatesArray as _ol_geom_flat_inflate$inflateCoordinatesArray} from './ol/geom/flat/inflate.js';\nimport {inflateMultiCoordinatesArray as _ol_geom_flat_inflate$inflateMultiCoordinatesArray} from './ol/geom/flat/inflate.js';\nimport {getInteriorPointOfArray as _ol_geom_flat_interiorpoint$getInteriorPointOfArray} from './ol/geom/flat/interiorpoint.js';\nimport {getInteriorPointsOfMultiArray as _ol_geom_flat_interiorpoint$getInteriorPointsOfMultiArray} from './ol/geom/flat/interiorpoint.js';\nimport {interpolatePoint as _ol_geom_flat_interpolate$interpolatePoint} from './ol/geom/flat/interpolate.js';\nimport {lineStringCoordinateAtM as _ol_geom_flat_interpolate$lineStringCoordinateAtM} from './ol/geom/flat/interpolate.js';\nimport {lineStringsCoordinateAtM as _ol_geom_flat_interpolate$lineStringsCoordinateAtM} from './ol/geom/flat/interpolate.js';\nimport {intersectsLineString as _ol_geom_flat_intersectsextent$intersectsLineString} from './ol/geom/flat/intersectsextent.js';\nimport {intersectsLineStringArray as _ol_geom_flat_intersectsextent$intersectsLineStringArray} from './ol/geom/flat/intersectsextent.js';\nimport {intersectsLinearRing as _ol_geom_flat_intersectsextent$intersectsLinearRing} from './ol/geom/flat/intersectsextent.js';\nimport {intersectsLinearRingArray as _ol_geom_flat_intersectsextent$intersectsLinearRingArray} from './ol/geom/flat/intersectsextent.js';\nimport {intersectsLinearRingMultiArray as _ol_geom_flat_intersectsextent$intersectsLinearRingMultiArray} from './ol/geom/flat/intersectsextent.js';\nimport {lineStringLength as _ol_geom_flat_length$lineStringLength} from './ol/geom/flat/length.js';\nimport {linearRingLength as _ol_geom_flat_length$linearRingLength} from './ol/geom/flat/length.js';\nimport {linearRingIsClockwise as _ol_geom_flat_orient$linearRingIsClockwise} from './ol/geom/flat/orient.js';\nimport {linearRingsAreOriented as _ol_geom_flat_orient$linearRingsAreOriented} from './ol/geom/flat/orient.js';\nimport {linearRingssAreOriented as _ol_geom_flat_orient$linearRingssAreOriented} from './ol/geom/flat/orient.js';\nimport {orientLinearRings as _ol_geom_flat_orient$orientLinearRings} from './ol/geom/flat/orient.js';\nimport {orientLinearRingsArray as _ol_geom_flat_orient$orientLinearRingsArray} from './ol/geom/flat/orient.js';\nimport {inflateEnds as _ol_geom_flat_orient$inflateEnds} from './ol/geom/flat/orient.js';\nimport {coordinates as _ol_geom_flat_reverse$coordinates} from './ol/geom/flat/reverse.js';\nimport {forEach as _ol_geom_flat_segments$forEach} from './ol/geom/flat/segments.js';\nimport {simplifyLineString as _ol_geom_flat_simplify$simplifyLineString} from './ol/geom/flat/simplify.js';\nimport {douglasPeucker as _ol_geom_flat_simplify$douglasPeucker} from './ol/geom/flat/simplify.js';\nimport {douglasPeuckerArray as _ol_geom_flat_simplify$douglasPeuckerArray} from './ol/geom/flat/simplify.js';\nimport {douglasPeuckerMultiArray as _ol_geom_flat_simplify$douglasPeuckerMultiArray} from './ol/geom/flat/simplify.js';\nimport {radialDistance as _ol_geom_flat_simplify$radialDistance} from './ol/geom/flat/simplify.js';\nimport {snap as _ol_geom_flat_simplify$snap} from './ol/geom/flat/simplify.js';\nimport {quantize as _ol_geom_flat_simplify$quantize} from './ol/geom/flat/simplify.js';\nimport {quantizeArray as _ol_geom_flat_simplify$quantizeArray} from './ol/geom/flat/simplify.js';\nimport {quantizeMultiArray as _ol_geom_flat_simplify$quantizeMultiArray} from './ol/geom/flat/simplify.js';\nimport {matchingChunk as _ol_geom_flat_straightchunk$matchingChunk} from './ol/geom/flat/straightchunk.js';\nimport {drawTextOnPath as _ol_geom_flat_textpath$drawTextOnPath} from './ol/geom/flat/textpath.js';\nimport {lineStringIsClosed as _ol_geom_flat_topology$lineStringIsClosed} from './ol/geom/flat/topology.js';\nimport {transform2D as _ol_geom_flat_transform$transform2D} from './ol/geom/flat/transform.js';\nimport {rotate as _ol_geom_flat_transform$rotate} from './ol/geom/flat/transform.js';\nimport {scale as _ol_geom_flat_transform$scale} from './ol/geom/flat/transform.js';\nimport {translate as _ol_geom_flat_transform$translate} from './ol/geom/flat/transform.js';\nimport $ol$format$Feature from './ol/format/Feature.js';\nimport {transformGeometryWithOptions as _ol_format_Feature$transformGeometryWithOptions} from './ol/format/Feature.js';\nimport {transformExtentWithOptions as _ol_format_Feature$transformExtentWithOptions} from './ol/format/Feature.js';\nimport {createRenderFeature as _ol_format_Feature$createRenderFeature} from './ol/format/Feature.js';\nimport {createGeometry as _ol_format_Feature$createGeometry} from './ol/format/Feature.js';\nimport $ol$format$GPX from './ol/format/GPX.js';\nimport $ol$format$GeoJSON from './ol/format/GeoJSON.js';\nimport $ol$format$IGC from './ol/format/IGC.js';\nimport $ol$format$JSONFeature from './ol/format/JSONFeature.js';\nimport {getDefaultFillStyle as _ol_format_KML$getDefaultFillStyle} from './ol/format/KML.js';\nimport {getDefaultImageStyle as _ol_format_KML$getDefaultImageStyle} from './ol/format/KML.js';\nimport {getDefaultStrokeStyle as _ol_format_KML$getDefaultStrokeStyle} from './ol/format/KML.js';\nimport {getDefaultTextStyle as _ol_format_KML$getDefaultTextStyle} from './ol/format/KML.js';\nimport {getDefaultStyle as _ol_format_KML$getDefaultStyle} from './ol/format/KML.js';\nimport {getDefaultStyleArray as _ol_format_KML$getDefaultStyleArray} from './ol/format/KML.js';\nimport $ol$format$KML from './ol/format/KML.js';\nimport {readFlatCoordinates as _ol_format_KML$readFlatCoordinates} from './ol/format/KML.js';\nimport $ol$format$MVT from './ol/format/MVT.js';\nimport $ol$format$OSMXML from './ol/format/OSMXML.js';\nimport $ol$format$OWS from './ol/format/OWS.js';\nimport $ol$format$Polyline from './ol/format/Polyline.js';\nimport {encodeDeltas as _ol_format_Polyline$encodeDeltas} from './ol/format/Polyline.js';\nimport {decodeDeltas as _ol_format_Polyline$decodeDeltas} from './ol/format/Polyline.js';\nimport {encodeFloats as _ol_format_Polyline$encodeFloats} from './ol/format/Polyline.js';\nimport {decodeFloats as _ol_format_Polyline$decodeFloats} from './ol/format/Polyline.js';\nimport {encodeSignedIntegers as _ol_format_Polyline$encodeSignedIntegers} from './ol/format/Polyline.js';\nimport {decodeSignedIntegers as _ol_format_Polyline$decodeSignedIntegers} from './ol/format/Polyline.js';\nimport {encodeUnsignedIntegers as _ol_format_Polyline$encodeUnsignedIntegers} from './ol/format/Polyline.js';\nimport {decodeUnsignedIntegers as _ol_format_Polyline$decodeUnsignedIntegers} from './ol/format/Polyline.js';\nimport {encodeUnsignedInteger as _ol_format_Polyline$encodeUnsignedInteger} from './ol/format/Polyline.js';\nimport $ol$format$TextFeature from './ol/format/TextFeature.js';\nimport $ol$format$TopoJSON from './ol/format/TopoJSON.js';\nimport $ol$format$WFS from './ol/format/WFS.js';\nimport {writeFilter as _ol_format_WFS$writeFilter} from './ol/format/WFS.js';\nimport $ol$format$WMSGetFeatureInfo from './ol/format/WMSGetFeatureInfo.js';\nimport $ol$format$WMTSCapabilities from './ol/format/WMTSCapabilities.js';\nimport {readHref as _ol_format_xlink$readHref} from './ol/format/xlink.js';\nimport {readBoolean as _ol_format_xsd$readBoolean} from './ol/format/xsd.js';\nimport {readBooleanString as _ol_format_xsd$readBooleanString} from './ol/format/xsd.js';\nimport {readDateTime as _ol_format_xsd$readDateTime} from './ol/format/xsd.js';\nimport {readDecimal as _ol_format_xsd$readDecimal} from './ol/format/xsd.js';\nimport {readDecimalString as _ol_format_xsd$readDecimalString} from './ol/format/xsd.js';\nimport {readPositiveInteger as _ol_format_xsd$readPositiveInteger} from './ol/format/xsd.js';\nimport {readNonNegativeIntegerString as _ol_format_xsd$readNonNegativeIntegerString} from './ol/format/xsd.js';\nimport {readString as _ol_format_xsd$readString} from './ol/format/xsd.js';\nimport {writeBooleanTextNode as _ol_format_xsd$writeBooleanTextNode} from './ol/format/xsd.js';\nimport {writeCDATASection as _ol_format_xsd$writeCDATASection} from './ol/format/xsd.js';\nimport {writeDateTimeTextNode as _ol_format_xsd$writeDateTimeTextNode} from './ol/format/xsd.js';\nimport {writeDecimalTextNode as _ol_format_xsd$writeDecimalTextNode} from './ol/format/xsd.js';\nimport {writeNonNegativeIntegerTextNode as _ol_format_xsd$writeNonNegativeIntegerTextNode} from './ol/format/xsd.js';\nimport {writeStringTextNode as _ol_format_xsd$writeStringTextNode} from './ol/format/xsd.js';\nimport {newEvaluationContext as _ol_expr_cpu$newEvaluationContext} from './ol/expr/cpu.js';\nimport {buildExpression as _ol_expr_cpu$buildExpression} from './ol/expr/cpu.js';\nimport {NoneType as _ol_expr_expression$NoneType} from './ol/expr/expression.js';\nimport {BooleanType as _ol_expr_expression$BooleanType} from './ol/expr/expression.js';\nimport {NumberType as _ol_expr_expression$NumberType} from './ol/expr/expression.js';\nimport {StringType as _ol_expr_expression$StringType} from './ol/expr/expression.js';\nimport {ColorType as _ol_expr_expression$ColorType} from './ol/expr/expression.js';\nimport {NumberArrayType as _ol_expr_expression$NumberArrayType} from './ol/expr/expression.js';\nimport {AnyType as _ol_expr_expression$AnyType} from './ol/expr/expression.js';\nimport {typeName as _ol_expr_expression$typeName} from './ol/expr/expression.js';\nimport {includesType as _ol_expr_expression$includesType} from './ol/expr/expression.js';\nimport {overlapsType as _ol_expr_expression$overlapsType} from './ol/expr/expression.js';\nimport {isType as _ol_expr_expression$isType} from './ol/expr/expression.js';\nimport {LiteralExpression as _ol_expr_expression$LiteralExpression} from './ol/expr/expression.js';\nimport {CallExpression as _ol_expr_expression$CallExpression} from './ol/expr/expression.js';\nimport {newParsingContext as _ol_expr_expression$newParsingContext} from './ol/expr/expression.js';\nimport {parse as _ol_expr_expression$parse} from './ol/expr/expression.js';\nimport {Ops as _ol_expr_expression$Ops} from './ol/expr/expression.js';\nimport {numberToGlsl as _ol_expr_gpu$numberToGlsl} from './ol/expr/gpu.js';\nimport {arrayToGlsl as _ol_expr_gpu$arrayToGlsl} from './ol/expr/gpu.js';\nimport {colorToGlsl as _ol_expr_gpu$colorToGlsl} from './ol/expr/gpu.js';\nimport {getStringNumberEquivalent as _ol_expr_gpu$getStringNumberEquivalent} from './ol/expr/gpu.js';\nimport {stringToGlsl as _ol_expr_gpu$stringToGlsl} from './ol/expr/gpu.js';\nimport {uniformNameForVariable as _ol_expr_gpu$uniformNameForVariable} from './ol/expr/gpu.js';\nimport {newCompilationContext as _ol_expr_gpu$newCompilationContext} from './ol/expr/gpu.js';\nimport {PALETTE_TEXTURE_ARRAY as _ol_expr_gpu$PALETTE_TEXTURE_ARRAY} from './ol/expr/gpu.js';\nimport {buildExpression as _ol_expr_gpu$buildExpression} from './ol/expr/gpu.js';\nimport $ol$events$Event from './ol/events/Event.js';\nimport {stopPropagation as _ol_events_Event$stopPropagation} from './ol/events/Event.js';\nimport {preventDefault as _ol_events_Event$preventDefault} from './ol/events/Event.js';\nimport {SnapEvent as _ol_events_SnapEvent$SnapEvent} from './ol/events/SnapEvent.js';\nimport $ol$events$Target from './ol/events/Target.js';\nimport {all as _ol_events_condition$all} from './ol/events/condition.js';\nimport {altKeyOnly as _ol_events_condition$altKeyOnly} from './ol/events/condition.js';\nimport {altShiftKeysOnly as _ol_events_condition$altShiftKeysOnly} from './ol/events/condition.js';\nimport {focus as _ol_events_condition$focus} from './ol/events/condition.js';\nimport {focusWithTabindex as _ol_events_condition$focusWithTabindex} from './ol/events/condition.js';\nimport {always as _ol_events_condition$always} from './ol/events/condition.js';\nimport {click as _ol_events_condition$click} from './ol/events/condition.js';\nimport {mouseActionButton as _ol_events_condition$mouseActionButton} from './ol/events/condition.js';\nimport {never as _ol_events_condition$never} from './ol/events/condition.js';\nimport {pointerMove as _ol_events_condition$pointerMove} from './ol/events/condition.js';\nimport {singleClick as _ol_events_condition$singleClick} from './ol/events/condition.js';\nimport {doubleClick as _ol_events_condition$doubleClick} from './ol/events/condition.js';\nimport {noModifierKeys as _ol_events_condition$noModifierKeys} from './ol/events/condition.js';\nimport {platformModifierKeyOnly as _ol_events_condition$platformModifierKeyOnly} from './ol/events/condition.js';\nimport {platformModifierKey as _ol_events_condition$platformModifierKey} from './ol/events/condition.js';\nimport {shiftKeyOnly as _ol_events_condition$shiftKeyOnly} from './ol/events/condition.js';\nimport {targetNotEditable as _ol_events_condition$targetNotEditable} from './ol/events/condition.js';\nimport {mouseOnly as _ol_events_condition$mouseOnly} from './ol/events/condition.js';\nimport {touchOnly as _ol_events_condition$touchOnly} from './ol/events/condition.js';\nimport {penOnly as _ol_events_condition$penOnly} from './ol/events/condition.js';\nimport {primaryAction as _ol_events_condition$primaryAction} from './ol/events/condition.js';\nimport $ol$control$Attribution from './ol/control/Attribution.js';\nimport $ol$control$Control from './ol/control/Control.js';\nimport $ol$control$FullScreen from './ol/control/FullScreen.js';\nimport $ol$control$MousePosition from './ol/control/MousePosition.js';\nimport $ol$control$OverviewMap from './ol/control/OverviewMap.js';\nimport $ol$control$Rotate from './ol/control/Rotate.js';\nimport $ol$control$ScaleLine from './ol/control/ScaleLine.js';\nimport $ol$control$Zoom from './ol/control/Zoom.js';\nimport $ol$control$ZoomSlider from './ol/control/ZoomSlider.js';\nimport $ol$control$ZoomToExtent from './ol/control/ZoomToExtent.js';\nimport {defaults as _ol_control_defaults$defaults} from './ol/control/defaults.js';\n\nvar ol = {};\nol.Collection = $ol$Collection;\nol.Collection.CollectionEvent = _ol_Collection$CollectionEvent;\nol.DataTile = $ol$DataTile;\nol.DataTile.asArrayLike = _ol_DataTile$asArrayLike;\nol.DataTile.asImageLike = _ol_DataTile$asImageLike;\nol.DataTile.toArray = _ol_DataTile$toArray;\nol.Disposable = $ol$Disposable;\nol.Feature = $ol$Feature;\nol.Feature.createStyleFunction = _ol_Feature$createStyleFunction;\nol.Geolocation = $ol$Geolocation;\nol.Geolocation.GeolocationError = _ol_Geolocation$GeolocationError;\nol.Image = $ol$Image;\nol.Image.decode = _ol_Image$decode;\nol.Image.decodeFallback = _ol_Image$decodeFallback;\nol.Image.listenImage = _ol_Image$listenImage;\nol.Image.load = _ol_Image$load;\nol.ImageCanvas = $ol$ImageCanvas;\nol.ImageTile = $ol$ImageTile;\nol.Kinetic = $ol$Kinetic;\nol.Map = $ol$Map;\nol.MapBrowserEvent = $ol$MapBrowserEvent;\nol.MapBrowserEventHandler = $ol$MapBrowserEventHandler;\nol.MapEvent = $ol$MapEvent;\nol.Object = $ol$Object;\nol.Object.ObjectEvent = _ol_Object$ObjectEvent;\nol.Observable = $ol$Observable;\nol.Observable.unByKey = _ol_Observable$unByKey;\nol.Overlay = $ol$Overlay;\nol.Tile = $ol$Tile;\nol.TileCache = $ol$TileCache;\nol.TileQueue = $ol$TileQueue;\nol.TileQueue.getTilePriority = _ol_TileQueue$getTilePriority;\nol.TileRange = $ol$TileRange;\nol.TileRange.createOrUpdate = _ol_TileRange$createOrUpdate;\nol.VectorRenderTile = $ol$VectorRenderTile;\nol.View = $ol$View;\nol.View.createCenterConstraint = _ol_View$createCenterConstraint;\nol.View.createResolutionConstraint = _ol_View$createResolutionConstraint;\nol.View.createRotationConstraint = _ol_View$createRotationConstraint;\nol.View.isNoopAnimation = _ol_View$isNoopAnimation;\nol.array = {};\nol.array.ascending = _ol_array$ascending;\nol.array.binarySearch = _ol_array$binarySearch;\nol.array.descending = _ol_array$descending;\nol.array.equals = _ol_array$equals;\nol.array.extend = _ol_array$extend;\nol.array.isSorted = _ol_array$isSorted;\nol.array.linearFindNearest = _ol_array$linearFindNearest;\nol.array.remove = _ol_array$remove;\nol.array.reverseSubArray = _ol_array$reverseSubArray;\nol.array.stableSort = _ol_array$stableSort;\nol.asserts = {};\nol.asserts.assert = _ol_asserts$assert;\nol.centerconstraint = {};\nol.centerconstraint.createExtent = _ol_centerconstraint$createExtent;\nol.centerconstraint.none = _ol_centerconstraint$none;\nol.color = {};\nol.color.asArray = _ol_color$asArray;\nol.color.asString = _ol_color$asString;\nol.color.fromString = _ol_color$fromString;\nol.color.isStringColor = _ol_color$isStringColor;\nol.color.lchaToRgba = _ol_color$lchaToRgba;\nol.color.normalize = _ol_color$normalize;\nol.color.rgbaToLcha = _ol_color$rgbaToLcha;\nol.color.toString = _ol_color$toString;\nol.color.withAlpha = _ol_color$withAlpha;\nol.colorlike = {};\nol.colorlike.asColorLike = _ol_colorlike$asColorLike;\nol.console = {};\nol.console.error = _ol_console$error;\nol.console.log = _ol_console$log;\nol.console.setLevel = _ol_console$setLevel;\nol.console.warn = _ol_console$warn;\nol.control = {};\nol.control.Attribution = $ol$control$Attribution;\nol.control.Control = $ol$control$Control;\nol.control.FullScreen = $ol$control$FullScreen;\nol.control.MousePosition = $ol$control$MousePosition;\nol.control.OverviewMap = $ol$control$OverviewMap;\nol.control.Rotate = $ol$control$Rotate;\nol.control.ScaleLine = $ol$control$ScaleLine;\nol.control.Zoom = $ol$control$Zoom;\nol.control.ZoomSlider = $ol$control$ZoomSlider;\nol.control.ZoomToExtent = $ol$control$ZoomToExtent;\nol.control.defaults = {};\nol.control.defaults.defaults = _ol_control_defaults$defaults;\nol.coordinate = {};\nol.coordinate.add = _ol_coordinate$add;\nol.coordinate.closestOnCircle = _ol_coordinate$closestOnCircle;\nol.coordinate.closestOnSegment = _ol_coordinate$closestOnSegment;\nol.coordinate.createStringXY = _ol_coordinate$createStringXY;\nol.coordinate.degreesToStringHDMS = _ol_coordinate$degreesToStringHDMS;\nol.coordinate.distance = _ol_coordinate$distance;\nol.coordinate.equals = _ol_coordinate$equals;\nol.coordinate.format = _ol_coordinate$format;\nol.coordinate.getWorldsAway = _ol_coordinate$getWorldsAway;\nol.coordinate.rotate = _ol_coordinate$rotate;\nol.coordinate.scale = _ol_coordinate$scale;\nol.coordinate.squaredDistance = _ol_coordinate$squaredDistance;\nol.coordinate.squaredDistanceToSegment = _ol_coordinate$squaredDistanceToSegment;\nol.coordinate.toStringHDMS = _ol_coordinate$toStringHDMS;\nol.coordinate.toStringXY = _ol_coordinate$toStringXY;\nol.coordinate.wrapX = _ol_coordinate$wrapX;\nol.css = {};\nol.css.CLASS_COLLAPSED = _ol_css$CLASS_COLLAPSED;\nol.css.CLASS_CONTROL = _ol_css$CLASS_CONTROL;\nol.css.CLASS_HIDDEN = _ol_css$CLASS_HIDDEN;\nol.css.CLASS_SELECTABLE = _ol_css$CLASS_SELECTABLE;\nol.css.CLASS_UNSELECTABLE = _ol_css$CLASS_UNSELECTABLE;\nol.css.CLASS_UNSUPPORTED = _ol_css$CLASS_UNSUPPORTED;\nol.css.getFontParameters = _ol_css$getFontParameters;\nol.dom = {};\nol.dom.createCanvasContext2D = _ol_dom$createCanvasContext2D;\nol.dom.outerHeight = _ol_dom$outerHeight;\nol.dom.outerWidth = _ol_dom$outerWidth;\nol.dom.releaseCanvas = _ol_dom$releaseCanvas;\nol.dom.removeChildren = _ol_dom$removeChildren;\nol.dom.removeNode = _ol_dom$removeNode;\nol.dom.replaceChildren = _ol_dom$replaceChildren;\nol.dom.replaceNode = _ol_dom$replaceNode;\nol.easing = {};\nol.easing.easeIn = _ol_easing$easeIn;\nol.easing.easeOut = _ol_easing$easeOut;\nol.easing.inAndOut = _ol_easing$inAndOut;\nol.easing.linear = _ol_easing$linear;\nol.easing.upAndDown = _ol_easing$upAndDown;\nol.events = {};\nol.events.Event = $ol$events$Event;\nol.events.Event.preventDefault = _ol_events_Event$preventDefault;\nol.events.Event.stopPropagation = _ol_events_Event$stopPropagation;\nol.events.SnapEvent = {};\nol.events.SnapEvent.SnapEvent = _ol_events_SnapEvent$SnapEvent;\nol.events.Target = $ol$events$Target;\nol.events.condition = {};\nol.events.condition.all = _ol_events_condition$all;\nol.events.condition.altKeyOnly = _ol_events_condition$altKeyOnly;\nol.events.condition.altShiftKeysOnly = _ol_events_condition$altShiftKeysOnly;\nol.events.condition.always = _ol_events_condition$always;\nol.events.condition.click = _ol_events_condition$click;\nol.events.condition.doubleClick = _ol_events_condition$doubleClick;\nol.events.condition.focus = _ol_events_condition$focus;\nol.events.condition.focusWithTabindex = _ol_events_condition$focusWithTabindex;\nol.events.condition.mouseActionButton = _ol_events_condition$mouseActionButton;\nol.events.condition.mouseOnly = _ol_events_condition$mouseOnly;\nol.events.condition.never = _ol_events_condition$never;\nol.events.condition.noModifierKeys = _ol_events_condition$noModifierKeys;\nol.events.condition.penOnly = _ol_events_condition$penOnly;\nol.events.condition.platformModifierKey = _ol_events_condition$platformModifierKey;\nol.events.condition.platformModifierKeyOnly = _ol_events_condition$platformModifierKeyOnly;\nol.events.condition.pointerMove = _ol_events_condition$pointerMove;\nol.events.condition.primaryAction = _ol_events_condition$primaryAction;\nol.events.condition.shiftKeyOnly = _ol_events_condition$shiftKeyOnly;\nol.events.condition.singleClick = _ol_events_condition$singleClick;\nol.events.condition.targetNotEditable = _ol_events_condition$targetNotEditable;\nol.events.condition.touchOnly = _ol_events_condition$touchOnly;\nol.events.listen = _ol_events$listen;\nol.events.listenOnce = _ol_events$listenOnce;\nol.events.unlistenByKey = _ol_events$unlistenByKey;\nol.expr = {};\nol.expr.cpu = {};\nol.expr.cpu.buildExpression = _ol_expr_cpu$buildExpression;\nol.expr.cpu.newEvaluationContext = _ol_expr_cpu$newEvaluationContext;\nol.expr.expression = {};\nol.expr.expression.AnyType = _ol_expr_expression$AnyType;\nol.expr.expression.BooleanType = _ol_expr_expression$BooleanType;\nol.expr.expression.CallExpression = _ol_expr_expression$CallExpression;\nol.expr.expression.ColorType = _ol_expr_expression$ColorType;\nol.expr.expression.LiteralExpression = _ol_expr_expression$LiteralExpression;\nol.expr.expression.NoneType = _ol_expr_expression$NoneType;\nol.expr.expression.NumberArrayType = _ol_expr_expression$NumberArrayType;\nol.expr.expression.NumberType = _ol_expr_expression$NumberType;\nol.expr.expression.Ops = _ol_expr_expression$Ops;\nol.expr.expression.StringType = _ol_expr_expression$StringType;\nol.expr.expression.includesType = _ol_expr_expression$includesType;\nol.expr.expression.isType = _ol_expr_expression$isType;\nol.expr.expression.newParsingContext = _ol_expr_expression$newParsingContext;\nol.expr.expression.overlapsType = _ol_expr_expression$overlapsType;\nol.expr.expression.parse = _ol_expr_expression$parse;\nol.expr.expression.typeName = _ol_expr_expression$typeName;\nol.expr.gpu = {};\nol.expr.gpu.PALETTE_TEXTURE_ARRAY = _ol_expr_gpu$PALETTE_TEXTURE_ARRAY;\nol.expr.gpu.arrayToGlsl = _ol_expr_gpu$arrayToGlsl;\nol.expr.gpu.buildExpression = _ol_expr_gpu$buildExpression;\nol.expr.gpu.colorToGlsl = _ol_expr_gpu$colorToGlsl;\nol.expr.gpu.getStringNumberEquivalent = _ol_expr_gpu$getStringNumberEquivalent;\nol.expr.gpu.newCompilationContext = _ol_expr_gpu$newCompilationContext;\nol.expr.gpu.numberToGlsl = _ol_expr_gpu$numberToGlsl;\nol.expr.gpu.stringToGlsl = _ol_expr_gpu$stringToGlsl;\nol.expr.gpu.uniformNameForVariable = _ol_expr_gpu$uniformNameForVariable;\nol.extent = {};\nol.extent.applyTransform = _ol_extent$applyTransform;\nol.extent.approximatelyEquals = _ol_extent$approximatelyEquals;\nol.extent.boundingExtent = _ol_extent$boundingExtent;\nol.extent.buffer = _ol_extent$buffer;\nol.extent.clone = _ol_extent$clone;\nol.extent.closestSquaredDistanceXY = _ol_extent$closestSquaredDistanceXY;\nol.extent.containsCoordinate = _ol_extent$containsCoordinate;\nol.extent.containsExtent = _ol_extent$containsExtent;\nol.extent.containsXY = _ol_extent$containsXY;\nol.extent.coordinateRelationship = _ol_extent$coordinateRelationship;\nol.extent.createEmpty = _ol_extent$createEmpty;\nol.extent.createOrUpdate = _ol_extent$createOrUpdate;\nol.extent.createOrUpdateEmpty = _ol_extent$createOrUpdateEmpty;\nol.extent.createOrUpdateFromCoordinate = _ol_extent$createOrUpdateFromCoordinate;\nol.extent.createOrUpdateFromCoordinates = _ol_extent$createOrUpdateFromCoordinates;\nol.extent.createOrUpdateFromFlatCoordinates = _ol_extent$createOrUpdateFromFlatCoordinates;\nol.extent.createOrUpdateFromRings = _ol_extent$createOrUpdateFromRings;\nol.extent.equals = _ol_extent$equals;\nol.extent.extend = _ol_extent$extend;\nol.extent.extendCoordinate = _ol_extent$extendCoordinate;\nol.extent.extendCoordinates = _ol_extent$extendCoordinates;\nol.extent.extendFlatCoordinates = _ol_extent$extendFlatCoordinates;\nol.extent.extendRings = _ol_extent$extendRings;\nol.extent.extendXY = _ol_extent$extendXY;\nol.extent.forEachCorner = _ol_extent$forEachCorner;\nol.extent.getArea = _ol_extent$getArea;\nol.extent.getBottomLeft = _ol_extent$getBottomLeft;\nol.extent.getBottomRight = _ol_extent$getBottomRight;\nol.extent.getCenter = _ol_extent$getCenter;\nol.extent.getCorner = _ol_extent$getCorner;\nol.extent.getEnlargedArea = _ol_extent$getEnlargedArea;\nol.extent.getForViewAndSize = _ol_extent$getForViewAndSize;\nol.extent.getHeight = _ol_extent$getHeight;\nol.extent.getIntersection = _ol_extent$getIntersection;\nol.extent.getIntersectionArea = _ol_extent$getIntersectionArea;\nol.extent.getMargin = _ol_extent$getMargin;\nol.extent.getRotatedViewport = _ol_extent$getRotatedViewport;\nol.extent.getSize = _ol_extent$getSize;\nol.extent.getTopLeft = _ol_extent$getTopLeft;\nol.extent.getTopRight = _ol_extent$getTopRight;\nol.extent.getWidth = _ol_extent$getWidth;\nol.extent.intersects = _ol_extent$intersects;\nol.extent.intersectsSegment = _ol_extent$intersectsSegment;\nol.extent.isEmpty = _ol_extent$isEmpty;\nol.extent.returnOrUpdate = _ol_extent$returnOrUpdate;\nol.extent.scaleFromCenter = _ol_extent$scaleFromCenter;\nol.extent.wrapAndSliceX = _ol_extent$wrapAndSliceX;\nol.extent.wrapX = _ol_extent$wrapX;\nol.featureloader = {};\nol.featureloader.loadFeaturesXhr = _ol_featureloader$loadFeaturesXhr;\nol.featureloader.setWithCredentials = _ol_featureloader$setWithCredentials;\nol.featureloader.xhr = _ol_featureloader$xhr;\nol.format = {};\nol.format.Feature = $ol$format$Feature;\nol.format.Feature.createGeometry = _ol_format_Feature$createGeometry;\nol.format.Feature.createRenderFeature = _ol_format_Feature$createRenderFeature;\nol.format.Feature.transformExtentWithOptions = _ol_format_Feature$transformExtentWithOptions;\nol.format.Feature.transformGeometryWithOptions = _ol_format_Feature$transformGeometryWithOptions;\nol.format.GPX = $ol$format$GPX;\nol.format.GeoJSON = $ol$format$GeoJSON;\nol.format.IGC = $ol$format$IGC;\nol.format.JSONFeature = $ol$format$JSONFeature;\nol.format.KML = $ol$format$KML;\nol.format.KML.getDefaultFillStyle = _ol_format_KML$getDefaultFillStyle;\nol.format.KML.getDefaultImageStyle = _ol_format_KML$getDefaultImageStyle;\nol.format.KML.getDefaultStrokeStyle = _ol_format_KML$getDefaultStrokeStyle;\nol.format.KML.getDefaultStyle = _ol_format_KML$getDefaultStyle;\nol.format.KML.getDefaultStyleArray = _ol_format_KML$getDefaultStyleArray;\nol.format.KML.getDefaultTextStyle = _ol_format_KML$getDefaultTextStyle;\nol.format.KML.readFlatCoordinates = _ol_format_KML$readFlatCoordinates;\nol.format.MVT = $ol$format$MVT;\nol.format.OSMXML = $ol$format$OSMXML;\nol.format.OWS = $ol$format$OWS;\nol.format.Polyline = $ol$format$Polyline;\nol.format.Polyline.decodeDeltas = _ol_format_Polyline$decodeDeltas;\nol.format.Polyline.decodeFloats = _ol_format_Polyline$decodeFloats;\nol.format.Polyline.decodeSignedIntegers = _ol_format_Polyline$decodeSignedIntegers;\nol.format.Polyline.decodeUnsignedIntegers = _ol_format_Polyline$decodeUnsignedIntegers;\nol.format.Polyline.encodeDeltas = _ol_format_Polyline$encodeDeltas;\nol.format.Polyline.encodeFloats = _ol_format_Polyline$encodeFloats;\nol.format.Polyline.encodeSignedIntegers = _ol_format_Polyline$encodeSignedIntegers;\nol.format.Polyline.encodeUnsignedInteger = _ol_format_Polyline$encodeUnsignedInteger;\nol.format.Polyline.encodeUnsignedIntegers = _ol_format_Polyline$encodeUnsignedIntegers;\nol.format.TextFeature = $ol$format$TextFeature;\nol.format.TopoJSON = $ol$format$TopoJSON;\nol.format.WFS = $ol$format$WFS;\nol.format.WFS.writeFilter = _ol_format_WFS$writeFilter;\nol.format.WMSGetFeatureInfo = $ol$format$WMSGetFeatureInfo;\nol.format.WMTSCapabilities = $ol$format$WMTSCapabilities;\nol.format.xlink = {};\nol.format.xlink.readHref = _ol_format_xlink$readHref;\nol.format.xsd = {};\nol.format.xsd.readBoolean = _ol_format_xsd$readBoolean;\nol.format.xsd.readBooleanString = _ol_format_xsd$readBooleanString;\nol.format.xsd.readDateTime = _ol_format_xsd$readDateTime;\nol.format.xsd.readDecimal = _ol_format_xsd$readDecimal;\nol.format.xsd.readDecimalString = _ol_format_xsd$readDecimalString;\nol.format.xsd.readNonNegativeIntegerString = _ol_format_xsd$readNonNegativeIntegerString;\nol.format.xsd.readPositiveInteger = _ol_format_xsd$readPositiveInteger;\nol.format.xsd.readString = _ol_format_xsd$readString;\nol.format.xsd.writeBooleanTextNode = _ol_format_xsd$writeBooleanTextNode;\nol.format.xsd.writeCDATASection = _ol_format_xsd$writeCDATASection;\nol.format.xsd.writeDateTimeTextNode = _ol_format_xsd$writeDateTimeTextNode;\nol.format.xsd.writeDecimalTextNode = _ol_format_xsd$writeDecimalTextNode;\nol.format.xsd.writeNonNegativeIntegerTextNode = _ol_format_xsd$writeNonNegativeIntegerTextNode;\nol.format.xsd.writeStringTextNode = _ol_format_xsd$writeStringTextNode;\nol.functions = {};\nol.functions.FALSE = _ol_functions$FALSE;\nol.functions.TRUE = _ol_functions$TRUE;\nol.functions.VOID = _ol_functions$VOID;\nol.functions.memoizeOne = _ol_functions$memoizeOne;\nol.functions.toPromise = _ol_functions$toPromise;\nol.geom = {};\nol.geom.Circle = $ol$geom$Circle;\nol.geom.Geometry = $ol$geom$Geometry;\nol.geom.GeometryCollection = $ol$geom$GeometryCollection;\nol.geom.LineString = $ol$geom$LineString;\nol.geom.LinearRing = $ol$geom$LinearRing;\nol.geom.MultiLineString = $ol$geom$MultiLineString;\nol.geom.MultiPoint = $ol$geom$MultiPoint;\nol.geom.MultiPolygon = $ol$geom$MultiPolygon;\nol.geom.Point = $ol$geom$Point;\nol.geom.Polygon = $ol$geom$Polygon;\nol.geom.Polygon.circular = _ol_geom_Polygon$circular;\nol.geom.Polygon.fromCircle = _ol_geom_Polygon$fromCircle;\nol.geom.Polygon.fromExtent = _ol_geom_Polygon$fromExtent;\nol.geom.Polygon.makeRegular = _ol_geom_Polygon$makeRegular;\nol.geom.SimpleGeometry = $ol$geom$SimpleGeometry;\nol.geom.SimpleGeometry.getLayoutForStride = _ol_geom_SimpleGeometry$getLayoutForStride;\nol.geom.SimpleGeometry.getStrideForLayout = _ol_geom_SimpleGeometry$getStrideForLayout;\nol.geom.SimpleGeometry.transformGeom2D = _ol_geom_SimpleGeometry$transformGeom2D;\nol.geom.flat = {};\nol.geom.flat.area = {};\nol.geom.flat.area.linearRing = _ol_geom_flat_area$linearRing;\nol.geom.flat.area.linearRings = _ol_geom_flat_area$linearRings;\nol.geom.flat.area.linearRingss = _ol_geom_flat_area$linearRingss;\nol.geom.flat.center = {};\nol.geom.flat.center.linearRingss = _ol_geom_flat_center$linearRingss;\nol.geom.flat.closest = {};\nol.geom.flat.closest.arrayMaxSquaredDelta = _ol_geom_flat_closest$arrayMaxSquaredDelta;\nol.geom.flat.closest.assignClosestArrayPoint = _ol_geom_flat_closest$assignClosestArrayPoint;\nol.geom.flat.closest.assignClosestMultiArrayPoint = _ol_geom_flat_closest$assignClosestMultiArrayPoint;\nol.geom.flat.closest.assignClosestPoint = _ol_geom_flat_closest$assignClosestPoint;\nol.geom.flat.closest.maxSquaredDelta = _ol_geom_flat_closest$maxSquaredDelta;\nol.geom.flat.closest.multiArrayMaxSquaredDelta = _ol_geom_flat_closest$multiArrayMaxSquaredDelta;\nol.geom.flat.contains = {};\nol.geom.flat.contains.linearRingContainsExtent = _ol_geom_flat_contains$linearRingContainsExtent;\nol.geom.flat.contains.linearRingContainsXY = _ol_geom_flat_contains$linearRingContainsXY;\nol.geom.flat.contains.linearRingsContainsXY = _ol_geom_flat_contains$linearRingsContainsXY;\nol.geom.flat.contains.linearRingssContainsXY = _ol_geom_flat_contains$linearRingssContainsXY;\nol.geom.flat.deflate = {};\nol.geom.flat.deflate.deflateCoordinate = _ol_geom_flat_deflate$deflateCoordinate;\nol.geom.flat.deflate.deflateCoordinates = _ol_geom_flat_deflate$deflateCoordinates;\nol.geom.flat.deflate.deflateCoordinatesArray = _ol_geom_flat_deflate$deflateCoordinatesArray;\nol.geom.flat.deflate.deflateMultiCoordinatesArray = _ol_geom_flat_deflate$deflateMultiCoordinatesArray;\nol.geom.flat.flip = {};\nol.geom.flat.flip.flipXY = _ol_geom_flat_flip$flipXY;\nol.geom.flat.geodesic = {};\nol.geom.flat.geodesic.greatCircleArc = _ol_geom_flat_geodesic$greatCircleArc;\nol.geom.flat.geodesic.meridian = _ol_geom_flat_geodesic$meridian;\nol.geom.flat.geodesic.parallel = _ol_geom_flat_geodesic$parallel;\nol.geom.flat.inflate = {};\nol.geom.flat.inflate.inflateCoordinates = _ol_geom_flat_inflate$inflateCoordinates;\nol.geom.flat.inflate.inflateCoordinatesArray = _ol_geom_flat_inflate$inflateCoordinatesArray;\nol.geom.flat.inflate.inflateMultiCoordinatesArray = _ol_geom_flat_inflate$inflateMultiCoordinatesArray;\nol.geom.flat.interiorpoint = {};\nol.geom.flat.interiorpoint.getInteriorPointOfArray = _ol_geom_flat_interiorpoint$getInteriorPointOfArray;\nol.geom.flat.interiorpoint.getInteriorPointsOfMultiArray = _ol_geom_flat_interiorpoint$getInteriorPointsOfMultiArray;\nol.geom.flat.interpolate = {};\nol.geom.flat.interpolate.interpolatePoint = _ol_geom_flat_interpolate$interpolatePoint;\nol.geom.flat.interpolate.lineStringCoordinateAtM = _ol_geom_flat_interpolate$lineStringCoordinateAtM;\nol.geom.flat.interpolate.lineStringsCoordinateAtM = _ol_geom_flat_interpolate$lineStringsCoordinateAtM;\nol.geom.flat.intersectsextent = {};\nol.geom.flat.intersectsextent.intersectsLineString = _ol_geom_flat_intersectsextent$intersectsLineString;\nol.geom.flat.intersectsextent.intersectsLineStringArray = _ol_geom_flat_intersectsextent$intersectsLineStringArray;\nol.geom.flat.intersectsextent.intersectsLinearRing = _ol_geom_flat_intersectsextent$intersectsLinearRing;\nol.geom.flat.intersectsextent.intersectsLinearRingArray = _ol_geom_flat_intersectsextent$intersectsLinearRingArray;\nol.geom.flat.intersectsextent.intersectsLinearRingMultiArray = _ol_geom_flat_intersectsextent$intersectsLinearRingMultiArray;\nol.geom.flat.length = {};\nol.geom.flat.length.lineStringLength = _ol_geom_flat_length$lineStringLength;\nol.geom.flat.length.linearRingLength = _ol_geom_flat_length$linearRingLength;\nol.geom.flat.orient = {};\nol.geom.flat.orient.inflateEnds = _ol_geom_flat_orient$inflateEnds;\nol.geom.flat.orient.linearRingIsClockwise = _ol_geom_flat_orient$linearRingIsClockwise;\nol.geom.flat.orient.linearRingsAreOriented = _ol_geom_flat_orient$linearRingsAreOriented;\nol.geom.flat.orient.linearRingssAreOriented = _ol_geom_flat_orient$linearRingssAreOriented;\nol.geom.flat.orient.orientLinearRings = _ol_geom_flat_orient$orientLinearRings;\nol.geom.flat.orient.orientLinearRingsArray = _ol_geom_flat_orient$orientLinearRingsArray;\nol.geom.flat.reverse = {};\nol.geom.flat.reverse.coordinates = _ol_geom_flat_reverse$coordinates;\nol.geom.flat.segments = {};\nol.geom.flat.segments.forEach = _ol_geom_flat_segments$forEach;\nol.geom.flat.simplify = {};\nol.geom.flat.simplify.douglasPeucker = _ol_geom_flat_simplify$douglasPeucker;\nol.geom.flat.simplify.douglasPeuckerArray = _ol_geom_flat_simplify$douglasPeuckerArray;\nol.geom.flat.simplify.douglasPeuckerMultiArray = _ol_geom_flat_simplify$douglasPeuckerMultiArray;\nol.geom.flat.simplify.quantize = _ol_geom_flat_simplify$quantize;\nol.geom.flat.simplify.quantizeArray = _ol_geom_flat_simplify$quantizeArray;\nol.geom.flat.simplify.quantizeMultiArray = _ol_geom_flat_simplify$quantizeMultiArray;\nol.geom.flat.simplify.radialDistance = _ol_geom_flat_simplify$radialDistance;\nol.geom.flat.simplify.simplifyLineString = _ol_geom_flat_simplify$simplifyLineString;\nol.geom.flat.simplify.snap = _ol_geom_flat_simplify$snap;\nol.geom.flat.straightchunk = {};\nol.geom.flat.straightchunk.matchingChunk = _ol_geom_flat_straightchunk$matchingChunk;\nol.geom.flat.textpath = {};\nol.geom.flat.textpath.drawTextOnPath = _ol_geom_flat_textpath$drawTextOnPath;\nol.geom.flat.topology = {};\nol.geom.flat.topology.lineStringIsClosed = _ol_geom_flat_topology$lineStringIsClosed;\nol.geom.flat.transform = {};\nol.geom.flat.transform.rotate = _ol_geom_flat_transform$rotate;\nol.geom.flat.transform.scale = _ol_geom_flat_transform$scale;\nol.geom.flat.transform.transform2D = _ol_geom_flat_transform$transform2D;\nol.geom.flat.transform.translate = _ol_geom_flat_transform$translate;\nol.has = {};\nol.has.CREATE_IMAGE_BITMAP = _ol_has$CREATE_IMAGE_BITMAP;\nol.has.DEVICE_PIXEL_RATIO = _ol_has$DEVICE_PIXEL_RATIO;\nol.has.FIREFOX = _ol_has$FIREFOX;\nol.has.IMAGE_DECODE = _ol_has$IMAGE_DECODE;\nol.has.MAC = _ol_has$MAC;\nol.has.PASSIVE_EVENT_LISTENERS = _ol_has$PASSIVE_EVENT_LISTENERS;\nol.has.SAFARI = _ol_has$SAFARI;\nol.has.SAFARI_BUG_237906 = _ol_has$SAFARI_BUG_237906;\nol.has.WEBKIT = _ol_has$WEBKIT;\nol.has.WORKER_OFFSCREEN_CANVAS = _ol_has$WORKER_OFFSCREEN_CANVAS;\nol.interaction = {};\nol.interaction.DblClickDragZoom = $ol$interaction$DblClickDragZoom;\nol.interaction.DoubleClickZoom = $ol$interaction$DoubleClickZoom;\nol.interaction.DragAndDrop = $ol$interaction$DragAndDrop;\nol.interaction.DragAndDrop.DragAndDropEvent = _ol_interaction_DragAndDrop$DragAndDropEvent;\nol.interaction.DragBox = $ol$interaction$DragBox;\nol.interaction.DragBox.DragBoxEvent = _ol_interaction_DragBox$DragBoxEvent;\nol.interaction.DragPan = $ol$interaction$DragPan;\nol.interaction.DragRotate = $ol$interaction$DragRotate;\nol.interaction.DragRotateAndZoom = $ol$interaction$DragRotateAndZoom;\nol.interaction.DragZoom = $ol$interaction$DragZoom;\nol.interaction.Draw = $ol$interaction$Draw;\nol.interaction.Draw.DrawEvent = _ol_interaction_Draw$DrawEvent;\nol.interaction.Draw.createBox = _ol_interaction_Draw$createBox;\nol.interaction.Draw.createRegularPolygon = _ol_interaction_Draw$createRegularPolygon;\nol.interaction.Extent = $ol$interaction$Extent;\nol.interaction.Extent.ExtentEvent = _ol_interaction_Extent$ExtentEvent;\nol.interaction.Interaction = $ol$interaction$Interaction;\nol.interaction.Interaction.pan = _ol_interaction_Interaction$pan;\nol.interaction.Interaction.zoomByDelta = _ol_interaction_Interaction$zoomByDelta;\nol.interaction.KeyboardPan = $ol$interaction$KeyboardPan;\nol.interaction.KeyboardZoom = $ol$interaction$KeyboardZoom;\nol.interaction.Link = $ol$interaction$Link;\nol.interaction.Modify = $ol$interaction$Modify;\nol.interaction.Modify.ModifyEvent = _ol_interaction_Modify$ModifyEvent;\nol.interaction.MouseWheelZoom = $ol$interaction$MouseWheelZoom;\nol.interaction.PinchRotate = $ol$interaction$PinchRotate;\nol.interaction.PinchZoom = $ol$interaction$PinchZoom;\nol.interaction.Pointer = $ol$interaction$Pointer;\nol.interaction.Pointer.centroid = _ol_interaction_Pointer$centroid;\nol.interaction.Select = $ol$interaction$Select;\nol.interaction.Select.SelectEvent = _ol_interaction_Select$SelectEvent;\nol.interaction.Snap = $ol$interaction$Snap;\nol.interaction.Translate = $ol$interaction$Translate;\nol.interaction.Translate.TranslateEvent = _ol_interaction_Translate$TranslateEvent;\nol.interaction.defaults = {};\nol.interaction.defaults.defaults = _ol_interaction_defaults$defaults;\nol.layer = {};\nol.layer.Base = $ol$layer$Base;\nol.layer.BaseImage = $ol$layer$BaseImage;\nol.layer.BaseTile = $ol$layer$BaseTile;\nol.layer.BaseVector = $ol$layer$BaseVector;\nol.layer.Graticule = $ol$layer$Graticule;\nol.layer.Group = $ol$layer$Group;\nol.layer.Group.GroupEvent = _ol_layer_Group$GroupEvent;\nol.layer.Heatmap = $ol$layer$Heatmap;\nol.layer.Image = $ol$layer$Image;\nol.layer.Layer = $ol$layer$Layer;\nol.layer.Layer.inView = _ol_layer_Layer$inView;\nol.layer.Tile = $ol$layer$Tile;\nol.layer.Vector = $ol$layer$Vector;\nol.layer.VectorImage = $ol$layer$VectorImage;\nol.loadingstrategy = {};\nol.loadingstrategy.all = _ol_loadingstrategy$all;\nol.loadingstrategy.bbox = _ol_loadingstrategy$bbox;\nol.loadingstrategy.tile = _ol_loadingstrategy$tile;\nol.math = {};\nol.math.ceil = _ol_math$ceil;\nol.math.clamp = _ol_math$clamp;\nol.math.floor = _ol_math$floor;\nol.math.lerp = _ol_math$lerp;\nol.math.modulo = _ol_math$modulo;\nol.math.round = _ol_math$round;\nol.math.solveLinearSystem = _ol_math$solveLinearSystem;\nol.math.squaredDistance = _ol_math$squaredDistance;\nol.math.squaredSegmentDistance = _ol_math$squaredSegmentDistance;\nol.math.toDegrees = _ol_math$toDegrees;\nol.math.toFixed = _ol_math$toFixed;\nol.math.toRadians = _ol_math$toRadians;\nol.net = {};\nol.net.ClientError = _ol_net$ClientError;\nol.net.ResponseError = _ol_net$ResponseError;\nol.net.getJSON = _ol_net$getJSON;\nol.net.jsonp = _ol_net$jsonp;\nol.net.overrideXHR = _ol_net$overrideXHR;\nol.net.resolveUrl = _ol_net$resolveUrl;\nol.net.restoreXHR = _ol_net$restoreXHR;\nol.obj = {};\nol.obj.clear = _ol_obj$clear;\nol.obj.isEmpty = _ol_obj$isEmpty;\nol.proj = {};\nol.proj.Projection = $ol$proj$Projection;\nol.proj.Units = {};\nol.proj.Units.METERS_PER_UNIT = _ol_proj_Units$METERS_PER_UNIT;\nol.proj.Units.fromCode = _ol_proj_Units$fromCode;\nol.proj.addCommon = _ol_proj$addCommon;\nol.proj.addCoordinateTransforms = _ol_proj$addCoordinateTransforms;\nol.proj.addEquivalentProjections = _ol_proj$addEquivalentProjections;\nol.proj.addEquivalentTransforms = _ol_proj$addEquivalentTransforms;\nol.proj.addProjection = _ol_proj$addProjection;\nol.proj.addProjections = _ol_proj$addProjections;\nol.proj.clearAllProjections = _ol_proj$clearAllProjections;\nol.proj.clearUserProjection = _ol_proj$clearUserProjection;\nol.proj.cloneTransform = _ol_proj$cloneTransform;\nol.proj.createProjection = _ol_proj$createProjection;\nol.proj.createSafeCoordinateTransform = _ol_proj$createSafeCoordinateTransform;\nol.proj.createTransformFromCoordinateTransform = _ol_proj$createTransformFromCoordinateTransform;\nol.proj.disableCoordinateWarning = _ol_proj$disableCoordinateWarning;\nol.proj.epsg3857 = {};\nol.proj.epsg3857.EXTENT = _ol_proj_epsg3857$EXTENT;\nol.proj.epsg3857.HALF_SIZE = _ol_proj_epsg3857$HALF_SIZE;\nol.proj.epsg3857.MAX_SAFE_Y = _ol_proj_epsg3857$MAX_SAFE_Y;\nol.proj.epsg3857.PROJECTIONS = _ol_proj_epsg3857$PROJECTIONS;\nol.proj.epsg3857.RADIUS = _ol_proj_epsg3857$RADIUS;\nol.proj.epsg3857.WORLD_EXTENT = _ol_proj_epsg3857$WORLD_EXTENT;\nol.proj.epsg3857.fromEPSG4326 = _ol_proj_epsg3857$fromEPSG4326;\nol.proj.epsg3857.toEPSG4326 = _ol_proj_epsg3857$toEPSG4326;\nol.proj.epsg4326 = {};\nol.proj.epsg4326.EXTENT = _ol_proj_epsg4326$EXTENT;\nol.proj.epsg4326.METERS_PER_UNIT = _ol_proj_epsg4326$METERS_PER_UNIT;\nol.proj.epsg4326.PROJECTIONS = _ol_proj_epsg4326$PROJECTIONS;\nol.proj.epsg4326.RADIUS = _ol_proj_epsg4326$RADIUS;\nol.proj.equivalent = _ol_proj$equivalent;\nol.proj.fromLonLat = _ol_proj$fromLonLat;\nol.proj.fromUserCoordinate = _ol_proj$fromUserCoordinate;\nol.proj.fromUserExtent = _ol_proj$fromUserExtent;\nol.proj.fromUserResolution = _ol_proj$fromUserResolution;\nol.proj.get = _ol_proj$get;\nol.proj.getPointResolution = _ol_proj$getPointResolution;\nol.proj.getTransform = _ol_proj$getTransform;\nol.proj.getTransformFromProjections = _ol_proj$getTransformFromProjections;\nol.proj.getUserProjection = _ol_proj$getUserProjection;\nol.proj.identityTransform = _ol_proj$identityTransform;\nol.proj.proj4 = {};\nol.proj.proj4.epsgLookupMapTiler = _ol_proj_proj4$epsgLookupMapTiler;\nol.proj.proj4.fromEPSGCode = _ol_proj_proj4$fromEPSGCode;\nol.proj.proj4.getEPSGLookup = _ol_proj_proj4$getEPSGLookup;\nol.proj.proj4.isRegistered = _ol_proj_proj4$isRegistered;\nol.proj.proj4.register = _ol_proj_proj4$register;\nol.proj.proj4.setEPSGLookup = _ol_proj_proj4$setEPSGLookup;\nol.proj.proj4.unregister = _ol_proj_proj4$unregister;\nol.proj.projections = {};\nol.proj.projections.add = _ol_proj_projections$add;\nol.proj.projections.clear = _ol_proj_projections$clear;\nol.proj.projections.get = _ol_proj_projections$get;\nol.proj.setUserProjection = _ol_proj$setUserProjection;\nol.proj.toLonLat = _ol_proj$toLonLat;\nol.proj.toUserCoordinate = _ol_proj$toUserCoordinate;\nol.proj.toUserExtent = _ol_proj$toUserExtent;\nol.proj.toUserResolution = _ol_proj$toUserResolution;\nol.proj.transform = _ol_proj$transform;\nol.proj.transformExtent = _ol_proj$transformExtent;\nol.proj.transformWithProjections = _ol_proj$transformWithProjections;\nol.proj.transforms = {};\nol.proj.transforms.add = _ol_proj_transforms$add;\nol.proj.transforms.clear = _ol_proj_transforms$clear;\nol.proj.transforms.get = _ol_proj_transforms$get;\nol.proj.transforms.remove = _ol_proj_transforms$remove;\nol.proj.useGeographic = _ol_proj$useGeographic;\nol.render = {};\nol.render.Box = $ol$render$Box;\nol.render.Event = $ol$render$Event;\nol.render.Feature = $ol$render$Feature;\nol.render.Feature.toFeature = _ol_render_Feature$toFeature;\nol.render.Feature.toGeometry = _ol_render_Feature$toGeometry;\nol.render.VectorContext = $ol$render$VectorContext;\nol.render.canvas = {};\nol.render.canvas.Builder = $ol$render$canvas$Builder;\nol.render.canvas.BuilderGroup = $ol$render$canvas$BuilderGroup;\nol.render.canvas.Executor = $ol$render$canvas$Executor;\nol.render.canvas.ExecutorGroup = $ol$render$canvas$ExecutorGroup;\nol.render.canvas.ExecutorGroup.getPixelIndexArray = _ol_render_canvas_ExecutorGroup$getPixelIndexArray;\nol.render.canvas.ImageBuilder = $ol$render$canvas$ImageBuilder;\nol.render.canvas.Immediate = $ol$render$canvas$Immediate;\nol.render.canvas.Instruction = {};\nol.render.canvas.Instruction.beginPathInstruction = _ol_render_canvas_Instruction$beginPathInstruction;\nol.render.canvas.Instruction.closePathInstruction = _ol_render_canvas_Instruction$closePathInstruction;\nol.render.canvas.Instruction.fillInstruction = _ol_render_canvas_Instruction$fillInstruction;\nol.render.canvas.Instruction.strokeInstruction = _ol_render_canvas_Instruction$strokeInstruction;\nol.render.canvas.LineStringBuilder = $ol$render$canvas$LineStringBuilder;\nol.render.canvas.PolygonBuilder = $ol$render$canvas$PolygonBuilder;\nol.render.canvas.TextBuilder = $ol$render$canvas$TextBuilder;\nol.render.canvas.TextBuilder.TEXT_ALIGN = _ol_render_canvas_TextBuilder$TEXT_ALIGN;\nol.render.canvas.checkedFonts = _ol_render_canvas$checkedFonts;\nol.render.canvas.defaultFillStyle = _ol_render_canvas$defaultFillStyle;\nol.render.canvas.defaultFont = _ol_render_canvas$defaultFont;\nol.render.canvas.defaultLineCap = _ol_render_canvas$defaultLineCap;\nol.render.canvas.defaultLineDash = _ol_render_canvas$defaultLineDash;\nol.render.canvas.defaultLineDashOffset = _ol_render_canvas$defaultLineDashOffset;\nol.render.canvas.defaultLineJoin = _ol_render_canvas$defaultLineJoin;\nol.render.canvas.defaultLineWidth = _ol_render_canvas$defaultLineWidth;\nol.render.canvas.defaultMiterLimit = _ol_render_canvas$defaultMiterLimit;\nol.render.canvas.defaultPadding = _ol_render_canvas$defaultPadding;\nol.render.canvas.defaultStrokeStyle = _ol_render_canvas$defaultStrokeStyle;\nol.render.canvas.defaultTextAlign = _ol_render_canvas$defaultTextAlign;\nol.render.canvas.defaultTextBaseline = _ol_render_canvas$defaultTextBaseline;\nol.render.canvas.drawImageOrLabel = _ol_render_canvas$drawImageOrLabel;\nol.render.canvas.getTextDimensions = _ol_render_canvas$getTextDimensions;\nol.render.canvas.hitdetect = {};\nol.render.canvas.hitdetect.HIT_DETECT_RESOLUTION = _ol_render_canvas_hitdetect$HIT_DETECT_RESOLUTION;\nol.render.canvas.hitdetect.createHitDetectionImageData = _ol_render_canvas_hitdetect$createHitDetectionImageData;\nol.render.canvas.hitdetect.hitDetect = _ol_render_canvas_hitdetect$hitDetect;\nol.render.canvas.measureAndCacheTextWidth = _ol_render_canvas$measureAndCacheTextWidth;\nol.render.canvas.measureTextHeight = _ol_render_canvas$measureTextHeight;\nol.render.canvas.measureTextWidth = _ol_render_canvas$measureTextWidth;\nol.render.canvas.registerFont = _ol_render_canvas$registerFont;\nol.render.canvas.rotateAtOffset = _ol_render_canvas$rotateAtOffset;\nol.render.canvas.style = {};\nol.render.canvas.style.buildRuleSet = _ol_render_canvas_style$buildRuleSet;\nol.render.canvas.style.buildStyle = _ol_render_canvas_style$buildStyle;\nol.render.canvas.style.flatStylesToStyleFunction = _ol_render_canvas_style$flatStylesToStyleFunction;\nol.render.canvas.style.rulesToStyleFunction = _ol_render_canvas_style$rulesToStyleFunction;\nol.render.canvas.textHeights = _ol_render_canvas$textHeights;\nol.render.getRenderPixel = _ol_render$getRenderPixel;\nol.render.getVectorContext = _ol_render$getVectorContext;\nol.render.toContext = _ol_render$toContext;\nol.renderer = {};\nol.renderer.Composite = $ol$renderer$Composite;\nol.renderer.Layer = $ol$renderer$Layer;\nol.renderer.Map = $ol$renderer$Map;\nol.renderer.canvas = {};\nol.renderer.canvas.ImageLayer = $ol$renderer$canvas$ImageLayer;\nol.renderer.canvas.Layer = $ol$renderer$canvas$Layer;\nol.renderer.canvas.Layer.canvasPool = _ol_renderer_canvas_Layer$canvasPool;\nol.renderer.canvas.TileLayer = $ol$renderer$canvas$TileLayer;\nol.renderer.canvas.VectorImageLayer = $ol$renderer$canvas$VectorImageLayer;\nol.renderer.canvas.VectorLayer = $ol$renderer$canvas$VectorLayer;\nol.renderer.vector = {};\nol.renderer.vector.defaultOrder = _ol_renderer_vector$defaultOrder;\nol.renderer.vector.getSquaredTolerance = _ol_renderer_vector$getSquaredTolerance;\nol.renderer.vector.getTolerance = _ol_renderer_vector$getTolerance;\nol.renderer.vector.renderFeature = _ol_renderer_vector$renderFeature;\nol.reproj = {};\nol.reproj.DataTile = $ol$reproj$DataTile;\nol.reproj.Image = $ol$reproj$Image;\nol.reproj.Tile = $ol$reproj$Tile;\nol.reproj.Triangulation = $ol$reproj$Triangulation;\nol.reproj.calculateSourceExtentResolution = _ol_reproj$calculateSourceExtentResolution;\nol.reproj.calculateSourceResolution = _ol_reproj$calculateSourceResolution;\nol.reproj.canvasPool = _ol_reproj$canvasPool;\nol.reproj.common = {};\nol.reproj.common.ERROR_THRESHOLD = _ol_reproj_common$ERROR_THRESHOLD;\nol.reproj.render = _ol_reproj$render;\nol.resolution = {};\nol.resolution.fromResolutionLike = _ol_resolution$fromResolutionLike;\nol.resolutionconstraint = {};\nol.resolutionconstraint.createMinMaxResolution = _ol_resolutionconstraint$createMinMaxResolution;\nol.resolutionconstraint.createSnapToPower = _ol_resolutionconstraint$createSnapToPower;\nol.resolutionconstraint.createSnapToResolutions = _ol_resolutionconstraint$createSnapToResolutions;\nol.rotationconstraint = {};\nol.rotationconstraint.createSnapToN = _ol_rotationconstraint$createSnapToN;\nol.rotationconstraint.createSnapToZero = _ol_rotationconstraint$createSnapToZero;\nol.rotationconstraint.disable = _ol_rotationconstraint$disable;\nol.rotationconstraint.none = _ol_rotationconstraint$none;\nol.size = {};\nol.size.buffer = _ol_size$buffer;\nol.size.hasArea = _ol_size$hasArea;\nol.size.scale = _ol_size$scale;\nol.size.toSize = _ol_size$toSize;\nol.source = {};\nol.source.BingMaps = $ol$source$BingMaps;\nol.source.BingMaps.quadKey = _ol_source_BingMaps$quadKey;\nol.source.Cluster = $ol$source$Cluster;\nol.source.DataTile = $ol$source$DataTile;\nol.source.Image = $ol$source$Image;\nol.source.Image.ImageSourceEvent = _ol_source_Image$ImageSourceEvent;\nol.source.Image.defaultImageLoadFunction = _ol_source_Image$defaultImageLoadFunction;\nol.source.Image.getRequestExtent = _ol_source_Image$getRequestExtent;\nol.source.ImageArcGISRest = $ol$source$ImageArcGISRest;\nol.source.ImageCanvas = $ol$source$ImageCanvas;\nol.source.ImageStatic = $ol$source$ImageStatic;\nol.source.ImageWMS = $ol$source$ImageWMS;\nol.source.OGCMapTile = $ol$source$OGCMapTile;\nol.source.OSM = $ol$source$OSM;\nol.source.OSM.ATTRIBUTION = _ol_source_OSM$ATTRIBUTION;\nol.source.Raster = $ol$source$Raster;\nol.source.Raster.Processor = _ol_source_Raster$Processor;\nol.source.Raster.RasterSourceEvent = _ol_source_Raster$RasterSourceEvent;\nol.source.Raster.newImageData = _ol_source_Raster$newImageData;\nol.source.Source = $ol$source$Source;\nol.source.StadiaMaps = $ol$source$StadiaMaps;\nol.source.Tile = $ol$source$Tile;\nol.source.Tile.TileSourceEvent = _ol_source_Tile$TileSourceEvent;\nol.source.TileArcGISRest = $ol$source$TileArcGISRest;\nol.source.TileDebug = $ol$source$TileDebug;\nol.source.TileImage = $ol$source$TileImage;\nol.source.TileJSON = $ol$source$TileJSON;\nol.source.TileWMS = $ol$source$TileWMS;\nol.source.UTFGrid = $ol$source$UTFGrid;\nol.source.UTFGrid.CustomTile = _ol_source_UTFGrid$CustomTile;\nol.source.UrlTile = $ol$source$UrlTile;\nol.source.Vector = $ol$source$Vector;\nol.source.Vector.VectorSourceEvent = _ol_source_Vector$VectorSourceEvent;\nol.source.WMTS = $ol$source$WMTS;\nol.source.WMTS.optionsFromCapabilities = _ol_source_WMTS$optionsFromCapabilities;\nol.source.XYZ = $ol$source$XYZ;\nol.source.arcgisRest = {};\nol.source.arcgisRest.createLoader = _ol_source_arcgisRest$createLoader;\nol.source.arcgisRest.getRequestUrl = _ol_source_arcgisRest$getRequestUrl;\nol.source.common = {};\nol.source.common.DECIMALS = _ol_source_common$DECIMALS;\nol.source.common.DEFAULT_WMS_VERSION = _ol_source_common$DEFAULT_WMS_VERSION;\nol.source.ogcTileUtil = {};\nol.source.ogcTileUtil.getMapTileUrlTemplate = _ol_source_ogcTileUtil$getMapTileUrlTemplate;\nol.source.ogcTileUtil.getTileSetInfo = _ol_source_ogcTileUtil$getTileSetInfo;\nol.source.ogcTileUtil.getVectorTileUrlTemplate = _ol_source_ogcTileUtil$getVectorTileUrlTemplate;\nol.source.sourcesFromTileGrid = _ol_source$sourcesFromTileGrid;\nol.source.static = {};\nol.source.static.createLoader = _ol_source_static$createLoader;\nol.source.wms = {};\nol.source.wms.DEFAULT_VERSION = _ol_source_wms$DEFAULT_VERSION;\nol.source.wms.createLoader = _ol_source_wms$createLoader;\nol.source.wms.getFeatureInfoUrl = _ol_source_wms$getFeatureInfoUrl;\nol.source.wms.getImageSrc = _ol_source_wms$getImageSrc;\nol.source.wms.getLegendUrl = _ol_source_wms$getLegendUrl;\nol.source.wms.getRequestParams = _ol_source_wms$getRequestParams;\nol.source.wms.getRequestUrl = _ol_source_wms$getRequestUrl;\nol.sphere = {};\nol.sphere.DEFAULT_RADIUS = _ol_sphere$DEFAULT_RADIUS;\nol.sphere.getArea = _ol_sphere$getArea;\nol.sphere.getDistance = _ol_sphere$getDistance;\nol.sphere.getLength = _ol_sphere$getLength;\nol.sphere.offset = _ol_sphere$offset;\nol.string = {};\nol.string.compareVersions = _ol_string$compareVersions;\nol.string.padNumber = _ol_string$padNumber;\nol.structs = {};\nol.structs.LRUCache = $ol$structs$LRUCache;\nol.structs.LinkedList = $ol$structs$LinkedList;\nol.structs.PriorityQueue = $ol$structs$PriorityQueue;\nol.structs.PriorityQueue.DROP = _ol_structs_PriorityQueue$DROP;\nol.structs.RBush = $ol$structs$RBush;\nol.style = {};\nol.style.Circle = $ol$style$Circle;\nol.style.Fill = $ol$style$Fill;\nol.style.Icon = $ol$style$Icon;\nol.style.IconImage = $ol$style$IconImage;\nol.style.IconImage.get = _ol_style_IconImage$get;\nol.style.IconImageCache = $ol$style$IconImageCache;\nol.style.IconImageCache.shared = _ol_style_IconImageCache$shared;\nol.style.Image = $ol$style$Image;\nol.style.RegularShape = $ol$style$RegularShape;\nol.style.Stroke = $ol$style$Stroke;\nol.style.Style = $ol$style$Style;\nol.style.Style.createDefaultStyle = _ol_style_Style$createDefaultStyle;\nol.style.Style.createEditingStyle = _ol_style_Style$createEditingStyle;\nol.style.Style.toFunction = _ol_style_Style$toFunction;\nol.style.Text = $ol$style$Text;\nol.style.flat = {};\nol.style.flat.createDefaultStyle = _ol_style_flat$createDefaultStyle;\nol.tilecoord = {};\nol.tilecoord.createOrUpdate = _ol_tilecoord$createOrUpdate;\nol.tilecoord.fromKey = _ol_tilecoord$fromKey;\nol.tilecoord.getCacheKeyForTileKey = _ol_tilecoord$getCacheKeyForTileKey;\nol.tilecoord.getKey = _ol_tilecoord$getKey;\nol.tilecoord.getKeyZXY = _ol_tilecoord$getKeyZXY;\nol.tilecoord.hash = _ol_tilecoord$hash;\nol.tilecoord.withinExtentAndZ = _ol_tilecoord$withinExtentAndZ;\nol.tilegrid = {};\nol.tilegrid.TileGrid = $ol$tilegrid$TileGrid;\nol.tilegrid.WMTS = $ol$tilegrid$WMTS;\nol.tilegrid.WMTS.createFromCapabilitiesMatrixSet = _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet;\nol.tilegrid.common = {};\nol.tilegrid.common.DEFAULT_MAX_ZOOM = _ol_tilegrid_common$DEFAULT_MAX_ZOOM;\nol.tilegrid.common.DEFAULT_TILE_SIZE = _ol_tilegrid_common$DEFAULT_TILE_SIZE;\nol.tilegrid.createForExtent = _ol_tilegrid$createForExtent;\nol.tilegrid.createForProjection = _ol_tilegrid$createForProjection;\nol.tilegrid.createXYZ = _ol_tilegrid$createXYZ;\nol.tilegrid.extentFromProjection = _ol_tilegrid$extentFromProjection;\nol.tilegrid.getForProjection = _ol_tilegrid$getForProjection;\nol.tilegrid.wrapX = _ol_tilegrid$wrapX;\nol.tileurlfunction = {};\nol.tileurlfunction.createFromTemplate = _ol_tileurlfunction$createFromTemplate;\nol.tileurlfunction.createFromTemplates = _ol_tileurlfunction$createFromTemplates;\nol.tileurlfunction.createFromTileUrlFunctions = _ol_tileurlfunction$createFromTileUrlFunctions;\nol.tileurlfunction.expandUrl = _ol_tileurlfunction$expandUrl;\nol.tileurlfunction.nullTileUrlFunction = _ol_tileurlfunction$nullTileUrlFunction;\nol.transform = {};\nol.transform.apply = _ol_transform$apply;\nol.transform.compose = _ol_transform$compose;\nol.transform.composeCssTransform = _ol_transform$composeCssTransform;\nol.transform.create = _ol_transform$create;\nol.transform.determinant = _ol_transform$determinant;\nol.transform.invert = _ol_transform$invert;\nol.transform.makeInverse = _ol_transform$makeInverse;\nol.transform.makeScale = _ol_transform$makeScale;\nol.transform.multiply = _ol_transform$multiply;\nol.transform.reset = _ol_transform$reset;\nol.transform.rotate = _ol_transform$rotate;\nol.transform.scale = _ol_transform$scale;\nol.transform.set = _ol_transform$set;\nol.transform.setFromArray = _ol_transform$setFromArray;\nol.transform.toString = _ol_transform$toString;\nol.transform.translate = _ol_transform$translate;\nol.uri = {};\nol.uri.appendParams = _ol_uri$appendParams;\nol.util = {};\nol.util.VERSION = _ol_util$VERSION;\nol.util.abstract = _ol_util$abstract;\nol.util.getUid = _ol_util$getUid;\nol.vec = {};\nol.vec.mat4 = {};\nol.vec.mat4.create = _ol_vec_mat4$create;\nol.vec.mat4.fromTransform = _ol_vec_mat4$fromTransform;\nol.xml = {};\nol.xml.OBJECT_PROPERTY_NODE_FACTORY = _ol_xml$OBJECT_PROPERTY_NODE_FACTORY;\nol.xml.XML_SCHEMA_INSTANCE_URI = _ol_xml$XML_SCHEMA_INSTANCE_URI;\nol.xml.createElementNS = _ol_xml$createElementNS;\nol.xml.getAllTextContent = _ol_xml$getAllTextContent;\nol.xml.getAllTextContent_ = _ol_xml$getAllTextContent_;\nol.xml.getAttributeNS = _ol_xml$getAttributeNS;\nol.xml.getDocument = _ol_xml$getDocument;\nol.xml.getXMLSerializer = _ol_xml$getXMLSerializer;\nol.xml.isDocument = _ol_xml$isDocument;\nol.xml.makeArrayExtender = _ol_xml$makeArrayExtender;\nol.xml.makeArrayPusher = _ol_xml$makeArrayPusher;\nol.xml.makeArraySerializer = _ol_xml$makeArraySerializer;\nol.xml.makeChildAppender = _ol_xml$makeChildAppender;\nol.xml.makeObjectPropertyPusher = _ol_xml$makeObjectPropertyPusher;\nol.xml.makeObjectPropertySetter = _ol_xml$makeObjectPropertySetter;\nol.xml.makeReplacer = _ol_xml$makeReplacer;\nol.xml.makeSequence = _ol_xml$makeSequence;\nol.xml.makeSimpleNodeFactory = _ol_xml$makeSimpleNodeFactory;\nol.xml.makeStructureNS = _ol_xml$makeStructureNS;\nol.xml.parse = _ol_xml$parse;\nol.xml.parseNode = _ol_xml$parseNode;\nol.xml.pushParseAndPop = _ol_xml$pushParseAndPop;\nol.xml.pushSerializeAndPop = _ol_xml$pushSerializeAndPop;\nol.xml.registerDocument = _ol_xml$registerDocument;\nol.xml.registerXMLSerializer = _ol_xml$registerXMLSerializer;\nol.xml.serialize = _ol_xml$serialize;\n\nexport default ol;","/**\n * @module ol/geom/flat/topology\n */\nimport {linearRing as linearRingArea} from './area.js';\n\n/**\n * Check if the linestring is a boundary.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} The linestring is a boundary.\n */\nexport function lineStringIsClosed(flatCoordinates, offset, end, stride) {\n  const lastCoord = end - stride;\n  if (\n    flatCoordinates[offset] === flatCoordinates[lastCoord] &&\n    flatCoordinates[offset + 1] === flatCoordinates[lastCoord + 1] &&\n    (end - offset) / stride > 3\n  ) {\n    return !!linearRingArea(flatCoordinates, offset, end, stride);\n  }\n  return false;\n}\n","/**\n * @module ol/source\n */\n\nimport LRUCache from './structs/LRUCache.js';\nimport {getIntersection} from './extent.js';\n\nexport {default as BingMaps} from './source/BingMaps.js';\nexport {default as CartoDB} from './source/CartoDB.js';\nexport {default as Cluster} from './source/Cluster.js';\nexport {default as DataTile} from './source/DataTile.js';\nexport {default as GeoTIFF} from './source/GeoTIFF.js';\nexport {default as IIIF} from './source/IIIF.js';\nexport {default as Image} from './source/Image.js';\nexport {default as ImageArcGISRest} from './source/ImageArcGISRest.js';\nexport {default as ImageCanvas} from './source/ImageCanvas.js';\nexport {default as ImageMapGuide} from './source/ImageMapGuide.js';\nexport {default as ImageStatic} from './source/ImageStatic.js';\nexport {default as ImageWMS} from './source/ImageWMS.js';\nexport {default as OGCMapTile} from './source/OGCMapTile.js';\nexport {default as OGCVectorTile} from './source/OGCVectorTile.js';\nexport {default as OSM} from './source/OSM.js';\nexport {default as Raster} from './source/Raster.js';\nexport {default as Source} from './source/Source.js';\nexport {default as StadiaMaps} from './source/StadiaMaps.js';\nexport {default as Tile} from './source/Tile.js';\nexport {default as TileArcGISRest} from './source/TileArcGISRest.js';\nexport {default as TileDebug} from './source/TileDebug.js';\nexport {default as TileImage} from './source/TileImage.js';\nexport {default as TileJSON} from './source/TileJSON.js';\nexport {default as TileWMS} from './source/TileWMS.js';\nexport {default as UrlTile} from './source/UrlTile.js';\nexport {default as UTFGrid} from './source/UTFGrid.js';\nexport {default as Vector} from './source/Vector.js';\nexport {default as VectorTile} from './source/VectorTile.js';\nexport {default as WMTS} from './source/WMTS.js';\nexport {default as XYZ} from './source/XYZ.js';\nexport {default as Zoomify} from './source/Zoomify.js';\nexport {createLoader as createWMSLoader} from './source/wms.js';\nexport {createLoader as createArcGISRestLoader} from './source/arcgisRest.js';\nexport {createLoader as createStaticLoader} from './source/static.js';\nexport {createLoader as createMapGuideLoader} from './source/mapguide.js';\n\n/**\n * Creates a sources function from a tile grid. This function can be used as value for the\n * `sources` property of the {@link module:ol/layer/Layer~Layer} subclasses that support it.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @param {function(import(\"./tilecoord.js\").TileCoord): import(\"./source/Source.js\").default} factory Source factory.\n * This function takes a {@link module:ol/tilecoord~TileCoord} as argument and is expected to return a\n * {@link module:ol/source/Source~Source}. **Note**: The returned sources should have a tile grid with\n * a limited set of resolutions, matching the resolution range of a single zoom level of the pyramid\n * `tileGrid` that `sourcesFromTileGrid` was called with.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./source/Source.js\").default>} Sources function.\n * @api\n */\nexport function sourcesFromTileGrid(tileGrid, factory) {\n  const sourceCache = new LRUCache(32);\n  const tileGridExtent = tileGrid.getExtent();\n  return function (extent, resolution) {\n    sourceCache.expireCache();\n    if (tileGridExtent) {\n      extent = getIntersection(tileGridExtent, extent);\n    }\n    const z = tileGrid.getZForResolution(resolution);\n    const wantedSources = [];\n    tileGrid.forEachTileCoord(extent, z, (tileCoord) => {\n      const key = tileCoord.toString();\n      if (!sourceCache.containsKey(key)) {\n        const source = factory(tileCoord);\n        sourceCache.set(key, source);\n      }\n      wantedSources.push(sourceCache.get(key));\n    });\n    return wantedSources;\n  };\n}\n"],"names":["stopPropagation","evt","$ol$events$Event","constructor","type","this","propagationStopped","defaultPrevented","target","preventDefault","ObjectEventType","$ol$Disposable","disposed","dispose","disposeInternal","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","length","found","a","b","descending","linearFindNearest","arr","direction","n","i","candidate","reverseSubArray","begin","end","tmp","extend","data","extension","Array","isArray","equals","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","index","res","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","called","nextArgs","prototype","slice","call","arguments","arrayEquals","apply","toPromise","getter","value","err","Promise","reject","resolve","promiseGetter","clear","object","property","isEmpty","$ol$events$Target","Disposable","super","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","push","dispatchEvent","event","isString","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","Object","keys","indexOf","splice","EventType","listen","thisArg","once","bind","originalListener","eventsKey","listenOnce","unlistenByKey","key","Observable","EventTarget","on","un","revision_","changed","getRevision","onInternal","len","onceInternal","ol_key","unInternal","unByKey","$ol$Observable","abstract","Error","uidCounter_","getUid","obj","ol_uid","String","ObjectEvent","oldValue","$ol$Object","values","values_","setProperties","get","hasOwnProperty","getKeys","getProperties","assign","getPropertiesInternal","hasProperties","notify","eventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","CollectionEventType","Property","CollectionEvent","element","Collection","BaseObject","array","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","forEach","f","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","except","TileState","easeIn","t","Math","pow","easeOut","inAndOut","linear","$ol$Tile","tileCoord","state","interimTile","transition_","transition","transitionStarts_","interpolate","release","setState","getKey","getInterimTile","tile","getState","refreshInterimChain","getTileCoord","load","getAlpha","id","time","start","delta","inTransition","endTransition","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","SAFARI_BUG_237906","test","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","CREATE_IMAGE_BITMAP","createImageBitmap","PASSIVE_EVENT_LISTENERS","passive","defineProperty","window","error","createCanvasContext2D","width","height","canvasPool","settings","canvas","shift","document","createElement","getContext","releaseCanvas","context","clearRect","outerWidth","offsetWidth","style","getComputedStyle","parseInt","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","insertBefore","appendChild","asImageLike","HTMLCanvasElement","HTMLVideoElement","ImageBitmap","asArrayLike","Uint8Array","Uint8ClampedArray","Float32Array","DataView","sharedContext","toArray","image","willReadFrequently","drawImage","getImageData","defaultSize","$ol$DataTile","Tile","loader_","loader","data_","error_","size_","size","getSize","imageData","getData","getError","then","catch","assert","assertion","errorMessage","Feature","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","createStyleFunction","setId","name","styles","$ol$Feature","tmp_","create","reset","transform","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","d","e","setFromArray","coordinate","x","y","rotate","angle","cos","sin","scale","makeScale","translate","dx","dy","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","det","determinant","mat","transformStringDiv","toString","transformString","join","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","buffer","dest","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","Infinity","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","approximatelyEquals","tolerance","abs","extendCoordinates","extendXY","extendRings","rings","min","max","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","resolution","rotation","x0","y0","x1","y1","x2","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","xs","ys","l","_boundingExtentXYs","wrapX","projection","projectionExtent","getExtent","canWrapX","worldWidth","floor","wrapAndSliceX","isFinite","unitByCode","METERS_PER_UNIT","radians","PI","degrees","ft","m","$ol$proj$Projection","code_","code","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection","Projection","units","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","atan","exp","EPSG4326Projection","cache","replace","add","transforms","destination","sourceCode","destinationCode","clamp","squaredSegmentDistance","squaredDistance","solveLinearSystem","maxRow","maxEl","r","absValue","j","coef","k","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","factor","round","ceil","padNumber","number","precision","numberString","decimal","compareVersions","v1","v2","s1","split","s2","n1","n2","closestOnCircle","circle","getRadius","sqrt","closestOnSegment","segment","along","degreesToStringHDMS","hemispheres","fractionDigits","normalizedDegrees","deg","sec","hdms","charAt","format","template","coordinate1","coordinate2","cosAngle","sinAngle","coord1","coord2","distance","squaredDistanceToSegment","toStringXY","worldsAway","getWorldsAway","sourceExtentWidth","DEFAULT_RADIUS","getDistance","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","getLengthInternal","getAreaInternal","bearing","lon1","dByR","lat","asin","levels","info","warn","none","level","args","console","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","pointResolution","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","jj","addCoordinateTransforms","forward","inverse","sourceProj","destProj","equivalent","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","transformExtent","userProjection","setUserProjection","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","sourceMetersPerUnit","userMetersPerUnit","fromUserResolution","destMetersPerUnit","createSafeCoordinateTransform","coord","transformed","sourceExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","transform2D","anchor","anchorX","anchorY","tmpTransform","$ol$geom$Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getSimplifiedGeometry","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","getClosestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","simplify","getType","intersectsExtent","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","getLayoutForStride","layout","getStrideForLayout","transformGeom2D","simpleGeometry","getFlatCoordinates","getStride","$ol$geom$SimpleGeometry","Geometry","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","setLayout","nesting","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","multiArrayMaxSquaredDelta","endss","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","radialDistance","snap","quantize","quantizeArray","quantizeMultiArray","simplifiedEndss","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","linearRing","twiceArea","linearRings","linearRingss","LinearRing","SimpleGeometry","maxDelta_","maxDeltaRevision_","linearRingArea","$ol$geom$LinearRing","Point","$ol$geom$Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","ret","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","reverseCoordinates","orientLinearRingsArray","inflateEnds","startOrientation","prevEndIndex","orientation","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","linearRingsArea","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","$ol$geom$Polygon","circular","sphereRadius","sphereOffset","fromExtent","fromCircle","sides","arrayLength","makeRegular","startAngle","GeolocationErrorType","GeolocationError","BaseEvent","message","$ol$Geolocation","position_","transform_","watchId_","handleProjectionChanged_","handleTrackingChanged_","setProjection","trackingOptions","setTrackingOptions","setTracking","tracking","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","position","coords","accuracy","altitude","altitudeAccuracy","heading","longitude","latitude","projectedPosition","speed","circularPolygon","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getPosition","getSpeed","ImageState","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","src","handleLoad","unlisten","handleError","decodeFallback","complete","$ol$Image","pixelRatio","stateOrLoader","pixelRatio_","image_","getImage","getPixelRatio","getResolution","requestResolution","HTMLImageElement","finally","setImage","setResolution","$ol$ImageCanvas","ImageWrapper","canvas_","handleLoad_","$ol$ImageTile","crossOrigin","tileLoadFunction","crossOrigin_","src_","unlisten_","tileLoadFunction_","unlistenImage_","handleImageError_","ctx","fillStyle","fillRect","getBlankImage","handleImageLoad_","naturalWidth","naturalHeight","$ol$Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","Date","now","lastIndex","firstIndex","duration","getAngle","rgb","channel","alias","xyz","A","C","D50","D55","D65","D75","F2","F7","F11","E","whitepoint","_xyz","white","g","z","xyz$1","luv","arg","o","_u","_v","u","v","xn","yn","zn","vn","yr","lchuv","hr","h","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","whitesmoke","yellow","yellowgreen","baseHues","hsl","t1","t2","t3","s","rgba","color","raw","Number","parsed","cstr","space","parts","alpha","names","base","exec","dims","trim","map","parseFloat","endsWith","match","parse","asString","MAX_CACHE_SIZE","cacheSize","withAlpha","rgbaToLcha","lchaToRgba","fromString","parseRgba","normalize","asArray","isStringColor","_","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","setSize","maxCacheSize","$ol$style$IconImageCache","shared","LayerProperty","$ol$layer$Base","background_","background","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getBackground","getClassName","getLayerState","managed","layer","getZIndex","getOpacity","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","RenderEventType","ViewHint","ViewProperty","CENTER","RESOLUTION","ROTATION","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","result","createSnapToResolutions","resolutions","cappedMaxRes","capped","createSnapToPower","power","minZoomLevel","cappedZoomLevel","zoomLevel","createMinMaxResolution","createSnapToN","theta","createSnapToZero","animationCallback","returnValue","setTimeout","createCenterConstraint","smoothExtentConstraint","constrainOnlyCenter","multiWorld","centerNone","createResolutionConstraint","resolutionConstraint","zoomFactor","smoothResolutionConstraint","projExtent","constrainResolution","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","constraint","createRotationConstraint","enableRotation","constrainRotation","rotationNone","isNoopAnimation","animation","sourceCenter","targetCenter","coordinatesEqual","sourceResolution","targetResolution","sourceRotation","targetRotation","calculateCenterOn","rotX","rotY","$ol$View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","rotationConstraint","constraints_","setRotation","setCenterInternal","zoom","setZoom","oldPadding","getCenterInternal","newPadding","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","animateInternal","animationCount","series","easing","getResolutionForZoom","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","rotateCoordinate","addCoordinate","currentResolution","w","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","viewState","nearest","baseLevel","fit","geometryOrExtent","polygonFromExtent","fitInternal","rotatedExtentForGeometry","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","inView","layerState","$ol$layer$Layer","BaseLayer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","render","setMap","handleSourcePropertyChange_","setSource","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","isVisible","view","frameState","getMapInternal","getView","View","layerStatesArray","getLayerGroup","find","layerExtent","getAttributions","attributions","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","setMapInternal","some","arrayLayerState","createRenderer","hasRenderer","expireIconCache","iconImageCache","$ol$renderer$Map","map_","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","layerFilter","thisArg2","feature","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","getWrapX","order","distanceSq","hasFeatureAtCoordinate","getMap","flushDeclutterItems","scheduleExpireIconCache","postRenderFunctions","$ol$render$Event","inversePixelTransform","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","lineHeight","weight","variant","families","family","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","checkedFonts","measureFont","measureContext","textHeights","registerFont","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","border","display","left","body","measureAndCacheTextWidth","reduce","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","originX","originY","save","globalAlpha","contextInstructions","label","executeLabelInstructions","restore","$ol$renderer$Composite","MapRenderer","fontChangeListenerKey_","redrawText","element_","container","getViewport","firstChild","children_","renderedVisible_","declutterLayers_","RenderEvent","declutterLayers","previousElement","layerIndex","sourceState","layers","renderDeclutter","GroupEvent","LayerGroup","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","$ol$layer$Group","$ol$MapEvent","$ol$MapBrowserEvent","MapEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","MapBrowserEventType","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","PointerEventType","$ol$MapBrowserEventHandler","Target","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","MapBrowserEvent","clearTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","MapEventType","MapProperty","DROP","$ol$structs$PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$ol$TileQueue","PriorityQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","$ol$control$Control","pointerEvents","target_","setTarget","getOverlayContainerStopEvent","mapEvent","getElementById","$ol$control$Attribution","Control","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","visibleAttributions","from","Set","getAllLayers","flatMap","getAttributionsCollapsible","setCollapsible","updateElement_","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$ol$control$Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","contains","$ol$control$Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","defaults","controls","Zoom","zoomOptions","Rotate","rotateOptions","attribution","Attribution","attributionOptions","InteractionProperty","pan","zoomByDelta","$ol$interaction$Interaction","setActive","getActive","mapBrowserEvent","active","$ol$interaction$DoubleClickZoom","Interaction","delta_","stopEvent","browserEvent","shiftKey","centroid","$ol$interaction$Pointer","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","all","conditions","pass","altKeyOnly","altKey","metaKey","ctrlKey","altShiftKeysOnly","focus","targetElement","getTargetElement","activeElement","focusWithTabindex","hasAttribute","always","mouseActionButton","never","singleClick","noModifierKeys","platformModifierKey","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","$ol$interaction$DragPan","PointerInteraction","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroidFromPointers","scaleCoordinate","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","$ol$interaction$DragRotate","lastAngle_","$ol$render$Box","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","top","getOverlayContainer","setPixels","createOrUpdateGeometry","DragBoxEventType","DragBoxEvent","$ol$interaction$DragBox","box_","RenderBox","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$ol$interaction$DragZoom","DragBox","out_","out","Key","$ol$interaction$KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","mapUnitsDelta","$ol$interaction$KeyboardZoom","$ol$interaction$MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$ol$interaction$PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","$ol$interaction$PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","interactions","Kinetic","altShiftDragRotate","DragRotate","doubleClickZoom","DoubleClickZoom","zoomDelta","zoomDuration","dragPan","DragPan","pinchRotate","PinchRotate","pinchZoom","PinchZoom","keyboard","KeyboardPan","KeyboardZoom","mouseWheelZoom","MouseWheelZoom","shiftDragZoom","DragZoom","hasArea","toSize","removeLayerMapProperty","Layer","setLayerMapProperty","$ol$Map","optionsInternal","keyboardEventTarget","layerGroup","overlays","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","defaultControls","defaultInteractions","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","TileQueue","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","ownerDocument","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","handlePostRender","tileQueue","viewHints","lowOnFrameBudget","unobserve","ShadowRoot","host","CompositeMapRenderer","MapBrowserEventHandler","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","mapId","renderTargets","nextExtent","equalsExtent","setLayerGroup","oldLayerGroup","computedStyle","getClientRects","oldSize","$ol$Overlay","insertFirst","autoPan","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPositioning","updatePixelPosition","performAutoPan","panIntoView","panIntoViewOptions","mapRect","getRect","overlayRect","myMargin","margin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","box","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","posX","posY","getOptions","$ol$structs$LRUCache","highWaterMark","count_","entries_","oldest_","newest_","expireCache","keep","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","getKeyZXY","fromKey","hash","withinExtentAndZ","tileRange","getFullTileRange","$ol$TileCache","LRUCache","pruneExceptNewestZ","TileRange","containsTileRange","$ol$TileRange","$ol$VectorRenderTile","urlTileCoord","getSourceTiles","context_","executorGroups","declutterExecutorGroups","loadingSourceTiles","hitDetectionImageData","replayState_","sourceTiles","errorTileKeys","wantedResolution","wrappedTileCoord","hasContext","getReplayState","dirty","renderedRenderOrder","renderedResolution","renderedRevision","renderedTileResolution","renderedTileRevision","renderedTileZ","asColorLike","originalXHR","withCredentials","loadFeaturesXhr","url","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","JSON","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","addFeatures","jsonp","errback","callbackParam","script","cleanup","async","timer","head","ResponseError","response","ClientError","client","getJSON","setRequestHeader","resolveUrl","URL","href","$ol$render$VectorContext","drawCustom","hitDetectionRenderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","strokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","$ol$render$canvas$Immediate","VectorContext","viewRotation","userTransform","transformRotation_","viewRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","lineTo","closePath","drawRings_","beginPath","arc","fill","stroke","getFill","getStroke","getText","setTransform","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","getFlatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","lineCap","lineDash","setLineDash","lineDashOffset","lineJoin","miterLimit","textState","contextTextState","textAlign","textBaseline","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","imageSize","imagePixelRatio","imageAnchor","getAnchor","imageOrigin","getOrigin","getRotateWithView","imageScale","getScaleArray","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","acc","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","declutterBuilderGroup","getImageState","imageBuilderGroup","declutterMode","getDeclutterMode","imageReplay","getBuilder","textBuilderGroup","textReplay","LineString","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","replayGroup","geometryRenderer","Circle","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","imageState","unlistenImageChange","listenImageChange","renderGeometry","renderFeatureInternal","getGeometries","getHitDetectionRenderer","getVectorContext","CanvasRenderingContext2D","canvasPixelRatio","multiplyTransform","CanvasImmediateRenderer","brokenDiagonalRendering_","drawTestTriangle","u1","u2","clip","verifyBrokenDiagonalRendering","calculateSourceResolution","targetProj","targetMetersPerUnit","compensationFactor","calculateSourceExtentResolution","targetExtent","triangulation","sources","gutter","renderEdges","drawSingle","imageSmoothingEnabled","pixelRound","globalCompositeOperation","sourceDataExtent","stitchContext","canvasWidthInUnits","canvasHeightInUnits","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","isBrokenDiagonalRendering","steps","ud","vd","step","fromResolutionLike","ERROR_THRESHOLD","$ol$reproj$Triangulation","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","$ol$reproj$Tile","sourceTileGrid","targetTileGrid","getTileFunction","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","Triangulation","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","TileEventType","adaptAttributions","attributionLike","$ol$source$Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","getInterpolate","refresh","setAttributions","tmpTileCoord","$ol$tilegrid$TileGrid","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","getTileCoordForCoordAndZ","getTileCoordResolution","opt_direction","tileCoordIntersectsViewport","viewport","fullTileRanges","WMTSTileGrid","TileGrid","matrixIds_","matrixIds","getMatrixId","getMatrixIds","$ol$tilegrid$WMTS","createFromCapabilitiesMatrixSet","matrixSet","matrixLimits","matrixIdsPropName","identifierPropName","scaleDenominatorPropName","topLeftCornerPropName","switchOriginXY","substr","elt","matrixAvailable","elt_ml","tileWidth","tileHeight","getForProjection","createForProjection","extentFromProjection","createForExtent","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","half","TileSourceEvent","$ol$source$Tile","Source","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","TileCache","tmpSize","tileOptions","zDirection","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","covered","getGutterForProjection","setKey","getOpaque","getTileGridForProjection","getTile","getTileGrid","getTilePixelRatio","getTilePixelSize","scaleSize","getTileCoordForTileUrlFunction","updateCacheSize","tileCount","useTile","createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","range","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","nullTileUrlFunction","expandUrl","urls","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","stop","UrlTile","TileSource","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","uid","tileState","setTileLoadFunction","setTileUrlFunction","$ol$source$UrlTile","defaultTileLoadFunction","imageTile","$ol$source$TileImage","tileClass","ImageTile","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","tileUrl","getTileInternal","newTile","ReprojTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","quadKey","digits","mask","$ol$source$BingMaps","TileImage","hidpi","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","placeholderTiles_","placeholderTiles","fetch","json","handleImageryMetadataResponse","getApiKey","getImagerySet","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","resource","zoomMax","imageWidth","imageHeight","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","params","searchParams","delete","imageryProviders","imageryProvider","intersecting","coverageAreas","coverageArea","bbox","$ol$source$XYZ","quickselect","quickselectStep","defaultCompare","sd","swap","RBush$1","maxEntries","_maxEntries","_minEntries","_all","search","toBBox","nodesToSearch","child","childBBox","leaf","collides","insert","_build","_splitRoot","tmpNode","_insert","createNode","equalsFn","path","indexes","goingUp","findItem","_condense","compareMinX","compareMinY","toJSON","fromJSON","items","N","M","calcBBox","N2","N1","multiSelect","right2","right3","_chooseSubtree","targetNode","minEnlargement","bboxArea","enlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareNodeMinX","compareNodeMinY","_allDistMargin","leftBBox","rightBBox","bboxMargin","siblings","p","destNode","$ol$structs$RBush","rbush_","RBush_","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","concat","rbush","setCenterAndRadius","getRadiusSquared_","setRadius","$ol$geom$Circle","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","cloneGeometries","getGeometriesArrayRecursive","geometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","clonedGeometries","$ol$geom$GeometryCollection","interpolatePoint","cumulativeLengths","lineStringCoordinateAtM","extrapolate","lo","hi","m0","lineStringsCoordinateAtM","lineStringLength","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","getCoordinateAtM","getCoordinateAt","$ol$geom$LineString","lineStrings","appendLineString","multiLineString","getLineString","getLineStrings","midpoints","$ol$geom$MultiLineString","appendPoint","multiPoint","getPoint","getPoints","points","$ol$geom$MultiPoint","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","thisEndss","appendPolygon","newEndss","multiPolygon","linearRingssArea","linearRingssCenter","getInteriorPoints","getPolygon","prevEnds","getPolygons","lastEnds","$ol$geom$MultiPolygon","RenderFeature","styleFunction","type_","flatCoordinates_","flatMidpoints_","properties_","stride_","simplifiedGeometry_","midpoint","enableSimplifyTransformed","toGeometry","geometryType","$ol$render$Feature","VectorEventType","VectorSourceEvent","$ol$source$Vector","format_","overlaps_","overlaps","url_","strategy_","strategy","allStrategy","useSpatialIndex","featuresRtree_","RBush","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","indexedFeature","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","featureChangeKeys","removed","setLoader","$ol$source$Cluster","VectorSource","interpolationRatio","geometryFunction","createCustomCluster_","createCluster","boundRefresh_","updateDistance","setDistance","setMinDistance","getMinDistance","cluster","mapDistance","clustered","neighbors","neighbor","searchCenter","$ol$reproj$DataTile","DataTile","reprojData_","reprojError_","reprojSize_","dataSources","tileData","arrayData","pixelSize","isFloat","pixelCount","DataType","tileDataR","bytesPerElement","BYTES_PER_ELEMENT","bytesPerPixel","bytesPerRow","byteLength","bandCount","packedLength","packedData","dataIndex","rowOffset","colCount","rowIndex","colIndex","dataType","targetWidth","targetHeight","dataR","dataU","reproj","dataSource","createImageData","putImageData","$ol$source$DataTile","tileGridForProjection_","tileCacheForProjection_","setTileSizes","getReprojTile_","reprojTilePixelRatio","textureSize","ReprojDataTile","sourceLoader","$ol$reproj$Image","getImageFunction","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","DECIMALS","ImageSourceEventType","ImageSourceEvent","defaultImageLoadFunction","getRequestExtent","imageResolution","$ol$source$Image","reprojectedImage_","reprojectedRevision_","wantedExtent_","wantedResolution_","static_","wantedProjection_","setResolutions","findNearestResolution","getImageInternal","ReprojImage","requestExtent","handleImageChange","appendParams","uri","keyParams","encodeURIComponent","qs","getRequestUrl","baseUrl","srid","modifiedUrl","createLoader","F","FORMAT","TRANSPARENT","$ol$source$ImageArcGISRest","ImageSource","imageLoadFunction_","imageLoadFunction","params_","imageSize_","renderedRevision_","ratio_","loaderProjection_","getParams","getImageLoadFunction","setImageLoadFunction","updateParams","$ol$source$ImageCanvas","canvasFunction_","canvasFunction","canvasElement","ImageCanvas","imageExtent","resolutionX","resolutionY","$ol$source$ImageStatic","imageExtent_","getImageExtent","DEFAULT_VERSION","GETFEATUREINFO_IMAGE_SIZE","v13","getImageSrc","serverType","REQUEST","dpi","getRequestParams","request","SERVICE","VERSION","STYLES","getFeatureInfoUrl","projectionObj","baseParams","QUERY_LAYERS","INFO_FORMAT","getLegendUrl","LAYERS","mpu","$ol$source$ImageWMS","serverType_","sourceProjectionObj","knownMapMediaTypes","knownVectorMediaTypes","getMapTileUrlTemplate","links","mediaType","tileUrlTemplate","fallbackUrlTemplate","link","rel","startsWith","getVectorTileUrlTemplate","supportedMediaTypes","hrefLookup","supportedMediaType","parseTileMatrixSet","sourceInfo","tileMatrixSet","tileMatrixSetLimits","crs","backwards","matrices","tileMatrices","matrixLookup","matrix","limitLookup","limit","tileMatrix","pointOfOrigin","cellSize","matrixWidth","matrixHeight","tileMapWidth","minTileCol","maxTileCol","tileMapHeight","cornerOfOrigin","minTileRow","maxTileRow","intersectExtents","grid","urlTemplate","urlFunction","upsideDown","localContext","tileCol","tileRow","getTileSetInfo","tileSet","tileMatrixSetLink","tileMatrixSetDefinition","parseTileSetMetadata","$ol$source$OGCMapTile","handleTileSetInfo_","handleError_","tileSetInfo","logError","ATTRIBUTION","$ol$source$OSM","XYZ","$ol$layer$BaseImage","$ol$renderer$Layer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","createLoadedTileFinder","getLayer","renderIfReadyAndVisible","loadImage","pixelContext","$ol$renderer$canvas$Layer","LayerRenderer","tempTransform","pixelTransform","containerReused","pixelContext_","col","row","useContainer","backgroundColor","layerClassName","firstElementChild","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","$ol$renderer$canvas$ImageLayer","CanvasLayerRenderer","imageLayer","viewResolution","imageSource","renderedExtent","imageMapWidth","imageMapHeight","imageResolutionX","imageResolutionY","viewCenter","canvasTransform","toTransformString","clipped","dw","dh","previousAlpha","$ol$layer$Image","BaseImageLayer","CanvasImageLayerRenderer","TileProperty","$ol$layer$BaseTile","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","$ol$renderer$canvas$TileLayer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileOrigin","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","clips","clipZs","currentClip","zs","reverse","currentZ","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","postRenderFunction","tileCallback","$ol$layer$Tile","BaseTileLayer","CanvasTileLayerRenderer","hasImageData","ImageData","newImageData","createMinion","operation","workerHasImageData","newWorkerImageData","buffers","meta","imageOps","numBuffers","numBytes","images","arrays","pixels","createWorker","config","onMessage","lines","lib","worker","Worker","Blob","Buffer","createObjectURL","Processor","threads","_imageOps","workers","_onWorkerMessage","minion","terminated","postMessage","terminate","createFauxWorker","_workers","_queue","_maxQueueLength","queue","_running","_dataLookup","_job","process","inputs","_enqueue","_dispatch","job","slices","_resolveJob","RasterEventType","RasterSourceEvent","RasterSource","processor_","operationType_","operationType","threads_","layers_","createLayer","createLayers","useResolutions_","processSources_","requestedFrameState_","renderedImageCanvas_","iMax","sourceOrLayer","attributionGetter","sourceAttribution","setOperation","updateFrameState_","allSourcesReady_","imageDatas","onWorkerComplete_","layerOrSource","TileLayer","ImageLayer","$ol$source$Raster","LayerConfig","stamen_terrain","stamen_terrain_background","stamen_terrain_labels","stamen_terrain_lines","stamen_toner_background","stamen_toner","stamen_toner_labels","stamen_toner_lines","stamen_toner_lite","stamen_watercolor","alidade_smooth","alidade_smooth_dark","outdoors","osm_bright","ProviderConfig","retina","$ol$source$StadiaMaps","provider","providerConfig","layerConfig","query","apiKey","OSM_ATTRIBUTION","$ol$source$TileArcGISRest","getKeyForParams_","getRequestUrl_","tileExtent","$ol$source$TileDebug","strokeRect","$ol$source$TileJSON","tileJSON_","requestJSONP","handleTileJSONResponse","handleTileJSONError","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","epsg4326Projection","gridExtent","attributionExtent","$ol$source$TileWMS","transparent","v13_","updateV13_","sourceProjCoord","version","CustomTile","preemptive","preemptive_","grid_","keys_","jsonp_","xRelative","yRelative","forDataAtCoordinate","loadInternal_","$ol$source$UTFGrid","tileUrlFunction_","template_","getTemplate","forDataAtCoordinateAndResolution","grids","$ol$source$WMTS","requestEncoding","version_","dimensions_","dimensions","matrixSet_","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","tilematrixset","Service","Request","Version","Format","TileMatrix","TileCol","TileRow","XML_SCHEMA_INSTANCE_URI","createElementNS","namespaceURI","qualifiedName","getDocument","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","nextSibling","isDocument","getAttributeNS","xml","makeArrayExtender","valueReader","objectStack","makeArrayPusher","makeReplacer","makeObjectPropertyPusher","localName","makeObjectPropertySetter","makeChildAppender","nodeWriter","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","fixedNodeName","fixedNamespaceURI","newNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","structureNS","parseNode","parsersNS","nextElementSibling","parsers","parser","pushParseAndPop","pushSerializeAndPop","xmlSerializer_","document_","getXMLSerializer","XMLSerializer","implementation","createDocument","fromTransform","mat4","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","declutterMode_","getScale","getDisplacement","getHitDetectionImage","getImageSize","setDisplacement","setRotateWithView","setScale","$ol$style$Image","RegularShape","canvases_","hitDetectionCanvas_","fill_","radius_","radius1","radius2_","radius2","stroke_","renderOptions_","getRadius2","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","strokeWidth","r1","r2","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","maxRadius","createPath_","drawHitDetectionCanvas_","angle0","radiusC","$ol$style$RegularShape","CircleStyle","$ol$style$Circle","Fill","color_","setColor","$ol$style$Fill","taintedTestContext","IconImage","hitDetectionImage_","imageState_","tainted_","initializeImage_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","cacheKey","$ol$style$IconImage","calculateScale","wantedWidth","wantedHeight","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","iconImage_","getIconImage","offset_","offsetOrigin_","offsetOrigin","initialOptions_","setAnchor","iconImageSize","$ol$style$Icon","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$ol$style$Stroke","Style","geometryFunction_","defaultGeometryFunction","hitDetectionRenderer_","zIndex_","setRenderer","setHitDetectionRenderer","setText","toFunction","defaultStyles","createDefaultStyle","createEditingStyle","$ol$style$Style","Text","font_","textAlign_","justify_","justify","repeat_","repeat","textBaseline_","maxAngle_","maxAngle","placement_","placement","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getPlacement","getRepeat","getMaxAngle","getOverflow","getJustify","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","$ol$style$Text","$ol$structs$LinkedList","first_","last_","head_","circular_","length_","insertItem","next","removeItem","firstItem","lastItem","nextItem","getNextItem","prevItem","getPrevItem","getCurrItem","setFirstItem","list","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","$ol$render$canvas$Builder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","CanvasInstruction","endGeometry","finish","reverseHitDetectionInstructions","instruction","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$ol$render$canvas$ImageBuilder","CanvasBuilder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","sharedData","$ol$render$canvas$LineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$ol$render$canvas$PolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","$ol$render$canvas$TextBuilder","labels_","fillStates","strokeStates","textStates","textKey_","fillKey_","strokeKey_","geometryWidths","beg","saveTextStates_","p0","p1","p2","p3","flatOffset","oo","cc","chunk","chunkBegin","drawChars_","strokeKey","textKey","fillKey","baseline","BATCH_CONSTRUCTORS","PolygonBuilder","Default","Builder","ImageBuilder","LineStringBuilder","TextBuilder","$ol$render$canvas$BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","substring","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","line","$ol$render$canvas$Executor","alignFill_","coordinateCache_","renderedTransform_","widths_","createLabel","textIsArray","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","strokePadding","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","transformSetFromArray","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","drawChars","part","execute","executeHitDetection","ORDER","circlePixelIndexArrayCache","getPixelIndexArray","maxDistanceSq","distances","pixelIndex","$ol$render$canvas$ExecutorGroup","allInstructions","renderBuffer","renderBuffer_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","Executor","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","idx","executor","builderTypes","HIT_DETECT_RESOLUTION","createHitDetectionImageData","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","imgContext","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","$ol$renderer$canvas$VectorLayer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","compositionContext_","renderWorlds","executorGroup","vectorSource","endWorld","world","setupCompositionContext_","compositionContext","releaseCompositionContext_","transformToString","lastIndexOf","animating","interacting","updateWhileAnimating","getUpdateWhileAnimating","updateWhileInteracting","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","defaultRenderOrder","loadExtents","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","getDeclutter","userExtent","getSquaredRenderTolerance","replayGroupInstructions","ExecutorGroup","$ol$renderer$canvas$VectorImageLayer","vectorRenderer_","CanvasVectorLayerRenderer","layerImageRatio_","getImageRatio","coordinateToVectorPixelTransform_","renderedPixelToCoordinateTransform_","vectorPixel","vectorRenderer","imageLayerState","imageFrameState","emptyImage","numTypes","NoneType","BooleanType","NumberType","StringType","ColorType","NumberArrayType","AnyType","typeNames","namedTypes","typeName","namedType","includesType","broad","specific","overlapsType","oneType","otherType","isType","expected","LiteralExpression","CallExpression","operator","newParsingContext","variables","encoded","typeHint","parseCallExpression","Ops","Get","Var","Concat","GeometryType","Any","All","Not","Resolution","Time","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","Between","Interpolate","Case","In","Color","Id","Band","Palette","createParser","getTypeFromHint","withArgsCount","firstArg","parsedArgs","varName","initialValue","withNoArgs","parseArgsOfType","narrowArgsType","outputType","withEvenArgs","argsCount","inputType","fallback","expectedInputType","stringify","interpolationType","interpolation","argCount","needleType","colors","parsedColors","minArgs","maxArgs","argType","expression","gotType","expectedType","sameType","returnType","argValidators","actualType","newEvaluationContext","buildExpression","actual","compileExpression","colorValue","compileAssertionExpression","nameExpression","compileAccessorExpression","op","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileMatchExpression","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","compileInterpolateExpression","input1","output1","input2","output2","rgba1","rgba2","lcha1","lcha2","deltaHue","rulesToStyleFunction","rules","parsingContext","evaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","buildStyle","nonNullCount","compiledRules","rule","styleLength","someMatched","filterEvaluator","else","styleEvaluator","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","prefix","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","numberArrayEvaluator","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","optionalNumber","optionalSize","optionalDeclutterMode","icon","buildIcon","pointsName","requireNumber","shape","buildShape","evaluateRadius","buildCircle","buildImage","evaluateZIndex","empty","evaluateColor","colorLikeEvaluator","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","requireSizeLike","registered","register","proj4","projCodes","defs","def","projName","axis","to_meter","code1","proj1","code2","proj2","epsgLookup","ok","$ol$layer$BaseVector","declutter_","declutter","updateWhileAnimating_","updateWhileInteracting_","setRenderOrder","renderOrder","toStyleLike","toStyleFunction","$ol$layer$Vector","BaseVectorLayer","geoA","geoB","geoStack","fractionStack","fractions","geoM","fracA","fracB","fracM","maxIterations","meridian","lon","frac","parallel","lon2","DEFAULT_STROKE_STYLE","INTERVALS","$ol$layer$Graticule","VectorLayer","maxLines","targetSize","showLabels","lonLabelFormatter","latLabelFormatter","lonLabelPosition","latLabelPosition","lonLabelStyle","latLabelStyle","intervals","maxLat_","maxLon_","minLat_","minLon_","maxX_","maxY_","minX_","minY_","targetSize_","maxLines_","meridians_","parallels_","strokeStyle_","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","bottomLeft_","bottomRight_","topLeft_","topRight_","meridiansLabels_","parallelsLabels_","lonLabelFormatter_","latLabelFormatter_","lonLabelPosition_","latLabelPosition_","lonLabelStyleBase_","lonLabelStyle_","latLabelStyleBase_","latLabelStyle_","drawLabels_","intervals_","loaderFunction","strategyFunction","featurePool_","lineStyle_","loadedExtent_","realWorldExtent","renderExtent","equivalentProjection","updateProjectionInfo_","createGraticule_","featuresColl","poolIndex","addMeridian_","minLat","maxLat","getMeridian_","geom","addParallel_","minLon","maxLon","getParallel_","rotationCenter","rotationExtent","unrotatedWidth","unrotatedHeight","startWorld","labelsAtStart","vectorContext","textPoint","getMeridianPoint_","getParallelPoint_","getInterval_","validCenterP","centerLonLat","centerLon","centerLat","cnt","validExtentP","validExtent","clampedLat","clampedBottom","clampedTop","getMeridians","clampedLeft","clampedRight","getParallels","toLonLatTransform","lonLatCoordinates","worldExtentP","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","DYNAMIC_DRAW","CONTEXT_IDS","BufferUsage","getArrayClassForType","Uint32Array","WebGLArrayBuffer$1","usage","usage_","ofSize","fromArray","fromArrayBuffer","getUsage","ContextEventType","WebGLPostProcessingPass$1","gl_","webGlContext","gl","scaleRatio_","scaleRatio","renderTargetTexture_","createTexture","renderTargetTextureSize_","frameBuffer_","createFramebuffer","depthBuffer_","createRenderbuffer","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","renderTargetProgram_","createProgram","attachShader","linkProgram","renderTargetVerticesBuffer_","createBuffer","bindBuffer","bufferData","STATIC_DRAW","renderTargetAttribLocation_","getAttribLocation","renderTargetUniformLocation_","getUniformLocation","renderTargetOpacityLocation_","renderTargetTextureLocation_","uniforms_","uniforms","location","getGL","init","drawingBufferWidth","drawingBufferHeight","bindFramebuffer","FRAMEBUFFER","getFrameBuffer","bindRenderbuffer","RENDERBUFFER","getDepthBuffer","internalFormat","RGBA","UNSIGNED_BYTE","bindTexture","TEXTURE_2D","texImage2D","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","framebufferTexture2D","COLOR_ATTACHMENT0","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","nextPass","preCompose","postCompose","activeTexture","TEXTURE0","canvasId","attributes","getContextAttributes","preserveDrawingBuffer","clearColor","clearDepth","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","DEPTH_TEST","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform2f","uniform1i","uniform1f","applyUniforms","drawArrays","TRIANGLES","textureSlot","uniform","texture","uniform3f","uniform4f","DefaultUniform","AttributeType","UNSIGNED_SHORT","UNSIGNED_INT","canvasCache","getSharedCanvasCacheKey","uniqueCanvasCacheKeyCount","getOrCreateContext","cacheItem","antialias","users","WebGLHelper","boundHandleWebGLContextLost_","handleWebGLContextLost","boundHandleWebGLContextRestored_","handleWebGLContextRestored","canvasCacheKey_","canvasCacheKey","getUniqueCanvasCacheKey","bufferCache_","extensionCache_","currentProgram_","needsToBeRecreated_","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","uniformLocationsByProgram_","attribLocationsByProgram_","setUniforms","postProcessPasses_","postProcesses","WebGLPostProcessingPass","shaderCompileErrors_","addUniforms","canvasCacheKeyMatches","getExtension","bufferKey","bufferCache","webGlBuffer","flushBufferData","deleteBuffer","buf","bufferCacheEntry","isContextLost","loseContext","prepareDraw","disableAlphaBlend","enableDepth","getCanvas","depthRange","ZERO","depthFunc","LEQUAL","slot","uniformName","prepareDrawToRenderTarget","renderTarget","getFramebuffer","getDepthbuffer","getTexture","drawElements","elementType","numItems","offsetInBytes","finalizeDraw","applyFrameState","setUniformFloatValue","setUniformFloatVec2","applyHitDetectionUniform","loc","prevValue","setUniformMatrixValue","program","shader","getProgram","fragmentShaderSource","vertexShaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","getProgramParameter","LINK_STATUS","getProgramInfoLog","programUid","getAttributeLocation","makeProjectionTransform","uniform2fv","setUniformFloatVec4","uniform4fv","uniformMatrix4fv","enableAttributeArray_","attribName","enableAttributes","attr","getByteSizeFromType","computeAttributesStride","needsToBeRecreated","Uint16Array","WebGLLayerRenderer","inversePixelTransform_","postProcesses_","helper","removeHelper","dispatchPreComposeEvent","dispatchPostComposeEvent","incrementGroup","groupNumber","afterHelperCreated","prepareFrameInternal","WebGLLayerRenderer$1","tmpArray4","WebGLRenderTarget$1","helper_","texture_","framebuffer_","depthbuffer_","dataCacheDirty_","updateSize_","clearCachedData","readAll","readPixels","readPixel","WebGLWorkerMessageType","earcut","holeIndices","dim","invSize","hasHoles","outerLen","outerNode","linkedList","triangles","steiner","getLeftmost","compareX","eliminateHole","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","filterPoints","again","ear","zOrder","prevZ","nextZ","q","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","ax","bx","cx","ay","by","cy","pointInTriangle","minZ","maxZ","locallyInside","isValidDiagonal","splitPolygon","hole","bridge","hx","hy","qx","mx","my","tanMin","sectorContainsSector","findHoleBridge","bridgeReverse","leftmost","py","intersectsPolygon","inside","middleInside","q1","q2","o1","sign","o2","o3","o4","onSegment","num","an","bp","sum","earcutModule","exports","default","deviation","polygonArea","trianglesArea","flatten","holes","holeIndex","colorEncodeId","radix","divide","WebGLPointsLayerRenderer$1","projectionMatrixTransform","sourceRevision_","verticesBuffer_","WebGLArrayBuffer","indicesBuffer_","vertexShader_","fragmentShader_","program_","hitDetectionEnabled_","hitDetectionEnabled","customAttributes","attribute","currentTransform_","renderTransform_","invertRenderTransform_","renderInstructions_","hitRenderTarget_","lastSentId","worker_","createWebGLWorker","received","projectionTransform","vertexBuffer","indexBuffer","makeInverseTransform","renderInstructions","featureCache_","featureCount_","sourceListenKeys_","handleSourceFeatureAdded_","handleSourceFeatureChanged_","handleSourceFeatureDelete_","handleSourceFeatureClear_","WebGLRenderTarget","getWorldParameters","viewNotMoving","sourceChanged","BaseVector","rebuildBuffers_","singleInstructionLength","totalSize","featureCache","tmpCoords","tmpColor","featureUid","userCoords","hitColor","customAttributesSize","mult","colorDecodeId","forHitDetection","translateTransform","renderCount","PaletteTexture$1","NEAREST","TEXTURE_MAG_FILTER","Uniforms","TILE_TRANSFORM","TRANSITION_ALPHA","DEPTH","RENDER_EXTENT","PATTERN_ORIGIN","ZOOM","GLOBAL_ALPHA","PROJECTION_MATRIX","SCREEN_TO_WORLD_MATRIX","TILE_TEXTURE_ARRAY","TEXTURE_PIXEL_WIDTH","TEXTURE_PIXEL_HEIGHT","TEXTURE_RESOLUTION","TEXTURE_ORIGIN_X","TEXTURE_ORIGIN_Y","numberToGlsl","arrayToGlsl","colorToGlsl","stringToFloatMap","stringToFloatCounter","getStringNumberEquivalent","string","stringToGlsl","uniformNameForVariable","variableName","GET_BAND_VALUE_FUNC","PALETTE_TEXTURE_ARRAY","createCompiler","compile","compilers","propName","inFragmentShader","computeType","compiledArgs","firstValue","secondValue","exponent","stop1","stop2","funcName","functions","computeOperatorFunctionName","tests","band","xOffset","yOffset","ifBlocks","colorIndex","bandIndex","numColors","palette","paletteTextures","paletteName","paletteTexture","PaletteTexture","compiler","COMMON_HEADER","DEFAULT_STYLE","ShaderBuilder","attributes_","varyings_","hasSymbol_","symbolSizeExpression_","symbolRotationExpression_","symbolOffsetExpression_","symbolColorExpression_","texCoordExpression_","discardExpression_","symbolRotateWithView_","hasStroke_","strokeWidthExpression_","strokeColorExpression_","strokeOffsetExpression_","strokeCapExpression_","strokeJoinExpression_","strokeMiterLimitExpression_","strokeDistanceFieldExpression_","hasFill_","fillColorExpression_","vertexShaderFunctions_","fragmentShaderFunctions_","addUniform","addAttribute","addVarying","setSymbolSizeExpression","getSymbolSizeExpression","setSymbolRotationExpression","setSymbolOffsetExpression","getSymbolOffsetExpression","setSymbolColorExpression","getSymbolColorExpression","setTextureCoordinateExpression","setFragmentDiscardExpression","getFragmentDiscardExpression","setSymbolRotateWithView","setStrokeWidthExpression","setStrokeColorExpression","getStrokeColorExpression","setStrokeOffsetExpression","setStrokeCapExpression","setStrokeJoinExpression","setStrokeMiterLimitExpression","setStrokeDistanceFieldExpression","setFillColorExpression","getFillColorExpression","addVertexShaderFunction","addFragmentShaderFunction","getSymbolVertexShader","varying","getSymbolFragmentShader","getStrokeVertexShader","getStrokeFragmentShader","getFillVertexShader","getFillFragmentShader","DEFAULT_GRADIENT","$ol$layer$Heatmap","gradient","blur","gradient_","handleGradientChanged_","setGradient","setBlur","weightFunction_","getBlur","getGradient","createLinearGradient","addColorStop","createGradient","builder","WebGLPointsLayerRenderer","u_size","u_blurSlope","u_gradientTexture","u_opacity","$ol$layer$VectorImage","imageRatio","imageRatio_","CanvasVectorImageLayerRenderer","$ol$interaction$DblClickDragZoom","opt_options","scaleDeltaByPixel_","handlingDownUpSequence_","handlingDoubleDownSequence_","doubleTapTimeoutId_","trackedPointers_","waitForDblTap_","isPointerDraggingEvent","DragAndDropEventType","DragAndDropEvent","file","$ol$interaction$DragAndDrop","readAsBuffer_","formats_","formatConstructors","dropListenKeys_","source_","handleResult_","formats","TextDecoder","tryReadFeatures_","registerListeners_","dropArea","handleDrop","handleStop","unregisterListeners_","files","dataTransfer","reader","FileReader","readAsArrayBuffer","readAsText","dropEffect","$ol$interaction$DragRotateAndZoom","lastMagnitude_","magnitude","angleDelta","DrawEventType","DrawEvent","getSquaredDistance","getCoordinate","getCumulativeSquaredDistance","endIndex","lowIndex","highIndex","lowWholeIndex","highWholeIndex","interpolateCoordinate","appendGeometryTraceTargets","targets","appendTraceTarget","polys","sharedUpdateInfo","ring","getPointSegmentRelationship","sharedRel","getDefaultStyleFunction","$ol$interaction$Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","pointerType_","freehand_","features_","snapTolerance_","snapTolerance","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryLayout_","geometryLayout","mode","squaredLength","squaredCoordinateDistance","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","geometryName","freehandCondition_","freehand","freehandCondition","traceCondition_","setTrace","trace","traceState_","traceSource_","traceSource","updateState_","getOverlay","move","addToDrawing_","startDrawing_","deactivateTrace_","toggleTraceState_","getTraceTargets","startPx","targetIndex","addOrRemoveTracedCoordinates_","previouslyForward","addTracedCoordinates_","removeTracedCoordinates_","fromIndex","toIndex","removeLastPoints_","appendCoordinates","updateTrace_","traceState","updatedTraceTarget","closestTargetDistance","newTargetIndex","newEndIndex","minSegmentDistance","coordinateIndex","newTarget","considerBothDirections","newCoordinate","forwardDistance","reverseDistance","getTraceTargetUpdate","oldTarget","tracing","startingToDraw","finishDrawing","atFinish_","abortDrawing","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","createOrUpdateCustomSketchLine_","sketchLineGeom","removeLastPoint","sketchFeature","abortDrawing_","newDrawing","ending","sketchFeatures","overlaySource","ExtentEventType","ExtentEvent","getDefaultExtentStyleFunction","getDefaultPointerStyleFunction","getPointHandler","fixedPoint","getEdgeHandler","fixedP1","fixedP2","$ol$interaction$Extent","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","vertexOverlay_","pointerStyle","snapToVertex_","pixelCoordinate","sortByDistance","getExtentInternal","segments","getSegments","closestSegment","vertex","vertexPixel","coordinateDistance","pixel1","pixel2","squaredDist1","squaredDist2","dist","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","vertexFeature","getOpposingPoint","x_","y_","readNumber","writeNumber","to5","differentNumber","$ol$interaction$Link","animationOptions","animationOptions_","replace_","prefix_","initial_","trackedCallbacks_","trackedValues_","getParamName_","get_","set_","delete_","oldMap","updateUrl_","handleChangeLayerGroup_","history","replaceState","updateView","viewProperties","layersParam","track","updateHistory_","visibilities","pushState","tempSegment","ModifyEventType","ModifyEvent","compareIndexes","projectedDistanceToSegmentDataSquared","pointCoordinates","segmentData","distanceToCenterSquared","distanceToCircumference","closestOnSegmentData","$ol$interaction$Modify","boundHandleFeatureChange_","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","featuresBeingModified_","rBush_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","hitDetection_","handleSourceAdd_","handleSourceRemove_","hitDetection","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","snapToPointer_","snapToPointer","writer","handlePointerAtPixel_","willModifyFeatures_","ss","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","nodeToRemove","depth","centerSegmentData","circumferenceSegmentData","featureSegments","createOrUpdateVertexFeature_","removePoint","dragSegment","setGeometryCoordinates_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","insertVertex_","nodes","hitPointGeometry","bufferExtent","vertexSegments","geometryUid","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","dragSegments","segmentsByFeature","component","newIndex","deleted","SelectEventType","SelectEvent","selected","deselected","originalFeatureStyles","Select","boundAddFeature_","boundRemoveFeature_","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","getHitTolerance","setHitTolerance","restorePreviousStyle_","applySelectedStyle_","removeFeatureLayerAssociation_","$ol$interaction$Select","SnapEventType","SnapEvent","getFeatureFromEvent","$ol$interaction$Snap","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","GEOMETRY_SEGMENTERS_","segmentPointGeometry_","segmentLineStringGeometry_","segmentPolygonGeometry_","segmentMultiPointGeometry_","segmentMultiLineStringGeometry_","segmentMultiPolygonGeometry_","segmentGeometryCollectionGeometry_","segmentCircleGeometry_","feature_uid","segmenter","segmentsData","getFeatures_","snapTo","updateFeature_","featuresToUpdate","unregister","currentMap","projectedCoordinate","segmentsLength","closestVertex","squaredPixelTolerance","getResult","tempVertexCoord","segmentStart","segmentEnd","TranslateEventType","TranslateEvent","startCoordinate","$ol$interaction$Translate","lastCoordinate_","startCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","newViewCoordinate","lastViewCoordinate","flipXY","destOffset","$ol$format$Feature","defaultFeatureProjection","featureClass","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","write","fromProjection","toProjection","transformExtentWithOptions","GeometryConstructor","createRenderFeature","orientFlatCoordinates","createGeometry","XMLFeature$1","FeatureFormat","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","readBoolean","readBooleanString","readDateTime","dateTime","readDecimal","readDecimalString","readPositiveInteger","readNonNegativeIntegerString","readString","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","writeDecimalTextNode","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","GPX_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","TRK_SEQUENCE","TRK_SERIALIZERS","writeWptType","RTE_PARSERS","cmt","desc","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","writeLink","RTEPT_TYPE_SEQUENCE","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","GEOMETRY_TYPE_TO_NODENAME","GPX_NODE_FACTORY","layoutOptions","getAttribute","hasZ","hasM","applyLayoutOptions","setAttributeNS","$ol$format$GPX","XMLFeature","readExtensions_","readExtensions","handleReadExtensions_","extensionsNode","featureReader","gpx","getObject","$ol$format$JSONFeature","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","writeFeatureObject","writeFeaturesObject","writeGeometryObject","readGeometryInternal","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","$ol$format$GeoJSON","JSONFeature","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","featureObject","geometryObject","objects","$ol$format$TextFeature","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","B_RECORD_RE","H_RECORD_RE","HFDTE_RECORD_RE","NEWLINE_RE","$ol$format$IGC","TextFeature","altitudeMode_","altitudeMode","year","month","day","lastDateTime","hour","minute","second","UTC","GX_NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","insetPixels","PLACEMARK_PARSERS","ExtendedData","extendedDataParser","Region","regionParser","MultiGeometry","readMultiGeometry","readLineString","readLinearRing","readPoint","readPolygon","readStyle","StyleMap","styleMapValue","readStyleMapValue","placemarkObject","address","description","phoneNumber","styleUrl","readStyleURL","visibility","MultiTrack","GX_MULTITRACK_GEOMETRY_PARSERS","Track","readGxTrack","NETWORK_LINK_PARSERS","Link","readURI","CAMERA_PARSERS","Altitude","Longitude","Latitude","Tilt","AltitudeMode","Heading","Roll","REGION_PARSERS","LatLonAltBox","LAT_LON_ALT_BOX_PARSERS","regionObject","Lod","LOD_PARSERS","lodObject","KML_SEQUENCE","KML_SERIALIZERS","Document","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","Placemark","writePlacemark","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_FILL_STYLE","DEFAULT_NO_IMAGE_STYLE","DEFAULT_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","DEFAULT_TEXT_STYLE","TEXTAREA","DEFAULT_STYLE_ARRAY","scaleForSize","defaultIconUrlFunction","findStyle","styleValue","defaultStyle","sharedStyles","readColor","hexColor","readFlatCoordinates","re","baseURI","readScale","STYLE_MAP_PARSERS","Pair","pairObject","PAIR_PARSERS","ICON_STYLE_PARSERS","iconObject","ICON_PARSERS","hotSpot","xunits","yunits","LABEL_STYLE_PARSERS","LINE_STYLE_PARSERS","POLY_STYLE_PARSERS","outline","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","GX_TRACK_PARSERS","when","whens","gxTrackObject","GEOMETRY_FLAT_COORDINATES_PARSERS","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","extrude","tessellate","MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","setCommonGeometryProperties","FLAT_LINEAR_RINGS_PARSERS","innerBoundaryIs","innerBoundaryFlatLinearRings","INNER_BOUNDARY_IS_PARSERS","outerBoundaryIs","flatLinearRing","OUTER_BOUNDARY_IS_PARSERS","flatLinearRings","STYLE_PARSERS","IconStyle","styleObject","IconObject","drawIcon","iconUrlFunction_","resizeScale","LabelStyle","LineStyle","PolyStyle","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DATA_PARSERS","displayName","EXTENDED_DATA_PARSERS","Data","SchemaData","SCHEMA_DATA_PARSERS","SimpleData","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","writeColorTextNode","abgr","hex","EXTENDEDDATA_NODE_SERIALIZERS","pair","DATA_NODE_FACTORY","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","vec2","writeScaleTextNode","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","factory","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","namesAndValues","pointStyles","lineStyles","polyStyles","STYLE_SEQUENCE","STYLE_SERIALIZERS","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","styleArray","writeStyles_","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","POLY_STYLE_SEQUENCE","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","outerRing","POLY_STYLE_SERIALIZERS","iconProperties","$ol$format$KML","defaultStyle_","extractStyles_","extractStyles","writeStyles","sharedStyles_","showPointNames_","showPointNames","iconUrlFunction","readDocumentOrFolder_","Folder","readPlacemark_","readSharedStyle_","readSharedStyleMap_","drawName","multiGeometryPoints","featureStyle","nameStyle","foundStyle","textOffset","createNameStyleFunction","createFeatureStyleFunction","styleUri","fs","readName","readNameFromDocument","readNameFromNode","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","readCamera","cameras","readCameraFromDocument","readCameraFromNode","kml","xmlnsUri","ieee754","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","LN2","pbf","Pbf","require$$0","ArrayBuffer","isView","Varint","Fixed64","Bytes","Fixed32","SHIFT_LEFT_32","SHIFT_RIGHT_32","utf8TextDecoder","readPackedEnd","readVarint","toNum","isSigned","makeRoomForExtraLength","startPos","extraLen","realloc","writePackedVarint","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","readInt32","destroy","readFields","readField","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","read","readDouble","readVarintRemainder","readVarint64","readSVarint","subarray","readUtf8TextDecoder","str","b3","b0","bytesPerSequence","readUtf8","readBytes","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","writeUtf8","writeBytes","writeRawMessage","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","layersPBFReader","layerPBFReader","featurePBFReader","readRawFeature","$ol$format$MVT","featureClass_","layerName_","layerName","idProperty_","idProperty","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","ctor","PBF","pbfLayers","pbfLayer","WAY_PARSERS","nd","ndrefs","readTag","PARSERS","tags","NODE_PARSERS","way","ways","$ol$format$OSMXML","XML$1","readFromDocument","readFromNode","NAMESPACE_URI","readHref","ServiceIdentification","SERVICE_IDENTIFICATION_PARSERS","ServiceProvider","SERVICE_PROVIDER_PARSERS","OperationsMetadata","OPERATIONS_METADATA_PARSERS","ADDRESS_PARSERS","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","ALLOWED_VALUES_PARSERS","Value","CONSTRAINT_PARSERS","AllowedValues","CONTACT_INFO_PARSERS","Phone","PHONE_PARSERS","Address","DCP_PARSERS","HTTP","HTTP_PARSERS","REQUEST_METHOD_PARSERS","Post","OPERATION_PARSERS","DCP","Operation","Voice","Facsimile","Constraint","SERVICE_CONTACT_PARSERS","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","$ol$format$OWS","XML","owsObject","encodeDeltas","numbers","lastNumbers","encodeFloats","decodeDeltas","decodeFloats","encodeSignedIntegers","decodeSignedIntegers","encodeUnsignedIntegers","decodeUnsignedIntegers","encodeUnsignedInteger","current","$ol$format$Polyline","factor_","GEOMETRY_READERS","transformVertex","arcs","concatenateArcs","polyArray","ringCoords","indices","readFeaturesFromGeometryCollection","readFeatureFromGeometry","geometryReader","transformArc","$ol$format$TopoJSON","topoJSONTopology","transformArcs","topoJSONFeatures","objectName","GMLNS","ONLY_WHITESPACE_RE","GMLBase","featureType","featureNS","srsName","schemaLocation","FEATURE_COLLECTION_PARSERS","namespace","featureMember","readFeaturesInternal","featureMembers","defaultPrefix","ns","featureTypes","readFeatureElement","readGeometryOrExtent","GEOMETRY_PARSERS","readExtentElement","readGeometryElement","readFeatureElementInternal","asFeature","_content_","fid","readMultiPoint","MULTIPOINT_PARSERS","readMultiLineString","MULTILINESTRING_PARSERS","readMultiPolygon","MULTIPOLYGON_PARSERS","pointMemberParser","POINTMEMBER_PARSERS","lineStringMemberParser","LINESTRINGMEMBER_PARSERS","polygonMemberParser","POLYGONMEMBER_PARSERS","internalOptions","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","GMLBase$1","MULTIGEOMETRY_TO_MEMBER_NODENAME","MultiCurve","MultiSurface","GML2","containerSrs","coordsGroups","readBox","BOX_PARSERS_","innerBoundaryIsParser","outerBoundaryIsParser","GEOMETRY_NODE_FACTORY_","multiSurface","surface","multiCurve","writeFeatureElement","writeGeometryElement","writeCurveOrLineString","createCoordinatesNode_","writeCoordinates_","writeCurveSegments_","writeLineStringOrCurveMember","writeMultiCurveOrLineString","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","GEOMETRY_SERIALIZERS","getCoords_","writeSurfaceOrPolygon","RING_SERIALIZERS","RING_NODE_FACTORY_","patches","writeSurfacePatches_","exteriorWritten","writeRing","writeLinearRing","writePoint","writeMultiPoint","POINTMEMBER_SERIALIZERS","writePointMember","writeMultiSurfaceOrPolygon","SURFACEORPOLYGONMEMBER_SERIALIZERS","writeSurfaceOrPolygonMember","writeEnvelope","ENVELOPE_SERIALIZERS","Box","Curve","Surface","Envelope","curveMember","surfaceMember","lowerCorner","upperCorner","GML2$1","GML3","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve","MULTICURVE_PARSERS","readFlatCurveRing","readMultiSurface","MULTISURFACE_PARSERS","curveMemberParser","CURVEMEMBER_PARSERS","surfaceMemberParser","SURFACEMEMBER_PARSERS","readPatch","PATCHES_PARSERS","readSegment","SEGMENTS_PARSERS","readPolygonPatch","readLineStringSegment","interiorParser","exteriorParser","readSurface","SURFACE_PARSERS","readCurve","CURVE_PARSERS","readEnvelope","ENVELOPE_PARSERS","readFlatPos","readFlatPosList","contextDimension","writePos_","srsDimension","writePosList_","posList","writeFeatureMembers_","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","Ring","GML3$1","GML32","GML32$1","Filter$1","tagName_","getTagName","LogicalNary$1","Filter","And$1","LogicalNary","Bbox$1","boundedBy","member","TRANSACTION_SUMMARY_PARSERS","totalInserted","totalUpdated","totalDeleted","TRANSACTION_RESPONSE_PARSERS","TransactionSummary","readTransactionSummary","InsertResults","readInsertResults","QUERY_SERIALIZERS","PropertyName","TRANSACTION_SERIALIZERS","Insert","Update","writeUpdate","Delete","writeDelete","writeProperty","Native","writeNative","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","SCHEMA_LOCATIONS","GML_FORMATS","serializeTransactionRequest","OGC_FID_PARSERS","FeatureId","fidParser","INSERT_RESULTS_PARSERS","gmlVersion","writeOgcFidFilter","getTypeName","featurePrefix","nativeElement","vendorId","safeToIgnore","GETFEATURE_SERIALIZERS","Query","writeQuery","During","writeDuringFilter","And","writeLogicalFilter","Or","writeNotFilter","BBOX","writeBboxFilter","Contains","writeSpatialFilter","Intersects","Within","DWithin","writeDWithinFilter","PropertyIsEqualTo","writeComparisonFilter","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","writeIsNullFilter","PropertyIsBetween","writeIsBetweenFilter","PropertyIsLike","writeIsLikeFilter","Disjoint","ResourceId","propertyNames","typeNameAttr","getFilterNS","writeFilterCondition","writePropertyName","unit","writeExpression","propertyName","timePeriod","writeTimeInstant","matchCase","writeLiteral","lowerBoundary","upperBoundary","wildCard","singleChar","escapeChar","pattern","timeInstant","timePosition","writeGetFeature","$ol$format$WFS","featureType_","featureNS_","gmlFormat_","gmlFormat","schemaLocation_","getFeatureType","setFeatureType","featuresNS","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","handle","outputFormat","maxFeatures","resultType","viewParams","combineBboxAndFilter","completeFilter","bboxFilter","Bbox","bboxFilterFn","Function","andFilterFn","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","createTransactionRequest","nativeElements","$ol$format$WMSGetFeatureInfo","readFeatures_","layerElement","toRemove","layerFeatures","gmlFeatures","OWS_NAMESPACE_URIS","Contents","CONTENTS_PARSERS","LAYER_PARSERS","TileMatrixSet","TMS_PARSERS","isDefault","TileMatrixSetLink","TMS_LINKS_PARSERS","Dimension","DIMENSION_PARSERS","ResourceURL","resourceType","WGS84BoundingBox","readBoundingBox","Identifier","LegendURL","legend","TileMatrixSetLimits","TMS_LIMITS_LIST_PARSERS","TileMatrixLimits","TMS_LIMITS_PARSERS","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","WGS84_BBOX_READERS","LowerCorner","readCoordinates","UpperCorner","WellKnownScaleSet","TM_PARSERS","SupportedCRS","BoundingBox","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","$ol$format$WMTSCapabilities","owsParser_","OWS","WMTSCapabilityObject","events","FullScreenEventType","isFullScreenSupported","requestFullscreen","fullscreenEnabled","isFullScreen","fullscreenElement","requestFullScreen","$ol$control$FullScreen","isInFullscreen_","boundHandleMapTargetChange_","handleMapTargetChange_","cssClassName_","documentListeners_","activeClassName_","activeClassName","inactiveClassName_","inactiveClassName","labelNode_","labelActive","labelActiveNode_","button_","setClassName_","handleFullScreen_","exitFullscreen","exitFullScreen","requestFullScreenWithKeys","handleFullScreenChange_","wasInFullscreen","fullscreen","PROJECTION","COORDINATE_FORMAT","$ol$control$MousePosition","coordinateFormat","setCoordinateFormat","renderOnMouseOut_","placeholder","placeholder_","renderedHTML_","mapProjection_","getCoordinateFormat","handleMouseMove","updateHTML_","handleMouseOut","html","MAX_RATIO","MIN_RATIO","$ol$control$OverviewMap","boundHandleRotationChanged_","handleRotationChanged_","viewExtent_","ovmapDiv_","view_","ovmap","Map","ovmap_","boxSizing","boxOverlay_","Overlay","scope","overlayBox","mousePosition","endMoving","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","updateBoxAfterOvmapIsRendered_","newView","validateExtent_","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","updateBox_","ovresolution","ovmapPostrenderKey_","getOverviewMap","UNITS_PROP","LEADING_DIGITS","DEFAULT_DPI","$ol$control$ScaleLine","bar","innerElement_","viewState_","minWidth_","minWidth","maxWidth_","maxWidth","renderedWidth_","handleUnitsChanged_","setUnits","scaleBar_","scaleBarSteps_","scaleBarText_","dpi_","setDpi","pointResolutionUnits","nominalCount","suffix","metersPerDegree","decimalCount","previousCount","previousWidth","previousDecimalCount","createScaleBar","resolutionScale","getScaleForResolution","mapScale","toLocaleString","stepWidth","scaleSteps","createMarker","cls","createStepText","isLast","lengthString","Direction","$ol$control$ZoomSlider","currentResolution_","direction_","heightLimit_","widthLimit_","startX_","startY_","thumbSize_","sliderInitialized_","thumbElement","containerElement","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","initSlider_","containerWidth","containerHeight","containerStyle","thumb","thumbStyle","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","drag","setThumbPosition_","getPositionForResolution_","amount","$ol$control$ZoomToExtent","handleZoomToExtent","ol","$ol$Collection","_ol_Collection$CollectionEvent","_ol_DataTile$asArrayLike","_ol_DataTile$asImageLike","_ol_DataTile$toArray","_ol_Feature$createStyleFunction","Geolocation","_ol_Geolocation$GeolocationError","_ol_Image$decode","_ol_Image$decodeFallback","_ol_Image$listenImage","_ol_Image$load","_ol_Object$ObjectEvent","_ol_Observable$unByKey","_ol_TileQueue$getTilePriority","_ol_TileRange$createOrUpdate","VectorRenderTile","_ol_View$createCenterConstraint","_ol_View$createResolutionConstraint","_ol_View$createRotationConstraint","_ol_View$isNoopAnimation","_ol_array$ascending","_ol_array$binarySearch","_ol_array$descending","_ol_array$equals","_ol_array$extend","_ol_array$isSorted","_ol_array$linearFindNearest","_ol_array$reverseSubArray","stableSort","compareFnc","asserts","_ol_asserts$assert","centerconstraint","_ol_centerconstraint$createExtent","_ol_centerconstraint$none","_ol_color$asArray","_ol_color$asString","_ol_color$fromString","_ol_color$isStringColor","_ol_color$lchaToRgba","_ol_color$normalize","_ol_color$rgbaToLcha","_ol_color$toString","_ol_color$withAlpha","colorlike","_ol_colorlike$asColorLike","_ol_console$error","setLevel","_ol_console$warn","FullScreen","MousePosition","OverviewMap","ScaleLine","ZoomSlider","ZoomToExtent","_ol_control_defaults$defaults","_ol_coordinate$add","_ol_coordinate$closestOnCircle","_ol_coordinate$closestOnSegment","createStringXY","_ol_coordinate$degreesToStringHDMS","_ol_coordinate$distance","_ol_coordinate$equals","_ol_coordinate$format","_ol_coordinate$getWorldsAway","_ol_coordinate$rotate","_ol_coordinate$scale","_ol_coordinate$squaredDistance","_ol_coordinate$squaredDistanceToSegment","toStringHDMS","_ol_coordinate$toStringXY","_ol_coordinate$wrapX","css","_ol_css$CLASS_COLLAPSED","_ol_css$CLASS_CONTROL","_ol_css$CLASS_HIDDEN","_ol_css$CLASS_SELECTABLE","_ol_css$CLASS_UNSELECTABLE","_ol_css$CLASS_UNSUPPORTED","_ol_css$getFontParameters","dom","_ol_dom$createCanvasContext2D","_ol_dom$outerHeight","_ol_dom$outerWidth","_ol_dom$releaseCanvas","_ol_dom$removeChildren","_ol_dom$removeNode","_ol_dom$replaceChildren","_ol_dom$replaceNode","_ol_easing$easeIn","_ol_easing$easeOut","_ol_easing$inAndOut","_ol_easing$linear","upAndDown","_ol_events_Event$stopPropagation","_ol_events_SnapEvent$SnapEvent","_ol_events_condition$all","_ol_events_condition$altKeyOnly","_ol_events_condition$altShiftKeysOnly","_ol_events_condition$always","click","doubleClick","_ol_events_condition$focus","_ol_events_condition$focusWithTabindex","_ol_events_condition$mouseActionButton","_ol_events_condition$mouseOnly","_ol_events_condition$never","_ol_events_condition$noModifierKeys","penOnly","pointerEvt","_ol_events_condition$platformModifierKey","platformModifierKeyOnly","pointerMove","_ol_events_condition$primaryAction","_ol_events_condition$shiftKeyOnly","_ol_events_condition$singleClick","_ol_events_condition$targetNotEditable","touchOnly","_ol_events$listen","_ol_events$listenOnce","_ol_events$unlistenByKey","expr","cpu","_ol_expr_cpu$buildExpression","_ol_expr_cpu$newEvaluationContext","_ol_expr_expression$AnyType","_ol_expr_expression$BooleanType","_ol_expr_expression$CallExpression","_ol_expr_expression$ColorType","_ol_expr_expression$LiteralExpression","_ol_expr_expression$NoneType","_ol_expr_expression$NumberArrayType","_ol_expr_expression$NumberType","_ol_expr_expression$Ops","_ol_expr_expression$StringType","_ol_expr_expression$includesType","_ol_expr_expression$isType","_ol_expr_expression$newParsingContext","_ol_expr_expression$overlapsType","_ol_expr_expression$parse","_ol_expr_expression$typeName","gpu","_ol_expr_gpu$PALETTE_TEXTURE_ARRAY","_ol_expr_gpu$arrayToGlsl","compilationContext","_ol_expr_gpu$colorToGlsl","_ol_expr_gpu$getStringNumberEquivalent","newCompilationContext","_ol_expr_gpu$numberToGlsl","_ol_expr_gpu$stringToGlsl","_ol_expr_gpu$uniformNameForVariable","_ol_extent$applyTransform","_ol_extent$approximatelyEquals","_ol_extent$boundingExtent","_ol_extent$buffer","_ol_extent$clone","_ol_extent$closestSquaredDistanceXY","_ol_extent$containsCoordinate","_ol_extent$containsExtent","_ol_extent$containsXY","_ol_extent$coordinateRelationship","_ol_extent$createEmpty","_ol_extent$createOrUpdate","_ol_extent$createOrUpdateEmpty","_ol_extent$createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","_ol_extent$createOrUpdateFromFlatCoordinates","createOrUpdateFromRings","_ol_extent$equals","_ol_extent$extend","_ol_extent$extendCoordinate","_ol_extent$extendCoordinates","_ol_extent$extendFlatCoordinates","_ol_extent$extendRings","_ol_extent$extendXY","_ol_extent$forEachCorner","_ol_extent$getArea","_ol_extent$getBottomLeft","_ol_extent$getBottomRight","_ol_extent$getCenter","_ol_extent$getCorner","getEnlargedArea","_ol_extent$getForViewAndSize","_ol_extent$getHeight","_ol_extent$getIntersection","getIntersectionArea","getMargin","_ol_extent$getRotatedViewport","_ol_extent$getTopLeft","_ol_extent$getTopRight","_ol_extent$getWidth","_ol_extent$intersects","_ol_extent$intersectsSegment","_ol_extent$isEmpty","_ol_extent$returnOrUpdate","_ol_extent$scaleFromCenter","_ol_extent$wrapAndSliceX","_ol_extent$wrapX","featureloader","_ol_featureloader$loadFeaturesXhr","setWithCredentials","xhrWithCredentials","_ol_featureloader$xhr","_ol_format_Feature$createGeometry","_ol_format_Feature$createRenderFeature","_ol_format_Feature$transformExtentWithOptions","_ol_format_Feature$transformGeometryWithOptions","GPX","GeoJSON","IGC","KML","getDefaultFillStyle","getDefaultImageStyle","getDefaultStrokeStyle","getDefaultStyle","getDefaultStyleArray","getDefaultTextStyle","_ol_format_KML$readFlatCoordinates","MVT","OSMXML","Polyline","_ol_format_Polyline$decodeDeltas","_ol_format_Polyline$decodeFloats","_ol_format_Polyline$decodeSignedIntegers","_ol_format_Polyline$decodeUnsignedIntegers","_ol_format_Polyline$encodeDeltas","_ol_format_Polyline$encodeFloats","_ol_format_Polyline$encodeSignedIntegers","_ol_format_Polyline$encodeUnsignedInteger","_ol_format_Polyline$encodeUnsignedIntegers","TopoJSON","WFS","writeFilter","WMSGetFeatureInfo","WMTSCapabilities","xlink","_ol_format_xlink$readHref","xsd","_ol_format_xsd$readBoolean","_ol_format_xsd$readBooleanString","_ol_format_xsd$readDateTime","_ol_format_xsd$readDecimal","_ol_format_xsd$readDecimalString","_ol_format_xsd$readNonNegativeIntegerString","_ol_format_xsd$readPositiveInteger","_ol_format_xsd$readString","_ol_format_xsd$writeBooleanTextNode","_ol_format_xsd$writeCDATASection","_ol_format_xsd$writeDateTimeTextNode","_ol_format_xsd$writeDecimalTextNode","_ol_format_xsd$writeNonNegativeIntegerTextNode","_ol_format_xsd$writeStringTextNode","_ol_functions$FALSE","_ol_functions$TRUE","_ol_functions$VOID","_ol_functions$memoizeOne","_ol_functions$toPromise","_ol_geom_Polygon$circular","_ol_geom_Polygon$fromCircle","_ol_geom_Polygon$fromExtent","_ol_geom_Polygon$makeRegular","_ol_geom_SimpleGeometry$getLayoutForStride","_ol_geom_SimpleGeometry$getStrideForLayout","_ol_geom_SimpleGeometry$transformGeom2D","_ol_geom_flat_area$linearRing","_ol_geom_flat_area$linearRings","_ol_geom_flat_area$linearRingss","_ol_geom_flat_center$linearRingss","closest","_ol_geom_flat_closest$arrayMaxSquaredDelta","_ol_geom_flat_closest$assignClosestArrayPoint","_ol_geom_flat_closest$assignClosestMultiArrayPoint","_ol_geom_flat_closest$assignClosestPoint","_ol_geom_flat_closest$maxSquaredDelta","_ol_geom_flat_closest$multiArrayMaxSquaredDelta","_ol_geom_flat_contains$linearRingContainsExtent","_ol_geom_flat_contains$linearRingContainsXY","_ol_geom_flat_contains$linearRingsContainsXY","_ol_geom_flat_contains$linearRingssContainsXY","deflate","_ol_geom_flat_deflate$deflateCoordinate","_ol_geom_flat_deflate$deflateCoordinates","_ol_geom_flat_deflate$deflateCoordinatesArray","_ol_geom_flat_deflate$deflateMultiCoordinatesArray","flip","_ol_geom_flat_flip$flipXY","geodesic","greatCircleArc","geoProjection","cosLat1","sinLat1","cosLat2","sinLat2","cosDeltaLon","sinDeltaLon","D","cosD","sinD","_ol_geom_flat_geodesic$meridian","_ol_geom_flat_geodesic$parallel","inflate","_ol_geom_flat_inflate$inflateCoordinates","_ol_geom_flat_inflate$inflateCoordinatesArray","_ol_geom_flat_inflate$inflateMultiCoordinatesArray","interiorpoint","_ol_geom_flat_interiorpoint$getInteriorPointOfArray","_ol_geom_flat_interiorpoint$getInteriorPointsOfMultiArray","_ol_geom_flat_interpolate$interpolatePoint","_ol_geom_flat_interpolate$lineStringCoordinateAtM","_ol_geom_flat_interpolate$lineStringsCoordinateAtM","intersectsextent","_ol_geom_flat_intersectsextent$intersectsLineString","_ol_geom_flat_intersectsextent$intersectsLineStringArray","_ol_geom_flat_intersectsextent$intersectsLinearRing","_ol_geom_flat_intersectsextent$intersectsLinearRingArray","_ol_geom_flat_intersectsextent$intersectsLinearRingMultiArray","_ol_geom_flat_length$lineStringLength","linearRingLength","perimeter","orient","_ol_geom_flat_orient$inflateEnds","_ol_geom_flat_orient$linearRingIsClockwise","_ol_geom_flat_orient$linearRingsAreOriented","_ol_geom_flat_orient$linearRingssAreOriented","_ol_geom_flat_orient$orientLinearRings","_ol_geom_flat_orient$orientLinearRingsArray","_ol_geom_flat_reverse$coordinates","_ol_geom_flat_segments$forEach","_ol_geom_flat_simplify$douglasPeucker","_ol_geom_flat_simplify$douglasPeuckerArray","douglasPeuckerMultiArray","_ol_geom_flat_simplify$quantize","_ol_geom_flat_simplify$quantizeArray","_ol_geom_flat_simplify$quantizeMultiArray","_ol_geom_flat_simplify$radialDistance","simplifyLineString","highQuality","_ol_geom_flat_simplify$snap","straightchunk","_ol_geom_flat_straightchunk$matchingChunk","textpath","_ol_geom_flat_textpath$drawTextOnPath","topology","lineStringIsClosed","lastCoord","_ol_geom_flat_transform$rotate","_ol_geom_flat_transform$scale","_ol_geom_flat_transform$transform2D","_ol_geom_flat_transform$translate","has","_ol_has$CREATE_IMAGE_BITMAP","_ol_has$DEVICE_PIXEL_RATIO","_ol_has$FIREFOX","_ol_has$IMAGE_DECODE","_ol_has$MAC","_ol_has$PASSIVE_EVENT_LISTENERS","_ol_has$SAFARI","_ol_has$SAFARI_BUG_237906","_ol_has$WEBKIT","_ol_has$WORKER_OFFSCREEN_CANVAS","DblClickDragZoom","DragAndDrop","_ol_interaction_DragAndDrop$DragAndDropEvent","_ol_interaction_DragBox$DragBoxEvent","DragRotateAndZoom","Draw","_ol_interaction_Draw$DrawEvent","createBox","boxCoordinates","createRegularPolygon","internalAngle","Extent","_ol_interaction_Extent$ExtentEvent","_ol_interaction_Interaction$pan","_ol_interaction_Interaction$zoomByDelta","Modify","_ol_interaction_Modify$ModifyEvent","Pointer","_ol_interaction_Pointer$centroid","_ol_interaction_Select$SelectEvent","Snap","Translate","_ol_interaction_Translate$TranslateEvent","_ol_interaction_defaults$defaults","Base","BaseImage","BaseTile","Graticule","Group","_ol_layer_Group$GroupEvent","Heatmap","_ol_layer_Layer$inView","Vector","VectorImage","loadingstrategy","_ol_loadingstrategy$all","math","_ol_math$ceil","_ol_math$clamp","_ol_math$floor","_ol_math$lerp","_ol_math$modulo","_ol_math$round","_ol_math$solveLinearSystem","_ol_math$squaredDistance","_ol_math$squaredSegmentDistance","_ol_math$toDegrees","_ol_math$toFixed","_ol_math$toRadians","net","_ol_net$ClientError","_ol_net$ResponseError","_ol_net$getJSON","_ol_net$jsonp","overrideXHR","_ol_net$resolveUrl","restoreXHR","_ol_obj$clear","_ol_obj$isEmpty","Units","_ol_proj_Units$METERS_PER_UNIT","fromCode","_ol_proj$addCommon","_ol_proj$addCoordinateTransforms","_ol_proj$addEquivalentProjections","_ol_proj$addEquivalentTransforms","_ol_proj$addProjection","_ol_proj$addProjections","clearAllProjections","clearProj","clearTransformFuncs","clearUserProjection","_ol_proj$cloneTransform","_ol_proj$createProjection","_ol_proj$createSafeCoordinateTransform","_ol_proj$createTransformFromCoordinateTransform","_ol_proj$disableCoordinateWarning","epsg3857","_ol_proj_epsg3857$EXTENT","_ol_proj_epsg3857$HALF_SIZE","_ol_proj_epsg3857$MAX_SAFE_Y","_ol_proj_epsg3857$PROJECTIONS","_ol_proj_epsg3857$RADIUS","_ol_proj_epsg3857$WORLD_EXTENT","_ol_proj_epsg3857$fromEPSG4326","_ol_proj_epsg3857$toEPSG4326","epsg4326","_ol_proj_epsg4326$EXTENT","_ol_proj_epsg4326$METERS_PER_UNIT","_ol_proj_epsg4326$PROJECTIONS","_ol_proj_epsg4326$RADIUS","_ol_proj$equivalent","fromLonLat","_ol_proj$fromUserCoordinate","_ol_proj$fromUserExtent","_ol_proj$fromUserResolution","_ol_proj$get","_ol_proj$getPointResolution","_ol_proj$getTransform","_ol_proj$getTransformFromProjections","_ol_proj$getUserProjection","_ol_proj$identityTransform","epsgLookupMapTiler","results","defaultTransform","fromEPSGCode","epsgCode","getEPSGLookup","isRegistered","_ol_proj_proj4$register","setEPSGLookup","_ol_proj_projections$add","_ol_proj_projections$clear","_ol_proj_projections$get","_ol_proj$setUserProjection","toLonLat","lonLat","_ol_proj$toUserCoordinate","_ol_proj$toUserExtent","_ol_proj$toUserResolution","_ol_proj$transform","_ol_proj$transformExtent","transformWithProjections","_ol_proj_transforms$add","_ol_proj_transforms$clear","_ol_proj_transforms$get","useGeographic","toFeature","_ol_render_Feature$toGeometry","BuilderGroup","_ol_render_canvas_ExecutorGroup$getPixelIndexArray","Immediate","_ol_render_canvas_Instruction$beginPathInstruction","_ol_render_canvas_Instruction$closePathInstruction","_ol_render_canvas_Instruction$fillInstruction","_ol_render_canvas_Instruction$strokeInstruction","_ol_render_canvas_TextBuilder$TEXT_ALIGN","_ol_render_canvas$checkedFonts","_ol_render_canvas$defaultFillStyle","_ol_render_canvas$defaultFont","_ol_render_canvas$defaultLineCap","_ol_render_canvas$defaultLineDash","defaultLineDashOffset","_ol_render_canvas$defaultLineJoin","defaultLineWidth","_ol_render_canvas$defaultMiterLimit","_ol_render_canvas$defaultPadding","_ol_render_canvas$defaultStrokeStyle","_ol_render_canvas$defaultTextAlign","_ol_render_canvas$defaultTextBaseline","_ol_render_canvas$drawImageOrLabel","_ol_render_canvas$getTextDimensions","hitdetect","_ol_render_canvas_hitdetect$HIT_DETECT_RESOLUTION","_ol_render_canvas_hitdetect$createHitDetectionImageData","_ol_render_canvas_hitdetect$hitDetect","_ol_render_canvas$measureAndCacheTextWidth","_ol_render_canvas$measureTextHeight","_ol_render_canvas$measureTextWidth","_ol_render_canvas$registerFont","rotateAtOffset","_ol_render_canvas_style$buildRuleSet","_ol_render_canvas_style$buildStyle","_ol_render_canvas_style$flatStylesToStyleFunction","_ol_render_canvas_style$rulesToStyleFunction","_ol_render_canvas$textHeights","getRenderPixel","_ol_render$getVectorContext","toContext","scaleTransform","Composite","_ol_renderer_canvas_Layer$canvasPool","VectorImageLayer","vector","_ol_renderer_vector$defaultOrder","_ol_renderer_vector$getSquaredTolerance","_ol_renderer_vector$getTolerance","_ol_renderer_vector$renderFeature","_ol_reproj$calculateSourceExtentResolution","_ol_reproj$calculateSourceResolution","_ol_reproj$canvasPool","common","_ol_reproj_common$ERROR_THRESHOLD","_ol_reproj$render","_ol_resolution$fromResolutionLike","resolutionconstraint","_ol_resolutionconstraint$createMinMaxResolution","_ol_resolutionconstraint$createSnapToPower","_ol_resolutionconstraint$createSnapToResolutions","rotationconstraint","_ol_rotationconstraint$createSnapToN","_ol_rotationconstraint$createSnapToZero","_ol_rotationconstraint$disable","_ol_rotationconstraint$none","_ol_size$hasArea","_ol_size$scale","_ol_size$toSize","BingMaps","_ol_source_BingMaps$quadKey","Cluster","_ol_source_Image$ImageSourceEvent","_ol_source_Image$defaultImageLoadFunction","_ol_source_Image$getRequestExtent","ImageArcGISRest","ImageStatic","ImageWMS","OGCMapTile","OSM","_ol_source_OSM$ATTRIBUTION","Raster","_ol_source_Raster$Processor","_ol_source_Raster$RasterSourceEvent","_ol_source_Raster$newImageData","StadiaMaps","_ol_source_Tile$TileSourceEvent","TileArcGISRest","TileDebug","TileJSON","TileWMS","UTFGrid","_ol_source_UTFGrid$CustomTile","_ol_source_Vector$VectorSourceEvent","WMTS","optionsFromCapabilities","wmtsCap","tileMatrixSets","findIndex","supportedCRS","el","matrixSetObj","projConfig","switchXY","selectedMatrixLimit","tileMatrixValue","tileSpanX","tileSpanY","matrixSetExtent","wgs84BoundingBox","wgs84ProjectionExtent","wgs84MatrixSetExtent","gets","encodings","arcgisRest","_ol_source_arcgisRest$createLoader","_ol_source_arcgisRest$getRequestUrl","_ol_source_common$DECIMALS","DEFAULT_WMS_VERSION","ogcTileUtil","_ol_source_ogcTileUtil$getMapTileUrlTemplate","_ol_source_ogcTileUtil$getTileSetInfo","_ol_source_ogcTileUtil$getVectorTileUrlTemplate","sourcesFromTileGrid","sourceCache","tileGridExtent","wantedSources","static","_ol_source_static$createLoader","wms","_ol_source_wms$DEFAULT_VERSION","_ol_source_wms$createLoader","_ol_source_wms$getFeatureInfoUrl","_ol_source_wms$getImageSrc","_ol_source_wms$getLegendUrl","_ol_source_wms$getRequestParams","_ol_source_wms$getRequestUrl","sphere","_ol_sphere$DEFAULT_RADIUS","_ol_sphere$getDistance","_ol_sphere$offset","_ol_string$compareVersions","_ol_string$padNumber","structs","LinkedList","_ol_structs_PriorityQueue$DROP","_ol_style_IconImage$get","_ol_style_IconImageCache$shared","_ol_style_Style$createDefaultStyle","_ol_style_Style$createEditingStyle","_ol_style_Style$toFunction","_ol_style_flat$createDefaultStyle","tilecoord","_ol_tilecoord$createOrUpdate","_ol_tilecoord$fromKey","getCacheKeyForTileKey","_ol_tilecoord$getKey","_ol_tilecoord$getKeyZXY","_ol_tilecoord$hash","_ol_tilecoord$withinExtentAndZ","_ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet","_ol_tilegrid_common$DEFAULT_MAX_ZOOM","_ol_tilegrid_common$DEFAULT_TILE_SIZE","_ol_tilegrid$createForExtent","_ol_tilegrid$createForProjection","_ol_tilegrid$createXYZ","_ol_tilegrid$extentFromProjection","_ol_tilegrid$getForProjection","_ol_tilegrid$wrapX","tileurlfunction","_ol_tileurlfunction$createFromTemplate","_ol_tileurlfunction$createFromTemplates","_ol_tileurlfunction$createFromTileUrlFunctions","_ol_tileurlfunction$expandUrl","_ol_tileurlfunction$nullTileUrlFunction","_ol_transform$apply","_ol_transform$compose","composeCssTransform","_ol_transform$create","_ol_transform$determinant","invert","_ol_transform$makeInverse","_ol_transform$makeScale","_ol_transform$multiply","_ol_transform$reset","_ol_transform$rotate","_ol_transform$scale","_ol_transform$set","_ol_transform$setFromArray","_ol_transform$toString","_ol_transform$translate","_ol_uri$appendParams","util","_ol_util$abstract","_ol_util$getUid","vec","_ol_vec_mat4$create","_ol_vec_mat4$fromTransform","_ol_xml$OBJECT_PROPERTY_NODE_FACTORY","_ol_xml$XML_SCHEMA_INSTANCE_URI","_ol_xml$createElementNS","_ol_xml$getAllTextContent","_ol_xml$getAllTextContent_","_ol_xml$getAttributeNS","_ol_xml$getDocument","_ol_xml$getXMLSerializer","_ol_xml$isDocument","_ol_xml$makeArrayExtender","_ol_xml$makeArrayPusher","_ol_xml$makeArraySerializer","_ol_xml$makeChildAppender","_ol_xml$makeObjectPropertyPusher","_ol_xml$makeObjectPropertySetter","_ol_xml$makeReplacer","_ol_xml$makeSequence","_ol_xml$makeSimpleNodeFactory","_ol_xml$makeStructureNS","_ol_xml$parse","_ol_xml$parseNode","_ol_xml$pushParseAndPop","_ol_xml$pushSerializeAndPop","registerDocument","registerXMLSerializer","xmlSerializer","_ol_xml$serialize"],"mappings":"+BAiEO,SAASA,EAAgBC,GAC9BA,EAAID,iBACN,CASA,IAAAE,EA9DA,MAIE,WAAAC,CAAYC,GAIVC,KAAKC,mBAKLD,KAAKE,iBAOLF,KAAKD,KAAOA,EAOZC,KAAKG,OAAS,IACf,CAOD,cAAAC,GACEJ,KAAKE,kBAAmB,CACzB,CAMD,eAAAP,GACEK,KAAKC,oBAAqB,CAC3B,GCpDYI,EAMG,iBCsBlB,IAAAC,EA3BA,MACE,WAAAR,GAMEE,KAAKO,UAAW,CACjB,CAKD,OAAAC,GACOR,KAAKO,WACRP,KAAKO,UAAW,EAChBP,KAAKS,kBAER,CAMD,eAAAA,GAAoB,GCnBf,SAASC,EAAaC,EAAUC,EAAQC,GAC7C,IAAIC,EAAKC,EACTF,EAAaA,GAAcG,EAC3B,IAAIC,EAAM,EACNC,EAAOP,EAASQ,OAChBC,GAAQ,EAEZ,KAAOH,EAAMC,GAGXJ,EAAMG,GAAQC,EAAOD,GAAQ,GAC7BF,GAAOF,EAAWF,EAASG,GAAMF,GAE7BG,EAAM,EAERE,EAAMH,EAAM,GAGZI,EAAOJ,EACPM,GAASL,GAKb,OAAOK,EAAQH,GAAOA,CACxB,CASO,SAASD,EAAUK,EAAGC,GAC3B,OAAOD,EAAIC,EAAI,EAAID,EAAIC,GAAK,EAAI,CAClC,CASO,SAASC,EAAWF,EAAGC,GAC5B,OAAOD,EAAIC,EAAI,EAAID,EAAIC,GAAK,EAAI,CAClC,CAyBO,SAASE,EAAkBC,EAAKtB,EAAQuB,GAC7C,GAAID,EAAI,IAAMtB,EACZ,OAAO,EAGT,MAAMwB,EAAIF,EAAIN,OACd,GAAIhB,GAAUsB,EAAIE,EAAI,GACpB,OAAOA,EAAI,EAGb,GAAyB,mBAAdD,EAA0B,CACnC,IAAK,IAAIE,EAAI,EAAGA,EAAID,IAAKC,EAAG,CAC1B,MAAMC,EAAYJ,EAAIG,GACtB,GAAIC,IAAc1B,EAChB,OAAOyB,EAET,GAAIC,EAAY1B,EACd,OAAIuB,EAAUvB,EAAQsB,EAAIG,EAAI,GAAIC,GAAa,EACtCD,EAAI,EAENA,CAEV,CACD,OAAOD,EAAI,CACZ,CAED,GAAID,EAAY,EAAG,CACjB,IAAK,IAAIE,EAAI,EAAGA,EAAID,IAAKC,EACvB,GAAIH,EAAIG,GAAKzB,EACX,OAAOyB,EAAI,EAGf,OAAOD,EAAI,CACZ,CAED,GAAID,EAAY,EAAG,CACjB,IAAK,IAAIE,EAAI,EAAGA,EAAID,IAAKC,EACvB,GAAIH,EAAIG,IAAMzB,EACZ,OAAOyB,EAGX,OAAOD,EAAI,CACZ,CAED,IAAK,IAAIC,EAAI,EAAGA,EAAID,IAAKC,EAAG,CAC1B,GAAIH,EAAIG,IAAMzB,EACZ,OAAOyB,EAET,GAAIH,EAAIG,GAAKzB,EACX,OAAIsB,EAAIG,EAAI,GAAKzB,EAASA,EAASsB,EAAIG,GAC9BA,EAAI,EAENA,CAEV,CACD,OAAOD,EAAI,CACb,CAOO,SAASG,EAAgBL,EAAKM,EAAOC,GAC1C,KAAOD,EAAQC,GAAK,CAClB,MAAMC,EAAMR,EAAIM,GAChBN,EAAIM,GAASN,EAAIO,GACjBP,EAAIO,GAAOC,IACTF,IACAC,CACH,CACH,CAOO,SAASE,EAAOT,EAAKU,GAC1B,MAAMC,EAAYC,MAAMC,QAAQH,GAAQA,EAAO,CAACA,GAC1ChB,EAASiB,EAAUjB,OACzB,IAAK,IAAIS,EAAI,EAAGA,EAAIT,EAAQS,IAC1BH,EAAIA,EAAIN,QAAUiB,EAAUR,EAEhC,CAsBO,SAASW,EAAOC,EAAMC,GAC3B,MAAMC,EAAOF,EAAKrB,OAClB,GAAIuB,IAASD,EAAKtB,OAChB,OAAO,EAET,IAAK,IAAIS,EAAI,EAAGA,EAAIc,EAAMd,IACxB,GAAIY,EAAKZ,KAAOa,EAAKb,GACnB,OAAO,EAGX,OAAO,CACT,CA8BO,SAASe,EAASlB,EAAKmB,EAAMC,GAClC,MAAMC,EAAUF,GAAQ5B,EACxB,OAAOS,EAAIsB,OAAM,SAAUC,EAAYC,GACrC,GAAc,IAAVA,EACF,OAAO,EAET,MAAMC,EAAMJ,EAAQrB,EAAIwB,EAAQ,GAAID,GACpC,QAASE,EAAM,GAAML,GAAkB,IAARK,EACnC,GACA,CCvOO,SAASC,IACd,OAAO,CACT,CAMO,SAASC,IACd,OAAO,CACT,CAOO,SAASC,IAAS,CAWlB,SAASC,EAAWC,GACzB,IAGIC,EAGAC,EAEAC,EARAC,GAAS,EAUb,OAAO,WACL,MAAMC,EAAWvB,MAAMwB,UAAUC,MAAMC,KAAKC,WAO5C,OANKL,GAAU3D,OAAS0D,GAAaO,EAAYL,EAAUH,KACzDE,GAAS,EACTD,EAAW1D,KACXyD,EAAWG,EACXJ,EAAaD,EAAGW,MAAMlE,KAAMgE,YAEvBR,CACX,CACA,CAOO,SAASW,EAAUC,GAaxB,OAZA,WACE,IAAIC,EACJ,IACEA,EAAQD,GACT,CAAC,MAAOE,GACP,OAAOC,QAAQC,OAAOF,EACvB,CACD,OAAID,aAAiBE,QACZF,EAEFE,QAAQE,QAAQJ,EACxB,CACMK,EACT,CCxEO,SAASC,EAAMC,GACpB,IAAK,MAAMC,KAAYD,SACdA,EAAOC,EAElB,CAOO,SAASC,EAAQF,GACtB,IAAIC,EACJ,IAAKA,KAAYD,EACf,OAAO,EAET,OAAQC,CACV,CCsKA,IAAAE,EApKA,cAAqBC,EAInB,WAAAlF,CAAYK,GACV8E,QAMAjF,KAAKkF,aAAe/E,EAMpBH,KAAKmF,iBAAmB,KAMxBnF,KAAKoF,aAAe,KAMpBpF,KAAKqF,WAAa,IACnB,CAMD,gBAAAC,CAAiBvF,EAAMwF,GACrB,IAAKxF,IAASwF,EACZ,OAEF,MAAMC,EAAYxF,KAAKqF,aAAerF,KAAKqF,WAAa,CAAA,GAClDI,EAAmBD,EAAUzF,KAAUyF,EAAUzF,GAAQ,IAC1D0F,EAAiBC,SAASH,IAC7BE,EAAiBE,KAAKJ,EAEzB,CAYD,aAAAK,CAAcC,GACZ,MAAMC,EAA4B,iBAAVD,EAClB9F,EAAO+F,EAAWD,EAAQA,EAAM9F,KAChCyF,EAAYxF,KAAKqF,YAAcrF,KAAKqF,WAAWtF,GACrD,IAAKyF,EACH,OAGF,MAAM5F,EAAMkG,EAAW,IAAIC,EAAMF,GAA+B,EAC3DjG,EAAIO,SACPP,EAAIO,OAASH,KAAKkF,cAAgBlF,MAEpC,MAAMgG,EAAchG,KAAKoF,eAAiBpF,KAAKoF,aAAe,CAAA,GACxDa,EACJjG,KAAKmF,mBAAqBnF,KAAKmF,iBAAmB,CAAE,GAMtD,IAAIe,EALEnG,KAAQiG,IACZA,EAAYjG,GAAQ,EACpBkG,EAAgBlG,GAAQ,KAExBiG,EAAYjG,GAEd,IAAK,IAAI6B,EAAI,EAAGuE,EAAKX,EAAUrE,OAAQS,EAAIuE,IAAMvE,EAU/C,GAREsE,EADE,gBAAiBV,EAAU5D,GAE3B4D,EAAU5D,GACVwE,YAAYxG,GAGZ4F,EAAU5D,GACVmC,KAAK/D,KAAMJ,IAEG,IAAdsG,GAAuBtG,EAAIK,mBAAoB,CACjDiG,GAAY,EACZ,KACD,CAEH,GAA4B,KAAtBF,EAAYjG,GAAa,CAC7B,IAAIsG,EAAKJ,EAAgBlG,GAEzB,WADOkG,EAAgBlG,GAChBsG,KACLrG,KAAKsG,oBAAoBvG,EAAMsD,UAE1B2C,EAAYjG,EACpB,CACD,OAAOmG,CACR,CAKD,eAAAzF,GACET,KAAKqF,YAAcV,EAAM3E,KAAKqF,WAC/B,CASD,YAAAkB,CAAaxG,GACX,OAAQC,KAAKqF,YAAcrF,KAAKqF,WAAWtF,SAAUyG,CACtD,CAOD,WAAAC,CAAY1G,GACV,QAAKC,KAAKqF,aAGHtF,EACHA,KAAQC,KAAKqF,WACbqB,OAAOC,KAAK3G,KAAKqF,YAAYlE,OAAS,EAC3C,CAMD,mBAAAmF,CAAoBvG,EAAMwF,GACxB,IAAKvF,KAAKqF,WACR,OAEF,MAAMG,EAAYxF,KAAKqF,WAAWtF,GAClC,IAAKyF,EACH,OAEF,MAAMvC,EAAQuC,EAAUoB,QAAQrB,IACjB,IAAXtC,IACEjD,KAAKmF,kBAAoBpF,KAAQC,KAAKmF,kBAExCK,EAAUvC,GAASI,IACjBrD,KAAKmF,iBAAiBpF,KAExByF,EAAUqB,OAAO5D,EAAO,GACC,IAArBuC,EAAUrE,eACLnB,KAAKqF,WAAWtF,IAI9B,GCpLY+G,EAML,SANKA,EAaN,QAbMA,EAiBA,cAjBAA,EAkBN,QAlBMA,EAmBH,WAnBGA,EAoBF,YApBEA,EAqBH,WArBGA,EAsBP,OAtBOA,EAwBJ,UAxBIA,EAyBH,WAzBGA,EA0BP,OA1BOA,EA4BF,YA5BEA,EA6BN,QCSF,SAASC,EAAO5G,EAAQJ,EAAMwF,EAAUyB,EAASC,GAItD,GAHID,GAAWA,IAAY7G,IACzBoF,EAAWA,EAAS2B,KAAKF,IAEvBC,EAAM,CACR,MAAME,EAAmB5B,EACzBA,EAAW,WACTpF,EAAOmG,oBAAoBvG,EAAMwF,GACjC4B,EAAiBjD,MAAMlE,KAAMgE,UACnC,CACG,CACD,MAAMoD,EAAY,CAChBjH,OAAQA,EACRJ,KAAMA,EACNwF,SAAUA,GAGZ,OADApF,EAAOmF,iBAAiBvF,EAAMwF,GACvB6B,CACT,CAsBO,SAASC,EAAWlH,EAAQJ,EAAMwF,EAAUyB,GACjD,OAAOD,EAAO5G,EAAQJ,EAAMwF,EAAUyB,GAAS,EACjD,CAWO,SAASM,EAAcC,GACxBA,GAAOA,EAAIpH,SACboH,EAAIpH,OAAOmG,oBAAoBiB,EAAIxH,KAAMwH,EAAIhC,UAC7CZ,EAAM4C,GAEV,CChEA,MAAMC,UAAmBC,EACvB,WAAA3H,GACEmF,QAEAjF,KAAK0H,GAED1H,KACR,WAEIA,KAAKiH,KAEDjH,KACR,aAEIA,KAAK2H,GAAiD3H,KAAe,WAMrEA,KAAK4H,UAAY,CAClB,CAMD,OAAAC,KACI7H,KAAK4H,UACP5H,KAAK4F,cAAckB,EACpB,CAQD,WAAAgB,GACE,OAAO9H,KAAK4H,SACb,CAQD,UAAAG,CAAWhI,EAAMwF,GACf,GAAIlD,MAAMC,QAAQvC,GAAO,CACvB,MAAMiI,EAAMjI,EAAKoB,OACXwF,EAAO,IAAItE,MAAM2F,GACvB,IAAK,IAAIpG,EAAI,EAAGA,EAAIoG,IAAOpG,EACzB+E,EAAK/E,GAAKmF,EAAO/G,KAAMD,EAAK6B,GAAI2D,GAElC,OAAOoB,CACR,CACD,OAAOI,EAAO/G,OAAoCuF,EACnD,CAQD,YAAA0C,CAAalI,EAAMwF,GACjB,IAAIgC,EACJ,GAAIlF,MAAMC,QAAQvC,GAAO,CACvB,MAAMiI,EAAMjI,EAAKoB,OACjBoG,EAAM,IAAIlF,MAAM2F,GAChB,IAAK,IAAIpG,EAAI,EAAGA,EAAIoG,IAAOpG,EACzB2F,EAAI3F,GAAKyF,EAAWrH,KAAMD,EAAK6B,GAAI2D,EAE3C,MACMgC,EAAMF,EAAWrH,OAAoCuF,GAGvD,OADsB,EAAW2C,OAASX,EACnCA,CACR,CAQD,UAAAY,CAAWpI,EAAMwF,GACf,MAAMgC,EAA4B,EAAWW,OAC7C,GAAIX,EACFa,EAAQb,QACH,GAAIlF,MAAMC,QAAQvC,GACvB,IAAK,IAAI6B,EAAI,EAAGuE,EAAKpG,EAAKoB,OAAQS,EAAIuE,IAAMvE,EAC1C5B,KAAKsG,oBAAoBvG,EAAK6B,GAAI2D,QAGpCvF,KAAKsG,oBAAoBvG,EAAMwF,EAElC,EA0CI,SAAS6C,EAAQb,GACtB,GAAIlF,MAAMC,QAAQiF,GAChB,IAAK,IAAI3F,EAAI,EAAGuE,EAAKoB,EAAIpG,OAAQS,EAAIuE,IAAMvE,EACzC0F,EAAcC,EAAI3F,SAGpB0F,EAAa,EAEjB,CArCAE,EAAW3D,UAAU6D,GAYrBF,EAAW3D,UAAUoD,KASrBO,EAAW3D,UAAU8D,GAkBrB,IAAAU,EAAeb,ECvLR,SAASc,IACd,MAAM,IAAIC,MAAM,iCAClB,CAOA,IAAIC,EAAc,EAWX,SAASC,EAAOC,GACrB,OAAOA,EAAIC,SAAWD,EAAIC,OAASC,SAASJ,GAC9C,CChBO,MAAMK,UAAoB9C,EAM/B,WAAAjG,CAAYC,EAAMwH,EAAKuB,GACrB7D,MAAMlF,GAONC,KAAKuH,IAAMA,EAQXvH,KAAK8I,SAAWA,CACjB,EA4OH,IAAAC,EAvLA,cAAyBvB,EAIvB,WAAA1H,CAAYkJ,GACV/D,QAKAjF,KAAK0H,GAKL1H,KAAKiH,KAKLjH,KAAK2H,GAMLc,EAAOzI,MAMPA,KAAKiJ,QAAU,UAEAzC,IAAXwC,GACFhJ,KAAKkJ,cAAcF,EAEtB,CAQD,GAAAG,CAAI5B,GACF,IAAIlD,EAIJ,OAHIrE,KAAKiJ,SAAWjJ,KAAKiJ,QAAQG,eAAe7B,KAC9ClD,EAAQrE,KAAKiJ,QAAQ1B,IAEhBlD,CACR,CAOD,OAAAgF,GACE,OAAQrJ,KAAKiJ,SAAWvC,OAAOC,KAAK3G,KAAKiJ,UAAa,EACvD,CAOD,aAAAK,GACE,OAAQtJ,KAAKiJ,SAAWvC,OAAO6C,OAAO,CAAA,EAAIvJ,KAAKiJ,UAAa,EAC7D,CAMD,qBAAAO,GACE,OAAOxJ,KAAKiJ,OACb,CAKD,aAAAQ,GACE,QAASzJ,KAAKiJ,OACf,CAMD,MAAAS,CAAOnC,EAAKuB,GACV,IAAIa,EACJA,EAAY,UAAUpC,IAClBvH,KAAKyG,YAAYkD,IACnB3J,KAAK4F,cAAc,IAAIiD,EAAYc,EAAWpC,EAAKuB,IAErDa,EAAYtJ,EACRL,KAAKyG,YAAYkD,IACnB3J,KAAK4F,cAAc,IAAIiD,EAAYc,EAAWpC,EAAKuB,GAEtD,CAMD,iBAAAc,CAAkBrC,EAAKhC,GACrBvF,KAAKsF,iBAAiB,UAAUiC,IAAOhC,EACxC,CAMD,oBAAAsE,CAAqBtC,EAAKhC,GACxBvF,KAAKsG,oBAAoB,UAAUiB,IAAOhC,EAC3C,CASD,GAAAuE,CAAIvC,EAAKlD,EAAO0F,GACd,MAAMf,EAAShJ,KAAKiJ,UAAYjJ,KAAKiJ,QAAU,CAAA,GAC/C,GAAIc,EACFf,EAAOzB,GAAOlD,MACT,CACL,MAAMyE,EAAWE,EAAOzB,GACxByB,EAAOzB,GAAOlD,EACVyE,IAAazE,GACfrE,KAAK0J,OAAOnC,EAAKuB,EAEpB,CACF,CASD,aAAAI,CAAcF,EAAQe,GACpB,IAAK,MAAMxC,KAAOyB,EAChBhJ,KAAK8J,IAAIvC,EAAKyB,EAAOzB,GAAMwC,EAE9B,CAOD,eAAAC,CAAgBC,GACTA,EAAOhB,SAGZvC,OAAO6C,OAAOvJ,KAAKiJ,UAAYjJ,KAAKiJ,QAAU,IAAKgB,EAAOhB,QAC3D,CAQD,KAAAiB,CAAM3C,EAAKwC,GACT,GAAI/J,KAAKiJ,SAAW1B,KAAOvH,KAAKiJ,QAAS,CACvC,MAAMH,EAAW9I,KAAKiJ,QAAQ1B,UACvBvH,KAAKiJ,QAAQ1B,GAChBzC,EAAQ9E,KAAKiJ,WACfjJ,KAAKiJ,QAAU,MAEZc,GACH/J,KAAK0J,OAAOnC,EAAKuB,EAEpB,CACF,GCtQYqB,EAMR,MANQA,EAYL,SCRV,MAAMC,EACI,SASH,MAAMC,UAAwBtE,EAMnC,WAAAjG,CAAYC,EAAMuK,EAASrH,GACzBgC,MAAMlF,GAONC,KAAKsK,QAAUA,EAOftK,KAAKiD,MAAQA,CACd,EAgCH,MAAMsH,UAAmBC,EAKvB,WAAA1K,CAAY2K,EAAOC,GAgCjB,GA/BAzF,QAKAjF,KAAK0H,GAKL1H,KAAKiH,KAKLjH,KAAK2H,GAEL+C,EAAUA,GAAW,GAMrB1K,KAAK2K,UAAYD,EAAQE,OAMzB5K,KAAK6K,OAASJ,GAAgB,GAE1BzK,KAAK2K,QACP,IAAK,IAAI/I,EAAI,EAAGuE,EAAKnG,KAAK6K,OAAO1J,OAAQS,EAAIuE,IAAMvE,EACjD5B,KAAK8K,cAAc9K,KAAK6K,OAAOjJ,GAAIA,GAIvC5B,KAAK+K,eACN,CAMD,KAAApG,GACE,KAAO3E,KAAKgL,YAAc,GACxBhL,KAAKiL,KAER,CASD,MAAA/I,CAAOT,GACL,IAAK,IAAIG,EAAI,EAAGuE,EAAK1E,EAAIN,OAAQS,EAAIuE,IAAMvE,EACzC5B,KAAK2F,KAAKlE,EAAIG,IAEhB,OAAO5B,IACR,CASD,OAAAkL,CAAQC,GACN,MAAMV,EAAQzK,KAAK6K,OACnB,IAAK,IAAIjJ,EAAI,EAAGuE,EAAKsE,EAAMtJ,OAAQS,EAAIuE,IAAMvE,EAC3CuJ,EAAEV,EAAM7I,GAAIA,EAAG6I,EAElB,CAUD,QAAAW,GACE,OAAOpL,KAAK6K,MACb,CAQD,IAAAQ,CAAKpI,GACH,OAAOjD,KAAK6K,OAAO5H,EACpB,CAQD,SAAA+H,GACE,OAAOhL,KAAKmJ,IAAIiB,EACjB,CAQD,QAAAkB,CAASrI,EAAOsI,GACd,GAAItI,EAAQ,GAAKA,EAAQjD,KAAKgL,YAC5B,MAAM,IAAIzC,MAAM,wBAA0BtF,GAExCjD,KAAK2K,SACP3K,KAAK8K,cAAcS,GAErBvL,KAAK6K,OAAOhE,OAAO5D,EAAO,EAAGsI,GAC7BvL,KAAK+K,gBACL/K,KAAK4F,cACH,IAAIyE,EAAgBF,EAAyBoB,EAAMtI,GAEtD,CAQD,GAAAgI,GACE,OAAOjL,KAAKwL,SAASxL,KAAKgL,YAAc,EACzC,CAQD,IAAArF,CAAK4F,GACCvL,KAAK2K,SACP3K,KAAK8K,cAAcS,GAErB,MAAM5J,EAAI3B,KAAKgL,YAEf,OADAhL,KAAKsL,SAAS3J,EAAG4J,GACVvL,KAAKgL,WACb,CAQD,MAAAS,CAAOF,GACL,MAAM9J,EAAMzB,KAAK6K,OACjB,IAAK,IAAIjJ,EAAI,EAAGuE,EAAK1E,EAAIN,OAAQS,EAAIuE,IAAMvE,EACzC,GAAIH,EAAIG,KAAO2J,EACb,OAAOvL,KAAKwL,SAAS5J,EAI1B,CASD,QAAA4J,CAASvI,GACP,GAAIA,EAAQ,GAAKA,GAASjD,KAAKgL,YAC7B,OAEF,MAAMU,EAAO1L,KAAK6K,OAAO5H,GAQzB,OAPAjD,KAAK6K,OAAOhE,OAAO5D,EAAO,GAC1BjD,KAAK+K,gBACL/K,KAAK4F,cACT,IACYyE,EAAgBF,EAA4BuB,EAAMzI,IAGnDyI,CACR,CAQD,KAAAC,CAAM1I,EAAOsI,GAEX,GAAItI,GADMjD,KAAKgL,YAGb,YADAhL,KAAKsL,SAASrI,EAAOsI,GAGvB,GAAItI,EAAQ,EACV,MAAM,IAAIsF,MAAM,wBAA0BtF,GAExCjD,KAAK2K,SACP3K,KAAK8K,cAAcS,EAAMtI,GAE3B,MAAMyI,EAAO1L,KAAK6K,OAAO5H,GACzBjD,KAAK6K,OAAO5H,GAASsI,EACrBvL,KAAK4F,cACT,IACYyE,EAAgBF,EAA4BuB,EAAMzI,IAG1DjD,KAAK4F,cACT,IACYyE,EAAgBF,EAAyBoB,EAAMtI,GAGxD,CAKD,aAAA8H,GACE/K,KAAK8J,IAAIM,EAAiBpK,KAAK6K,OAAO1J,OACvC,CAOD,aAAA2J,CAAcS,EAAMK,GAClB,IAAK,IAAIhK,EAAI,EAAGuE,EAAKnG,KAAK6K,OAAO1J,OAAQS,EAAIuE,IAAMvE,EACjD,GAAI5B,KAAK6K,OAAOjJ,KAAO2J,GAAQ3J,IAAMgK,EACnC,MAAM,IAAIrD,MAAM,8CAGrB,EC7TY,IAAAsD,EACP,EADOA,EAEJ,EAFIA,EAGL,EAHKA,EAQN,EARMA,EASN,ECNF,SAASC,GAAOC,GACrB,OAAOC,KAAKC,IAAIF,EAAG,EACrB,CAQO,SAASG,GAAQH,GACtB,OAAO,EAAID,GAAO,EAAIC,EACxB,CAQO,SAASI,GAASJ,GACvB,OAAO,EAAIA,EAAIA,EAAI,EAAIA,EAAIA,EAAIA,CACjC,CAQO,SAASK,GAAOL,GACrB,OAAOA,CACT,CCoRA,IAAAM,GAlPA,cAAmB5E,EAMjB,WAAA3H,CAAYwM,EAAWC,EAAO7B,GAC5BzF,QAEAyF,EAAUA,GAAoB,GAK9B1K,KAAKsM,UAAYA,EAMjBtM,KAAKuM,MAAQA,EAQbvM,KAAKwM,YAAc,KAQnBxM,KAAKuH,IAAM,GAMXvH,KAAKyM,iBACoBjG,IAAvBkE,EAAQgC,WAA2B,IAAMhC,EAAQgC,WAOnD1M,KAAK2M,kBAAoB,GAKzB3M,KAAK4M,cAAgBlC,EAAQkC,WAC9B,CAKD,OAAA/E,GACE7H,KAAK4F,cAAckB,EACpB,CAKD,OAAA+F,GACM7M,KAAKuM,QAAUV,GAEjB7L,KAAK8M,SAASjB,EAEjB,CAKD,MAAAkB,GACE,OAAO/M,KAAKuH,IAAM,IAAMvH,KAAKsM,SAC9B,CAQD,cAAAU,GACE,IAAIC,EAAOjN,KAAKwM,YAChB,IAAKS,EAEH,OAAOjN,KAOT,EAAG,CACD,GAAIiN,EAAKC,YAAcrB,EAIrB,OADA7L,KAAKyM,YAAc,EACZQ,EAETA,EAAOA,EAAKT,WACb,OAAQS,GAGT,OAAOjN,IACR,CAMD,mBAAAmN,GACE,IAAIF,EAAOjN,KAAKwM,YAChB,IAAKS,EACH,OAIF,IAAIvB,EAAO1L,KACX,EAAG,CACD,GAAIiN,EAAKC,YAAcrB,EAAkB,CAIvCoB,EAAKT,YAAc,KACnB,KACD,CACGS,EAAKC,YAAcrB,EAGrBH,EAAOuB,EACEA,EAAKC,YAAcrB,EAG5BH,EAAKc,YAAcS,EAAKT,YAExBd,EAAOuB,EAETA,EAAOvB,EAAKc,WACb,OAAQS,EACV,CAOD,YAAAG,GACE,OAAOpN,KAAKsM,SACb,CAKD,QAAAY,GACE,OAAOlN,KAAKuM,KACb,CAUD,QAAAO,CAASP,GACP,GAAIvM,KAAKuM,QAAUV,GAAmB7L,KAAKuM,MAAQA,EACjD,MAAM,IAAIhE,MAAM,gCAElBvI,KAAKuM,MAAQA,EACbvM,KAAK6H,SACN,CASD,IAAAwF,GACE/E,GACD,CAQD,QAAAgF,CAASC,EAAIC,GACX,IAAKxN,KAAKyM,YACR,OAAO,EAGT,IAAIgB,EAAQzN,KAAK2M,kBAAkBY,GACnC,GAAKE,GAGE,IAAe,IAAXA,EACT,OAAO,OAHPA,EAAQD,EACRxN,KAAK2M,kBAAkBY,GAAME,EAK/B,MAAMC,EAAQF,EAAOC,EAAQ,IAAO,GACpC,OAAIC,GAAS1N,KAAKyM,YACT,EAEFX,GAAO4B,EAAQ1N,KAAKyM,YAC5B,CASD,YAAAkB,CAAaJ,GACX,QAAKvN,KAAKyM,cAG6B,IAAhCzM,KAAK2M,kBAAkBY,EAC/B,CAMD,aAAAK,CAAcL,GACRvN,KAAKyM,cACPzM,KAAK2M,kBAAkBY,IAAO,EAEjC,GCvTH,MAAMM,GACiB,oBAAdC,gBAA4D,IAAxBA,UAAUC,UACjDD,UAAUC,UAAUC,cACpB,GAMOC,GAAUJ,GAAGnI,SAAS,WAMtBwI,GAASL,GAAGnI,SAAS,YAAcmI,GAAGnI,SAAS,SAM/CyI,GACXD,KACCL,GAAGnI,SAAS,iBACX,wCAAwC0I,KAAKP,KAMpCQ,GAASR,GAAGnI,SAAS,YAAcmI,GAAGnI,SAAS,QAM/C4I,GAAMT,GAAGnI,SAAS,aASlB6I,GACiB,oBAArBC,iBAAmCA,iBAAmB,EAOlDC,GACkB,oBAAtBC,mBACoB,oBAApBC,iBACPC,gBAAgBF,kBAMLG,GACM,oBAAVC,OAAyBA,MAAMjL,UAAUkL,OAMrCC,GAAmD,mBAAtBC,kBAK7BC,GAA0B,WACrC,IAAIC,GAAU,EACd,IACE,MAAMzE,EAAUhE,OAAO0I,eAAe,CAAA,EAAI,UAAW,CACnDjG,IAAK,WACHgG,GAAU,CACX,IAIHE,OAAO/J,iBAAiB,IAAK,KAAMoF,GAEnC2E,OAAO/I,oBAAoB,IAAK,KAAMoE,EACvC,CAAC,MAAO4E,GAER,CACD,OAAOH,CACR,CAjBsC,GC/DhC,SAASI,GAAsBC,EAAOC,EAAQC,EAAYC,GAE/D,IAAIC,EAeJ,OAbEA,EADEF,GAAcA,EAAWvO,OACgBuO,EAAWG,QAC7CpB,GACA,IAAIE,gBAAgBa,GAAS,IAAKC,GAAU,KAE5CK,SAASC,cAAc,UAE9BP,IACFI,EAAOJ,MAAQA,GAEbC,IACFG,EAAOH,OAASA,GAIhBG,EAAOI,WAAW,KAAML,EAE5B,CAOO,SAASM,GAAcC,GAC5B,MAAMN,EAASM,EAAQN,OACvBA,EAAOJ,MAAQ,EACfI,EAAOH,OAAS,EAChBS,EAAQC,UAAU,EAAG,EAAG,EAAG,EAC7B,CASO,SAASC,GAAW9F,GACzB,IAAIkF,EAAQlF,EAAQ+F,YACpB,MAAMC,EAAQC,iBAAiBjG,GAG/B,OAFAkF,GAASgB,SAASF,EAAMG,WAAY,IAAMD,SAASF,EAAMI,YAAa,IAE/DlB,CACT,CASO,SAASmB,GAAYrG,GAC1B,IAAImF,EAASnF,EAAQsG,aACrB,MAAMN,EAAQC,iBAAiBjG,GAG/B,OAFAmF,GAAUe,SAASF,EAAMO,UAAW,IAAML,SAASF,EAAMQ,aAAc,IAEhErB,CACT,CAMO,SAASsB,GAAYC,EAASC,GACnC,MAAMC,EAASD,EAAQE,WACnBD,GACFA,EAAOE,aAAaJ,EAASC,EAEjC,CAMO,SAASI,GAAWC,GACzB,OAAOA,GAAQA,EAAKH,WAAaG,EAAKH,WAAWI,YAAYD,GAAQ,IACvE,CAKO,SAASE,GAAeF,GAC7B,KAAOA,EAAKG,WACVH,EAAKC,YAAYD,EAAKG,UAE1B,CAUO,SAASC,GAAgBJ,EAAMK,GACpC,MAAMC,EAAcN,EAAKO,WAEzB,IAAK,IAAIjQ,EAAI,KAAWA,EAAG,CACzB,MAAMkQ,EAAWF,EAAYhQ,GACvBmQ,EAAWJ,EAAS/P,GAG1B,IAAKkQ,IAAaC,EAChB,MAIED,IAAaC,IAKZD,EAMAC,EAOLT,EAAKU,aAAaD,EAAUD,IAN1BR,EAAKC,YAAYO,KACflQ,GAPF0P,EAAKW,YAAYF,GAapB,CACH,CC5HO,SAASG,GAAY/P,GAC1B,OAAOA,aAAgB2M,OACrB3M,aAAgBgQ,mBAChBhQ,aAAgBiQ,kBAChBjQ,aAAgBkQ,YACdlQ,EACA,IACN,CAMO,SAASmQ,GAAYnQ,GAC1B,OAAOA,aAAgBoQ,YACrBpQ,aAAgBqQ,mBAChBrQ,aAAgBsQ,cAChBtQ,aAAgBuQ,SACdvQ,EACA,IACN,CAKA,IAAIwQ,GAAgB,KAMb,SAASC,GAAQC,GACjBF,KACHA,GAAgBpD,GACdsD,EAAMrD,MACNqD,EAAMpD,YACNjJ,EACA,CAACsM,oBAAoB,KAGzB,MAAMlD,EAAS+C,GAAc/C,OACvBJ,EAAQqD,EAAMrD,MAChBI,EAAOJ,QAAUA,IACnBI,EAAOJ,MAAQA,GAEjB,MAAMC,EAASoD,EAAMpD,OAMrB,OALIG,EAAOH,SAAWA,IACpBG,EAAOH,OAASA,GAElBkD,GAAcxC,UAAU,EAAG,EAAGX,EAAOC,GACrCkD,GAAcI,UAAUF,EAAO,EAAG,GAC3BF,GAAcK,aAAa,EAAG,EAAGxD,EAAOC,GAAQtN,IACzD,CAKA,MAAM8Q,GAAc,CAAC,IAAK,KA+G1B,IAAAC,GAhGA,cAAuBC,GAIrB,WAAArT,CAAY4K,GACV,MAAM6B,EAAQV,EAEd5G,MAAMyF,EAAQ4B,UAAWC,EAAO,CAC9BG,WAAYhC,EAAQgC,WACpBE,YAAalC,EAAQkC,cAOvB5M,KAAKoT,QAAU1I,EAAQ2I,OAMvBrT,KAAKsT,MAAQ,KAMbtT,KAAKuT,OAAS,KAMdvT,KAAKwT,MAAQ9I,EAAQ+I,MAAQ,IAC9B,CAMD,OAAAC,GACE,GAAI1T,KAAKwT,MACP,OAAOxT,KAAKwT,MAEd,MAAMG,EAAYzB,GAAYlS,KAAKsT,OACnC,OAAIK,EACK,CAACA,EAAUnE,MAAOmE,EAAUlE,QAE9BwD,EACR,CAOD,OAAAW,GACE,OAAO5T,KAAKsT,KACb,CAOD,QAAAO,GACE,OAAO7T,KAAKuT,MACb,CAMD,IAAAlG,GACE,GAAIrN,KAAKuM,QAAUV,GAAkB7L,KAAKuM,QAAUV,EAClD,OAEF7L,KAAKuM,MAAQV,EACb7L,KAAK6H,UAEL,MAAM+G,EAAO5O,KACbA,KAAKoT,UACFU,MAAK,SAAU3R,GACdyM,EAAK0E,MAAQnR,EACbyM,EAAKrC,MAAQV,EACb+C,EAAK/G,SACb,IACOkM,OAAM,SAAUzE,GACfV,EAAK2E,OAASjE,EACdV,EAAKrC,MAAQV,EACb+C,EAAK/G,SACb,GACG,GCrLI,SAASmM,GAAOC,EAAWC,GAChC,IAAKD,EACH,MAAM,IAAI1L,MAAM2L,EAEpB,CC8DA,MAAMC,WAAgB3J,EAOpB,WAAA1K,CAAYsU,GAmDV,GAlDAnP,QAKAjF,KAAK0H,GAKL1H,KAAKiH,KAKLjH,KAAK2H,GAML3H,KAAKqU,SAAM7N,EAMXxG,KAAKsU,cAAgB,WAOrBtU,KAAKuU,OAAS,KAMdvU,KAAKwU,oBAAiBhO,EAMtBxG,KAAKyU,mBAAqB,KAE1BzU,KAAK4J,kBAAkB5J,KAAKsU,cAAetU,KAAK0U,wBAE5CN,EACF,GAGQ,mBADa,EAC3B,sBACQ,CACA,MAAMO,EAAoC,EAC1C3U,KAAK4U,YAAYD,EACzB,KAAa,CAEL,MAAME,EAAaT,EACnBpU,KAAKkJ,cAAc2L,EACpB,CAEJ,CAQD,KAAAC,GACE,MAAMA,EAAK,IACLX,GAAQnU,KAAKyJ,gBAAkBzJ,KAAKsJ,gBAAkB,MAE5DwL,EAAMC,gBAAgB/U,KAAKgV,mBAC3B,MAAML,EAAW3U,KAAKiV,cAClBN,GACFG,EAAMF,YAAqCD,EAASG,SAEtD,MAAMxE,EAAQtQ,KAAKkV,WAInB,OAHI5E,GACFwE,EAAMK,SAAS7E,GAEVwE,CACR,CAUD,WAAAG,GACE,OAA0CjV,KAAKmJ,IAAInJ,KAAKsU,cACzD,CASD,KAAAc,GACE,OAAOpV,KAAKqU,GACb,CASD,eAAAW,GACE,OAAOhV,KAAKsU,aACb,CAQD,QAAAY,GACE,OAAOlV,KAAKuU,MACb,CAQD,gBAAAc,GACE,OAAOrV,KAAKwU,cACb,CAKD,qBAAAc,GACEtV,KAAK6H,SACN,CAKD,sBAAA6M,GACM1U,KAAKyU,qBACPnN,EAActH,KAAKyU,oBACnBzU,KAAKyU,mBAAqB,MAE5B,MAAME,EAAW3U,KAAKiV,cAClBN,IACF3U,KAAKyU,mBAAqB1N,EACxB4N,EACA7N,EACA9G,KAAKsV,sBACLtV,OAGJA,KAAK6H,SACN,CASD,WAAA+M,CAAYD,GACV3U,KAAK8J,IAAI9J,KAAKsU,cAAeK,EAC9B,CAWD,QAAAQ,CAAS7E,GACPtQ,KAAKuU,OAASjE,EACdtQ,KAAKwU,eAAkBlE,EAAoBiF,GAAoBjF,QAAhC9J,EAC/BxG,KAAK6H,SACN,CAWD,KAAA2N,CAAMjI,GACJvN,KAAKqU,IAAM9G,EACXvN,KAAK6H,SACN,CASD,eAAAkN,CAAgBU,GACdzV,KAAK6J,qBAAqB7J,KAAKsU,cAAetU,KAAK0U,wBACnD1U,KAAKsU,cAAgBmB,EACrBzV,KAAK4J,kBAAkB5J,KAAKsU,cAAetU,KAAK0U,wBAChD1U,KAAK0U,wBACN,EAWI,SAASa,GAAoB7M,GAClC,GAAmB,mBAARA,EACT,OAAOA,EAKT,IAAIgN,EACJ,GAAIrT,MAAMC,QAAQoG,GAChBgN,EAAShN,MACJ,CACLsL,GACgD,mBAArB,EAAe,UACxC,mEAGF0B,EAAS,CADwD,EAElE,CACD,OAAO,WACL,OAAOA,CACX,CACA,CACA,IAAAC,GAAexB,GCnTf,MAAMyB,GAAO,IAAIvT,MAAM,GAMhB,SAASwT,KACd,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EACzB,CAOO,SAASC,GAAMC,GACpB,OAAOjM,GAAIiM,EAAW,EAAG,EAAG,EAAG,EAAG,EAAG,EACvC,CASO,SAASC,GAASC,EAAYC,GACnC,MAAMC,EAAKF,EAAW,GAChBG,EAAKH,EAAW,GAChBI,EAAKJ,EAAW,GAChBK,EAAKL,EAAW,GAChBM,EAAKN,EAAW,GAChBO,EAAKP,EAAW,GAChBQ,EAAKP,EAAW,GAChBQ,EAAKR,EAAW,GAChBS,EAAKT,EAAW,GAChBU,EAAKV,EAAW,GAChBW,EAAKX,EAAW,GAChBY,EAAKZ,EAAW,GAStB,OAPAD,EAAW,GAAKE,EAAKM,EAAKJ,EAAKK,EAC/BT,EAAW,GAAKG,EAAKK,EAAKH,EAAKI,EAC/BT,EAAW,GAAKE,EAAKQ,EAAKN,EAAKO,EAC/BX,EAAW,GAAKG,EAAKO,EAAKL,EAAKM,EAC/BX,EAAW,GAAKE,EAAKU,EAAKR,EAAKS,EAAKP,EACpCN,EAAW,GAAKG,EAAKS,EAAKP,EAAKQ,EAAKN,EAE7BP,CACT,CAaO,SAASnM,GAAIiM,EAAW1U,EAAGC,EAAGyV,EAAGC,EAAGC,EAAG9L,GAO5C,OANA4K,EAAU,GAAK1U,EACf0U,EAAU,GAAKzU,EACfyU,EAAU,GAAKgB,EACfhB,EAAU,GAAKiB,EACfjB,EAAU,GAAKkB,EACflB,EAAU,GAAK5K,EACR4K,CACT,CAQO,SAASmB,GAAajB,EAAYC,GAOvC,OANAD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GACpBD,CACT,CAWO,SAAS/R,GAAM6R,EAAWoB,GAC/B,MAAMC,EAAID,EAAW,GACfE,EAAIF,EAAW,GAGrB,OAFAA,EAAW,GAAKpB,EAAU,GAAKqB,EAAIrB,EAAU,GAAKsB,EAAItB,EAAU,GAChEoB,EAAW,GAAKpB,EAAU,GAAKqB,EAAIrB,EAAU,GAAKsB,EAAItB,EAAU,GACzDoB,CACT,CAQO,SAASG,GAAOvB,EAAWwB,GAChC,MAAMC,EAAMxL,KAAKwL,IAAID,GACfE,EAAMzL,KAAKyL,IAAIF,GACrB,OAAOvB,GAASD,EAAWjM,GAAI8L,GAAM4B,EAAKC,GAAMA,EAAKD,EAAK,EAAG,GAC/D,CASO,SAASE,GAAM3B,EAAWqB,EAAGC,GAClC,OAAOrB,GAASD,EAAWjM,GAAI8L,GAAMwB,EAAG,EAAG,EAAGC,EAAG,EAAG,GACtD,CASO,SAASM,GAAUxX,EAAQiX,EAAGC,GACnC,OAAOvN,GAAI3J,EAAQiX,EAAG,EAAG,EAAGC,EAAG,EAAG,EACpC,CASO,SAASO,GAAU7B,EAAW8B,EAAIC,GACvC,OAAO9B,GAASD,EAAWjM,GAAI8L,GAAM,EAAG,EAAG,EAAG,EAAGiC,EAAIC,GACvD,CAeO,SAASC,GAAQhC,EAAWiC,EAAKC,EAAKC,EAAIC,EAAIZ,EAAOa,EAAKC,GAC/D,MAAMZ,EAAMzL,KAAKyL,IAAIF,GACfC,EAAMxL,KAAKwL,IAAID,GAOrB,OANAxB,EAAU,GAAKmC,EAAKV,EACpBzB,EAAU,GAAKoC,EAAKV,EACpB1B,EAAU,IAAMmC,EAAKT,EACrB1B,EAAU,GAAKoC,EAAKX,EACpBzB,EAAU,GAAKqC,EAAMF,EAAKV,EAAMa,EAAMH,EAAKT,EAAMO,EACjDjC,EAAU,GAAKqC,EAAMD,EAAKV,EAAMY,EAAMF,EAAKX,EAAMS,EAC1ClC,CACT,CAoCO,SAASuC,GAAYnY,EAAQ8J,GAClC,MAAMsO,EAAMC,GAAYvO,GACxB+J,GAAe,IAARuE,EAAW,4CAElB,MAAMlX,EAAI4I,EAAO,GACX3I,EAAI2I,EAAO,GACX8M,EAAI9M,EAAO,GACX+M,EAAI/M,EAAO,GACXgN,EAAIhN,EAAO,GACXkB,EAAIlB,EAAO,GASjB,OAPA9J,EAAO,GAAK6W,EAAIuB,EAChBpY,EAAO,IAAMmB,EAAIiX,EACjBpY,EAAO,IAAM4W,EAAIwB,EACjBpY,EAAO,GAAKkB,EAAIkX,EAChBpY,EAAO,IAAM4W,EAAI5L,EAAI6L,EAAIC,GAAKsB,EAC9BpY,EAAO,KAAOkB,EAAI8J,EAAI7J,EAAI2V,GAAKsB,EAExBpY,CACT,CAOO,SAASqY,GAAYC,GAC1B,OAAOA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,EACxC,CAMA,IAAIC,GAQG,SAASC,GAASF,GACvB,MAAMG,EAAkB,UAAYH,EAAII,KAAK,MAAQ,IACrD,GAAIpK,GACF,OAAOmK,EAET,MAAMtH,EACJoH,KAAuBA,GAAqB5I,SAASC,cAAc,QAErE,OADAuB,EAAKhB,MAAMyF,UAAY6C,EAChBtH,EAAKhB,MAAMyF,SACpB,CCxRe,IAAA+C,GAAA,CACbC,QAAS,EACTC,aAAc,EACdC,MAAO,EACPC,MAAO,EACPC,MAAO,EACPC,KAAM,ICSD,SAASC,GAAeC,GAC7B,MAAMC,EAASC,KACf,IAAK,IAAI5X,EAAI,EAAGuE,EAAKmT,EAAYnY,OAAQS,EAAIuE,IAAMvE,EACjD6X,GAAiBF,EAAQD,EAAY1X,IAEvC,OAAO2X,CACT,CAyBO,SAASG,GAAOH,EAAQlV,EAAOsV,GACpC,OAAIA,GACFA,EAAK,GAAKJ,EAAO,GAAKlV,EACtBsV,EAAK,GAAKJ,EAAO,GAAKlV,EACtBsV,EAAK,GAAKJ,EAAO,GAAKlV,EACtBsV,EAAK,GAAKJ,EAAO,GAAKlV,EACfsV,GAEF,CACLJ,EAAO,GAAKlV,EACZkV,EAAO,GAAKlV,EACZkV,EAAO,GAAKlV,EACZkV,EAAO,GAAKlV,EAEhB,CASO,SAASyQ,GAAMyE,EAAQI,GAC5B,OAAIA,GACFA,EAAK,GAAKJ,EAAO,GACjBI,EAAK,GAAKJ,EAAO,GACjBI,EAAK,GAAKJ,EAAO,GACjBI,EAAK,GAAKJ,EAAO,GACVI,GAEFJ,EAAOzV,OAChB,CAQO,SAAS8V,GAAyBL,EAAQnC,EAAGC,GAClD,IAAIQ,EAAIC,EAeR,OAbED,EADET,EAAImC,EAAO,GACRA,EAAO,GAAKnC,EACRmC,EAAO,GAAKnC,EAChBA,EAAImC,EAAO,GAEX,EAGLzB,EADET,EAAIkC,EAAO,GACRA,EAAO,GAAKlC,EACRkC,EAAO,GAAKlC,EAChBA,EAAIkC,EAAO,GAEX,EAEA1B,EAAKA,EAAKC,EAAKA,CACxB,CAUO,SAAS+B,GAAmBN,EAAQpC,GACzC,OAAO2C,GAAWP,EAAQpC,EAAW,GAAIA,EAAW,GACtD,CAcO,SAAS4C,GAAeC,EAASC,GACtC,OACED,EAAQ,IAAMC,EAAQ,IACtBA,EAAQ,IAAMD,EAAQ,IACtBA,EAAQ,IAAMC,EAAQ,IACtBA,EAAQ,IAAMD,EAAQ,EAE1B,CAWO,SAASF,GAAWP,EAAQnC,EAAGC,GACpC,OAAOkC,EAAO,IAAMnC,GAAKA,GAAKmC,EAAO,IAAMA,EAAO,IAAMlC,GAAKA,GAAKkC,EAAO,EAC3E,CASO,SAASW,GAAuBX,EAAQpC,GAC7C,MAAMgD,EAAOZ,EAAO,GACda,EAAOb,EAAO,GACdc,EAAOd,EAAO,GACde,EAAOf,EAAO,GACdnC,EAAID,EAAW,GACfE,EAAIF,EAAW,GACrB,IAAIoD,EAAezB,GAAaC,QAchC,OAbI3B,EAAI+C,EACNI,GAA8BzB,GAAaM,KAClChC,EAAIiD,IACbE,GAA8BzB,GAAaI,OAEzC7B,EAAI+C,EACNG,GAA8BzB,GAAaK,MAClC9B,EAAIiD,IACbC,GAA8BzB,GAAaG,OAEzCsB,IAAiBzB,GAAaC,UAChCwB,EAAezB,GAAaE,cAEvBuB,CACT,CAOO,SAASf,KACd,MAAO,CAACgB,IAAUA,KAAWA,KAAWA,IAC1C,CAWO,SAASC,GAAeN,EAAMC,EAAMC,EAAMC,EAAMX,GACrD,OAAIA,GACFA,EAAK,GAAKQ,EACVR,EAAK,GAAKS,EACVT,EAAK,GAAKU,EACVV,EAAK,GAAKW,EACHX,GAEF,CAACQ,EAAMC,EAAMC,EAAMC,EAC5B,CAOO,SAASI,GAAoBf,GAClC,OAAOc,GAAeD,IAAUA,KAAWA,KAAWA,IAAUb,EAClE,CAOO,SAASgB,GAA6BxD,EAAYwC,GACvD,MAAMvC,EAAID,EAAW,GACfE,EAAIF,EAAW,GACrB,OAAOsD,GAAerD,EAAGC,EAAGD,EAAGC,EAAGsC,EACpC,CAoBO,SAASiB,GACdC,EACAC,EACA9Y,EACA+Y,EACApB,GAGA,OAAOqB,GADQN,GAAoBf,GACEkB,EAAiBC,EAAQ9Y,EAAK+Y,EACrE,CAmBO,SAASxY,GAAOyX,EAASC,GAC9B,OACED,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,EAE1B,CASO,SAASgB,GAAoBjB,EAASC,EAASiB,GACpD,OACElP,KAAKmP,IAAInB,EAAQ,GAAKC,EAAQ,IAAMiB,GACpClP,KAAKmP,IAAInB,EAAQ,GAAKC,EAAQ,IAAMiB,GACpClP,KAAKmP,IAAInB,EAAQ,GAAKC,EAAQ,IAAMiB,GACpClP,KAAKmP,IAAInB,EAAQ,GAAKC,EAAQ,IAAMiB,CAExC,CASO,SAAShZ,GAAO8X,EAASC,GAa9B,OAZIA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEhBD,CACT,CAMO,SAASP,GAAiBF,EAAQpC,GACnCA,EAAW,GAAKoC,EAAO,KACzBA,EAAO,GAAKpC,EAAW,IAErBA,EAAW,GAAKoC,EAAO,KACzBA,EAAO,GAAKpC,EAAW,IAErBA,EAAW,GAAKoC,EAAO,KACzBA,EAAO,GAAKpC,EAAW,IAErBA,EAAW,GAAKoC,EAAO,KACzBA,EAAO,GAAKpC,EAAW,GAE3B,CAOO,SAASiE,GAAkB7B,EAAQD,GACxC,IAAK,IAAI1X,EAAI,EAAGuE,EAAKmT,EAAYnY,OAAQS,EAAIuE,IAAMvE,EACjD6X,GAAiBF,EAAQD,EAAY1X,IAEvC,OAAO2X,CACT,CAUO,SAASyB,GACdzB,EACAsB,EACAC,EACA9Y,EACA+Y,GAEA,KAAOD,EAAS9Y,EAAK8Y,GAAUC,EAC7BM,GAAS9B,EAAQsB,EAAgBC,GAASD,EAAgBC,EAAS,IAErE,OAAOvB,CACT,CAOO,SAAS+B,GAAY/B,EAAQgC,GAClC,IAAK,IAAI3Z,EAAI,EAAGuE,EAAKoV,EAAMpa,OAAQS,EAAIuE,IAAMvE,EAC3CwZ,GAAkB7B,EAAQgC,EAAM3Z,IAElC,OAAO2X,CACT,CAOO,SAAS8B,GAAS9B,EAAQnC,EAAGC,GAClCkC,EAAO,GAAKvN,KAAKwP,IAAIjC,EAAO,GAAInC,GAChCmC,EAAO,GAAKvN,KAAKwP,IAAIjC,EAAO,GAAIlC,GAChCkC,EAAO,GAAKvN,KAAKyP,IAAIlC,EAAO,GAAInC,GAChCmC,EAAO,GAAKvN,KAAKyP,IAAIlC,EAAO,GAAIlC,EAClC,CAWO,SAASqE,GAAcnC,EAAQoC,GACpC,IAAIC,EAEJ,OADAA,EAAMD,EAASE,GAActC,IACzBqC,IAGJA,EAAMD,EAASG,GAAevC,IAC1BqC,IAGJA,EAAMD,EAASI,GAAYxC,IACvBqC,IAGJA,EAAMD,EAASK,GAAWzC,IACtBqC,IAGG,IACT,CAQO,SAASK,GAAQ1C,GACtB,IAAI2C,EAAO,EAIX,OAHKpX,GAAQyU,KACX2C,EAAOC,GAAS5C,GAAU6C,GAAU7C,IAE/B2C,CACT,CAQO,SAASL,GAActC,GAC5B,MAAO,CAACA,EAAO,GAAIA,EAAO,GAC5B,CAQO,SAASuC,GAAevC,GAC7B,MAAO,CAACA,EAAO,GAAIA,EAAO,GAC5B,CAQO,SAAS8C,GAAU9C,GACxB,MAAO,EAAEA,EAAO,GAAKA,EAAO,IAAM,GAAIA,EAAO,GAAKA,EAAO,IAAM,EACjE,CAQO,SAAS+C,GAAU/C,EAAQgD,GAChC,IAAIpF,EACJ,GAAe,gBAAXoF,EACFpF,EAAa0E,GAActC,QACtB,GAAe,iBAAXgD,EACTpF,EAAa2E,GAAevC,QACvB,GAAe,aAAXgD,EACTpF,EAAa6E,GAAWzC,OACnB,IAAe,cAAXgD,EAGT,MAAM,IAAIhU,MAAM,kBAFhB4O,EAAa4E,GAAYxC,EAG1B,CACD,OAAOpC,CACT,CAuBO,SAASqF,GAAkBC,EAAQC,EAAYC,EAAUlJ,EAAMkG,GACpE,MAAOiD,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAAMC,GACvCX,EACAC,EACAC,EACAlJ,GAEF,OAAOgH,GACLzO,KAAKwP,IAAIoB,EAAIE,EAAIE,EAAIE,GACrBlR,KAAKwP,IAAIqB,EAAIE,EAAIE,EAAIE,GACrBnR,KAAKyP,IAAImB,EAAIE,EAAIE,EAAIE,GACrBlR,KAAKyP,IAAIoB,EAAIE,EAAIE,EAAIE,GACrBxD,EAEJ,CASO,SAASyD,GAAmBX,EAAQC,EAAYC,EAAUlJ,GAC/D,MAAMoE,EAAM6E,EAAajJ,EAAK,GAAM,EAC9BqE,EAAM4E,EAAajJ,EAAK,GAAM,EAC9B4J,EAAcrR,KAAKwL,IAAImF,GACvBW,EAActR,KAAKyL,IAAIkF,GACvBY,EAAO1F,EAAKwF,EACZG,EAAO3F,EAAKyF,EACZG,EAAO3F,EAAKuF,EACZK,EAAO5F,EAAKwF,EACZlG,EAAIqF,EAAO,GACXpF,EAAIoF,EAAO,GACjB,MAAO,CACLrF,EAAImG,EAAOG,EACXrG,EAAImG,EAAOC,EACXrG,EAAImG,EAAOG,EACXrG,EAAImG,EAAOC,EACXrG,EAAImG,EAAOG,EACXrG,EAAImG,EAAOC,EACXrG,EAAImG,EAAOG,EACXrG,EAAImG,EAAOC,EACXrG,EAAImG,EAAOG,EACXrG,EAAImG,EAAOC,EAEf,CAQO,SAASrB,GAAU7C,GACxB,OAAOA,EAAO,GAAKA,EAAO,EAC5B,CAoBO,SAASoE,GAAgB3D,EAASC,EAASN,GAChD,MAAMiE,EAAejE,GAvZd,CAACa,IAAUA,KAAU,KAAW,KAgbvC,OAxBIqD,GAAW7D,EAASC,IAClBD,EAAQ,GAAKC,EAAQ,GACvB2D,EAAa,GAAK5D,EAAQ,GAE1B4D,EAAa,GAAK3D,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvB2D,EAAa,GAAK5D,EAAQ,GAE1B4D,EAAa,GAAK3D,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvB2D,EAAa,GAAK5D,EAAQ,GAE1B4D,EAAa,GAAK3D,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvB2D,EAAa,GAAK5D,EAAQ,GAE1B4D,EAAa,GAAK3D,EAAQ,IAG5BS,GAAoBkD,GAEfA,CACT,CA0BO,SAAS5B,GAAWzC,GACzB,MAAO,CAACA,EAAO,GAAIA,EAAO,GAC5B,CAQO,SAASwC,GAAYxC,GAC1B,MAAO,CAACA,EAAO,GAAIA,EAAO,GAC5B,CAQO,SAAS4C,GAAS5C,GACvB,OAAOA,EAAO,GAAKA,EAAO,EAC5B,CASO,SAASsE,GAAW7D,EAASC,GAClC,OACED,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,EAE1B,CAQO,SAASnV,GAAQyU,GACtB,OAAOA,EAAO,GAAKA,EAAO,IAAMA,EAAO,GAAKA,EAAO,EACrD,CAOO,SAASuE,GAAevE,EAAQI,GACrC,OAAIA,GACFA,EAAK,GAAKJ,EAAO,GACjBI,EAAK,GAAKJ,EAAO,GACjBI,EAAK,GAAKJ,EAAO,GACjBI,EAAK,GAAKJ,EAAO,GACVI,GAEFJ,CACT,CAMO,SAASwE,GAAgBxE,EAAQlV,GACtC,MAAM2Z,GAAWzE,EAAO,GAAKA,EAAO,IAAM,GAAMlV,EAAQ,GAClD4Z,GAAW1E,EAAO,GAAKA,EAAO,IAAM,GAAMlV,EAAQ,GACxDkV,EAAO,IAAMyE,EACbzE,EAAO,IAAMyE,EACbzE,EAAO,IAAM0E,EACb1E,EAAO,IAAM0E,CACf,CAUO,SAASC,GAAkB3E,EAAQ9L,EAAOzL,GAC/C,IAAI6b,GAAa,EACjB,MAAMM,EAAWjE,GAAuBX,EAAQ9L,GAC1C2Q,EAASlE,GAAuBX,EAAQvX,GAC9C,GACEmc,IAAarF,GAAaE,cAC1BoF,IAAWtF,GAAaE,aAExB6E,GAAa,MACR,CACL,MAAM1D,EAAOZ,EAAO,GACda,EAAOb,EAAO,GACdc,EAAOd,EAAO,GACde,EAAOf,EAAO,GACd8E,EAAS5Q,EAAM,GACf6Q,EAAS7Q,EAAM,GACf8Q,EAAOvc,EAAI,GACXwc,EAAOxc,EAAI,GACXyc,GAASD,EAAOF,IAAWC,EAAOF,GACxC,IAAIjH,EAAGC,EACA+G,EAAStF,GAAaG,SAAYkF,EAAWrF,GAAaG,SAE/D7B,EAAImH,GAAQC,EAAOlE,GAAQmE,EAC3BZ,EAAazG,GAAK+C,GAAQ/C,GAAKiD,GAG9BwD,KACEO,EAAStF,GAAaI,QACvBiF,EAAWrF,GAAaI,QAG1B7B,EAAImH,GAAQD,EAAOlE,GAAQoE,EAC3BZ,EAAaxG,GAAK+C,GAAQ/C,GAAKiD,GAG9BuD,KACEO,EAAStF,GAAaK,QACvBgF,EAAWrF,GAAaK,QAG1B/B,EAAImH,GAAQC,EAAOpE,GAAQqE,EAC3BZ,EAAazG,GAAK+C,GAAQ/C,GAAKiD,GAG9BwD,KACEO,EAAStF,GAAaM,OACvB+E,EAAWrF,GAAaM,OAG1B/B,EAAImH,GAAQD,EAAOpE,GAAQsE,EAC3BZ,EAAaxG,GAAK+C,GAAQ/C,GAAKiD,EAElC,CACD,OAAOuD,CACT,CAaO,SAASa,GAAenF,EAAQoF,EAAahF,EAAMiF,GACxD,GAAI9Z,GAAQyU,GACV,OAAOmB,GAAoBf,GAE7B,IAAIL,EAAc,GAClB,GAAIsF,EAAQ,EAAG,CACb,MAAMpP,EAAQ+J,EAAO,GAAKA,EAAO,GAC3B9J,EAAS8J,EAAO,GAAKA,EAAO,GAClC,IAAK,IAAI3X,EAAI,EAAGA,EAAIgd,IAAShd,EAC3B0X,EAAY3T,KACV4T,EAAO,GAAM/J,EAAQ5N,EAAKgd,EAC1BrF,EAAO,GACPA,EAAO,GACPA,EAAO,GAAM9J,EAAS7N,EAAKgd,EAC3BrF,EAAO,GAAM/J,EAAQ5N,EAAKgd,EAC1BrF,EAAO,GACPA,EAAO,GACPA,EAAO,GAAM9J,EAAS7N,EAAKgd,EAGnC,MACItF,EAAc,CACZC,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,IAGXoF,EAAYrF,EAAaA,EAAa,GACtC,MAAMuF,EAAK,GACLC,EAAK,GACX,IAAK,IAAIld,EAAI,EAAGmd,EAAIzF,EAAYnY,OAAQS,EAAImd,EAAGnd,GAAK,EAClDid,EAAGlZ,KAAK2T,EAAY1X,IACpBkd,EAAGnZ,KAAK2T,EAAY1X,EAAI,IAE1B,OA1yBF,SAA4Bid,EAAIC,EAAInF,GAKlC,OAAOc,GAJMzO,KAAKwP,IAAItX,MAAM,KAAM2a,GACrB7S,KAAKwP,IAAItX,MAAM,KAAM4a,GACrB9S,KAAKyP,IAAIvX,MAAM,KAAM2a,GACrB7S,KAAKyP,IAAIvX,MAAM,KAAM4a,GACYnF,EAChD,CAoyBSqF,CAAmBH,EAAIC,EAAInF,EACpC,CAUO,SAASsF,GAAM1F,EAAQ2F,GAC5B,MAAMC,EAAmBD,EAAWE,YAC9B3C,EAASJ,GAAU9C,GACzB,GACE2F,EAAWG,aACV5C,EAAO,GAAK0C,EAAiB,IAAM1C,EAAO,IAAM0C,EAAiB,IAClE,CACA,MAAMG,EAAanD,GAASgD,GAItBrE,EAHa9O,KAAKuT,OACrB9C,EAAO,GAAK0C,EAAiB,IAAMG,GAEVA,EAC5B/F,EAAO,IAAMuB,EACbvB,EAAO,IAAMuB,CACd,CACD,OAAOvB,CACT,CAcO,SAASiG,GAAcjG,EAAQ2F,GACpC,GAAIA,EAAWG,WAAY,CACzB,MAAMF,EAAmBD,EAAWE,YAEpC,IAAKK,SAASlG,EAAO,MAAQkG,SAASlG,EAAO,IAC3C,MAAO,CAAC,CAAC4F,EAAiB,GAAI5F,EAAO,GAAI4F,EAAiB,GAAI5F,EAAO,KAGvE0F,GAAM1F,EAAQ2F,GACd,MAAMI,EAAanD,GAASgD,GAE5B,GAAIhD,GAAS5C,GAAU+F,EAErB,MAAO,CAAC,CAACH,EAAiB,GAAI5F,EAAO,GAAI4F,EAAiB,GAAI5F,EAAO,KAEvE,GAAIA,EAAO,GAAK4F,EAAiB,GAE/B,MAAO,CACL,CAAC5F,EAAO,GAAK+F,EAAY/F,EAAO,GAAI4F,EAAiB,GAAI5F,EAAO,IAChE,CAAC4F,EAAiB,GAAI5F,EAAO,GAAIA,EAAO,GAAIA,EAAO,KAGvD,GAAIA,EAAO,GAAK4F,EAAiB,GAE/B,MAAO,CACL,CAAC5F,EAAO,GAAIA,EAAO,GAAI4F,EAAiB,GAAI5F,EAAO,IACnD,CAAC4F,EAAiB,GAAI5F,EAAO,GAAIA,EAAO,GAAK+F,EAAY/F,EAAO,IAGrE,CAED,MAAO,CAACA,EACV,CC54BA,MAAMmG,GAAa,CACjB,KAAQ,IACR,KAAQ,KACR,KAAQ,QACR,KAAQ,UACR,KAAQ,WA0BH,MAAMC,GAAkB,CAE7BC,QAAW,SAAW,EAAI5T,KAAK6T,IAC/BC,QAAY,EAAI9T,KAAK6T,GAAK,QAAW,IACrCE,GAAM,MACNC,EAAK,EACL,QAAS,KAAO,MC4NlB,IAAAC,GA3NA,MAIE,WAAAngB,CAAY4K,GAKV1K,KAAKkgB,MAAQxV,EAAQyV,KASrBngB,KAAKogB,OAAoD1V,EAAa,MAStE1K,KAAKqgB,aAA6B7Z,IAAnBkE,EAAQ6O,OAAuB7O,EAAQ6O,OAAS,KAS/DvZ,KAAKsgB,kBACqB9Z,IAAxBkE,EAAQ6V,YAA4B7V,EAAQ6V,YAAc,KAM5DvgB,KAAKwgB,sBACyBha,IAA5BkE,EAAQ+V,gBAAgC/V,EAAQ+V,gBAAkB,MAMpEzgB,KAAK0gB,aAA6Bla,IAAnBkE,EAAQiW,QAAuBjW,EAAQiW,OAMtD3gB,KAAK4gB,aAAe5gB,KAAK0gB,UAAW1gB,KAAKqgB,SAMzCrgB,KAAK6gB,wBAA0BnW,EAAQoW,mBAMvC9gB,KAAK+gB,iBAAmB,KAMxB/gB,KAAKghB,eAAiBtW,EAAQuW,aAC/B,CAKD,QAAA5B,GACE,OAAOrf,KAAK4gB,SACb,CAOD,OAAAM,GACE,OAAOlhB,KAAKkgB,KACb,CAOD,SAAAd,GACE,OAAOpf,KAAKqgB,OACb,CAOD,QAAAc,GACE,OAAOnhB,KAAKogB,MACb,CASD,gBAAAgB,GACE,OAAOphB,KAAKghB,gBAAkBrB,GAAgB3f,KAAKogB,OACpD,CAOD,cAAAiB,GACE,OAAOrhB,KAAKsgB,YACb,CAaD,kBAAAgB,GACE,OAAOthB,KAAKwgB,gBACb,CAOD,QAAAe,GACE,OAAOvhB,KAAK0gB,OACb,CAOD,SAAAc,CAAUb,GACR3gB,KAAK0gB,QAAUC,EACf3gB,KAAK4gB,aAAeD,IAAU3gB,KAAKqgB,QACpC,CAKD,kBAAAoB,GACE,OAAOzhB,KAAK+gB,gBACb,CAKD,kBAAAW,CAAmBC,GACjB3hB,KAAK+gB,iBAAmBY,CACzB,CAOD,SAAAC,CAAUrI,GACRvZ,KAAKqgB,QAAU9G,EACfvZ,KAAK4gB,aAAe5gB,KAAK0gB,UAAWnH,EACrC,CAQD,cAAAsI,CAAetB,GACbvgB,KAAKsgB,aAAeC,CACrB,CAQD,qBAAAuB,CAAsBlf,GACpB5C,KAAK6gB,wBAA0Bje,CAChC,CAOD,sBAAAmf,GACE,OAAO/hB,KAAK6gB,uBACb,GChQI,MAAMmB,GAAS,QAMTC,GAAYjW,KAAK6T,GAAKmC,GAMtBE,GAAS,EAAED,IAAYA,GAAWA,GAAWA,IAM7CE,GAAe,EAAE,KAAM,GAAI,IAAK,IAOhCC,GAAaJ,GAAShW,KAAKqW,IAAIrW,KAAKsW,IAAItW,KAAK6T,GAAK,IAM/D,MAAM0C,WAA2BC,GAI/B,WAAA1iB,CAAYqgB,GACVlb,MAAM,CACJkb,KAAMA,EACNsC,MAAO,IACPlJ,OAAQ2I,GACRvB,QAAQ,EACRJ,YAAa4B,GACbrB,mBAAoB,SAAUpE,EAAYgG,GACxC,OAAOhG,EAAa1Q,KAAK2W,KAAKD,EAAM,GAAKV,GAC1C,GAEJ,EASI,MAAMY,GAAc,CACzB,IAAIL,GAAmB,aACvB,IAAIA,GAAmB,eACvB,IAAIA,GAAmB,eACvB,IAAIA,GAAmB,eACvB,IAAIA,GAAmB,8CACvB,IAAIA,GAAmB,iDAWlB,SAASM,GAAaC,EAAOC,EAAQC,GAC1C,MAAM7hB,EAAS2hB,EAAM3hB,OACrB6hB,EAAYA,EAAY,EAAIA,EAAY,OACzBxc,IAAXuc,IAGAA,EAFEC,EAAY,EAELF,EAAMhf,QAEN,IAAIzB,MAAMlB,IAGvB,IAAK,IAAIS,EAAI,EAAGA,EAAIT,EAAQS,GAAKohB,EAAW,CAC1CD,EAAOnhB,GAAMqgB,GAAYa,EAAMlhB,GAAM,IACrC,IAAIyV,EAAI2K,GAAShW,KAAKqW,IAAIrW,KAAKsW,IAAKtW,KAAK6T,KAAOiD,EAAMlhB,EAAI,GAAK,IAAO,MAClEyV,EAAI+K,GACN/K,EAAI+K,GACK/K,GAAK+K,KACd/K,GAAK+K,IAEPW,EAAOnhB,EAAI,GAAKyV,CACjB,CACD,OAAO0L,CACT,CAUO,SAASE,GAAWH,EAAOC,EAAQC,GACxC,MAAM7hB,EAAS2hB,EAAM3hB,OACrB6hB,EAAYA,EAAY,EAAIA,EAAY,OACzBxc,IAAXuc,IAGAA,EAFEC,EAAY,EAELF,EAAMhf,QAEN,IAAIzB,MAAMlB,IAGvB,IAAK,IAAIS,EAAI,EAAGA,EAAIT,EAAQS,GAAKohB,EAC/BD,EAAOnhB,GAAM,IAAMkhB,EAAMlhB,GAAMqgB,GAC/Bc,EAAOnhB,EAAI,GACR,IAAMoK,KAAKkX,KAAKlX,KAAKmX,IAAIL,EAAMlhB,EAAI,GAAKogB,KAAYhW,KAAK6T,GAAK,GAEnE,OAAOkD,CACT,CCzHO,MAAMf,GAAS,QAQTE,GAAS,EAAE,KAAM,GAAI,IAAK,IAM1BvC,GAAmB3T,KAAK6T,GAAKmC,GAAU,IAUpD,MAAMoB,WAA2BZ,GAK/B,WAAA1iB,CAAYqgB,EAAMM,GAChBxb,MAAM,CACJkb,KAAMA,EACNsC,MAAO,UACPlJ,OAAQ2I,GACRzB,gBAAiBA,EACjBE,QAAQ,EACRM,cAAetB,GACfY,YAAa2B,IAEhB,EASI,MAAMU,GAAc,CACzB,IAAIQ,GAAmB,UACvB,IAAIA,GAAmB,YAAa,OACpC,IAAIA,GAAmB,iCACvB,IAAIA,GAAmB,4BACvB,IAAIA,GAAmB,gDACvB,IAAIA,GAAmB,+CAAgD,OACvE,IAAIA,GAAmB,6CAA8C,QC3DvE,IAAIC,GAAQ,CAAA,EAKL,SAAS1e,KACd0e,GAAQ,CAAA,CACV,CAOO,SAASla,GAAIgX,GAClB,OACEkD,GAAMlD,IACNkD,GAAMlD,EAAKmD,QAAQ,yCAA0C,aAC7D,IAEJ,CAOO,SAASC,GAAIpD,EAAMjB,GACxBmE,GAAMlD,GAAQjB,CAChB,CC3BA,IAAIsE,GAAa,CAAA,EAKV,SAAS7e,KACd6e,GAAa,CAAA,CACf,CAUO,SAASD,GAAItZ,EAAQwZ,EAAa9E,GACvC,MAAM+E,EAAazZ,EAAOiX,UACpByC,EAAkBF,EAAYvC,UAC9BwC,KAAcF,KAClBA,GAAWE,GAAc,IAE3BF,GAAWE,GAAYC,GAAmBhF,CAC5C,CA4BO,SAASxV,GAAIua,EAAYC,GAC9B,IAAI5N,EAIJ,OAHI2N,KAAcF,IAAcG,KAAmBH,GAAWE,KAC5D3N,EAAYyN,GAAWE,GAAYC,IAE9B5N,CACT,CCvDO,SAAS6N,GAAMvf,EAAOmX,EAAKC,GAChC,OAAOzP,KAAKwP,IAAIxP,KAAKyP,IAAIpX,EAAOmX,GAAMC,EACxC,CAaO,SAASoI,GAAuBzM,EAAGC,EAAGyF,EAAIC,EAAIC,EAAIC,GACvD,MAAMpF,EAAKmF,EAAKF,EACVhF,EAAKmF,EAAKF,EAChB,GAAW,IAAPlF,GAAmB,IAAPC,EAAU,CACxB,MAAM/L,IAAMqL,EAAI0F,GAAMjF,GAAMR,EAAI0F,GAAMjF,IAAOD,EAAKA,EAAKC,EAAKA,GACxD/L,EAAI,GACN+Q,EAAKE,EACLD,EAAKE,GACIlR,EAAI,IACb+Q,GAAMjF,EAAK9L,EACXgR,GAAMjF,EAAK/L,EAEd,CACD,OAAO+X,GAAgB1M,EAAGC,EAAGyF,EAAIC,EACnC,CAUO,SAAS+G,GAAgBhH,EAAIC,EAAIC,EAAIC,GAC1C,MAAMpF,EAAKmF,EAAKF,EACVhF,EAAKmF,EAAKF,EAChB,OAAOlF,EAAKA,EAAKC,EAAKA,CACxB,CASO,SAASiM,GAAkBtL,GAChC,MAAM9W,EAAI8W,EAAItX,OAEd,IAAK,IAAIS,EAAI,EAAGA,EAAID,EAAGC,IAAK,CAE1B,IAAIoiB,EAASpiB,EACTqiB,EAAQjY,KAAKmP,IAAI1C,EAAI7W,GAAGA,IAC5B,IAAK,IAAIsiB,EAAItiB,EAAI,EAAGsiB,EAAIviB,EAAGuiB,IAAK,CAC9B,MAAMC,EAAWnY,KAAKmP,IAAI1C,EAAIyL,GAAGtiB,IAC7BuiB,EAAWF,IACbA,EAAQE,EACRH,EAASE,EAEZ,CAED,GAAc,IAAVD,EACF,OAAO,KAIT,MAAMhiB,EAAMwW,EAAIuL,GAChBvL,EAAIuL,GAAUvL,EAAI7W,GAClB6W,EAAI7W,GAAKK,EAGT,IAAK,IAAImiB,EAAIxiB,EAAI,EAAGwiB,EAAIziB,EAAGyiB,IAAK,CAC9B,MAAMC,GAAQ5L,EAAI2L,GAAGxiB,GAAK6W,EAAI7W,GAAGA,GACjC,IAAK,IAAI0iB,EAAI1iB,EAAG0iB,EAAI3iB,EAAI,EAAG2iB,IACrB1iB,GAAK0iB,EACP7L,EAAI2L,GAAGE,GAAK,EAEZ7L,EAAI2L,GAAGE,IAAMD,EAAO5L,EAAI7W,GAAG0iB,EAGhC,CACF,CAGD,MAAMlN,EAAI,IAAI/U,MAAMV,GACpB,IAAK,IAAIod,EAAIpd,EAAI,EAAGod,GAAK,EAAGA,IAAK,CAC/B3H,EAAE2H,GAAKtG,EAAIsG,GAAGpd,GAAK8W,EAAIsG,GAAGA,GAC1B,IAAK,IAAIiB,EAAIjB,EAAI,EAAGiB,GAAK,EAAGA,IAC1BvH,EAAIuH,GAAGre,IAAM8W,EAAIuH,GAAGjB,GAAK3H,EAAE2H,EAE9B,CACD,OAAO3H,CACT,CAQO,SAASmN,GAAUC,GACxB,OAAyB,IAAjBA,EAAwBxY,KAAK6T,EACvC,CAQO,SAAS4E,GAAUC,GACxB,OAAQA,EAAiB1Y,KAAK6T,GAAM,GACtC,CASO,SAAS8E,GAAOtjB,EAAGC,GACxB,MAAM4iB,EAAI7iB,EAAIC,EACd,OAAO4iB,EAAI5iB,EAAI,EAAI4iB,EAAI5iB,EAAI4iB,CAC7B,CAUO,SAASU,GAAKvjB,EAAGC,EAAG8V,GACzB,OAAO/V,EAAI+V,GAAK9V,EAAID,EACtB,CAQO,SAASwjB,GAAQljB,EAAGmjB,GACzB,MAAMC,EAAS/Y,KAAKC,IAAI,GAAI6Y,GAC5B,OAAO9Y,KAAKgZ,MAAMrjB,EAAIojB,GAAUA,CAClC,CASO,SAASC,GAAMrjB,EAAGmjB,GACvB,OAAO9Y,KAAKgZ,MAAMH,GAAQljB,EAAGmjB,GAC/B,CASO,SAASvF,GAAM5d,EAAGmjB,GACvB,OAAO9Y,KAAKuT,MAAMsF,GAAQljB,EAAGmjB,GAC/B,CASO,SAASG,GAAKtjB,EAAGmjB,GACtB,OAAO9Y,KAAKiZ,KAAKJ,GAAQljB,EAAGmjB,GAC9B,CC5LO,SAASI,GAAUC,EAAQ3V,EAAO4V,GACvC,MAAMC,OACU7e,IAAd4e,EAA0BD,EAAON,QAAQO,GAAa,GAAKD,EAC7D,IAAIG,EAAUD,EAAaze,QAAQ,KAEnC,OADA0e,GAAuB,IAAbA,EAAiBD,EAAalkB,OAASmkB,EAC1CA,EAAU9V,EACb6V,EACA,IAAIhjB,MAAM,EAAImN,EAAQ8V,GAASzM,KAAK,KAAOwM,CACjD,CAQO,SAASE,GAAgBC,EAAIC,GAClC,MAAMC,GAAM,GAAKF,GAAIG,MAAM,KACrBC,GAAM,GAAKH,GAAIE,MAAM,KAE3B,IAAK,IAAI/jB,EAAI,EAAGA,EAAIoK,KAAKyP,IAAIiK,EAAGvkB,OAAQykB,EAAGzkB,QAASS,IAAK,CACvD,MAAMikB,EAAKrV,SAASkV,EAAG9jB,IAAM,IAAK,IAC5BkkB,EAAKtV,SAASoV,EAAGhkB,IAAM,IAAK,IAElC,GAAIikB,EAAKC,EACP,OAAO,EAET,GAAIA,EAAKD,EACP,OAAQ,CAEX,CAED,OAAO,CACT,CCHO,SAAStC,GAAIpM,EAAYzJ,GAG9B,OAFAyJ,EAAW,KAAOzJ,EAAM,GACxByJ,EAAW,KAAOzJ,EAAM,GACjByJ,CACT,CASO,SAAS4O,GAAgB5O,EAAY6O,GAC1C,MAAM9B,EAAI8B,EAAOC,YACXxJ,EAASuJ,EAAO3J,YAChBO,EAAKH,EAAO,GACZI,EAAKJ,EAAO,GAIlB,IAAI5E,EAHOV,EAAW,GAGRyF,EACd,MAAM9E,EAHKX,EAAW,GAGN0F,EACL,IAAPhF,GAAmB,IAAPC,IACdD,EAAK,GAEP,MAAMb,EAAIhL,KAAKka,KAAKrO,EAAKA,EAAKC,EAAKA,GAKnC,MAAO,CAHG8E,EAAMsH,EAAIrM,EAAMb,EAChB6F,EAAMqH,EAAIpM,EAAMd,EAG5B,CAcO,SAASmP,GAAiBhP,EAAYiP,GAC3C,MAAMxJ,EAAKzF,EAAW,GAChB0F,EAAK1F,EAAW,GAChB1J,EAAQ2Y,EAAQ,GAChBpkB,EAAMokB,EAAQ,GACdtJ,EAAKrP,EAAM,GACXsP,EAAKtP,EAAM,GACXuP,EAAKhb,EAAI,GACTib,EAAKjb,EAAI,GACT6V,EAAKmF,EAAKF,EACVhF,EAAKmF,EAAKF,EACVsJ,EACG,IAAPxO,GAAmB,IAAPC,EACR,GACCD,GAAM+E,EAAKE,GAAMhF,GAAM+E,EAAKE,KAAQlF,EAAKA,EAAKC,EAAKA,GAAM,GAChE,IAAIV,EAAGC,EAWP,OAVIgP,GAAS,GACXjP,EAAI0F,EACJzF,EAAI0F,GACKsJ,GAAS,GAClBjP,EAAI4F,EACJ3F,EAAI4F,IAEJ7F,EAAI0F,EAAKuJ,EAAQxO,EACjBR,EAAI0F,EAAKsJ,EAAQvO,GAEZ,CAACV,EAAGC,EACb,CAiDO,SAASiP,GAAoBC,EAAazG,EAAS0G,GACxD,MAAMC,EAAoB9B,GAAO7E,EAAU,IAAK,KAAO,IACjD1I,EAAIpL,KAAKmP,IAAI,KAAOsL,GACpB3B,EAAW0B,GAAkB,EAEnC,IAAIE,EAAM1a,KAAKuT,MAAMnI,EAAI,MACrBoE,EAAMxP,KAAKuT,OAAOnI,EAAU,KAANsP,GAAc,IACpCC,EAAM9B,GAAQzN,EAAU,KAANsP,EAAmB,GAANlL,EAAUsJ,GAEzC6B,GAAO,KACTA,EAAM,EACNnL,GAAO,GAGLA,GAAO,KACTA,EAAM,EACNkL,GAAO,GAGT,IAAIE,EAAOF,EAAM,IAWjB,OAVY,IAARlL,GAAqB,IAARmL,IACfC,GAAQ,IAAM1B,GAAU1J,EAAK,GAAK,KAExB,IAARmL,IACFC,GAAQ,IAAM1B,GAAUyB,EAAK,EAAG7B,GAAY,KAEpB,IAAtB2B,IACFG,GAAQ,IAAML,EAAYM,OAAOJ,EAAoB,EAAI,EAAI,IAGxDG,CACT,CAiCO,SAASE,GAAO3P,EAAY4P,EAAUP,GAC3C,OAAIrP,EACK4P,EACJzD,QAAQ,MAAOnM,EAAW,GAAG0N,QAAQ2B,IACrClD,QAAQ,MAAOnM,EAAW,GAAG0N,QAAQ2B,IAEnC,EACT,CAOO,SAASjkB,GAAOykB,EAAaC,GAClC,IAAI1kB,GAAS,EACb,IAAK,IAAIX,EAAIolB,EAAY7lB,OAAS,EAAGS,GAAK,IAAKA,EAC7C,GAAIolB,EAAYplB,IAAMqlB,EAAYrlB,GAAI,CACpCW,GAAS,EACT,KACD,CAEH,OAAOA,CACT,CAoBO,SAAS+U,GAAOH,EAAYI,GACjC,MAAM2P,EAAWlb,KAAKwL,IAAID,GACpB4P,EAAWnb,KAAKyL,IAAIF,GACpBH,EAAID,EAAW,GAAK+P,EAAW/P,EAAW,GAAKgQ,EAC/C9P,EAAIF,EAAW,GAAK+P,EAAW/P,EAAW,GAAKgQ,EAGrD,OAFAhQ,EAAW,GAAKC,EAChBD,EAAW,GAAKE,EACTF,CACT,CAmBO,SAASO,GAAMP,EAAYO,GAGhC,OAFAP,EAAW,IAAMO,EACjBP,EAAW,IAAMO,EACVP,CACT,CAOO,SAAS2M,GAAgBsD,EAAQC,GACtC,MAAMxP,EAAKuP,EAAO,GAAKC,EAAO,GACxBvP,EAAKsP,EAAO,GAAKC,EAAO,GAC9B,OAAOxP,EAAKA,EAAKC,EAAKA,CACxB,CAOO,SAASwP,GAASF,EAAQC,GAC/B,OAAOrb,KAAKka,KAAKpC,GAAgBsD,EAAQC,GAC3C,CAUO,SAASE,GAAyBpQ,EAAYiP,GACnD,OAAOtC,GAAgB3M,EAAYgP,GAAiBhP,EAAYiP,GAClE,CAgEO,SAASoB,GAAWrQ,EAAYqP,GACrC,OAAOM,GAAO3P,EAAY,WAAYqP,EACxC,CAWO,SAASvH,GAAM9H,EAAY+H,GAChC,GAAIA,EAAWG,WAAY,CACzB,MAAMC,EAAanD,GAAS+C,EAAWE,aACjCqI,EAAaC,GAAcvQ,EAAY+H,EAAYI,GACrDmI,IACFtQ,EAAW,IAAMsQ,EAAanI,EAEjC,CACD,OAAOnI,CACT,CAOO,SAASuQ,GAAcvQ,EAAY+H,EAAYyI,GACpD,MAAMxI,EAAmBD,EAAWE,YACpC,IAAIqI,EAAa,EAUjB,OAREvI,EAAWG,aACVlI,EAAW,GAAKgI,EAAiB,IAAMhI,EAAW,GAAKgI,EAAiB,MAEzEwI,EAAoBA,GAAqBxL,GAASgD,GAClDsI,EAAazb,KAAKuT,OACfpI,EAAW,GAAKgI,EAAiB,IAAMwI,IAGrCF,CACT,CChaO,MAAMG,GAAiB,UAWvB,SAASC,GAAYxR,EAAIM,EAAImR,GAClCA,EAASA,GAAUF,GACnB,MAAMG,EAAOtD,GAAUpO,EAAG,IACpB2R,EAAOvD,GAAU9N,EAAG,IACpBsR,GAAeD,EAAOD,GAAQ,EAC9BG,EAAczD,GAAU9N,EAAG,GAAKN,EAAG,IAAM,EACzChV,EACJ2K,KAAKyL,IAAIwQ,GAAejc,KAAKyL,IAAIwQ,GACjCjc,KAAKyL,IAAIyQ,GACPlc,KAAKyL,IAAIyQ,GACTlc,KAAKwL,IAAIuQ,GACT/b,KAAKwL,IAAIwQ,GACb,OAAO,EAAIF,EAAS9b,KAAKmc,MAAMnc,KAAKka,KAAK7kB,GAAI2K,KAAKka,KAAK,EAAI7kB,GAC7D,CAQA,SAAS+mB,GAAkB9O,EAAawO,GACtC,IAAI3mB,EAAS,EACb,IAAK,IAAIS,EAAI,EAAGuE,EAAKmT,EAAYnY,OAAQS,EAAIuE,EAAK,IAAKvE,EACrDT,GAAU0mB,GAAYvO,EAAY1X,GAAI0X,EAAY1X,EAAI,GAAIkmB,GAE5D,OAAO3mB,CACT,CA0FA,SAASknB,GAAgB/O,EAAawO,GACpC,IAAI5L,EAAO,EACX,MAAMlU,EAAMsR,EAAYnY,OACxB,IAAI2b,EAAKxD,EAAYtR,EAAM,GAAG,GAC1B+U,EAAKzD,EAAYtR,EAAM,GAAG,GAC9B,IAAK,IAAIpG,EAAI,EAAGA,EAAIoG,EAAKpG,IAAK,CAC5B,MAAMob,EAAK1D,EAAY1X,GAAG,GACpBqb,EAAK3D,EAAY1X,GAAG,GAC1Bsa,GACEuI,GAAUzH,EAAKF,IACd,EAAI9Q,KAAKyL,IAAIgN,GAAU1H,IAAO/Q,KAAKyL,IAAIgN,GAAUxH,KACpDH,EAAKE,EACLD,EAAKE,CACN,CACD,OAAQf,EAAO4L,EAASA,EAAU,CACpC,CAiFO,SAAShN,GAAOzE,EAAIiR,EAAUgB,EAASR,GAC5CA,EAASA,GAAUF,GACnB,MAAMG,EAAOtD,GAAUpO,EAAG,IACpBkS,EAAO9D,GAAUpO,EAAG,IACpBmS,EAAOlB,EAAWQ,EAClBW,EAAMzc,KAAK0c,KACf1c,KAAKyL,IAAIsQ,GAAQ/b,KAAKwL,IAAIgR,GACxBxc,KAAKwL,IAAIuQ,GAAQ/b,KAAKyL,IAAI+Q,GAAQxc,KAAKwL,IAAI8Q,IAQ/C,MAAO,CAAC/D,GALNgE,EACAvc,KAAKmc,MACHnc,KAAKyL,IAAI6Q,GAAWtc,KAAKyL,IAAI+Q,GAAQxc,KAAKwL,IAAIuQ,GAC9C/b,KAAKwL,IAAIgR,GAAQxc,KAAKyL,IAAIsQ,GAAQ/b,KAAKyL,IAAIgR,KAEvBlE,GAAUkE,GACpC,CC3PA,MAAME,GAAS,CACbC,KAAM,EACNC,KAAM,EACNvZ,MAAO,EACPwZ,KAAM,GAMR,IAAIC,GAAQJ,GAAOC,KA0BZ,SAASC,MAAQG,GAClBD,GAAQJ,GAAOE,MAGnBI,QAAQJ,QAAQG,EAClB,CAKO,SAAS1Z,MAAS0Z,GACnBD,GAAQJ,GAAOrZ,OAGnB2Z,QAAQ3Z,SAAS0Z,EACnB,CCsCA,IAAIE,IAAwB,EAKrB,SAASC,GAAyBC,GAEvCF,UADyB1iB,IAAZ4iB,GAA+BA,EAE9C,CAQO,SAASC,GAAevG,EAAOC,GACpC,QAAevc,IAAXuc,EACF,IAAK,IAAInhB,EAAI,EAAGuE,EAAK2c,EAAM3hB,OAAQS,EAAIuE,IAAMvE,EAC3CmhB,EAAOnhB,GAAKkhB,EAAMlhB,QAIpBmhB,EAASD,EAAMhf,QAEjB,OAAOif,CACT,CAOO,SAASuG,GAAkBxG,EAAOC,GACvC,QAAevc,IAAXuc,GAAwBD,IAAUC,EAAQ,CAC5C,IAAK,IAAInhB,EAAI,EAAGuE,EAAK2c,EAAM3hB,OAAQS,EAAIuE,IAAMvE,EAC3CmhB,EAAOnhB,GAAKkhB,EAAMlhB,GAEpBkhB,EAAQC,CACT,CACD,OAAOD,CACT,CASO,SAASyG,GAAcrK,GAC5BsK,GAAQtK,EAAWgC,UAAWhC,GAC9BuK,GAAiBvK,EAAYA,EAAYmK,GAC3C,CAKO,SAASK,GAAeC,GAC7BA,EAAYze,QAAQqe,GACtB,CAWO,SAASpgB,GAAIygB,GAClB,MAAiC,iBAAnBA,EACVC,GAA+B,GACL,GAAoB,IACpD,CAsBO,SAAS/I,GAAmB5B,EAAYxC,EAAYgG,EAAOD,GAEhE,IAAIqH,EACJ,MAAM1lB,GAFN8a,EAAa/V,GAAI+V,IAES6C,yBAC1B,GAAI3d,GAEF,GADA0lB,EAAkB1lB,EAAOsY,EAAYgG,GACjCD,GAASA,IAAUvD,EAAWiC,WAAY,CAC5C,MAAMF,EAAgB/B,EAAWkC,mBAC7BH,IACF6I,EACGA,EAAkB7I,EAAiBtB,GAAgB8C,GAEzD,MACI,CACL,MAAMsH,EAAY7K,EAAWiC,WAC7B,GAAkB,WAAb4I,IAA2BtH,GAAmB,WAATA,EACxCqH,EAAkBpN,MACb,CAIL,MAAMuG,EAAa+G,GACjB9K,EACA/V,GAAI,cAEN,GAAI8Z,IAAeqG,IAAmC,YAAdS,EAEtCD,EAAkBpN,EAAawC,EAAWkC,uBACrC,CACL,IAAI6I,EAAW,CACbvH,EAAM,GAAKhG,EAAa,EACxBgG,EAAM,GACNA,EAAM,GAAKhG,EAAa,EACxBgG,EAAM,GACNA,EAAM,GACNA,EAAM,GAAKhG,EAAa,EACxBgG,EAAM,GACNA,EAAM,GAAKhG,EAAa,GAE1BuN,EAAWhH,EAAWgH,EAAUA,EAAU,GAG1CH,GAFcjC,GAAYoC,EAASnmB,MAAM,EAAG,GAAImmB,EAASnmB,MAAM,EAAG,IACnD+jB,GAAYoC,EAASnmB,MAAM,EAAG,GAAImmB,EAASnmB,MAAM,EAAG,KAC9B,CACtC,CACD,MAAMmd,EAAgBwB,EAClB9C,GAAgB8C,GAChBvD,EAAWkC,wBACO5a,IAAlBya,IACF6I,GAAmB7I,EAEtB,CACF,CACD,OAAO6I,CACT,CASO,SAASI,GAAyBP,GACvCD,GAAeC,GACfA,EAAYze,SAAQ,SAAUjB,GAC5B0f,EAAYze,SAAQ,SAAUuY,GACxBxZ,IAAWwZ,GACbgG,GAAiBxf,EAAQwZ,EAAa4F,GAE9C,GACA,GACA,CAeO,SAASc,GACdC,EACAC,EACAC,EACAC,GAEAH,EAAalf,SAAQ,SAAUsf,GAC7BH,EAAanf,SAAQ,SAAUuf,GAC7BhB,GAAiBe,EAAaC,EAAaH,GAC3Cb,GAAiBgB,EAAaD,EAAaD,EACjD,GACA,GACA,CAeO,SAASG,GAAiBxL,EAAYyL,GAC3C,OAAKzL,EAGqB,iBAAfA,EACF/V,GAAI+V,GAEb,EALS/V,GAAIwhB,EAMf,CASO,SAASC,GAAuCC,GACrD,OAAA,SAOY/H,EAAOC,EAAQC,GACvB,MAAM7hB,EAAS2hB,EAAM3hB,OACrB6hB,OAA0Bxc,IAAdwc,EAA0BA,EAAY,EAClDD,OAAoBvc,IAAXuc,EAAuBA,EAAS,IAAI1gB,MAAMlB,GACnD,IAAK,IAAIS,EAAI,EAAGA,EAAIT,EAAQS,GAAKohB,EAAW,CAC1C,MAAMN,EAAQmI,EAAe/H,EAAMhf,MAAMlC,EAAGA,EAAIohB,IAC1C8H,EAAcpI,EAAMvhB,OAC1B,IAAK,IAAIijB,EAAI,EAAG2G,EAAK/H,EAAWoB,EAAI2G,IAAM3G,EACxCrB,EAAOnhB,EAAIwiB,GAAKA,GAAK0G,EAAchI,EAAMlhB,EAAIwiB,GAAK1B,EAAM0B,EAE3D,CACD,OAAOrB,CAET,CACJ,CAwBO,SAASiI,GAAwB/gB,EAAQwZ,EAAawH,EAASC,GACpE,MAAMC,EAAahiB,GAAIc,GACjBmhB,EAAWjiB,GAAIsa,GACrBgG,GACE0B,EACAC,EACAR,GAAuCK,IAEzCxB,GACE2B,EACAD,EACAP,GAAuCM,GAE3C,CAoDO,SAASG,GAAWb,EAAaC,GACtC,GAAID,IAAgBC,EAClB,OAAO,EAET,MAAMa,EAAad,EAAYrJ,aAAesJ,EAAYtJ,WAC1D,GAAIqJ,EAAYtJ,YAAcuJ,EAAYvJ,UACxC,OAAOoK,EAGT,OADsBtB,GAA4BQ,EAAaC,KACtCpB,IAAkBiC,CAC7C,CAWO,SAAStB,GACduB,EACAC,GAIA,IAAIC,EAAgBC,GAFDH,EAAiBrK,UACZsK,EAAsBtK,WAK9C,OAHKuK,IACHA,EAAgBnC,IAEXmC,CACT,CAYO,SAASE,GAAa1hB,EAAQwZ,GAGnC,OAAOuG,GAFkB7gB,GAAIc,GACCd,GAAIsa,GAEpC,CAgBO,SAAS1N,GAAUoB,EAAYlN,EAAQwZ,GAE5C,OADsBkI,GAAa1hB,EAAQwZ,EACpCgI,CAActU,OAAY3Q,EAAW2Q,EAAWhW,OACzD,CAcO,SAASyqB,GAAgBrS,EAAQtP,EAAQwZ,EAAa7E,GAE3D,OAAOF,GAAenF,EADAoS,GAAa1hB,EAAQwZ,QACEjd,EAAWoY,EAC1D,CAyBA,IAAIiN,GAAiB,KASd,SAASC,GAAkB5M,GAChC2M,GAAiB1iB,GAAI+V,EACvB,CAeO,SAAS6M,KACd,OAAOF,EACT,CAmBO,SAASG,GAAiB7U,EAAYoU,GAC3C,OAAKM,GAGE9V,GAAUoB,EAAYoU,EAAkBM,IAFtC1U,CAGX,CASO,SAAS8U,GAAmB9U,EAAY+U,GAC7C,OAAKL,GAgBE9V,GAAUoB,EAAY0U,GAAgBK,IAdzChD,KACC3mB,GAAO4U,EAAY,CAAC,EAAG,KACxBA,EAAW,KAAO,KAClBA,EAAW,IAAM,KACjBA,EAAW,KAAO,IAClBA,EAAW,IAAM,KAEjB+R,IAAwB,EACxBL,GACE,2FAGG1R,EAGX,CASO,SAASgV,GAAa5S,EAAQgS,GACnC,OAAKM,GAGED,GAAgBrS,EAAQgS,EAAkBM,IAFxCtS,CAGX,CASO,SAAS6S,GAAe7S,EAAQ2S,GACrC,OAAKL,GAGED,GAAgBrS,EAAQsS,GAAgBK,GAFtC3S,CAGX,CAUO,SAAS8S,GAAiB3P,EAAY6O,GAC3C,IAAKM,GACH,OAAOnP,EAET,MAAM4P,EAAsBnjB,GAAIoiB,GAAkBnK,mBAC5CmL,EAAoBV,GAAezK,mBACzC,OAAOkL,GAAuBC,EACzB7P,EAAa4P,EAAuBC,EACrC7P,CACN,CAUO,SAAS8P,GAAmB9P,EAAYwP,GAC7C,IAAKL,GACH,OAAOnP,EAET,MAAM+P,EAAoBtjB,GAAI+iB,GAAgB9K,mBACxCmL,EAAoBV,GAAezK,mBACzC,OAAOqL,GAAqBF,EACvB7P,EAAa6P,EAAqBE,EACnC/P,CACN,CAYO,SAASgQ,GAA8BvB,EAAYC,EAAUrV,GAClE,OAAO,SAAU4W,GACf,IAAIC,EAAanF,EACjB,GAAI0D,EAAW9L,WAAY,CACzB,MAAMwN,EAAe1B,EAAW/L,YAC1BuI,EAAoBxL,GAAS0Q,GAEnCpF,EAAaC,GADbiF,EAAQA,EAAM7oB,MAAM,GACcqnB,EAAYxD,GAC1CF,IAEFkF,EAAM,GAAKA,EAAM,GAAKlF,EAAaE,GAErCgF,EAAM,GAAK/I,GAAM+I,EAAM,GAAIE,EAAa,GAAIA,EAAa,IACzDF,EAAM,GAAK/I,GAAM+I,EAAM,GAAIE,EAAa,GAAIA,EAAa,IACzDD,EAAc7W,EAAU4W,EAC9B,MACMC,EAAc7W,EAAU4W,GAM1B,OAJIlF,GAAc2D,EAAS/L,aAEzBuN,EAAY,IAAMnF,EAAatL,GAASiP,EAAShM,cAE5CwN,CACX,CACA,CAOO,SAASE,KAGd5C,GAAyB6C,IACzB7C,GAAyB8C,IAGzB7C,GACE6C,GACAD,GACAlK,GACAI,GAEJ,CC/tBO,SAASgK,GACdpS,EACAC,EACA9Y,EACA+Y,EACAhF,EACA4D,GAEAA,EAAOA,GAAc,GACrB,IAAI/X,EAAI,EACR,IAAK,IAAIwiB,EAAItJ,EAAQsJ,EAAIpiB,EAAKoiB,GAAKrJ,EAAQ,CACzC,MAAM3D,EAAIyD,EAAgBuJ,GACpB/M,EAAIwD,EAAgBuJ,EAAI,GAC9BzK,EAAK/X,KAAOmU,EAAU,GAAKqB,EAAIrB,EAAU,GAAKsB,EAAItB,EAAU,GAC5D4D,EAAK/X,KAAOmU,EAAU,GAAKqB,EAAIrB,EAAU,GAAKsB,EAAItB,EAAU,EAC7D,CAID,OAHI4D,GAAQA,EAAKxY,QAAUS,IACzB+X,EAAKxY,OAASS,GAET+X,CACT,CAYO,SAASrC,GACduD,EACAC,EACA9Y,EACA+Y,EACAxD,EACA2V,EACAvT,GAEAA,EAAOA,GAAc,GACrB,MAAMnC,EAAMxL,KAAKwL,IAAID,GACfE,EAAMzL,KAAKyL,IAAIF,GACf4V,EAAUD,EAAO,GACjBE,EAAUF,EAAO,GACvB,IAAItrB,EAAI,EACR,IAAK,IAAIwiB,EAAItJ,EAAQsJ,EAAIpiB,EAAKoiB,GAAKrJ,EAAQ,CACzC,MAAMiD,EAASnD,EAAgBuJ,GAAK+I,EAC9BlP,EAASpD,EAAgBuJ,EAAI,GAAKgJ,EACxCzT,EAAK/X,KAAOurB,EAAUnP,EAASxG,EAAMyG,EAASxG,EAC9CkC,EAAK/X,KAAOwrB,EAAUpP,EAASvG,EAAMwG,EAASzG,EAC9C,IAAK,IAAI8M,EAAIF,EAAI,EAAGE,EAAIF,EAAIrJ,IAAUuJ,EACpC3K,EAAK/X,KAAOiZ,EAAgByJ,EAE/B,CAID,OAHI3K,GAAQA,EAAKxY,QAAUS,IACzB+X,EAAKxY,OAASS,GAET+X,CACT,CAcO,SAASjC,GACdmD,EACAC,EACA9Y,EACA+Y,EACA7C,EACAC,EACA+U,EACAvT,GAEAA,EAAOA,GAAc,GACrB,MAAMwT,EAAUD,EAAO,GACjBE,EAAUF,EAAO,GACvB,IAAItrB,EAAI,EACR,IAAK,IAAIwiB,EAAItJ,EAAQsJ,EAAIpiB,EAAKoiB,GAAKrJ,EAAQ,CACzC,MAAMiD,EAASnD,EAAgBuJ,GAAK+I,EAC9BlP,EAASpD,EAAgBuJ,EAAI,GAAKgJ,EACxCzT,EAAK/X,KAAOurB,EAAUjV,EAAK8F,EAC3BrE,EAAK/X,KAAOwrB,EAAUjV,EAAK8F,EAC3B,IAAK,IAAIqG,EAAIF,EAAI,EAAGE,EAAIF,EAAIrJ,IAAUuJ,EACpC3K,EAAK/X,KAAOiZ,EAAgByJ,EAE/B,CAID,OAHI3K,GAAQA,EAAKxY,QAAUS,IACzB+X,EAAKxY,OAASS,GAET+X,CACT,CAYO,SAAS/B,GACdiD,EACAC,EACA9Y,EACA+Y,EACAiD,EACAC,EACAtE,GAEAA,EAAOA,GAAc,GACrB,IAAI/X,EAAI,EACR,IAAK,IAAIwiB,EAAItJ,EAAQsJ,EAAIpiB,EAAKoiB,GAAKrJ,EAAQ,CACzCpB,EAAK/X,KAAOiZ,EAAgBuJ,GAAKpG,EACjCrE,EAAK/X,KAAOiZ,EAAgBuJ,EAAI,GAAKnG,EACrC,IAAK,IAAIqG,EAAIF,EAAI,EAAGE,EAAIF,EAAIrJ,IAAUuJ,EACpC3K,EAAK/X,KAAOiZ,EAAgByJ,EAE/B,CAID,OAHI3K,GAAQA,EAAKxY,QAAUS,IACzB+X,EAAKxY,OAASS,GAET+X,CACT,CD0lBAmT,KE3sBA,MAAMO,GhBCG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GgBoTzB,IAAAC,GAvSA,cAAuB9iB,EACrB,WAAA1K,GACEmF,QAMAjF,KAAKqgB,Qd2IA,CAAC7F,IAAUA,KAAU,KAAW,KcrIrCxa,KAAKutB,iBAAmB,EAMxBvtB,KAAKwtB,yCAA2C,EAMhDxtB,KAAKytB,2BAA6B,EAUlCztB,KAAK0tB,4BAA8BpqB,GACjC,CAACqqB,EAAUC,EAAkB7X,KAC3B,IAAKA,EACH,OAAO/V,KAAK6tB,sBAAsBD,GAEpC,MAAM9Y,EAAQ9U,KAAK8U,QAEnB,OADAA,EAAM4J,eAAe3I,GACdjB,EAAM+Y,sBAAsBD,EAAiB,GAGzD,CASD,mBAAAE,CAAoBF,EAAkB7X,GACpC,OAAO/V,KAAK0tB,4BACV1tB,KAAK8H,cACL8lB,EACA7X,EAEH,CAOD,KAAAjB,GACE,OAAOxM,GACR,CAUD,cAAAylB,CAAe3W,EAAGC,EAAG2W,EAAcC,GACjC,OAAO3lB,GACR,CAOD,UAAAwR,CAAW1C,EAAGC,GACZ,MAAMsV,EAAQ3sB,KAAKkuB,gBAAgB,CAAC9W,EAAGC,IACvC,OAAOsV,EAAM,KAAOvV,GAAKuV,EAAM,KAAOtV,CACvC,CAUD,eAAA6W,CAAgBxL,EAAOsL,GAGrB,OAFAA,EAAeA,GAA8B,CAACG,IAAKA,KACnDnuB,KAAK+tB,eAAerL,EAAM,GAAIA,EAAM,GAAIsL,EAAcxT,KAC/CwT,CACR,CASD,oBAAAI,CAAqBjX,GACnB,OAAOnX,KAAK8Z,WAAW3C,EAAW,GAAIA,EAAW,GAClD,CAQD,aAAAkX,CAAc9U,GACZ,OAAOjR,GACR,CAQD,SAAA8W,CAAU7F,GACR,GAAIvZ,KAAKutB,iBAAmBvtB,KAAK8H,cAAe,CAC9C,MAAMyR,EAASvZ,KAAKquB,cAAcruB,KAAKqgB,UACnCiO,MAAM/U,EAAO,KAAO+U,MAAM/U,EAAO,MACnCmB,GAAoBnB,GAEtBvZ,KAAKutB,gBAAkBvtB,KAAK8H,aAC7B,CACD,OAAOgW,GAAe9d,KAAKqgB,QAAS9G,EACrC,CAUD,MAAAjC,CAAOC,EAAO2V,GACZ5kB,GACD,CAYD,KAAAoP,CAAMQ,EAAIC,EAAI+U,GACZ5kB,GACD,CAWD,QAAAimB,CAASrT,GACP,OAAOlb,KAAK6tB,sBAAsB3S,EAAYA,EAC/C,CAUD,qBAAA2S,CAAsBD,GACpB,OAAOtlB,GACR,CAOD,OAAAkmB,GACE,OAAOlmB,GACR,CAWD,cAAAoW,CAAeC,GACbrW,GACD,CAQD,gBAAAmmB,CAAiBlV,GACf,OAAOjR,GACR,CAUD,SAAAsP,CAAUoG,EAAQC,GAChB3V,GACD,CAiBD,SAAAyN,CAAU9L,EAAQwZ,GAEhB,MAAM0H,EAAauD,GAAczkB,GAC3B0U,EACqB,eAAzBwM,EAAWhK,WACP,SAAUwN,EAAeC,EAAgB7T,GACvC,MAAM8T,EAAc1D,EAAW/L,YACzB0P,EAAkB3D,EAAW9J,iBAC7B3J,EAAQ0E,GAAU0S,GAAmB1S,GAAUyS,GAmBrD,OAlBAE,GACE1B,GACAyB,EAAgB,GAChBA,EAAgB,GAChBpX,GACCA,EACD,EACA,EACA,GAEFuV,GACE0B,EACA,EACAA,EAAcxtB,OACd4Z,EACAsS,GACAuB,GAEKjD,GAAaR,EAAY1H,EAAzBkI,CACLgD,EACAC,EACA7T,EAEH,EACD4Q,GAAaR,EAAY1H,GAE/B,OADAzjB,KAAK0e,eAAeC,GACb3e,IACR,GC5CI,SAASgvB,GAAmBjU,GACjC,IAAIkU,EAQJ,OAPc,GAAVlU,EACFkU,EAAS,KACU,GAAVlU,EACTkU,EAAS,MACU,GAAVlU,IACTkU,EAAS,QAEX,CACF,CAMO,SAASC,GAAmBD,GACjC,IAAIlU,EAQJ,MAPc,MAAVkU,EACFlU,EAAS,EACU,OAAVkU,GAA6B,OAAVA,EAC5BlU,EAAS,EACU,QAAVkU,IACTlU,EAAS,GAEX,CACF,CAQO,SAASoU,GAAgBC,EAAgBrZ,EAAW4D,GACzD,MAAMkB,EAAkBuU,EAAeC,qBACvC,IAAKxU,EACH,OAAO,KAET,MAAME,EAASqU,EAAeE,YAC9B,OAAOrC,GACLpS,EACA,EACAA,EAAgB1Z,OAChB4Z,EACAhF,EACA4D,EAEJ,CAEA,IAAA4V,GA3UA,cAA6BC,GAC3B,WAAA1vB,GACEmF,QAMAjF,KAAKivB,OAAS,KAMdjvB,KAAK+a,OAAS,EAMd/a,KAAK6a,eACN,CAOD,aAAAwT,CAAc9U,GACZ,OAAOqB,GACL5a,KAAK6a,gBACL,EACA7a,KAAK6a,gBAAgB1Z,OACrBnB,KAAK+a,OACLxB,EAEH,CAMD,cAAAkW,GACE,OAAOnnB,GACR,CAOD,kBAAAonB,GACE,OAAO1vB,KAAK6a,gBAAgB/W,MAAM,EAAG9D,KAAK+a,OAC3C,CAKD,kBAAAsU,GACE,OAAOrvB,KAAK6a,eACb,CAOD,iBAAA8U,GACE,OAAO3vB,KAAK6a,gBAAgB/W,MAC1B9D,KAAK6a,gBAAgB1Z,OAASnB,KAAK+a,OAEtC,CAOD,SAAA6U,GACE,OAAO5vB,KAAKivB,MACb,CAOD,qBAAApB,CAAsBD,GAOpB,GANI5tB,KAAKytB,6BAA+BztB,KAAK8H,gBAC3C9H,KAAKwtB,yCAA2C,EAChDxtB,KAAKytB,2BAA6BztB,KAAK8H,eAKvC8lB,EAAmB,GACgC,IAAlD5tB,KAAKwtB,0CACJI,GAAoB5tB,KAAKwtB,yCAE3B,OAAOxtB,KAGT,MAAM6vB,EACJ7vB,KAAK8vB,8BAA8BlC,GAErC,OADkCiC,EAAmBR,qBACvBluB,OAASnB,KAAK6a,gBAAgB1Z,OACnD0uB,GAQT7vB,KAAKwtB,yCAA2CI,EACzC5tB,KACR,CAOD,6BAAA8vB,CAA8BlC,GAC5B,OAAO5tB,IACR,CAKD,SAAAsvB,GACE,OAAOtvB,KAAK+a,MACb,CAMD,kBAAAgV,CAAmBd,EAAQpU,GACzB7a,KAAK+a,OAASmU,GAAmBD,GACjCjvB,KAAKivB,OAASA,EACdjvB,KAAK6a,gBAAkBA,CACxB,CAOD,cAAAmV,CAAe1W,EAAa2V,GAC1B3mB,GACD,CAQD,SAAA2nB,CAAUhB,EAAQ3V,EAAa4W,GAC7B,IAAInV,EACJ,GAAIkU,EACFlU,EAASmU,GAAmBD,OACvB,CACL,IAAK,IAAIrtB,EAAI,EAAGA,EAAIsuB,IAAWtuB,EAAG,CAChC,GAA2B,IAAvB0X,EAAYnY,OAGd,OAFAnB,KAAKivB,OAAS,UACdjvB,KAAK+a,OAAS,GAGhBzB,EAA6CA,EAAY,EAC1D,CACDyB,EAASzB,EAAYnY,OACrB8tB,EAASD,GAAmBjU,EAC7B,CACD/a,KAAKivB,OAASA,EACdjvB,KAAK+a,OAASA,CACf,CAWD,cAAA2D,CAAeC,GACT3e,KAAK6a,kBACP8D,EAAY3e,KAAK6a,gBAAiB7a,KAAK6a,gBAAiB7a,KAAK+a,QAC7D/a,KAAK6H,UAER,CASD,MAAAyP,CAAOC,EAAO2V,GACZ,MAAMrS,EAAkB7a,KAAKqvB,qBAC7B,GAAIxU,EAAiB,CACnB,MAAME,EAAS/a,KAAKsvB,YACpBhY,GACEuD,EACA,EACAA,EAAgB1Z,OAChB4Z,EACAxD,EACA2V,EACArS,GAEF7a,KAAK6H,SACN,CACF,CAWD,KAAA6P,CAAMQ,EAAIC,EAAI+U,QACD1mB,IAAP2R,IACFA,EAAKD,GAEFgV,IACHA,EAAS7Q,GAAUrc,KAAKof,cAE1B,MAAMvE,EAAkB7a,KAAKqvB,qBAC7B,GAAIxU,EAAiB,CACnB,MAAME,EAAS/a,KAAKsvB,YACpB5X,GACEmD,EACA,EACAA,EAAgB1Z,OAChB4Z,EACA7C,EACAC,EACA+U,EACArS,GAEF7a,KAAK6H,SACN,CACF,CASD,SAAA+P,CAAUoG,EAAQC,GAChB,MAAMpD,EAAkB7a,KAAKqvB,qBAC7B,GAAIxU,EAAiB,CACnB,MAAME,EAAS/a,KAAKsvB,YACpB1X,GACEiD,EACA,EACAA,EAAgB1Z,OAChB4Z,EACAiD,EACAC,EACApD,GAEF7a,KAAK6H,SACN,CACF,GCjRH,SAASsoB,GACPtV,EACAuV,EACAC,EACAtV,EACA3D,EACAC,EACA2W,GAEA,MAAMlR,EAAKjC,EAAgBuV,GACrBrT,EAAKlC,EAAgBuV,EAAU,GAC/BvY,EAAKgD,EAAgBwV,GAAWvT,EAChChF,EAAK+C,EAAgBwV,EAAU,GAAKtT,EAC1C,IAAIjC,EACJ,GAAW,IAAPjD,GAAmB,IAAPC,EACdgD,EAASsV,MACJ,CACL,MAAMrkB,IAAMqL,EAAI0F,GAAMjF,GAAMR,EAAI0F,GAAMjF,IAAOD,EAAKA,EAAKC,EAAKA,GAC5D,GAAI/L,EAAI,EACN+O,EAASuV,MACJ,IAAItkB,EAAI,EAAG,CAChB,IAAK,IAAInK,EAAI,EAAGA,EAAImZ,IAAUnZ,EAC5BosB,EAAapsB,GAAKgjB,GAChB/J,EAAgBuV,EAAUxuB,GAC1BiZ,EAAgBwV,EAAUzuB,GAC1BmK,GAIJ,YADAiiB,EAAa7sB,OAAS4Z,EAE5B,CACMD,EAASsV,CACV,CACF,CACD,IAAK,IAAIxuB,EAAI,EAAGA,EAAImZ,IAAUnZ,EAC5BosB,EAAapsB,GAAKiZ,EAAgBC,EAASlZ,GAE7CosB,EAAa7sB,OAAS4Z,CACxB,CAYO,SAASuV,GAAgBzV,EAAiBC,EAAQ9Y,EAAK+Y,EAAQU,GACpE,IAAIqB,EAAKjC,EAAgBC,GACrBiC,EAAKlC,EAAgBC,EAAS,GAClC,IAAKA,GAAUC,EAAQD,EAAS9Y,EAAK8Y,GAAUC,EAAQ,CACrD,MAAMiC,EAAKnC,EAAgBC,GACrBmC,EAAKpC,EAAgBC,EAAS,GAC9ByV,EAAeC,GAAU1T,EAAIC,EAAIC,EAAIC,GACvCsT,EAAe9U,IACjBA,EAAM8U,GAERzT,EAAKE,EACLD,EAAKE,CACN,CACD,OAAOxB,CACT,CAUO,SAASgV,GACd5V,EACAC,EACA4V,EACA3V,EACAU,GAEA,IAAK,IAAI7Z,EAAI,EAAGuE,EAAKuqB,EAAKvvB,OAAQS,EAAIuE,IAAMvE,EAAG,CAC7C,MAAMI,EAAM0uB,EAAK9uB,GACjB6Z,EAAM6U,GAAgBzV,EAAiBC,EAAQ9Y,EAAK+Y,EAAQU,GAC5DX,EAAS9Y,CACV,CACD,OAAOyZ,CACT,CAUO,SAASkV,GACd9V,EACAC,EACA8V,EACA7V,EACAU,GAEA,IAAK,IAAI7Z,EAAI,EAAGuE,EAAKyqB,EAAMzvB,OAAQS,EAAIuE,IAAMvE,EAAG,CAC9C,MAAM8uB,EAAOE,EAAMhvB,GACnB6Z,EAAMgV,GAAqB5V,EAAiBC,EAAQ4V,EAAM3V,EAAQU,GAClEX,EAAS4V,EAAKA,EAAKvvB,OAAS,EAC7B,CACD,OAAOsa,CACT,CAgBO,SAASoV,GACdhW,EACAC,EACA9Y,EACA+Y,EACA+V,EACAC,EACA3Z,EACAC,EACA2W,EACAC,EACA+C,GAEA,GAAIlW,GAAU9Y,EACZ,OAAOisB,EAET,IAAIrsB,EAAGkiB,EACP,GAAiB,IAAbgN,EAAgB,CAQlB,GANAhN,EAAkB0M,GAChBpZ,EACAC,EACAwD,EAAgBC,GAChBD,EAAgBC,EAAS,IAEvBgJ,EAAkBmK,EAAoB,CACxC,IAAKrsB,EAAI,EAAGA,EAAImZ,IAAUnZ,EACxBosB,EAAapsB,GAAKiZ,EAAgBC,EAASlZ,GAG7C,OADAosB,EAAa7sB,OAAS4Z,EACf+I,CACR,CACD,OAAOmK,CACR,CACD+C,EAAWA,GAAsB,CAAC7C,IAAKA,KACvC,IAAIlrB,EAAQ6X,EAASC,EACrB,KAAO9X,EAAQjB,GAWb,GAVAmuB,GACEtV,EACA5X,EAAQ8X,EACR9X,EACA8X,EACA3D,EACAC,EACA2Z,GAEFlN,EAAkB0M,GAAUpZ,EAAGC,EAAG2Z,EAAS,GAAIA,EAAS,IACpDlN,EAAkBmK,EAAoB,CAExC,IADAA,EAAqBnK,EAChBliB,EAAI,EAAGA,EAAImZ,IAAUnZ,EACxBosB,EAAapsB,GAAKovB,EAASpvB,GAE7BosB,EAAa7sB,OAAS4Z,EACtB9X,GAAS8X,CACf,MAWM9X,GACE8X,EACA/O,KAAKyP,KACDzP,KAAKka,KAAKpC,GAAmB9X,KAAKka,KAAK+H,IACvC6C,EACA,EACF,GAIR,GAAIC,IAEFZ,GACEtV,EACA7Y,EAAM+Y,EACND,EACAC,EACA3D,EACAC,EACA2Z,GAEFlN,EAAkB0M,GAAUpZ,EAAGC,EAAG2Z,EAAS,GAAIA,EAAS,IACpDlN,EAAkBmK,GAAoB,CAExC,IADAA,EAAqBnK,EAChBliB,EAAI,EAAGA,EAAImZ,IAAUnZ,EACxBosB,EAAapsB,GAAKovB,EAASpvB,GAE7BosB,EAAa7sB,OAAS4Z,CACvB,CAEH,OAAOkT,CACT,CAgBO,SAASgD,GACdpW,EACAC,EACA4V,EACA3V,EACA+V,EACAC,EACA3Z,EACAC,EACA2W,EACAC,EACA+C,GAEAA,EAAWA,GAAsB,CAAC7C,IAAKA,KACvC,IAAK,IAAIvsB,EAAI,EAAGuE,EAAKuqB,EAAKvvB,OAAQS,EAAIuE,IAAMvE,EAAG,CAC7C,MAAMI,EAAM0uB,EAAK9uB,GACjBqsB,EAAqB4C,GACnBhW,EACAC,EACA9Y,EACA+Y,EACA+V,EACAC,EACA3Z,EACAC,EACA2W,EACAC,EACA+C,GAEFlW,EAAS9Y,CACV,CACD,OAAOisB,CACT,CAgBO,SAASiD,GACdrW,EACAC,EACA8V,EACA7V,EACA+V,EACAC,EACA3Z,EACAC,EACA2W,EACAC,EACA+C,GAEAA,EAAWA,GAAsB,CAAC7C,IAAKA,KACvC,IAAK,IAAIvsB,EAAI,EAAGuE,EAAKyqB,EAAMzvB,OAAQS,EAAIuE,IAAMvE,EAAG,CAC9C,MAAM8uB,EAAOE,EAAMhvB,GACnBqsB,EAAqBgD,GACnBpW,EACAC,EACA4V,EACA3V,EACA+V,EACAC,EACA3Z,EACAC,EACA2W,EACAC,EACA+C,GAEFlW,EAAS4V,EAAKA,EAAKvvB,OAAS,EAC7B,CACD,OAAO8sB,CACT,CCpUO,SAASkD,GAAkBtW,EAAiBC,EAAQ3D,EAAY4D,GACrE,IAAK,IAAInZ,EAAI,EAAGuE,EAAKgR,EAAWhW,OAAQS,EAAIuE,IAAMvE,EAChDiZ,EAAgBC,KAAY3D,EAAWvV,GAEzC,OAAOkZ,CACT,CASO,SAASsW,GACdvW,EACAC,EACAxB,EACAyB,GAEA,IAAK,IAAInZ,EAAI,EAAGuE,EAAKmT,EAAYnY,OAAQS,EAAIuE,IAAMvE,EAAG,CACpD,MAAMuV,EAAamC,EAAY1X,GAC/B,IAAK,IAAIwiB,EAAI,EAAGA,EAAIrJ,IAAUqJ,EAC5BvJ,EAAgBC,KAAY3D,EAAWiN,EAE1C,CACD,OAAOtJ,CACT,CAUO,SAASuW,GACdxW,EACAC,EACAwW,EACAvW,EACA2V,GAEAA,EAAOA,GAAc,GACrB,IAAI9uB,EAAI,EACR,IAAK,IAAIwiB,EAAI,EAAG2G,EAAKuG,EAAanwB,OAAQijB,EAAI2G,IAAM3G,EAAG,CACrD,MAAMpiB,EAAMovB,GACVvW,EACAC,EACAwW,EAAalN,GACbrJ,GAEF2V,EAAK9uB,KAAOI,EACZ8Y,EAAS9Y,CACV,CAED,OADA0uB,EAAKvvB,OAASS,EACP8uB,CACT,CAUO,SAASa,GACd1W,EACAC,EACA0W,EACAzW,EACA6V,GAEAA,EAAQA,GAAgB,GACxB,IAAIhvB,EAAI,EACR,IAAK,IAAIwiB,EAAI,EAAG2G,EAAKyG,EAAcrwB,OAAQijB,EAAI2G,IAAM3G,EAAG,CACtD,MAAMsM,EAAOW,GACXxW,EACAC,EACA0W,EAAcpN,GACdrJ,EACA6V,EAAMhvB,IAEY,IAAhB8uB,EAAKvvB,SACPuvB,EAAK,GAAK5V,GAEZ8V,EAAMhvB,KAAO8uB,EACb5V,EAAS4V,EAAKA,EAAKvvB,OAAS,EAC7B,CAED,OADAyvB,EAAMzvB,OAASS,EACRgvB,CACT,CCdO,SAASa,GACd5W,EACAC,EACA9Y,EACA+Y,EACA6S,EACA8D,EACAC,GAEA,MAAMhwB,GAAKK,EAAM8Y,GAAUC,EAC3B,GAAIpZ,EAAI,EAAG,CACT,KAAOmZ,EAAS9Y,EAAK8Y,GAAUC,EAC7B2W,EAA0BC,KAAsB9W,EAAgBC,GAChE4W,EAA0BC,KACxB9W,EAAgBC,EAAS,GAE7B,OAAO6W,CACR,CAED,MAAMC,EAAU,IAAIvvB,MAAMV,GAC1BiwB,EAAQ,GAAK,EACbA,EAAQjwB,EAAI,GAAK,EAEjB,MAAMkwB,EAAQ,CAAC/W,EAAQ9Y,EAAM+Y,GAC7B,IAAI9X,EAAQ,EACZ,KAAO4uB,EAAM1wB,OAAS,GAAG,CACvB,MAAM2wB,EAAOD,EAAM5mB,MACb8mB,EAAQF,EAAM5mB,MACpB,IAAI+mB,EAAqB,EACzB,MAAMlV,EAAKjC,EAAgBkX,GACrBhV,EAAKlC,EAAgBkX,EAAQ,GAC7B/U,EAAKnC,EAAgBiX,GACrB7U,EAAKpC,EAAgBiX,EAAO,GAClC,IAAK,IAAIlwB,EAAImwB,EAAQhX,EAAQnZ,EAAIkwB,EAAMlwB,GAAKmZ,EAAQ,CAClD,MAEM+I,EAAkBD,GAFdhJ,EAAgBjZ,GAChBiZ,EAAgBjZ,EAAI,GACuBkb,EAAIC,EAAIC,EAAIC,GAC7D6G,EAAkBkO,IACpB/uB,EAAQrB,EACRowB,EAAqBlO,EAExB,CACGkO,EAAqBpE,IACvBgE,GAAS3uB,EAAQ6X,GAAUC,GAAU,EACjCgX,EAAQhX,EAAS9X,GACnB4uB,EAAMlsB,KAAKosB,EAAO9uB,GAEhBA,EAAQ8X,EAAS+W,GACnBD,EAAMlsB,KAAK1C,EAAO6uB,GAGvB,CACD,IAAK,IAAIlwB,EAAI,EAAGA,EAAID,IAAKC,EACnBgwB,EAAQhwB,KACV8vB,EAA0BC,KACxB9W,EAAgBC,EAASlZ,EAAImZ,GAC/B2W,EAA0BC,KACxB9W,EAAgBC,EAASlZ,EAAImZ,EAAS,IAG5C,OAAO4W,CACT,CAcO,SAASM,GACdpX,EACAC,EACA4V,EACA3V,EACA6S,EACA8D,EACAC,EACAO,GAEA,IAAK,IAAItwB,EAAI,EAAGuE,EAAKuqB,EAAKvvB,OAAQS,EAAIuE,IAAMvE,EAAG,CAC7C,MAAMI,EAAM0uB,EAAK9uB,GACjB+vB,EAAmBF,GACjB5W,EACAC,EACA9Y,EACA+Y,EACA6S,EACA8D,EACAC,GAEFO,EAAevsB,KAAKgsB,GACpB7W,EAAS9Y,CACV,CACD,OAAO2vB,CACT,CAuDO,SAASQ,GACdtX,EACAC,EACA9Y,EACA+Y,EACA6S,EACA8D,EACAC,GAEA,GAAI3vB,GAAO8Y,EAASC,EAAQ,CAE1B,KAAOD,EAAS9Y,EAAK8Y,GAAUC,EAC7B2W,EAA0BC,KAAsB9W,EAAgBC,GAChE4W,EAA0BC,KACxB9W,EAAgBC,EAAS,GAE7B,OAAO6W,CACR,CACD,IAAI7U,EAAKjC,EAAgBC,GACrBiC,EAAKlC,EAAgBC,EAAS,GAElC4W,EAA0BC,KAAsB7U,EAChD4U,EAA0BC,KAAsB5U,EAChD,IAAIC,EAAKF,EACLG,EAAKF,EACT,IAAKjC,GAAUC,EAAQD,EAAS9Y,EAAK8Y,GAAUC,EAC7CiC,EAAKnC,EAAgBC,GACrBmC,EAAKpC,EAAgBC,EAAS,GAC1BgJ,GAAgBhH,EAAIC,EAAIC,EAAIC,GAAM2Q,IAEpC8D,EAA0BC,KAAsB3U,EAChD0U,EAA0BC,KAAsB1U,EAChDH,EAAKE,EACLD,EAAKE,GAQT,OALID,GAAMF,GAAMG,GAAMF,IAEpB2U,EAA0BC,KAAsB3U,EAChD0U,EAA0BC,KAAsB1U,GAE3C0U,CACT,CAOO,SAASS,GAAK/tB,EAAO6W,GAC1B,OAAOA,EAAYlP,KAAKgZ,MAAM3gB,EAAQ6W,EACxC,CAqBO,SAASmX,GACdxX,EACAC,EACA9Y,EACA+Y,EACAG,EACAwW,EACAC,GAGA,GAAI7W,GAAU9Y,EACZ,OAAO2vB,EAGT,IAQI3U,EAAIC,EARJH,EAAKsV,GAAKvX,EAAgBC,GAASI,GACnC6B,EAAKqV,GAAKvX,EAAgBC,EAAS,GAAII,GAC3CJ,GAAUC,EAEV2W,EAA0BC,KAAsB7U,EAChD4U,EAA0BC,KAAsB5U,EAIhD,GAIE,GAHAC,EAAKoV,GAAKvX,EAAgBC,GAASI,GACnC+B,EAAKmV,GAAKvX,EAAgBC,EAAS,GAAII,IACvCJ,GAAUC,IACI/Y,EAOZ,OAFA0vB,EAA0BC,KAAsB3U,EAChD0U,EAA0BC,KAAsB1U,EACzC0U,QAEF3U,GAAMF,GAAMG,GAAMF,GAC3B,KAAOjC,EAAS9Y,GAAK,CAEnB,MAAMkb,EAAKkV,GAAKvX,EAAgBC,GAASI,GACnCiC,EAAKiV,GAAKvX,EAAgBC,EAAS,GAAII,GAG7C,GAFAJ,GAAUC,EAENmC,GAAMF,GAAMG,GAAMF,EACpB,SAGF,MAAMjF,EAAMgF,EAAKF,EACX7E,EAAMgF,EAAKF,EAEX3E,EAAM8E,EAAKJ,EACXzE,EAAM8E,EAAKJ,EAKf/E,EAAMK,GAAOJ,EAAMG,IACjBJ,EAAM,GAAKI,EAAMJ,GAAQA,GAAOI,GAAQJ,EAAM,GAAKI,EAAMJ,KACzDC,EAAM,GAAKI,EAAMJ,GAAQA,GAAOI,GAAQJ,EAAM,GAAKI,EAAMJ,IAG3D+E,EAAKE,EACLD,EAAKE,IAMPuU,EAA0BC,KAAsB3U,EAChD0U,EAA0BC,KAAsB1U,EAChDH,EAAKE,EACLD,EAAKE,EACLD,EAAKE,EACLD,EAAKE,EACN,CAID,OAFAuU,EAA0BC,KAAsB3U,EAChD0U,EAA0BC,KAAsB1U,EACzC0U,CACT,CAcO,SAASW,GACdzX,EACAC,EACA4V,EACA3V,EACAG,EACAwW,EACAC,EACAO,GAEA,IAAK,IAAItwB,EAAI,EAAGuE,EAAKuqB,EAAKvvB,OAAQS,EAAIuE,IAAMvE,EAAG,CAC7C,MAAMI,EAAM0uB,EAAK9uB,GACjB+vB,EAAmBU,GACjBxX,EACAC,EACA9Y,EACA+Y,EACAG,EACAwW,EACAC,GAEFO,EAAevsB,KAAKgsB,GACpB7W,EAAS9Y,CACV,CACD,OAAO2vB,CACT,CAcO,SAASY,GACd1X,EACAC,EACA8V,EACA7V,EACAG,EACAwW,EACAC,EACAa,GAEA,IAAK,IAAI5wB,EAAI,EAAGuE,EAAKyqB,EAAMzvB,OAAQS,EAAIuE,IAAMvE,EAAG,CAC9C,MAAM8uB,EAAOE,EAAMhvB,GAEbswB,EAAiB,GACvBP,EAAmBW,GACjBzX,EACAC,EACA4V,EACA3V,EACAG,EACAwW,EACAC,EACAO,GAEFM,EAAgB7sB,KAAKusB,GACrBpX,EAAS4V,EAAKA,EAAKvvB,OAAS,EAC7B,CACD,OAAOwwB,CACT,CCjdO,SAASc,GACd5X,EACAC,EACA9Y,EACA+Y,EACAzB,GAEAA,OAA8B9S,IAAhB8S,EAA4BA,EAAc,GACxD,IAAI1X,EAAI,EACR,IAAK,IAAIwiB,EAAItJ,EAAQsJ,EAAIpiB,EAAKoiB,GAAKrJ,EACjCzB,EAAY1X,KAAOiZ,EAAgB/W,MAAMsgB,EAAGA,EAAIrJ,GAGlD,OADAzB,EAAYnY,OAASS,EACd0X,CACT,CAUO,SAASoZ,GACd7X,EACAC,EACA4V,EACA3V,EACAuW,GAEAA,OAAgC9qB,IAAjB8qB,EAA6BA,EAAe,GAC3D,IAAI1vB,EAAI,EACR,IAAK,IAAIwiB,EAAI,EAAG2G,EAAK2F,EAAKvvB,OAAQijB,EAAI2G,IAAM3G,EAAG,CAC7C,MAAMpiB,EAAM0uB,EAAKtM,GACjBkN,EAAa1vB,KAAO6wB,GAClB5X,EACAC,EACA9Y,EACA+Y,EACAuW,EAAa1vB,IAEfkZ,EAAS9Y,CACV,CAED,OADAsvB,EAAanwB,OAASS,EACf0vB,CACT,CAWO,SAASqB,GACd9X,EACAC,EACA8V,EACA7V,EACAyW,GAEAA,OAAkChrB,IAAlBgrB,EAA8BA,EAAgB,GAC9D,IAAI5vB,EAAI,EACR,IAAK,IAAIwiB,EAAI,EAAG2G,EAAK6F,EAAMzvB,OAAQijB,EAAI2G,IAAM3G,EAAG,CAC9C,MAAMsM,EAAOE,EAAMxM,GACnBoN,EAAc5vB,KACI,IAAhB8uB,EAAKvvB,QAAgBuvB,EAAK,KAAO5V,EAC7B,GACA4X,GACE7X,EACAC,EACA4V,EACA3V,EACAyW,EAAc5vB,IAEtBkZ,EAAS4V,EAAKA,EAAKvvB,OAAS,EAC7B,CAED,OADAqwB,EAAcrwB,OAASS,EAChB4vB,CACT,CCnFO,SAASoB,GAAW/X,EAAiBC,EAAQ9Y,EAAK+Y,GACvD,IAAI8X,EAAY,EACZ/V,EAAKjC,EAAgB7Y,EAAM+Y,GAC3BgC,EAAKlC,EAAgB7Y,EAAM+Y,EAAS,GACxC,KAAOD,EAAS9Y,EAAK8Y,GAAUC,EAAQ,CACrC,MAAMiC,EAAKnC,EAAgBC,GACrBmC,EAAKpC,EAAgBC,EAAS,GACpC+X,GAAa9V,EAAKC,EAAKF,EAAKG,EAC5BH,EAAKE,EACLD,EAAKE,CACN,CACD,OAAO4V,EAAY,CACrB,CASO,SAASC,GAAYjY,EAAiBC,EAAQ4V,EAAM3V,GACzD,IAAImB,EAAO,EACX,IAAK,IAAIta,EAAI,EAAGuE,EAAKuqB,EAAKvvB,OAAQS,EAAIuE,IAAMvE,EAAG,CAC7C,MAAMI,EAAM0uB,EAAK9uB,GACjBsa,GAAQ0W,GAAW/X,EAAiBC,EAAQ9Y,EAAK+Y,GACjDD,EAAS9Y,CACV,CACD,OAAOka,CACT,CASO,SAAS6W,GAAalY,EAAiBC,EAAQ8V,EAAO7V,GAC3D,IAAImB,EAAO,EACX,IAAK,IAAIta,EAAI,EAAGuE,EAAKyqB,EAAMzvB,OAAQS,EAAIuE,IAAMvE,EAAG,CAC9C,MAAM8uB,EAAOE,EAAMhvB,GACnBsa,GAAQ4W,GAAYjY,EAAiBC,EAAQ4V,EAAM3V,GACnDD,EAAS4V,EAAKA,EAAKvvB,OAAS,EAC7B,CACD,OAAO+a,CACT,CCvCA,MAAM8W,WAAmBC,GAMvB,WAAAnzB,CAAYwZ,EAAa2V,GACvBhqB,QAMAjF,KAAKkzB,WAAa,EAMlBlzB,KAAKmzB,mBAAqB,OAEX3sB,IAAXyoB,GAAyB5sB,MAAMC,QAAQgX,EAAY,IAMrDtZ,KAAKgwB,eACX,EAGQf,GATFjvB,KAAK+vB,mBACHd,EACR,EAUG,CAOD,KAAAna,GACE,OAAO,IAAIke,GAAWhzB,KAAK6a,gBAAgB/W,QAAS9D,KAAKivB,OAC1D,CASD,cAAAlB,CAAe3W,EAAGC,EAAG2W,EAAcC,GACjC,OAAIA,EAAqBrU,GAAyB5Z,KAAKof,YAAahI,EAAGC,GAC9D4W,GAELjuB,KAAKmzB,mBAAqBnzB,KAAK8H,gBACjC9H,KAAKkzB,UAAYlnB,KAAKka,KACpBoK,GACEtwB,KAAK6a,gBACL,EACA7a,KAAK6a,gBAAgB1Z,OACrBnB,KAAK+a,OACL,IAGJ/a,KAAKmzB,kBAAoBnzB,KAAK8H,eAEzB+oB,GACL7wB,KAAK6a,gBACL,EACA7a,KAAK6a,gBAAgB1Z,OACrBnB,KAAK+a,OACL/a,KAAKkzB,WACL,EACA9b,EACAC,EACA2W,EACAC,GAEH,CAOD,OAAAhS,GACE,OAAOmX,GACLpzB,KAAK6a,gBACL,EACA7a,KAAK6a,gBAAgB1Z,OACrBnB,KAAK+a,OAER,CAOD,cAAA0U,GACE,OAAOgD,GACLzyB,KAAK6a,gBACL,EACA7a,KAAK6a,gBAAgB1Z,OACrBnB,KAAK+a,OAER,CAOD,6BAAA+U,CAA8BlC,GAE5B,MAAM8D,EAA4B,GAUlC,OATAA,EAA0BvwB,OAASswB,GACjCzxB,KAAK6a,gBACL,EACA7a,KAAK6a,gBAAgB1Z,OACrBnB,KAAK+a,OACL6S,EACA8D,EACA,GAEK,IAAIsB,GAAWtB,EAA2B,KAClD,CAOD,OAAAlD,GACE,MAAO,YACR,CAQD,gBAAAC,CAAiBlV,GACf,OAAO,CACR,CAQD,cAAAyW,CAAe1W,EAAa2V,GAC1BjvB,KAAKiwB,UAAUhB,EAAQ3V,EAAa,GAC/BtZ,KAAK6a,kBACR7a,KAAK6a,gBAAkB,IAEzB7a,KAAK6a,gBAAgB1Z,OAASiwB,GAC5BpxB,KAAK6a,gBACL,EACAvB,EACAtZ,KAAK+a,QAEP/a,KAAK6H,SACN,EAGH,IAAAwrB,GAAeL,GC9Kf,MAAMM,WAAcL,GAKlB,WAAAnzB,CAAYwZ,EAAa2V,GACvBhqB,QACAjF,KAAKgwB,eAAe1W,EAAa2V,EAClC,CAOD,KAAAna,GACE,MAAM4N,EAAQ,IAAI4Q,GAAMtzB,KAAK6a,gBAAgB/W,QAAS9D,KAAKivB,QAE3D,OADAvM,EAAM1Y,gBAAgBhK,MACf0iB,CACR,CASD,cAAAqL,CAAe3W,EAAGC,EAAG2W,EAAcC,GACjC,MAAMpT,EAAkB7a,KAAK6a,gBACvBiJ,EAAkB0M,GACtBpZ,EACAC,EACAwD,EAAgB,GAChBA,EAAgB,IAElB,GAAIiJ,EAAkBmK,EAAoB,CACxC,MAAMlT,EAAS/a,KAAK+a,OACpB,IAAK,IAAInZ,EAAI,EAAGA,EAAImZ,IAAUnZ,EAC5BosB,EAAapsB,GAAKiZ,EAAgBjZ,GAGpC,OADAosB,EAAa7sB,OAAS4Z,EACf+I,CACR,CACD,OAAOmK,CACR,CAOD,cAAAwB,GACE,OAAOzvB,KAAK6a,gBAAgB/W,OAC7B,CAOD,aAAAuqB,CAAc9U,GACZ,OAAOoB,GAA6B3a,KAAK6a,gBAAiBtB,EAC3D,CAOD,OAAAiV,GACE,MAAO,OACR,CAQD,gBAAAC,CAAiBlV,GACf,OAAOO,GAAWP,EAAQvZ,KAAK6a,gBAAgB,GAAI7a,KAAK6a,gBAAgB,GACzE,CAOD,cAAAmV,CAAe1W,EAAa2V,GAC1BjvB,KAAKiwB,UAAUhB,EAAQ3V,EAAa,GAC/BtZ,KAAK6a,kBACR7a,KAAK6a,gBAAkB,IAEzB7a,KAAK6a,gBAAgB1Z,OAASgwB,GAC5BnxB,KAAK6a,gBACL,EACAvB,EACAtZ,KAAK+a,QAEP/a,KAAK6H,SACN,EAGH,IAAA0rB,GAAeD,GCzGR,SAASE,GACd3Y,EACAC,EACA9Y,EACA+Y,EACAxB,GAmBA,OAjBgBmC,GACdnC,GAKA,SAAUpC,GACR,OAAQsc,GACN5Y,EACAC,EACA9Y,EACA+Y,EACA5D,EAAW,GACXA,EAAW,GAEd,GAGL,CAWO,SAASsc,GACd5Y,EACAC,EACA9Y,EACA+Y,EACA3D,EACAC,GASA,IAAIqc,EAAK,EACL5W,EAAKjC,EAAgB7Y,EAAM+Y,GAC3BgC,EAAKlC,EAAgB7Y,EAAM+Y,EAAS,GACxC,KAAOD,EAAS9Y,EAAK8Y,GAAUC,EAAQ,CACrC,MAAMiC,EAAKnC,EAAgBC,GACrBmC,EAAKpC,EAAgBC,EAAS,GAChCiC,GAAM1F,EACJ4F,EAAK5F,IAAM2F,EAAKF,IAAOzF,EAAI0F,IAAO3F,EAAI0F,IAAOG,EAAKF,GAAM,GAC1D2W,IAEOzW,GAAM5F,IAAM2F,EAAKF,IAAOzF,EAAI0F,IAAO3F,EAAI0F,IAAOG,EAAKF,GAAM,GAClE2W,IAEF5W,EAAKE,EACLD,EAAKE,CACN,CACD,OAAc,IAAPyW,CACT,CAWO,SAASC,GACd9Y,EACAC,EACA4V,EACA3V,EACA3D,EACAC,GAEA,GAAoB,IAAhBqZ,EAAKvvB,OACP,OAAO,EAET,IAAKsyB,GAAqB5Y,EAAiBC,EAAQ4V,EAAK,GAAI3V,EAAQ3D,EAAGC,GACrE,OAAO,EAET,IAAK,IAAIzV,EAAI,EAAGuE,EAAKuqB,EAAKvvB,OAAQS,EAAIuE,IAAMvE,EAC1C,GACE6xB,GAAqB5Y,EAAiB6V,EAAK9uB,EAAI,GAAI8uB,EAAK9uB,GAAImZ,EAAQ3D,EAAGC,GAEvE,OAAO,EAGX,OAAO,CACT,CAWO,SAASuc,GACd/Y,EACAC,EACA8V,EACA7V,EACA3D,EACAC,GAEA,GAAqB,IAAjBuZ,EAAMzvB,OACR,OAAO,EAET,IAAK,IAAIS,EAAI,EAAGuE,EAAKyqB,EAAMzvB,OAAQS,EAAIuE,IAAMvE,EAAG,CAC9C,MAAM8uB,EAAOE,EAAMhvB,GACnB,GAAI+xB,GAAsB9Y,EAAiBC,EAAQ4V,EAAM3V,EAAQ3D,EAAGC,GAClE,OAAO,EAETyD,EAAS4V,EAAKA,EAAKvvB,OAAS,EAC7B,CACD,OAAO,CACT,CC7HO,SAAS0yB,GACdhZ,EACAC,EACA4V,EACA3V,EACA+Y,EACAC,EACApa,GAEA,IAAI/X,EAAGuE,EAAIiR,EAAG0F,EAAIE,EAAID,EAAIE,EAC1B,MAAM5F,EAAIyc,EAAYC,EAAoB,GAEpCC,EAAgB,GAEtB,IAAK,IAAI9P,EAAI,EAAG+P,EAAKvD,EAAKvvB,OAAQ+iB,EAAI+P,IAAM/P,EAAG,CAC7C,MAAMliB,EAAM0uB,EAAKxM,GAGjB,IAFApH,EAAKjC,EAAgB7Y,EAAM+Y,GAC3BgC,EAAKlC,EAAgB7Y,EAAM+Y,EAAS,GAC/BnZ,EAAIkZ,EAAQlZ,EAAII,EAAKJ,GAAKmZ,EAC7BiC,EAAKnC,EAAgBjZ,GACrBqb,EAAKpC,EAAgBjZ,EAAI,IACpByV,GAAK0F,GAAME,GAAM5F,GAAO0F,GAAM1F,GAAKA,GAAK4F,KAC3C7F,GAAMC,EAAI0F,IAAOE,EAAKF,IAAQC,EAAKF,GAAMA,EACzCkX,EAAcruB,KAAKyR,IAErB0F,EAAKE,EACLD,EAAKE,CAER,CAGD,IAAIiX,EAAS/F,IACTgG,GAAoB3Z,IAGxB,IAFAwZ,EAAcI,KAAKpzB,GACnB8b,EAAKkX,EAAc,GACdpyB,EAAI,EAAGuE,EAAK6tB,EAAc7yB,OAAQS,EAAIuE,IAAMvE,EAAG,CAClDob,EAAKgX,EAAcpyB,GACnB,MAAMyyB,EAAgBroB,KAAKmP,IAAI6B,EAAKF,GAChCuX,EAAgBF,IAClB/c,GAAK0F,EAAKE,GAAM,EACZ2W,GAAsB9Y,EAAiBC,EAAQ4V,EAAM3V,EAAQ3D,EAAGC,KAClE6c,EAAS9c,EACT+c,EAAmBE,IAGvBvX,EAAKE,CACN,CAMD,OALIsR,MAAM4F,KAGRA,EAASJ,EAAYC,IAEnBpa,GACFA,EAAKhU,KAAKuuB,EAAQ7c,EAAG8c,GACdxa,GAEF,CAACua,EAAQ7c,EAAG8c,EACrB,CAWO,SAASG,GACdzZ,EACAC,EACA8V,EACA7V,EACA+Y,GAGA,IAAIS,EAAiB,GACrB,IAAK,IAAI3yB,EAAI,EAAGuE,EAAKyqB,EAAMzvB,OAAQS,EAAIuE,IAAMvE,EAAG,CAC9C,MAAM8uB,EAAOE,EAAMhvB,GACnB2yB,EAAiBV,GACfhZ,EACAC,EACA4V,EACA3V,EACA+Y,EACA,EAAIlyB,EACJ2yB,GAEFzZ,EAAS4V,EAAKA,EAAKvvB,OAAS,EAC7B,CACD,OAAOozB,CACT,CC7FO,SAASrpB,GAAQ2P,EAAiBC,EAAQ9Y,EAAK+Y,EAAQY,GAC5D,IAAI6Y,EAEJ,IADA1Z,GAAUC,EACHD,EAAS9Y,EAAK8Y,GAAUC,EAK7B,GAJAyZ,EAAM7Y,EACJd,EAAgB/W,MAAMgX,EAASC,EAAQD,GACvCD,EAAgB/W,MAAMgX,EAAQA,EAASC,IAErCyZ,EACF,OAAOA,EAGX,OAAO,CACT,CCTO,SAASC,GACd5Z,EACAC,EACA9Y,EACA+Y,EACAxB,GAEA,MAAMmb,EAAoB1Z,G1BwKnB,CAACR,IAAUA,KAAU,KAAW,K0BtKrCK,EACAC,EACA9Y,EACA+Y,GAEF,QAAK8C,GAAWtE,EAAQmb,OAGpB3a,GAAeR,EAAQmb,KAGvBA,EAAkB,IAAMnb,EAAO,IAAMmb,EAAkB,IAAMnb,EAAO,KAGpEmb,EAAkB,IAAMnb,EAAO,IAAMmb,EAAkB,IAAMnb,EAAO,IAGjEob,GACL9Z,EACAC,EACA9Y,EACA+Y,GAOA,SAAU6Z,EAAQC,GAChB,OAAO3W,GAAkB3E,EAAQqb,EAAQC,EAC1C,MAEL,CAUO,SAASC,GACdja,EACAC,EACA4V,EACA3V,EACAxB,GAEA,IAAK,IAAI3X,EAAI,EAAGuE,EAAKuqB,EAAKvvB,OAAQS,EAAIuE,IAAMvE,EAAG,CAC7C,GACE6yB,GAAqB5Z,EAAiBC,EAAQ4V,EAAK9uB,GAAImZ,EAAQxB,GAE/D,OAAO,EAETuB,EAAS4V,EAAK9uB,EACf,CACD,OAAO,CACT,CAUO,SAASmzB,GACdla,EACAC,EACA9Y,EACA+Y,EACAxB,GAEA,QAAIkb,GAAqB5Z,EAAiBC,EAAQ9Y,EAAK+Y,EAAQxB,OAI7Dka,GACE5Y,EACAC,EACA9Y,EACA+Y,EACAxB,EAAO,GACPA,EAAO,QAMTka,GACE5Y,EACAC,EACA9Y,EACA+Y,EACAxB,EAAO,GACPA,EAAO,QAMTka,GACE5Y,EACAC,EACA9Y,EACA+Y,EACAxB,EAAO,GACPA,EAAO,OAMTka,GACE5Y,EACAC,EACA9Y,EACA+Y,EACAxB,EAAO,GACPA,EAAO,MAMb,CAUO,SAASyb,GACdna,EACAC,EACA4V,EACA3V,EACAxB,GAEA,IAAKwb,GAAqBla,EAAiBC,EAAQ4V,EAAK,GAAI3V,EAAQxB,GAClE,OAAO,EAET,GAAoB,IAAhBmX,EAAKvvB,OACP,OAAO,EAET,IAAK,IAAIS,EAAI,EAAGuE,EAAKuqB,EAAKvvB,OAAQS,EAAIuE,IAAMvE,EAC1C,GACE4xB,GACE3Y,EACA6V,EAAK9uB,EAAI,GACT8uB,EAAK9uB,GACLmZ,EACAxB,KAICkb,GACC5Z,EACA6V,EAAK9uB,EAAI,GACT8uB,EAAK9uB,GACLmZ,EACAxB,GAGF,OAAO,EAIb,OAAO,CACT,CAUO,SAAS0b,GACdpa,EACAC,EACA8V,EACA7V,EACAxB,GAEA,IAAK,IAAI3X,EAAI,EAAGuE,EAAKyqB,EAAMzvB,OAAQS,EAAIuE,IAAMvE,EAAG,CAC9C,MAAM8uB,EAAOE,EAAMhvB,GACnB,GACEozB,GAA0Bna,EAAiBC,EAAQ4V,EAAM3V,EAAQxB,GAEjE,OAAO,EAETuB,EAAS4V,EAAKA,EAAKvvB,OAAS,EAC7B,CACD,OAAO,CACT,CC7NO,SAASmY,GAAYuB,EAAiBC,EAAQ9Y,EAAK+Y,GACxD,KAAOD,EAAS9Y,EAAM+Y,GAAQ,CAC5B,IAAK,IAAInZ,EAAI,EAAGA,EAAImZ,IAAUnZ,EAAG,CAC/B,MAAMK,EAAM4Y,EAAgBC,EAASlZ,GACrCiZ,EAAgBC,EAASlZ,GAAKiZ,EAAgB7Y,EAAM+Y,EAASnZ,GAC7DiZ,EAAgB7Y,EAAM+Y,EAASnZ,GAAKK,CACrC,CACD6Y,GAAUC,EACV/Y,GAAO+Y,CACR,CACH,CCLO,SAASma,GAAsBra,EAAiBC,EAAQ9Y,EAAK+Y,GAGlE,IAAIoa,EAAO,EACPrY,EAAKjC,EAAgB7Y,EAAM+Y,GAC3BgC,EAAKlC,EAAgB7Y,EAAM+Y,EAAS,GACxC,KAAOD,EAAS9Y,EAAK8Y,GAAUC,EAAQ,CACrC,MAAMiC,EAAKnC,EAAgBC,GACrBmC,EAAKpC,EAAgBC,EAAS,GACpCqa,IAASnY,EAAKF,IAAOG,EAAKF,GAC1BD,EAAKE,EACLD,EAAKE,CACN,CACD,OAAgB,IAATkY,OAAa3uB,EAAY2uB,EAAO,CACzC,CAeO,SAASC,GACdva,EACAC,EACA4V,EACA3V,EACAsa,GAEAA,OAAkB7uB,IAAV6uB,GAAsBA,EAC9B,IAAK,IAAIzzB,EAAI,EAAGuE,EAAKuqB,EAAKvvB,OAAQS,EAAIuE,IAAMvE,EAAG,CAC7C,MAAMI,EAAM0uB,EAAK9uB,GACX0zB,EAAcJ,GAClBra,EACAC,EACA9Y,EACA+Y,GAEF,GAAU,IAANnZ,GACF,GAAKyzB,GAASC,IAAkBD,IAAUC,EACxC,OAAO,OAGT,GAAKD,IAAUC,IAAkBD,GAASC,EACxC,OAAO,EAGXxa,EAAS9Y,CACV,CACD,OAAO,CACT,CAeO,SAASuzB,GACd1a,EACAC,EACA8V,EACA7V,EACAsa,GAEA,IAAK,IAAIzzB,EAAI,EAAGuE,EAAKyqB,EAAMzvB,OAAQS,EAAIuE,IAAMvE,EAAG,CAC9C,MAAM8uB,EAAOE,EAAMhvB,GACnB,IAAKwzB,GAAuBva,EAAiBC,EAAQ4V,EAAM3V,EAAQsa,GACjE,OAAO,EAEL3E,EAAKvvB,SACP2Z,EAAS4V,EAAKA,EAAKvvB,OAAS,GAE/B,CACD,OAAO,CACT,CAeO,SAASq0B,GACd3a,EACAC,EACA4V,EACA3V,EACAsa,GAEAA,OAAkB7uB,IAAV6uB,GAAsBA,EAC9B,IAAK,IAAIzzB,EAAI,EAAGuE,EAAKuqB,EAAKvvB,OAAQS,EAAIuE,IAAMvE,EAAG,CAC7C,MAAMI,EAAM0uB,EAAK9uB,GACX0zB,EAAcJ,GAClBra,EACAC,EACA9Y,EACA+Y,IAGM,IAANnZ,EACKyzB,GAASC,IAAkBD,IAAUC,EACrCD,IAAUC,IAAkBD,GAASC,IAE1CG,GAAmB5a,EAAiBC,EAAQ9Y,EAAK+Y,GAEnDD,EAAS9Y,CACV,CACD,OAAO8Y,CACT,CAeO,SAAS4a,GACd7a,EACAC,EACA8V,EACA7V,EACAsa,GAEA,IAAK,IAAIzzB,EAAI,EAAGuE,EAAKyqB,EAAMzvB,OAAQS,EAAIuE,IAAMvE,EAC3CkZ,EAAS0a,GACP3a,EACAC,EACA8V,EAAMhvB,GACNmZ,EACAsa,GAGJ,OAAOva,CACT,CASO,SAAS6a,GAAY9a,EAAiB6V,GAC3C,MAAME,EAAQ,GACd,IAEIgF,EAFA9a,EAAS,EACT+a,EAAe,EAEnB,IAAK,IAAIj0B,EAAI,EAAGuE,EAAKuqB,EAAKvvB,OAAQS,EAAIuE,IAAMvE,EAAG,CAC7C,MAAMI,EAAM0uB,EAAK9uB,GAEXk0B,EAAcZ,GAAsBra,EAAiBC,EAAQ9Y,EAAK,GAIxE,QAHyBwE,IAArBovB,IACFA,EAAmBE,GAEjBA,IAAgBF,EAClBhF,EAAMjrB,KAAK+qB,EAAK5sB,MAAM+xB,EAAcj0B,EAAI,QACnC,CACL,GAAqB,IAAjBgvB,EAAMzvB,OACR,SAEFyvB,EAAMA,EAAMzvB,OAAS,GAAGwE,KAAK+qB,EAAKmF,GACnC,CACDA,EAAej0B,EAAI,EACnBkZ,EAAS9Y,CACV,CACD,OAAO4uB,CACT,CCxLA,MAAMmF,WAAgB9C,GAYpB,WAAAnzB,CAAYwZ,EAAa2V,EAAQyB,GAC/BzrB,QAMAjF,KAAKg2B,MAAQ,GAMbh2B,KAAKi2B,4BAA8B,EAMnCj2B,KAAKk2B,mBAAqB,KAM1Bl2B,KAAKkzB,WAAa,EAMlBlzB,KAAKmzB,mBAAqB,EAM1BnzB,KAAKm2B,mBAAqB,EAM1Bn2B,KAAKo2B,yBAA2B,UAEjB5vB,IAAXyoB,GAAwByB,GAC1B1wB,KAAK+vB,mBACHd,EACR,GAEMjvB,KAAKg2B,MAAQtF,GAEb1wB,KAAKgwB,eACX,EAGQf,EAGL,CAOD,gBAAAoH,CAAiBzD,GACV5yB,KAAK6a,gBAGR3Y,EAAOlC,KAAK6a,gBAAiB+X,EAAWvD,sBAFxCrvB,KAAK6a,gBAAkB+X,EAAWvD,qBAAqBvrB,QAIzD9D,KAAKg2B,MAAMrwB,KAAK3F,KAAK6a,gBAAgB1Z,QACrCnB,KAAK6H,SACN,CAOD,KAAAiN,GACE,MAAMwhB,EAAU,IAAIP,GAClB/1B,KAAK6a,gBAAgB/W,QACrB9D,KAAKivB,OACLjvB,KAAKg2B,MAAMlyB,SAGb,OADAwyB,EAAQtsB,gBAAgBhK,MACjBs2B,CACR,CASD,cAAAvI,CAAe3W,EAAGC,EAAG2W,EAAcC,GACjC,OAAIA,EAAqBrU,GAAyB5Z,KAAKof,YAAahI,EAAGC,GAC9D4W,GAELjuB,KAAKmzB,mBAAqBnzB,KAAK8H,gBACjC9H,KAAKkzB,UAAYlnB,KAAKka,KACpBuK,GACEzwB,KAAK6a,gBACL,EACA7a,KAAKg2B,MACLh2B,KAAK+a,OACL,IAGJ/a,KAAKmzB,kBAAoBnzB,KAAK8H,eAEzBmpB,GACLjxB,KAAK6a,gBACL,EACA7a,KAAKg2B,MACLh2B,KAAK+a,OACL/a,KAAKkzB,WACL,EACA9b,EACAC,EACA2W,EACAC,GAEH,CAOD,UAAAnU,CAAW1C,EAAGC,GACZ,OAAOsc,GACL3zB,KAAKu2B,6BACL,EACAv2B,KAAKg2B,MACLh2B,KAAK+a,OACL3D,EACAC,EAEH,CAOD,OAAA4E,GACE,OAAOua,GACLx2B,KAAKu2B,6BACL,EACAv2B,KAAKg2B,MACLh2B,KAAK+a,OAER,CAeD,cAAA0U,CAAe4F,GACb,IAAIxa,EAQJ,YAPcrU,IAAV6uB,GACFxa,EAAkB7a,KAAKu2B,6BAA6BzyB,QACpD0xB,GAAkB3a,EAAiB,EAAG7a,KAAKg2B,MAAOh2B,KAAK+a,OAAQsa,IAE/Dxa,EAAkB7a,KAAK6a,gBAGlB6X,GAAwB7X,EAAiB,EAAG7a,KAAKg2B,MAAOh2B,KAAK+a,OACrE,CAKD,OAAA0b,GACE,OAAOz2B,KAAKg2B,KACb,CAKD,oBAAAU,GACE,GAAI12B,KAAKi2B,4BAA8Bj2B,KAAK8H,cAAe,CACzD,MAAM6uB,EAAata,GAAUrc,KAAKof,aAClCpf,KAAKk2B,mBAAqBrC,GACxB7zB,KAAKu2B,6BACL,EACAv2B,KAAKg2B,MACLh2B,KAAK+a,OACL4b,EACA,GAEF32B,KAAKi2B,2BAA6Bj2B,KAAK8H,aACxC,CACD,OACE9H,KACA,kBACH,CAQD,gBAAA42B,GACE,OAAO,IAAItD,GAAMtzB,KAAK02B,uBAAwB,MAC/C,CASD,kBAAAG,GACE,OAAO72B,KAAKg2B,MAAM70B,MACnB,CAYD,aAAA21B,CAAc7zB,GACZ,OAAIA,EAAQ,GAAKjD,KAAKg2B,MAAM70B,QAAU8B,EAC7B,KAEF,IAAI+vB,GACThzB,KAAK6a,gBAAgB/W,MACT,IAAVb,EAAc,EAAIjD,KAAKg2B,MAAM/yB,EAAQ,GACrCjD,KAAKg2B,MAAM/yB,IAEbjD,KAAKivB,OAER,CAOD,cAAA8H,GACE,MAAM9H,EAASjvB,KAAKivB,OACdpU,EAAkB7a,KAAK6a,gBACvB6V,EAAO1wB,KAAKg2B,MACZlD,EAAc,GACpB,IAAIhY,EAAS,EACb,IAAK,IAAIlZ,EAAI,EAAGuE,EAAKuqB,EAAKvvB,OAAQS,EAAIuE,IAAMvE,EAAG,CAC7C,MAAMI,EAAM0uB,EAAK9uB,GACXgxB,EAAa,IAAII,GACrBnY,EAAgB/W,MAAMgX,EAAQ9Y,GAC9BitB,GAEF6D,EAAYntB,KAAKitB,GACjB9X,EAAS9Y,CACV,CACD,OAAO8wB,CACR,CAKD,0BAAAyD,GACE,GAAIv2B,KAAKm2B,mBAAqBn2B,KAAK8H,cAAe,CAChD,MAAM+S,EAAkB7a,KAAK6a,gBACzBua,GAAuBva,EAAiB,EAAG7a,KAAKg2B,MAAOh2B,KAAK+a,QAC9D/a,KAAKo2B,yBAA2Bvb,GAEhC7a,KAAKo2B,yBAA2Bvb,EAAgB/W,QAChD9D,KAAKo2B,yBAAyBj1B,OAASq0B,GACrCx1B,KAAKo2B,yBACL,EACAp2B,KAAKg2B,MACLh2B,KAAK+a,SAGT/a,KAAKm2B,kBAAoBn2B,KAAK8H,aAC/B,CACD,OAAqC9H,KAA6B,wBACnE,CAOD,6BAAA8vB,CAA8BlC,GAE5B,MAAM8D,EAA4B,GAE5BQ,EAAiB,GAWvB,OAVAR,EAA0BvwB,OAASmxB,GACjCtyB,KAAK6a,gBACL,EACA7a,KAAKg2B,MACLh2B,KAAK+a,OACL/O,KAAKka,KAAK0H,GACV8D,EACA,EACAQ,GAEK,IAAI6D,GAAQrE,EAA2B,KAAMQ,EACrD,CAOD,OAAA1D,GACE,MAAO,SACR,CAQD,gBAAAC,CAAiBlV,GACf,OAAOyb,GACLh1B,KAAKu2B,6BACL,EACAv2B,KAAKg2B,MACLh2B,KAAK+a,OACLxB,EAEH,CAQD,cAAAyW,CAAe1W,EAAa2V,GAC1BjvB,KAAKiwB,UAAUhB,EAAQ3V,EAAa,GAC/BtZ,KAAK6a,kBACR7a,KAAK6a,gBAAkB,IAEzB,MAAM6V,EAAOW,GACXrxB,KAAK6a,gBACL,EACAvB,EACAtZ,KAAK+a,OACL/a,KAAKg2B,OAEPh2B,KAAK6a,gBAAgB1Z,OAAyB,IAAhBuvB,EAAKvvB,OAAe,EAAIuvB,EAAKA,EAAKvvB,OAAS,GACzEnB,KAAK6H,SACN,EAGH,IAAAmvB,GAAejB,GAcR,SAASkB,GAASxa,EAAQqL,EAAQnmB,EAAGu1B,GAC1Cv1B,EAAIA,GAAQ,GAEZ,MAAMkZ,EAAkB,GACxB,IAAK,IAAIjZ,EAAI,EAAGA,EAAID,IAAKC,EACvBM,EACE2Y,EACAsc,GAAa1a,EAAQqL,EAAS,EAAI9b,KAAK6T,GAAKje,EAAKD,EAAGu1B,IAIxD,OADArc,EAAgBlV,KAAKkV,EAAgB,GAAIA,EAAgB,IAClD,IAAIkb,GAAQlb,EAAiB,KAAM,CAACA,EAAgB1Z,QAC7D,CAQO,SAASi2B,GAAW7d,GACzB,GAAIzU,GAAQyU,GACV,MAAM,IAAIhR,MAAM,2CAElB,MAAM4R,EAAOZ,EAAO,GACda,EAAOb,EAAO,GACdc,EAAOd,EAAO,GACde,EAAOf,EAAO,GACdsB,EAAkB,CACtBV,EACAC,EACAD,EACAG,EACAD,EACAC,EACAD,EACAD,EACAD,EACAC,GAEF,OAAO,IAAI2b,GAAQlb,EAAiB,KAAM,CAACA,EAAgB1Z,QAC7D,CAWO,SAASk2B,GAAWrR,EAAQsR,EAAO/f,GACxC+f,EAAQA,GAAgB,GACxB,MAAMvc,EAASiL,EAAOsJ,YAChBL,EAASjJ,EAAO4J,YAChBnT,EAASuJ,EAAO3J,YAChBkb,EAAcxc,GAAUuc,EAAQ,GAChCzc,EAAkB,IAAIxY,MAAMk1B,GAClC,IAAK,IAAI31B,EAAI,EAAGA,EAAI21B,EAAa31B,GAAKmZ,EAAQ,CAC5CF,EAAgBjZ,GAAK,EACrBiZ,EAAgBjZ,EAAI,GAAK,EACzB,IAAK,IAAIwiB,EAAI,EAAGA,EAAIrJ,EAAQqJ,IAC1BvJ,EAAgBjZ,EAAIwiB,GAAK3H,EAAO2H,EAEnC,CACD,MAAMsM,EAAO,CAAC7V,EAAgB1Z,QACxBm1B,EAAU,IAAIP,GAAQlb,EAAiBoU,EAAQyB,GAErD,OADA8G,GAAYlB,EAAS7Z,EAAQuJ,EAAOC,YAAa1O,GAC1C+e,CACT,CAUO,SAASkB,GAAYlB,EAAS7Z,EAAQqL,EAAQvQ,GACnD,MAAMsD,EAAkByb,EAAQjH,qBAC1BtU,EAASub,EAAQhH,YACjBgI,EAAQzc,EAAgB1Z,OAAS4Z,EAAS,EAC1C0c,EAAalgB,GAAgB,EACnC,IAAK,IAAI3V,EAAI,EAAGA,GAAK01B,IAAS11B,EAAG,CAC/B,MAAMkZ,EAASlZ,EAAImZ,EACbxD,EAAQkgB,EAAiC,EAAnB9S,GAAO/iB,EAAG01B,GAAatrB,KAAK6T,GAAMyX,EAC9Dzc,EAAgBC,GAAU2B,EAAO,GAAKqL,EAAS9b,KAAKwL,IAAID,GACxDsD,EAAgBC,EAAS,GAAK2B,EAAO,GAAKqL,EAAS9b,KAAKyL,IAAIF,EAC7D,CACD+e,EAAQzuB,SACV,CCnfA,MAAMuC,GACM,WADNA,GAEe,mBAFfA,GAGM,WAHNA,GAIe,mBAJfA,GAKK,UALLA,GAMM,WANNA,GAOQ,aAPRA,GAQG,QARHA,GASM,WATNA,GAUc,kBAMdstB,GAMG,QAOF,MAAMC,WAAyBC,EAIpC,WAAA93B,CAAYwP,GACVrK,MAAMyyB,IAON13B,KAAKmgB,KAAO7Q,EAAM6Q,KAOlBngB,KAAK63B,QAAUvoB,EAAMuoB,OACtB,EA+VH,IAAAC,GAzSA,cAA0BttB,EAIxB,WAAA1K,CAAY4K,GACVzF,QAKAjF,KAAK0H,GAKL1H,KAAKiH,KAKLjH,KAAK2H,GAEL+C,EAAUA,GAAW,GAOrB1K,KAAK+3B,UAAY,KAMjB/3B,KAAKg4B,WAAa1O,GAMlBtpB,KAAKi4B,cAAWzxB,EAEhBxG,KAAK4J,kBAAkBQ,GAAqBpK,KAAKk4B,0BACjDl4B,KAAK4J,kBAAkBQ,GAAmBpK,KAAKm4B,6BAEpB3xB,IAAvBkE,EAAQwU,YACVlf,KAAKo4B,cAAc1tB,EAAQwU,iBAEG1Y,IAA5BkE,EAAQ2tB,iBACVr4B,KAAKs4B,mBAAmB5tB,EAAQ2tB,iBAGlCr4B,KAAKu4B,iBAAiC/xB,IAArBkE,EAAQ8tB,UAAyB9tB,EAAQ8tB,SAC3D,CAKD,eAAA/3B,GACET,KAAKu4B,aAAY,GACjBtzB,MAAMxE,iBACP,CAKD,wBAAAy3B,GACE,MAAMhZ,EAAalf,KAAK0uB,gBACpBxP,IACFlf,KAAKg4B,WAAahO,GAChB0E,GAAc,aACdxP,GAEElf,KAAK+3B,WACP/3B,KAAK8J,IAAIM,GAAmBpK,KAAKg4B,WAAWh4B,KAAK+3B,YAGtD,CAKD,sBAAAI,GACE,GAAI,gBAAiBrqB,UAAW,CAC9B,MAAM0qB,EAAWx4B,KAAKy4B,cAClBD,QAA8BhyB,IAAlBxG,KAAKi4B,SACnBj4B,KAAKi4B,SAAWnqB,UAAU4qB,YAAYC,cACpC34B,KAAK44B,gBAAgB1xB,KAAKlH,MAC1BA,KAAK64B,eAAe3xB,KAAKlH,MACzBA,KAAK84B,sBAEGN,QAA8BhyB,IAAlBxG,KAAKi4B,WAC3BnqB,UAAU4qB,YAAYK,WAAW/4B,KAAKi4B,UACtCj4B,KAAKi4B,cAAWzxB,EAEnB,CACF,CAMD,eAAAoyB,CAAgBI,GACd,MAAMC,EAASD,EAASC,OACxBj5B,KAAK8J,IAAIM,GAAmB6uB,EAAOC,UACnCl5B,KAAK8J,IACHM,GACoB,OAApB6uB,EAAOE,cAAoB3yB,EAAYyyB,EAAOE,UAEhDn5B,KAAK8J,IACHM,GAC4B,OAA5B6uB,EAAOG,sBAA4B5yB,EAAYyyB,EAAOG,kBAExDp5B,KAAK8J,IACHM,GACmB,OAAnB6uB,EAAOI,aAAmB7yB,EAAYie,GAAUwU,EAAOI,UAEpDr5B,KAAK+3B,WAGR/3B,KAAK+3B,UAAU,GAAKkB,EAAOK,UAC3Bt5B,KAAK+3B,UAAU,GAAKkB,EAAOM,UAH3Bv5B,KAAK+3B,UAAY,CAACkB,EAAOK,UAAWL,EAAOM,UAK7C,MAAMC,EAAoBx5B,KAAKg4B,WAAWh4B,KAAK+3B,WAC/C/3B,KAAK8J,IAAIM,GAAmBovB,EAAkB11B,SAC9C9D,KAAK8J,IAAIM,GAAiC,OAAjB6uB,EAAOQ,WAAiBjzB,EAAYyyB,EAAOQ,OACpE,MAAM9kB,EAAW+kB,GAAgB15B,KAAK+3B,UAAWkB,EAAOC,UACxDvkB,EAAS+J,eAAe1e,KAAKg4B,YAC7Bh4B,KAAK8J,IAAIM,GAA4BuK,GACrC3U,KAAK6H,SACN,CAMD,cAAAgxB,CAAevpB,GACbtP,KAAK4F,cAAc,IAAI+xB,GAAiBroB,GACzC,CASD,WAAAqqB,GACE,OAAwC35B,KAAKmJ,IAAIiB,GAClD,CAQD,mBAAAwvB,GACE,OACE55B,KAAKmJ,IAAIiB,KAA+B,IAE3C,CASD,WAAAyvB,GACE,OAAwC75B,KAAKmJ,IAAIiB,GAClD,CASD,mBAAA0vB,GACE,OACE95B,KAAKmJ,IAAIiB,GAEZ,CAUD,UAAA2vB,GACE,OAAwC/5B,KAAKmJ,IAAIiB,GAClD,CASD,WAAA4vB,GACE,OACEh6B,KAAKmJ,IAAIiB,GAEZ,CASD,aAAAskB,GACE,OACE1uB,KAAKmJ,IAAIiB,GAEZ,CASD,QAAA6vB,GACE,OAAwCj6B,KAAKmJ,IAAIiB,GAClD,CAQD,WAAAquB,GACE,OAA+Bz4B,KAAKmJ,IAAIiB,GACzC,CAWD,kBAAA0uB,GACE,OACE94B,KAAKmJ,IAAIiB,GAEZ,CASD,aAAAguB,CAAclZ,GACZlf,KAAK8J,IAAIM,GAAqBskB,GAAcxP,GAC7C,CAQD,WAAAqZ,CAAYC,GACVx4B,KAAK8J,IAAIM,GAAmBouB,EAC7B,CAWD,kBAAAF,CAAmB5tB,GACjB1K,KAAK8J,IAAIM,GAA2BM,EACrC,GCtZYwvB,GACP,EADOA,GAEJ,EAFIA,GAGL,EAHKA,GAIN,EAJMA,GAKN,EC6MF,SAASC,GAAYtnB,EAAOunB,EAAaC,GAC9C,MAAMC,EAAuC,EAC7C,IAAIC,GAAY,EACZC,GAAW,EACXC,GAAS,EAEb,MAAMC,EAAe,CACnBrzB,EAAWizB,EAAKxzB,GAAgB,WAC9B2zB,GAAS,EACJD,GACHJ,GAER,KAyBE,OAtBIE,EAAIK,KAAO9rB,IACb2rB,GAAW,EACXF,EACGvrB,SACA+E,MAAK,WACAymB,GACFH,GAEV,IACOrmB,OAAM,SAAUzE,GACXirB,IACEE,EACFL,IAEAC,IAGZ,KAEIK,EAAa/0B,KAAK0B,EAAWizB,EAAKxzB,EAAiBuzB,IAG9C,WACLE,GAAY,EACZG,EAAaxvB,QAAQ5D,EACzB,CACA,CASO,SAAS+F,GAAKwF,EAAO8nB,GAC1B,OAAO,IAAIp2B,SAAQ,CAACE,EAASD,KAC3B,SAASo2B,IACPC,IACAp2B,EAAQoO,EACT,CACD,SAASioB,IACPD,IACAr2B,EAAO,IAAI+D,MAAM,oBAClB,CACD,SAASsyB,IACPhoB,EAAMvM,oBAAoB,OAAQs0B,GAClC/nB,EAAMvM,oBAAoB,QAASw0B,EACpC,CACDjoB,EAAMvN,iBAAiB,OAAQs1B,GAC/B/nB,EAAMvN,iBAAiB,QAASw1B,GAC5BH,IACF9nB,EAAM8nB,IAAMA,EACb,GAEL,CAOO,SAASI,GAAeloB,EAAO8nB,GAIpC,OAHIA,IACF9nB,EAAM8nB,IAAMA,GAEP9nB,EAAM8nB,KAAO9rB,GAChB,IAAItK,SAAQ,CAACE,EAASD,IACpBqO,EACG9D,SACA+E,MAAK,IAAMrP,EAAQoO,KACnBkB,OAAOkD,GACNpE,EAAMmoB,UAAYnoB,EAAMrD,MAAQ/K,EAAQoO,GAASrO,EAAOyS,OAG9D5J,GAAKwF,EACX,CAWO,SAAS9D,GAAO8D,EAAO8nB,GAI5B,OAHIA,IACF9nB,EAAM8nB,IAAMA,GAEP9nB,EAAM8nB,KAAO9rB,IAAgBG,GAChC6D,EACG9D,SACA+E,MAAK,IAAM7E,kBAAkB4D,KAC7BkB,OAAOkD,IACN,GAAIpE,EAAMmoB,UAAYnoB,EAAMrD,MAC1B,OAAOqD,EAET,MAAMoE,CAAC,IAEX8jB,GAAeloB,EACrB,CAEA,IAAAooB,GAtRA,cAA2BxzB,EAQzB,WAAA3H,CAAYyZ,EAAQmD,EAAYwe,EAAYC,GAC1Cl2B,QAMAjF,KAAKuZ,OAASA,EAMdvZ,KAAKo7B,YAAcF,EAMnBl7B,KAAK0c,WAAaA,EAMlB1c,KAAKuM,MACsB,mBAAlB4uB,EAA+BjB,GAAkBiB,EAM1Dn7B,KAAKq7B,OAAS,KAMdr7B,KAAKqT,OAAkC,mBAAlB8nB,EAA+BA,EAAgB,IACrE,CAKD,OAAAtzB,GACE7H,KAAK4F,cAAckB,EACpB,CAKD,SAAAsY,GACE,OAAOpf,KAAKuZ,MACb,CAKD,QAAA+hB,GACE,OAAOt7B,KAAKq7B,MACb,CAKD,aAAAE,GACE,OAAOv7B,KAAKo7B,WACb,CAKD,aAAAI,GACE,OAA8Bx7B,KAAe,UAC9C,CAKD,QAAAkN,GACE,OAAOlN,KAAKuM,KACb,CAKD,IAAAc,GACE,GAAIrN,KAAKuM,OAAS2tB,IACZl6B,KAAKqT,OAAQ,CACfrT,KAAKuM,MAAQ2tB,GACbl6B,KAAK6H,UACL,MAAM6U,EAAa1c,KAAKw7B,gBAClBC,EAAoBp5B,MAAMC,QAAQoa,GACpCA,EAAW,GACXA,EACJvY,GAAU,IACRnE,KAAKqT,OAAOrT,KAAKof,YAAaqc,EAAmBz7B,KAAKu7B,mBAErDznB,MAAMjB,IACD,UAAWA,IACb7S,KAAKq7B,OAASxoB,EAAMA,OAElB,WAAYA,IACd7S,KAAKuZ,OAAS1G,EAAM0G,QAElB,eAAgB1G,IAClB7S,KAAK0c,WAAa7J,EAAM6J,YAEtB,eAAgB7J,IAClB7S,KAAKo7B,YAAcvoB,EAAMqoB,aAGzBroB,aAAiB6oB,kBACjB7oB,aAAiBR,aACjBQ,aAAiBV,mBACjBU,aAAiBT,oBAEjBpS,KAAKq7B,OAASxoB,GAEhB7S,KAAKuM,MAAQ2tB,EAAiB,IAE/BnmB,OAAOzE,IACNtP,KAAKuM,MAAQ2tB,GACbjR,QAAQ3Z,MAAMA,EAAM,IAErBqsB,SAAQ,IAAM37B,KAAK6H,WACvB,CAEJ,CAKD,QAAA+zB,CAAS/oB,GACP7S,KAAKq7B,OAASxoB,CACf,CAKD,aAAAgpB,CAAcnf,GACZ1c,KAAK0c,WAAaA,CACnB,GCrHH,IAAAof,GA5EA,cAA0BC,GASxB,WAAAj8B,CAAYyZ,EAAQmD,EAAYwe,EAAYtrB,EAAQyD,GAGlDpO,MAAMsU,EAAQmD,EAAYwe,OAFD10B,IAAX6M,EAAuB6mB,GAAkBA,IASvDl6B,KAAKoT,aAAqB5M,IAAX6M,EAAuBA,EAAS,KAM/CrT,KAAKg8B,QAAUpsB,EAMf5P,KAAKuT,OAAS,IACf,CAMD,QAAAM,GACE,OAAO7T,KAAKuT,MACb,CAOD,WAAA0oB,CAAY33B,GACNA,GACFtE,KAAKuT,OAASjP,EACdtE,KAAKuM,MAAQ2tB,IAEbl6B,KAAKuM,MAAQ2tB,GAEfl6B,KAAK6H,SACN,CAKD,IAAAwF,GACMrN,KAAKuM,OAAS2tB,KAChBl6B,KAAKuM,MAAQ2tB,GACbl6B,KAAK6H,UACL7H,KAAKoT,QAAQpT,KAAKi8B,YAAY/0B,KAAKlH,OAEtC,CAKD,QAAAs7B,GACE,OAAOt7B,KAAKg8B,OACb,GCmGH,IAAAE,GAnLA,cAAwB/oB,GAStB,WAAArT,CAAYwM,EAAWC,EAAOouB,EAAKwB,EAAaC,EAAkB1xB,GAChEzF,MAAMqH,EAAWC,EAAO7B,GAMxB1K,KAAKq8B,aAAeF,EAQpBn8B,KAAKs8B,KAAO3B,EAEZ36B,KAAKuH,IAAMozB,EAMX36B,KAAKq7B,OAAS,IAAIvsB,MACE,OAAhBqtB,IACFn8B,KAAKq7B,OAAOc,YAAcA,GAO5Bn8B,KAAKu8B,UAAY,KAMjBv8B,KAAKw8B,kBAAoBJ,CAC1B,CAOD,QAAAd,GACE,OAAOt7B,KAAKq7B,MACb,CAMD,QAAAO,CAAStxB,GACPtK,KAAKq7B,OAAS/wB,EACdtK,KAAKuM,MAAQV,EACb7L,KAAKy8B,iBACLz8B,KAAK6H,SACN,CAOD,iBAAA60B,GACE18B,KAAKuM,MAAQV,EACb7L,KAAKy8B,iBACLz8B,KAAKq7B,OA8FT,WACE,MAAMsB,EAAMptB,GAAsB,EAAG,GAGrC,OAFAotB,EAAIC,UAAY,gBAChBD,EAAIE,SAAS,EAAG,EAAG,EAAG,GACfF,EAAI/sB,MACb,CAnGkBktB,GACd98B,KAAK6H,SACN,CAOD,gBAAAk1B,GACE,MAAMlqB,EAAyC7S,KAAW,OACtD6S,EAAMmqB,cAAgBnqB,EAAMoqB,cAC9Bj9B,KAAKuM,MAAQV,EAEb7L,KAAKuM,MAAQV,EAEf7L,KAAKy8B,iBACLz8B,KAAK6H,SACN,CAuCD,IAAAwF,GACMrN,KAAKuM,OAASV,IAChB7L,KAAKuM,MAAQV,EACb7L,KAAKq7B,OAAS,IAAIvsB,MACQ,OAAtB9O,KAAKq8B,eACPr8B,KAAKq7B,OAAOc,YAAcn8B,KAAKq8B,eAG/Br8B,KAAKuM,OAASV,IAChB7L,KAAKuM,MAAQV,EACb7L,KAAK6H,UACL7H,KAAKw8B,kBAAkBx8B,KAAMA,KAAKs8B,MAClCt8B,KAAKu8B,UAAYpC,GACfn6B,KAAKq7B,OACLr7B,KAAK+8B,iBAAiB71B,KAAKlH,MAC3BA,KAAK08B,kBAAkBx1B,KAAKlH,OAGjC,CAOD,cAAAy8B,GACMz8B,KAAKu8B,YACPv8B,KAAKu8B,YACLv8B,KAAKu8B,UAAY,KAEpB,GChDH,IAAAW,GAnHA,MAOE,WAAAp9B,CAAYq9B,EAAOC,EAAaC,GAK9Br9B,KAAKs9B,OAASH,EAMdn9B,KAAKu9B,aAAeH,EAMpBp9B,KAAKw9B,OAASH,EAMdr9B,KAAKy9B,QAAU,GAMfz9B,KAAK09B,OAAS,EAMd19B,KAAK29B,iBAAmB,CACzB,CAKD,KAAA57B,GACE/B,KAAKy9B,QAAQt8B,OAAS,EACtBnB,KAAK09B,OAAS,EACd19B,KAAK29B,iBAAmB,CACzB,CAMD,MAAAC,CAAOxmB,EAAGC,GACRrX,KAAKy9B,QAAQ93B,KAAKyR,EAAGC,EAAGwmB,KAAKC,MAC9B,CAKD,GAAA97B,GACE,GAAIhC,KAAKy9B,QAAQt8B,OAAS,EAGxB,OAAO,EAET,MAAMk8B,EAAQQ,KAAKC,MAAQ99B,KAAKw9B,OAC1BO,EAAY/9B,KAAKy9B,QAAQt8B,OAAS,EACxC,GAAInB,KAAKy9B,QAAQM,EAAY,GAAKV,EAGhC,OAAO,EAIT,IAAIW,EAAaD,EAAY,EAC7B,KAAOC,EAAa,GAAKh+B,KAAKy9B,QAAQO,EAAa,GAAKX,GACtDW,GAAc,EAGhB,MAAMC,EAAWj+B,KAAKy9B,QAAQM,EAAY,GAAK/9B,KAAKy9B,QAAQO,EAAa,GAIzE,GAAIC,EAAW,IAAO,GACpB,OAAO,EAGT,MAAMpmB,EAAK7X,KAAKy9B,QAAQM,GAAa/9B,KAAKy9B,QAAQO,GAC5ClmB,EAAK9X,KAAKy9B,QAAQM,EAAY,GAAK/9B,KAAKy9B,QAAQO,EAAa,GAGnE,OAFAh+B,KAAK09B,OAAS1xB,KAAKmc,MAAMrQ,EAAID,GAC7B7X,KAAK29B,iBAAmB3xB,KAAKka,KAAKrO,EAAKA,EAAKC,EAAKA,GAAMmmB,EAChDj+B,KAAK29B,iBAAmB39B,KAAKu9B,YACrC,CAKD,WAAA1V,GACE,OAAQ7nB,KAAKu9B,aAAev9B,KAAK29B,kBAAoB39B,KAAKs9B,MAC3D,CAKD,QAAAY,GACE,OAAOl+B,KAAK09B,MACb,GCpHYS,GAAA,CACd1oB,KAAM,MACN+F,IAAK,CAAC,EAAE,EAAE,GACVC,IAAK,CAAC,IAAI,IAAI,KACd2iB,QAAS,CAAC,MAAO,QAAS,QAC1BC,MAAO,CAAC,QCJLC,GAAM,CACT7oB,KAAM,MACN+F,IAAK,CAAC,EAAE,EAAE,GACV4iB,QAAS,CAAC,IAAI,IAAI,KAClBC,MAAO,CAAC,MAAO,SAAU,WAS1BC,WAAiB,CAEhB,EAAG,CAEFC,EAAE,CAAC,OAAQ,IAAK,QAEhBC,EAAG,CAAC,OAAQ,IAAK,SACjBC,IAAK,CAAC,OAAQ,IAAK,QACnBC,IAAK,CAAC,OAAQ,IAAK,QAEnBC,IAAK,CAAC,gBAAiB,IAAK,mBAC5BC,IAAK,CAAC,OAAQ,IAAK,SAGnBC,GAAI,CAAC,OAAQ,IAAK,QAKlBC,GAAI,CAAC,OAAQ,IAAK,SAIlBC,IAAK,CAAC,QAAS,IAAK,OAEpBC,EAAG,CAAC,IAAI,IAAI,MAIb,GAAI,CAEHT,EAAE,CAAC,QAAS,IAAK,MACjBC,EAAG,CAAC,OAAQ,IAAK,SACjBC,IAAK,CAAC,MAAQ,IAAK,QACnBC,IAAK,CAAC,OAAQ,IAAK,QAEnBC,IAAK,CAAC,OAAQ,IAAK,SACnBC,IAAK,CAAC,OAAQ,IAAK,SAEnBC,GAAI,CAAC,OAAS,IAAK,QACnBC,GAAI,CAAC,OAAQ,IAAK,SAClBC,IAAK,CAAC,QAAS,IAAK,QACpBC,EAAG,CAAC,IAAI,IAAI,QAQdV,GAAI7iB,IAAM6iB,GAAIW,WAAW,GAAGN,IAU5BL,GAAIH,IAAM,SAAUe,EAAMC,GAEzBA,EAAQA,GAASb,GAAIW,WAAW,GAAGD,EAEnC,IAGC9a,EAAGkb,EAAG99B,EAHH8V,EAAI8nB,EAAK,GAAKC,EAAM,GACvB9nB,EAAI6nB,EAAK,GAAKC,EAAM,GACpBE,EAAIH,EAAK,GAAKC,EAAM,GAsBrB,OAhBAC,GAAU,gBAALhoB,EAA8B,iBAAJC,EAA6B,iBAAJgoB,EACxD/9B,EAAS,iBAAJ8V,GAA+B,gBAALC,EAA8B,kBAAJgoB,EAEzDnb,GAJAA,EAAS,kBAAJ9M,GAA+B,kBAALC,GAAgC,cAALgoB,GAIlD,SAAc,MAAQrzB,KAAKC,IAAIiY,EAAG,EAAM,KAAQ,KACrDA,GAAS,MAEZkb,EAAIA,EAAI,SAAc,MAAQpzB,KAAKC,IAAImzB,EAAG,EAAM,KAAQ,KACrDA,GAAS,MAEZ99B,EAAIA,EAAI,SAAc,MAAQ0K,KAAKC,IAAI3K,EAAG,EAAM,KAAQ,KACrDA,GAAS,MAML,CAAK,KAJZ4iB,EAAIlY,KAAKwP,IAAIxP,KAAKyP,IAAI,EAAGyI,GAAI,IAIR,KAHrBkb,EAAIpzB,KAAKwP,IAAIxP,KAAKyP,IAAI,EAAG2jB,GAAI,IAGC,KAF9B99B,EAAI0K,KAAKwP,IAAIxP,KAAKyP,IAAI,EAAGna,GAAI,IAG9B,EAWA68B,GAAIG,IAAM,SAASH,EAAKgB,GACvB,IAAIjb,EAAIia,EAAI,GAAK,IACfiB,EAAIjB,EAAI,GAAK,IACb78B,EAAI68B,EAAI,GAAK,IAQX9mB,EAAS,iBALb6M,EAAIA,EAAI,OAAUlY,KAAKC,KAAMiY,EAAI,MAAS,MAAQ,KAAQA,EAAI,OAKxB,iBAJtCkb,EAAIA,EAAI,OAAUpzB,KAAKC,KAAMmzB,EAAI,MAAS,MAAQ,KAAQA,EAAI,OAIC,kBAH/D99B,EAAIA,EAAI,OAAU0K,KAAKC,KAAM3K,EAAI,MAAS,MAAQ,KAAQA,EAAI,OAI1D+9B,EAAS,iBAAJnb,EAA8B,gBAAJkb,EAA6B,gBAAJ99B,EAI5D,MAAO,EANM,gBAAJ4iB,EAA6B,gBAAJkb,EAA6B,gBAAJ99B,IAI3D69B,EAAQA,GAASb,GAAIW,WAAW,GAAGD,GAEjB,GAAI3nB,EAAI8nB,EAAM,GAAIE,EAAIF,EAAM,GAC/C,EAIA,IAAAG,GAAehB,GCtIAiB,GAAA,CACd9pB,KAAM,MAKN+F,IAAK,CAAC,GAAG,KAAK,KACdC,IAAK,CAAC,IAAI,IAAI,KACd2iB,QAAS,CAAC,YAAa,IAAK,KAC5BC,MAAO,CAAC,MAAO,SAAU,WAEzBC,IAAK,SAASkB,EAAK59B,EAAG69B,GACrB,IAAIC,EAAIC,EAAI5gB,EAAG6gB,EAAGC,EAAMxoB,EAAMyoB,EAAIC,EAAIC,EAGtC,GAFAjhB,EAAIygB,EAAI,GAAII,EAAIJ,EAAI,GAAIK,EAAIL,EAAI,GAEtB,IAANzgB,EAAS,MAAO,CAAC,EAAE,EAAE,GAkCzB,OA3BAnd,EAAIA,GAAK,MACT69B,EAAIA,GAAK,EAYTC,EAAKE,GAAK,GAAK7gB,GANT,GAJN+gB,EAAKxB,GAAIW,WAAWQ,GAAG79B,GAAG,KAITk+B,EAAM,IAHvBC,EAAKzB,GAAIW,WAAWQ,GAAG79B,GAAG,IAGS,GAFnCo+B,EAAK1B,GAAIW,WAAWQ,GAAG79B,GAAG,MAQA,EAC1B+9B,EAAKE,GAAK,GAAK9gB,GANT,EAAIghB,GAAOD,EAAM,GAAKC,EAAO,EAAIC,IAMb,EAanB,CARC,GAHR3oB,EAAI0H,EAAI,EAAIghB,EAAK/zB,KAAKC,KAAM8S,EAAI,IAAM,IAAM,GAAKghB,EAAKhhB,EAnB9C,sBAsBI2gB,GAAM,EAAIC,IAAO,EAQlBtoB,EAPPA,GAAK,GAAK,EAAIqoB,EAAK,GAAKC,IAAO,EAAIA,IAAO,EAQ9C,GAOCL,GAACC,IAAM,SAASC,EAAK59B,EAAG69B,GAC1B,IAAIC,EAAIC,EAAI5gB,EAAS3H,EAAGC,EAAGgoB,EAAGS,EAAIC,EAAIC,EAAIr4B,EAAIs4B,EAO9Cr+B,EAAIA,GAAK,MACT69B,EAAIA,GAAK,EAMT93B,EAAM,GAJNm4B,EAAKxB,GAAIW,WAAWQ,GAAG79B,GAAG,KAITk+B,EAAM,IAHvBC,EAAKzB,GAAIW,WAAWQ,GAAG79B,GAAG,IAGS,GAFnCo+B,EAAK1B,GAAIW,WAAWQ,GAAG79B,GAAG,KAG1Bq+B,EAAM,EAAIF,GAAOD,EAAM,GAAKC,EAAO,EAAIC,GAMvCN,EAAM,GAHNtoB,EAAIooB,EAAI,KAGQpoB,EAAK,IAHTC,EAAImoB,EAAI,IAGY,GAHRH,EAAIG,EAAI,MAGW,EAC3CG,EAAM,EAAItoB,GAAMD,EAAK,GAAKC,EAAM,EAAIgoB,IAAO,EAE3C,IAAIa,EAAK7oB,EAAE0oB,EAOX,MAAO,CALPhhB,EAAImhB,GAvBI,oBACA,kBAsBUA,EAAK,IAAMl0B,KAAKC,IAAIi0B,EAAI,EAAE,GAAK,GAE7C,GAAKnhB,GAAK2gB,EAAK/3B,GACf,GAAKoX,GAAK4gB,EAAKM,GAGpB,ECxFA,IAAIE,GAAQ,CACX1qB,KAAM,QACN2oB,QAAS,CAAC,YAAa,SAAU,OACjCC,MAAO,CAAC,QAAS,YACjB7iB,IAAK,CAAC,EAAE,EAAE,GACVC,IAAK,CAAC,IAAI,IAAI,KAEd8jB,IAAK,SAASA,GACb,IAGMa,EAHFrhB,EAAIwgB,EAAI,GACZxoB,EAAIwoB,EAAI,GAOR,OAHAa,EAHIb,EAAI,GAGC,IAAM,EAAIvzB,KAAK6T,GAGjB,CAACd,EAFJhI,EAAI/K,KAAKwL,IAAI4oB,GACbrpB,EAAI/K,KAAKyL,IAAI2oB,GAEjB,EAED9B,IAAK,SAASkB,GACb,OAAOD,GAAIjB,IAAI6B,GAAMZ,IAAIC,GACzB,wGAKFD,GAAIY,MAAQ,SAASZ,GACpB,IAAIxgB,EAAIwgB,EAAI,GAAIK,EAAIL,EAAI,GAAIM,EAAIN,EAAI,GAEhCxoB,EAAI/K,KAAKka,KAAK0Z,EAAEA,EAAIC,EAAEA,GAEtBQ,EAAS,IADJr0B,KAAKmc,MAAM0X,EAAED,GACH,EAAI5zB,KAAK6T,GAK5B,OAJIwgB,EAAI,IACPA,GAAK,KAGC,CAACthB,EAAEhI,EAAEspB,EACb,EAEA/B,GAAI6B,MAAQ,SAASX,GACnB,OAAOD,GAAIY,MAAM7B,GAAIiB,IAAIC,GAC3B,EChDA,UAAiB,CAChBc,UAAa,CAAC,IAAK,IAAK,KACxBC,aAAgB,CAAC,IAAK,IAAK,KAC3BC,KAAQ,CAAC,EAAG,IAAK,KACjBC,WAAc,CAAC,IAAK,IAAK,KACzBC,MAAS,CAAC,IAAK,IAAK,KACpBC,MAAS,CAAC,IAAK,IAAK,KACpBC,OAAU,CAAC,IAAK,IAAK,KACrBC,MAAS,CAAC,EAAG,EAAG,GAChBC,eAAkB,CAAC,IAAK,IAAK,KAC7BC,KAAQ,CAAC,EAAG,EAAG,KACfC,WAAc,CAAC,IAAK,GAAI,KACxBC,MAAS,CAAC,IAAK,GAAI,IACnBC,UAAa,CAAC,IAAK,IAAK,KACxBC,UAAa,CAAC,GAAI,IAAK,KACvBC,WAAc,CAAC,IAAK,IAAK,GACzBC,UAAa,CAAC,IAAK,IAAK,IACxBC,MAAS,CAAC,IAAK,IAAK,IACpBC,eAAkB,CAAC,IAAK,IAAK,KAC7BC,SAAY,CAAC,IAAK,IAAK,KACvBC,QAAW,CAAC,IAAK,GAAI,IACrBC,KAAQ,CAAC,EAAG,IAAK,KACjBC,SAAY,CAAC,EAAG,EAAG,KACnBC,SAAY,CAAC,EAAG,IAAK,KACrBC,cAAiB,CAAC,IAAK,IAAK,IAC5BC,SAAY,CAAC,IAAK,IAAK,KACvBC,UAAa,CAAC,EAAG,IAAK,GACtBC,SAAY,CAAC,IAAK,IAAK,KACvBC,UAAa,CAAC,IAAK,IAAK,KACxBC,YAAe,CAAC,IAAK,EAAG,KACxBC,eAAkB,CAAC,GAAI,IAAK,IAC5BC,WAAc,CAAC,IAAK,IAAK,GACzBC,WAAc,CAAC,IAAK,GAAI,KACxBC,QAAW,CAAC,IAAK,EAAG,GACpBC,WAAc,CAAC,IAAK,IAAK,KACzBC,aAAgB,CAAC,IAAK,IAAK,KAC3BC,cAAiB,CAAC,GAAI,GAAI,KAC1BC,cAAiB,CAAC,GAAI,GAAI,IAC1BC,cAAiB,CAAC,GAAI,GAAI,IAC1BC,cAAiB,CAAC,EAAG,IAAK,KAC1BC,WAAc,CAAC,IAAK,EAAG,KACvBC,SAAY,CAAC,IAAK,GAAI,KACtBC,YAAe,CAAC,EAAG,IAAK,KACxBC,QAAW,CAAC,IAAK,IAAK,KACtBC,QAAW,CAAC,IAAK,IAAK,KACtBC,WAAc,CAAC,GAAI,IAAK,KACxBC,UAAa,CAAC,IAAK,GAAI,IACvBC,YAAe,CAAC,IAAK,IAAK,KAC1BC,YAAe,CAAC,GAAI,IAAK,IACzBC,QAAW,CAAC,IAAK,EAAG,KACpBC,UAAa,CAAC,IAAK,IAAK,KACxBC,WAAc,CAAC,IAAK,IAAK,KACzBC,KAAQ,CAAC,IAAK,IAAK,GACnBC,UAAa,CAAC,IAAK,IAAK,IACxBC,KAAQ,CAAC,IAAK,IAAK,KACnBC,MAAS,CAAC,EAAG,IAAK,GAClBC,YAAe,CAAC,IAAK,IAAK,IAC1BC,KAAQ,CAAC,IAAK,IAAK,KACnBC,SAAY,CAAC,IAAK,IAAK,KACvBC,QAAW,CAAC,IAAK,IAAK,KACtBC,UAAa,CAAC,IAAK,GAAI,IACvBC,OAAU,CAAC,GAAI,EAAG,KAClBC,MAAS,CAAC,IAAK,IAAK,KACpBC,MAAS,CAAC,IAAK,IAAK,KACpBC,SAAY,CAAC,IAAK,IAAK,KACvBC,cAAiB,CAAC,IAAK,IAAK,KAC5BC,UAAa,CAAC,IAAK,IAAK,GACxBC,aAAgB,CAAC,IAAK,IAAK,KAC3BC,UAAa,CAAC,IAAK,IAAK,KACxBC,WAAc,CAAC,IAAK,IAAK,KACzBC,UAAa,CAAC,IAAK,IAAK,KACxBC,qBAAwB,CAAC,IAAK,IAAK,KACnCC,UAAa,CAAC,IAAK,IAAK,KACxBC,WAAc,CAAC,IAAK,IAAK,KACzBC,UAAa,CAAC,IAAK,IAAK,KACxBC,UAAa,CAAC,IAAK,IAAK,KACxBC,YAAe,CAAC,IAAK,IAAK,KAC1BC,cAAiB,CAAC,GAAI,IAAK,KAC3BC,aAAgB,CAAC,IAAK,IAAK,KAC3BC,eAAkB,CAAC,IAAK,IAAK,KAC7BC,eAAkB,CAAC,IAAK,IAAK,KAC7BC,eAAkB,CAAC,IAAK,IAAK,KAC7BC,YAAe,CAAC,IAAK,IAAK,KAC1BC,KAAQ,CAAC,EAAG,IAAK,GACjBC,UAAa,CAAC,GAAI,IAAK,IACvBC,MAAS,CAAC,IAAK,IAAK,KACpBC,QAAW,CAAC,IAAK,EAAG,KACpBC,OAAU,CAAC,IAAK,EAAG,GACnBC,iBAAoB,CAAC,IAAK,IAAK,KAC/BC,WAAc,CAAC,EAAG,EAAG,KACrBC,aAAgB,CAAC,IAAK,GAAI,KAC1BC,aAAgB,CAAC,IAAK,IAAK,KAC3BC,eAAkB,CAAC,GAAI,IAAK,KAC5BC,gBAAmB,CAAC,IAAK,IAAK,KAC9BC,kBAAqB,CAAC,EAAG,IAAK,KAC9BC,gBAAmB,CAAC,GAAI,IAAK,KAC7BC,gBAAmB,CAAC,IAAK,GAAI,KAC7BC,aAAgB,CAAC,GAAI,GAAI,KACzBC,UAAa,CAAC,IAAK,IAAK,KACxBC,UAAa,CAAC,IAAK,IAAK,KACxBC,SAAY,CAAC,IAAK,IAAK,KACvBC,YAAe,CAAC,IAAK,IAAK,KAC1BC,KAAQ,CAAC,EAAG,EAAG,KACfC,QAAW,CAAC,IAAK,IAAK,KACtBC,MAAS,CAAC,IAAK,IAAK,GACpBC,UAAa,CAAC,IAAK,IAAK,IACxBC,OAAU,CAAC,IAAK,IAAK,GACrBC,UAAa,CAAC,IAAK,GAAI,GACvBC,OAAU,CAAC,IAAK,IAAK,KACrBC,cAAiB,CAAC,IAAK,IAAK,KAC5BC,UAAa,CAAC,IAAK,IAAK,KACxBC,cAAiB,CAAC,IAAK,IAAK,KAC5BC,cAAiB,CAAC,IAAK,IAAK,KAC5BC,WAAc,CAAC,IAAK,IAAK,KACzBC,UAAa,CAAC,IAAK,IAAK,KACxBC,KAAQ,CAAC,IAAK,IAAK,IACnBC,KAAQ,CAAC,IAAK,IAAK,KACnBC,KAAQ,CAAC,IAAK,IAAK,KACnBC,WAAc,CAAC,IAAK,IAAK,KACzBC,OAAU,CAAC,IAAK,EAAG,KACnBC,cAAiB,CAAC,IAAK,GAAI,KAC3BC,IAAO,CAAC,IAAK,EAAG,GAChBC,UAAa,CAAC,IAAK,IAAK,KACxBC,UAAa,CAAC,GAAI,IAAK,KACvBC,YAAe,CAAC,IAAK,GAAI,IACzBC,OAAU,CAAC,IAAK,IAAK,KACrBC,WAAc,CAAC,IAAK,IAAK,IACzBC,SAAY,CAAC,GAAI,IAAK,IACtBC,SAAY,CAAC,IAAK,IAAK,KACvBC,OAAU,CAAC,IAAK,GAAI,IACpBC,OAAU,CAAC,IAAK,IAAK,KACrBC,QAAW,CAAC,IAAK,IAAK,KACtBC,UAAa,CAAC,IAAK,GAAI,KACvBC,UAAa,CAAC,IAAK,IAAK,KACxBC,UAAa,CAAC,IAAK,IAAK,KACxBC,KAAQ,CAAC,IAAK,IAAK,KACnBC,YAAe,CAAC,EAAG,IAAK,KACxBC,UAAa,CAAC,GAAI,IAAK,KACvBxmB,IAAO,CAAC,IAAK,IAAK,KAClBymB,KAAQ,CAAC,EAAG,IAAK,KACjBC,QAAW,CAAC,IAAK,IAAK,KACtBC,OAAU,CAAC,IAAK,GAAI,IACpBC,UAAa,CAAC,GAAI,IAAK,KACvBC,OAAU,CAAC,IAAK,IAAK,KACrBC,MAAS,CAAC,IAAK,IAAK,KACpBjK,MAAS,CAAC,IAAK,IAAK,KACpBkK,WAAc,CAAC,IAAK,IAAK,KACzBC,OAAU,CAAC,IAAK,IAAK,GACrBC,YAAe,CAAC,IAAK,IAAK,MC1IvBC,GAAW,CACd1B,IAAK,EACLf,OAAQ,GACRuC,OAAQ,IACR1F,MAAO,IACP7C,KAAM,IACN6G,OAAQ,KCbM,IAAA6B,GAAA,CACdh0B,KAAM,MACN+F,IAAK,CAAC,EAAE,EAAE,GACVC,IAAK,CAAC,IAAI,IAAI,KACd2iB,QAAS,CAAC,MAAO,aAAc,aAC/BC,MAAO,CAAC,OAERF,IAAK,SAASsL,GACb,IAAoDC,EAAIC,EAAIC,EAAIzL,EAAKviB,EAAjEykB,EAAIoJ,EAAI,GAAG,IAAKI,EAAIJ,EAAI,GAAG,IAAK1qB,EAAI0qB,EAAI,GAAG,IAA2B7nC,EAAE,EAE5E,GAAU,IAANioC,EAAS,MAAsB,CAAfjuB,EAAU,IAAJmD,EAAenD,EAAKA,GAM9C,IAHA8tB,EAAK,EAAI3qB,GADT4qB,EAAK5qB,EAAI,GAAMA,GAAK,EAAI8qB,GAAK9qB,EAAI8qB,EAAI9qB,EAAI8qB,GAGzC1L,EAAM,CAAC,EAAG,EAAG,GACPv8B,EAAE,IACPgoC,EAAKvJ,EAAI,EAAI,IAAOz+B,EAAI,IACnB,EAAIgoC,IAAOA,EAAK,GAAKA,IAC1BhuB,EAAM,EAAIguB,EAAK,EAAIF,EAAiB,GAAXC,EAAKD,GAAUE,EACxC,EAAIA,EAAK,EAAID,EACb,EAAIC,EAAK,EAAKF,GAAMC,EAAKD,IAAO,EAAI,EAAIE,GAAM,EAC9CF,EACAvL,EAAIv8B,KAAa,IAANga,EAGZ,OAAOuiB,CACP,GC3Ba,SAAS2L,GAAKC,GAKzB,IAAC/gC,EAHA3G,MAAMC,QAAQynC,IAAUA,EAAMC,MAAKD,EAAQnhC,OAAOohC,OAAOhmC,YACzD+lC,aAAiBE,SAAQF,GAASA,GAKtC,IAAIG,EFaL,SAAeC,GACd,IAAInqB,EAA0BoqB,EAAvBC,EAAQ,GAAIC,EAAQ,EAG3B,GAAoB,iBAATH,EACV,MAAO,CAAEC,MAAO,MAAOphC,OAAQ,CAACmhC,IAAS,IAAY,MAAPA,KAAqB,EAAU,IAAPA,GAAkBG,MAAO,GAEhG,GAAoB,iBAATH,EAAmB,MAAO,CAAEC,MAAO,MAAOphC,OAAQ,CAACmhC,IAAS,IAAY,MAAPA,KAAqB,EAAU,IAAPA,GAAkBG,MAAO,GAK7H,GAHAH,EAAOvhC,OAAOuhC,GAAMn8B,cAGhBu8B,GAAMJ,GACTE,EAAQE,GAAMJ,GAAMrmC,QACpBsmC,EAAQ,WAIJ,GAAa,gBAATD,EACRG,EAAQ,EACRF,EAAQ,MACRC,EAAQ,CAAC,EAAG,EAAG,QAIX,GAAgB,MAAZF,EAAK,GAAY,CACzB,IAAIK,EAAOL,EAAKrmC,MAAM,GAClB2P,EAAO+2B,EAAKrpC,OAEhBmpC,EAAQ,EADM72B,GAAQ,GAIrB42B,EAAQ,CACP75B,SAASg6B,EAAK,GAAKA,EAAK,GAAI,IAC5Bh6B,SAASg6B,EAAK,GAAKA,EAAK,GAAI,IAC5Bh6B,SAASg6B,EAAK,GAAKA,EAAK,GAAI,KAEhB,IAAT/2B,IACH62B,EAAQ95B,SAASg6B,EAAK,GAAKA,EAAK,GAAI,IAAM,OAI3CH,EAAQ,CACP75B,SAASg6B,EAAK,GAAKA,EAAK,GAAI,IAC5Bh6B,SAASg6B,EAAK,GAAKA,EAAK,GAAI,IAC5Bh6B,SAASg6B,EAAK,GAAKA,EAAK,GAAI,KAEhB,IAAT/2B,IACH62B,EAAQ95B,SAASg6B,EAAK,GAAKA,EAAK,GAAI,IAAM,MAIvCH,EAAM,KAAIA,EAAM,GAAK,GACrBA,EAAM,KAAIA,EAAM,GAAK,GACrBA,EAAM,KAAIA,EAAM,GAAK,GAE1BD,EAAQ,KACR,MAGI,GAAIpqB,EAAI,yGAAyGyqB,KAAKN,GAAO,CACjI,IAAI10B,EAAOuK,EAAE,GAET0qB,EAAiB,UADrBN,EAAQ30B,EAAK6N,QAAQ,KAAM,KACG,EAAc,SAAV8mB,EAAmB,EAAI,EACzDC,EAAQrqB,EAAE,GAAG2qB,OAAOhlB,MAAM,mBAGZ,UAAVykB,IAAmBA,EAAQC,EAAMx6B,SA2CrCy6B,GAzCAD,EAAQA,EAAMO,KAAI,SAAUxzB,EAAGxV,GAE9B,GAAwB,MAApBwV,EAAEA,EAAEjW,OAAS,GAGhB,OAFAiW,EAAIyzB,WAAWzzB,GAAK,IAEV,IAANxV,EAAgBwV,EAEN,QAAVgzB,EAA4B,IAAJhzB,EAEX,MAAbgzB,EAAM,GAAuB,IAAJhzB,EAEZ,MAAbgzB,EAAM,IAAexoC,EAEX,QAAVwoC,EAA4B,IAAJhzB,EAEd,QAAVgzB,EAAwBxoC,EAAI,EAAQ,IAAJwV,EAAc,IAAJA,EAE7B,MAAbgzB,EAAM,IAAexoC,EAEX,UAAVwoC,EAA8B,GAAJhzB,EAEhB,UAAVgzB,EAA0BxoC,EAAI,EAAQ,GAAJwV,EAAc,IAAJA,EAEzCA,EAN4BA,EANI,IAAJA,EAgBpC,GAAiB,MAAbgzB,EAAMxoC,IAAqB,IAANA,GAAuC,MAA5BwoC,EAAMA,EAAMjpC,OAAS,GAAa,CAErE,QAAoBqF,IAAhBgjC,GAASpyB,GAAkB,OAAOoyB,GAASpyB,GAE/C,GAAIA,EAAE0zB,SAAS,OAAQ,OAAOD,WAAWzzB,GAEzC,GAAIA,EAAE0zB,SAAS,QAAS,OAAuB,IAAhBD,WAAWzzB,GAC1C,GAAIA,EAAE0zB,SAAS,QAAS,OAAuB,IAAhBD,WAAWzzB,GAAW,IACrD,GAAIA,EAAE0zB,SAAS,OAAQ,OAAuB,IAAhBD,WAAWzzB,GAAWpL,KAAK6T,EACzD,CACD,MAAU,SAANzI,EAAqB,EAClByzB,WAAWzzB,EACrB,KAEgBjW,OAASupC,EAAOL,EAAMp/B,MAAQ,CAC5C,KAGQ,mBAAmBmD,KAAK+7B,KAChCE,EAAQF,EAAKY,MAAM,aAAaH,KAAI,SAAUvmC,GAC7C,OAAOwmC,WAAWxmC,EACrB,IAEE+lC,EAAQD,EAAKY,MAAM,cAAclyB,KAAK,KAAK7K,eAAiB,OAG7D,MAAO,CACNo8B,QACAphC,OAAQqhC,EACRC,QAEF,CE5IcU,CAAMjB,GAEnB,IAAKG,EAAOE,MAAO,MAAO,GAE1B,MAAM5uB,EAA0B,MAApB0uB,EAAOE,MAAM,GAAaX,GAAIjuB,IAAM2iB,GAAI3iB,IAC9CC,EAA0B,MAApByuB,EAAOE,MAAM,GAAaX,GAAIhuB,IAAM0iB,GAAI1iB,IAapD,OAXAzS,EAAS3G,MAAM,IACR,GAAK2J,KAAKwP,IAAIxP,KAAKyP,IAAIyuB,EAAOlhC,OAAO,GAAIwS,EAAI,IAAKC,EAAI,IAC7DzS,EAAO,GAAKgD,KAAKwP,IAAIxP,KAAKyP,IAAIyuB,EAAOlhC,OAAO,GAAIwS,EAAI,IAAKC,EAAI,IAC7DzS,EAAO,GAAKgD,KAAKwP,IAAIxP,KAAKyP,IAAIyuB,EAAOlhC,OAAO,GAAIwS,EAAI,IAAKC,EAAI,IAErC,MAApByuB,EAAOE,MAAM,KAChBphC,EAASygC,GAAItL,IAAIn1B,IAGlBA,EAAOrD,KAAKqG,KAAKwP,IAAIxP,KAAKyP,IAAIyuB,EAAOI,MAAO,GAAI,IAEzCthC,CACR,CCRO,SAASiiC,GAASlB,GACvB,MAAqB,iBAAVA,EACFA,EAEFpxB,GAASoxB,EAClB,CFQA5L,GAAIsL,IAAM,SAAStL,GAClB,IAMEkC,EAAMthB,EANJmF,EAAIia,EAAI,GAAG,IACbiB,EAAIjB,EAAI,GAAG,IACX78B,EAAI68B,EAAI,GAAG,IACX3iB,EAAMxP,KAAKwP,IAAI0I,EAAGkb,EAAG99B,GACrBma,EAAMzP,KAAKyP,IAAIyI,EAAGkb,EAAG99B,GACrBoM,EAAQ+N,EAAMD,EAkChB,OA/BIC,IAAQD,EACX6kB,EAAI,EAEInc,IAAMzI,EACd4kB,GAAKjB,EAAI99B,GAAKoM,EAEN0xB,IAAM3jB,EACd4kB,EAAI,GAAK/+B,EAAI4iB,GAAKxW,EAEVpM,IAAMma,IACd4kB,EAAI,GAAKnc,EAAIkb,GAAI1xB,IAGlB2yB,EAAIr0B,KAAKwP,IAAQ,GAAJ6kB,EAAQ,MAEb,IACPA,GAAK,KAGNthB,GAAKvD,EAAMC,GAAO,EAYX,CAAC4kB,EAAO,KAVX5kB,IAAQD,EACP,EAEIuD,GAAK,GACTrR,GAAS+N,EAAMD,GAGf9N,GAAS,EAAI+N,EAAMD,IAGA,IAAJuD,EACrB,EE5CA,MAAMmsB,GAAiB,KAQjB7nB,GAAQ,CAAA,EAKd,IAAI8nB,GAAY,EAQT,SAASC,GAAUrB,GACxB,GAAqB,IAAjBA,EAAM5oC,OACR,OAAO4oC,EAET,MAAMhnB,EAASgnB,EAAMjmC,QAErB,OADAif,EAAO,GAAK,EACLA,CACT,CAMO,SAASsoB,GAAWtB,GACzB,MAAMhnB,EAASub,GAAI6B,MAAMhC,GAAIG,IAAIyL,IAEjC,OADAhnB,EAAO,GAAKgnB,EAAM,GACXhnB,CACT,CAMO,SAASuoB,GAAWvB,GACzB,MAAMhnB,EAASub,GAAIH,IAAIgC,GAAM7B,IAAIyL,IAEjC,OADAhnB,EAAO,GAAKgnB,EAAM,GACXhnB,CACT,CAMO,SAASwoB,GAAW1B,GACzB,GAAIxmB,GAAMja,eAAeygC,GACvB,OAAOxmB,GAAMwmB,GAEf,GAAIsB,IAAaD,GAAgB,CAC/B,IAAItpC,EAAI,EACR,IAAK,MAAM2F,KAAO8b,GACE,IAAP,EAANzhB,cACIyhB,GAAM9b,KACX4jC,GAGP,CAED,MAAMpB,EAAQyB,GAAU3B,GACxB,GAAqB,IAAjBE,EAAM5oC,OACR,MAAM,IAAIoH,MAAM,oBAAsBshC,EAAI,cAE5C,IAAK,MAAM9yB,KAAKgzB,EACd,GAAIzb,MAAMvX,GACR,MAAM,IAAIxO,MAAM,oBAAsBshC,EAAI,cAM9C,OAHA4B,GAAU1B,GACV1mB,GAAMwmB,GAAKE,IACToB,GACKpB,CACT,CASO,SAAS2B,GAAQ3B,GACtB,OAAI1nC,MAAMC,QAAQynC,GACTA,EAEFwB,GAAWxB,EACpB,CAOO,SAAS0B,GAAU1B,GAKxB,OAJAA,EAAM,GAAKnmB,GAAOmmB,EAAM,GAAK,GAAO,EAAG,EAAG,KAC1CA,EAAM,GAAKnmB,GAAOmmB,EAAM,GAAK,GAAO,EAAG,EAAG,KAC1CA,EAAM,GAAKnmB,GAAOmmB,EAAM,GAAK,GAAO,EAAG,EAAG,KAC1CA,EAAM,GAAKnmB,GAAMmmB,EAAM,GAAI,EAAG,GACvBA,CACT,CAMO,SAASpxB,GAASoxB,GACvB,IAAI7lB,EAAI6lB,EAAM,GACV7lB,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,GAElB,IAAIkb,EAAI2K,EAAM,GACV3K,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,GAElB,IAAI99B,EAAIyoC,EAAM,GACVzoC,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,GAGlB,MAAO,QAAU4iB,EAAI,IAAMkb,EAAI,IAAM99B,EAAI,UADlBkF,IAAbujC,EAAM,GAAmB,EAAI/9B,KAAKgZ,MAAiB,IAAX+kB,EAAM,IAAY,KACjB,GACrD,CAMO,SAAS4B,GAAc9B,GAC5B,IAEE,OADA0B,GAAW1B,IACJ,CACR,CAAC,MAAO+B,GACP,OAAO,CACR,CACH,CCvKA,MAAMC,GACJ,WAAA/rC,GAKEE,KAAK8rC,OAAS,GAMd9rC,KAAK+rC,WAAa,EAMlB/rC,KAAKgsC,cAAgB,EACtB,CAKD,KAAArnC,GACE3E,KAAK8rC,OAAS,GACd9rC,KAAK+rC,WAAa,CACnB,CAKD,cAAAE,GACE,OAAOjsC,KAAK+rC,WAAa/rC,KAAKgsC,aAC/B,CAKD,MAAAE,GACE,GAAIlsC,KAAKisC,iBAAkB,CACzB,IAAIrqC,EAAI,EACR,IAAK,MAAM2F,KAAOvH,KAAK8rC,OAAQ,CAC7B,MAAMK,EAAYnsC,KAAK8rC,OAAOvkC,GACZ,IAAP,EAAN3F,MAAmBuqC,EAAU1lC,uBACzBzG,KAAK8rC,OAAOvkC,KACjBvH,KAAK+rC,WAEV,CACF,CACF,CAQD,GAAA5iC,CAAIwxB,EAAKwB,EAAa4N,GACpB,MAAMxiC,EAAMwF,GAAO4tB,EAAKwB,EAAa4N,GACrC,OAAOxiC,KAAOvH,KAAK8rC,OAAS9rC,KAAK8rC,OAAOvkC,GAAO,IAChD,CAQD,GAAAuC,CAAI6wB,EAAKwB,EAAa4N,EAAOoC,GAC3B,MAAM5kC,EAAMwF,GAAO4tB,EAAKwB,EAAa4N,GACrC/pC,KAAK8rC,OAAOvkC,GAAO4kC,IACjBnsC,KAAK+rC,UACR,CASD,OAAAK,CAAQC,GACNrsC,KAAKgsC,cAAgBK,EACrBrsC,KAAKksC,QACN,EASH,SAASn/B,GAAO4tB,EAAKwB,EAAa4N,GAEhC,OAAO5N,EAAc,IAAMxB,EAAM,KADboP,EAAQkB,GAASlB,GAAS,OAEhD,CAEA,IAAAuC,GAAeT,GAOR,MAAMU,GAAS,IAAIV,GC5GX,IAAAW,GACJ,UADIA,GAEJ,UAFIA,GAGL,SAHKA,GAIJ,SAJIA,GAKG,gBALHA,GAMG,gBANHA,GAOH,UAPGA,GAQH,UARGA,GASL,SATKA,GAUR,MCmYP,IAAAC,GAtVA,cAAwBjiC,EAItB,WAAA1K,CAAY4K,GACVzF,QAKAjF,KAAK0H,GAKL1H,KAAKiH,KAKLjH,KAAK2H,GAML3H,KAAK0sC,YAAchiC,EAAQiiC,WAK3B,MAAM93B,EAAanO,OAAO6C,OAAO,CAAE,EAAEmB,GACH,iBAAvBA,EAAQmK,oBACVA,EAAWA,WAClBnO,OAAO6C,OAAOsL,EAAYnK,EAAQmK,aAGpCA,EAAW23B,SACWhmC,IAApBkE,EAAQkiC,QAAwBliC,EAAQkiC,QAAU,EACpD54B,GAC+C,iBAAtCa,EAAW23B,IAClB,kCAGF33B,EAAW23B,SACWhmC,IAApBkE,EAAQmiC,SAAwBniC,EAAQmiC,QAC1Ch4B,EAAW23B,IAAyB9hC,EAAQoiC,OAC5Cj4B,EAAW23B,SACiBhmC,IAA1BkE,EAAQqiC,cAA8BriC,EAAQqiC,cAAgBvyB,IAChE3F,EAAW23B,SACiBhmC,IAA1BkE,EAAQsiC,cAA8BtiC,EAAQsiC,cAAgB,EAChEn4B,EAAW23B,SACWhmC,IAApBkE,EAAQuiC,QAAwBviC,EAAQuiC,SAAWzyB,IACrD3F,EAAW23B,SACWhmC,IAApBkE,EAAQwiC,QAAwBxiC,EAAQwiC,QAAU1yB,IAMpDxa,KAAKmtC,gBACsB3mC,IAAzBqO,EAAWu4B,UAA0Bv4B,EAAWu4B,UAAY,kBACvDv4B,EAAWu4B,UAElBptC,KAAKkJ,cAAc2L,GAMnB7U,KAAKqtC,OAAS,IACf,CAMD,aAAAC,GACE,OAAOttC,KAAK0sC,WACb,CAKD,YAAAa,GACE,OAAOvtC,KAAKmtC,UACb,CASD,aAAAK,CAAcC,GAEZ,MAAMlhC,EACJvM,KAAKqtC,QACa,CAChBK,MAAO1tC,KACPytC,aAAqBjnC,IAAZinC,GAA+BA,GAEtCX,EAAS9sC,KAAK2tC,YAWpB,OAVAphC,EAAMqgC,QAAUhpB,GAAM5X,KAAKgZ,MAA0B,IAApBhlB,KAAK4tC,cAAsB,IAAK,EAAG,GACpErhC,EAAMsgC,QAAU7sC,KAAK6tC,aACrBthC,EAAMgN,OAASvZ,KAAKof,YACpB7S,EAAMugC,YAAoBtmC,IAAXsmC,GAAyBvgC,EAAMkhC,QAAqBX,EAAXtyB,IACxDjO,EAAMwgC,cAAgB/sC,KAAK8tC,mBAC3BvhC,EAAMygC,cAAgBhhC,KAAKyP,IAAIzb,KAAK+tC,mBAAoB,GACxDxhC,EAAM0gC,QAAUjtC,KAAKguC,aACrBzhC,EAAM2gC,QAAUltC,KAAKiuC,aACrBjuC,KAAKqtC,OAAS9gC,EAEPA,CACR,CAQD,cAAA2hC,CAAezjC,GACb,OAAOnC,GACR,CAQD,mBAAA6lC,CAAoBC,GAClB,OAAO9lC,GACR,CASD,SAAA8W,GACE,OACEpf,KAAKmJ,IAAIqjC,GAEZ,CASD,gBAAAsB,GACE,OAA8B9tC,KAAKmJ,IAAIqjC,GACxC,CASD,gBAAAuB,GACE,OAA8B/tC,KAAKmJ,IAAIqjC,GACxC,CASD,UAAAwB,GACE,OAA8BhuC,KAAKmJ,IAAIqjC,GACxC,CASD,UAAAyB,GACE,OAA8BjuC,KAAKmJ,IAAIqjC,GACxC,CAQD,UAAAoB,GACE,OAA8B5tC,KAAKmJ,IAAIqjC,GACxC,CAMD,cAAA6B,GACE,OAAO/lC,GACR,CASD,UAAAulC,GACE,OAA+B7tC,KAAKmJ,IAAIqjC,GACzC,CASD,SAAAmB,GACE,OAAwC3tC,KAAKmJ,IAAIqjC,GAClD,CAMD,aAAA8B,CAAc3B,GACZ3sC,KAAK0sC,YAAcC,EACnB3sC,KAAK6H,SACN,CASD,SAAA+Z,CAAUrI,GACRvZ,KAAK8J,IAAI0iC,GAAsBjzB,EAChC,CAQD,gBAAAg1B,CAAiBxB,GACf/sC,KAAK8J,IAAI0iC,GAA8BO,EACxC,CAQD,gBAAAyB,CAAiBxB,GACfhtC,KAAK8J,IAAI0iC,GAA8BQ,EACxC,CAUD,UAAAyB,CAAWvB,GACTltC,KAAK8J,IAAI0iC,GAAwBU,EAClC,CAUD,UAAAwB,CAAWzB,GACTjtC,KAAK8J,IAAI0iC,GAAwBS,EAClC,CAQD,UAAA0B,CAAW/B,GACT54B,GAA0B,iBAAZ44B,EAAsB,kCACpC5sC,KAAK8J,IAAI0iC,GAAuBI,EACjC,CAQD,UAAAgC,CAAW/B,GACT7sC,KAAK8J,IAAI0iC,GAAuBK,EACjC,CASD,SAAAgC,CAAUC,GACR9uC,KAAK8J,IAAI0iC,GAAuBsC,EACjC,CAKD,eAAAruC,GACMT,KAAKqtC,SACPrtC,KAAKqtC,OAAOK,MAAQ,KACpB1tC,KAAKqtC,OAAS,MAEhBpoC,MAAMxE,iBACP,GC1YYsuC,GAMF,YANEA,GAaD,aAbCA,GAsBD,aAtBCA,GA+BA,cA/BAA,GAwCG,iBCxCHC,GACF,EADEA,GAEA,ECFAC,GAAA,CACbC,OAAQ,SACRC,WAAY,aACZC,SAAU,YCFL,MAAMC,GAAmB,GAMnBC,GAAoB,ICE1B,SAASC,GAAah2B,EAAQi2B,EAAYC,GAC/C,OAAA,SASYhzB,EAAQC,EAAYjJ,EAAMi8B,EAAUC,GAC5C,IAAKlzB,EACH,OAEF,IAAKC,IAAe8yB,EAClB,OAAO/yB,EAET,MAAMmzB,EAAYJ,EAAa,EAAI/7B,EAAK,GAAKiJ,EACvCmzB,EAAaL,EAAa,EAAI/7B,EAAK,GAAKiJ,EACxCozB,EAASH,EAAcA,EAAY,GAAK,EACxCI,EAASJ,EAAcA,EAAY,GAAK,EAC9C,IAAIx1B,EAAOZ,EAAO,GAAKq2B,EAAY,EAAIE,EACnCz1B,EAAOd,EAAO,GAAKq2B,EAAY,EAAIE,EACnC11B,EAAOb,EAAO,GAAKs2B,EAAa,EAAIE,EACpCz1B,EAAOf,EAAO,GAAKs2B,EAAa,EAAIE,EAIpC51B,EAAOE,IACTF,GAAQE,EAAOF,GAAQ,EACvBE,EAAOF,GAELC,EAAOE,IACTF,GAAQE,EAAOF,GAAQ,EACvBE,EAAOF,GAGT,IAAIhD,EAAIwM,GAAMnH,EAAO,GAAItC,EAAME,GAC3BhD,EAAIuM,GAAMnH,EAAO,GAAIrC,EAAME,GAG/B,GAAIo1B,GAAYD,GAAU/yB,EAAY,CACpC,MAAMszB,EAAQ,GAAKtzB,EACnBtF,IACG44B,EAAQhkC,KAAKqW,IAAI,EAAIrW,KAAKyP,IAAI,EAAGtB,EAAOsC,EAAO,IAAMuzB,GACtDA,EAAQhkC,KAAKqW,IAAI,EAAIrW,KAAKyP,IAAI,EAAGgB,EAAO,GAAKpC,GAAQ21B,GACvD34B,IACG24B,EAAQhkC,KAAKqW,IAAI,EAAIrW,KAAKyP,IAAI,EAAGrB,EAAOqC,EAAO,IAAMuzB,GACtDA,EAAQhkC,KAAKqW,IAAI,EAAIrW,KAAKyP,IAAI,EAAGgB,EAAO,GAAKnC,GAAQ01B,EACxD,CAED,MAAO,CAAC54B,EAAGC,EAEb,CACJ,CAMO,SAASyR,GAAKrM,GACnB,OAAOA,CACT,CC1DA,SAASwzB,GACPvzB,EACAwzB,EACAC,EACAC,GAEA,MAAMC,EAAcl0B,GAAS+zB,GAAaC,EAAa,GACjDG,EAAcl0B,GAAU8zB,GAAaC,EAAa,GAExD,OAAIC,EACKpkC,KAAKwP,IAAIkB,EAAY1Q,KAAKyP,IAAI40B,EAAaC,IAE7CtkC,KAAKwP,IAAIkB,EAAY1Q,KAAKwP,IAAI60B,EAAaC,GACpD,CAcA,SAASC,GAA2B7zB,EAAYqwB,EAAeC,GAC7D,IAAIwD,EAASxkC,KAAKwP,IAAIkB,EAAYqwB,GAalC,OAVAyD,GACExkC,KAAKqW,IAAI,EAHG,GAGSrW,KAAKyP,IAAI,EAAGiB,EAAaqwB,EAAgB,IAHlD,GAIZ,EACEC,IACFwD,EAASxkC,KAAKyP,IAAI+0B,EAAQxD,GAC1BwD,GACExkC,KAAKqW,IAAI,EARC,GAQWrW,KAAKyP,IAAI,EAAGuxB,EAAgBtwB,EAAa,IARpD,GAUV,GAEGkH,GAAM4sB,EAAQxD,EAAgB,EAAmB,EAAhBD,EAC1C,CASO,SAAS0D,GACdC,EACAjB,EACAS,EACAE,GAGA,OADAX,OAAoBjpC,IAAXipC,GAAuBA,EAChC,SAQY/yB,EAAYhb,EAAW+R,EAAMi8B,GACrC,QAAmBlpC,IAAfkW,EAA0B,CAC5B,MAAMqwB,EAAgB2D,EAAY,GAC5B1D,EAAgB0D,EAAYA,EAAYvvC,OAAS,GACjDwvC,EAAeT,EACjBD,GACElD,EACAmD,EACAz8B,EACA28B,GAEFrD,EAGJ,GAAI2C,EACF,OAAKD,EAGEc,GACL7zB,EACAi0B,EACA3D,GALOppB,GAAMlH,EAAYswB,EAAe2D,GAS5C,MAAMC,EAAS5kC,KAAKwP,IAAIm1B,EAAcj0B,GAChC2iB,EAAIrzB,KAAKuT,MAAM/d,EAAkBkvC,EAAaE,EAAQlvC,IAC5D,OAAIgvC,EAAYrR,GAAKsR,GAAgBtR,EAAIqR,EAAYvvC,OAAS,EACrDuvC,EAAYrR,EAAI,GAElBqR,EAAYrR,EACpB,CAGH,CACJ,CAWO,SAASwR,GACdC,EACA/D,EACAC,EACAyC,EACAS,EACAE,GAKA,OAHAX,OAAoBjpC,IAAXipC,GAAuBA,EAChCzC,OAAkCxmC,IAAlBwmC,EAA8BA,EAAgB,EAE9D,SAQYtwB,EAAYhb,EAAW+R,EAAMi8B,GACrC,QAAmBlpC,IAAfkW,EAA0B,CAC5B,MAAMi0B,EAAeT,EACjBD,GACElD,EACAmD,EACAz8B,EACA28B,GAEFrD,EAGJ,GAAI2C,EACF,OAAKD,EAGEc,GACL7zB,EACAi0B,EACA3D,GALOppB,GAAMlH,EAAYswB,EAAe2D,GAS5C,MAAMz1B,EAAY,KACZ61B,EAAe/kC,KAAKiZ,KACxBjZ,KAAKqW,IAAI0qB,EAAgB4D,GAAgB3kC,KAAKqW,IAAIyuB,GAAS51B,GAEvDJ,GAAUpZ,GAAa,GAAMwZ,GAAa,GAC1C01B,EAAS5kC,KAAKwP,IAAIm1B,EAAcj0B,GAChCs0B,EAAkBhlC,KAAKuT,MAC3BvT,KAAKqW,IAAI0qB,EAAgB6D,GAAU5kC,KAAKqW,IAAIyuB,GAASh2B,GAEjDm2B,EAAYjlC,KAAKyP,IAAIs1B,EAAcC,GAEzC,OAAOptB,GADempB,EAAgB/gC,KAAKC,IAAI6kC,EAAOG,GAC1BjE,EAAe2D,EAC5C,CAGH,CACJ,CAUO,SAASO,GACdnE,EACAC,EACAyC,EACAS,EACAE,GAIA,OAFAX,OAAoBjpC,IAAXipC,GAAuBA,EAEhC,SAQY/yB,EAAYhb,EAAW+R,EAAMi8B,GACrC,QAAmBlpC,IAAfkW,EAA0B,CAC5B,MAAMi0B,EAAeT,EACjBD,GACElD,EACAmD,EACAz8B,EACA28B,GAEFrD,EAEJ,OAAK0C,GAAWC,EAGTa,GACL7zB,EACAi0B,EACA3D,GALOppB,GAAMlH,EAAYswB,EAAe2D,EAO3C,CAGH,CACJ,CCnOO,SAASvnB,GAAQzM,GACtB,QAAiBnW,IAAbmW,EACF,OAAO,CAGX,CAMO,SAASmM,GAAKnM,GACnB,QAAiBnW,IAAbmW,EACF,OAAOA,CAGX,CAMO,SAASw0B,GAAcxvC,GAC5B,MAAMyvC,EAAS,EAAIplC,KAAK6T,GAAMle,EAC9B,OAAA,SAMYgb,EAAU+yB,GAClB,OAAIA,EACK/yB,OAGQnW,IAAbmW,EACFA,EAAW3Q,KAAKuT,MAAM5C,EAAWy0B,EAAQ,IAAOA,OADlD,CAMF,CACJ,CAMO,SAASC,GAAiBn2B,GAC/B,MAAMnP,OAAkBvF,IAAd0U,EAA0BuJ,GAAU,GAAKvJ,EACnD,OAAA,SAMYyB,EAAU+yB,GAClB,OAAIA,QAAyBlpC,IAAbmW,EACPA,EAGL3Q,KAAKmP,IAAIwB,IAAa5Q,EACjB,EAEF4Q,CAET,CACJ,CCizDA,SAAS20B,GAAkB31B,EAAU41B,GACnCC,YAAW,WACT71B,EAAS41B,EACV,GAAE,EACL,CAMO,SAASE,GAAuB/mC,GACrC,QAAuBlE,IAAnBkE,EAAQ6O,OAAsB,CAChC,MAAMk2B,OAC+BjpC,IAAnCkE,EAAQgnC,wBACJhnC,EAAQgnC,uBAEd,OAAOnC,GAAa7kC,EAAQ6O,OAAQ7O,EAAQinC,oBAAqBlC,EAClE,CAED,MAAMvwB,EAAawL,GAAiBhgB,EAAQwU,WAAY,aACxD,IAA2B,IAAvBxU,EAAQknC,YAAuB1yB,EAAWqC,WAAY,CACxD,MAAMhI,EAAS2F,EAAWE,YAAYtb,QAGtC,OAFAyV,EAAO,IAAMiB,IACbjB,EAAO,GAAKiB,IACL+0B,GAAah2B,GAAQ,GAAO,EACpC,CAED,OAAOs4B,EACT,CAOO,SAASC,GAA2BpnC,GACzC,IAAIqnC,EACAhF,EACAC,EAOJ,IAAIC,OACkBzmC,IAApBkE,EAAQuiC,QAAwBviC,EAAQuiC,QA5sDnB,EA8sDnBC,OACkB1mC,IAApBkE,EAAQwiC,QAAwBxiC,EAAQwiC,QAPnB,GASvB,MAAM8E,OACmBxrC,IAAvBkE,EAAQsnC,WAA2BtnC,EAAQsnC,WATnB,EAWpBJ,OACmBprC,IAAvBkE,EAAQknC,YAA2BlnC,EAAQknC,WAEvCnC,OACmCjpC,IAAvCkE,EAAQunC,4BACJvnC,EAAQunC,2BAGR7B,OACuB5pC,IAA3BkE,EAAQ0lC,gBAA+B1lC,EAAQ0lC,eAE3ClxB,EAAawL,GAAiBhgB,EAAQwU,WAAY,aAClDgzB,EAAahzB,EAAWE,YAC9B,IAAIuyB,EAAsBjnC,EAAQinC,oBAC9Bp4B,EAAS7O,EAAQ6O,OAMrB,GALKq4B,GAAer4B,IAAU2F,EAAWqC,aACvCowB,GAAsB,EACtBp4B,EAAS24B,QAGiB1rC,IAAxBkE,EAAQgmC,YAA2B,CACrC,MAAMA,EAAchmC,EAAQgmC,YAC5B3D,EAAgB2D,EAAYzD,GAC5BD,OAC2BxmC,IAAzBkqC,EAAYxD,GACRwD,EAAYxD,GACZwD,EAAYA,EAAYvvC,OAAS,GAGrC4wC,EADErnC,EAAQynC,oBACa1B,GACrBC,EACAjB,GACCkC,GAAuBp4B,EACxB62B,GAGqBc,GACrBnE,EACAC,EACAyC,GACCkC,GAAuBp4B,EACxB62B,EAGR,KAAS,CAEL,MAKMgC,GALQF,EAGVlmC,KAAKyP,IAAIU,GAAS+1B,GAAa91B,GAAU81B,IADxC,IAAMvyB,GAAgBG,QAAWZ,EAAWkC,oBAIxCkuB,GAAoBtjC,KAAKC,IA/DV,EAzsDH,GA0wDfomC,EACJD,EACApmC,KAAKC,IAnEiB,EAmEMqmC,IAG9BvF,EAAgBriC,EAAQqiC,mBACFvmC,IAAlBumC,EACFE,EAAU,EAEVF,EAAgBqF,EAAuBpmC,KAAKC,IAAI+lC,EAAY/E,GAI9DD,EAAgBtiC,EAAQsiC,mBACFxmC,IAAlBwmC,IAGEA,OAFoBxmC,IAApBkE,EAAQwiC,aACoB1mC,IAA1BkE,EAAQqiC,cACMA,EAAgB/gC,KAAKC,IAAI+lC,EAAY9E,GAErCkF,EAAuBpmC,KAAKC,IAAI+lC,EAAY9E,GAG9CmF,GAKpBnF,EACED,EACAjhC,KAAKuT,MACHvT,KAAKqW,IAAI0qB,EAAgBC,GAAiBhhC,KAAKqW,IAAI2vB,IAEvDhF,EAAgBD,EAAgB/gC,KAAKC,IAAI+lC,EAAY9E,EAAUD,GAG7D8E,EADErnC,EAAQynC,oBACatB,GACrBmB,EACAjF,EACAC,EACAyC,GACCkC,GAAuBp4B,EACxB62B,GAGqBc,GACrBnE,EACAC,EACAyC,GACCkC,GAAuBp4B,EACxB62B,EAGL,CACD,MAAO,CACLmC,WAAYR,EACZhF,cAAeA,EACfC,cAAeA,EACfC,QAASA,EACT+E,WAAYA,EAEhB,CAMO,SAASQ,GAAyB9nC,GAGvC,QAD6BlE,IAA3BkE,EAAQ+nC,gBAA+B/nC,EAAQ+nC,eAC7B,CAClB,MAAMC,EAAoBhoC,EAAQgoC,kBAClC,YAA0BlsC,IAAtBksC,IAAyD,IAAtBA,EAC9BrB,MAEiB,IAAtBqB,EACKC,GAEwB,iBAAtBD,EACFvB,GAAcuB,GAEhBC,EACR,CACD,OAAOvpB,EACT,CAOO,SAASwpB,GAAgBC,GAC9B,QAAIA,EAAUC,cAAgBD,EAAUE,eACjCC,GAAiBH,EAAUC,aAAcD,EAAUE,iBAItDF,EAAUI,mBAAqBJ,EAAUK,kBAGzCL,EAAUM,iBAAmBN,EAAUO,eAI7C,CAUA,SAASC,GAAkBl8B,EAAY1D,EAAMulB,EAAUtc,EAAYC,GAEjE,MAAMuK,EAAWlb,KAAKwL,KAAKmF,GAC3B,IAAIwK,EAAWnb,KAAKyL,KAAKkF,GACrB22B,EAAOn8B,EAAW,GAAK+P,EAAW/P,EAAW,GAAKgQ,EAClDosB,EAAOp8B,EAAW,GAAK+P,EAAW/P,EAAW,GAAKgQ,EACtDmsB,IAAS7/B,EAAK,GAAK,EAAIulB,EAAS,IAAMtc,EACtC62B,IAASva,EAAS,GAAKvlB,EAAK,GAAK,GAAKiJ,EAGtCyK,GAAYA,EAIZ,MAAO,CAHSmsB,EAAOpsB,EAAWqsB,EAAOpsB,EACzBosB,EAAOrsB,EAAWosB,EAAOnsB,EAG3C,CAEA,IAAAqsB,GAvzDA,cAAmBhpC,EAIjB,WAAA1K,CAAY4K,GACVzF,QAKAjF,KAAK0H,GAKL1H,KAAKiH,KAKLjH,KAAK2H,GAEL+C,EAAUhE,OAAO6C,OAAO,CAAE,EAAEmB,GAM5B1K,KAAKyzC,OAAS,CAAC,EAAG,GAMlBzzC,KAAK0zC,YAAc,GAMnB1zC,KAAK2zC,oBAOL3zC,KAAK4zC,YAAclpB,GAAiBhgB,EAAQwU,WAAY,aAMxDlf,KAAK6zC,cAAgB,CAAC,IAAK,KAM3B7zC,KAAK8zC,cAAgB,KAMrB9zC,KAAK+zC,kBAML/zC,KAAKg0C,gBAMLh0C,KAAKi0C,YAAc,KAMnBj0C,KAAKk0C,gBAMLl0C,KAAKm0C,cAMLn0C,KAAKo0C,mBAAgB5tC,EAEjBkE,EAAQwU,YACViK,KAEEze,EAAQ+R,SACV/R,EAAQ+R,OAASwP,GAAmBvhB,EAAQ+R,OAAQzc,KAAK4zC,cAEvDlpC,EAAQ6O,SACV7O,EAAQ6O,OAAS6S,GAAe1hB,EAAQ6O,OAAQvZ,KAAK4zC,cAGvD5zC,KAAKq0C,cAAc3pC,EACpB,CAMD,aAAA2pC,CAAc3pC,GACZ,MAAMmK,EAAanO,OAAO6C,OAAO,CAAE,EAAEmB,GACrC,IAAK,MAAMnD,KAAO0nC,UACTp6B,EAAWtN,GAEpBvH,KAAKkJ,cAAc2L,GAAY,GAE/B,MAAMy/B,EAA2BxC,GAA2BpnC,GAM5D1K,KAAKu0C,eAAiBD,EAAyBvH,cAM/C/sC,KAAKw0C,eAAiBF,EAAyBtH,cAM/ChtC,KAAKy0C,YAAcH,EAAyBtC,WAM5ChyC,KAAK00C,aAAehqC,EAAQgmC,YAM5B1wC,KAAK20C,SAAWjqC,EAAQkqC,QAMxB50C,KAAK60C,SAAWP,EAAyBrH,QAEzC,MAAM6H,EAAmBrD,GAAuB/mC,GAC1CqnC,EAAuBuC,EAAyB/B,WAChDwC,EAAqBvC,GAAyB9nC,GAMpD1K,KAAKg1C,aAAe,CAClBv4B,OAAQq4B,EACRp4B,WAAYq1B,EACZp1B,SAAUo4B,GAGZ/0C,KAAKi1C,iBAAiCzuC,IAArBkE,EAAQiS,SAAyBjS,EAAQiS,SAAW,GACrE3c,KAAKk1C,uBACgB1uC,IAAnBkE,EAAQ+R,OAAuB/R,EAAQ+R,OAAS,WAEvBjW,IAAvBkE,EAAQgS,WACV1c,KAAK67B,cAAcnxB,EAAQgS,iBACDlW,IAAjBkE,EAAQyqC,MACjBn1C,KAAKo1C,QAAQ1qC,EAAQyqC,KAExB,CAWD,WAAIP,GACF,OAAO50C,KAAK20C,QACb,CACD,WAAIC,CAAQA,GACV,IAAIS,EAAar1C,KAAK20C,SACtB30C,KAAK20C,SAAWC,EAChB,MAAMn4B,EAASzc,KAAKs1C,oBACpB,GAAI74B,EAAQ,CACV,MAAM84B,EAAaX,GAAW,CAAC,EAAG,EAAG,EAAG,GACxCS,EAAaA,GAAc,CAAC,EAAG,EAAG,EAAG,GACrC,MAAM34B,EAAa1c,KAAKw7B,gBAClBga,EACH94B,EAAa,GACb64B,EAAW,GAAKF,EAAW,GAAKA,EAAW,GAAKE,EAAW,IACxDE,EACH/4B,EAAa,GACb64B,EAAW,GAAKF,EAAW,GAAKA,EAAW,GAAKE,EAAW,IAC9Dv1C,KAAKk1C,kBAAkB,CAACz4B,EAAO,GAAK+4B,EAAS/4B,EAAO,GAAKg5B,GAC1D,CACF,CAUD,kBAAAC,CAAmBC,GACjB,MAAMjrC,EAAU1K,KAAKsJ,gBAerB,YAZ2B9C,IAAvBkE,EAAQgS,WACVhS,EAAQgS,WAAa1c,KAAKw7B,gBAE1B9wB,EAAQyqC,KAAOn1C,KAAK41C,UAItBlrC,EAAQ+R,OAASzc,KAAKs1C,oBAGtB5qC,EAAQiS,SAAW3c,KAAK61C,cAEjBnvC,OAAO6C,OAAO,CAAE,EAAEmB,EAASirC,EACnC,CAmCD,OAAAG,CAAQC,GACF/1C,KAAKg2C,UAAYh2C,KAAKi2C,gBACxBj2C,KAAKk2C,mBAAmB,GAE1B,MAAMltB,EAAO,IAAI3mB,MAAM2B,UAAU7C,QACjC,IAAK,IAAIS,EAAI,EAAGA,EAAIonB,EAAK7nB,SAAUS,EAAG,CACpC,IAAI8I,EAAU1G,UAAUpC,GACpB8I,EAAQ+R,SACV/R,EAAUhE,OAAO6C,OAAO,CAAE,EAAEmB,GAC5BA,EAAQ+R,OAASwP,GACfvhB,EAAQ+R,OACRzc,KAAK0uB,kBAGLhkB,EAAQwiB,SACVxiB,EAAUhE,OAAO6C,OAAO,CAAE,EAAEmB,GAC5BA,EAAQwiB,OAASjB,GACfvhB,EAAQwiB,OACRltB,KAAK0uB,kBAGT1F,EAAKpnB,GAAK8I,CACX,CACD1K,KAAKm2C,gBAAgBjyC,MAAMlE,KAAMgpB,EAClC,CAKD,eAAAmtB,CAAgBJ,GACd,IACIp6B,EADAy6B,EAAiBpyC,UAAU7C,OAG7Bi1C,EAAiB,GACwB,mBAAlCpyC,UAAUoyC,EAAiB,KAElCz6B,EAAW3X,UAAUoyC,EAAiB,KACpCA,GAGJ,IAAIx0C,EAAI,EACR,KAAOA,EAAIw0C,IAAmBp2C,KAAKg2C,UAAWp0C,EAAG,CAE/C,MAAM2K,EAAQvI,UAAUpC,GACpB2K,EAAMkQ,QACRzc,KAAKk1C,kBAAkB3oC,EAAMkQ,aAEZjW,IAAf+F,EAAM4oC,KACRn1C,KAAKo1C,QAAQ7oC,EAAM4oC,MACV5oC,EAAMmQ,YACf1c,KAAK67B,cAActvB,EAAMmQ,iBAEJlW,IAAnB+F,EAAMoQ,UACR3c,KAAKi1C,YAAY1oC,EAAMoQ,SAE1B,CACD,GAAI/a,IAAMw0C,EAIR,YAHIz6B,GACF21B,GAAkB31B,GAAU,IAKhC,IAAIlO,EAAQowB,KAAKC,MACbrhB,EAASzc,KAAK8zC,cAAchwC,QAC5B4Y,EAAa1c,KAAK+zC,kBAClBp3B,EAAW3c,KAAKg0C,gBACpB,MAAMqC,EAAS,GACf,KAAOz0C,EAAIw0C,IAAkBx0C,EAAG,CAC9B,MAAM8I,EAA2C1G,UAAUpC,GAErDixC,EAAY,CAChBplC,MAAOA,EACPutB,UAAU,EACV9N,OAAQxiB,EAAQwiB,OAChB+Q,cAA+Bz3B,IAArBkE,EAAQuzB,SAAyBvzB,EAAQuzB,SAAW,IAC9DqY,OAAQ5rC,EAAQ4rC,QAAUnqC,GAC1BwP,SAAUA,GAmBZ,GAhBIjR,EAAQ+R,SACVo2B,EAAUC,aAAer2B,EACzBo2B,EAAUE,aAAeroC,EAAQ+R,OAAO3Y,QACxC2Y,EAASo2B,EAAUE,mBAGAvsC,IAAjBkE,EAAQyqC,MACVtC,EAAUI,iBAAmBv2B,EAC7Bm2B,EAAUK,iBAAmBlzC,KAAKu2C,qBAAqB7rC,EAAQyqC,MAC/Dz4B,EAAam2B,EAAUK,kBACdxoC,EAAQgS,aACjBm2B,EAAUI,iBAAmBv2B,EAC7Bm2B,EAAUK,iBAAmBxoC,EAAQgS,WACrCA,EAAam2B,EAAUK,uBAGA1sC,IAArBkE,EAAQiS,SAAwB,CAClCk2B,EAAUM,eAAiBx2B,EAC3B,MAAMjP,EACJiX,GAAOja,EAAQiS,SAAWA,EAAW3Q,KAAK6T,GAAI,EAAI7T,KAAK6T,IAAM7T,KAAK6T,GACpEgzB,EAAUO,eAAiBz2B,EAAWjP,EACtCiP,EAAWk2B,EAAUO,cACtB,CAGGR,GAAgBC,GAClBA,EAAU7X,UAAW,EAGrBvtB,GAASolC,EAAU5U,SAErBoY,EAAO1wC,KAAKktC,EACb,CACD7yC,KAAK0zC,YAAY/tC,KAAK0wC,GACtBr2C,KAAKw2C,QAAQxH,GAAoB,GACjChvC,KAAKy2C,mBACN,CAOD,YAAAR,GACE,OAAOj2C,KAAKyzC,OAAOzE,IAAsB,CAC1C,CAOD,cAAA0H,GACE,OAAO12C,KAAKyzC,OAAOzE,IAAwB,CAC5C,CAMD,gBAAA2H,GAEE,IAAIzpB,EADJltB,KAAKw2C,QAAQxH,IAAqBhvC,KAAKyzC,OAAOzE,KAE9C,IAAK,IAAIptC,EAAI,EAAGuE,EAAKnG,KAAK0zC,YAAYvyC,OAAQS,EAAIuE,IAAMvE,EAAG,CACzD,MAAMy0C,EAASr2C,KAAK0zC,YAAY9xC,GAIhC,GAHIy0C,EAAO,GAAG16B,UACZ21B,GAAkB+E,EAAO,GAAG16B,UAAU,IAEnCuR,EACH,IAAK,IAAI9I,EAAI,EAAG2G,EAAKsrB,EAAOl1C,OAAQijB,EAAI2G,IAAM3G,EAAG,CAC/C,MAAMyuB,EAAYwD,EAAOjyB,GACzB,IAAKyuB,EAAU7X,SAAU,CACvB9N,EAAS2lB,EAAU3lB,OACnB,KACD,CACF,CAEJ,CACDltB,KAAK0zC,YAAYvyC,OAAS,EAC1BnB,KAAKo0C,cAAgBlnB,EACrBltB,KAAKi0C,YAAc,KACnBj0C,KAAKk0C,gBAAkB/lB,IACvBnuB,KAAKm0C,cAAgBhmB,GACtB,CAKD,iBAAAsoB,GAKE,QAJiCjwC,IAA7BxG,KAAK2zC,sBACPiD,qBAAqB52C,KAAK2zC,qBAC1B3zC,KAAK2zC,yBAAsBntC,IAExBxG,KAAKi2C,eACR,OAEF,MAAMnY,EAAMD,KAAKC,MACjB,IAAI+Y,GAAO,EACX,IAAK,IAAIj1C,EAAI5B,KAAK0zC,YAAYvyC,OAAS,EAAGS,GAAK,IAAKA,EAAG,CACrD,MAAMy0C,EAASr2C,KAAK0zC,YAAY9xC,GAChC,IAAIk1C,GAAiB,EACrB,IAAK,IAAI1yB,EAAI,EAAG2G,EAAKsrB,EAAOl1C,OAAQijB,EAAI2G,IAAM3G,EAAG,CAC/C,MAAMyuB,EAAYwD,EAAOjyB,GACzB,GAAIyuB,EAAU7X,SACZ,SAEF,MAAM+b,EAAUjZ,EAAM+U,EAAUplC,MAChC,IAAIupC,EACFnE,EAAU5U,SAAW,EAAI8Y,EAAUlE,EAAU5U,SAAW,EACtD+Y,GAAY,GACdnE,EAAU7X,UAAW,EACrBgc,EAAW,GAEXF,GAAiB,EAEnB,MAAMG,EAAWpE,EAAUyD,OAAOU,GAClC,GAAInE,EAAUC,aAAc,CAC1B,MAAMl2B,EAAKi2B,EAAUC,aAAa,GAC5Bj2B,EAAKg2B,EAAUC,aAAa,GAC5Bh2B,EAAK+1B,EAAUE,aAAa,GAC5Bh2B,EAAK81B,EAAUE,aAAa,GAClC/yC,KAAKi0C,YAAcpB,EAAUE,aAC7B,MAAM37B,EAAIwF,EAAKq6B,GAAYn6B,EAAKF,GAC1BvF,EAAIwF,EAAKo6B,GAAYl6B,EAAKF,GAChC7c,KAAK8zC,cAAgB,CAAC18B,EAAGC,EAC1B,CACD,GAAIw7B,EAAUI,kBAAoBJ,EAAUK,iBAAkB,CAC5D,MAAMx2B,EACS,IAAbu6B,EACIpE,EAAUK,iBACVL,EAAUI,iBACVgE,GACGpE,EAAUK,iBAAmBL,EAAUI,kBAChD,GAAIJ,EAAU3lB,OAAQ,CACpB,MAAMzZ,EAAOzT,KAAKk3C,iBAAiBl3C,KAAK61C,eAClCsB,EAAwBn3C,KAAKg1C,aAAat4B,WAC9CA,EACA,EACAjJ,GACA,GAEFzT,KAAK8zC,cAAgB9zC,KAAKo3C,oBACxBD,EACAtE,EAAU3lB,OAEb,CACDltB,KAAKk0C,gBAAkBrB,EAAUK,iBACjClzC,KAAK+zC,kBAAoBr3B,EACzB1c,KAAKq3C,mBAAkB,EACxB,CACD,QAC+B7wC,IAA7BqsC,EAAUM,qBACmB3sC,IAA7BqsC,EAAUO,eACV,CACA,MAAMz2B,EACS,IAAbs6B,EACItyB,GAAOkuB,EAAUO,eAAiBpnC,KAAK6T,GAAI,EAAI7T,KAAK6T,IACpD7T,KAAK6T,GACLgzB,EAAUM,eACV8D,GACGpE,EAAUO,eAAiBP,EAAUM,gBAC9C,GAAIN,EAAU3lB,OAAQ,CACpB,MAAMoqB,EAAsBt3C,KAAKg1C,aAAar4B,SAC5CA,GACA,GAEF3c,KAAK8zC,cAAgB9zC,KAAKu3C,sBACxBD,EACAzE,EAAU3lB,OAEb,CACDltB,KAAKm0C,cAAgBtB,EAAUO,eAC/BpzC,KAAKg0C,gBAAkBr3B,CACxB,CAGD,GAFA3c,KAAKq3C,mBAAkB,GACvBR,GAAO,GACFhE,EAAU7X,SACb,KAEH,CACD,GAAI8b,EAAgB,CAClB92C,KAAK0zC,YAAY9xC,GAAK,KACtB5B,KAAKw2C,QAAQxH,IAAqB,GAClChvC,KAAKi0C,YAAc,KACnBj0C,KAAKk0C,gBAAkB/lB,IACvBnuB,KAAKm0C,cAAgBhmB,IACrB,MAAMxS,EAAW06B,EAAO,GAAG16B,SACvBA,GACF21B,GAAkB31B,GAAU,EAE/B,CACF,CAED3b,KAAK0zC,YAAc1zC,KAAK0zC,YAAY8D,OAAOC,SACvCZ,QAAqCrwC,IAA7BxG,KAAK2zC,sBACf3zC,KAAK2zC,oBAAsB+D,sBACzB13C,KAAKy2C,kBAAkBvvC,KAAKlH,OAGjC,CAOD,qBAAAu3C,CAAsB56B,EAAUuQ,GAC9B,IAAIzQ,EACJ,MAAMk7B,EAAgB33C,KAAKs1C,oBAM3B,YALsB9uC,IAAlBmxC,IACFl7B,EAAS,CAACk7B,EAAc,GAAKzqB,EAAO,GAAIyqB,EAAc,GAAKzqB,EAAO,IAClE0qB,GAAiBn7B,EAAQE,EAAW3c,KAAK61C,eACzCgC,GAAcp7B,EAAQyQ,IAEjBzQ,CACR,CAOD,mBAAA26B,CAAoB16B,EAAYwQ,GAC9B,IAAIzQ,EACJ,MAAMk7B,EAAgB33C,KAAKs1C,oBACrBwC,EAAoB93C,KAAKw7B,gBAC/B,QAAsBh1B,IAAlBmxC,QAAqDnxC,IAAtBsxC,EAAiC,CAOlEr7B,EAAS,CALPyQ,EAAO,GACNxQ,GAAcwQ,EAAO,GAAKyqB,EAAc,IAAOG,EAEhD5qB,EAAO,GACNxQ,GAAcwQ,EAAO,GAAKyqB,EAAc,IAAOG,EAEnD,CACD,OAAOr7B,CACR,CAQD,gBAAAy6B,CAAiBv6B,GACf,MAAMlJ,EAAOzT,KAAK6zC,cAClB,GAAIl3B,EAAU,CACZ,MAAMo7B,EAAItkC,EAAK,GACT4sB,EAAI5sB,EAAK,GACf,MAAO,CACLzH,KAAKmP,IAAI48B,EAAI/rC,KAAKwL,IAAImF,IAAa3Q,KAAKmP,IAAIklB,EAAIr0B,KAAKyL,IAAIkF,IACzD3Q,KAAKmP,IAAI48B,EAAI/rC,KAAKyL,IAAIkF,IAAa3Q,KAAKmP,IAAIklB,EAAIr0B,KAAKwL,IAAImF,IAE5D,CACD,OAAOlJ,CACR,CASD,eAAAukC,CAAgBvkC,GACdzT,KAAK6zC,cAAgBxxC,MAAMC,QAAQmR,GAAQA,EAAK3P,QAAU,CAAC,IAAK,KAC3D9D,KAAKi2C,gBACRj2C,KAAKk2C,mBAAmB,EAE3B,CAQD,SAAA75B,GACE,MAAMI,EAASzc,KAAKs1C,oBACpB,OAAK74B,EAGEuP,GAAiBvP,EAAQzc,KAAK0uB,iBAF5BjS,CAGV,CAMD,iBAAA64B,GACE,OACEt1C,KAAKmJ,IAAI8lC,GAAaC,OAEzB,CAKD,cAAA+I,GACE,OAAOj4C,KAAKg1C,YACb,CAKD,sBAAAkD,GACE,OAAOl4C,KAAKmJ,IAAI,sBACjB,CAMD,QAAAgvC,CAASC,GACP,YAAc5xC,IAAV4xC,GACFA,EAAM,GAAKp4C,KAAKyzC,OAAO,GACvB2E,EAAM,GAAKp4C,KAAKyzC,OAAO,GAChB2E,GAEFp4C,KAAKyzC,OAAO3vC,OACpB,CAYD,eAAAu0C,CAAgB5kC,GAEd,OAAO0Y,GADQnsB,KAAKs4C,wBAAwB7kC,GAChBzT,KAAK0uB,gBAClC,CAOD,uBAAA4pB,CAAwB7kC,GACtBA,EAAOA,GAAQzT,KAAKu4C,+BACpB,MAAM97B,EACJzc,KAAKs1C,oBAEPthC,GAAOyI,EAAQ,kCACf,MAAMC,EAAqC1c,KAAKw7B,gBAChDxnB,QAAsBxN,IAAfkW,EAA0B,sCACjC,MAAMC,EAAmC3c,KAAK61C,cAG9C,OAFA7hC,QAAoBxN,IAAbmW,EAAwB,oCAExBH,GAAkBC,EAAQC,EAAYC,EAAUlJ,EACxD,CAOD,gBAAAq6B,GACE,OAAO9tC,KAAKu0C,cACb,CAOD,gBAAAxG,GACE,OAAO/tC,KAAKw0C,cACb,CAOD,UAAAvG,GACE,OACEjuC,KAAKw4C,qBAAqBx4C,KAAKw0C,eAElC,CAOD,UAAA/F,CAAW0G,GACTn1C,KAAKq0C,cAAcr0C,KAAK01C,mBAAmB,CAACxI,QAASiI,IACtD,CAOD,UAAAnH,GACE,OACEhuC,KAAKw4C,qBAAqBx4C,KAAKu0C,eAElC,CAOD,UAAA7F,CAAWyG,GACTn1C,KAAKq0C,cAAcr0C,KAAK01C,mBAAmB,CAACzI,QAASkI,IACtD,CAOD,sBAAAsD,CAAuBC,GACrB14C,KAAKq0C,cAAcr0C,KAAK01C,mBAAmB,CAACvD,oBAAqBuG,IAClE,CAOD,aAAAhqB,GACE,OAAO1uB,KAAK4zC,WACb,CAQD,aAAApY,GACE,OAAwCx7B,KAAKmJ,IAAI8lC,GAAaE,WAC/D,CAQD,cAAAwJ,GACE,OAAO34C,KAAK00C,YACb,CAUD,sBAAAkE,CAAuBr/B,EAAQ9F,GAC7B,OAAOzT,KAAK64C,+BACVzsB,GAAe7S,EAAQvZ,KAAK0uB,iBAC5Bjb,EAEH,CASD,8BAAAolC,CAA+Bt/B,EAAQ9F,GACrCA,EAAOA,GAAQzT,KAAKu4C,+BACpB,MAAMlI,EAAcl0B,GAAS5C,GAAU9F,EAAK,GACtC68B,EAAcl0B,GAAU7C,GAAU9F,EAAK,GAC7C,OAAOzH,KAAKyP,IAAI40B,EAAaC,EAC9B,CAQD,6BAAAwI,CAA8BhI,GAC5BA,EAAQA,GAAS,EACjB,MAAM/D,EAAgB/sC,KAAK+4C,yBAAyB/4C,KAAKu0C,gBACnDvH,EAAgBhtC,KAAKw0C,eACrB/4B,EAAMzP,KAAKqW,IAAI0qB,EAAgBC,GAAiBhhC,KAAKqW,IAAIyuB,GAC/D,OAAA,SAKYzsC,GAER,OADmB0oC,EAAgB/gC,KAAKC,IAAI6kC,EAAOzsC,EAAQoX,EAG7D,CACH,CAQD,WAAAo6B,GACE,OAA8B71C,KAAKmJ,IAAI8lC,GAAaG,SACrD,CAQD,6BAAA4J,CAA8BlI,GAC5B,MAAMmI,EAAWjtC,KAAKqW,IAAIyuB,GAAS,GAC7B/D,EAAgB/sC,KAAK+4C,yBAAyB/4C,KAAKu0C,gBACnDvH,EAAgBhtC,KAAKw0C,eACrB/4B,EAAMzP,KAAKqW,IAAI0qB,EAAgBC,GAAiBiM,EACtD,OAAA,SAKYv8B,GAER,OADc1Q,KAAKqW,IAAI0qB,EAAgBrwB,GAAcu8B,EAAWx9B,CAGlE,CACH,CAQD,4BAAA88B,CAA6B57B,GAC3B,IAAIlJ,EAAOzT,KAAKk3C,iBAAiBv6B,GACjC,MAAMi4B,EAAU50C,KAAK20C,SAOrB,OANIC,IACFnhC,EAAO,CACLA,EAAK,GAAKmhC,EAAQ,GAAKA,EAAQ,GAC/BnhC,EAAK,GAAKmhC,EAAQ,GAAKA,EAAQ,KAG5BnhC,CACR,CAKD,QAAAvG,GACE,MAAMgS,EAAalf,KAAK0uB,gBAClBhS,EAAa1c,KAAKw7B,gBAClB7e,EAAW3c,KAAK61C,cACtB,IAAIp5B,EACFzc,KAAKs1C,oBAEP,MAAMV,EAAU50C,KAAK20C,SACrB,GAAIC,EAAS,CACX,MAAMsE,EAAcl5C,KAAKu4C,+BACzB97B,EAAS42B,GACP52B,EACAzc,KAAKk3C,mBACL,CAACgC,EAAY,GAAK,EAAItE,EAAQ,GAAIsE,EAAY,GAAK,EAAItE,EAAQ,IAC/Dl4B,EACAC,EAEH,CACD,MAAO,CACLF,OAAQA,EAAO3Y,MAAM,GACrBob,gBAA2B1Y,IAAf0Y,EAA2BA,EAAa,KACpDxC,WAAYA,EACZy8B,WAAYn5C,KAAKi0C,YACjBmF,eAAgBp5C,KAAKk0C,gBACrBmF,aAAcr5C,KAAKm0C,cACnBx3B,SAAUA,EACVw4B,KAAMn1C,KAAK41C,UAEd,CAKD,qBAAA0D,GACE,MAAO,CACLC,UAAWv5C,KAAKkN,WAChBqM,OAAQvZ,KAAKq4C,kBAEhB,CASD,OAAAzC,GACE,IAAIT,EACJ,MAAMz4B,EAAa1c,KAAKw7B,gBAIxB,YAHmBh1B,IAAfkW,IACFy4B,EAAOn1C,KAAKw4C,qBAAqB97B,IAE5By4B,CACR,CAQD,oBAAAqD,CAAqB97B,GACnB,IACIjB,EAAKu2B,EADLl3B,EAAS9a,KAAK60C,UAAY,EAE9B,GAAI70C,KAAK00C,aAAc,CACrB,MAAM8E,EAAUh4C,EAAkBxB,KAAK00C,aAAch4B,EAAY,GACjE5B,EAAS0+B,EACT/9B,EAAMzb,KAAK00C,aAAa8E,GAEtBxH,EADEwH,GAAWx5C,KAAK00C,aAAavzC,OAAS,EAC3B,EAEAsa,EAAMzb,KAAK00C,aAAa8E,EAAU,EAEvD,MACM/9B,EAAMzb,KAAKu0C,eACXvC,EAAahyC,KAAKy0C,YAEpB,OAAO35B,EAAS9O,KAAKqW,IAAI5G,EAAMiB,GAAc1Q,KAAKqW,IAAI2vB,EACvD,CAQD,oBAAAuE,CAAqBpB,GACnB,GAAIn1C,KAAK00C,aAAc,CACrB,GAAI10C,KAAK00C,aAAavzC,QAAU,EAC9B,OAAO,EAET,MAAMs4C,EAAY71B,GAChB5X,KAAKuT,MAAM41B,GACX,EACAn1C,KAAK00C,aAAavzC,OAAS,GAEvB6wC,EACJhyC,KAAK00C,aAAa+E,GAAaz5C,KAAK00C,aAAa+E,EAAY,GAC/D,OACEz5C,KAAK00C,aAAa+E,GAClBztC,KAAKC,IAAI+lC,EAAYpuB,GAAMuxB,EAAOsE,EAAW,EAAG,GAEnD,CACD,OACEz5C,KAAKu0C,eAAiBvoC,KAAKC,IAAIjM,KAAKy0C,YAAaU,EAAOn1C,KAAK60C,SAEhE,CAYD,GAAA6E,CAAIC,EAAkBjvC,GAEpB,IAAIiK,EAOJ,GANAX,GACE3R,MAAMC,QAAQq3C,IAEV,mBADuB,EAAwC,sBAEnE,qDAEEt3C,MAAMC,QAAQq3C,GAAmB,CACnC3lC,IACGlP,GAAQ60C,GACT,kDAGFhlC,EAAWilC,GADIxtB,GAAeutB,EAAkB35C,KAAK0uB,iBAEtD,MAAM,GAAmC,WAA/BirB,EAAiBnrB,UAAwB,CAClD,MAAMjV,EAAS6S,GACbutB,EAAiBv6B,YACjBpf,KAAK0uB,iBAEP/Z,EAAWilC,GAAkBrgC,GAC7B5E,EAAS2C,OAAOtX,KAAK61C,cAAex5B,GAAU9C,GACpD,KAAW,CACL,MAAMsS,EAAiBE,KAErBpX,EADEkX,EAEA8tB,EACG7kC,QACAiB,UAAU8V,EAAgB7rB,KAAK0uB,iBAGzBirB,CAEd,CAED35C,KAAK65C,YAAYllC,EAAUjK,EAC5B,CAOD,wBAAAovC,CAAyBnlC,GACvB,MAAMgI,EAAW3c,KAAK61C,cAChB3uB,EAAWlb,KAAKwL,IAAImF,GACpBwK,EAAWnb,KAAKyL,KAAKkF,GACrBsc,EAAStkB,EAAS0a,qBAClBtU,EAASpG,EAAS2a,YACxB,IAAIyqB,EAAWv/B,IACXw/B,EAAWx/B,IACXy/B,GAAWz/B,IACX0/B,GAAW1/B,IACf,IAAK,IAAI5Y,EAAI,EAAGuE,EAAK8yB,EAAO93B,OAAQS,EAAIuE,EAAIvE,GAAKmZ,EAAQ,CACvD,MAAMu4B,EAAOra,EAAOr3B,GAAKslB,EAAW+R,EAAOr3B,EAAI,GAAKulB,EAC9CosB,EAAOta,EAAOr3B,GAAKulB,EAAW8R,EAAOr3B,EAAI,GAAKslB,EACpD6yB,EAAU/tC,KAAKwP,IAAIu+B,EAASzG,GAC5B0G,EAAUhuC,KAAKwP,IAAIw+B,EAASzG,GAC5B0G,EAAUjuC,KAAKyP,IAAIw+B,EAAS3G,GAC5B4G,EAAUluC,KAAKyP,IAAIy+B,EAAS3G,EAC7B,CACD,MAAO,CAACwG,EAASC,EAASC,EAASC,EACpC,CAMD,WAAAL,CAAYllC,EAAUjK,GAEpB,IAAI+I,GADJ/I,EAAUA,GAAW,IACF+I,KACdA,IACHA,EAAOzT,KAAKu4C,gCAEd,MAAM3D,OACgBpuC,IAApBkE,EAAQkqC,QAAwBlqC,EAAQkqC,QAAU,CAAC,EAAG,EAAG,EAAG,GACxD4E,OAA8BhzC,IAApBkE,EAAQ8uC,SAAwB9uC,EAAQ8uC,QACxD,IAAIxM,EAEFA,OAD4BxmC,IAA1BkE,EAAQsiC,cACMtiC,EAAQsiC,mBACKxmC,IAApBkE,EAAQwiC,QACDltC,KAAKu2C,qBAAqB7rC,EAAQwiC,SAElC,EAGlB,MAAMiN,EAAgBn6C,KAAK85C,yBAAyBnlC,GAGpD,IAAI+H,EAAa1c,KAAK64C,+BAA+BsB,EAAe,CAClE1mC,EAAK,GAAKmhC,EAAQ,GAAKA,EAAQ,GAC/BnhC,EAAK,GAAKmhC,EAAQ,GAAKA,EAAQ,KAEjCl4B,EAAa4R,MAAM5R,GACfswB,EACAhhC,KAAKyP,IAAIiB,EAAYswB,GACzBtwB,EAAa1c,KAAK+4C,yBAAyBr8B,EAAY88B,EAAU,EAAI,GAGrE,MAAM78B,EAAW3c,KAAK61C,cAChB1uB,EAAWnb,KAAKyL,IAAIkF,GACpBuK,EAAWlb,KAAKwL,IAAImF,GACpBy9B,EAAY/9B,GAAU89B,GAC5BC,EAAU,KAAQxF,EAAQ,GAAKA,EAAQ,IAAM,EAAKl4B,EAClD09B,EAAU,KAAQxF,EAAQ,GAAKA,EAAQ,IAAM,EAAKl4B,EAClD,MAAM29B,EAAUD,EAAU,GAAKlzB,EAAWkzB,EAAU,GAAKjzB,EACnDmzB,EAAUF,EAAU,GAAKlzB,EAAWkzB,EAAU,GAAKjzB,EACnD1K,EAASzc,KAAKu6C,qBAAqB,CAACF,EAASC,GAAU59B,GACvDf,EAAWjR,EAAQiR,SAAWjR,EAAQiR,SAAWtY,OAE9BmD,IAArBkE,EAAQuzB,SACVj+B,KAAKm2C,gBACH,CACEz5B,WAAYA,EACZD,OAAQA,EACRwhB,SAAUvzB,EAAQuzB,SAClBqY,OAAQ5rC,EAAQ4rC,QAElB36B,IAGF3b,KAAK+zC,kBAAoBr3B,EACzB1c,KAAK8zC,cAAgBr3B,EACrBzc,KAAKq3C,mBAAkB,GAAO,GAC9B/F,GAAkB31B,GAAU,GAE/B,CASD,QAAA6+B,CAASrjC,EAAY1D,EAAMulB,GACzBh5B,KAAKy6C,iBACHxuB,GAAmB9U,EAAYnX,KAAK0uB,iBACpCjb,EACAulB,EAEH,CAOD,gBAAAyhB,CAAiBtjC,EAAY1D,EAAMulB,GACjCh5B,KAAKk1C,kBACH7B,GACEl8B,EACA1D,EACAulB,EACAh5B,KAAKw7B,gBACLx7B,KAAK61C,eAGV,CAUD,oBAAA6E,CAAqBj+B,EAAQC,EAAYC,EAAUlJ,GACjD,IAAIk8B,EACJ,MAAMiF,EAAU50C,KAAK20C,SACrB,GAAIC,GAAWn4B,EAAQ,CACrB,MAAMy8B,EAAcl5C,KAAKu4C,8BAA8B57B,GACjDg+B,EAAgBtH,GACpB52B,EACAhJ,EACA,CAACylC,EAAY,GAAK,EAAItE,EAAQ,GAAIsE,EAAY,GAAK,EAAItE,EAAQ,IAC/Dl4B,EACAC,GAEFgzB,EAAc,CACZlzB,EAAO,GAAKk+B,EAAc,GAC1Bl+B,EAAO,GAAKk+B,EAAc,GAE7B,CACD,OAAOhL,CACR,CAKD,KAAAqG,GACE,QAASh2C,KAAKs1C,0BAAgD9uC,IAAzBxG,KAAKw7B,eAC3C,CAOD,YAAAof,CAAaC,GACX,MAAMp+B,EAASuP,GAAiBhsB,KAAK8zC,cAAe9zC,KAAK0uB,iBACzD1uB,KAAK86C,UAAU,CACbr+B,EAAO,GAAKo+B,EAAiB,GAC7Bp+B,EAAO,GAAKo+B,EAAiB,IAEhC,CAMD,oBAAAE,CAAqBF,GACnB,MAAMp+B,EAASzc,KAAK8zC,cACpB9zC,KAAKk1C,kBAAkB,CACrBz4B,EAAO,GAAKo+B,EAAiB,GAC7Bp+B,EAAO,GAAKo+B,EAAiB,IAEhC,CASD,gBAAAG,CAAiBhL,EAAO9iB,GACtBA,EAASA,GAAUjB,GAAmBiB,EAAQltB,KAAK0uB,iBACnD1uB,KAAKi7C,yBAAyBjL,EAAO9iB,EACtC,CAQD,wBAAA+tB,CAAyBjL,EAAO9iB,GAC9B,MAAMwiB,EAAW1vC,KAAKi2C,gBAAkBj2C,KAAK02C,iBACvCjjC,EAAOzT,KAAKk3C,iBAAiBl3C,KAAK61C,eAClCqF,EAAgBl7C,KAAKg1C,aAAat4B,WACtC1c,KAAK+zC,kBAAoB/D,EACzB,EACAv8B,EACAi8B,GAGExiB,IACFltB,KAAK8zC,cAAgB9zC,KAAKo3C,oBAAoB8D,EAAehuB,IAG/DltB,KAAK+zC,mBAAqB/D,EAC1BhwC,KAAKq3C,mBACN,CASD,UAAA8D,CAAWztC,EAAOwf,GAChBltB,KAAKg7C,iBAAiBhvC,KAAKC,IAAIjM,KAAKy0C,aAAc/mC,GAAQwf,EAC3D,CASD,cAAAkuB,CAAe1tC,EAAOwf,GAChBA,IACFA,EAASjB,GAAmBiB,EAAQltB,KAAK0uB,kBAE3C1uB,KAAKq7C,uBAAuB3tC,EAAOwf,EACpC,CAMD,sBAAAmuB,CAAuB3tC,EAAOwf,GAC5B,MAAMwiB,EAAW1vC,KAAKi2C,gBAAkBj2C,KAAK02C,iBACvC4E,EAAct7C,KAAKg1C,aAAar4B,SACpC3c,KAAKg0C,gBAAkBtmC,EACvBgiC,GAEExiB,IACFltB,KAAK8zC,cAAgB9zC,KAAKu3C,sBAAsB+D,EAAapuB,IAE/DltB,KAAKg0C,iBAAmBtmC,EACxB1N,KAAKq3C,mBACN,CAQD,SAAAyD,CAAUr+B,GACRzc,KAAKk1C,kBACHz4B,EAASwP,GAAmBxP,EAAQzc,KAAK0uB,iBAAmBjS,EAE/D,CAMD,iBAAAy4B,CAAkBz4B,GAChBzc,KAAK8zC,cAAgBr3B,EACrBzc,KAAKq3C,mBACN,CAOD,OAAAb,CAAQ+E,EAAM7tC,GAGZ,OAFA1N,KAAKyzC,OAAO8H,IAAS7tC,EACrB1N,KAAK6H,UACE7H,KAAKyzC,OAAO8H,EACpB,CAQD,aAAA1f,CAAcnf,GACZ1c,KAAK+zC,kBAAoBr3B,EACzB1c,KAAKq3C,mBACN,CAQD,WAAApC,CAAYt4B,GACV3c,KAAKg0C,gBAAkBr3B,EACvB3c,KAAKq3C,mBACN,CAOD,OAAAjC,CAAQD,GACNn1C,KAAK67B,cAAc77B,KAAKu2C,qBAAqBpB,GAC9C,CAUD,iBAAAkC,CAAkBmE,EAAkBC,GAClC,MAAM/L,EACJ1vC,KAAKi2C,gBAAkBj2C,KAAK02C,kBAAoB+E,EAG5CH,EAAct7C,KAAKg1C,aAAar4B,SACpC3c,KAAKg0C,gBACLtE,GAEIj8B,EAAOzT,KAAKk3C,iBAAiBoE,GAC7BJ,EAAgBl7C,KAAKg1C,aAAat4B,WACtC1c,KAAK+zC,kBACL,EACAtgC,EACAi8B,GAEIgM,EAAY17C,KAAKg1C,aAAav4B,OAClCzc,KAAK8zC,cACLoH,EACAznC,EACAi8B,EACA1vC,KAAK06C,qBACH16C,KAAK8zC,cACLoH,EACAI,EACA7nC,IAIAzT,KAAKmJ,IAAI8lC,GAAaG,YAAckM,GACtCt7C,KAAK8J,IAAImlC,GAAaG,SAAUkM,GAE9Bt7C,KAAKmJ,IAAI8lC,GAAaE,cAAgB+L,IACxCl7C,KAAK8J,IAAImlC,GAAaE,WAAY+L,GAClCl7C,KAAK8J,IAAI,OAAQ9J,KAAK41C,WAAW,IAGhC8F,GACA17C,KAAKmJ,IAAI8lC,GAAaC,SACtB3sC,GAAOvC,KAAKmJ,IAAI8lC,GAAaC,QAASwM,IAEvC17C,KAAK8J,IAAImlC,GAAaC,OAAQwM,GAG5B17C,KAAKi2C,iBAAmBuF,GAC1Bx7C,KAAK22C,mBAEP32C,KAAKo0C,mBAAgB5tC,CACtB,CAWD,kBAAA0vC,CAAmBjY,EAAU0d,EAAqBzuB,GAChD+Q,OAAwBz3B,IAAby3B,EAAyBA,EAAW,IAC/C,MAAMv8B,EAAYi6C,GAAuB,EAEnCL,EAAct7C,KAAKg1C,aAAar4B,SAAS3c,KAAKg0C,iBAC9CvgC,EAAOzT,KAAKk3C,iBAAiBoE,GAC7BJ,EAAgBl7C,KAAKg1C,aAAat4B,WACtC1c,KAAK+zC,kBACLryC,EACA+R,GAEIioC,EAAY17C,KAAKg1C,aAAav4B,OAClCzc,KAAK8zC,cACLoH,EACAznC,GACA,EACAzT,KAAK06C,qBACH16C,KAAK8zC,cACLoH,EACAI,EACA7nC,IAIJ,GAAiB,IAAbwqB,IAAmBj+B,KAAKo0C,cAK1B,OAJAp0C,KAAK+zC,kBAAoBmH,EACzBl7C,KAAKg0C,gBAAkBsH,EACvBt7C,KAAK8zC,cAAgB4H,OACrB17C,KAAKq3C,oBAIPnqB,EAASA,IAAwB,IAAb+Q,EAAiBj+B,KAAKo0C,mBAAgB5tC,GAC1DxG,KAAKo0C,mBAAgB5tC,EAGnBxG,KAAKw7B,kBAAoB0f,GACzBl7C,KAAK61C,gBAAkByF,GACtBt7C,KAAKs1C,qBACL/yC,GAAOvC,KAAKs1C,oBAAqBoG,KAE9B17C,KAAKi2C,gBACPj2C,KAAK22C,mBAGP32C,KAAKm2C,gBAAgB,CACnBx5B,SAAU2+B,EACV7+B,OAAQi/B,EACRh/B,WAAYw+B,EACZjd,SAAUA,EACVqY,OAAQpqC,GACRghB,OAAQA,IAGb,CAQD,gBAAA0uB,GACE57C,KAAKk2C,mBAAmB,GAExBl2C,KAAKw2C,QAAQxH,GAAsB,EACpC,CAUD,cAAA6M,CAAe5d,EAAU0d,EAAqBzuB,GAC5CA,EAASA,GAAUjB,GAAmBiB,EAAQltB,KAAK0uB,iBACnD1uB,KAAK87C,uBAAuB7d,EAAU0d,EAAqBzuB,EAC5D,CASD,sBAAA4uB,CAAuB7d,EAAU0d,EAAqBzuB,GAC/CltB,KAAK02C,mBAGV12C,KAAKw2C,QAAQxH,IAAuB,GACpChvC,KAAKk2C,mBAAmBjY,EAAU0d,EAAqBzuB,GACxD,CASD,oBAAAqtB,CAAqBxH,EAAcG,GACjC,MAAMz/B,EAAOzT,KAAKk3C,iBAAiBl3C,KAAK61C,eACxC,OAAO71C,KAAKg1C,aAAav4B,OACvBs2B,EACAG,GAAoBlzC,KAAKw7B,gBACzB/nB,EAEH,CAWD,kBAAAsoC,CAAmBC,EAAYt6C,GAC7B,MAAMu6C,EAAYj8C,KAAKu2C,qBAAqByF,GAC5C,OAAOh8C,KAAKw4C,qBACVx4C,KAAK+4C,yBAAyBkD,EAAWv6C,GAE5C,CAWD,wBAAAq3C,CAAyB7F,EAAkBxxC,GACzCA,EAAYA,GAAa,EACzB,MAAM+R,EAAOzT,KAAKk3C,iBAAiBl3C,KAAK61C,eAExC,OAAO71C,KAAKg1C,aAAat4B,WAAWw2B,EAAkBxxC,EAAW+R,EAClE,GC/3CI,SAASyoC,GAAOC,EAAY5C,GACjC,IAAK4C,EAAWtP,QACd,OAAO,EAET,MAAMnwB,EAAa68B,EAAU78B,WAC7B,GACEA,EAAay/B,EAAWnP,eACxBtwB,GAAcy/B,EAAWpP,cAEzB,OAAO,EAET,MAAMoI,EAAOoE,EAAUpE,KACvB,OAAOA,EAAOgH,EAAWlP,SAAWkI,GAAQgH,EAAWjP,OACzD,CAEA,IAAAkP,GAvaA,cAAoBC,GAIlB,WAAAv8C,CAAY4K,GACV,MAAM4xC,EAAc51C,OAAO6C,OAAO,CAAE,EAAEmB,UAC/B4xC,EAAYryC,OAEnBhF,MAAMq3C,GAKNt8C,KAAK0H,GAKL1H,KAAKiH,KAKLjH,KAAK2H,GAML3H,KAAKu8C,kBAAoB,KAMzBv8C,KAAKw8C,cAAgB,KAMrBx8C,KAAKy8C,iBAAmB,KAMxBz8C,KAAK08C,UAAY,KAMjB18C,KAAK28C,cAAe,EAMpB38C,KAAK48C,UAAW,EAGZlyC,EAAQmyC,SACV78C,KAAK68C,OAASnyC,EAAQmyC,QAGpBnyC,EAAQkgC,KACV5qC,KAAK88C,OAAOpyC,EAAQkgC,KAGtB5qC,KAAK4J,kBACH4iC,GACAxsC,KAAK+8C,6BAGP,MAAM9yC,EAASS,EAAQT,OACQS,EAAc,OACzC,KACJ1K,KAAKg9C,UAAU/yC,EAChB,CAMD,cAAAikC,CAAezjC,GAGb,OAFAA,EAAQA,GAAgB,IAClB9E,KAAK3F,MACJyK,CACR,CAMD,mBAAA0jC,CAAoBC,GAGlB,OAFAA,EAASA,GAAkB,IACpBzoC,KAAK3F,KAAKwtC,iBACVY,CACR,CAQD,SAAA6O,GACE,OAAkCj9C,KAAKmJ,IAAIqjC,KAA0B,IACtE,CAKD,eAAA0Q,GACE,OAAOl9C,KAAKi9C,WACb,CAKD,cAAA5O,GACE,MAAMpkC,EAASjK,KAAKi9C,YACpB,OAAQhzC,EAAuBA,EAAOiD,WAArB,WAClB,CAKD,mBAAAiwC,GACEn9C,KAAK6H,UACD7H,KAAK28C,cAAgD,UAAhC38C,KAAKi9C,YAAY/vC,aAG1ClN,KAAK28C,cAAe,EACpB38C,KAAK4F,cAAc,eACpB,CAKD,2BAAAm3C,GACM/8C,KAAKy8C,mBACPn1C,EAActH,KAAKy8C,kBACnBz8C,KAAKy8C,iBAAmB,MAE1Bz8C,KAAK28C,cAAe,EACpB,MAAM1yC,EAASjK,KAAKi9C,YAChBhzC,IACFjK,KAAKy8C,iBAAmB11C,EACtBkD,EACAnD,EACA9G,KAAKm9C,oBACLn9C,MAEwB,UAAtBiK,EAAOiD,aACTlN,KAAK28C,cAAe,EACpBnL,YAAW,KACTxxC,KAAK4F,cAAc,cAAc,GAChC,KAGP5F,KAAK6H,SACN,CAOD,WAAAu1C,CAAYC,GACV,OAAKr9C,KAAK08C,UAGH18C,KAAK08C,UAAUU,YAAYC,GAFzB94C,QAAQE,QAAQ,GAG1B,CAMD,OAAAmP,CAAQypC,GACN,OAAKr9C,KAAK08C,WAAc18C,KAAK48C,SAGtB58C,KAAK08C,UAAU9oC,QAAQypC,GAFrB,IAGV,CAWD,SAAAC,CAAUC,GACR,IAAIC,EACJ,MAAM5S,EAAM5qC,KAAKy9C,iBAejB,IAAItB,GAdCoB,GAAQ3S,IACX2S,EAAO3S,EAAI8S,WAGXF,EADED,aAAgBI,GACL,CACXpE,UAAWgE,EAAKrwC,WAChBqM,OAAQgkC,EAAKlF,mBAGFkF,GAEVC,EAAWI,kBAAoBhT,IAClC4S,EAAWI,iBAAmBhT,EAAIiT,gBAAgB1P,uBAIlDgO,EADEqB,EAAWI,iBACAJ,EAAWI,iBAAiBE,MACtC3B,GAAeA,EAAWzO,QAAU1tC,OAG1BA,KAAKwtC,gBAGpB,MAAMuQ,EAAc/9C,KAAKof,YAEzB,OACE88B,GAAOC,EAAYqB,EAAWjE,cAC5BwE,GAAelgC,GAAWkgC,EAAaP,EAAWjkC,QAEvD,CASD,eAAAykC,CAAgBT,GACd,IAAKv9C,KAAKs9C,UAAUC,GAClB,MAAO,GAET,IAAIS,EACJ,MAAM/zC,EAASjK,KAAKi9C,YAIpB,GAHIhzC,IACF+zC,EAAkB/zC,EAAO+zC,oBAEtBA,EACH,MAAO,GAIT,IAAIC,EAAeD,EADjBT,aAAgBI,GAAOJ,EAAKjE,wBAA0BiE,GAKxD,OAHKl7C,MAAMC,QAAQ27C,KACjBA,EAAe,CAACA,IAEXA,CACR,CAUD,MAAApB,CAAOW,EAAYr9C,GACjB,MAAM+9C,EAAgBl+C,KAAKm+C,cAE3B,OAAID,EAAcE,aAAaZ,IAC7Bx9C,KAAK48C,UAAW,EACTsB,EAAcG,YAAYb,EAAYr9C,IAExC,IACR,CAKD,QAAAm+C,GACEt+C,KAAK48C,UAAW,CACjB,CAMD,cAAA2B,CAAe3T,GACRA,GACH5qC,KAAKs+C,WAEPt+C,KAAK8J,IAAI0iC,GAAmB5B,EAC7B,CAMD,cAAA6S,GACE,OAAOz9C,KAAKmJ,IAAIqjC,GACjB,CAaD,MAAAsQ,CAAOlS,GACD5qC,KAAKu8C,oBACPj1C,EAActH,KAAKu8C,mBACnBv8C,KAAKu8C,kBAAoB,MAEtB3R,GACH5qC,KAAK6H,UAEH7H,KAAKw8C,gBACPl1C,EAActH,KAAKw8C,eACnBx8C,KAAKw8C,cAAgB,MAEnB5R,IACF5qC,KAAKu8C,kBAAoBx1C,EACvB6jC,EACAmE,IACA,SAAUnvC,GACR,MAEMg+C,EADiD,EAClBJ,WAAWI,iBAC1CzB,EAAan8C,KAAKwtC,eAAc,GACtCx5B,IACG4pC,EAAiBY,MAAK,SAAUC,GAC/B,OAAOA,EAAgB/Q,QAAUyO,EAAWzO,KAC1D,IACY,yGAEFkQ,EAAiBj4C,KAAKw2C,EACvB,GACDn8C,MAEFA,KAAKw8C,cAAgBz1C,EAAO/G,KAAM8G,EAAkB8jC,EAAIiS,OAAQjS,GAChE5qC,KAAK6H,UAER,CAQD,SAAAm1C,CAAU/yC,GACRjK,KAAK8J,IAAI0iC,GAAsBviC,EAChC,CAMD,WAAAk0C,GAIE,OAHKn+C,KAAK08C,YACR18C,KAAK08C,UAAY18C,KAAK0+C,kBAEjB1+C,KAAK08C,SACb,CAKD,WAAAiC,GACE,QAAS3+C,KAAK08C,SACf,CAOD,cAAAgC,GACE,OAAO,IACR,CAKD,eAAAj+C,GACMT,KAAK08C,YACP18C,KAAK08C,UAAUl8C,iBACRR,KAAK08C,WAGd18C,KAAKg9C,UAAU,MACf/3C,MAAMxE,iBACP,GC9PH,SAASm+C,GAAgBhU,EAAK4S,GAC5BqB,GAAe3S,QACjB,CAEA,IAAA4S,GA9NA,cAA0B95C,EAIxB,WAAAlF,CAAY8qC,GACV3lC,QAMAjF,KAAK++C,KAAOnU,CACb,CAOD,mBAAAoU,CAAoBj/C,EAAMy9C,GACxBl1C,GACD,CAMD,mBAAA22C,CAAoBzB,GAClB,MAAMjE,EAAYiE,EAAWjE,UACvB2F,EAA6B1B,EAAW0B,2BACxCC,EAA6B3B,EAAW2B,2BAE9CpwB,GACEmwB,EACA1B,EAAW/pC,KAAK,GAAK,EACrB+pC,EAAW/pC,KAAK,GAAK,EACrB,EAAI8lC,EAAU78B,YACb,EAAI68B,EAAU78B,YACd68B,EAAU58B,UACV48B,EAAU98B,OAAO,IACjB88B,EAAU98B,OAAO,IAGpBnE,GAAY6mC,EAA4BD,EACzC,CAiBD,0BAAAE,CACEjoC,EACAqmC,EACA6B,EACAC,EACA3jC,EACA3U,EACAu4C,EACAC,GAEA,IAAIhP,EACJ,MAAM+I,EAAYiE,EAAWjE,UAS7B,SAAS6F,EAA2B3R,EAASgS,EAAS/R,EAAO/4B,GAC3D,OAAOgH,EAAS5X,KAAKiD,EAASy4C,EAAShS,EAAUC,EAAQ,KAAM/4B,EAChE,CAED,MAAMuK,EAAaq6B,EAAUr6B,WAEvBwgC,EAAuBzgC,GAAM9H,EAAWrT,QAASob,GACjDygC,EAAU,CAAC,CAAC,EAAG,IACrB,GAAIzgC,EAAWG,YAAcigC,EAAc,CACzC,MACMhgC,EAAanD,GADM+C,EAAWE,aAEpCugC,EAAQh6C,KAAK,EAAE2Z,EAAY,GAAI,CAACA,EAAY,GAC7C,CAED,MAAMsgC,EAAcpC,EAAWI,iBACzBiC,EAAYD,EAAYz+C,OAExB2+C,EAA6C,GAC7CC,EAAW,GACjB,IAAK,IAAIn+C,EAAI,EAAGA,EAAI+9C,EAAQx+C,OAAQS,IAClC,IAAK,IAAIwiB,EAAIy7B,EAAY,EAAGz7B,GAAK,IAAKA,EAAG,CACvC,MAAM+3B,EAAayD,EAAYx7B,GACzBspB,EAAQyO,EAAWzO,MACzB,GACEA,EAAMiR,eACNzC,GAAOC,EAAY5C,IACnBgG,EAAYx7C,KAAKy7C,EAAU9R,GAC3B,CACA,MAAMwQ,EAAgBxQ,EAAMyQ,cACtBl0C,EAASyjC,EAAMuP,YACrB,GAAIiB,GAAiBj0C,EAAQ,CAC3B,MAAMqP,EAAcrP,EAAO+1C,WACvBN,EACAvoC,EACEwE,EAAWyjC,EAA2Bl4C,KAC1C,KACAi1C,EAAW1O,SAEbsS,EAAS,GAAKzmC,EAAY,GAAKqmC,EAAQ/9C,GAAG,GAC1Cm+C,EAAS,GAAKzmC,EAAY,GAAKqmC,EAAQ/9C,GAAG,GAC1C4uC,EAAS0N,EAAckB,2BACrBW,EACAvC,EACA6B,EACA1jC,EACAmkC,EAEH,CACD,GAAItP,EACF,OAAOA,CAEV,CACF,CAEH,GAAuB,IAAnBsP,EAAQ3+C,OACV,OAEF,MAAM8+C,EAAQ,EAAIH,EAAQ3+C,OAM1B,OALA2+C,EAAQ50C,SAAQ,CAAC8U,EAAGpe,IAAOoe,EAAEkgC,YAAct+C,EAAIq+C,IAC/CH,EAAQ1rB,MAAK,CAAC/yB,EAAGC,IAAMD,EAAE6+C,WAAa5+C,EAAE4+C,aACxCJ,EAAQtB,MAAMx+B,GACJwwB,EAASxwB,EAAErE,SAASqE,EAAEy/B,QAASz/B,EAAE0tB,MAAO1tB,EAAErL,YAE7C67B,CACR,CAeD,sBAAA2P,CACEhpC,EACAqmC,EACA6B,EACAC,EACAC,EACAv4C,GAaA,YAAsBR,IAXHxG,KAAKo/C,2BACtBjoC,EACAqmC,EACA6B,EACAC,EACAn8C,EACAnD,KACAu/C,EACAv4C,EAIH,CAKD,MAAAo5C,GACE,OAAOpgD,KAAK++C,IACb,CAOD,WAAAV,CAAYb,GACVl1C,GACD,CAKD,mBAAA+3C,CAAoB7C,GAAc,CAMlC,uBAAA8C,CAAwB9C,GAClBqB,GAAe5S,kBACjBuR,EAAW+C,oBAAoB56C,KAAKi5C,GAEvC,GCjMH,IAAA4B,GArCA,cAA0Bz6C,EAQxB,WAAAjG,CAAYC,EAAM0gD,EAAuBjD,EAAYttC,GACnDjL,MAAMlF,GAQNC,KAAKygD,sBAAwBA,EAO7BzgD,KAAKw9C,WAAaA,EASlBx9C,KAAKkQ,QAAUA,CAChB,GCnBI,MAAMwwC,GAAe,YAQfC,GAAmB,gBAQnBC,GAAqB,kBAQrBC,GAAoB,iBAQpBC,GAAgB,aAShBC,GAAkB,eAMzBC,GAAY,IAAIC,OACpB,CACE,qDACA,4CACA,8DACA,gDACA,8EACA,gEACA,mCACApoC,KAAK,IACP,KAGIqoC,GAAsB,CAC1B,QACA,UACA,SACA,OACA,aACA,UASWC,GAAoB,SAAUC,GACzC,MAAMrW,EAAQqW,EAASrW,MAAMiW,IAC7B,IAAKjW,EACH,OAAO,KAET,MAAMz6B,EAAuC,CAC3C+wC,WAAY,SACZ5tC,KAAM,QACNnD,MAAO,SACPgxC,OAAQ,SACRC,QAAS,UAEX,IAAK,IAAI3/C,EAAI,EAAGuE,EAAK+6C,GAAoB//C,OAAQS,EAAIuE,IAAMvE,EAAG,CAC5D,MAAMyC,EAAQ0mC,EAAMnpC,EAAI,QACV4E,IAAVnC,IACFiM,EAAM4wC,GAAoBt/C,IAAMyC,EAEnC,CAED,OADAiM,EAAMkxC,SAAWlxC,EAAMmxC,OAAO97B,MAAM,QAC7BrV,CACT,ECzBaoxC,GAAc,kBAMdC,GAAmB,OAMnBC,GAAiB,QAMjBC,GAAkB,GAYlBC,GAAkB,QAMlBC,GAAoB,GAMpBC,GAAqB,OAMrBC,GAAmB,SAMnBC,GAAsB,SAMtBC,GAAiB,CAAC,EAAG,EAAG,EAAG,GAW3BC,GAAe,IAAI53C,EAKhC,IAKI63C,GALAC,GAAiB,KAUd,MAAMC,GAAc,CAAA,EAMdC,GAAe,WAC1B,MACM/uC,EAAO,QACPgvC,EAAiB,CAAC,YAAa,SAC/Bz6C,EAAMy6C,EAAethD,OACrBuhD,EAAO,2BACb,IAAIC,EAAUC,EAQd,SAASC,EAAYC,EAAWC,EAAYC,GAC1C,IAAIC,GAAY,EAChB,IAAK,IAAIrhD,EAAI,EAAGA,EAAIoG,IAAOpG,EAAG,CAC5B,MAAMshD,EAAgBT,EAAe7gD,GAKrC,GAJAghD,EAAiBO,GACfL,EAAY,IAAMC,EAAa,IAAMtvC,EAAOyvC,EAC5CR,GAEEM,GAAcE,EAAe,CAC/B,MAAM1zC,EAAQ2zC,GACZL,EACE,IACAC,EACA,IACAtvC,EACAuvC,EACA,IACAE,EACFR,GAIFO,EAAYA,GAAazzC,GAASozC,CACnC,CACF,CACD,QAAIK,CAIL,CAED,SAASG,IACP,IAAIC,GAAO,EACX,MAAMC,EAAQlB,GAAa/4C,UAC3B,IAAK,IAAIzH,EAAI,EAAGuE,EAAKm9C,EAAMniD,OAAQS,EAAIuE,IAAMvE,EAAG,CAC9C,MAAM2hD,EAAOD,EAAM1hD,GACfwgD,GAAaj5C,IAAIo6C,GAjDT,MAkDNV,EAAY3+C,MAAMlE,KAAMujD,EAAK59B,MAAM,QACrChhB,EAAM49C,IAEND,GAAiB,KACjBD,QAAc77C,EACd47C,GAAat4C,IAAIy5C,EAvDT,OAyDRnB,GAAat4C,IAAIy5C,EAAMnB,GAAaj5C,IAAIo6C,GAAQ,GAAG,GACnDF,GAAO,GAGZ,CACGA,IACFG,cAAcb,GACdA,OAAWn8C,EAEd,CAED,OAAO,SAAU46C,GACf,MAAMmC,EAAOpC,GAAkBC,GAC/B,IAAKmC,EACH,OAEF,MAAM/B,EAAW+B,EAAK/B,SACtB,IAAK,IAAI5/C,EAAI,EAAGuE,EAAKq7C,EAASrgD,OAAQS,EAAIuE,IAAMvE,EAAG,CACjD,MAAM6/C,EAASD,EAAS5/C,GAClB2F,EAAMg8C,EAAKjzC,MAAQ,KAAOizC,EAAKjC,OAAS,KAAOG,OACvBj7C,IAA1B47C,GAAaj5C,IAAI5B,KACnB66C,GAAat4C,IAAIvC,EA9EP,KA8EqB,GAC1Bs7C,EAAYU,EAAKjzC,MAAOizC,EAAKjC,OAAQG,KACxCW,GAAat4C,IAAIvC,EAAK,GAAG,QACRf,IAAbm8C,IACFA,EAAWc,YAAYL,EAAO,MAIrC,CACL,CACC,CAzF2B,GA+FfM,GAAoB,WAI/B,IAAIC,EACJ,OAAO,SAAUvC,GACf,IAAI3xC,EAAS8yC,GAAYnB,GACzB,GAAc56C,MAAViJ,EAAqB,CACvB,GAAIhB,GAAyB,CAC3B,MAAM80C,EAAOpC,GAAkBC,GACzBwC,EAAUC,GAAYzC,EAAU,MAItC3xC,GAHmB6e,MAAM2b,OAAOsZ,EAAKlC,aACjC,IACApX,OAAOsZ,EAAKlC,cAGbuC,EAAQE,wBAA0BF,EAAQG,yBACrD,MACaJ,IACHA,EAAiB7zC,SAASC,cAAc,OACxC4zC,EAAeK,UAAY,IAC3BL,EAAerzC,MAAM2zC,UAAY,IACjCN,EAAerzC,MAAM4zC,UAAY,OACjCP,EAAerzC,MAAMb,OAAS,OAC9Bk0C,EAAerzC,MAAMskC,QAAU,IAC/B+O,EAAerzC,MAAM6zC,OAAS,OAC9BR,EAAerzC,MAAM0oB,SAAW,WAChC2qB,EAAerzC,MAAM8zC,QAAU,QAC/BT,EAAerzC,MAAM+zC,KAAO,YAE9BV,EAAerzC,MAAMizC,KAAOnC,EAC5BtxC,SAASw0C,KAAKryC,YAAY0xC,GAC1Bl0C,EAASk0C,EAAe/yC,aACxBd,SAASw0C,KAAK/yC,YAAYoyC,GAE5BpB,GAAYnB,GAAY3xC,CACzB,CACD,OAAOA,CACX,CACC,CAvCgC,GA8CjC,SAASo0C,GAAYN,EAAMb,GAQzB,OAPKJ,KACHA,GAAiB/yC,GAAsB,EAAG,IAExCg0C,GAAQlB,KACVC,GAAeiB,KAAOA,EACtBlB,GAAcC,GAAeiB,MAExBjB,GAAeuB,YAAYnB,EACpC,CAOO,SAASS,GAAiBI,EAAMb,GACrC,OAAOmB,GAAYN,EAAMb,GAAMlzC,KACjC,CASO,SAAS+0C,GAAyBhB,EAAMb,EAAMr/B,GACnD,GAAIq/B,KAAQr/B,EACV,OAAOA,EAAMq/B,GAEf,MAAMlzC,EAAQkzC,EACX/8B,MAAM,MACN6+B,QAAO,CAAC94C,EAAM+4C,IAASz4C,KAAKyP,IAAI/P,EAAMy3C,GAAiBI,EAAMkB,KAAQ,GAExE,OADAphC,EAAMq/B,GAAQlzC,EACPA,CACT,CAOO,SAASk1C,GAAkBC,EAAWC,GAC3C,MAAMC,EAAS,GACTC,EAAU,GACVC,EAAa,GACnB,IAAIv1C,EAAQ,EACRw1C,EAAY,EACZv1C,EAAS,EACT4xC,EAAa,EACjB,IAAK,IAAIz/C,EAAI,EAAGuE,EAAKy+C,EAAOzjD,OAAQS,GAAKuE,EAAIvE,GAAK,EAAG,CACnD,MAAM8gD,EAAOkC,EAAOhjD,GACpB,GAAa,OAAT8gD,GAAiB9gD,IAAMuE,EAAI,CAC7BqJ,EAAQxD,KAAKyP,IAAIjM,EAAOw1C,GACxBD,EAAWp/C,KAAKq/C,GAChBA,EAAY,EACZv1C,GAAU4xC,EACV,QACD,CACD,MAAMkC,EAAOqB,EAAOhjD,EAAI,IAAM+iD,EAAUpB,KAClC0B,EAAe9B,GAAiBI,EAAMb,GAC5CmC,EAAOl/C,KAAKs/C,GACZD,GAAaC,EACb,MAAMC,EAAgBxB,GAAkBH,GACxCuB,EAAQn/C,KAAKu/C,GACb7D,EAAar1C,KAAKyP,IAAI4lC,EAAY6D,EACnC,CACD,MAAO,CAAC11C,QAAOC,SAAQo1C,SAAQC,UAASC,aAC1C,CA6BO,SAASI,GACdj1C,EACA6F,EACA62B,EACAwY,EACAC,EACAC,EACAvN,EACA1X,EACAjpB,EACAC,EACAK,GAEAxH,EAAQq1C,OAEQ,IAAZ3Y,IACF18B,EAAQs1C,aAAe5Y,GAErB72B,GACF7F,EAAQ6F,UAAU7R,MAAMgM,EAAS6F,GAGd,EAAe0vC,qBAElCv1C,EAAQ0H,UAAUR,EAAGC,GACrBnH,EAAQwH,MAAMA,EAAM,GAAIA,EAAM,IA2ClC,SAAkCguC,EAAOx1C,GACvC,MAAMu1C,EAAsBC,EAAMD,oBAClC,IAAK,IAAI7jD,EAAI,EAAGuE,EAAKs/C,EAAoBtkD,OAAQS,EAAIuE,EAAIvE,GAAK,EACxDS,MAAMC,QAAQmjD,EAAoB7jD,EAAI,IACxCsO,EAAQu1C,EAAoB7jD,IAAIsC,MAC9BgM,EACAu1C,EAAoB7jD,EAAI,IAG1BsO,EAAQu1C,EAAoB7jD,IAAM6jD,EAAoB7jD,EAAI,EAGhE,CAtDI+jD,CAA+C,EAAez1C,IACrDwH,EAAM,GAAK,GAAKA,EAAM,GAAK,GAEpCxH,EAAQ0H,UAAUR,EAAGC,GACrBnH,EAAQwH,MAAMA,EAAM,GAAIA,EAAM,IAC9BxH,EAAQ6C,UACZ,EAGMsyC,EACAC,EACAvN,EACA1X,EACA,EACA,EACA0X,EACA1X,IAIFnwB,EAAQ6C,UACZ,EAGMsyC,EACAC,EACAvN,EACA1X,EACAjpB,EACAC,EACA0gC,EAAIrgC,EAAM,GACV2oB,EAAI3oB,EAAM,IAIdxH,EAAQ01C,SACV,CC7TA,IAAAC,GArJA,cAAmCC,GAIjC,WAAAhmD,CAAY8qC,GACV3lC,MAAM2lC,GAKN5qC,KAAK+lD,uBAAyBh/C,EAC5Bq7C,GACA/hD,EACAuqC,EAAIob,WAAW9+C,KAAK0jC,IAOtB5qC,KAAKimD,SAAWn2C,SAASC,cAAc,OACvC,MAAMO,EAAQtQ,KAAKimD,SAAS31C,MAC5BA,EAAM0oB,SAAW,WACjB1oB,EAAMd,MAAQ,OACdc,EAAMb,OAAS,OACfa,EAAMw8B,OAAS,IAEf9sC,KAAKimD,SAAS7Y,UAAYwT,GAAqB,aAE/C,MAAMsF,EAAYtb,EAAIub,cACtBD,EAAUl0C,aAAahS,KAAKimD,SAAUC,EAAUE,YAAc,MAM9DpmD,KAAKqmD,UAAY,GAMjBrmD,KAAKsmD,kBAAmB,EAKxBtmD,KAAKumD,iBAAmB,EACzB,CAMD,mBAAAvH,CAAoBj/C,EAAMy9C,GACxB,MAAM5S,EAAM5qC,KAAKogD,SACjB,GAAIxV,EAAInkC,YAAY1G,GAAO,CACzB,MAAM8F,EAAQ,IAAI2gD,GAAYzmD,OAAMyG,EAAWg3C,GAC/C5S,EAAIhlC,cAAcC,EACnB,CACF,CAED,eAAApF,GACE6G,EAActH,KAAK+lD,wBACnB/lD,KAAKimD,SAAS90C,WAAWI,YAAYvR,KAAKimD,UAC1ChhD,MAAMxE,iBACP,CAMD,WAAA49C,CAAYb,GACV,IAAKA,EAKH,YAJIx9C,KAAKsmD,mBACPtmD,KAAKimD,SAAS31C,MAAM8zC,QAAU,OAC9BpkD,KAAKsmD,kBAAmB,IAK5BtmD,KAAKi/C,oBAAoBzB,GACzBx9C,KAAKg/C,oBAAoBjQ,GAA4ByO,GAErD,MAAMI,EAAmBJ,EAAWI,iBAAiBxpB,MAAK,SAAU/yB,EAAGC,GACrE,OAAOD,EAAEyrC,OAASxrC,EAAEwrC,MAC1B,IACUyM,EAAYiE,EAAWjE,UAE7Bv5C,KAAKqmD,UAAUllD,OAAS,EAExB,MAAMslD,EAAkBzmD,KAAKumD,iBAC7BE,EAAgBtlD,OAAS,EAEzB,IAAIulD,EAAkB,KACtB,IAAK,IAAI9kD,EAAI,EAAGuE,EAAKy3C,EAAiBz8C,OAAQS,EAAIuE,IAAMvE,EAAG,CACzD,MAAMu6C,EAAayB,EAAiBh8C,GACpC47C,EAAWmJ,WAAa/kD,EAExB,MAAM8rC,EAAQyO,EAAWzO,MACnBkZ,EAAclZ,EAAMW,iBAC1B,IACG6N,GAAOC,EAAY5C,IACJ,SAAfqN,GAAyC,aAAfA,EAC3B,CACAlZ,EAAM4Q,WACN,QACD,CAED,MAAMh0C,EAAUojC,EAAMmP,OAAOW,EAAYkJ,GACpCp8C,IAGDA,IAAYo8C,IACd1mD,KAAKqmD,UAAU1gD,KAAK2E,GACpBo8C,EAAkBp8C,GAEhB,iBAAkBojC,GACpB+Y,EAAgB9gD,KACxB,GAGK,CACD3F,KAAKqgD,oBAAoB7C,GAEzB9rC,GAAgB1R,KAAKimD,SAAUjmD,KAAKqmD,WAEpCrmD,KAAKg/C,oBAAoBjQ,GAA6ByO,GAEjDx9C,KAAKsmD,mBACRtmD,KAAKimD,SAAS31C,MAAM8zC,QAAU,GAC9BpkD,KAAKsmD,kBAAmB,GAG1BtmD,KAAKsgD,wBAAwB9C,EAC9B,CAKD,mBAAA6C,CAAoB7C,GAClB,MAAMqJ,EAAS7mD,KAAKumD,iBACpB,IAAK,IAAI3kD,EAAIilD,EAAO1lD,OAAS,EAAGS,GAAK,IAAKA,EACxCilD,EAAOjlD,GAAGklD,gBAAgBtJ,GAE5BqJ,EAAO1lD,OAAS,CACjB,GC3II,MAAM4lD,WAAmBhhD,EAK9B,WAAAjG,CAAYC,EAAM2tC,GAChBzoC,MAAMlF,GAONC,KAAK0tC,MAAQA,CACd,EAqCH,MAAMtjC,GACI,SAWV,MAAM48C,WAAmB3K,GAIvB,WAAAv8C,CAAY4K,GACVA,EAAUA,GAAW,GACrB,MAAM4xC,EAAsC51C,OAAO6C,OAAO,CAAA,EAAImB,UACvD4xC,EAAYuK,OAEnB,IAAIA,EAASn8C,EAAQm8C,OAErB5hD,MAAMq3C,GAKNt8C,KAAK0H,GAKL1H,KAAKiH,KAKLjH,KAAK2H,GAML3H,KAAKinD,oBAAsB,GAM3BjnD,KAAKknD,cAAgB,GAErBlnD,KAAK4J,kBAAkBQ,GAAiBpK,KAAKmnD,sBAEzCN,EACExkD,MAAMC,QAAQukD,GAChBA,EAAS,IAAIt8C,EAAWs8C,EAAO/iD,QAAS,CAAC8G,QAAQ,IAEjDoJ,GACkD,mBAAvB,EAAiB,SAC1C,sDAIJ6yC,EAAS,IAAIt8C,OAAW/D,EAAW,CAACoE,QAAQ,IAG9C5K,KAAKonD,UAAUP,EAChB,CAKD,kBAAAQ,GACErnD,KAAK6H,SACN,CAKD,oBAAAs/C,GACEnnD,KAAKinD,oBAAoB/7C,QAAQ5D,GACjCtH,KAAKinD,oBAAoB9lD,OAAS,EAElC,MAAM0lD,EAAS7mD,KAAKsnD,YACpBtnD,KAAKinD,oBAAoBthD,KACvBoB,EAAO8/C,EAAQ18C,EAAyBnK,KAAKunD,iBAAkBvnD,MAC/D+G,EAAO8/C,EAAQ18C,EAA4BnK,KAAKwnD,oBAAqBxnD,OAGvE,IAAK,MAAMuN,KAAMvN,KAAKknD,cACpBlnD,KAAKknD,cAAc35C,GAAIrC,QAAQ5D,GAEjC3C,EAAM3E,KAAKknD,eAEX,MAAMO,EAAcZ,EAAOz7C,WAC3B,IAAK,IAAIxJ,EAAI,EAAGuE,EAAKshD,EAAYtmD,OAAQS,EAAIuE,EAAIvE,IAAK,CACpD,MAAM8rC,EAAQ+Z,EAAY7lD,GAC1B5B,KAAK0nD,wBAAwBha,GAC7B1tC,KAAK4F,cAAc,IAAImhD,GAAW,WAAYrZ,GAC/C,CACD1tC,KAAK6H,SACN,CAKD,uBAAA6/C,CAAwBha,GACtB,MAAMhT,EAAe,CACnB3zB,EACE2mC,EACArtC,EACAL,KAAKqnD,mBACLrnD,MAEF+G,EAAO2mC,EAAO5mC,EAAkB9G,KAAKqnD,mBAAoBrnD,OAGvD0tC,aAAiBsZ,IACnBtsB,EAAa/0B,KACXoB,EAAO2mC,EAAO,WAAY1tC,KAAK2nD,qBAAsB3nD,MACrD+G,EAAO2mC,EAAO,cAAe1tC,KAAK4nD,wBAAyB5nD,OAI/DA,KAAKknD,cAAcz+C,EAAOilC,IAAUhT,CACrC,CAKD,oBAAAitB,CAAqB9hD,GACnB7F,KAAK4F,cAAc,IAAImhD,GAAW,WAAYlhD,EAAM6nC,OACrD,CAKD,uBAAAka,CAAwB/hD,GACtB7F,KAAK4F,cAAc,IAAImhD,GAAW,cAAelhD,EAAM6nC,OACxD,CAMD,gBAAA6Z,CAAiBM,GACf,MAAMna,EAAQma,EAAgBv9C,QAC9BtK,KAAK0nD,wBAAwBha,GAC7B1tC,KAAK4F,cAAc,IAAImhD,GAAW,WAAYrZ,IAC9C1tC,KAAK6H,SACN,CAMD,mBAAA2/C,CAAoBK,GAClB,MAAMna,EAAQma,EAAgBv9C,QACxB/C,EAAMkB,EAAOilC,GACnB1tC,KAAKknD,cAAc3/C,GAAK2D,QAAQ5D,UACzBtH,KAAKknD,cAAc3/C,GAC1BvH,KAAK4F,cAAc,IAAImhD,GAAW,cAAerZ,IACjD1tC,KAAK6H,SACN,CAUD,SAAAy/C,GACE,OACEtnD,KAAKmJ,IAAIiB,GAEZ,CAUD,SAAAg9C,CAAUP,GACR,MAAMiB,EAAa9nD,KAAKsnD,YACxB,GAAIQ,EAAY,CACd,MAAMC,EAAgBD,EAAW18C,WACjC,IAAK,IAAIxJ,EAAI,EAAGuE,EAAK4hD,EAAc5mD,OAAQS,EAAIuE,IAAMvE,EACnD5B,KAAK4F,cAAc,IAAImhD,GAAW,cAAegB,EAAcnmD,IAElE,CAED5B,KAAK8J,IAAIM,GAAiBy8C,EAC3B,CAMD,cAAA3Y,CAAezjC,GAKb,OAJAA,OAAkBjE,IAAViE,EAAsBA,EAAQ,GACtCzK,KAAKsnD,YAAYp8C,SAAQ,SAAUwiC,GACjCA,EAAMQ,eAAezjC,EAC3B,IACWA,CACR,CAWD,mBAAA0jC,CAAoBx0B,GAClB,MAAMy0B,OAAkB5nC,IAATmT,EAAqBA,EAAO,GACrCquC,EAAM5Z,EAAOjtC,OAEnBnB,KAAKsnD,YAAYp8C,SAAQ,SAAUwiC,GACjCA,EAAMS,oBAAoBC,EAChC,IAEI,MAAM6Z,EAAgBjoD,KAAKwtC,gBAC3B,IAAI0a,EAAgBD,EAAcnb,OAC7BnzB,QAAiCnT,IAAzByhD,EAAcnb,SACzBob,EAAgB,GAElB,IAAK,IAAItmD,EAAIomD,EAAK7hD,EAAKioC,EAAOjtC,OAAQS,EAAIuE,EAAIvE,IAAK,CACjD,MAAMu6C,EAAa/N,EAAOxsC,GAC1Bu6C,EAAWvP,SAAWqb,EAAcrb,QACpCuP,EAAWtP,QAAUsP,EAAWtP,SAAWob,EAAcpb,QACzDsP,EAAWpP,cAAgB/gC,KAAKwP,IAC9B2gC,EAAWpP,cACXkb,EAAclb,eAEhBoP,EAAWnP,cAAgBhhC,KAAKyP,IAC9B0gC,EAAWnP,cACXib,EAAcjb,eAEhBmP,EAAWlP,QAAUjhC,KAAKyP,IAAI0gC,EAAWlP,QAASgb,EAAchb,SAChEkP,EAAWjP,QAAUlhC,KAAKwP,IAAI2gC,EAAWjP,QAAS+a,EAAc/a,cACnC1mC,IAAzByhD,EAAc1uC,cACU/S,IAAtB21C,EAAW5iC,OACb4iC,EAAW5iC,OAASoE,GAClBw+B,EAAW5iC,OACX0uC,EAAc1uC,QAGhB4iC,EAAW5iC,OAAS0uC,EAAc1uC,aAGZ/S,IAAtB21C,EAAWrP,SACbqP,EAAWrP,OAASob,EAEvB,CAED,OAAO9Z,CACR,CAKD,cAAAC,GACE,MAAO,OACR,EAGH,IAAA8Z,GAAenB,GC3Tf,IAAAoB,GAzBA,cAAuBriD,EAMrB,WAAAjG,CAAYC,EAAM6qC,EAAK4S,GACrBv4C,MAAMlF,GAONC,KAAK4qC,IAAMA,EAOX5qC,KAAKw9C,gBAA4Bh3C,IAAfg3C,EAA2BA,EAAa,IAC3D,GCkFH,IAAA6K,GAvGA,cAA8BC,GAS5B,WAAAxoD,CAAYC,EAAM6qC,EAAK2d,EAAeC,EAAUhL,EAAYiL,GAC1DxjD,MAAMlF,EAAM6qC,EAAK4S,GAQjBx9C,KAAKuoD,cAAgBA,EAMrBvoD,KAAK0oD,OAAS,KAMd1oD,KAAK2oD,YAAc,KASnB3oD,KAAKwoD,cAAwBhiD,IAAbgiD,GAAyBA,EAKzCxoD,KAAKyoD,eAAiBA,CACvB,CAOD,SAAIpL,GAIF,OAHKr9C,KAAK0oD,SACR1oD,KAAK0oD,OAAS1oD,KAAK4qC,IAAIge,cAAc5oD,KAAKuoD,gBAErCvoD,KAAK0oD,MACb,CACD,SAAIrL,CAAMA,GACRr9C,KAAK0oD,OAASrL,CACf,CAQD,cAAIlmC,GAIF,OAHKnX,KAAK2oD,cACR3oD,KAAK2oD,YAAc3oD,KAAK4qC,IAAIie,uBAAuB7oD,KAAKq9C,QAEnDr9C,KAAK2oD,WACb,CACD,cAAIxxC,CAAWA,GACbnX,KAAK2oD,YAAcxxC,CACpB,CAOD,cAAA/W,GACE6E,MAAM7E,iBACF,mBAAoBJ,KAAKuoD,eACHvoD,KAAkB,cAAEI,gBAE/C,CAOD,eAAAT,GACEsF,MAAMtF,kBACF,oBAAqBK,KAAKuoD,eACJvoD,KAAkB,cAAEL,iBAE/C,GCtGYmpD,GAAA,CAObC,YAAa,cAObC,MAAOliD,EAOPmiD,SAAUniD,EAOVoiD,YAAa,cAQbC,YAAa,cAEbC,YAAa,cACbC,UAAW,YACXC,YAAa,cACbC,WAAY,aACZC,aAAc,eACdC,aAAc,eACdC,cAAe,iBC7CFC,GACA,cADAA,GAEA,cAFAA,GAGF,YAHEA,GAKD,aCiZd,IAAAC,GAlZA,cAAqCC,EAKnC,WAAA/pD,CAAY8qC,EAAKkf,GACf7kD,MAAM2lC,GAON5qC,KAAK++C,KAAOnU,EAMZ5qC,KAAK+pD,gBAML/pD,KAAKgqD,gBAAiB,EAMtBhqD,KAAKiqD,WAAY,EAMjBjqD,KAAKkqD,kBAAoB,GAMzBlqD,KAAKmqD,oBAAmC3jD,IAAlBsjD,EAA8B,EAAIA,EAQxD9pD,KAAKoqD,MAAQ,KAEb,MAAM9/C,EAAUtK,KAAK++C,KAAKoH,cAM1BnmD,KAAKqqD,gBAAkB,GAMvBrqD,KAAKsqD,gBAAkB,GAEvBtqD,KAAKimD,SAAW37C,EAMhBtK,KAAKuqD,wBAA0BxjD,EAC7BuD,EACAq/C,GACA3pD,KAAKwqD,mBACLxqD,MAOFA,KAAKyqD,0BAMLzqD,KAAK0qD,oBAAsB3jD,EACzBuD,EACAq/C,GACA3pD,KAAK2qD,gBACL3qD,MAMFA,KAAK4qD,sBAAwB5qD,KAAK6qD,iBAAiB3jD,KAAKlH,MAExDA,KAAKimD,SAAS3gD,iBACZwB,EACA9G,KAAK4qD,wBACL17C,IAA0B,CAACC,SAAS,GAEvC,CAOD,aAAA27C,CAAcC,GACZ,IAAIC,EAAW,IAAIC,GACjBnC,GAAoBE,MACpBhpD,KAAK++C,KACLgM,GAEF/qD,KAAK4F,cAAcolD,QACUxkD,IAAzBxG,KAAK+pD,iBAEPmB,aAAalrD,KAAK+pD,iBAClB/pD,KAAK+pD,qBAAkBvjD,EACvBwkD,EAAW,IAAIC,GACbnC,GAAoBG,SACpBjpD,KAAK++C,KACLgM,GAEF/qD,KAAK4F,cAAcolD,IAGnBhrD,KAAK+pD,gBAAkBvY,YAAW,KAChCxxC,KAAK+pD,qBAAkBvjD,EACvB,MAAMwkD,EAAW,IAAIC,GACnBnC,GAAoBC,YACpB/oD,KAAK++C,KACLgM,GAEF/qD,KAAK4F,cAAcolD,EAAS,GAC3B,IAEN,CASD,qBAAAG,CAAsBJ,GACpB,MAAMllD,EAAQklD,EACRx9C,EAAK1H,EAAMulD,UAEjB,GACEvlD,EAAM9F,MAAQ+oD,GAAoBO,WAClCxjD,EAAM9F,MAAQ+oD,GAAoBY,cAClC,QACO1pD,KAAKsqD,gBAAgB/8C,GAC5B,IAAK,MAAM69C,KAAaprD,KAAKsqD,gBAC3B,GAAItqD,KAAKsqD,gBAAgBc,GAAWjrD,SAAW0F,EAAM1F,OAAQ,QAKpDH,KAAKsqD,gBAAgBc,GAC5B,KACD,CAET,MACMvlD,EAAM9F,MAAQ+oD,GAAoBM,aAClCvjD,EAAM9F,MAAQ+oD,GAAoBK,cAElCnpD,KAAKsqD,gBAAgB/8C,GAAM1H,GAE7B7F,KAAKqqD,gBAAkB3jD,OAAOsC,OAAOhJ,KAAKsqD,gBAC3C,CAOD,gBAAAe,CAAiBN,GACf/qD,KAAKmrD,sBAAsBJ,GAC3B,MAAMC,EAAW,IAAIC,GACnBnC,GAAoBO,UACpBrpD,KAAK++C,KACLgM,OACAvkD,OACAA,EACAxG,KAAKqqD,iBAEPrqD,KAAK4F,cAAcolD,GASjBhrD,KAAKgqD,iBACJgB,EAAS9qD,mBACTF,KAAKiqD,WACNjqD,KAAKsrD,qBAAqBP,IAE1B/qD,KAAK8qD,cAAc9qD,KAAKoqD,OAGU,IAAhCpqD,KAAKqqD,gBAAgBlpD,SACvBnB,KAAKkqD,kBAAkBh/C,QAAQ5D,GAC/BtH,KAAKkqD,kBAAkB/oD,OAAS,EAChCnB,KAAKiqD,WAAY,EACjBjqD,KAAKoqD,MAAQ,KAEhB,CAQD,oBAAAkB,CAAqBP,GACnB,OAA+B,IAAxBA,EAAaQ,MACrB,CAOD,kBAAAf,CAAmBO,GACjB/qD,KAAKgqD,eAAiD,IAAhChqD,KAAKqqD,gBAAgBlpD,OAC3CnB,KAAKmrD,sBAAsBJ,GAC3B,MAAMC,EAAW,IAAIC,GACnBnC,GAAoBM,YACpBppD,KAAK++C,KACLgM,OACAvkD,OACAA,EACAxG,KAAKqqD,iBAUP,GARArqD,KAAK4F,cAAcolD,GAEnBhrD,KAAKoqD,MAAQ,IAAIoB,aAAaT,EAAahrD,KAAMgrD,GACjDrkD,OAAO0I,eAAepP,KAAKoqD,MAAO,SAAU,CAC1CqB,UAAU,EACVpnD,MAAO0mD,EAAa5qD,SAGgB,IAAlCH,KAAKkqD,kBAAkB/oD,OAAc,CACvC,MAAMuqD,EAAM1rD,KAAK++C,KAAK4M,mBACtB3rD,KAAKkqD,kBAAkBvkD,KACrBoB,EACE2kD,EACA5C,GAAoBK,YACpBnpD,KAAK4rD,mBACL5rD,MAEF+G,EAAO2kD,EAAK5C,GAAoBO,UAAWrpD,KAAKqrD,iBAAkBrrD,MAclE+G,EACE/G,KAAKimD,SACL6C,GAAoBY,cACpB1pD,KAAKqrD,iBACLrrD,OAGAA,KAAKimD,SAAS4F,aAAe7rD,KAAKimD,SAAS4F,gBAAkBH,GAC/D1rD,KAAKkqD,kBAAkBvkD,KACrBoB,EACE/G,KAAKimD,SAAS4F,cACd/C,GAAoBO,UACpBrpD,KAAKqrD,iBACLrrD,MAIP,CACF,CAOD,kBAAA4rD,CAAmBb,GAIjB,GAAI/qD,KAAK8rD,UAAUf,GAAe,CAChC/qD,KAAKmrD,sBAAsBJ,GAC3B/qD,KAAKiqD,WAAY,EACjB,MAAMe,EAAW,IAAIC,GACnBnC,GAAoBI,YACpBlpD,KAAK++C,KACLgM,EACA/qD,KAAKiqD,eACLzjD,EACAxG,KAAKqqD,iBAEPrqD,KAAK4F,cAAcolD,EACpB,CACF,CAQD,eAAAL,CAAgBI,GACd/qD,KAAKyqD,0BAA4BM,EACjC,MAAMvC,KAAcxoD,KAAKoqD,QAASpqD,KAAK8rD,UAAUf,IACjD/qD,KAAK4F,cACH,IAAIqlD,GACFnC,GAAoBK,YACpBnpD,KAAK++C,KACLgM,EACAvC,GAGL,CAUD,gBAAAqC,CAAiBhlD,GAIf,MAAM0iD,EAAgBvoD,KAAKyqD,0BAEvBlC,IAAiBA,EAAcroD,kBACJ,kBAArB2F,EAAMkmD,aAAiD,IAArBlmD,EAAMkmD,YAEhDlmD,EAAMzF,gBAET,CAQD,SAAA0rD,CAAUf,GACR,OACE/qD,KAAKiqD,WACLj+C,KAAKmP,IAAI4vC,EAAaiB,QAAUhsD,KAAKoqD,MAAM4B,SACzChsD,KAAKmqD,gBACPn+C,KAAKmP,IAAI4vC,EAAakB,QAAUjsD,KAAKoqD,MAAM6B,SAAWjsD,KAAKmqD,cAE9D,CAKD,eAAA1pD,GACMT,KAAK0qD,sBACPpjD,EAActH,KAAK0qD,qBACnB1qD,KAAK0qD,oBAAsB,MAE7B1qD,KAAKimD,SAAS3/C,oBACZQ,EACA9G,KAAK4qD,uBAGH5qD,KAAKuqD,0BACPjjD,EAActH,KAAKuqD,yBACnBvqD,KAAKuqD,wBAA0B,MAGjCvqD,KAAKkqD,kBAAkBh/C,QAAQ5D,GAC/BtH,KAAKkqD,kBAAkB/oD,OAAS,EAEhCnB,KAAKimD,SAAW,KAChBhhD,MAAMxE,iBACP,GCpZYyrD,GAMD,aANCA,GAaF,YAbEA,GAoBJ,UApBIA,GA2BF,YA3BEA,GAkCJ,UClCIC,GACD,aADCA,GAEP,OAFOA,GAGL,SAHKA,GAIP,OCFD,MAAMC,GAAO5xC,IA+PpB,IAAA6xC,GAjPA,MAKE,WAAAvsD,CAAYwsD,EAAkBC,GAK5BvsD,KAAKwsD,kBAAoBF,EAMzBtsD,KAAKysD,aAAeF,EAMpBvsD,KAAK0sD,UAAY,GAMjB1sD,KAAK2sD,YAAc,GAMnB3sD,KAAK4sD,gBAAkB,EACxB,CAKD,KAAAjoD,GACE3E,KAAK0sD,UAAUvrD,OAAS,EACxBnB,KAAK2sD,YAAYxrD,OAAS,EAC1BwD,EAAM3E,KAAK4sD,gBACZ,CAMD,OAAAC,GACE,MAAMC,EAAW9sD,KAAK0sD,UAChBK,EAAa/sD,KAAK2sD,YAClBriD,EAAUwiD,EAAS,GACF,GAAnBA,EAAS3rD,QACX2rD,EAAS3rD,OAAS,EAClB4rD,EAAW5rD,OAAS,IAEpB2rD,EAAS,GAAuBA,EAAS7hD,MACzC8hD,EAAW,GAA4BA,EAAW9hD,MAClDjL,KAAKgtD,QAAQ,IAEf,MAAMC,EAAajtD,KAAKysD,aAAaniD,GAErC,cADOtK,KAAK4sD,gBAAgBK,GACrB3iD,CACR,CAOD,OAAA4iD,CAAQ5iD,GACN0J,KACIhU,KAAKysD,aAAaniD,KAAYtK,KAAK4sD,iBACrC,qEAEF,MAAMO,EAAWntD,KAAKwsD,kBAAkBliD,GACxC,OAAI6iD,GAAYf,KACdpsD,KAAK0sD,UAAU/mD,KAAK2E,GACpBtK,KAAK2sD,YAAYhnD,KAAKwnD,GACtBntD,KAAK4sD,gBAAgB5sD,KAAKysD,aAAaniD,KAAY,EACnDtK,KAAKotD,UAAU,EAAGptD,KAAK0sD,UAAUvrD,OAAS,IACnC,EAGV,CAKD,QAAAksD,GACE,OAAOrtD,KAAK0sD,UAAUvrD,MACvB,CAQD,kBAAAmsD,CAAmBrqD,GACjB,OAAe,EAARA,EAAY,CACpB,CAQD,mBAAAsqD,CAAoBtqD,GAClB,OAAe,EAARA,EAAY,CACpB,CAQD,eAAAuqD,CAAgBvqD,GACd,OAAQA,EAAQ,GAAM,CACvB,CAMD,QAAAwqD,GACE,IAAI7rD,EACJ,IAAKA,GAAK5B,KAAK0sD,UAAUvrD,QAAU,GAAK,EAAGS,GAAK,EAAGA,IACjD5B,KAAKgtD,QAAQprD,EAEhB,CAKD,OAAAkD,GACE,OAAiC,IAA1B9E,KAAK0sD,UAAUvrD,MACvB,CAMD,WAAAusD,CAAYnmD,GACV,OAAOA,KAAOvH,KAAK4sD,eACpB,CAMD,QAAAe,CAASrjD,GACP,OAAOtK,KAAK0tD,YAAY1tD,KAAKysD,aAAaniD,GAC3C,CAMD,OAAA0iD,CAAQ/pD,GACN,MAAM6pD,EAAW9sD,KAAK0sD,UAChBK,EAAa/sD,KAAK2sD,YAClBiB,EAAQd,EAAS3rD,OACjBmJ,EAAUwiD,EAAS7pD,GACnBkqD,EAAWJ,EAAW9pD,GACtB4qD,EAAa5qD,EAEnB,KAAOA,EAAQ2qD,GAAS,GAAG,CACzB,MAAME,EAAS9tD,KAAKstD,mBAAmBrqD,GACjC8qD,EAAS/tD,KAAKutD,oBAAoBtqD,GAElC+qD,EACJD,EAASH,GAASb,EAAWgB,GAAUhB,EAAWe,GAC9CC,EACAD,EAENhB,EAAS7pD,GAAS6pD,EAASkB,GAC3BjB,EAAW9pD,GAAS8pD,EAAWiB,GAC/B/qD,EAAQ+qD,CACT,CAEDlB,EAAS7pD,GAASqH,EAClByiD,EAAW9pD,GAASkqD,EACpBntD,KAAKotD,UAAUS,EAAY5qD,EAC5B,CAOD,SAAAmqD,CAAUS,EAAY5qD,GACpB,MAAM6pD,EAAW9sD,KAAK0sD,UAChBK,EAAa/sD,KAAK2sD,YAClBriD,EAAUwiD,EAAS7pD,GACnBkqD,EAAWJ,EAAW9pD,GAE5B,KAAOA,EAAQ4qD,GAAY,CACzB,MAAMI,EAAcjuD,KAAKwtD,gBAAgBvqD,GACzC,KAAI8pD,EAAWkB,GAAed,GAK5B,MAJAL,EAAS7pD,GAAS6pD,EAASmB,GAC3BlB,EAAW9pD,GAAS8pD,EAAWkB,GAC/BhrD,EAAQgrD,CAIX,CACDnB,EAAS7pD,GAASqH,EAClByiD,EAAW9pD,GAASkqD,CACrB,CAKD,YAAAe,GACE,MAAM5B,EAAmBtsD,KAAKwsD,kBACxBM,EAAW9sD,KAAK0sD,UAChBK,EAAa/sD,KAAK2sD,YACxB,IAAI1pD,EAAQ,EACZ,MAAMtB,EAAImrD,EAAS3rD,OACnB,IAAImJ,EAAS1I,EAAGurD,EAChB,IAAKvrD,EAAI,EAAGA,EAAID,IAAKC,EACnB0I,EAAUwiD,EAASlrD,GACnBurD,EAAWb,EAAiBhiD,GACxB6iD,GAAYf,UACPpsD,KAAK4sD,gBAAgB5sD,KAAKysD,aAAaniD,KAE9CyiD,EAAW9pD,GAASkqD,EACpBL,EAAS7pD,KAAWqH,GAGxBwiD,EAAS3rD,OAAS8B,EAClB8pD,EAAW5rD,OAAS8B,EACpBjD,KAAKytD,UACN,GCxIH,IAAAU,GAlHA,cAAwBC,GAKtB,WAAAtuD,CAAYuuD,EAAsBC,GAChCrpD,OAKE,SAAUqF,GACR,OAAO+jD,EAAqBnqD,MAAM,KAAMoG,EACzC,IAKD,SAAUA,GACR,OAAmDA,EAAQ,GAAIyC,QAChE,IAIH/M,KAAKuuD,uBAAyBvuD,KAAKwuD,iBAAiBtnD,KAAKlH,MAMzDA,KAAKyuD,oBAAsBH,EAM3BtuD,KAAK0uD,cAAgB,EAMrB1uD,KAAK2uD,kBAAoB,EAC1B,CAMD,OAAAzB,CAAQ5iD,GACN,MAAMskD,EAAQ3pD,MAAMioD,QAAQ5iD,GAC5B,GAAIskD,EAAO,CACItkD,EAAQ,GAChBhF,iBAAiBwB,EAAkB9G,KAAKuuD,uBAC9C,CACD,OAAOK,CACR,CAKD,eAAAC,GACE,OAAO7uD,KAAK0uD,aACb,CAMD,gBAAAF,CAAiB3oD,GACf,MAAMoH,EAAmDpH,EAAY,OAC/D0G,EAAQU,EAAKC,WACnB,GACEX,IAAUV,GACVU,IAAUV,GACVU,IAAUV,EACV,CACIU,IAAUV,GACZoB,EAAK3G,oBAAoBQ,EAAkB9G,KAAKuuD,wBAElD,MAAMO,EAAU7hD,EAAKF,SACjB+hD,KAAW9uD,KAAK2uD,2BACX3uD,KAAK2uD,kBAAkBG,KAC5B9uD,KAAK0uD,eAET1uD,KAAKyuD,qBACN,CACF,CAMD,aAAAM,CAAcC,EAAiBC,GAC7B,IACI1iD,EAAOU,EAAM6hD,EADbI,EAAW,EAEf,KACElvD,KAAK0uD,cAAgBM,GACrBE,EAAWD,GACXjvD,KAAKqtD,WAAa,GAElBpgD,EAAmDjN,KAAK6sD,UAAU,GAClEiC,EAAU7hD,EAAKF,SACfR,EAAQU,EAAKC,WACTX,IAAUV,GAAoBijD,KAAW9uD,KAAK2uD,oBAChD3uD,KAAK2uD,kBAAkBG,IAAW,IAChC9uD,KAAK0uD,gBACLQ,EACFjiD,EAAKI,OAGV,GAaI,SAAS8hD,GACd3R,EACAvwC,EACAmiD,EACAC,EACAC,GAIA,IAAK9R,KAAgB4R,KAAiB5R,EAAW+R,aAC/C,OAAOnD,GAET,IAAK5O,EAAW+R,YAAYH,GAAeniD,EAAKF,UAC9C,OAAOq/C,GAQT,MAAM3vC,EAAS+gC,EAAWjE,UAAU98B,OAC9BuB,EAASqxC,EAAW,GAAK5yC,EAAO,GAChCwB,EAASoxC,EAAW,GAAK5yC,EAAO,GACtC,OACE,MAAQzQ,KAAKqW,IAAIitC,GACjBtjD,KAAKka,KAAKlI,EAASA,EAASC,EAASA,GAAUqxC,CAEnD,CCHA,IAAAE,GAnHA,cAAsBhlD,EAIpB,WAAA1K,CAAY4K,GACVzF,QAEA,MAAMqF,EAAUI,EAAQJ,SACpBA,GAAYI,EAAQvK,QAAWmK,EAAQgG,MAAMm/C,gBAC/CnlD,EAAQgG,MAAMm/C,cAAgB,QAOhCzvD,KAAKsK,QAAUA,GAAoB,KAMnCtK,KAAK0vD,QAAU,KAMf1vD,KAAK++C,KAAO,KAMZ/+C,KAAK06B,aAAe,GAEhBhwB,EAAQmyC,SACV78C,KAAK68C,OAASnyC,EAAQmyC,QAGpBnyC,EAAQvK,QACVH,KAAK2vD,UAAUjlD,EAAQvK,OAE1B,CAKD,eAAAM,GACE4Q,GAAWrR,KAAKsK,SAChBrF,MAAMxE,iBACP,CAOD,MAAA2/C,GACE,OAAOpgD,KAAK++C,IACb,CAUD,MAAAjC,CAAOlS,GACD5qC,KAAK++C,MACP1tC,GAAWrR,KAAKsK,SAElB,IAAK,IAAI1I,EAAI,EAAGuE,EAAKnG,KAAK06B,aAAav5B,OAAQS,EAAIuE,IAAMvE,EACvD0F,EAActH,KAAK06B,aAAa94B,IAIlC,GAFA5B,KAAK06B,aAAav5B,OAAS,EAC3BnB,KAAK++C,KAAOnU,EACRA,EAAK,EACQ5qC,KAAK0vD,QAChB1vD,KAAK0vD,QACL9kB,EAAIglB,gCACD39C,YAAYjS,KAAKsK,SACpBtK,KAAK68C,SAAWx5C,GAClBrD,KAAK06B,aAAa/0B,KAChBoB,EAAO6jC,EAAKshB,GAAyBlsD,KAAK68C,OAAQ78C,OAGtD4qC,EAAIiS,QACL,CACF,CAOD,MAAAA,CAAOgT,GAAY,CAWnB,SAAAF,CAAUxvD,GACRH,KAAK0vD,QACe,iBAAXvvD,EAAsB2P,SAASggD,eAAe3vD,GAAUA,CAClE,GCiLH,IAAA4vD,GAjSA,cAA0BC,GAIxB,WAAAlwD,CAAY4K,GACVA,EAAUA,GAAoB,GAE9BzF,MAAM,CACJqF,QAASwF,SAASC,cAAc,OAChC8sC,OAAQnyC,EAAQmyC,OAChB18C,OAAQuK,EAAQvK,SAOlBH,KAAKiwD,WAAangD,SAASC,cAAc,MAMzC/P,KAAKkwD,gBACmB1pD,IAAtBkE,EAAQylD,WAA0BzlD,EAAQylD,UAM5CnwD,KAAKowD,eAAiBpwD,KAAKkwD,WAM3BlwD,KAAKqwD,0BAA+C7pD,IAAxBkE,EAAQ4lD,YAMpCtwD,KAAKuwD,kBACqB/pD,IAAxBkE,EAAQ4lD,aAA4B5lD,EAAQ4lD,YAEzCtwD,KAAKuwD,eACRvwD,KAAKkwD,YAAa,GAGpB,MAAM9iB,OACkB5mC,IAAtBkE,EAAQ0iC,UAA0B1iC,EAAQ0iC,UAAY,iBAElDojB,OACiBhqD,IAArBkE,EAAQ8lD,SAAyB9lD,EAAQ8lD,SAAW,eAEhDC,OACwBjqD,IAA5BkE,EAAQ+lD,gBACJ/lD,EAAQ+lD,gBACRrjB,EAAY,UAEZsjB,OACsBlqD,IAA1BkE,EAAQgmD,cAA8BhmD,EAAQgmD,cAAgB,IAE1DC,OAC0BnqD,IAA9BkE,EAAQimD,kBACJjmD,EAAQimD,kBACRvjB,EAAY,YAEW,iBAAlBsjB,GAKT1wD,KAAK4wD,eAAiB9gD,SAASC,cAAc,QAC7C/P,KAAK4wD,eAAeC,YAAcH,EAClC1wD,KAAK4wD,eAAexjB,UAAYujB,GAEhC3wD,KAAK4wD,eAAiBF,EAGxB,MAAMhL,OAA0Bl/C,IAAlBkE,EAAQg7C,MAAsBh7C,EAAQg7C,MAAQ,IAEvC,iBAAVA,GAKT1lD,KAAK8wD,OAAShhD,SAASC,cAAc,QACrC/P,KAAK8wD,OAAOD,YAAcnL,EAC1B1lD,KAAK8wD,OAAO1jB,UAAYqjB,GAExBzwD,KAAK8wD,OAASpL,EAGhB,MAAMqL,EACJ/wD,KAAKuwD,eAAiBvwD,KAAKkwD,WAAalwD,KAAK4wD,eAAiB5wD,KAAK8wD,OAMrE9wD,KAAKgxD,cAAgBlhD,SAASC,cAAc,UAC5C/P,KAAKgxD,cAAcC,aAAa,OAAQ,UACxCjxD,KAAKgxD,cAAcC,aAAa,gBAAiBroD,QAAQ5I,KAAKkwD,aAC9DlwD,KAAKgxD,cAAcE,MAAQV,EAC3BxwD,KAAKgxD,cAAc/+C,YAAY8+C,GAE/B/wD,KAAKgxD,cAAc1rD,iBACjBwB,EACA9G,KAAKmxD,aAAajqD,KAAKlH,OACvB,GAGF,MAAMoxD,EACJhkB,EACA,IACAwT,GACA,IACAE,IACC9gD,KAAKkwD,YAAclwD,KAAKuwD,aAAe,IAAMxP,GAAkB,KAC/D/gD,KAAKuwD,aAAe,GAAK,qBACtBjmD,EAAUtK,KAAKsK,QACrBA,EAAQ8iC,UAAYgkB,EACpB9mD,EAAQ2H,YAAYjS,KAAKgxD,eACzB1mD,EAAQ2H,YAAYjS,KAAKiwD,YAOzBjwD,KAAKqxD,sBAAwB,GAM7BrxD,KAAKsmD,kBAAmB,CACzB,CAQD,0BAAAgL,CAA2B9T,GACzB,MAAM+T,EAAsBlvD,MAAMmvD,KAChC,IAAIC,IACFzxD,KAAKogD,SACFsR,eACAC,SAASjkB,GAAUA,EAAMsQ,gBAAgBR,OAI1C8S,GAAetwD,KAAKogD,SACvBsR,eACAlT,MACE9Q,GACCA,EAAMuP,cAC6C,IAAnDvP,EAAMuP,YAAY2U,+BAKxB,OAHK5xD,KAAKqwD,sBACRrwD,KAAK6xD,eAAevB,GAEfiB,CACR,CAMD,cAAAO,CAAetU,GACb,IAAKA,EAKH,YAJIx9C,KAAKsmD,mBACPtmD,KAAKsK,QAAQgG,MAAM8zC,QAAU,OAC7BpkD,KAAKsmD,kBAAmB,IAK5B,MAAMrI,EAAej+C,KAAKsxD,2BAA2B9T,GAE/C3Q,EAAUoR,EAAa98C,OAAS,EAMtC,GALInB,KAAKsmD,kBAAoBzZ,IAC3B7sC,KAAKsK,QAAQgG,MAAM8zC,QAAUvX,EAAU,GAAK,OAC5C7sC,KAAKsmD,iBAAmBzZ,IAGtBtqC,EAAO07C,EAAcj+C,KAAKqxD,uBAA9B,CAIA7/C,GAAexR,KAAKiwD,YAGpB,IAAK,IAAIruD,EAAI,EAAGuE,EAAK83C,EAAa98C,OAAQS,EAAIuE,IAAMvE,EAAG,CACrD,MAAM0I,EAAUwF,SAASC,cAAc,MACvCzF,EAAQ05C,UAAY/F,EAAar8C,GACjC5B,KAAKiwD,WAAWh+C,YAAY3H,EAC7B,CAEDtK,KAAKqxD,sBAAwBpT,CAX5B,CAYF,CAMD,YAAAkT,CAAatrD,GACXA,EAAMzF,iBACNJ,KAAK+xD,gBACL/xD,KAAKowD,eAAiBpwD,KAAKkwD,UAC5B,CAKD,aAAA6B,GACE/xD,KAAKsK,QAAQ0nD,UAAUC,OAAOlR,IAC1B/gD,KAAKkwD,WACPn/C,GAAY/Q,KAAK4wD,eAAgB5wD,KAAK8wD,QAEtC//C,GAAY/Q,KAAK8wD,OAAQ9wD,KAAK4wD,gBAEhC5wD,KAAKkwD,YAAclwD,KAAKkwD,WACxBlwD,KAAKgxD,cAAcC,aAAa,gBAAiBroD,QAAQ5I,KAAKkwD,YAC/D,CAOD,cAAAgC,GACE,OAAOlyD,KAAKuwD,YACb,CAOD,cAAAsB,CAAevB,GACTtwD,KAAKuwD,eAAiBD,IAG1BtwD,KAAKuwD,aAAeD,EACpBtwD,KAAKsK,QAAQ0nD,UAAUC,OAAO,oBAC1BjyD,KAAKowD,gBACPpwD,KAAK+xD,gBAER,CASD,YAAAI,CAAahC,GACXnwD,KAAKowD,eAAiBD,EACjBnwD,KAAKuwD,cAAgBvwD,KAAKkwD,aAAeC,GAG9CnwD,KAAK+xD,eACN,CAQD,YAAAK,GACE,OAAOpyD,KAAKkwD,UACb,CAOD,MAAArT,CAAOgT,GACL7vD,KAAK8xD,eAAejC,EAASrS,WAC9B,GCtJH,IAAA6U,GApJA,cAAqBrC,GAInB,WAAAlwD,CAAY4K,GACVA,EAAUA,GAAoB,GAE9BzF,MAAM,CACJqF,QAASwF,SAASC,cAAc,OAChC8sC,OAAQnyC,EAAQmyC,OAChB18C,OAAQuK,EAAQvK,SAGlB,MAAMitC,OACkB5mC,IAAtBkE,EAAQ0iC,UAA0B1iC,EAAQ0iC,UAAY,YAElDsY,OAA0Bl/C,IAAlBkE,EAAQg7C,MAAsBh7C,EAAQg7C,MAAQ,IAEtD4M,OACyB9rD,IAA7BkE,EAAQ4nD,iBACJ5nD,EAAQ4nD,iBACR,aAMNtyD,KAAK8wD,OAAS,KAEO,iBAAVpL,GACT1lD,KAAK8wD,OAAShhD,SAASC,cAAc,QACrC/P,KAAK8wD,OAAO1jB,UAAYklB,EACxBtyD,KAAK8wD,OAAOD,YAAcnL,IAE1B1lD,KAAK8wD,OAASpL,EACd1lD,KAAK8wD,OAAOkB,UAAUzuC,IAAI+uC,IAG5B,MAAM9B,EAAW9lD,EAAQ8lD,SAAW9lD,EAAQ8lD,SAAW,iBAEjDjF,EAASz7C,SAASC,cAAc,UACtCw7C,EAAOne,UAAYA,EAAY,SAC/Bme,EAAO0F,aAAa,OAAQ,UAC5B1F,EAAO2F,MAAQV,EACfjF,EAAOt5C,YAAYjS,KAAK8wD,QAExBvF,EAAOjmD,iBACLwB,EACA9G,KAAKmxD,aAAajqD,KAAKlH,OACvB,GAGF,MAAMoxD,EACJhkB,EAAY,IAAMwT,GAAqB,IAAME,GACzCx2C,EAAUtK,KAAKsK,QACrBA,EAAQ8iC,UAAYgkB,EACpB9mD,EAAQ2H,YAAYs5C,GAEpBvrD,KAAKuyD,gBAAkB7nD,EAAQ8nD,WAAa9nD,EAAQ8nD,gBAAahsD,EAMjExG,KAAKyyD,eAAiCjsD,IAArBkE,EAAQuzB,SAAyBvzB,EAAQuzB,SAAW,IAMrEj+B,KAAK0yD,eAAiClsD,IAArBkE,EAAQioD,UAAyBjoD,EAAQioD,SAM1D3yD,KAAK4yD,eAAYpsD,EAEbxG,KAAK0yD,WACP1yD,KAAKsK,QAAQ0nD,UAAUzuC,IAAIm9B,GAE9B,CAMD,YAAAyQ,CAAatrD,GACXA,EAAMzF,sBACuBoG,IAAzBxG,KAAKuyD,gBACPvyD,KAAKuyD,kBAELvyD,KAAK6yD,aAER,CAKD,WAAAA,GACE,MACMtV,EADMv9C,KAAKogD,SACA1C,UACjB,IAAKH,EAGH,OAEF,MAAM5gC,EAAW4gC,EAAK1H,mBACLrvC,IAAbmW,IACE3c,KAAKyyD,UAAY,GAAK91C,GAAY,EAAI3Q,KAAK6T,KAAQ,EACrD09B,EAAKzH,QAAQ,CACXn5B,SAAU,EACVshB,SAAUj+B,KAAKyyD,UACfnc,OAAQpqC,KAGVqxC,EAAKtI,YAAY,GAGtB,CAOD,MAAA4H,CAAOgT,GACL,MAAMrS,EAAaqS,EAASrS,WAC5B,IAAKA,EACH,OAEF,MAAM7gC,EAAW6gC,EAAWjE,UAAU58B,SACtC,GAAIA,GAAY3c,KAAK4yD,UAAW,CAC9B,MAAM78C,EAAY,UAAY4G,EAAW,OACzC,GAAI3c,KAAK0yD,UAAW,CAClB,MAAMI,EAAW9yD,KAAKsK,QAAQ0nD,UAAUc,SAASpS,IAC5CoS,GAAyB,IAAbn2C,EAENm2C,GAAyB,IAAbn2C,GACrB3c,KAAKsK,QAAQ0nD,UAAUvmD,OAAOi1C,IAF9B1gD,KAAKsK,QAAQ0nD,UAAUzuC,IAAIm9B,GAI9B,CACD1gD,KAAK8wD,OAAOxgD,MAAMyF,UAAYA,CAC/B,CACD/V,KAAK4yD,UAAYj2C,CAClB,GCnBH,IAAAo2C,GA9HA,cAAmB/C,GAIjB,WAAAlwD,CAAY4K,GACVA,EAAUA,GAAoB,GAE9BzF,MAAM,CACJqF,QAASwF,SAASC,cAAc,OAChC5P,OAAQuK,EAAQvK,SAGlB,MAAMitC,OACkB5mC,IAAtBkE,EAAQ0iC,UAA0B1iC,EAAQ0iC,UAAY,UAElD1/B,OAA0BlH,IAAlBkE,EAAQgD,MAAsBhD,EAAQgD,MAAQ,EAEtDslD,OACwBxsD,IAA5BkE,EAAQsoD,gBACJtoD,EAAQsoD,gBACR5lB,EAAY,MAEZ6lB,OACyBzsD,IAA7BkE,EAAQuoD,iBACJvoD,EAAQuoD,iBACR7lB,EAAY,OAEZ8lB,OACoB1sD,IAAxBkE,EAAQwoD,YAA4BxoD,EAAQwoD,YAAc,IACtDC,OACqB3sD,IAAzBkE,EAAQyoD,aAA6BzoD,EAAQyoD,aAAe,IAExDC,OACuB5sD,IAA3BkE,EAAQ0oD,eAA+B1oD,EAAQ0oD,eAAiB,UAC5DC,OACwB7sD,IAA5BkE,EAAQ2oD,gBACJ3oD,EAAQ2oD,gBACR,WAEAC,EAAYxjD,SAASC,cAAc,UACzCujD,EAAUlmB,UAAY4lB,EACtBM,EAAUrC,aAAa,OAAQ,UAC/BqC,EAAUpC,MAAQkC,EAClBE,EAAUrhD,YACe,iBAAhBihD,EACHpjD,SAASyjD,eAAeL,GACxBA,GAGNI,EAAUhuD,iBACRwB,EACA9G,KAAKmxD,aAAajqD,KAAKlH,KAAM0N,IAC7B,GAGF,MAAM8lD,EAAa1jD,SAASC,cAAc,UAC1CyjD,EAAWpmB,UAAY6lB,EACvBO,EAAWvC,aAAa,OAAQ,UAChCuC,EAAWtC,MAAQmC,EACnBG,EAAWvhD,YACe,iBAAjBkhD,EACHrjD,SAASyjD,eAAeJ,GACxBA,GAGNK,EAAWluD,iBACTwB,EACA9G,KAAKmxD,aAAajqD,KAAKlH,MAAO0N,IAC9B,GAGF,MAAM0jD,EACJhkB,EAAY,IAAMwT,GAAqB,IAAME,GACzCx2C,EAAUtK,KAAKsK,QACrBA,EAAQ8iC,UAAYgkB,EACpB9mD,EAAQ2H,YAAYqhD,GACpBhpD,EAAQ2H,YAAYuhD,GAMpBxzD,KAAKyyD,eAAiCjsD,IAArBkE,EAAQuzB,SAAyBvzB,EAAQuzB,SAAW,GACtE,CAOD,YAAAkzB,CAAazjD,EAAO7H,GAClBA,EAAMzF,iBACNJ,KAAKyzD,aAAa/lD,EACnB,CAMD,YAAA+lD,CAAa/lD,GACX,MACM6vC,EADMv9C,KAAKogD,SACA1C,UACjB,IAAKH,EAGH,OAEF,MAAMmW,EAAcnW,EAAK3H,UACzB,QAAoBpvC,IAAhBktD,EAA2B,CAC7B,MAAMC,EAAUpW,EAAKxB,mBAAmB2X,EAAchmD,GAClD1N,KAAKyyD,UAAY,GACflV,EAAKtH,gBACPsH,EAAK5G,mBAEP4G,EAAKzH,QAAQ,CACXX,KAAMwe,EACN11B,SAAUj+B,KAAKyyD,UACfnc,OAAQpqC,MAGVqxC,EAAKnI,QAAQue,EAEhB,CACF,GCxHI,SAASC,GAASlpD,GACvBA,EAAUA,GAAoB,GAG9B,MAAMmpD,EAAW,IAAItpD,QAEgB/D,IAAjBkE,EAAQyqC,MAAqBzqC,EAAQyqC,OAEvD0e,EAASluD,KAAK,IAAImuD,GAAKppD,EAAQqpD,oBAGQvtD,IAAnBkE,EAAQ4M,QAAuB5M,EAAQ4M,SAE3Du8C,EAASluD,KAAK,IAAIquD,GAAOtpD,EAAQupD,gBASnC,YAL0BztD,IAAxBkE,EAAQwpD,aAA4BxpD,EAAQwpD,cAE5CL,EAASluD,KAAK,IAAIwuD,GAAYzpD,EAAQ0pD,qBAGjCP,CACT,CCpDe,IAAAQ,GACL,SC0HH,SAASC,GAAI/W,EAAM7vC,EAAOuwB,GAC/B,MAAM0Z,EAAgB4F,EAAKjI,oBAC3B,GAAIqC,EAAe,CACjB,MAAMl7B,EAAS,CAACk7B,EAAc,GAAKjqC,EAAM,GAAIiqC,EAAc,GAAKjqC,EAAM,IACtE6vC,EAAKpH,gBAAgB,CACnBlY,cAAuBz3B,IAAby3B,EAAyBA,EAAW,IAC9CqY,OAAQlqC,GACRqQ,OAAQ8gC,EAAKhD,qBAAqB99B,IAErC,CACH,CAQO,SAAS83C,GAAYhX,EAAM7vC,EAAOwf,EAAQ+Q,GAC/C,MAAMy1B,EAAcnW,EAAK3H,UAEzB,QAAoBpvC,IAAhBktD,EACF,OAGF,MAAMC,EAAUpW,EAAKxB,mBAAmB2X,EAAchmD,GAChDwtC,EAAgBqC,EAAKhH,qBAAqBod,GAE5CpW,EAAKtH,gBACPsH,EAAK5G,mBAEP4G,EAAKzH,QAAQ,CACXp5B,WAAYw+B,EACZhuB,OAAQA,EACR+Q,cAAuBz3B,IAAby3B,EAAyBA,EAAW,IAC9CqY,OAAQpqC,IAEZ,CAEA,IAAAsoD,GAjIA,cAA0BhqD,EAIxB,WAAA1K,CAAY4K,GACVzF,QAKAjF,KAAK0H,GAKL1H,KAAKiH,KAKLjH,KAAK2H,GAED+C,GAAWA,EAAQtE,cACrBpG,KAAKoG,YAAcsE,EAAQtE,aAO7BpG,KAAK++C,KAAO,KAEZ/+C,KAAKy0D,WAAU,EAChB,CAQD,SAAAC,GACE,OAA+B10D,KAAKmJ,IAAIkrD,GACzC,CAOD,MAAAjU,GACE,OAAOpgD,KAAK++C,IACb,CAQD,WAAA34C,CAAYuuD,GACV,OAAO,CACR,CAQD,SAAAF,CAAUG,GACR50D,KAAK8J,IAAIuqD,GAA4BO,EACtC,CAQD,MAAA9X,CAAOlS,GACL5qC,KAAK++C,KAAOnU,CACb,GC3DH,IAAAiqB,GA9CA,cAA8BC,GAI5B,WAAAh1D,CAAY4K,GACVzF,QAEAyF,EAAUA,GAAoB,GAM9B1K,KAAK+0D,OAASrqD,EAAQgD,MAAQhD,EAAQgD,MAAQ,EAM9C1N,KAAKyyD,eAAiCjsD,IAArBkE,EAAQuzB,SAAyBvzB,EAAQuzB,SAAW,GACtE,CAQD,WAAA73B,CAAYuuD,GACV,IAAIK,GAAY,EAChB,GAAIL,EAAgB50D,MAAQ+oD,GAAoBG,SAAU,CACxD,MAAMgM,EACJN,EACR,cACY/pB,EAAM+pB,EAAgB/pB,IACtB1d,EAASynC,EAAgBx9C,WACzBzJ,EAAQunD,EAAaC,UAAYl1D,KAAK+0D,OAAS/0D,KAAK+0D,OAE1DR,GADa3pB,EAAI8S,UACChwC,EAAOwf,EAAQltB,KAAKyyD,WACtCwC,EAAa70D,iBACb40D,GAAY,CACb,CACD,OAAQA,CACT,GCsII,SAASG,GAAS1F,GACvB,MAAMtuD,EAASsuD,EAActuD,OAC7B,IAAI6qD,EAAU,EACVC,EAAU,EACd,IAAK,IAAIrqD,EAAI,EAAGA,EAAIT,EAAQS,IAC1BoqD,GAAWyD,EAAc7tD,GAAGoqD,QAC5BC,GAAWwD,EAAc7tD,GAAGqqD,QAE9B,MAAO,CAACD,QAASA,EAAU7qD,EAAQ8qD,QAASA,EAAU9qD,EACxD,CAEA,IAAAi0D,GAjKA,cAAiCN,GAI/B,WAAAh1D,CAAY4K,GAGVzF,MAFAyF,EAAUA,GAAoB,IAM1BA,EAAQ2qD,kBACVr1D,KAAKq1D,gBAAkB3qD,EAAQ2qD,iBAG7B3qD,EAAQ4qD,kBACVt1D,KAAKs1D,gBAAkB5qD,EAAQ4qD,iBAG7B5qD,EAAQ6qD,kBACVv1D,KAAKu1D,gBAAkB7qD,EAAQ6qD,iBAG7B7qD,EAAQ8qD,gBACVx1D,KAAKw1D,cAAgB9qD,EAAQ8qD,eAG3B9qD,EAAQ+qD,WACVz1D,KAAKy1D,SAAW/qD,EAAQ+qD,UAO1Bz1D,KAAK01D,wBAAyB,EAM9B11D,KAAK21D,eAAiB,EACvB,CAQD,eAAAC,GACE,OAAO51D,KAAK21D,eAAex0D,MAC5B,CAQD,eAAAk0D,CAAgBV,GACd,OAAO,CACR,CAOD,eAAAW,CAAgBX,GAAmB,CAUnC,WAAAvuD,CAAYuuD,GACV,IAAKA,EAAgBpM,cACnB,OAAO,EAGT,IAAIyM,GAAY,EAEhB,GADAh1D,KAAK61D,uBAAuBlB,GACxB30D,KAAK01D,wBACP,GAAIf,EAAgB50D,MAAQ+oD,GAAoBI,YAC9ClpD,KAAKs1D,gBAAgBX,GAErBA,EAAgBpM,cAAcnoD,sBACzB,GAAIu0D,EAAgB50D,MAAQ+oD,GAAoBO,UAAW,CAChE,MAAMyM,EAAY91D,KAAKw1D,cAAcb,GACrC30D,KAAK01D,uBACHI,GAAa91D,KAAK21D,eAAex0D,OAAS,CAC7C,OAED,GAAIwzD,EAAgB50D,MAAQ+oD,GAAoBM,YAAa,CAC3D,MAAM2M,EAAU/1D,KAAKq1D,gBAAgBV,GACrC30D,KAAK01D,uBAAyBK,EAC9Bf,EAAYh1D,KAAKy1D,SAASM,EAC3B,MAAUpB,EAAgB50D,MAAQ+oD,GAAoBK,aACrDnpD,KAAKu1D,gBAAgBZ,GAGzB,OAAQK,CACT,CAOD,eAAAO,CAAgBZ,GAAmB,CAQnC,aAAAa,CAAcb,GACZ,OAAO,CACR,CAQD,QAAAc,CAASM,GACP,OAAOA,CACR,CAMD,sBAAAF,CAAuBlB,GACjBA,EAAgBlM,iBAClBzoD,KAAK21D,eAAiBhB,EAAgBlM,eAEzC,GCvKI,SAASuN,GAAIjgB,GAClB,MAAMkgB,EAAajyD,UAKnB,OAAO,SAAU6B,GACf,IAAIqwD,GAAO,EACX,IAAK,IAAIt0D,EAAI,EAAGuE,EAAK8vD,EAAW90D,OAAQS,EAAIuE,IAC1C+vD,EAAOA,GAAQD,EAAWr0D,GAAGiE,GACxBqwD,KAF2Ct0D,GAMlD,OAAOs0D,CACX,CACA,CAUO,MAAMC,GAAa,SAAUxB,GAClC,MAAMpM,EACJoM,EACJ,cACE,OACEpM,EAAc6N,UACZ7N,EAAc8N,SAAW9N,EAAc+N,WACxC/N,EAAc2M,QAEnB,EAUaqB,GAAmB,SAAU5B,GACxC,MAAMpM,EACJoM,EACJ,cACE,OACEpM,EAAc6N,UACZ7N,EAAc8N,SAAW9N,EAAc+N,UACzC/N,EAAc2M,QAElB,EAUasB,GAAQ,SAAU3wD,GAC7B,MAAM4wD,EAAgB5wD,EAAM+kC,IAAI8rB,mBAC1BC,EAAgB9wD,EAAM+kC,IAAI+gB,mBAAmBgL,cACnD,OAAOF,EAAc3D,SAAS6D,EAChC,EAQaC,GAAoB,SAAU/wD,GACzC,OAAOA,EAAM+kC,IAAI8rB,mBAAmBG,aAAa,aAC7CL,GAAM3wD,EAEZ,EASaixD,GAAS3zD,EAsBT4zD,GAAoB,SAAUpC,GACzC,MAAMpM,EACJoM,EACJ,cACE,OAA+B,GAAxBpM,EAAcgD,UAAiBl9C,IAAUC,IAAOi6C,EAAc+N,QACvE,EASaU,GAAQ5zD,EAqBR6zD,GAAc,SAAUtC,GACnC,OAAOA,EAAgB50D,MAAQ+oD,GAAoBC,WACrD,EAqBamO,GAAiB,SAAUvC,GACtC,MAAMpM,EACJoM,EACJ,cACE,OACGpM,EAAc6N,UACb7N,EAAc8N,SAAW9N,EAAc+N,WACxC/N,EAAc2M,QAEnB,EA8BaiC,GAAsB,SAAUxC,GAC3C,MAAMpM,EACJoM,EACJ,cACE,OAAOrmD,GAAMi6C,EAAc8N,QAAU9N,EAAc+N,OACrD,EAUac,GAAe,SAAUzC,GACpC,MAAMpM,EACJoM,EACJ,cACE,OACGpM,EAAc6N,UACb7N,EAAc8N,SAAW9N,EAAc+N,UACzC/N,EAAc2M,QAElB,EAWamC,GAAoB,SAAU1C,GACzC,MAAMpM,EACJoM,EACJ,cACQ2C,EAAkC/O,EAAoB,OAAE+O,QAC9D,MACc,UAAZA,GACY,WAAZA,GACY,aAAZA,IAIC/O,EAAcpoD,OAAOo3D,iBAE1B,EASaC,GAAY,SAAU7C,GACjC,MAAM5J,EAAmE,EAEvExC,cAMF,OALAv0C,QACmBxN,IAAjBukD,EACA,uDAGiC,SAA5BA,EAAa0M,WACtB,EAiDaC,GAAgB,SAAU/C,GACrC,MAAM5J,EAAmE,EAEvExC,cAKF,OAJAv0C,QACmBxN,IAAjBukD,EACA,uDAEKA,EAAa4M,WAAqC,IAAxB5M,EAAaQ,MAChD,ECvKA,IAAAqM,GAzJA,cAAsBC,GAIpB,WAAA/3D,CAAY4K,GACVzF,MAAM,CACJwwD,SAAUryD,IAGZsH,EAAUA,GAAoB,GAM9B1K,KAAK83D,SAAWptD,EAAQqtD,QAKxB/3D,KAAKg4D,aAAe,KAKpBh4D,KAAKi4D,mBAKLj4D,KAAKk4D,UAAW,EAEhB,MAAMC,EAAYztD,EAAQytD,UACtBztD,EAAQytD,UACRnC,GAAIkB,GAAgBQ,IAMxB13D,KAAKo4D,WAAa1tD,EAAQ2tD,YACtBrC,GAAIY,GAAmBuB,GACvBA,EAMJn4D,KAAKs4D,YAAa,CACnB,CAMD,eAAAhD,CAAgBX,GACd,MAAM/pB,EAAM+pB,EAAgB/pB,IACvB5qC,KAAKk4D,WACRl4D,KAAKk4D,UAAW,EAChBttB,EAAI8S,UAAU9B,oBAEhB,MAAM+Z,EAAiB31D,KAAK21D,eACtBR,EAAWvqB,EAAIge,cAAc2P,GAAqB5C,IACxD,GAAIA,EAAex0D,QAAUnB,KAAKi4D,oBAIhC,GAHIj4D,KAAK83D,UACP93D,KAAK83D,SAASl6B,OAAOu3B,EAAS,GAAIA,EAAS,IAEzCn1D,KAAKg4D,aAAc,CACrB,MAAMtqD,EAAQ,CACZ1N,KAAKg4D,aAAa,GAAK7C,EAAS,GAChCA,EAAS,GAAKn1D,KAAKg4D,aAAa,IAG5Bza,EADMoX,EAAgB/pB,IACX8S,UACjB8a,GAAgB9qD,EAAO6vC,EAAK/hB,iBAC5Boc,GAAiBlqC,EAAO6vC,EAAK1H,eAC7B0H,EAAKxC,qBAAqBrtC,EAC3B,OACQ1N,KAAK83D,UAGd93D,KAAK83D,SAAS/1D,QAEhB/B,KAAKg4D,aAAe7C,EACpBn1D,KAAKi4D,mBAAqBtC,EAAex0D,OACzCwzD,EAAgBpM,cAAcnoD,gBAC/B,CAOD,aAAAo1D,CAAcb,GACZ,MAAM/pB,EAAM+pB,EAAgB/pB,IACtB2S,EAAO3S,EAAI8S,UACjB,GAAmC,IAA/B19C,KAAK21D,eAAex0D,OAAc,CACpC,IAAKnB,KAAKs4D,YAAct4D,KAAK83D,UAAY93D,KAAK83D,SAAS91D,MAAO,CAC5D,MAAMslB,EAAWtnB,KAAK83D,SAASjwC,cACzBtQ,EAAQvX,KAAK83D,SAAS55B,WACtBzhB,EAAS8gC,EAAKjI,oBACdmjB,EAAW7tB,EAAI8tB,+BAA+Bj8C,GAC9C9C,EAAOixB,EAAI+tB,+BAA+B,CAC9CF,EAAS,GAAKnxC,EAAWtb,KAAKwL,IAAID,GAClCkhD,EAAS,GAAKnxC,EAAWtb,KAAKyL,IAAIF,KAEpCgmC,EAAKpH,gBAAgB,CACnB15B,OAAQ8gC,EAAKhD,qBAAqB5gC,GAClCskB,SAAU,IACVqY,OAAQpqC,IAEX,CAKD,OAJIlM,KAAKk4D,WACPl4D,KAAKk4D,UAAW,EAChB3a,EAAK1B,mBAEA,CACR,CAOD,OANI77C,KAAK83D,UAGP93D,KAAK83D,SAAS/1D,QAEhB/B,KAAKg4D,aAAe,MACb,CACR,CAOD,eAAA3C,CAAgBV,GACd,GAAI30D,KAAK21D,eAAex0D,OAAS,GAAKnB,KAAKo4D,WAAWzD,GAAkB,CACtE,MACMpX,EADMoX,EAAgB/pB,IACX8S,UAYjB,OAXA19C,KAAKg4D,aAAe,KAEhBza,EAAKtH,gBACPsH,EAAK5G,mBAEH32C,KAAK83D,UACP93D,KAAK83D,SAAS/1D,QAIhB/B,KAAKs4D,WAAat4D,KAAK21D,eAAex0D,OAAS,GACxC,CACR,CACD,OAAO,CACR,GC7DH,IAAAy3D,GA7FA,cAAyBf,GAIvB,WAAA/3D,CAAY4K,GACVA,EAAUA,GAAoB,GAE9BzF,MAAM,CACJwwD,SAAUryD,IAOZpD,KAAKo4D,WAAa1tD,EAAQytD,UAAYztD,EAAQytD,UAAY5B,GAM1Dv2D,KAAK64D,gBAAaryD,EAMlBxG,KAAKyyD,eAAiCjsD,IAArBkE,EAAQuzB,SAAyBvzB,EAAQuzB,SAAW,GACtE,CAMD,eAAAq3B,CAAgBX,GACd,IAAK6C,GAAU7C,GACb,OAGF,MAAM/pB,EAAM+pB,EAAgB/pB,IACtB2S,EAAO3S,EAAI8S,UACjB,GAAIH,EAAKtF,iBAAiBt7B,WAAayM,GACrC,OAEF,MAAM3V,EAAOm3B,EAAIl3B,UACXoH,EAAS65C,EAAgBtX,MACzBjM,EAAQplC,KAAKmc,MAAM1U,EAAK,GAAK,EAAIqH,EAAO,GAAIA,EAAO,GAAKrH,EAAK,GAAK,GACxE,QAAwBjN,IAApBxG,KAAK64D,WAA0B,CACjC,MAAMnrD,EAAQ0jC,EAAQpxC,KAAK64D,WAC3Btb,EAAKlC,wBAAwB3tC,EAC9B,CACD1N,KAAK64D,WAAaznB,CACnB,CAOD,aAAAokB,CAAcb,GACZ,IAAK6C,GAAU7C,GACb,OAAO,EAMT,OAHYA,EAAgB/pB,IACX8S,UACZ7B,eAAe77C,KAAKyyD,YAClB,CACR,CAOD,eAAA4C,CAAgBV,GACd,IAAK6C,GAAU7C,GACb,OAAO,EAGT,GACEoC,GAAkBpC,IAClB30D,KAAKo4D,WAAWzD,GAChB,CAIA,OAHYA,EAAgB/pB,IACxB8S,UAAU9B,mBACd57C,KAAK64D,gBAAaryD,GACX,CACR,CACD,OAAO,CACR,GCWH,IAAAsyD,GA5HA,cAAwB9zD,EAItB,WAAAlF,CAAYstC,GACVnoC,QAMAjF,KAAK+4D,UAAY,KAMjB/4D,KAAKimD,SAAWn2C,SAASC,cAAc,OACvC/P,KAAKimD,SAAS31C,MAAM0oB,SAAW,WAC/Bh5B,KAAKimD,SAAS31C,MAAMm/C,cAAgB,OACpCzvD,KAAKimD,SAAS7Y,UAAY,UAAYA,EAMtCptC,KAAK++C,KAAO,KAMZ/+C,KAAKg5D,YAAc,KAMnBh5D,KAAKi5D,UAAY,IAClB,CAKD,eAAAx4D,GACET,KAAK88C,OAAO,KACb,CAKD,OAAAoc,GACE,MAAMC,EAAan5D,KAAKg5D,YAClBI,EAAWp5D,KAAKi5D,UAChBI,EAAK,KACL/oD,EAAQtQ,KAAKimD,SAAS31C,MAC5BA,EAAM+zC,KAAOr4C,KAAKwP,IAAI29C,EAAW,GAAIC,EAAS,IAAMC,EACpD/oD,EAAMgpD,IAAMttD,KAAKwP,IAAI29C,EAAW,GAAIC,EAAS,IAAMC,EACnD/oD,EAAMd,MAAQxD,KAAKmP,IAAIi+C,EAAS,GAAKD,EAAW,IAAME,EACtD/oD,EAAMb,OAASzD,KAAKmP,IAAIi+C,EAAS,GAAKD,EAAW,IAAME,CACxD,CAKD,MAAAvc,CAAOlS,GACL,GAAI5qC,KAAK++C,KAAM,CACb/+C,KAAK++C,KAAKwa,sBAAsBhoD,YAAYvR,KAAKimD,UACjD,MAAM31C,EAAQtQ,KAAKimD,SAAS31C,MAC5BA,EAAM+zC,KAAO,UACb/zC,EAAMgpD,IAAM,UACZhpD,EAAMd,MAAQ,UACdc,EAAMb,OAAS,SAChB,CACDzP,KAAK++C,KAAOnU,EACR5qC,KAAK++C,MACP/+C,KAAK++C,KAAKwa,sBAAsBtnD,YAAYjS,KAAKimD,SAEpD,CAMD,SAAAuT,CAAUL,EAAYC,GACpBp5D,KAAKg5D,YAAcG,EACnBn5D,KAAKi5D,UAAYG,EACjBp5D,KAAKy5D,yBACLz5D,KAAKk5D,SACN,CAKD,sBAAAO,GACE,MAAMN,EAAan5D,KAAKg5D,YAClBI,EAAWp5D,KAAKi5D,UAOhB3/C,EANS,CACb6/C,EACA,CAACA,EAAW,GAAIC,EAAS,IACzBA,EACA,CAACA,EAAS,GAAID,EAAW,KAEAvuB,IACzB5qC,KAAK++C,KAAK4Z,+BACV34D,KAAK++C,MAGPzlC,EAAY,GAAKA,EAAY,GAAGxV,QAC3B9D,KAAK+4D,UAGR/4D,KAAK+4D,UAAU/oC,eAAe,CAAC1W,IAF/BtZ,KAAK+4D,UAAY,IAAIhjC,GAAQ,CAACzc,GAIjC,CAKD,WAAArE,GACE,OAAOjV,KAAK+4D,SACb,GC9FH,MAAMW,GAMM,WANNA,GAaK,UAbLA,GAoBI,SApBJA,GA2BO,YAQN,MAAMC,WAAqB5zD,EAMhC,WAAAjG,CAAYC,EAAMoX,EAAYw9C,GAC5B1vD,MAAMlF,GAQNC,KAAKmX,WAAaA,EAOlBnX,KAAK20D,gBAAkBA,CACxB,EAqLH,IAAAiF,GA5JA,cAAsB/B,GAIpB,WAAA/3D,CAAY4K,GACVzF,QAKAjF,KAAK0H,GAKL1H,KAAKiH,KAKLjH,KAAK2H,GAEL+C,EAAUA,GAAoB,GAM9B1K,KAAK65D,KAAO,IAAIC,GAAUpvD,EAAQ0iC,WAAa,cAM/CptC,KAAK+5D,cAA+BvzD,IAApBkE,EAAQsvD,QAAwBtvD,EAAQsvD,QAAU,GAE9DtvD,EAAQuvD,WACVj6D,KAAKi6D,SAAWvvD,EAAQuvD,UAO1Bj6D,KAAKg5D,YAAc,KAMnBh5D,KAAKo4D,WAAa1tD,EAAQytD,UAAYztD,EAAQytD,UAAYpB,GAM1D/2D,KAAKk6D,iBAAmBxvD,EAAQyvD,gBAC5BzvD,EAAQyvD,gBACRn6D,KAAKo6D,sBACV,CAWD,sBAAAA,CAAuBzF,EAAiBwE,EAAYC,GAClD,MAAM5pD,EAAQ4pD,EAAS,GAAKD,EAAW,GACjC1pD,EAAS2pD,EAAS,GAAKD,EAAW,GACxC,OAAO3pD,EAAQA,EAAQC,EAASA,GAAUzP,KAAK+5D,QAChD,CAOD,WAAA9kD,GACE,OAAOjV,KAAK65D,KAAK5kD,aAClB,CAMD,eAAAqgD,CAAgBX,GACd30D,KAAK65D,KAAKL,UAAUx5D,KAAKg5D,YAAarE,EAAgBtX,OAEtDr9C,KAAK4F,cACH,IAAI+zD,GACFD,GACA/E,EAAgBx9C,WAChBw9C,GAGL,CAOD,aAAAa,CAAcb,GACZ30D,KAAK65D,KAAK/c,OAAO,MAEjB,MAAMud,EAAcr6D,KAAKk6D,iBACvBvF,EACA30D,KAAKg5D,YACLrE,EAAgBtX,OAYlB,OAVIgd,GACFr6D,KAAKi6D,SAAStF,GAEhB30D,KAAK4F,cACH,IAAI+zD,GACFU,EAAcX,GAA0BA,GACxC/E,EAAgBx9C,WAChBw9C,KAGG,CACR,CAOD,eAAAU,CAAgBV,GACd,QAAI30D,KAAKo4D,WAAWzD,KAClB30D,KAAKg5D,YAAcrE,EAAgBtX,MACnCr9C,KAAK65D,KAAK/c,OAAO6X,EAAgB/pB,KACjC5qC,KAAK65D,KAAKL,UAAUx5D,KAAKg5D,YAAah5D,KAAKg5D,aAC3Ch5D,KAAK4F,cACH,IAAI+zD,GACFD,GACA/E,EAAgBx9C,WAChBw9C,KAGG,EAGV,CAMD,QAAAsF,CAASp0D,GAAS,GC3LpB,IAAAy0D,GApDA,cAAuBC,GAIrB,WAAAz6D,CAAY4K,GAKVzF,MAAM,CACJkzD,WALFztD,EAAUA,GAAoB,IAEJytD,UAAYztD,EAAQytD,UAAYf,GAIxDhqB,UAAW1iC,EAAQ0iC,WAAa,cAChC4sB,QAAStvD,EAAQsvD,UAOnBh6D,KAAKyyD,eAAiCjsD,IAArBkE,EAAQuzB,SAAyBvzB,EAAQuzB,SAAW,IAMrEj+B,KAAKw6D,UAAuBh0D,IAAhBkE,EAAQ+vD,KAAoB/vD,EAAQ+vD,GACjD,CAMD,QAAAR,CAASp0D,GACP,MACM03C,EADMv9C,KAAKogD,SAC8C1C,UAC/D,IAAI/oC,EAAW3U,KAAKiV,cAEpB,GAAIjV,KAAKw6D,KAAM,CACb,MAAMrgB,EAAgBoD,EAAKzD,yBAAyBnlC,GAC9C+H,EAAa6gC,EAAK1E,+BAA+BsB,GACjDp1B,EAASw4B,EAAK/hB,gBAAkB9e,EACtC/H,EAAWA,EAASG,QACpBH,EAAS+C,MAAMqN,EAASA,EACzB,CAEDw4B,EAAK1D,YAAYllC,EAAU,CACzBspB,SAAUj+B,KAAKyyD,UACfnc,OAAQpqC,IAEX,GCxEYwuD,GACP,YADOA,GAET,UAFSA,GAGN,aAHMA,GAIP,YC+GR,IAAAC,GAzFA,cAA0B7F,GAIxB,WAAAh1D,CAAY4K,GACVzF,QAEAyF,EAAUA,GAAW,GAOrB1K,KAAK46D,kBAAoB,SAAUjG,GACjC,OACEuC,GAAevC,IAAoB0C,GAAkB1C,EAE7D,EAMI30D,KAAKo4D,gBACmB5xD,IAAtBkE,EAAQytD,UACJztD,EAAQytD,UACRn4D,KAAK46D,kBAMX56D,KAAKyyD,eAAiCjsD,IAArBkE,EAAQuzB,SAAyBvzB,EAAQuzB,SAAW,IAMrEj+B,KAAK66D,iBACoBr0D,IAAvBkE,EAAQowD,WAA2BpwD,EAAQowD,WAAa,GAC3D,CASD,WAAA10D,CAAYuuD,GACV,IAAIK,GAAY,EAChB,GAAIL,EAAgB50D,MAAQ+G,EAAmB,CAC7C,MAAMi0D,EACJpG,EACR,cACYptD,EAAMwzD,EAASxzD,IACrB,GACEvH,KAAKo4D,WAAWzD,KACfptD,GAAOmzD,IACNnzD,GAAOmzD,IACPnzD,GAAOmzD,IACPnzD,GAAOmzD,IACT,CACA,MACMnd,EADMoX,EAAgB/pB,IACX8S,UACXsd,EAAgBzd,EAAK/hB,gBAAkBx7B,KAAK66D,YAClD,IAAI78C,EAAS,EACXC,EAAS,EACP1W,GAAOmzD,GACTz8C,GAAU+8C,EACDzzD,GAAOmzD,GAChB18C,GAAUg9C,EACDzzD,GAAOmzD,GAChB18C,EAASg9C,EAET/8C,EAAS+8C,EAEX,MAAMttD,EAAQ,CAACsQ,EAAQC,GACvB25B,GAAiBlqC,EAAO6vC,EAAK1H,eAC7Bye,GAAI/W,EAAM7vC,EAAO1N,KAAKyyD,WACtBsI,EAAS36D,iBACT40D,GAAY,CACb,CACF,CACD,OAAQA,CACT,GCvBH,IAAAiG,GAjEA,cAA2BnG,GAIzB,WAAAh1D,CAAY4K,GACVzF,QAEAyF,EAAUA,GAAoB,GAM9B1K,KAAKo4D,WAAa1tD,EAAQytD,UACtBztD,EAAQytD,UACR,SAAUxD,GACR,OACGwC,GAAoBxC,IACrB0C,GAAkB1C,EAE9B,EAMI30D,KAAK+0D,OAASrqD,EAAQgD,MAAQhD,EAAQgD,MAAQ,EAM9C1N,KAAKyyD,eAAiCjsD,IAArBkE,EAAQuzB,SAAyBvzB,EAAQuzB,SAAW,GACtE,CASD,WAAA73B,CAAYuuD,GACV,IAAIK,GAAY,EAChB,GACEL,EAAgB50D,MAAQ+G,GACxB6tD,EAAgB50D,MAAQ+G,EACxB,CACA,MAAMi0D,EACJpG,EACR,cACYptD,EAAMwzD,EAASxzD,IACrB,GAAIvH,KAAKo4D,WAAWzD,KAA6B,MAARptD,GAAuB,MAARA,GAAc,CACpE,MAAMqjC,EAAM+pB,EAAgB/pB,IACtBl9B,EAAgB,MAARnG,EAAcvH,KAAK+0D,QAAU/0D,KAAK+0D,OAEhDR,GADa3pB,EAAI8S,UACChwC,OAAOlH,EAAWxG,KAAKyyD,WACzCsI,EAAS36D,iBACT40D,GAAY,CACb,CACF,CACD,OAAQA,CACT,GC2MH,IAAAkG,GApQA,cAA6BpG,GAI3B,WAAAh1D,CAAY4K,GAGVzF,MAFAyF,EAAUA,GAAoB,IAU9B1K,KAAKm7D,YAAc,EAMnBn7D,KAAKo7D,WAAa,EAMlBp7D,KAAKkzB,eAAiC1sB,IAArBkE,EAAQomB,SAAyBpmB,EAAQomB,SAAW,EAMrE9wB,KAAKyyD,eAAiCjsD,IAArBkE,EAAQuzB,SAAyBvzB,EAAQuzB,SAAW,IAMrEj+B,KAAKq7D,cAA+B70D,IAApBkE,EAAQ4wD,QAAwB5wD,EAAQ4wD,QAAU,GAMlEt7D,KAAKu7D,gBACmB/0D,IAAtBkE,EAAQ8wD,WAA0B9wD,EAAQ8wD,UAM5Cx7D,KAAKy7D,0BAC6Bj1D,IAAhCkE,EAAQynC,qBACJznC,EAAQynC,oBAGd,MAAMgmB,EAAYztD,EAAQytD,UAAYztD,EAAQytD,UAAYrB,GAM1D92D,KAAKo4D,WAAa1tD,EAAQ2tD,YACtBrC,GAAIY,GAAmBuB,GACvBA,EAMJn4D,KAAK07D,YAAc,KAMnB17D,KAAK27D,gBAAan1D,EAMlBxG,KAAK47D,WAML57D,KAAK67D,WAAQr1D,EAQbxG,KAAK87D,kBAAoB,IAMzB97D,KAAK+7D,mBAOL/7D,KAAKg8D,cAAgB,GACtB,CAKD,eAAAC,GACEj8D,KAAK+7D,wBAAqBv1D,EAC1B,MAAMokC,EAAM5qC,KAAKogD,SACjB,IAAKxV,EACH,OAEWA,EAAI8S,UACZ7B,oBACHr1C,EACAxG,KAAKo7D,WAAcp7D,KAAKo7D,WAAa,EAAI,GAAK,EAAK,EACnDp7D,KAAK07D,YAER,CAQD,WAAAt1D,CAAYuuD,GACV,IAAK30D,KAAKo4D,WAAWzD,GACnB,OAAO,EAGT,GADaA,EAAgB50D,OAChB+G,EACX,OAAO,EAGT,MAAM8jC,EAAM+pB,EAAgB/pB,IACtBsxB,EACJvH,EACN,cASI,IAAIjnD,EAWJ,GAnBAwuD,EAAW97D,iBAEPJ,KAAKu7D,aACPv7D,KAAK07D,YAAc/G,EAAgBx9C,YAMjCw9C,EAAgB50D,MAAQ+G,IAC1B4G,EAAQwuD,EAAWj+C,OACfhQ,IAAWiuD,EAAWC,YAAcC,WAAWC,kBACjD3uD,GAASa,IAEP2tD,EAAWC,YAAcC,WAAWE,iBACtC5uD,GAAS,KAIC,IAAVA,EACF,OAAO,EAET1N,KAAKo7D,WAAa1tD,EAElB,MAAMowB,EAAMD,KAAKC,WAEOt3B,IAApBxG,KAAK27D,aACP37D,KAAK27D,WAAa79B,KAGf99B,KAAK67D,OAAS/9B,EAAM99B,KAAK27D,WAAa37D,KAAK87D,qBAC9C97D,KAAK67D,MAAQ7vD,KAAKmP,IAAIzN,GAAS,EAAI,WAAa,SAGlD,MAAM6vC,EAAO3S,EAAI8S,UACjB,GACiB,aAAf19C,KAAK67D,QACHte,EAAKrF,2BAA4Bl4C,KAAKy7D,qBAgBxC,OAdIz7D,KAAK+7D,mBACP7Q,aAAalrD,KAAK+7D,qBAEdxe,EAAKtH,gBACPsH,EAAK5G,mBAEP4G,EAAK3B,oBAEP57C,KAAK+7D,mBAAqBvqB,WACxBxxC,KAAKi8D,gBAAgB/0D,KAAKlH,MAC1BA,KAAKq7D,UAEP9d,EAAKpC,YAAYztC,EAAQ1N,KAAKg8D,cAAeh8D,KAAK07D,aAClD17D,KAAK27D,WAAa79B,GACX,EAGT99B,KAAKm7D,aAAeztD,EAEpB,MAAM6uD,EAAWvwD,KAAKyP,IAAIzb,KAAKq7D,UAAYv9B,EAAM99B,KAAK27D,YAAa,GAQnE,OANAzQ,aAAalrD,KAAK47D,YAClB57D,KAAK47D,WAAapqB,WAChBxxC,KAAKw8D,iBAAiBt1D,KAAKlH,KAAM4qC,GACjC2xB,IAGK,CACR,CAMD,gBAAAC,CAAiB5xB,GACf,MAAM2S,EAAO3S,EAAI8S,UACbH,EAAKtH,gBACPsH,EAAK5G,mBAEP,IAAIjpC,GACDkW,GACC5jB,KAAKm7D,aACJn7D,KAAKkzB,UAAYlzB,KAAKg8D,cACvBh8D,KAAKkzB,UAAYlzB,KAAKg8D,eACpBh8D,KAAKg8D,eACPze,EAAKrF,0BAA4Bl4C,KAAKy7D,wBAExC/tD,EAAQA,EAASA,EAAQ,EAAI,GAAK,EAAK,GAEzC6mD,GAAYhX,EAAM7vC,EAAO1N,KAAK07D,YAAa17D,KAAKyyD,WAEhDzyD,KAAK67D,WAAQr1D,EACbxG,KAAKm7D,YAAc,EACnBn7D,KAAK07D,YAAc,KACnB17D,KAAK27D,gBAAan1D,EAClBxG,KAAK47D,gBAAap1D,CACnB,CAQD,cAAAi2D,CAAejB,GACbx7D,KAAKu7D,WAAaC,EACbA,IACHx7D,KAAK07D,YAAc,KAEtB,GCxIH,IAAAgB,GAxIA,cAA0B7E,GAIxB,WAAA/3D,CAAY4K,GAGV,MAAMiyD,EAFNjyD,EAAUA,GAAoB,GAMzBiyD,EAAelH,WAClBkH,EAAelH,SAAWryD,GAG5B6B,MAAM03D,GAMN38D,KAAK48D,QAAU,KAMf58D,KAAK64D,gBAAaryD,EAMlBxG,KAAK68D,WAAY,EAMjB78D,KAAK88D,eAAiB,EAMtB98D,KAAK+8D,gBAAmCv2D,IAAtBkE,EAAQsyD,UAA0BtyD,EAAQsyD,UAAY,GAMxEh9D,KAAKyyD,eAAiCjsD,IAArBkE,EAAQuzB,SAAyBvzB,EAAQuzB,SAAW,GACtE,CAMD,eAAAq3B,CAAgBX,GACd,IAAIsI,EAAgB,EAEpB,MAAMC,EAASl9D,KAAK21D,eAAe,GAC7BwH,EAASn9D,KAAK21D,eAAe,GAG7Bp+C,EAAQvL,KAAKmc,MACjBg1C,EAAOlR,QAAUiR,EAAOjR,QACxBkR,EAAOnR,QAAUkR,EAAOlR,SAG1B,QAAwBxlD,IAApBxG,KAAK64D,WAA0B,CACjC,MAAMnrD,EAAQ6J,EAAQvX,KAAK64D,WAC3B74D,KAAK88D,gBAAkBpvD,GAClB1N,KAAK68D,WAAa7wD,KAAKmP,IAAInb,KAAK88D,gBAAkB98D,KAAK+8D,aAC1D/8D,KAAK68D,WAAY,GAEnBI,EAAgBvvD,CACjB,CACD1N,KAAK64D,WAAathD,EAElB,MAAMqzB,EAAM+pB,EAAgB/pB,IACtB2S,EAAO3S,EAAI8S,UACbH,EAAKtF,iBAAiBt7B,WAAayM,KAOvCppB,KAAK48D,QAAUhyB,EAAI+tB,+BACjB/tB,EAAIge,cAAc2P,GAAqBv4D,KAAK21D,kBAI1C31D,KAAK68D,YACPjyB,EAAIiS,SACJU,EAAKlC,uBAAuB4hB,EAAej9D,KAAK48D,UAEnD,CAOD,aAAApH,CAAcb,GACZ,GAAI30D,KAAK21D,eAAex0D,OAAS,EAAG,CAIlC,OAHYwzD,EAAgB/pB,IACX8S,UACZ7B,eAAe77C,KAAKyyD,YAClB,CACR,CACD,OAAO,CACR,CAOD,eAAA4C,CAAgBV,GACd,GAAI30D,KAAK21D,eAAex0D,QAAU,EAAG,CACnC,MAAMypC,EAAM+pB,EAAgB/pB,IAQ5B,OAPA5qC,KAAK48D,QAAU,KACf58D,KAAK64D,gBAAaryD,EAClBxG,KAAK68D,WAAY,EACjB78D,KAAK88D,eAAiB,EACjB98D,KAAK01D,wBACR9qB,EAAI8S,UAAU9B,oBAET,CACR,CACD,OAAO,CACR,GCrBH,IAAAwhB,GAnHA,cAAwBvF,GAItB,WAAA/3D,CAAY4K,GAGV,MAAMiyD,EAFNjyD,EAAUA,GAAoB,GAMzBiyD,EAAelH,WAClBkH,EAAelH,SAAWryD,GAG5B6B,MAAM03D,GAMN38D,KAAK48D,QAAU,KAMf58D,KAAKyyD,eAAiCjsD,IAArBkE,EAAQuzB,SAAyBvzB,EAAQuzB,SAAW,IAMrEj+B,KAAKq9D,mBAAgB72D,EAMrBxG,KAAKs9D,gBAAkB,CACxB,CAMD,eAAAhI,CAAgBX,GACd,IAAI4I,EAAa,EAEjB,MAAML,EAASl9D,KAAK21D,eAAe,GAC7BwH,EAASn9D,KAAK21D,eAAe,GAC7B99C,EAAKqlD,EAAOlR,QAAUmR,EAAOnR,QAC7Bl0C,EAAKolD,EAAOjR,QAAUkR,EAAOlR,QAG7B3kC,EAAWtb,KAAKka,KAAKrO,EAAKA,EAAKC,EAAKA,QAEftR,IAAvBxG,KAAKq9D,gBACPE,EAAav9D,KAAKq9D,cAAgB/1C,GAEpCtnB,KAAKq9D,cAAgB/1C,EAErB,MAAMsjB,EAAM+pB,EAAgB/pB,IACtB2S,EAAO3S,EAAI8S,UAEC,GAAd6f,IACFv9D,KAAKs9D,gBAAkBC,GAIzBv9D,KAAK48D,QAAUhyB,EAAI+tB,+BACjB/tB,EAAIge,cAAc2P,GAAqBv4D,KAAK21D,kBAI9C/qB,EAAIiS,SACJU,EAAKtC,yBAAyBsiB,EAAYv9D,KAAK48D,QAChD,CAOD,aAAApH,CAAcb,GACZ,GAAI30D,KAAK21D,eAAex0D,OAAS,EAAG,CAClC,MACMo8C,EADMoX,EAAgB/pB,IACX8S,UACXh8C,EAAY1B,KAAKs9D,gBAAkB,EAAI,GAAK,EAElD,OADA/f,EAAK1B,eAAe77C,KAAKyyD,UAAW/wD,IAC7B,CACR,CACD,OAAO,CACR,CAOD,eAAA2zD,CAAgBV,GACd,GAAI30D,KAAK21D,eAAex0D,QAAU,EAAG,CACnC,MAAMypC,EAAM+pB,EAAgB/pB,IAO5B,OANA5qC,KAAK48D,QAAU,KACf58D,KAAKq9D,mBAAgB72D,EACrBxG,KAAKs9D,gBAAkB,EAClBt9D,KAAK01D,wBACR9qB,EAAI8S,UAAU9B,oBAET,CACR,CACD,OAAO,CACR,GCrEI,SAASgY,GAASlpD,GACvBA,EAAUA,GAAoB,GAG9B,MAAM8yD,EAAe,IAAIjzD,EAEnBwtD,EAAU,IAAI0F,IAAS,KAAO,IAAM,WAGTj3D,IAA/BkE,EAAQgzD,oBACJhzD,EAAQgzD,qBAGZF,EAAa73D,KAAK,IAAIg4D,UAIMn3D,IAA5BkE,EAAQkzD,iBAAgClzD,EAAQkzD,kBAEhDJ,EAAa73D,KACX,IAAIk4D,GAAgB,CAClBnwD,MAAOhD,EAAQozD,UACf7/B,SAAUvzB,EAAQqzD,sBAKYv3D,IAApBkE,EAAQszD,SAAwBtzD,EAAQszD,UAEtDR,EAAa73D,KACX,IAAIs4D,GAAQ,CACV5F,YAAa3tD,EAAQ2tD,YACrBN,QAASA,WAMWvxD,IAAxBkE,EAAQwzD,aAA4BxzD,EAAQwzD,cAE5CV,EAAa73D,KAAK,IAAIw4D,UAGgB33D,IAAtBkE,EAAQ0zD,WAA0B1zD,EAAQ0zD,YAE1DZ,EAAa73D,KACX,IAAI04D,GAAU,CACZpgC,SAAUvzB,EAAQqzD,sBAKcv3D,IAArBkE,EAAQ4zD,UAAyB5zD,EAAQ4zD,YAExDd,EAAa73D,KAAK,IAAI44D,IACtBf,EAAa73D,KACX,IAAI64D,GAAa,CACf9wD,MAAOhD,EAAQozD,UACf7/B,SAAUvzB,EAAQqzD,uBAMKv3D,IAA3BkE,EAAQ+zD,gBAA+B/zD,EAAQ+zD,iBAE/CjB,EAAa73D,KACX,IAAI+4D,GAAe,CACjBrG,YAAa3tD,EAAQ2tD,YACrBp6B,SAAUvzB,EAAQqzD,gBAexB,YAT4Bv3D,IAA1BkE,EAAQi0D,eAA8Bj0D,EAAQi0D,gBAE9CnB,EAAa73D,KACX,IAAIi5D,GAAS,CACX3gC,SAAUvzB,EAAQqzD,gBAKjBP,CACT,CCpHO,SAASqB,GAAQprD,GACtB,OAAOA,EAAK,GAAK,GAAKA,EAAK,GAAK,CAClC,CASO,SAASiE,GAAMjE,EAAMu8B,EAAOr2B,GAMjC,YALanT,IAATmT,IACFA,EAAO,CAAC,EAAG,IAEbA,EAAK,GAAMlG,EAAK,GAAKu8B,EAAQ,GAAO,EACpCr2B,EAAK,GAAMlG,EAAK,GAAKu8B,EAAQ,GAAO,EAC7Br2B,CACT,CAWO,SAASmlD,GAAOrrD,EAAMkG,GAC3B,OAAItX,MAAMC,QAAQmR,GACTA,QAEIjN,IAATmT,EACFA,EAAO,CAAClG,EAAMA,IAEdkG,EAAK,GAAKlG,EACVkG,EAAK,GAAKlG,GAELkG,EACT,CCuFA,SAASolD,GAAuBrxB,GAC1BA,aAAiBsxB,GACnBtxB,EAAM6Q,eAAe,MAGnB7Q,aAAiBsZ,IACnBtZ,EAAM4Z,YAAYp8C,QAAQ6zD,GAE9B,CAMA,SAASE,GAAoBvxB,EAAO9C,GAClC,GAAI8C,aAAiBsxB,GACnBtxB,EAAM6Q,eAAe3T,QAGvB,GAAI8C,aAAiBsZ,GAAY,CAC/B,MAAMH,EAASnZ,EAAM4Z,YAAYl8C,WACjC,IAAK,IAAIxJ,EAAI,EAAGuE,EAAK0gD,EAAO1lD,OAAQS,EAAIuE,IAAMvE,EAC5Cq9D,GAAoBpY,EAAOjlD,GAAIgpC,EAElC,CACH,CAioDA,IAAAs0B,GA3kDA,cAAkB10D,EAIhB,WAAA1K,CAAY4K,GACVzF,QAEAyF,EAAUA,GAAW,GAKrB1K,KAAK0H,GAKL1H,KAAKiH,KAKLjH,KAAK2H,GAEL,MAAMw3D,EA49CV,SAA+Bz0D,GAI7B,IAAI00D,EAAsB,UACU54D,IAAhCkE,EAAQ00D,sBACVA,EACyC,iBAAhC10D,EAAQ00D,oBACXtvD,SAASggD,eAAeplD,EAAQ00D,qBAChC10D,EAAQ00D,qBAMhB,MAAMp2D,EAAS,CAAA,EAETq2D,EACJ30D,EAAQm8C,QACiD,mBAA/Bn8C,EAAc,OAAW,UACpBA,EAAc,OACzC,IAAIs8C,GAAW,CACbH,OAEIn8C,EACD,SAUX,IAAImpD,EAcA2J,EAeA8B,EArCJt2D,EAAOmjD,IAA0BkT,EAEjCr2D,EAAOmjD,IAAsBzhD,EAAQvK,OAErC6I,EAAOmjD,IACLzhD,EAAQ6yC,gBAAgBI,GAAOjzC,EAAQ6yC,KAAO,IAAII,QAI3Bn3C,IAArBkE,EAAQmpD,WACNxxD,MAAMC,QAAQoI,EAAQmpD,UACxBA,EAAW,IAAItpD,EAAWG,EAAQmpD,SAAS/vD,UAE3CkQ,GAC4D,mBAAhCtJ,EAAgB,SAAU,SACpD,+DAEFmpD,EAAWnpD,EAAQmpD,gBAMMrtD,IAAzBkE,EAAQ8yD,eACNn7D,MAAMC,QAAQoI,EAAQ8yD,cACxBA,EAAe,IAAIjzD,EAAWG,EAAQ8yD,aAAa15D,UAEnDkQ,GAEI,mBADwBtJ,EAAoB,aAAU,SAExD,mEAEF8yD,EAAe9yD,EAAQ8yD,oBAMFh3D,IAArBkE,EAAQ40D,SACNj9D,MAAMC,QAAQoI,EAAQ40D,UACxBA,EAAW,IAAI/0D,EAAWG,EAAQ40D,SAASx7D,UAE3CkQ,GAC4D,mBAAhCtJ,EAAgB,SAAU,SACpD,+DAEF40D,EAAW50D,EAAQ40D,UAGrBA,EAAW,IAAI/0D,EAGjB,MAAO,CACLspD,SAAUA,EACV2J,aAAcA,EACd4B,oBAAqBA,EACrBE,SAAUA,EACVt2D,OAAQA,EAEZ,CAljD4Bu2D,CAAsB70D,GAM9C1K,KAAKw/D,gBAMLx/D,KAAKy/D,SAAU,EAGfz/D,KAAK0/D,yBAA2B1/D,KAAK2/D,mBAAmBz4D,KAAKlH,MAM7DA,KAAK4/D,sBACyBp5D,IAA5BkE,EAAQm1D,gBAAgCn1D,EAAQm1D,gBAAkB,GAMpE7/D,KAAKo7B,iBACoB50B,IAAvBkE,EAAQwwB,WACJxwB,EAAQwwB,WACR3sB,GAMNvO,KAAK8/D,yBAML9/D,KAAK+/D,mBAKL//D,KAAKggE,gBAAkBhgE,KAAKggE,gBAAgB94D,KAAKlH,MAMjDA,KAAKigE,4BjGvRA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GiG6RrBjgE,KAAKkgE,4BjG7RA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GiGmSrBlgE,KAAKmgE,YAAc,EAMnBngE,KAAKogE,YAAc,KAOnBpgE,KAAKqgE,gBAAkB,KAMvBrgE,KAAKsgE,yBAA2B,KAMhCtgE,KAAKugE,uBAAyB,KAM9BvgE,KAAKwgE,gCAAkC,KAMvCxgE,KAAKygE,UAAY3wD,SAASC,cAAc,OACxC/P,KAAKygE,UAAUrzB,UACb,eAAiB,iBAAkB/9B,OAAS,YAAc,IAC5DrP,KAAKygE,UAAUnwD,MAAM0oB,SAAW,WAChCh5B,KAAKygE,UAAUnwD,MAAMowD,SAAW,SAChC1gE,KAAKygE,UAAUnwD,MAAMd,MAAQ,OAC7BxP,KAAKygE,UAAUnwD,MAAMb,OAAS,OAM9BzP,KAAK2gE,kBAAoB7wD,SAASC,cAAc,OAChD/P,KAAK2gE,kBAAkBrwD,MAAM0oB,SAAW,WACxCh5B,KAAK2gE,kBAAkBrwD,MAAMw8B,OAAS,IACtC9sC,KAAK2gE,kBAAkBrwD,MAAMd,MAAQ,OACrCxP,KAAK2gE,kBAAkBrwD,MAAMb,OAAS,OACtCzP,KAAK2gE,kBAAkBrwD,MAAMm/C,cAAgB,OAC7CzvD,KAAK2gE,kBAAkBvzB,UAAY,sBACnCptC,KAAKygE,UAAUxuD,YAAYjS,KAAK2gE,mBAMhC3gE,KAAK4gE,2BAA6B9wD,SAASC,cAAc,OACzD/P,KAAK4gE,2BAA2BtwD,MAAM0oB,SAAW,WACjDh5B,KAAK4gE,2BAA2BtwD,MAAMw8B,OAAS,IAC/C9sC,KAAK4gE,2BAA2BtwD,MAAMd,MAAQ,OAC9CxP,KAAK4gE,2BAA2BtwD,MAAMb,OAAS,OAC/CzP,KAAK4gE,2BAA2BtwD,MAAMm/C,cAAgB,OACtDzvD,KAAK4gE,2BAA2BxzB,UAAY,gCAC5CptC,KAAKygE,UAAUxuD,YAAYjS,KAAK4gE,4BAMhC5gE,KAAK6gE,wBAA0B,KAM/B7gE,KAAKmqD,eAAiBz/C,EAAQo/C,cAM9B9pD,KAAK8gE,qBAAuB3B,EAAgBC,oBAM5Cp/D,KAAK+gE,yBAA2B,KAMhC/gE,KAAKghE,eAAiB,KAKtBhhE,KAAKihE,gBAAkB,IAAIC,gBAAe,IAAMlhE,KAAKmhE,eAMrDnhE,KAAK6zD,SAAWsL,EAAgBtL,UAAYuN,KAM5CphE,KAAKw9D,aACH2B,EAAgB3B,cAChB6D,GAAoB,CAClBhJ,aAAa,IAOjBr4D,KAAKshE,UAAYnC,EAAgBG,SAOjCt/D,KAAKuhE,gBAAkB,GAMvBvhE,KAAK08C,UAAY,KAMjB18C,KAAKwhE,qBAAuB,GAM5BxhE,KAAKyhE,WAAa,IAAIC,GACpB1hE,KAAKmvD,gBAAgBjoD,KAAKlH,MAC1BA,KAAK2hE,kBAAkBz6D,KAAKlH,OAG9BA,KAAK4J,kBACHuiD,GACAnsD,KAAK4hE,0BAEP5hE,KAAK4J,kBAAkBuiD,GAAkBnsD,KAAK6hE,oBAC9C7hE,KAAK4J,kBAAkBuiD,GAAkBnsD,KAAK8hE,oBAC9C9hE,KAAK4J,kBAAkBuiD,GAAoBnsD,KAAK+hE,sBAIhD/hE,KAAKkJ,cAAci2D,EAAgBn2D,QAEnC,MAAM4hC,EAAM5qC,MACR0K,EAAQ6yC,MAAU7yC,EAAQ6yC,gBAAgBI,IAC5CjzC,EAAQ6yC,KAAKzpC,MAAK,SAAUkuD,GAC1Bp3B,EAAIq3B,QAAQ,IAAItkB,GAAKqkB,GAC7B,IAGIhiE,KAAK6zD,SAASvuD,iBACZ6E,GAICtE,IACCA,EAAMyE,QAAQwyC,OAAO98C,KAAK,IAI9BA,KAAK6zD,SAASvuD,iBACZ6E,GAICtE,IACCA,EAAMyE,QAAQwyC,OAAO,KAAK,IAI9B98C,KAAKw9D,aAAal4D,iBAChB6E,GAICtE,IACCA,EAAMyE,QAAQwyC,OAAO98C,KAAK,IAI9BA,KAAKw9D,aAAal4D,iBAChB6E,GAICtE,IACCA,EAAMyE,QAAQwyC,OAAO,KAAK,IAI9B98C,KAAKshE,UAAUh8D,iBACb6E,GAICtE,IACC7F,KAAKkiE,oBAAoBr8D,EAAMyE,QAAQ,IAI3CtK,KAAKshE,UAAUh8D,iBACb6E,GAICtE,IACC,MAAM0H,EAAK1H,EAAMyE,QAAQ8K,aACd5O,IAAP+G,UACKvN,KAAKuhE,gBAAgBh0D,EAAGoL,YAEjC9S,EAAMyE,QAAQwyC,OAAO,KAAK,IAI9B98C,KAAK6zD,SAAS3oD,SAIXi3D,IACCA,EAAQrlB,OAAO98C,KAAK,IAIxBA,KAAKw9D,aAAatyD,SAIfk3D,IACCA,EAAYtlB,OAAO98C,KAAK,IAI5BA,KAAKshE,UAAUp2D,QAAQlL,KAAKkiE,oBAAoBh7D,KAAKlH,MACtD,CAOD,UAAAqiE,CAAWF,GACTniE,KAAKsiE,cAAc38D,KAAKw8D,EACzB,CAWD,cAAAI,CAAeH,GACbpiE,KAAKwiE,kBAAkB78D,KAAKy8D,EAC7B,CASD,QAAAK,CAAS/0B,GACQ1tC,KAAK69C,gBAAgByJ,YAC7B3hD,KAAK+nC,EACb,CAMD,eAAAg1B,CAAgB78D,GACdo5D,GAAoBp5D,EAAM6nC,MAAO1tC,KAClC,CAOD,UAAA2iE,CAAWC,GACT5iE,KAAK6iE,cAAcl9D,KAAKi9D,EACzB,CAOD,mBAAAV,CAAoBU,GAClB,MAAMr1D,EAAKq1D,EAAQxtD,aACR5O,IAAP+G,IACFvN,KAAKuhE,gBAAgBh0D,EAAGoL,YAAciqD,GAExCA,EAAQ9lB,OAAO98C,KAChB,CAMD,eAAAS,GACET,KAAK6zD,SAASlvD,QACd3E,KAAKw9D,aAAa74D,QAClB3E,KAAKshE,UAAU38D,QACf3E,KAAKihE,gBAAgB6B,aACrB9iE,KAAK2vD,UAAU,MACf1qD,MAAMxE,iBACP,CAoBD,qBAAAsiE,CAAsB1lB,EAAO1hC,EAAUjR,GACrC,IAAK1K,KAAKogE,cAAgBpgE,KAAK08C,UAC7B,OAEF,MAAMvlC,EAAanX,KAAK24D,+BAA+Btb,GAEjDgC,OACqB74C,KAF3BkE,OAAsBlE,IAAZkE,EAAwBA,EAAU,CAAA,GAElC20C,aAA6B30C,EAAQ20C,aAAe,EACxDE,OACoB/4C,IAAxBkE,EAAQ60C,YAA4B70C,EAAQ60C,YAAcp8C,EACtDm8C,GAAwC,IAAzB50C,EAAQ40C,aAC7B,OAAOt/C,KAAK08C,UAAU0C,2BACpBjoC,EACAnX,KAAKogE,YACL/gB,EACAC,EACA3jC,EACA,KACA4jC,EACA,KAEH,CAUD,kBAAAyjB,CAAmB3lB,EAAO3yC,GACxB,MAAMu4D,EAAW,GAQjB,OAPAjjE,KAAK+iE,sBACH1lB,GACA,SAAUoC,GACRwjB,EAASt9D,KAAK85C,EACf,GACD/0C,GAEKu4D,CACR,CAOD,YAAAvR,GACE,MAAM7K,EAAS,GAWf,OAVA,SAASqc,EAAc7D,GACrBA,EAAWn0D,SAAQ,SAAUwiC,GACvBA,aAAiBsZ,GACnBkc,EAAcx1B,EAAM4Z,aAEpBT,EAAOlhD,KAAK+nC,EAEtB,GACK,CACDw1B,CAAcljE,KAAKsnD,aACZT,CACR,CAUD,iBAAAsc,CAAkB9lB,EAAO3yC,GACvB,IAAK1K,KAAKogE,cAAgBpgE,KAAK08C,UAC7B,OAAO,EAET,MAAMvlC,EAAanX,KAAK24D,+BAA+Btb,GAEjDkC,OACoB/4C,KAF1BkE,OAAsBlE,IAAZkE,EAAwBA,EAAU,CAAA,GAElC60C,YAA4B70C,EAAQ60C,YAAcp8C,EACtDk8C,OACqB74C,IAAzBkE,EAAQ20C,aAA6B30C,EAAQ20C,aAAe,EACxDC,GAAwC,IAAzB50C,EAAQ40C,aAC7B,OAAOt/C,KAAK08C,UAAUyD,uBACpBhpC,EACAnX,KAAKogE,YACL/gB,EACAC,EACAC,EACA,KAEH,CAQD,kBAAA6jB,CAAmBv9D,GACjB,OAAO7F,KAAK6oD,uBAAuB7oD,KAAK4oD,cAAc/iD,GACvD,CAOD,0BAAAw9D,CAA2Bx9D,GACzB,OAAO7F,KAAK24D,+BAA+B34D,KAAK4oD,cAAc/iD,GAC/D,CAQD,aAAA+iD,CAAc/iD,GACZ,MACMy9D,EADWtjE,KAAKygE,UACY8C,wBAC5BpzB,EAAenwC,KAAK0T,UACpB8vD,EAASF,EAAiB9zD,MAAQ2gC,EAAa,GAC/CszB,EAASH,EAAiB7zD,OAAS0gC,EAAa,GAChDuzB,EAEJ,mBAAoB79D,EACU,EAAQ89D,eAAe,GACtB,EAEjC,MAAO,EACJD,EAAc1X,QAAUsX,EAAiBjf,MAAQmf,GACjDE,EAAczX,QAAUqX,EAAiBhK,KAAOmK,EAEpD,CAWD,SAAAG,GACE,OACE5jE,KAAKmJ,IAAIgjD,GAEZ,CASD,gBAAAuK,GACE,OAAO12D,KAAKghE,cACb,CASD,sBAAAnY,CAAuBxL,GACrB,OAAOrxB,GACLhsB,KAAK24D,+BAA+Btb,GACpCr9C,KAAK09C,UAAUhvB,gBAElB,CAQD,8BAAAiqC,CAA+Btb,GAC7B,MAAMG,EAAax9C,KAAKogE,YACxB,OAAK5iB,EAGE9+B,GAAe8+B,EAAW2B,2BAA4B9B,EAAMv5C,SAF1D,IAGV,CAQD,WAAAw+D,GACE,OAAOtiE,KAAK6zD,QACb,CAQD,WAAAgP,GACE,OAAO7iE,KAAKshE,SACb,CAUD,cAAAuC,CAAet2D,GACb,MAAMq1D,EAAU5iE,KAAKuhE,gBAAgBh0D,EAAGoL,YACxC,YAAmBnS,IAAZo8D,EAAwBA,EAAU,IAC1C,CAUD,eAAAJ,GACE,OAAOxiE,KAAKw9D,YACb,CAQD,aAAA3f,GACE,OAAkC79C,KAAKmJ,IAAIgjD,GAC5C,CAOD,SAAA/E,CAAUP,GACR,MAAMid,EAAQ9jE,KAAK69C,gBACnB,GAAIgJ,aAAkBt8C,EAEpB,YADAu5D,EAAM1c,UAAUP,GAIlB,MAAMiB,EAAagc,EAAMxc,YACzBQ,EAAWnjD,QACXmjD,EAAW5lD,OAAO2kD,EACnB,CAOD,SAAAS,GAEE,OADetnD,KAAK69C,gBAAgByJ,WAErC,CAKD,oBAAAyc,GACE,MAAMnmB,EAAmB59C,KAAK69C,gBAAgB1P,sBAC9C,IAAK,IAAIvsC,EAAI,EAAGuE,EAAKy3C,EAAiBz8C,OAAQS,EAAIuE,IAAMvE,EAAG,CACzD,MAAM2K,EAAQqxC,EAAiBh8C,GAC/B,IAAK2K,EAAMsgC,QACT,SAEF,MAAMm3B,EAAWz3D,EAAMmhC,MAAMyQ,cAC7B,GAAI6lB,IAAaA,EAASC,MACxB,OAAO,EAET,MAAMh6D,EAASsC,EAAMmhC,MAAMuP,YAC3B,GAAIhzC,GAAUA,EAAOi6D,QACnB,OAAO,CAEV,CACD,OAAO,CACR,CASD,sBAAAC,CAAuBhtD,GACrB,MAAMitD,EAAiBn4C,GACrB9U,EACAnX,KAAK09C,UAAUhvB,iBAEjB,OAAO1uB,KAAK04D,+BAA+B0L,EAC5C,CAQD,8BAAA1L,CAA+BvhD,GAC7B,MAAMqmC,EAAax9C,KAAKogE,YACxB,OAAK5iB,EAGE9+B,GACL8+B,EAAW0B,2BACX/nC,EAAWrT,MAAM,EAAG,IAJb,IAMV,CAMD,WAAAq6C,GACE,OAAOn+C,KAAK08C,SACb,CAQD,OAAAhpC,GACE,OACE1T,KAAKmJ,IAAIgjD,GAEZ,CASD,OAAAzO,GACE,OAA4B19C,KAAKmJ,IAAIgjD,GACtC,CAOD,WAAAhG,GACE,OAAOnmD,KAAKygE,SACb,CASD,mBAAAlH,GACE,OAAOv5D,KAAK2gE,iBACb,CASD,4BAAA/Q,GACE,OAAO5vD,KAAK4gE,0BACb,CAKD,gBAAAjV,GACE,MAAM8K,EAAgBz2D,KAAK02D,mBAC3B,OAAOD,EAAgBA,EAAc4N,cAAgBv0D,QACtD,CASD,eAAAq/C,CAAgBliD,EAAMmiD,EAAeC,EAAYC,GAC/C,OAAOH,GACLnvD,KAAKogE,YACLnzD,EACAmiD,EACAC,EACAC,EAEH,CAMD,kBAAAqQ,CAAmB1K,EAAcl1D,GAC/BA,EAAOA,GAAQk1D,EAAal1D,KAC5B,MAAM40D,EAAkB,IAAI1J,GAAgBlrD,EAAMC,KAAMi1D,GACxDj1D,KAAKskE,sBAAsB3P,EAC5B,CAKD,qBAAA2P,CAAsB3P,GACpB,IAAK30D,KAAKogE,YAGR,OAEF,MAAM7X,EACJoM,EACN,cACUhrD,EAAY4+C,EAAcxoD,KAChC,GACE4J,IAAcggD,IACdhgD,IAAc7C,GACd6C,IAAc7C,EACd,CACA,MAAM4kD,EAAM1rD,KAAK2rD,mBACX4Y,EAAWvkE,KAAKygE,UAAU5U,YAC5B7rD,KAAKygE,UAAU5U,cACfH,EACEvrD,EAA8BooD,EAAoB,OACxD,GAGEvoD,KAAK4gE,2BAA2B9N,SAAS3yD,MAKvCokE,IAAa7Y,EAAMA,EAAI8Y,gBAAkBD,GAAUzR,SAAS3yD,GAE9D,MAEH,CAED,GADAw0D,EAAgBnX,WAAax9C,KAAKogE,aACU,IAAxCpgE,KAAK4F,cAAc+uD,GAA4B,CACjD,MAAM8P,EAAoBzkE,KAAKwiE,kBAAkBp3D,WAAWtH,QAC5D,IAAK,IAAIlC,EAAI6iE,EAAkBtjE,OAAS,EAAGS,GAAK,EAAGA,IAAK,CACtD,MAAMwgE,EAAcqC,EAAkB7iE,GACtC,GACEwgE,EAAYhiB,WAAapgD,OACxBoiE,EAAY1N,cACZ10D,KAAK02D,mBAEN,SAGF,IADa0L,EAAYh8D,YAAYuuD,IACxBA,EAAgB10D,mBAC3B,KAEH,CACF,CACF,CAKD,gBAAAykE,GACE,MAAMlnB,EAAax9C,KAAKogE,YAWlBuE,EAAY3kE,KAAKyhE,WACvB,IAAKkD,EAAU7/D,UAAW,CACxB,IAAIkqD,EAAkBhvD,KAAK4/D,iBACvB3Q,EAAcD,EAClB,GAAIxR,EAAY,CACd,MAAMpF,EAAQoF,EAAWonB,UACzB,GAAIxsB,EAAMpJ,KAAuBoJ,EAAMpJ,IAAuB,CAC5D,MAAM61B,EAAmBhnC,KAAKC,MAAQ0f,EAAWhwC,KAAO,EACxDwhD,EAAkB6V,EAAmB,EAAI,EACzC5V,EAAc4V,EAAmB,EAAI,CACtC,CACF,CACGF,EAAU9V,kBAAoBG,IAChC2V,EAAUzW,eACVyW,EAAU5V,cAAcC,EAAiBC,GAE5C,CAEGzR,GAAcx9C,KAAK08C,YAAcc,EAAW1H,WACjB,IAAzB91C,KAAKw/D,iBACHx/D,KAAKyG,YAAYsoC,KACnB/uC,KAAK08C,UAAUsC,oBACbjQ,GACAyO,IAGiB,IAAjBx9C,KAAKy/D,UACPz/D,KAAKy/D,SAAU,EACfz/D,KAAK4F,cACH,IAAI0iD,GAAS4D,GAAsBlsD,KAAMw9C,OAGnB,IAAjBx9C,KAAKy/D,UACdz/D,KAAKy/D,SAAU,EACfz/D,KAAK4F,cACH,IAAI0iD,GAAS4D,GAAwBlsD,KAAMw9C,MAKjD,MAAM+C,EAAsBvgD,KAAKwhE,qBACjC,IAAK,IAAI5/D,EAAI,EAAGuE,EAAKo6C,EAAoBp/C,OAAQS,EAAIuE,IAAMvE,EACzD2+C,EAAoB3+C,GAAG5B,KAAMw9C,GAE/B+C,EAAoBp/C,OAAS,CAC9B,CAKD,kBAAA2gE,GACM9hE,KAAK09C,YAAc19C,KAAK09C,UAAUzH,gBACpCj2C,KAAK09C,UAAUxH,mBAAmB,GAGpCl2C,KAAK68C,QACN,CAKD,oBAAAklB,GACE,GAAI/hE,KAAK6gE,wBAAyB,CAChC,IAAK,IAAIj/D,EAAI,EAAGuE,EAAKnG,KAAK+gE,yBAAyB5/D,OAAQS,EAAIuE,IAAMvE,EACnE0F,EAActH,KAAK+gE,yBAAyBn/D,IAE9C5B,KAAK+gE,yBAA2B,KAChC/gE,KAAKygE,UAAUn6D,oBACbQ,EACA9G,KAAK0/D,0BAEP1/D,KAAKygE,UAAUn6D,oBACbQ,EACA9G,KAAK0/D,0BAEP1/D,KAAK6gE,wBAAwBrgE,UAC7BR,KAAK6gE,wBAA0B,KAC/BxvD,GAAWrR,KAAKygE,UACjB,CAED,GAAIzgE,KAAKghE,eAAgB,CACvBhhE,KAAKihE,gBAAgB6D,UAAU9kE,KAAKghE,gBACpC,MAAMuD,EAAWvkE,KAAKghE,eAAenV,cACjC0Y,aAAoBQ,YACtB/kE,KAAKihE,gBAAgB6D,UAAUP,EAASS,MAE1ChlE,KAAKosC,aAAQ5lC,EACd,CAOD,MAAMrG,EAASH,KAAK4jE,YACdnN,EACc,iBAAXt2D,EAAsB2P,SAASggD,eAAe3vD,GAAUA,EAEjE,GADAH,KAAKghE,eAAiBvK,EACjBA,EAYE,CACLA,EAAcxkD,YAAYjS,KAAKygE,WAC1BzgE,KAAK08C,YACR18C,KAAK08C,UAAY,IAAIuoB,GAAqBjlE,OAG5CA,KAAK6gE,wBAA0B,IAAIqE,GACjCllE,KACAA,KAAKmqD,gBAEP,IAAK,MAAM5iD,KAAOuhD,GAChB9oD,KAAK6gE,wBAAwBv7D,iBAC3BwjD,GAAoBvhD,GACpBvH,KAAKskE,sBAAsBp9D,KAAKlH,OAGpCA,KAAKygE,UAAUn7D,iBACbwB,EACA9G,KAAK0/D,0BACL,GAEF1/D,KAAKygE,UAAUn7D,iBACbwB,EACA9G,KAAK0/D,2BACLxwD,IAA0B,CAACC,SAAS,IAGtC,MAAMiwD,EAAuBp/D,KAAK8gE,qBAE9B9gE,KAAK8gE,qBADLrK,EAEJz2D,KAAK+gE,yBAA2B,CAC9Bh6D,EACEq4D,EACAt4D,EACA9G,KAAK2/D,mBACL3/D,MAEF+G,EACEq4D,EACAt4D,EACA9G,KAAK2/D,mBACL3/D,OAGJ,MAAMukE,EAAW9N,EAAc5K,cAC3B0Y,aAAoBQ,YACtB/kE,KAAKihE,gBAAgBkE,QAAQZ,EAASS,MAExChlE,KAAKihE,gBAAgBkE,QAAQ1O,EAC9B,MA5DKz2D,KAAK08C,YACPwO,aAAalrD,KAAK8/D,0BAClB9/D,KAAK8/D,8BAA2Bt5D,EAChCxG,KAAKwhE,qBAAqBrgE,OAAS,EACnCnB,KAAK08C,UAAUl8C,UACfR,KAAK08C,UAAY,MAEf18C,KAAK+/D,qBACPnpB,qBAAqB52C,KAAK+/D,oBAC1B//D,KAAK+/D,wBAAqBv5D,GAqD9BxG,KAAKmhE,YAGN,CAKD,iBAAAQ,GACE3hE,KAAK68C,QACN,CAKD,0BAAAuoB,GACEplE,KAAK68C,QACN,CAKD,kBAAAglB,GACM7hE,KAAKsgE,2BACPh5D,EAActH,KAAKsgE,0BACnBtgE,KAAKsgE,yBAA2B,MAE9BtgE,KAAKugE,yBACPj5D,EAActH,KAAKugE,wBACnBvgE,KAAKugE,uBAAyB,MAEhC,MAAMhjB,EAAOv9C,KAAK09C,UACdH,IACFv9C,KAAKqlE,oBAAoBrlE,KAAK0T,WAE9B1T,KAAKsgE,yBAA2Bv5D,EAC9Bw2C,EACAl9C,EACAL,KAAKolE,2BACLplE,MAEFA,KAAKugE,uBAAyBx5D,EAC5Bw2C,EACAz2C,EACA9G,KAAKolE,2BACLplE,MAGFu9C,EAAKrH,mBAAmB,IAE1Bl2C,KAAK68C,QACN,CAKD,wBAAA+kB,GACM5hE,KAAKwgE,kCACPxgE,KAAKwgE,gCAAgCt1D,QAAQ5D,GAC7CtH,KAAKwgE,gCAAkC,MAEzC,MAAMnB,EAAar/D,KAAK69C,gBACpBwhB,IACFr/D,KAAK0iE,gBAAgB,IAAI3b,GAAW,WAAYsY,IAChDr/D,KAAKwgE,gCAAkC,CACrCz5D,EAAOs4D,EAAYh/D,EAAgCL,KAAK68C,OAAQ78C,MAChE+G,EAAOs4D,EAAYv4D,EAAkB9G,KAAK68C,OAAQ78C,MAClD+G,EAAOs4D,EAAY,WAAYr/D,KAAK0iE,gBAAiB1iE,MACrD+G,EAAOs4D,EAAY,cAAer/D,KAAKslE,mBAAoBtlE,QAG/DA,KAAK68C,QACN,CAKD,UAAA0oB,GACE,QAASvlE,KAAKogE,WACf,CAKD,eAAAJ,GACEhgE,KAAK+/D,wBAAqBv5D,EAC1BxG,KAAKwlE,aAAa3nC,KAAKC,MACxB,CAMD,UAAA2nC,GACMzlE,KAAK+/D,oBACPnpB,qBAAqB52C,KAAK+/D,oBAE5B//D,KAAKggE,iBACN,CAKD,UAAAha,GACE,MAAMpG,EAAc5/C,KAAK69C,gBAAgB1P,sBACzC,IAAK,IAAIvsC,EAAI,EAAGuE,EAAKy5C,EAAYz+C,OAAQS,EAAIuE,IAAMvE,EAAG,CACpD,MAAM8rC,EAAQkS,EAAYh+C,GAAG8rC,MACzBA,EAAMiR,eACRjR,EAAMyQ,cAAcunB,oBAEvB,CACF,CAMD,MAAA7oB,GACM78C,KAAK08C,gBAAyCl2C,IAA5BxG,KAAK+/D,qBACzB//D,KAAK+/D,mBAAqBroB,sBAAsB13C,KAAKggE,iBAExD,CASD,mBAAA3f,GACE,MAAM7C,EAAax9C,KAAKogE,YACnB5iB,GAGLx9C,KAAK08C,UAAU2D,oBAAoB7C,EACpC,CASD,aAAAmoB,CAAcxD,GACZ,OAAOniE,KAAKsiE,cAAc72D,OAAO02D,EAClC,CASD,iBAAAyD,CAAkBxD,GAChB,OAAOpiE,KAAKwiE,kBAAkB/2D,OAAO22D,EACtC,CASD,WAAAyD,CAAYn4B,GAEV,OADe1tC,KAAK69C,gBAAgByJ,YACtB77C,OAAOiiC,EACtB,CAMD,kBAAA43B,CAAmBz/D,GACjBk5D,GAAuBl5D,EAAM6nC,MAC9B,CASD,aAAAo4B,CAAclD,GACZ,OAAO5iE,KAAK6iE,cAAcp3D,OAAOm3D,EAClC,CAMD,YAAA4C,CAAah4D,GACX,MAAMiG,EAAOzT,KAAK0T,UACZ6pC,EAAOv9C,KAAK09C,UACZqoB,EAAqB/lE,KAAKogE,YAEhC,IAAI5iB,EAAa,KACjB,QAAah3C,IAATiN,GAAsBorD,GAAQprD,IAAS8pC,GAAQA,EAAKvH,QAAS,CAC/D,MAAM4uB,EAAYrnB,EAAKpF,SACrBn4C,KAAKogE,YAAcpgE,KAAKogE,YAAYwE,eAAYp+D,GAE5C+yC,EAAYgE,EAAKrwC,WA2BvB,GA1BAswC,EAAa,CACX1H,SAAS,EACToJ,2BAA4Bl/C,KAAKigE,4BACjC+F,cAAe,KACfzsD,OAAQiD,GACN+8B,EAAU98B,OACV88B,EAAU78B,WACV68B,EAAU58B,SACVlJ,GAEFxQ,MAAOjD,KAAKmgE,cACZxZ,WAAY,EACZ/I,iBAAkB59C,KAAK69C,gBAAgB1P,sBACvCjT,WAAYl7B,KAAKo7B,YACjB+jB,2BAA4Bn/C,KAAKkgE,4BACjC3f,oBAAqB,GACrB9sC,KAAMA,EACNkxD,UAAW3kE,KAAKyhE,WAChBj0D,KAAMA,EACNy4D,UAAW,CAAE,EACb1sB,UAAWA,EACXqrB,UAAWA,EACXrV,YAAa,CAAE,EACf2W,MAAOz9D,EAAOzI,MACdmmE,cAAe,CAAE,GAEf5sB,EAAUJ,YAAcI,EAAUH,eAAgB,CACpD,MAAMz8B,EAAW2R,MAAMirB,EAAUF,cAC7BE,EAAU58B,SACV48B,EAAUF,aAEdmE,EAAW4oB,WAAa5pD,GACtB+8B,EAAUJ,WACVI,EAAUH,eACVz8B,EACAlJ,EAEH,CACF,CAKD,GAHAzT,KAAKogE,YAAc5iB,EACnBx9C,KAAK08C,UAAU2B,YAAYb,GAEvBA,EAAY,CASd,GARIA,EAAW1H,SACb91C,KAAK68C,SAEPx6C,MAAMwB,UAAU8B,KAAKzB,MACnBlE,KAAKwhE,qBACLhkB,EAAW+C,qBAGTwlB,EAAoB,GAEnB/lE,KAAKqgE,kBACJv7D,GAAQ9E,KAAKqgE,mBACZgG,GAAa7oB,EAAWjkC,OAAQvZ,KAAKqgE,oBAExCrgE,KAAK4F,cACH,IAAI0iD,GAAS4D,GAAwBlsD,KAAM+lE,IAE7C/lE,KAAKqgE,gBAAkB3lD,GAAoB1a,KAAKqgE,iBAEnD,CAGCrgE,KAAKqgE,kBACJ7iB,EAAWonB,UAAU51B,MACrBwO,EAAWonB,UAAU51B,MACrBq3B,GAAa7oB,EAAWjkC,OAAQvZ,KAAKqgE,mBAGtCrgE,KAAK4F,cACH,IAAI0iD,GAAS4D,GAAsBlsD,KAAMw9C,IAE3C1oC,GAAM0oC,EAAWjkC,OAAQvZ,KAAKqgE,iBAEjC,CAEDrgE,KAAK4F,cAAc,IAAI0iD,GAAS4D,GAAyBlsD,KAAMw9C,IAE/Dx9C,KAAKw/D,gBACHx/D,KAAKyG,YAAYylD,KACjBlsD,KAAKyG,YAAYylD,KACjBlsD,KAAKyG,YAAYsoC,KACZ/uC,KAAKyhE,WAAW5S,oBAChB7uD,KAAKyhE,WAAWpU,aAChBrtD,KAAK+jE,4BACNv9D,EAEDxG,KAAK8/D,2BACR9/D,KAAK8/D,yBAA2BtuB,YAAW,KACzCxxC,KAAK8/D,8BAA2Bt5D,EAChCxG,KAAK0kE,kBAAkB,GACtB,GAEN,CAQD,aAAA4B,CAAcjH,GACZ,MAAMkH,EAAgBvmE,KAAK69C,gBACvB0oB,GACFvmE,KAAKslE,mBAAmB,IAAIve,GAAW,cAAewf,IAExDvmE,KAAK8J,IAAIqiD,GAAwBkT,EAClC,CAQD,OAAAjzB,CAAQ34B,GACNzT,KAAK8J,IAAIqiD,GAAkB14C,EAC5B,CASD,SAAAk8C,CAAUxvD,GACRH,KAAK8J,IAAIqiD,GAAoBhsD,EAC9B,CAWD,OAAA8hE,CAAQ1kB,GACN,IAAKA,GAAQA,aAAgBI,GAE3B,YADA39C,KAAK8J,IAAIqiD,GAAkB5O,GAG7Bv9C,KAAK8J,IAAIqiD,GAAkB,IAAIxO,IAE/B,MAAM/S,EAAM5qC,KACZu9C,EAAKzpC,MAAK,SAAUkuD,GAClBp3B,EAAIq3B,QAAQ,IAAItkB,GAAKqkB,GAC3B,GACG,CAOD,UAAAb,GACE,MAAM1K,EAAgBz2D,KAAK02D,mBAE3B,IAAIjjD,EACJ,GAAIgjD,EAAe,CACjB,MAAM+P,EAAgBj2D,iBAAiBkmD,GACjCjnD,EACJinD,EAAcpmD,YACdw6B,WAAW27B,EAA+B,iBAC1C37B,WAAW27B,EAA2B,aACtC37B,WAAW27B,EAA4B,cACvC37B,WAAW27B,EAAgC,kBACvC/2D,EACJgnD,EAAc7lD,aACdi6B,WAAW27B,EAA8B,gBACzC37B,WAAW27B,EAA0B,YACrC37B,WAAW27B,EAA6B,eACxC37B,WAAW27B,EAAiC,mBACzCl4C,MAAM9e,IAAW8e,MAAM7e,KAC1BgE,EAAO,CAACjE,EAAOC,IAEZovD,GAAQprD,KAEPgjD,EAAcpmD,aACdomD,EAAc7lD,cACd6lD,EAAcgQ,iBAAiBtlE,SAGjC0nB,GACE,qEAIP,CAED,MAAM69C,EAAU1mE,KAAK0T,WACjBD,GAAUizD,GAAYnkE,EAAOkR,EAAMizD,KACrC1mE,KAAKosC,QAAQ34B,GACbzT,KAAKqlE,oBAAoB5xD,GAE5B,CAOD,mBAAA4xD,CAAoB5xD,GAClB,MAAM8pC,EAAOv9C,KAAK09C,UACdH,GACFA,EAAKvF,gBAAgBvkC,EAExB,GCppDH,MAAMrJ,GACK,UADLA,GAEC,MAFDA,GAGI,SAHJA,GAIM,WAJNA,GAKS,cA0ff,IAAAu8D,GAtdA,cAAsBn8D,EAIpB,WAAA1K,CAAY4K,GACVzF,QAKAjF,KAAK0H,GAKL1H,KAAKiH,KAKLjH,KAAK2H,GAML3H,KAAK0K,QAAUA,EAMf1K,KAAKuN,GAAK7C,EAAQ6C,GAMlBvN,KAAK4mE,iBACqBpgE,IAAxBkE,EAAQk8D,aAA4Bl8D,EAAQk8D,YAM9C5mE,KAAKg1D,eAAkCxuD,IAAtBkE,EAAQsqD,WAA0BtqD,EAAQsqD,UAM3Dh1D,KAAKsK,QAAUwF,SAASC,cAAc,OACtC/P,KAAKsK,QAAQ8iC,eACW5mC,IAAtBkE,EAAQ0iC,UACJ1iC,EAAQ0iC,UACR,wBAA0BuT,GAChC3gD,KAAKsK,QAAQgG,MAAM0oB,SAAW,WAC9Bh5B,KAAKsK,QAAQgG,MAAMm/C,cAAgB,OAMnCzvD,KAAK6mE,SAA8B,IAApBn8D,EAAQm8D,QAAmB,GAAKn8D,EAAQm8D,cAAWrgE,EAOlExG,KAAK48C,SAAW,CACd5kB,WAAY,GACZ6U,SAAS,GAOX7sC,KAAK8mE,yBAA2B,KAEhC9mE,KAAK4J,kBAAkBQ,GAAkBpK,KAAK+mE,sBAC9C/mE,KAAK4J,kBAAkBQ,GAAcpK,KAAKgnE,kBAC1ChnE,KAAK4J,kBAAkBQ,GAAiBpK,KAAKinE,qBAC7CjnE,KAAK4J,kBAAkBQ,GAAmBpK,KAAKknE,uBAC/ClnE,KAAK4J,kBAAkBQ,GAAsBpK,KAAKmnE,+BAE1B3gE,IAApBkE,EAAQJ,SACVtK,KAAKonE,WAAW18D,EAAQJ,SAG1BtK,KAAKqnE,eAA6B7gE,IAAnBkE,EAAQoQ,OAAuBpQ,EAAQoQ,OAAS,CAAC,EAAG,IAEnE9a,KAAKsnE,eAAe58D,EAAQ68D,aAAe,iBAElB/gE,IAArBkE,EAAQsuB,UACVh5B,KAAKwnE,YAAY98D,EAAQsuB,SAE5B,CAQD,UAAAyuC,GACE,OAA6CznE,KAAKmJ,IAAIiB,GACvD,CAOD,KAAAgL,GACE,OAAOpV,KAAKuN,EACb,CASD,MAAA6yC,GACE,OACEpgD,KAAKmJ,IAAIiB,KAAiB,IAE7B,CAQD,SAAAs9D,GACE,OAAqC1nE,KAAKmJ,IAAIiB,GAC/C,CASD,WAAA4vB,GACE,OACEh6B,KAAKmJ,IAAIiB,GAEZ,CASD,cAAAu9D,GACE,OAAmC3nE,KAAKmJ,IAAIiB,GAC7C,CAKD,oBAAA28D,GACEv1D,GAAexR,KAAKsK,SACpB,MAAMA,EAAUtK,KAAKynE,aACjBn9D,GACFtK,KAAKsK,QAAQ2H,YAAY3H,EAE5B,CAKD,gBAAA08D,GACMhnE,KAAK8mE,2BACPz1D,GAAWrR,KAAKsK,SAChBhD,EAActH,KAAK8mE,0BACnB9mE,KAAK8mE,yBAA2B,MAElC,MAAMl8B,EAAM5qC,KAAKogD,SACjB,GAAIxV,EAAK,CACP5qC,KAAK8mE,yBAA2B//D,EAC9B6jC,EACAshB,GACAlsD,KAAK68C,OACL78C,MAEFA,KAAK4nE,sBACL,MAAM1hB,EAAYlmD,KAAKg1D,UACnBpqB,EAAIglB,+BACJhlB,EAAI2uB,sBACJv5D,KAAK4mE,YACP1gB,EAAUl0C,aAAahS,KAAKsK,QAAS47C,EAAUr0C,WAAW,IAAM,MAEhEq0C,EAAUj0C,YAAYjS,KAAKsK,SAE7BtK,KAAK6nE,gBACN,CACF,CAKD,MAAAhrB,GACE78C,KAAK4nE,qBACN,CAKD,mBAAAX,GACEjnE,KAAK4nE,qBACN,CAKD,qBAAAV,GACElnE,KAAK4nE,sBACL5nE,KAAK6nE,gBACN,CAKD,wBAAAV,GACEnnE,KAAK4nE,qBACN,CAQD,UAAAR,CAAW98D,GACTtK,KAAK8J,IAAIM,GAAkBE,EAC5B,CASD,MAAAwyC,CAAOlS,GACL5qC,KAAK8J,IAAIM,GAAcwgC,EACxB,CAQD,SAAAy8B,CAAUvsD,GACR9a,KAAK8J,IAAIM,GAAiB0Q,EAC3B,CAUD,WAAA0sD,CAAYxuC,GACVh5B,KAAK8J,IAAIM,GAAmB4uB,EAC7B,CAOD,cAAA6uC,GACM7nE,KAAK6mE,SACP7mE,KAAK8nE,YAAY9nE,KAAK6mE,QAEzB,CAQD,WAAAiB,CAAYC,GACV,MAAMn9B,EAAM5qC,KAAKogD,SAEjB,IAAKxV,IAAQA,EAAI8rB,qBAAuB12D,KAAKmJ,IAAIiB,IAC/C,OAGF,MAAM49D,EAAUhoE,KAAKioE,QAAQr9B,EAAI8rB,mBAAoB9rB,EAAIl3B,WACnDpJ,EAAUtK,KAAKynE,aACfS,EAAcloE,KAAKioE,QAAQ39D,EAAS,CACxC8F,GAAW9F,GACXqG,GAAYrG,KAKR69D,OAC0B3hE,KAHhCuhE,EAAqBA,GAAsB,IAGtBK,OAAuB,GAAKL,EAAmBK,OACpE,IAAKruD,GAAeiuD,EAASE,GAAc,CAEzC,MAAMG,EAAaH,EAAY,GAAKF,EAAQ,GACtCM,EAAcN,EAAQ,GAAKE,EAAY,GACvCK,EAAYL,EAAY,GAAKF,EAAQ,GACrCQ,EAAeR,EAAQ,GAAKE,EAAY,GAExCx6D,EAAQ,CAAC,EAAG,GAgBlB,GAfI26D,EAAa,EAEf36D,EAAM,GAAK26D,EAAaF,EACfG,EAAc,IAEvB56D,EAAM,GAAK1B,KAAKmP,IAAImtD,GAAeH,GAEjCI,EAAY,EAEd76D,EAAM,GAAK66D,EAAYJ,EACdK,EAAe,IAExB96D,EAAM,GAAK1B,KAAKmP,IAAIqtD,GAAgBL,GAGrB,IAAbz6D,EAAM,IAAyB,IAAbA,EAAM,GAAU,CACpC,MAAM+O,EACJmuB,EAAI8S,UAAUpI,oBAEVmzB,EAAW79B,EAAI8tB,+BAA+Bj8C,GACpD,IAAKgsD,EACH,OAEF,MAAMC,EAAc,CAACD,EAAS,GAAK/6D,EAAM,GAAI+6D,EAAS,GAAK/6D,EAAM,IAE3Di7D,EAAaZ,EAAmBl1B,WAAa,GACnDjI,EAAI8S,UAAUvH,gBAAgB,CAC5B15B,OAAQmuB,EAAI+tB,+BAA+B+P,GAC3CzqC,SAAU0qC,EAAW1qC,SACrBqY,OAAQqyB,EAAWryB,QAEtB,CACF,CACF,CASD,OAAA2xB,CAAQ39D,EAASmJ,GACf,MAAMm1D,EAAMt+D,EAAQi5D,wBACd/tB,EAAUozB,EAAIvkB,KAAOh1C,OAAOw5D,YAC5BpzB,EAAUmzB,EAAItP,IAAMjqD,OAAOy5D,YACjC,MAAO,CAACtzB,EAASC,EAASD,EAAU/hC,EAAK,GAAIgiC,EAAUhiC,EAAK,GAC7D,CASD,cAAA6zD,CAAeC,GACbvnE,KAAK8J,IAAIM,GAAsBm9D,EAChC,CAOD,UAAA34B,CAAW/B,GACL7sC,KAAK48C,SAAS/P,UAAYA,IAC5B7sC,KAAKsK,QAAQgG,MAAM8zC,QAAUvX,EAAU,GAAK,OAC5C7sC,KAAK48C,SAAS/P,QAAUA,EAE3B,CAMD,mBAAA+6B,GACE,MAAMh9B,EAAM5qC,KAAKogD,SACXpnB,EAAWh5B,KAAKg6B,cACtB,IAAK4Q,IAAQA,EAAI26B,eAAiBvsC,EAEhC,YADAh5B,KAAK4uC,YAAW,GAIlB,MAAMyO,EAAQzS,EAAIu5B,uBAAuBnrC,GACnC+vC,EAAUn+B,EAAIl3B,UACpB1T,KAAKgpE,uBAAuB3rB,EAAO0rB,EACpC,CAOD,sBAAAC,CAAuB3rB,EAAO0rB,GAC5B,MAAMz4D,EAAQtQ,KAAKsK,QAAQgG,MACrBwK,EAAS9a,KAAK0nE,YAEdH,EAAcvnE,KAAK2nE,iBAEzB3nE,KAAK4uC,YAAW,GAIhB,IAAIq6B,EAAO,KACPC,EAAO,KAEM,gBAAf3B,GACe,gBAAfA,GACe,aAAfA,EAEA0B,EAAO,QAEQ,iBAAf1B,GACe,iBAAfA,GACe,cAAfA,IAEA0B,EAAO,QAGQ,eAAf1B,GACe,iBAAfA,GACe,gBAAfA,EAEA2B,EAAO,QAEQ,eAAf3B,GACe,iBAAfA,GACe,gBAAfA,IAEA2B,EAAO,QAET,MAAMnzD,EAAY,aAAakzD,MAASC,gBA9B9Bl9D,KAAKgZ,MAAMq4B,EAAM,GAAKviC,EAAO,IAAM,SACnC9O,KAAKgZ,MAAMq4B,EAAM,GAAKviC,EAAO,IAAM,QA8BzC9a,KAAK48C,SAAS5kB,YAAcjiB,IAC9B/V,KAAK48C,SAAS5kB,WAAajiB,EAC3BzF,EAAMyF,UAAYA,EAErB,CAMD,UAAAozD,GACE,OAAOnpE,KAAK0K,OACb,GC9RH,IAAA0+D,GA7QA,MAIE,WAAAtpE,CAAYupE,GAMVrpE,KAAKqpE,mBAAkC7iE,IAAlB6iE,EAA8BA,EAAgB,KAMnErpE,KAAKspE,OAAS,EAMdtpE,KAAKupE,SAAW,GAMhBvpE,KAAKwpE,QAAU,KAMfxpE,KAAKypE,QAAU,IAChB,CAKD,cAAAx9B,GACE,OAAOjsC,KAAKqpE,cAAgB,GAAKrpE,KAAKqtD,WAAartD,KAAKqpE,aACzD,CAMD,WAAAK,CAAYC,GACV,KAAO3pE,KAAKisC,kBACVjsC,KAAKiL,KAER,CAKD,KAAAtG,GACE3E,KAAKspE,OAAS,EACdtpE,KAAKupE,SAAW,GAChBvpE,KAAKwpE,QAAU,KACfxpE,KAAKypE,QAAU,IAChB,CAMD,WAAAG,CAAYriE,GACV,OAAOvH,KAAKupE,SAASngE,eAAe7B,EACrC,CAQD,OAAA2D,CAAQC,GACN,IAAI0+D,EAAQ7pE,KAAKwpE,QACjB,KAAOK,GACL1+D,EAAE0+D,EAAMC,OAAQD,EAAME,KAAM/pE,MAC5B6pE,EAAQA,EAAMG,KAEjB,CAOD,GAAA7gE,CAAI5B,EAAKmD,GACP,MAAMm/D,EAAQ7pE,KAAKupE,SAAShiE,GAK5B,OAJAyM,QACYxN,IAAVqjE,EACA,mEAEEA,IAAU7pE,KAAKypE,UAGfI,IAAU7pE,KAAKwpE,SACjBxpE,KAAKwpE,QAAgCxpE,KAAKwpE,QAAa,MACvDxpE,KAAKwpE,QAAQS,MAAQ,OAErBJ,EAAMG,MAAMC,MAAQJ,EAAMI,MAC1BJ,EAAMI,MAAMD,MAAQH,EAAMG,OAE5BH,EAAMG,MAAQ,KACdH,EAAMI,MAAQjqE,KAAKypE,QACnBzpE,KAAKypE,QAAQO,MAAQH,EACrB7pE,KAAKypE,QAAUI,GAZNA,EAAMC,MAchB,CAOD,MAAAr+D,CAAOlE,GACL,MAAMsiE,EAAQ7pE,KAAKupE,SAAShiE,GAqB5B,OApBAyM,QACYxN,IAAVqjE,EACA,mEAEEA,IAAU7pE,KAAKypE,SACjBzpE,KAAKypE,QAAgCI,EAAW,MAC5C7pE,KAAKypE,UACPzpE,KAAKypE,QAAQO,MAAQ,OAEdH,IAAU7pE,KAAKwpE,SACxBxpE,KAAKwpE,QAAgCK,EAAW,MAC5C7pE,KAAKwpE,UACPxpE,KAAKwpE,QAAQS,MAAQ,QAGvBJ,EAAMG,MAAMC,MAAQJ,EAAMI,MAC1BJ,EAAMI,MAAMD,MAAQH,EAAMG,cAErBhqE,KAAKupE,SAAShiE,KACnBvH,KAAKspE,OACAO,EAAMC,MACd,CAKD,QAAAzc,GACE,OAAOrtD,KAAKspE,MACb,CAKD,OAAAjgE,GACE,MAAM1C,EAAO,IAAItE,MAAMrC,KAAKspE,QAC5B,IACIO,EADAjoE,EAAI,EAER,IAAKioE,EAAQ7pE,KAAKypE,QAASI,EAAOA,EAAQA,EAAMI,MAC9CtjE,EAAK/E,KAAOioE,EAAME,KAEpB,OAAOpjE,CACR,CAKD,SAAAujE,GACE,MAAMlhE,EAAS,IAAI3G,MAAMrC,KAAKspE,QAC9B,IACIO,EADAjoE,EAAI,EAER,IAAKioE,EAAQ7pE,KAAKypE,QAASI,EAAOA,EAAQA,EAAMI,MAC9CjhE,EAAOpH,KAAOioE,EAAMC,OAEtB,OAAO9gE,CACR,CAKD,QAAAmhE,GACE,OAAOnqE,KAAKwpE,QAAQM,MACrB,CAKD,WAAAM,GACE,OAAOpqE,KAAKwpE,QAAQO,IACrB,CAMD,YAAAM,GACE,OAAOrqE,KAAKypE,QAAQM,IACrB,CAOD,IAAAO,CAAK/iE,GACH,OAAOvH,KAAKupE,SAAShiE,IAAMuiE,MAC5B,CAKD,GAAA7+D,GACE,MAAM4+D,EAAQ7pE,KAAKwpE,QAUnB,cATOxpE,KAAKupE,SAASM,EAAME,MACvBF,EAAMG,QACRH,EAAMG,MAAMC,MAAQ,MAEtBjqE,KAAKwpE,QAAgCK,EAAW,MAC3C7pE,KAAKwpE,UACRxpE,KAAKypE,QAAU,QAEfzpE,KAAKspE,OACAO,EAAMC,MACd,CAMD,OAAAxmD,CAAQ/b,EAAKlD,GACXrE,KAAKmJ,IAAI5B,GACTvH,KAAKupE,SAAShiE,GAAKuiE,OAASzlE,CAC7B,CAMD,GAAAyF,CAAIvC,EAAKlD,GACP2P,KACIzM,KAAOvH,KAAKupE,UACd,uDAEF,MAAMM,EAAQ,CACZE,KAAMxiE,EACNyiE,MAAO,KACPC,MAAOjqE,KAAKypE,QACZK,OAAQzlE,GAELrE,KAAKypE,QAGRzpE,KAAKypE,QAAQO,MAAQH,EAFrB7pE,KAAKwpE,QAAUK,EAIjB7pE,KAAKypE,QAAUI,EACf7pE,KAAKupE,SAAShiE,GAAOsiE,IACnB7pE,KAAKspE,MACR,CAOD,OAAAl9B,CAAQ34B,GACNzT,KAAKqpE,cAAgB51D,CACtB,GC/QI,SAASgH,GAAe4kB,EAAGjoB,EAAGC,EAAG/K,GACtC,YAAkB9F,IAAd8F,GACFA,EAAU,GAAK+yB,EACf/yB,EAAU,GAAK8K,EACf9K,EAAU,GAAK+K,EACR/K,GAEF,CAAC+yB,EAAGjoB,EAAGC,EAChB,CAQO,SAASkzD,GAAUlrC,EAAGjoB,EAAGC,GAC9B,OAAOgoB,EAAI,IAAMjoB,EAAI,IAAMC,CAC7B,CAOO,SAAStK,GAAOT,GACrB,OAAOi+D,GAAUj+D,EAAU,GAAIA,EAAU,GAAIA,EAAU,GACzD,CAoBO,SAASk+D,GAAQjjE,GACtB,OAAOA,EAAIoe,MAAM,KAAKilB,IAAIX,OAC5B,CAMO,SAASwgC,GAAKn+D,GACnB,OAAQA,EAAU,IAAMA,EAAU,IAAMA,EAAU,EACpD,CAOO,SAASo+D,GAAiBp+D,EAAWqV,GAC1C,MAAM0d,EAAI/yB,EAAU,GACd8K,EAAI9K,EAAU,GACd+K,EAAI/K,EAAU,GAEpB,GAAIqV,EAASqsB,aAAe3O,GAAKA,EAAI1d,EAASssB,aAC5C,OAAO,EAET,MAAM08B,EAAYhpD,EAASipD,iBAAiBvrC,GAC5C,OAAKsrC,GAGEA,EAAU7wD,WAAW1C,EAAGC,EACjC,CChDA,IAAAwzD,GAzCA,cAAwBC,GACtB,KAAAnmE,GACE,KAAO3E,KAAKqtD,WAAa,GACvBrtD,KAAKiL,MAAM4B,UAEb5H,MAAMN,OACP,CAKD,WAAA+kE,CAAYzD,GACV,KAAOjmE,KAAKisC,kBAAkB,CAE5B,GADajsC,KAAKmqE,WACTp9D,WAAYk5D,EACnB,MAEAjmE,KAAKiL,MAAM4B,SAEd,CACF,CAKD,kBAAAk+D,GACE,GAAwB,IAApB/qE,KAAKqtD,WACP,OAEF,MAEMhuB,EADYmrC,GADNxqE,KAAKqqE,gBAEG,GACpBrqE,KAAKkL,SAAS+B,IACRA,EAAKX,UAAU,KAAO+yB,IACxBr/B,KAAKyL,OAAOsB,GAAOE,EAAKX,YACxBW,EAAKJ,UACN,GAEJ,GCpCH,MAAMm+D,GAOJ,WAAAlrE,CAAYqa,EAAME,EAAMD,EAAME,GAI5Bta,KAAKma,KAAOA,EAKZna,KAAKqa,KAAOA,EAKZra,KAAKoa,KAAOA,EAKZpa,KAAKsa,KAAOA,CACb,CAMD,QAAAw4C,CAASxmD,GACP,OAAOtM,KAAK8Z,WAAWxN,EAAU,GAAIA,EAAU,GAChD,CAMD,iBAAA2+D,CAAkBN,GAChB,OACE3qE,KAAKma,MAAQwwD,EAAUxwD,MACvBwwD,EAAUtwD,MAAQra,KAAKqa,MACvBra,KAAKoa,MAAQuwD,EAAUvwD,MACvBuwD,EAAUrwD,MAAQta,KAAKsa,IAE1B,CAOD,UAAAR,CAAW1C,EAAGC,GACZ,OAAOrX,KAAKma,MAAQ/C,GAAKA,GAAKpX,KAAKqa,MAAQra,KAAKoa,MAAQ/C,GAAKA,GAAKrX,KAAKsa,IACxE,CAMD,MAAA/X,CAAOooE,GACL,OACE3qE,KAAKma,MAAQwwD,EAAUxwD,MACvBna,KAAKoa,MAAQuwD,EAAUvwD,MACvBpa,KAAKqa,MAAQswD,EAAUtwD,MACvBra,KAAKsa,MAAQqwD,EAAUrwD,IAE1B,CAKD,MAAApY,CAAOyoE,GACDA,EAAUxwD,KAAOna,KAAKma,OACxBna,KAAKma,KAAOwwD,EAAUxwD,MAEpBwwD,EAAUtwD,KAAOra,KAAKqa,OACxBra,KAAKqa,KAAOswD,EAAUtwD,MAEpBswD,EAAUvwD,KAAOpa,KAAKoa,OACxBpa,KAAKoa,KAAOuwD,EAAUvwD,MAEpBuwD,EAAUrwD,KAAOta,KAAKsa,OACxBta,KAAKsa,KAAOqwD,EAAUrwD,KAEzB,CAKD,SAAA8B,GACE,OAAOpc,KAAKsa,KAAOta,KAAKoa,KAAO,CAChC,CAKD,OAAA1G,GACE,MAAO,CAAC1T,KAAKmc,WAAYnc,KAAKoc,YAC/B,CAKD,QAAAD,GACE,OAAOnc,KAAKqa,KAAOra,KAAKma,KAAO,CAChC,CAMD,UAAA0D,CAAW8sD,GACT,OACE3qE,KAAKma,MAAQwwD,EAAUtwD,MACvBra,KAAKqa,MAAQswD,EAAUxwD,MACvBna,KAAKoa,MAAQuwD,EAAUrwD,MACvBta,KAAKsa,MAAQqwD,EAAUvwD,IAE1B,EAWI,SAASK,GAAeN,EAAME,EAAMD,EAAME,EAAMqwD,GACrD,YAAkBnkE,IAAdmkE,GACFA,EAAUxwD,KAAOA,EACjBwwD,EAAUtwD,KAAOA,EACjBswD,EAAUvwD,KAAOA,EACjBuwD,EAAUrwD,KAAOA,EACVqwD,GAEF,IAAIK,GAAU7wD,EAAME,EAAMD,EAAME,EACzC,CAEA,IAAA4wD,GAAeF,GCnIf,MAAMt7D,GAAa,GAgJnB,IAAAy7D,GA9IA,cAA+Bh4D,GAQ7B,WAAArT,CAAYwM,EAAWC,EAAO6+D,EAAcC,GAC1CpmE,MAAMqH,EAAWC,EAAO,CAACG,WAAY,IAMrC1M,KAAKsrE,SAAW,GAMhBtrE,KAAKurE,eAAiB,GAMtBvrE,KAAKwrE,wBAA0B,GAM/BxrE,KAAKyrE,mBAAqB,EAK1BzrE,KAAK0rE,sBAAwB,GAM7B1rE,KAAK2rE,aAAe,GAKpB3rE,KAAK4rE,YAAc,GAKnB5rE,KAAK6rE,cAAgB,GAKrB7rE,KAAK8rE,iBAKL9rE,KAAKqrE,eAAiBA,EAAenkE,UAAKV,EAAWxG,MAKrDA,KAAK+rE,iBAAmBX,CACzB,CAMD,UAAAp7D,CAAW09B,GACT,MAAMnmC,EAAMkB,EAAOilC,GAInB,OAHMnmC,KAAOvH,KAAKsrE,WAChBtrE,KAAKsrE,SAAS/jE,GAAOgI,GAAsB,EAAG,EAAGG,KAE5C1P,KAAKsrE,SAAS/jE,EACtB,CAMD,UAAAykE,CAAWt+B,GACT,OAAOjlC,EAAOilC,KAAU1tC,KAAKsrE,QAC9B,CAOD,QAAAhwC,CAASoS,GACP,OAAO1tC,KAAKgsE,WAAWt+B,GAAS1tC,KAAKgQ,WAAW09B,GAAO99B,OAAS,IACjE,CAMD,cAAAq8D,CAAev+B,GACb,MAAMnmC,EAAMkB,EAAOilC,GAYnB,OAXMnmC,KAAOvH,KAAK2rE,eAChB3rE,KAAK2rE,aAAapkE,GAAO,CACvB2kE,OAAO,EACPC,oBAAqB,KACrBC,mBAAoBj+C,IACpBk+C,kBAAmB,EACnBC,uBAAwBn+C,IACxBo+C,sBAAuB,EACvBC,eAAgB,IAGbxsE,KAAK2rE,aAAapkE,EAC1B,CAKD,IAAA8F,GACErN,KAAKqrE,gBACN,CAKD,OAAAx+D,GACE,IAAK,MAAMtF,KAAOvH,KAAKsrE,SAAU,CAC/B,MAAMp7D,EAAUlQ,KAAKsrE,SAAS/jE,GAC9B0I,GAAcC,GACdR,GAAW/J,KAAKuK,EAAQN,eACjB5P,KAAKsrE,SAAS/jE,EACtB,CACDtC,MAAM4H,SACP,GC5II,SAAS4/D,GAAY1iC,GAC1B,OAAI1nC,MAAMC,QAAQynC,GACTpxB,GAASoxB,GAEXA,CACT,CCjBA,ICiII2iC,GDjIAC,IAAkB,EAgDf,SAASC,GACdC,EACA/lD,EACAvN,EACAmD,EACAwC,EACA4tD,EACAC,GAEA,MAAMC,EAAM,IAAIC,eAChBD,EAAIE,KACF,MACe,mBAARL,EAAqBA,EAAItzD,EAAQmD,EAAYwC,GAAc2tD,GAClE,GAEsB,eAApB/lD,EAAO0H,YACTw+C,EAAIG,aAAe,eAErBH,EAAIL,gBAAkBA,GAKtBK,EAAII,OAAS,SAAUvnE,GAErB,IAAKmnE,EAAIK,QAAWL,EAAIK,QAAU,KAAOL,EAAIK,OAAS,IAAM,CAC1D,MAAMttE,EAAO+mB,EAAO0H,UAEpB,IAAIvkB,EACQ,QAARlK,EACFkK,EAASqjE,KAAKtiC,MAAMgiC,EAAIO,cACP,QAARxtE,EACTkK,EAAS+iE,EAAIO,aACI,OAARxtE,GACTkK,EAAS+iE,EAAIQ,YACRvjE,IACHA,GAAS,IAAIwjE,WAAYC,gBACvBV,EAAIO,aACJ,qBAGa,eAARxtE,IACTkK,EAAqC+iE,EAAY,UAE/C/iE,EACF6iE,EAGIhmD,EAAO6mD,aAAa1jE,EAAQ,CAC1BsP,OAAQA,EACRq0D,kBAAmB1uD,IAGvB4H,EAAO+mD,eAAe5jE,IAGxB8iE,GAER,MACMA,GAEN,EAIEC,EAAIc,QAAUf,EACdC,EAAIe,MACN,CAWO,SAASf,GAAIH,EAAK/lD,GAUvB,OAAO,SAAUvN,EAAQmD,EAAYwC,EAAY4tD,EAASC,GACxD,MAAM9iE,EAA2D,KACjE2iE,GACEC,EACA/lD,EACAvN,EACAmD,EACAwC,GAMA,SAAU+jD,EAAU+K,GAClB/jE,EAAOgkE,YAAYhL,QACHz8D,IAAZsmE,GACFA,EAAQ7J,EAEX,GACwB8J,GAAoB1pE,EAEnD,CACA,CE3JO,SAAS2yD,GAAIz8C,EAAQmD,GAC1B,MAAO,CAAC,EAAElC,KAAWA,IAAUA,IAAUA,KAC3C,CDCO,SAAS0zD,GAAMrB,EAAKlxD,EAAUwyD,EAASC,GAC5C,MAAMC,EAASv+D,SAASC,cAAc,UAChCxI,EAAM,OAASkB,EAAOkT,GAC5B,SAAS2yD,WACAj/D,OAAO9H,GACd8mE,EAAOl9D,WAAWI,YAAY88D,EAC/B,CACDA,EAAOE,OAAQ,EACfF,EAAO1zC,IACLkyC,GACCA,EAAInnE,SAAS,KAAO,IAAM,MAC1B0oE,GAAiB,YAClB,IACA7mE,EACF,MAAMinE,EAAQh9B,YAAW,WACvB88B,IACIH,GACFA,GAEH,GAAE,KACH9+D,OAAO9H,GAAO,SAAUpF,GACtB+oD,aAAasjB,GACbF,IACA3yD,EAASxZ,EACb,EACE2N,SAAS2+D,KAAKx8D,YAAYo8D,EAC5B,CAEO,MAAMK,WAAsBnmE,MAIjC,WAAAzI,CAAY6uE,GAEV1pE,MADgB,+BAAiC0pE,EAAStB,QAM1DrtE,KAAKyV,KAAO,gBAKZzV,KAAK2uE,SAAWA,CACjB,EAGI,MAAMC,WAAoBrmE,MAI/B,WAAAzI,CAAY+uE,GACV5pE,MAAM,2BAKNjF,KAAKyV,KAAO,cAKZzV,KAAK6uE,OAASA,CACf,EAOI,SAASC,GAAQjC,GACtB,OAAO,IAAItoE,SAAQ,SAAUE,EAASD,GA8BpC,MAAMqqE,EAAS,IAAI5B,eACnB4B,EAAOvpE,iBAAiB,QA3BxB,SAAgBO,GACd,MAAMgpE,EAAShpE,EAAM1F,OAErB,IAAK0uE,EAAOxB,QAAWwB,EAAOxB,QAAU,KAAOwB,EAAOxB,OAAS,IAA/D,CACE,IAAIlrE,EACJ,IACEA,EAAOmrE,KAAKtiC,MAAM6jC,EAAOtB,aAC1B,CAAC,MAAOjpE,GACP,MAAMuzB,EAAU,wCAA0CvzB,EAAIuzB,QAE9D,YADArzB,EAAO,IAAI+D,MAAMsvB,GAElB,CACDpzB,EAAQtC,EAET,MAEDqC,EAAO,IAAIkqE,GAAcG,GAC1B,IAWDA,EAAOvpE,iBAAiB,SANxB,SAAiBO,GACfrB,EAAO,IAAIoqE,GAAY/oE,EAAM1F,QAC9B,IAKD0uE,EAAO3B,KAAK,MAAOL,GACnBgC,EAAOE,iBAAiB,SAAU,oBAClCF,EAAOd,MACX,GACA,CAOO,SAASiB,GAAWxkC,EAAMqiC,GAC/B,OAAIA,EAAInnE,SAAS,OACRmnE,EAEF,IAAIoC,IAAIpC,EAAKriC,GAAM0kC,IAC5B,CEvBA,IAAAC,GAxGA,MASE,UAAAC,CAAWz6D,EAAU8qC,EAASukB,EAAUqL,GAAwB,CAOhE,YAAAC,CAAa36D,GAAY,CAOzB,QAAAQ,CAAS7E,GAAS,CAMlB,UAAAi/D,CAAWC,EAAgB/vB,GAAW,CAMtC,WAAAgwB,CAAYhwB,EAASnvC,GAAS,CAM9B,sBAAAo/D,CAAuBC,EAA4BlwB,GAAW,CAM9D,cAAAmwB,CAAeC,EAAoBpwB,GAAW,CAM9C,mBAAAqwB,CAAoBC,EAAyBtwB,GAAW,CAMxD,cAAAuwB,CAAeC,EAAoBxwB,GAAW,CAM9C,gBAAAywB,CAAiBC,EAAsB1wB,GAAW,CAMlD,SAAA2wB,CAAUC,EAAe5wB,GAAW,CAMpC,WAAA6wB,CAAYC,EAAiB9wB,GAAW,CAMxC,QAAA+wB,CAAS77D,EAAU8qC,GAAW,CAM9B,kBAAAgxB,CAAmB7zC,EAAW8zC,GAAe,CAM7C,aAAAC,CAAcC,EAAYC,GAA0B,CAMpD,YAAAC,CAAaC,EAAWF,GAA0B,GC4iCpD,IAAAG,GAlnCA,cAAsCC,GAUpC,WAAAnxE,CACEoQ,EACAgrB,EACA3hB,EACAxD,EACAm7D,EACAtjD,EACAujD,GAEAlsE,QAMAjF,KAAKsrE,SAAWp7D,EAMhBlQ,KAAKo7B,YAAcF,EAMnBl7B,KAAKqgB,QAAU9G,EAMfvZ,KAAKg4B,WAAajiB,EAMlB/V,KAAKoxE,mBAAqBr7D,EACtB8O,GAAQ7Y,KAAKmc,MAAMpS,EAAU,GAAIA,EAAU,IAAK,IAChD,EAMJ/V,KAAKqxE,cAAgBH,EAMrBlxE,KAAKsxE,kBAAoB1jD,EAMzB5tB,KAAKuxE,eAAiBJ,EAMtBnxE,KAAKwxE,kBAAoB,KAMzBxxE,KAAKyxE,oBAAsB,KAM3BzxE,KAAK0xE,kBAAoB,KAMzB1xE,KAAK2xE,WAAa,KAMlB3xE,KAAK4xE,aAAe,KAMpB5xE,KAAKq7B,OAAS,KAMdr7B,KAAK6xE,cAAgB,EAMrB7xE,KAAK8xE,cAAgB,EAMrB9xE,KAAK+xE,aAAe,EAMpB/xE,KAAKgyE,cAAgB,EAMrBhyE,KAAKiyE,cAAgB,EAMrBjyE,KAAKkyE,cAAgB,EAMrBlyE,KAAKmyE,sBAAuB,EAM5BnyE,KAAKoyE,eAAiB,EAMtBpyE,KAAKqyE,YAAc,CAAC,EAAG,GAMvBryE,KAAKsyE,YAAc,EAMnBtyE,KAAKuyE,MAAQ,GAMbvyE,KAAKwyE,aAAe,EAMpBxyE,KAAKyyE,aAAe,EAMpBzyE,KAAK0yE,qBAAsB,EAM3B1yE,KAAK2yE,cAAgB,EAMrB3yE,KAAK4yE,WAAa,CAAC,EAAG,GAMtB5yE,KAAK6yE,eAAiB,KAMtB7yE,KAAK8yE,iBAAmB,KAMxB9yE,KAAK+yE,WAAa,KAMlB/yE,KAAKgzE,kBAAoB,GAMzBhzE,KAAKizE,mB7G5OA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,E6G6OtB,CASD,WAAAC,CAAYr4D,EAAiBC,EAAQ9Y,EAAK+Y,GACxC,IAAK/a,KAAKq7B,OACR,OAEF,MAAM83C,EAAmBlmD,GACvBpS,EACAC,EACA9Y,EACA+Y,EACA/a,KAAKg4B,WACLh4B,KAAKgzE,mBAED9iE,EAAUlQ,KAAKsrE,SACf8H,EAAiBpzE,KAAKizE,mBACtB3oC,EAAQp6B,EAAQs1C,YACI,GAAtBxlD,KAAKgyE,gBACP9hE,EAAQs1C,YAAclb,EAAQtqC,KAAKgyE,eAErC,IAAIr1D,EAAW3c,KAAKoyE,eACY,IAA5BpyE,KAAKoxE,qBACPz0D,GAAY3c,KAAKqxE,eAEfrxE,KAAKmyE,uBACPx1D,GAAY3c,KAAKqxE,eAEnB,IAAK,IAAIzvE,EAAI,EAAGuE,EAAKgtE,EAAiBhyE,OAAQS,EAAIuE,EAAIvE,GAAK,EAAG,CAC5D,MAAMwV,EAAI+7D,EAAiBvxE,GAAK5B,KAAK6xE,cAC/Bx6D,EAAI87D,EAAiBvxE,EAAI,GAAK5B,KAAK8xE,cACzC,GACe,IAAbn1D,GACuB,GAAvB3c,KAAKqyE,YAAY,IACM,GAAvBryE,KAAKqyE,YAAY,GACjB,CACA,MAAMh4B,EAAUjjC,EAAIpX,KAAK6xE,cACnBv3B,EAAUjjC,EAAIrX,KAAK8xE,cACzB/iD,GACEqkD,EACA/4B,EACAC,EACA,EACA,EACA39B,GACC09B,GACAC,GAEHpqC,EAAQq1C,OACRr1C,EAAQ6F,UAAU7R,MAAMgM,EAASkjE,GACjCljE,EAAQ0H,UAAUyiC,EAASC,GAC3BpqC,EAAQwH,MAAM1X,KAAKqyE,YAAY,GAAIryE,KAAKqyE,YAAY,IACpDniE,EAAQ6C,UACN/S,KAAKq7B,OACLr7B,KAAKiyE,cACLjyE,KAAKkyE,cACLlyE,KAAKsyE,YACLtyE,KAAK+xE,cACJ/xE,KAAK6xE,eACL7xE,KAAK8xE,cACN9xE,KAAKsyE,YACLtyE,KAAK+xE,cAEP7hE,EAAQ01C,SAChB,MACQ11C,EAAQ6C,UACN/S,KAAKq7B,OACLr7B,KAAKiyE,cACLjyE,KAAKkyE,cACLlyE,KAAKsyE,YACLtyE,KAAK+xE,aACL36D,EACAC,EACArX,KAAKsyE,YACLtyE,KAAK+xE,aAGV,CACyB,GAAtB/xE,KAAKgyE,gBACP9hE,EAAQs1C,YAAclb,EAEzB,CASD,SAAA+oC,CAAUx4D,EAAiBC,EAAQ9Y,EAAK+Y,GACtC,IAAK/a,KAAK+yE,YAA6B,KAAf/yE,KAAKuyE,MAC3B,OAEEvyE,KAAK6yE,gBACP7yE,KAAKszE,qBAAqBtzE,KAAK6yE,gBAE7B7yE,KAAK8yE,kBACP9yE,KAAKuzE,uBAAuBvzE,KAAK8yE,kBAEnC9yE,KAAKwzE,qBAAqBxzE,KAAK+yE,YAC/B,MAAMI,EAAmBlmD,GACvBpS,EACAC,EACA9Y,EACA+Y,EACA/a,KAAKg4B,WACLh4B,KAAKgzE,mBAED9iE,EAAUlQ,KAAKsrE,SACrB,IAAI3uD,EAAW3c,KAAK2yE,cAOpB,IANgC,IAA5B3yE,KAAKoxE,qBACPz0D,GAAY3c,KAAKqxE,eAEfrxE,KAAK0yE,sBACP/1D,GAAY3c,KAAKqxE,eAEZv2D,EAAS9Y,EAAK8Y,GAAUC,EAAQ,CACrC,MAAM3D,EAAI+7D,EAAiBr4D,GAAU9a,KAAKwyE,aACpCn7D,EAAI87D,EAAiBr4D,EAAS,GAAK9a,KAAKyyE,aAE/B,IAAb91D,GACsB,GAAtB3c,KAAK4yE,WAAW,IACM,GAAtB5yE,KAAK4yE,WAAW,IAEhB1iE,EAAQq1C,OACRr1C,EAAQ0H,UAAUR,EAAIpX,KAAKwyE,aAAcn7D,EAAIrX,KAAKyyE,cAClDviE,EAAQoH,OAAOqF,GACfzM,EAAQ0H,UAAU5X,KAAKwyE,aAAcxyE,KAAKyyE,cAC1CviE,EAAQwH,MAAM1X,KAAK4yE,WAAW,GAAI5yE,KAAK4yE,WAAW,IAC9C5yE,KAAK8yE,kBACP5iE,EAAQujE,WAAWzzE,KAAKuyE,MAAO,EAAG,GAEhCvyE,KAAK6yE,gBACP3iE,EAAQwjE,SAAS1zE,KAAKuyE,MAAO,EAAG,GAElCriE,EAAQ01C,YAEJ5lD,KAAK8yE,kBACP5iE,EAAQujE,WAAWzzE,KAAKuyE,MAAOn7D,EAAGC,GAEhCrX,KAAK6yE,gBACP3iE,EAAQwjE,SAAS1zE,KAAKuyE,MAAOn7D,EAAGC,GAGrC,CACF,CAWD,aAAAs8D,CAAc94D,EAAiBC,EAAQ9Y,EAAK+Y,EAAQ64D,GAClD,MAAM1jE,EAAUlQ,KAAKsrE,SACf6H,EAAmBlmD,GACvBpS,EACAC,EACA9Y,EACA+Y,EACA/a,KAAKg4B,WACLh4B,KAAKgzE,mBAEP9iE,EAAQ2jE,OAAOV,EAAiB,GAAIA,EAAiB,IACrD,IAAIhyE,EAASgyE,EAAiBhyE,OAC1ByyE,IACFzyE,GAAU,GAEZ,IAAK,IAAIS,EAAI,EAAGA,EAAIT,EAAQS,GAAK,EAC/BsO,EAAQ4jE,OAAOX,EAAiBvxE,GAAIuxE,EAAiBvxE,EAAI,IAK3D,OAHIgyE,GACF1jE,EAAQ6jE,YAEH/xE,CACR,CAUD,UAAAgyE,CAAWn5D,EAAiBC,EAAQ4V,EAAM3V,GACxC,IAAK,IAAInZ,EAAI,EAAGuE,EAAKuqB,EAAKvvB,OAAQS,EAAIuE,IAAMvE,EAC1CkZ,EAAS9a,KAAK2zE,cACZ94D,EACAC,EACA4V,EAAK9uB,GACLmZ,GACA,GAGJ,OAAOD,CACR,CASD,UAAAy0D,CAAW56D,GAST,GARI3U,KAAKsxE,oBACP38D,EACEA,EAASmZ,oBACP9tB,KAAKsxE,kBACLtxE,KAAKuxE,iBAIN1zD,GAAW7d,KAAKqgB,QAAS1L,EAASyK,aAAvC,CAGA,GAAIpf,KAAK2xE,YAAc3xE,KAAK4xE,aAAc,CACpC5xE,KAAK2xE,YACP3xE,KAAKszE,qBAAqBtzE,KAAK2xE,YAE7B3xE,KAAK4xE,cACP5xE,KAAKuzE,uBAAuBvzE,KAAK4xE,cAEnC,MAAMuB,EAAmBhkD,GACvBxa,EACA3U,KAAKg4B,WACLh4B,KAAKgzE,mBAEDn7D,EAAKs7D,EAAiB,GAAKA,EAAiB,GAC5Cr7D,EAAKq7D,EAAiB,GAAKA,EAAiB,GAC5CrrD,EAAS9b,KAAKka,KAAKrO,EAAKA,EAAKC,EAAKA,GAClC5H,EAAUlQ,KAAKsrE,SACrBp7D,EAAQ+jE,YACR/jE,EAAQgkE,IACNf,EAAiB,GACjBA,EAAiB,GACjBrrD,EACA,EACA,EAAI9b,KAAK6T,IAEP7f,KAAK2xE,YACPzhE,EAAQikE,OAENn0E,KAAK4xE,cACP1hE,EAAQkkE,QAEX,CACkB,KAAfp0E,KAAKuyE,OACPvyE,KAAKqzE,UAAU1+D,EAAS0H,YAAa,EAAG,EAAG,EAjC5C,CAmCF,CASD,QAAAlH,CAAS7E,GACPtQ,KAAKywE,mBAAmBngE,EAAM+jE,UAAW/jE,EAAMgkE,aAC/Ct0E,KAAK2wE,cAAcrgE,EAAMgrB,YACzBt7B,KAAK8wE,aAAaxgE,EAAMikE,UACzB,CAKD,YAAAC,CAAaz+D,GACX/V,KAAKg4B,WAAajiB,CACnB,CASD,YAAAu5D,CAAa36D,GAEX,OADaA,EAAS6Z,WAEpB,IAAK,QACHxuB,KAAKowE,UACb,GAEQ,MACF,IAAK,aACHpwE,KAAK4vE,eACb,GAEQ,MACF,IAAK,UACH5vE,KAAKswE,YACb,GAEQ,MACF,IAAK,aACHtwE,KAAKgwE,eACb,GAEQ,MACF,IAAK,kBACHhwE,KAAK8vE,oBACb,GAIQ,MACF,IAAK,eACH9vE,KAAKkwE,iBACb,GAEQ,MACF,IAAK,qBACHlwE,KAAK0vE,uBACb,GAIQ,MACF,IAAK,SACH1vE,KAAKuvE,WACb,GAKG,CAYD,WAAAE,CAAYhwB,EAASnvC,GACnB,MAAMqE,EAAWrE,EAAMmkE,qBAANnkE,CAA4BmvC,GACxC9qC,IAGL3U,KAAKmV,SAAS7E,GACdtQ,KAAKsvE,aAAa36D,GACnB,CAQD,sBAAA+6D,CAAuB/6D,GACrB,MAAM+/D,EAAa//D,EAASggE,qBAC5B,IAAK,IAAI/yE,EAAI,EAAGuE,EAAKuuE,EAAWvzE,OAAQS,EAAIuE,IAAMvE,EAChD5B,KAAKsvE,aAAaoF,EAAW9yE,GAEhC,CAQD,SAAAwuE,CAAUz7D,GACJ3U,KAAKsxE,oBACP38D,EACEA,EAASmZ,oBACP9tB,KAAKsxE,kBACLtxE,KAAKuxE,iBAIX,MAAM12D,EAAkBlG,EAAS0a,qBAC3BtU,EAASpG,EAAS2a,YACpBtvB,KAAKq7B,QACPr7B,KAAKkzE,YAAYr4D,EAAiB,EAAGA,EAAgB1Z,OAAQ4Z,GAE5C,KAAf/a,KAAKuyE,OACPvyE,KAAKqzE,UAAUx4D,EAAiB,EAAGA,EAAgB1Z,OAAQ4Z,EAE9D,CAQD,cAAAi1D,CAAer7D,GACT3U,KAAKsxE,oBACP38D,EACEA,EAASmZ,oBACP9tB,KAAKsxE,kBACLtxE,KAAKuxE,iBAIX,MAAM12D,EAAkBlG,EAAS0a,qBAC3BtU,EAASpG,EAAS2a,YACpBtvB,KAAKq7B,QACPr7B,KAAKkzE,YAAYr4D,EAAiB,EAAGA,EAAgB1Z,OAAQ4Z,GAE5C,KAAf/a,KAAKuyE,OACPvyE,KAAKqzE,UAAUx4D,EAAiB,EAAGA,EAAgB1Z,OAAQ4Z,EAE9D,CAQD,cAAA60D,CAAej7D,GASb,GARI3U,KAAKsxE,oBACP38D,EACEA,EAASmZ,oBACP9tB,KAAKsxE,kBACLtxE,KAAKuxE,iBAIN1zD,GAAW7d,KAAKqgB,QAAS1L,EAASyK,aAAvC,CAGA,GAAIpf,KAAK4xE,aAAc,CACrB5xE,KAAKuzE,uBAAuBvzE,KAAK4xE,cACjC,MAAM1hE,EAAUlQ,KAAKsrE,SACfzwD,EAAkBlG,EAAS0a,qBACjCnf,EAAQ+jE,YACRj0E,KAAK2zE,cACH94D,EACA,EACAA,EAAgB1Z,OAChBwT,EAAS2a,aACT,GAEFpf,EAAQkkE,QACT,CACD,GAAmB,KAAfp0E,KAAKuyE,MAAc,CACrB,MAAMqC,EAAejgE,EAASkgE,kBAC9B70E,KAAKqzE,UAAUuB,EAAc,EAAG,EAAG,EACpC,CAlBA,CAmBF,CAQD,mBAAA9E,CAAoBn7D,GACd3U,KAAKsxE,oBACP38D,EAEIA,EAASmZ,oBACP9tB,KAAKsxE,kBACLtxE,KAAKuxE,iBAIb,MAAMuD,EAAiBngE,EAASyK,YAChC,GAAKvB,GAAW7d,KAAKqgB,QAASy0D,GAA9B,CAGA,GAAI90E,KAAK4xE,aAAc,CACrB5xE,KAAKuzE,uBAAuBvzE,KAAK4xE,cACjC,MAAM1hE,EAAUlQ,KAAKsrE,SACfzwD,EAAkBlG,EAAS0a,qBACjC,IAAIvU,EAAS,EACb,MAAM4V,EAAqC/b,EAAS8hB,UAC9C1b,EAASpG,EAAS2a,YACxBpf,EAAQ+jE,YACR,IAAK,IAAIryE,EAAI,EAAGuE,EAAKuqB,EAAKvvB,OAAQS,EAAIuE,IAAMvE,EAC1CkZ,EAAS9a,KAAK2zE,cACZ94D,EACAC,EACA4V,EAAK9uB,GACLmZ,GACA,GAGJ7K,EAAQkkE,QACT,CACD,GAAmB,KAAfp0E,KAAKuyE,MAAc,CACrB,MAAMwC,EAAgBpgE,EAASqgE,mBAC/Bh1E,KAAKqzE,UAAU0B,EAAe,EAAGA,EAAc5zE,OAAQ,EACxD,CAvBA,CAwBF,CAQD,WAAAmvE,CAAY37D,GASV,GARI3U,KAAKsxE,oBACP38D,EACEA,EAASmZ,oBACP9tB,KAAKsxE,kBACLtxE,KAAKuxE,iBAIN1zD,GAAW7d,KAAKqgB,QAAS1L,EAASyK,aAAvC,CAGA,GAAIpf,KAAK4xE,cAAgB5xE,KAAK2xE,WAAY,CACpC3xE,KAAK2xE,YACP3xE,KAAKszE,qBAAqBtzE,KAAK2xE,YAE7B3xE,KAAK4xE,cACP5xE,KAAKuzE,uBAAuBvzE,KAAK4xE,cAEnC,MAAM1hE,EAAUlQ,KAAKsrE,SACrBp7D,EAAQ+jE,YACRj0E,KAAKg0E,WACHr/D,EAAS4hB,6BACT,EAC8B5hB,EAAS8hB,UACvC9hB,EAAS2a,aAEPtvB,KAAK2xE,YACPzhE,EAAQikE,OAENn0E,KAAK4xE,cACP1hE,EAAQkkE,QAEX,CACD,GAAmB,KAAfp0E,KAAKuyE,MAAc,CACrB,MAAM0C,EAAoBtgE,EAAS+hB,uBACnC12B,KAAKqzE,UAAU4B,EAAmB,EAAG,EAAG,EACzC,CA1BA,CA2BF,CAOD,gBAAA/E,CAAiBv7D,GASf,GARI3U,KAAKsxE,oBACP38D,EACEA,EAASmZ,oBACP9tB,KAAKsxE,kBACLtxE,KAAKuxE,iBAIN1zD,GAAW7d,KAAKqgB,QAAS1L,EAASyK,aAAvC,CAGA,GAAIpf,KAAK4xE,cAAgB5xE,KAAK2xE,WAAY,CACpC3xE,KAAK2xE,YACP3xE,KAAKszE,qBAAqBtzE,KAAK2xE,YAE7B3xE,KAAK4xE,cACP5xE,KAAKuzE,uBAAuBvzE,KAAK4xE,cAEnC,MAAM1hE,EAAUlQ,KAAKsrE,SACfzwD,EAAkBlG,EAAS4hB,6BACjC,IAAIzb,EAAS,EACb,MAAM8V,EAAQjc,EAASugE,WACjBn6D,EAASpG,EAAS2a,YACxBpf,EAAQ+jE,YACR,IAAK,IAAIryE,EAAI,EAAGuE,EAAKyqB,EAAMzvB,OAAQS,EAAIuE,IAAMvE,EAAG,CAC9C,MAAM8uB,EAAOE,EAAMhvB,GACnBkZ,EAAS9a,KAAKg0E,WAAWn5D,EAAiBC,EAAQ4V,EAAM3V,EACzD,CACG/a,KAAK2xE,YACPzhE,EAAQikE,OAENn0E,KAAK4xE,cACP1hE,EAAQkkE,QAEX,CACD,GAAmB,KAAfp0E,KAAKuyE,MAAc,CACrB,MAAM4C,EAAqBxgE,EAASygE,wBACpCp1E,KAAKqzE,UAAU8B,EAAoB,EAAGA,EAAmBh0E,OAAQ,EAClE,CA5BA,CA6BF,CAMD,oBAAAmyE,CAAqB+B,GACnB,MAAMnlE,EAAUlQ,KAAKsrE,SACfgK,EAAmBt1E,KAAKwxE,kBACzB8D,EAMCA,EAAiB14C,WAAay4C,EAAUz4C,YAC1C04C,EAAiB14C,UAAYy4C,EAAUz4C,UACvC1sB,EAAQ0sB,UAAYy4C,EAAUz4C,YAPhC1sB,EAAQ0sB,UAAYy4C,EAAUz4C,UAC9B58B,KAAKwxE,kBAAoB,CACvB50C,UAAWy4C,EAAUz4C,WAQ1B,CAMD,sBAAA22C,CAAuBgC,GACrB,MAAMrlE,EAAUlQ,KAAKsrE,SACfkK,EAAqBx1E,KAAKyxE,oBAC3B+D,GAkBCA,EAAmBC,SAAWF,EAAYE,UAC5CD,EAAmBC,QAAUF,EAAYE,QACzCvlE,EAAQulE,QAAUF,EAAYE,SAE3BlzE,EAAOizE,EAAmBE,SAAUH,EAAYG,WACnDxlE,EAAQylE,YACLH,EAAmBE,SAAWH,EAAYG,UAG3CF,EAAmBI,gBAAkBL,EAAYK,iBACnDJ,EAAmBI,eAAiBL,EAAYK,eAChD1lE,EAAQ0lE,eAAiBL,EAAYK,gBAEnCJ,EAAmBK,UAAYN,EAAYM,WAC7CL,EAAmBK,SAAWN,EAAYM,SAC1C3lE,EAAQ2lE,SAAWN,EAAYM,UAE7BL,EAAmBxwB,WAAauwB,EAAYvwB,YAC9CwwB,EAAmBxwB,UAAYuwB,EAAYvwB,UAC3C90C,EAAQ80C,UAAYuwB,EAAYvwB,WAE9BwwB,EAAmBM,YAAcP,EAAYO,aAC/CN,EAAmBM,WAAaP,EAAYO,WAC5C5lE,EAAQ4lE,WAAaP,EAAYO,YAE/BN,EAAmB9E,aAAe6E,EAAY7E,cAChD8E,EAAmB9E,YAAc6E,EAAY7E,YAC7CxgE,EAAQwgE,YAAc6E,EAAY7E,eA5CpCxgE,EAAQulE,QAAUF,EAAYE,QAC9BvlE,EAAQylE,YAAYJ,EAAYG,UAChCxlE,EAAQ0lE,eAAiBL,EAAYK,eACrC1lE,EAAQ2lE,SAAWN,EAAYM,SAC/B3lE,EAAQ80C,UAAYuwB,EAAYvwB,UAChC90C,EAAQ4lE,WAAaP,EAAYO,WACjC5lE,EAAQwgE,YAAc6E,EAAY7E,YAClC1wE,KAAKyxE,oBAAsB,CACzBgE,QAASF,EAAYE,QACrBC,SAAUH,EAAYG,SACtBE,eAAgBL,EAAYK,eAC5BC,SAAUN,EAAYM,SACtB7wB,UAAWuwB,EAAYvwB,UACvB8wB,WAAYP,EAAYO,WACxBpF,YAAa6E,EAAY7E,aAiC9B,CAMD,oBAAA8C,CAAqBuC,GACnB,MAAM7lE,EAAUlQ,KAAKsrE,SACf0K,EAAmBh2E,KAAK0xE,kBACxBuE,EAAYF,EAAUE,UACxBF,EAAUE,UACVh0B,GACC+zB,GAUCA,EAAiBzyB,MAAQwyB,EAAUxyB,OACrCyyB,EAAiBzyB,KAAOwyB,EAAUxyB,KAClCrzC,EAAQqzC,KAAOwyB,EAAUxyB,MAEvByyB,EAAiBC,WAAaA,IAChCD,EAAiBC,UAAYA,EAC7B/lE,EAAQ+lE,UAAYA,GAElBD,EAAiBE,cAAgBH,EAAUG,eAC7CF,EAAiBE,aAAeH,EAAUG,aAC1ChmE,EAAQgmE,aAAeH,EAAUG,gBAnBnChmE,EAAQqzC,KAAOwyB,EAAUxyB,KACzBrzC,EAAQ+lE,UAAYA,EACpB/lE,EAAQgmE,aAAeH,EAAUG,aACjCl2E,KAAK0xE,kBAAoB,CACvBnuB,KAAMwyB,EAAUxyB,KAChB0yB,UAAWA,EACXC,aAAcH,EAAUG,cAgB7B,CASD,kBAAAzF,CAAmB7zC,EAAW8zC,GAC5B,GAAK9zC,EAEE,CACL,MAAMu5C,EAAiBv5C,EAAUw5C,WACjCp2E,KAAK2xE,WAAa,CAChB/0C,UAAW6vC,GACT0J,GAAkCx0B,IAGvC,MARC3hD,KAAK2xE,WAAa,KASpB,GAAKjB,EAEE,CACL,MAAM2F,EAAmB3F,EAAY0F,WAC/BE,EAAqB5F,EAAY6F,aACjCC,EAAsB9F,EAAY+F,cAClCC,EAA4BhG,EAAYiG,oBACxCC,EAAsBlG,EAAYmG,cAClCC,EAAmBpG,EAAYv0D,WAC/B46D,EAAwBrG,EAAYsG,gBACpCtB,EAAWc,GAEb30B,GACJ7hD,KAAK4xE,aAAe,CAClB6D,aACyBjvE,IAAvB8vE,EACIA,EACA10B,GACN8zB,SACuB,IAArB11E,KAAKo7B,YACDs6C,EACAA,EAAS9qC,KAAKjpC,GAAMA,EAAI3B,KAAKo7B,cACnCw6C,gBACGc,G/C94B0B,G+Cg5BE12E,KAAKo7B,YACpCy6C,cAC0BrvE,IAAxBowE,EACIA,EACA90B,GACNkD,gBACwBx+C,IAArBswE,EACGA,E/C72BkB,G+C82BE92E,KAAKo7B,YAC/B06C,gBAC4BtvE,IAA1BuwE,EACIA,EACAh1B,GACN2uB,YAAajE,GACX4J,GAAsCr0B,IAG3C,MAzCChiD,KAAK4xE,aAAe,IA0CvB,CAQD,aAAAjB,CAAcC,GACZ,IAAIqG,EACJ,IAAKrG,KAAgBqG,EAAYrG,EAAWl9D,WAE1C,YADA1T,KAAKq7B,OAAS,MAGhB,MAAM67C,EAAkBtG,EAAWr1C,cAAcv7B,KAAKo7B,aAChD+7C,EAAcvG,EAAWwG,YACzBC,EAAczG,EAAW0G,YAC/Bt3E,KAAKq7B,OAASu1C,EAAWt1C,SAASt7B,KAAKo7B,aACvCp7B,KAAK6xE,cAAgBsF,EAAY,GAAKD,EACtCl3E,KAAK8xE,cAAgBqF,EAAY,GAAKD,EACtCl3E,KAAK+xE,aAAekF,EAAU,GAAKC,EACnCl3E,KAAKgyE,cAAgBpB,EAAWhjC,aAChC5tC,KAAKiyE,cAAgBoF,EAAY,GACjCr3E,KAAKkyE,cAAgBmF,EAAY,GACjCr3E,KAAKmyE,qBAAuBvB,EAAW2G,oBACvCv3E,KAAKoyE,eAAiBxB,EAAW/6B,cACjC,MAAM2hC,EAAa5G,EAAW6G,gBAC9Bz3E,KAAKqyE,YAAc,CAChBmF,EAAW,GAAKx3E,KAAKo7B,YAAe87C,EACpCM,EAAW,GAAKx3E,KAAKo7B,YAAe87C,GAEvCl3E,KAAKsyE,YAAc2E,EAAU,GAAKC,CACnC,CAQD,YAAApG,CAAaC,GACX,GAAKA,EAEE,CACL,MAAM2G,EAAgB3G,EAAUsD,UAChC,GAAKqD,EAEE,CACL,MAAMC,EAAqBD,EAActB,WACzCp2E,KAAK6yE,eAAiB,CACpBj2C,UAAW6vC,GACTkL,GAA0Ch2B,IAG/C,MARC3hD,KAAK6yE,eAAiB,KASxB,MAAM+E,EAAkB7G,EAAUuD,YAClC,GAAKsD,EAEE,CACL,MAAMC,EAAuBD,EAAgBxB,WACvC0B,EAAyBF,EAAgBrB,aACzCwB,EAA0BH,EAAgBnB,cAC1CuB,EACJJ,EAAgBjB,oBACZsB,EAA0BL,EAAgBf,cAC1CqB,EAAuBN,EAAgBz7D,WACvCg8D,EAA4BP,EAAgBZ,gBAClDh3E,KAAK8yE,iBAAmB,CACtB2C,aAC6BjvE,IAA3BsxE,EACIA,EACAl2B,GACN8zB,SAAUqC,GAENl2B,GACJ+zB,eAAgBoC,G/C7+BW,E+Cg/B3BnC,cAC8BrvE,IAA5ByxE,EACIA,EACAn2B,GACNkD,eAC2Bx+C,IAAzB0xE,EACIA,E/C58BgB,E+C88BtBpC,gBACgCtvE,IAA9B2xE,EACIA,EACAp2B,GACN2uB,YAAajE,GACXoL,GAA8C71B,IAGnD,MArCChiD,KAAK8yE,iBAAmB,KAsC1B,MAAMsF,EAAWrH,EAAUsH,UACrBC,EAAcvH,EAAUwH,aACxBC,EAAczH,EAAU0H,aACxBC,EAAqB3H,EAAUwG,oBAC/BoB,EAAe5H,EAAUl7B,cACzB+iC,EAAY7H,EAAU0G,gBACtBoB,EAAW9H,EAAUwD,UACrBuE,EAAgB/H,EAAUgI,eAC1BC,EAAmBjI,EAAUkI,kBACnCj5E,KAAK+yE,WAAa,CAChBxvB,UAAmB/8C,IAAb4xE,EAAyBA,EAAW12B,GAC1Cu0B,eACoBzvE,IAAlBsyE,EAA8BA,EAAgB72B,GAChDi0B,kBACuB1vE,IAArBwyE,EACIA,EACA92B,IAERliD,KAAKuyE,WACU/rE,IAAbqyE,EACIx2E,MAAMC,QAAQu2E,GACZA,EAASr0B,QAAO,CAAC00B,EAAKntE,EAAGnK,IAAOs3E,GAAOt3E,EAAI,EAAI,IAAMmK,IAAI,IACzD8sE,EACF,GACN74E,KAAKwyE,kBACahsE,IAAhB8xE,EAA4Bt4E,KAAKo7B,YAAck9C,EAAc,EAC/Dt4E,KAAKyyE,kBACajsE,IAAhBgyE,EAA4Bx4E,KAAKo7B,YAAco9C,EAAc,EAC/Dx4E,KAAK0yE,yBACoBlsE,IAAvBkyE,GAAmCA,EACrC14E,KAAK2yE,mBAAiCnsE,IAAjBmyE,EAA6BA,EAAe,EACjE34E,KAAK4yE,WAAa,CAChB5yE,KAAKo7B,YAAcw9C,EAAU,GAC7B54E,KAAKo7B,YAAcw9C,EAAU,GAEhC,MAxFC54E,KAAKuyE,MAAQ,EAyFhB,GCpoCH,MAAM4G,GAAqB,GAQrBC,GAAqB,CACzB9lD,MA2TF,SACE+lD,EACA1kE,EACArE,EACAmvC,EACA65B,GAEA,MAAM1I,EAAatgE,EAAMgrB,WACnBy1C,EAAYzgE,EAAMikE,UAExB,IAAI1D,EACJ,GAAID,EAAY,CACd,GAAIA,EAAW2I,iBAAmBr/C,GAChC,OAEF,IAAIs/C,EAAoBH,EACxB,GAAIC,EAAuB,CACzB,MAAMG,EAAgB7I,EAAW8I,mBACjC,GAAsB,SAAlBD,EAEF,GADAD,EAAoBF,EACE,aAAlBG,EAA8B,CAEhC,MAAME,EAAcN,EAAaO,WAC/BtpE,EAAMq9B,YACN,SAEFgsC,EAAYhJ,cAAcC,EAAYC,GACtC8I,EAAYvJ,UAAUz7D,EAAU8qC,EACjC,MAAUsxB,GAAaA,EAAUwD,YAChC1D,EAAyB,CAAA,EAG9B,CACD,MAAM8I,EAAcH,EAAkBI,WACpCtpE,EAAMq9B,YACN,SAEFgsC,EAAYhJ,cAAcC,EAAYC,GACtC8I,EAAYvJ,UAAUz7D,EAAU8qC,EACjC,CACD,GAAIsxB,GAAaA,EAAUwD,UAAW,CACpC,IAAIsF,EAAmBR,EACnBC,IACFO,EAAmBP,GAErB,MAAMQ,EAAaD,EAAiBD,WAAWtpE,EAAMq9B,YAAa,QAClEmsC,EAAWhJ,aAAaC,EAAWF,GACnCiJ,EAAWtJ,SAAS77D,EAAU8qC,EAC/B,CACH,EA3WEs6B,WAsNF,SACEV,EACA1kE,EACArE,EACAmvC,EACA65B,GAEA,MAAM5I,EAAcpgE,EAAMgkE,YAC1B,GAAI5D,EAAa,CACf,MAAMsJ,EAAmBX,EAAaO,WACpCtpE,EAAMq9B,YACN,cAEFqsC,EAAiBvJ,mBAAmB,KAAMC,GAC1CsJ,EAAiBpK,eAAej7D,EAAU8qC,EAC3C,CACD,MAAMsxB,EAAYzgE,EAAMikE,UACxB,GAAIxD,GAAaA,EAAUwD,UAAW,CACpC,MAAMuF,GAAcR,GAAyBD,GAAcO,WACzDtpE,EAAMq9B,YACN,QAEFmsC,EAAWhJ,aAAaC,GACxB+I,EAAWtJ,SAAS77D,EAAU8qC,EAC/B,CACH,EA9OE1pB,QA6aF,SACEsjD,EACA1kE,EACArE,EACAmvC,EACA65B,GAEA,MAAM18C,EAAYtsB,EAAM+jE,UAClB3D,EAAcpgE,EAAMgkE,YAC1B,GAAI13C,GAAa8zC,EAAa,CAC5B,MAAMuJ,EAAgBZ,EAAaO,WAAWtpE,EAAMq9B,YAAa,WACjEssC,EAAcxJ,mBAAmB7zC,EAAW8zC,GAC5CuJ,EAAc3J,YAAY37D,EAAU8qC,EACrC,CACD,MAAMsxB,EAAYzgE,EAAMikE,UACxB,GAAIxD,GAAaA,EAAUwD,UAAW,CACpC,MAAMuF,GAAcR,GAAyBD,GAAcO,WACzDtpE,EAAMq9B,YACN,QAEFmsC,EAAWhJ,aAAaC,GACxB+I,EAAWtJ,SAAS77D,EAAU8qC,EAC/B,CACH,EAncEy6B,WAkXF,SACEb,EACA1kE,EACArE,EACAmvC,EACA65B,GAEA,MAAM1I,EAAatgE,EAAMgrB,WACnBy1C,EAAYzgE,EAAMikE,UAExB,IAAI1D,EACJ,GAAID,EAAY,CACd,GAAIA,EAAW2I,iBAAmBr/C,GAChC,OAEF,IAAIs/C,EAAoBH,EACxB,GAAIC,EAAuB,CACzB,MAAMG,EAAgB7I,EAAW8I,mBACjC,GAAsB,SAAlBD,EAEF,GADAD,EAAoBF,EACE,aAAlBG,EAA8B,CAEhC,MAAME,EAAcN,EAAaO,WAC/BtpE,EAAMq9B,YACN,SAEFgsC,EAAYhJ,cAAcC,EAAYC,GACtC8I,EAAY3J,eAAer7D,EAAU8qC,EACtC,MAAUsxB,GAAaA,EAAUwD,YAChC1D,EAAyB,CAAA,EAG9B,CACD,MAAM8I,EAAcH,EAAkBI,WACpCtpE,EAAMq9B,YACN,SAEFgsC,EAAYhJ,cAAcC,EAAYC,GACtC8I,EAAY3J,eAAer7D,EAAU8qC,EACtC,CACD,GAAIsxB,GAAaA,EAAUwD,UAAW,CACpC,IAAIsF,EAAmBR,EACnBC,IACFO,EAAmBP,GAErB,MAAMQ,EAAaD,EAAiBD,WAAWtpE,EAAMq9B,YAAa,QAClEmsC,EAAWhJ,aAAaC,EAAWF,GACnCiJ,EAAWtJ,SAAS77D,EAAU8qC,EAC/B,CACH,EAlaE06B,gBAqPF,SACEd,EACA1kE,EACArE,EACAmvC,EACA65B,GAEA,MAAM5I,EAAcpgE,EAAMgkE,YAC1B,GAAI5D,EAAa,CACf,MAAMsJ,EAAmBX,EAAaO,WACpCtpE,EAAMq9B,YACN,cAEFqsC,EAAiBvJ,mBAAmB,KAAMC,GAC1CsJ,EAAiBlK,oBAAoBn7D,EAAU8qC,EAChD,CACD,MAAMsxB,EAAYzgE,EAAMikE,UACxB,GAAIxD,GAAaA,EAAUwD,UAAW,CACpC,MAAMuF,GAAcR,GAAyBD,GAAcO,WACzDtpE,EAAMq9B,YACN,QAEFmsC,EAAWhJ,aAAaC,GACxB+I,EAAWtJ,SAAS77D,EAAU8qC,EAC/B,CACH,EA7QE26B,aAsRF,SACEf,EACA1kE,EACArE,EACAmvC,EACA65B,GAEA,MAAM18C,EAAYtsB,EAAM+jE,UAClB3D,EAAcpgE,EAAMgkE,YAC1B,GAAI5D,GAAe9zC,EAAW,CAC5B,MAAMq9C,EAAgBZ,EAAaO,WAAWtpE,EAAMq9B,YAAa,WACjEssC,EAAcxJ,mBAAmB7zC,EAAW8zC,GAC5CuJ,EAAc/J,iBAAiBv7D,EAAU8qC,EAC1C,CACD,MAAMsxB,EAAYzgE,EAAMikE,UACxB,GAAIxD,GAAaA,EAAUwD,UAAW,CACpC,MAAMuF,GAAcR,GAAyBD,GAAcO,WACzDtpE,EAAMq9B,YACN,QAEFmsC,EAAWhJ,aAAaC,GACxB+I,EAAWtJ,SAAS77D,EAAU8qC,EAC/B,CACH,EA5SE46B,mBAqLF,SACEC,EACA3lE,EACArE,EACAmvC,EACA65B,GAEA,MAAM5E,EAAa//D,EAASggE,qBAC5B,IAAI/yE,EAAGuE,EACP,IAAKvE,EAAI,EAAGuE,EAAKuuE,EAAWvzE,OAAQS,EAAIuE,IAAMvE,EAAG,EAE/C24E,EADyBnB,GAAmB1E,EAAW9yE,GAAG4sB,YAExD8rD,EACA5F,EAAW9yE,GACX0O,EACAmvC,EACA65B,EAEH,CACH,EAvMEkB,OAsCF,SACEnB,EACA1kE,EACArE,EACAmvC,EACA65B,GAEA,MAAM18C,EAAYtsB,EAAM+jE,UAClB3D,EAAcpgE,EAAMgkE,YAC1B,GAAI13C,GAAa8zC,EAAa,CAC5B,MAAM+J,EAAepB,EAAaO,WAAWtpE,EAAMq9B,YAAa,UAChE8sC,EAAahK,mBAAmB7zC,EAAW8zC,GAC3C+J,EAAalL,WAAW56D,EAAU8qC,EACnC,CACD,MAAMsxB,EAAYzgE,EAAMikE,UACxB,GAAIxD,GAAaA,EAAUwD,UAAW,CACpC,MAAMuF,GAAcR,GAAyBD,GAAcO,WACzDtpE,EAAMq9B,YACN,QAEFmsC,EAAWhJ,aAAaC,GACxB+I,EAAWtJ,SAAS77D,EAAU8qC,EAC/B,CACH,GArDO,SAASi7B,GAAaC,EAAUC,GACrC,OAAOpqE,SAAS/H,EAAOkyE,GAAW,IAAMnqE,SAAS/H,EAAOmyE,GAAW,GACrE,CAOO,SAASC,GAAoBn+D,EAAYwe,GAC9C,MAAMhgB,EAAY4/D,GAAap+D,EAAYwe,GAC3C,OAAOhgB,EAAYA,CACrB,CAOO,SAAS4/D,GAAap+D,EAAYwe,GACvC,OAAQi+C,GAAqBz8D,EAAcwe,CAC7C,CA4CO,SAAS6/C,GACdT,EACA76B,EACAnvC,EACAsd,EACAroB,EACAwQ,EACAujE,GAEA,IAAIpV,GAAU,EACd,MAAM0M,EAAatgE,EAAMgrB,WACzB,GAAIs1C,EAAY,CACd,MAAMoK,EAAapK,EAAW2I,gBAC1ByB,GAAc9gD,IAAqB8gD,GAAc9gD,GACnD02C,EAAWqK,oBAAoB11E,IAE3By1E,GAAc9gD,IAChB02C,EAAWvjE,OAEbujE,EAAWsK,kBAAkB31E,GAC7B2+D,GAAU,EAEb,CAUD,OAWF,SACEoW,EACA76B,EACAnvC,EACAsd,EACA7X,EACAujE,GAEA,MAAM3kE,EAAWrE,EAAMmkE,qBAANnkE,CAA4BmvC,GAC7C,IAAK9qC,EACH,OAEF,MAAMkb,EAAqBlb,EAASmZ,oBAClCF,EACA7X,GAEIiuD,EAAW1zD,EAAM6tC,cACvB,GAAI6lB,EACFmX,GAAeb,EAAazqD,EAAoBvf,EAAOmvC,OAClD,EAEL86B,EADyBnB,GAAmBvpD,EAAmBrB,YAE7D8rD,EACAzqD,EACAvf,EACAmvC,EACA65B,EAEH,CACH,CAjDE8B,CACEd,EACA76B,EACAnvC,EACAsd,EACA7X,EACAujE,GAGKpV,CACT,CA+CA,SAASiX,GAAeb,EAAa3lE,EAAUrE,EAAOmvC,GACpD,GAA0B,sBAAtB9qC,EAAS6Z,UAAmC,CAC9C,MAAMkmD,EAC2D,EAE7D2G,gBACJ,IAAK,IAAIz5E,EAAI,EAAGuE,EAAKuuE,EAAWvzE,OAAQS,EAAIuE,IAAMvE,EAChDu5E,GAAeb,EAAa5F,EAAW9yE,GAAI0O,EAAOmvC,GAEpD,MACD,CACc66B,EAAYV,WAAWtpE,EAAMq9B,YAAa,WAClDyhC,WACT,EACI3vB,EACAnvC,EAAM6tC,cACN7tC,EAAMgrE,0BAEV,CCnHO,SAASC,GAAiB11E,GAC/B,KAAMA,EAAMqK,mBAAmBsrE,0BAC7B,MAAM,IAAIjzE,MAAM,sDAIlB,MAAMlH,EAAIwE,EAAM46C,sBAAsB,GAChCn/C,EAAIuE,EAAM46C,sBAAsB,GAChCg7B,EAAmBzvE,KAAKka,KAAK7kB,EAAIA,EAAIC,EAAIA,GACzCk8C,EAAa33C,EAAM23C,WACnBznC,EAAY2lE,GAChB71E,EAAM46C,sBAAsB38C,QAC5B05C,EAAW0B,4BAEPtxB,EAAmBitD,GACvBr9B,EAAWjE,UAAU78B,WACrB++D,GAEF,IAAItK,EACJ,MAAMtlD,EAAiBE,KAQvB,OAPIF,IACFslD,EAAgBnnD,GACd6B,EACA2xB,EAAWjE,UAAUr6B,aAIlB,IAAIy8D,GACT91E,EAAMqK,QACNurE,EACAj+B,EAAWjkC,OACXxD,EACAynC,EAAWjE,UAAU58B,SACrBiR,EACAujD,EAEJ,CC/GA,IAAIyK,GAKG,MAAMlsE,GAAa,GAY1B,SAASmsE,GAAiBl/C,EAAKm/C,EAAIt2D,EAAIu2D,EAAIt2D,GACzCkX,EAAIs3C,YACJt3C,EAAIk3C,OAAO,EAAG,GACdl3C,EAAIm3C,OAAOgI,EAAIt2D,GACfmX,EAAIm3C,OAAOiI,EAAIt2D,GACfkX,EAAIo3C,YACJp3C,EAAI4oB,OACJ5oB,EAAIq/C,OACJr/C,EAAIE,SAAS,EAAG,EAAG7wB,KAAKyP,IAAIqgE,EAAIC,GAAM,EAAG/vE,KAAKyP,IAAI+J,EAAIC,IACtDkX,EAAIipB,SACN,CAUA,SAASq2B,GAA8B95E,EAAM2Y,GAE3C,OACE9O,KAAKmP,IAAIhZ,EAAc,EAAT2Y,GAAc,KAAO,GACnC9O,KAAKmP,IAAIhZ,EAAc,EAAT2Y,EAAa,GAAK,QAAc,CAElD,CA2CO,SAASohE,GACd/wD,EACAgxD,EACAppC,EACAG,GAEA,MAAMJ,EAAe/8B,GAAUg9B,EAAcopC,EAAYhxD,GAGzD,IAAI8nB,EAAmBnyB,GACrBq7D,EACAjpC,EACAH,GAGF,MAAMqpC,EAAsBD,EAAW/6D,wBACX5a,IAAxB41E,IACFnpC,GAAoBmpC,GAEtB,MAAM9vD,EAAsBnB,EAAW/J,wBACX5a,IAAxB8lB,IACF2mB,GAAoB3mB,GAOtB,MAAMO,EAAe1B,EAAW/L,YAChC,IAAKyN,GAAgBhT,GAAmBgT,EAAcimB,GAAe,CACnE,MAAMupC,EACJv7D,GAAmBqK,EAAY8nB,EAAkBH,GACjDG,EACExzB,SAAS48D,IAAuBA,EAAqB,IACvDppC,GAAoBopC,EAEvB,CAED,OAAOppC,CACT,CAcO,SAASqpC,GACdnxD,EACAgxD,EACAI,EACArpC,GAEA,MAAMH,EAAe12B,GAAUkgE,GAC/B,IAAItpC,EAAmBipC,GACrB/wD,EACAgxD,EACAppC,EACAG,GAeF,QAZKzzB,SAASwzB,IAAqBA,GAAoB,IACrDv3B,GAAc6gE,GAAc,SAAUhgE,GAOpC,OANA02B,EAAmBipC,GACjB/wD,EACAgxD,EACA5/D,EACA22B,GAEKzzB,SAASwzB,IAAqBA,EAAmB,CAC9D,IAGSA,CACT,CA0BO,SAAS4J,GACdrtC,EACAC,EACAyrB,EACA+X,EACApmB,EACAqmB,EACAqpC,EACAC,EACAC,EACAC,EACAC,EACA/vE,EACAgwE,GAEA,MAAM1sE,EAAUX,GACdvD,KAAKgZ,MAAMkW,EAAa1rB,GACxBxD,KAAKgZ,MAAMkW,EAAazrB,GACxBC,IAOF,GAJK9C,IACHsD,EAAQ2sE,uBAAwB,GAGX,IAAnBJ,EAAQt7E,OACV,OAAO+O,EAAQN,OAKjB,SAASktE,EAAWz4E,GAClB,OAAO2H,KAAKgZ,MAAM3gB,EAAQ62B,GAAcA,CACzC,CAJDhrB,EAAQwH,MAAMwjB,EAAYA,GAM1BhrB,EAAQ6sE,yBAA2B,UAEnC,MAAMC,E9GlDC,CAACxiE,IAAUA,KAAU,KAAW,K8GuDvC,IAAIyiE,EACJ,GALAR,EAAQvxE,SAAQ,SAAUyvB,EAAK/4B,EAAGH,GAChCS,GAAO86E,EAAkBriD,EAAIphB,OACjC,KAGOqjE,GAAiC,IAAnBH,EAAQt7E,QAA2B,IAAXu7E,EAAc,CACvD,MAAMQ,EAAqB/gE,GAAS6gE,GAC9BG,EAAsB/gE,GAAU4gE,GACtCC,EAAgB1tE,GACdvD,KAAKgZ,MAAOkW,EAAagiD,EAAsBjqC,GAC/CjnC,KAAKgZ,MAAOkW,EAAaiiD,EAAuBlqC,GAChDvjC,IAGG9C,IACHqwE,EAAcJ,uBAAwB,GAGxC,MAAMO,EAAcliD,EAAa+X,EAEjCwpC,EAAQvxE,SAAQ,SAAUyvB,EAAK/4B,EAAGH,GAChC,MAAM47E,EAAO1iD,EAAIphB,OAAO,GAAKyjE,EAAiB,GACxCM,IAAS3iD,EAAIphB,OAAO,GAAKyjE,EAAiB,IAC1CO,EAAWphE,GAASwe,EAAIphB,QACxBikE,EAAYphE,GAAUue,EAAIphB,QAG5BohB,EAAI9nB,MAAMrD,MAAQ,GAAKmrB,EAAI9nB,MAAMpD,OAAS,GAC5CwtE,EAAclqE,UACZ4nB,EAAI9nB,MACJ6pE,EACAA,EACA/hD,EAAI9nB,MAAMrD,MAAQ,EAAIktE,EACtB/hD,EAAI9nB,MAAMpD,OAAS,EAAIitE,EACvBW,EAAOD,EACPE,EAAOF,EACPG,EAAWH,EACXI,EAAYJ,EAGtB,GACG,CACD,MAAMK,EAAgBzhE,GAAWugE,GAwKjC,OAtKAC,EAAckB,eAAexyE,SAAQ,SAAUyyE,EAAU/7E,EAAGH,GAqB1D,MAAMwI,EAAS0zE,EAAS1zE,OAClB9J,EAASw9E,EAASx9E,OACxB,IAAIyc,EAAK3S,EAAO,GAAG,GACjB4S,EAAK5S,EAAO,GAAG,GACb6S,EAAK7S,EAAO,GAAG,GACjB8S,EAAK9S,EAAO,GAAG,GACb+S,EAAK/S,EAAO,GAAG,GACjBgT,EAAKhT,EAAO,GAAG,GAEjB,MAAM2zE,EAAKd,GAAY38E,EAAO,GAAG,GAAKs9E,EAAc,IAAMvqC,GACpD2qC,EAAKf,IACP38E,EAAO,GAAG,GAAKs9E,EAAc,IAAMvqC,GAEjC4oC,EAAKgB,GAAY38E,EAAO,GAAG,GAAKs9E,EAAc,IAAMvqC,GACpD1tB,EAAKs3D,IACP38E,EAAO,GAAG,GAAKs9E,EAAc,IAAMvqC,GAEjC6oC,EAAKe,GAAY38E,EAAO,GAAG,GAAKs9E,EAAc,IAAMvqC,GACpDztB,EAAKq3D,IACP38E,EAAO,GAAG,GAAKs9E,EAAc,IAAMvqC,GAMjC4qC,EAAwBlhE,EACxBmhE,EAAwBlhE,EAC9BD,EAAK,EACLC,EAAK,EACLC,GAAMghE,EACN/gE,GAAMghE,EACN/gE,GAAM8gE,EACN7gE,GAAM8gE,EAEN,MAMMC,EAAcj6D,GANI,CACtB,CAACjH,EAAIC,EAAI,EAAG,EAAG++D,EAAK8B,GACpB,CAAC5gE,EAAIC,EAAI,EAAG,EAAG8+D,EAAK6B,GACpB,CAAC,EAAG,EAAG9gE,EAAIC,EAAIyI,EAAKq4D,GACpB,CAAC,EAAG,EAAG7gE,EAAIC,EAAIwI,EAAKo4D,KAGtB,IAAKG,EACH,OAMF,GAHA9tE,EAAQq1C,OACRr1C,EAAQ+jE,YA9RZ,WACE,QAAiCztE,IAA7Bo1E,GAAwC,CAC1C,MAAMj/C,EAAMptB,GAAsB,EAAG,EAAGG,IACxCitB,EAAIogD,yBAA2B,UAC/BpgD,EAAIC,UAAY,wBAChBi/C,GAAiBl/C,EAAK,EAAG,EAAG,EAAG,GAC/Bk/C,GAAiBl/C,EAAK,EAAG,EAAG,EAAG,GAC/B,MAAMx6B,EAAOw6B,EAAI3pB,aAAa,EAAG,EAAG,EAAG,GAAG7Q,KAC1Cy5E,GACEK,GAA8B95E,EAAM,IACpC85E,GAA8B95E,EAAM,IACpC85E,GAA8B95E,EAAM,GACtC8N,GAAc0sB,GACdjtB,GAAW/J,KAAKg3B,EAAI/sB,OACrB,CAED,OAAOgsE,EACT,CA+QQqC,KAAgCrxE,EAAa,CAE/CsD,EAAQ2jE,OAAOiI,EAAIt2D,GAEnB,MAAM04D,EAAQ,EACRC,EAAKP,EAAK9B,EACVsC,EAAKP,EAAKr4D,EAChB,IAAK,IAAI64D,EAAO,EAAGA,EAAOH,EAAOG,IAE/BnuE,EAAQ4jE,OACNgI,EAAKgB,GAAauB,EAAO,GAAKF,EAAMD,GACpC14D,EAAKs3D,EAAYuB,EAAOD,GAAOF,EAAQ,KAGrCG,GAAQH,EAAQ,GAClBhuE,EAAQ4jE,OACNgI,EAAKgB,GAAauB,EAAO,GAAKF,EAAMD,GACpC14D,EAAKs3D,GAAauB,EAAO,GAAKD,GAAOF,EAAQ,KAKnDhuE,EAAQ4jE,OAAOiI,EAAIt2D,EACzB,MACMvV,EAAQ2jE,OAAOiI,EAAIt2D,GACnBtV,EAAQ4jE,OAAO8J,EAAIC,GACnB3tE,EAAQ4jE,OAAOiI,EAAIt2D,GAmBrB,IAAI5S,EACJ,GAjBA3C,EAAQ8rE,OAER9rE,EAAQ6F,UACNioE,EAAY,GACZA,EAAY,GACZA,EAAY,GACZA,EAAY,GACZJ,EACAC,GAGF3tE,EAAQ0H,UACNolE,EAAiB,GAAKc,EACtBd,EAAiB,GAAKe,GAIpBd,EACFpqE,EAAQoqE,EAAcrtE,OACtBM,EAAQwH,MACNu7B,EAAmB/X,GAClB+X,EAAmB/X,OAEjB,CACL,MAAMjxB,EAASwyE,EAAQ,GACjBljE,EAAStP,EAAOsP,OACtB1G,EAAQ5I,EAAO4I,MACf3C,EAAQwH,MACNyE,GAAS5C,GAAU1G,EAAMrD,OACxB4M,GAAU7C,GAAU1G,EAAMpD,OAE9B,CAEDS,EAAQ6C,UAAUF,EAAO,EAAG,GAC5B3C,EAAQ01C,SACZ,IAEMq3B,IACFhtE,GAAcgtE,GACdvtE,GAAW/J,KAAKs3E,EAAcrtE,SAG5B+sE,IACFzsE,EAAQq1C,OAERr1C,EAAQ6sE,yBAA2B,cACnC7sE,EAAQwgE,YAAc,QACtBxgE,EAAQ80C,UAAY,EAEpBw3B,EAAckB,eAAexyE,SAAQ,SAAUyyE,EAAU/7E,EAAGH,GAC1D,MAAMtB,EAASw9E,EAASx9E,OAClBy9E,GAAMz9E,EAAO,GAAG,GAAKs9E,EAAc,IAAMvqC,EACzC2qC,IAAO19E,EAAO,GAAG,GAAKs9E,EAAc,IAAMvqC,EAC1C4oC,GAAM37E,EAAO,GAAG,GAAKs9E,EAAc,IAAMvqC,EACzC1tB,IAAOrlB,EAAO,GAAG,GAAKs9E,EAAc,IAAMvqC,EAC1C6oC,GAAM57E,EAAO,GAAG,GAAKs9E,EAAc,IAAMvqC,EACzCztB,IAAOtlB,EAAO,GAAG,GAAKs9E,EAAc,IAAMvqC,EAEhDhjC,EAAQ+jE,YACR/jE,EAAQ2jE,OAAOiI,EAAIt2D,GACnBtV,EAAQ4jE,OAAO8J,EAAIC,GACnB3tE,EAAQ4jE,OAAOiI,EAAIt2D,GACnBvV,EAAQ6jE,YACR7jE,EAAQkkE,QACd,IAEIlkE,EAAQ01C,WAEH11C,EAAQN,MACjB,CC9bO,SAAS0uE,GAAmB5hE,GACjC,OAAIra,MAAMC,QAAQoa,GACT1Q,KAAKwP,OAAOkB,GAEdA,CACT,CCRO,MAAM6hE,GAAkB,GC4e/B,IAAAC,GApcA,MASE,WAAA1+E,CACEqrB,EACAgxD,EACAI,EACAkC,EACAC,EACAC,GAMA3+E,KAAK4+E,YAAczzD,EAMnBnrB,KAAK6+E,YAAc1C,EAGnB,IAAI2C,EAAoB,CAAA,EACxB,MAAMC,EAAepzD,GAAa3rB,KAAK6+E,YAAa7+E,KAAK4+E,aAOzD5+E,KAAKg/E,cAAgB,SAAUjoE,GAC7B,MAAMxP,EAAMwP,EAAE,GAAK,IAAMA,EAAE,GAI3B,OAHK+nE,EAAkBv3E,KACrBu3E,EAAkBv3E,GAAOw3E,EAAahoE,IAEjC+nE,EAAkBv3E,EAC/B,EAMIvH,KAAKi/E,iBAAmBR,EAMxBz+E,KAAKk/E,uBAAyBR,EAAiBA,EAM/C1+E,KAAKm/E,WAAa,GAOlBn/E,KAAKo/E,iBAAkB,EAMvBp/E,KAAKq/E,kBACHr/E,KAAK4+E,YAAYv/D,cACfo/D,KACAz+E,KAAK4+E,YAAYx/D,aACnBjD,GAASsiE,IAAoBtiE,GAASnc,KAAK4+E,YAAYx/D,aAMzDpf,KAAKs/E,kBAAoBt/E,KAAK4+E,YAAYx/D,YACtCjD,GAASnc,KAAK4+E,YAAYx/D,aAC1B,KAMJpf,KAAKu/E,kBAAoBv/E,KAAK6+E,YAAYz/D,YACtCjD,GAASnc,KAAK6+E,YAAYz/D,aAC1B,KAEJ,MAAMogE,EAAqBxjE,GAAWugE,GAChCkD,EAAsB1jE,GAAYwgE,GAClCmD,EAAyB5jE,GAAeygE,GACxCoD,EAAwB9jE,GAAc0gE,GACtCqD,EAAgB5/E,KAAKg/E,cAAcQ,GACnCK,EAAiB7/E,KAAKg/E,cAAcS,GACpCK,EAAoB9/E,KAAKg/E,cAAcU,GACvCK,EAAmB//E,KAAKg/E,cAAcW,GAYtCK,EArIc,IAuIjBrB,EACG3yE,KAAKyP,IACH,EACAzP,KAAKiZ,KACHjZ,KAAKi0E,KACHhkE,GAAQsgE,IACLoC,EAAwBA,EAAwB,IAAM,QAI/D,GAcN,GAZA3+E,KAAKkgF,SACHV,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAGEhgF,KAAKo/E,gBAAiB,CACxB,IAAIe,EAAY3lE,IAChBxa,KAAKm/E,WAAWj0E,SAAQ,SAAUyyE,EAAU/7E,EAAGH,GAC7C0+E,EAAYn0E,KAAKwP,IACf2kE,EACAxC,EAAS1zE,OAAO,GAAG,GACnB0zE,EAAS1zE,OAAO,GAAG,GACnB0zE,EAAS1zE,OAAO,GAAG,GAE7B,IAIMjK,KAAKm/E,WAAWj0E,SAASyyE,IACvB,GACE3xE,KAAKyP,IACHkiE,EAAS1zE,OAAO,GAAG,GACnB0zE,EAAS1zE,OAAO,GAAG,GACnB0zE,EAAS1zE,OAAO,GAAG,IAEnBk2E,EACFngF,KAAKs/E,kBAAoB,EACzB,CACA,MAAMc,EAAc,CAClB,CAACzC,EAAS1zE,OAAO,GAAG,GAAI0zE,EAAS1zE,OAAO,GAAG,IAC3C,CAAC0zE,EAAS1zE,OAAO,GAAG,GAAI0zE,EAAS1zE,OAAO,GAAG,IAC3C,CAAC0zE,EAAS1zE,OAAO,GAAG,GAAI0zE,EAAS1zE,OAAO,GAAG,KAEzCm2E,EAAY,GAAG,GAAKD,EAAYngF,KAAKs/E,kBAAoB,IAC3Dc,EAAY,GAAG,IAAMpgF,KAAKs/E,mBAExBc,EAAY,GAAG,GAAKD,EAAYngF,KAAKs/E,kBAAoB,IAC3Dc,EAAY,GAAG,IAAMpgF,KAAKs/E,mBAExBc,EAAY,GAAG,GAAKD,EAAYngF,KAAKs/E,kBAAoB,IAC3Dc,EAAY,GAAG,IAAMpgF,KAAKs/E,mBAM5B,MAAMnlE,EAAOnO,KAAKwP,IAChB4kE,EAAY,GAAG,GACfA,EAAY,GAAG,GACfA,EAAY,GAAG,IAEJp0E,KAAKyP,IAChB2kE,EAAY,GAAG,GACfA,EAAY,GAAG,GACfA,EAAY,GAAG,IAENjmE,EAAOna,KAAKs/E,kBAAoB,IACzC3B,EAAS1zE,OAASm2E,EAErB,IAEJ,CAEDtB,EAAoB,CAAA,CACrB,CAYD,YAAAuB,CAAah/E,EAAGC,EAAGyV,EAAGupE,EAAMC,EAAMC,GAChCxgF,KAAKm/E,WAAWx5E,KAAK,CACnBsE,OAAQ,CAACq2E,EAAMC,EAAMC,GACrBrgF,OAAQ,CAACkB,EAAGC,EAAGyV,IAElB,CAkBD,QAAAmpE,CAAS7+E,EAAGC,EAAGyV,EAAGC,EAAGspE,EAAMC,EAAMC,EAAMC,EAAMT,GAC3C,MAAMU,EAAmBrnE,GAAe,CAACinE,EAAMC,EAAMC,EAAMC,IACrDE,EAAkB3gF,KAAKs/E,kBACzBnjE,GAASukE,GAAoB1gF,KAAKs/E,kBAClC,KACEsB,EAA0C5gF,KAAsB,kBAIhE6gF,EACJ7gF,KAAK4+E,YAAYv/D,YACjBshE,EAAkB,IAClBA,EAAkB,EAEpB,IAAIG,GAAmB,EAEvB,GAAId,EAAiB,EAAG,CACtB,GAAIhgF,KAAK6+E,YAAYt9D,YAAcvhB,KAAKu/E,kBAAmB,CAIzDuB,EADE3kE,GAFuB9C,GAAe,CAAChY,EAAGC,EAAGyV,EAAGC,KAEnBhX,KAAKu/E,kBAvQjB,KAyQuBuB,CAC3C,EACID,GAAU7gF,KAAK4+E,YAAYr9D,YAAco/D,IAC5CG,EACEH,EA7QiB,KA6QuBG,EAE7C,CAED,IAAKA,GAAoB9gF,KAAKi/E,kBAE1Bx/D,SAASihE,EAAiB,KAC1BjhE,SAASihE,EAAiB,KAC1BjhE,SAASihE,EAAiB,KAC1BjhE,SAASihE,EAAiB,MAErB7iE,GAAW6iE,EAAkB1gF,KAAKi/E,kBAErC,OAKN,IAAI8B,EAAc,EAElB,KAAKD,GAEArhE,SAAS6gE,EAAK,KACd7gE,SAAS6gE,EAAK,KACd7gE,SAAS8gE,EAAK,KACd9gE,SAAS8gE,EAAK,KACd9gE,SAAS+gE,EAAK,KACd/gE,SAAS+gE,EAAK,KACd/gE,SAASghE,EAAK,KACdhhE,SAASghE,EAAK,KAEf,GAAIT,EAAiB,EACnBc,GAAmB,OASnB,GALAC,GACIthE,SAAS6gE,EAAK,KAAQ7gE,SAAS6gE,EAAK,IAAU,EAAJ,IAC1C7gE,SAAS8gE,EAAK,KAAQ9gE,SAAS8gE,EAAK,IAAU,EAAJ,IAC1C9gE,SAAS+gE,EAAK,KAAQ/gE,SAAS+gE,EAAK,IAAU,EAAJ,IAC1C/gE,SAASghE,EAAK,KAAQhhE,SAASghE,EAAK,IAAU,EAAJ,GAE7B,GAAfM,GACe,GAAfA,GACe,GAAfA,GACe,GAAfA,EAEA,OAMR,GAAIf,EAAiB,EAAG,CACtB,IAAKc,EAAkB,CACrB,MAAMrkE,EAAS,EAAEpb,EAAE,GAAK0V,EAAE,IAAM,GAAI1V,EAAE,GAAK0V,EAAE,IAAM,GAC7CiqE,EAAYhhF,KAAKg/E,cAAcviE,GAErC,IAAI5E,EACJ,GAAIgpE,EAAQ,CAKVhpE,GAHG8M,GAAO27D,EAAK,GAAIM,GACfj8D,GAAO67D,EAAK,GAAII,IAClB,EACqBj8D,GAAOq8D,EAAU,GAAIJ,EACtD,MACU/oE,GAAMyoE,EAAK,GAAKE,EAAK,IAAM,EAAIQ,EAAU,GAE3C,MAAMlpE,GAAMwoE,EAAK,GAAKE,EAAK,IAAM,EAAIQ,EAAU,GAE/CF,EAD8BjpE,EAAKA,EAAKC,EAAKA,EACF9X,KAAKk/E,sBACjD,CACD,GAAI4B,EAAkB,CACpB,GAAI90E,KAAKmP,IAAI9Z,EAAE,GAAK0V,EAAE,KAAO/K,KAAKmP,IAAI9Z,EAAE,GAAK0V,EAAE,IAAK,CAElD,MAAMkqE,EAAK,EAAE3/E,EAAE,GAAKyV,EAAE,IAAM,GAAIzV,EAAE,GAAKyV,EAAE,IAAM,GACzCmqE,EAAQlhF,KAAKg/E,cAAciC,GAC3BE,EAAK,EAAEnqE,EAAE,GAAK3V,EAAE,IAAM,GAAI2V,EAAE,GAAK3V,EAAE,IAAM,GACzC+/E,EAAQphF,KAAKg/E,cAAcmC,GAEjCnhF,KAAKkgF,SACH7+E,EACAC,EACA2/E,EACAE,EACAb,EACAC,EACAW,EACAE,EACApB,EAAiB,GAEnBhgF,KAAKkgF,SACHiB,EACAF,EACAlqE,EACAC,EACAoqE,EACAF,EACAV,EACAC,EACAT,EAAiB,EAE7B,KAAe,CAEL,MAAMqB,EAAK,EAAEhgF,EAAE,GAAKC,EAAE,IAAM,GAAID,EAAE,GAAKC,EAAE,IAAM,GACzCggF,EAAQthF,KAAKg/E,cAAcqC,GAC3BE,EAAK,EAAExqE,EAAE,GAAKC,EAAE,IAAM,GAAID,EAAE,GAAKC,EAAE,IAAM,GACzCwqE,EAAQxhF,KAAKg/E,cAAcuC,GAEjCvhF,KAAKkgF,SACH7+E,EACAggF,EACAE,EACAvqE,EACAspE,EACAgB,EACAE,EACAf,EACAT,EAAiB,GAEnBhgF,KAAKkgF,SACHmB,EACA//E,EACAyV,EACAwqE,EACAD,EACAf,EACAC,EACAgB,EACAxB,EAAiB,EAEpB,CACD,MACD,CACF,CAED,GAAIa,EAAQ,CACV,IAAK7gF,KAAKq/E,kBACR,OAEFr/E,KAAKo/E,iBAAkB,CACxB,CAM0B,IAAR,GAAd2B,IACH/gF,KAAKqgF,aAAah/E,EAAG0V,EAAGC,EAAGspE,EAAME,EAAMC,GAEd,IAAR,GAAdM,IACH/gF,KAAKqgF,aAAah/E,EAAG0V,EAAGzV,EAAGg/E,EAAME,EAAMD,GAErCQ,IAEyB,IAAR,GAAdA,IACH/gF,KAAKqgF,aAAa/+E,EAAG0V,EAAG3V,EAAGk/E,EAAME,EAAMH,GAEd,IAAR,EAAdS,IACH/gF,KAAKqgF,aAAa/+E,EAAG0V,EAAGD,EAAGwpE,EAAME,EAAMD,GAG5C,CAOD,qBAAAiB,GACE,MAAMloE,EjH7RD,CAACiB,IAAUA,KAAU,KAAW,KiHsSrC,OAPAxa,KAAKm/E,WAAWj0E,SAAQ,SAAUyyE,EAAU/7E,EAAGH,GAC7C,MAAMk5B,EAAMgjD,EAAS1zE,OACrBwP,GAAiBF,EAAQohB,EAAI,IAC7BlhB,GAAiBF,EAAQohB,EAAI,IAC7BlhB,GAAiBF,EAAQohB,EAAI,GACnC,IAEWphB,CACR,CAKD,YAAAmkE,GACE,OAAO19E,KAAKm/E,UACb,GCvIH,IAAAuC,GA9UA,cAAyBvuE,GAgBvB,WAAArT,CACEqrB,EACAw2D,EACAxF,EACAyF,EACAt1E,EACAy/D,EACA7wC,EACAwhD,EACAmF,EACAnD,EACA/B,EACAjyE,GAEAzF,MAAMqH,EAAWT,EAAgBnB,GAMjC1K,KAAK8hF,kBAA+Bt7E,IAAhBm2E,GAA4BA,EAMhD38E,KAAKo7B,YAAcF,EAMnBl7B,KAAK+hF,QAAUrF,EAMf18E,KAAKg8B,QAAU,KAMfh8B,KAAKgiF,gBAAkBL,EAMvB3hF,KAAKiiF,gBAAkBL,EAMvB5hF,KAAKkiF,kBAAoBnW,GAAsCz/D,EAM/DtM,KAAKmiF,aAAe,GAMpBniF,KAAKoiF,qBAAuB,KAM5BpiF,KAAKqiF,SAAW,EAEhB,MAAM9F,EAAeqF,EAAeU,mBAClCtiF,KAAKkiF,mBAEDK,EAAkBviF,KAAKiiF,gBAAgB7iE,YAC7C,IAAIq/D,EAAkBz+E,KAAKgiF,gBAAgB5iE,YAE3C,MAAMojE,EAAsBD,EACxB5kE,GAAgB4+D,EAAcgG,GAC9BhG,EAEJ,GAAqC,IAAjCtgE,GAAQumE,GAIV,YADAxiF,KAAKuM,MAAQV,GAIf,MAAM42E,EAAmBt3D,EAAW/L,YAChCqjE,IAIAhE,EAHGA,EAGe9gE,GAAgB8gE,EAAiBgE,GAFjCA,GAMtB,MAAMvvC,EAAmB0uC,EAAepmD,cACtCx7B,KAAKkiF,kBAAkB,IAGnBjvC,EAAmBqpC,GACvBnxD,EACAgxD,EACAqG,EACAtvC,GAGF,IAAKzzB,SAASwzB,IAAqBA,GAAoB,EAIrD,YADAjzC,KAAKuM,MAAQV,GAIf,MAAM62E,OACel8E,IAAnBk4E,EAA+BA,EAAiBH,GAelD,GATAv+E,KAAK2iF,eAAiB,IAAIC,GACxBz3D,EACAgxD,EACAqG,EACA/D,EACAxrC,EAAmByvC,EACnBxvC,GAGgD,IAA9ClzC,KAAK2iF,eAAejF,eAAev8E,OAGrC,YADAnB,KAAKuM,MAAQV,GAIf7L,KAAKqiF,SAAWV,EAAekB,kBAAkB5vC,GACjD,IAAIpmB,EAAe7sB,KAAK2iF,eAAelB,wBAmBvC,GAjBIhD,IACEtzD,EAAW9L,YACbwN,EAAa,GAAKjJ,GAChBiJ,EAAa,GACb4xD,EAAgB,GAChBA,EAAgB,IAElB5xD,EAAa,GAAKjJ,GAChBiJ,EAAa,GACb4xD,EAAgB,GAChBA,EAAgB,KAGlB5xD,EAAelP,GAAgBkP,EAAc4xD,IAI5CxiE,GAAQ4Q,GAEN,CACL,MAAMi2D,EAAcnB,EAAeoB,0BACjCl2D,EACA7sB,KAAKqiF,UAGP,IAAK,IAAIW,EAAOF,EAAY3oE,KAAM6oE,GAAQF,EAAYzoE,KAAM2oE,IAC1D,IAAK,IAAIC,EAAOH,EAAY1oE,KAAM6oE,GAAQH,EAAYxoE,KAAM2oE,IAAQ,CAClE,MAAMh2E,EAAO40E,EAAgB7hF,KAAKqiF,SAAUW,EAAMC,EAAM/nD,GACpDjuB,GACFjN,KAAKmiF,aAAax8E,KAAKsH,EAE1B,CAG8B,IAA7BjN,KAAKmiF,aAAahhF,SACpBnB,KAAKuM,MAAQV,EAEhB,MAnBC7L,KAAKuM,MAAQV,CAoBhB,CAMD,QAAAyvB,GACE,OAAOt7B,KAAKg8B,OACb,CAKD,UAAAknD,GACE,MAAMzG,EAAU,GAWhB,GAVAz8E,KAAKmiF,aAAaj3E,SAAS+B,IACrBA,GAAQA,EAAKC,YAAcrB,GAC7B4wE,EAAQ92E,KAAK,CACX4T,OAAQvZ,KAAKgiF,gBAAgBM,mBAAmBr1E,EAAKX,WACrDuG,MAAO5F,EAAKquB,YAEf,IAEHt7B,KAAKmiF,aAAahhF,OAAS,EAEJ,IAAnBs7E,EAAQt7E,OACVnB,KAAKuM,MAAQV,MACR,CACL,MAAMwzB,EAAIr/B,KAAKkiF,kBAAkB,GAC3BzuE,EAAOzT,KAAKiiF,gBAAgBkB,YAAY9jD,GACxC7vB,EAAwB,iBAATiE,EAAoBA,EAAOA,EAAK,GAC/ChE,EAAyB,iBAATgE,EAAoBA,EAAOA,EAAK,GAChDy/B,EAAmBlzC,KAAKiiF,gBAAgBzmD,cAAc6D,GACtD4T,EAAmBjzC,KAAKgiF,gBAAgBxmD,cAC5Cx7B,KAAKqiF,UAGD9F,EAAev8E,KAAKiiF,gBAAgBK,mBACxCtiF,KAAKkiF,mBAGPliF,KAAKg8B,QAAUonD,GACb5zE,EACAC,EACAzP,KAAKo7B,YACL6X,EACAjzC,KAAKgiF,gBAAgB5iE,YACrB8zB,EACAqpC,EACAv8E,KAAK2iF,eACLlG,EACAz8E,KAAK+hF,QACL/hF,KAAK8hF,aACL9hF,KAAK4M,aAGP5M,KAAKuM,MAAQV,CACd,CACD7L,KAAK6H,SACN,CAKD,IAAAwF,GACE,GAAIrN,KAAKuM,OAASV,EAAgB,CAChC7L,KAAKuM,MAAQV,EACb7L,KAAK6H,UAEL,IAAIw7E,EAAa,EAEjBrjF,KAAKoiF,qBAAuB,GAC5BpiF,KAAKmiF,aAAaj3E,SAAS+B,IACzB,MAAMV,EAAQU,EAAKC,WACnB,GAAIX,GAASV,GAAkBU,GAASV,EAAmB,CACzDw3E,IAEA,MAAMC,EAAkBv8E,EACtBkG,EACAnG,GACA,SAAUmQ,GACR,MAAM1K,EAAQU,EAAKC,WAEjBX,GAASV,GACTU,GAASV,GACTU,GAASV,IAETvE,EAAcg8E,GACdD,IACmB,IAAfA,IACFrjF,KAAKujF,mBACLvjF,KAAKkjF,cAGV,GACDljF,MAEFA,KAAKoiF,qBAAqBz8E,KAAK29E,EAChC,KAGgB,IAAfD,EACF7xC,WAAWxxC,KAAKkjF,WAAWh8E,KAAKlH,MAAO,GAEvCA,KAAKmiF,aAAaj3E,SAAQ,SAAU+B,EAAMrL,EAAGH,GAC7BwL,EAAKC,YACNrB,GACXoB,EAAKI,MAEjB,GAEK,CACF,CAKD,gBAAAk2E,GACEvjF,KAAKoiF,qBAAqBl3E,QAAQ5D,GAClCtH,KAAKoiF,qBAAuB,IAC7B,CAKD,OAAAv1E,GACM7M,KAAKg8B,UACP/rB,GAAcjQ,KAAKg8B,QAAQhsB,WAAW,OACtCN,GAAW/J,KAAK3F,KAAKg8B,SACrBh8B,KAAKg8B,QAAU,MAEjB/2B,MAAM4H,SACP,GCjWY22E,GAME,gBANFA,GAcA,cAdAA,GAuBE,gBCmMjB,SAASC,GAAkBC,GACzB,OAAKA,EAGDrhF,MAAMC,QAAQohF,GACT,SAAUlmC,GACf,OAAOkmC,CACb,EAGiC,mBAApBA,EACFA,EAGF,SAAUlmC,GACf,MAAO,CAACkmC,EACZ,EAdW,IAeX,CAEA,IAAAC,GAlMA,cAAqBn5E,EAInB,WAAA1K,CAAY4K,GACVzF,QAMAjF,KAAKkf,WAAawP,GAAchkB,EAAQwU,YAMxClf,KAAK4jF,cAAgBH,GAAkB/4E,EAAQuzC,cAM/Cj+C,KAAK6jF,8BACiCr9E,IAApCkE,EAAQo5E,yBACJp5E,EAAQo5E,wBAQd9jF,KAAKkkE,SAAU,EAMflkE,KAAKqtC,YAA2B7mC,IAAlBkE,EAAQ6B,MAAsB7B,EAAQ6B,MAAQ,QAM5DvM,KAAK+jF,YAA2Bv9E,IAAlBkE,EAAQuU,OAAsBvU,EAAQuU,MAMpDjf,KAAKgkF,eAAiBt5E,EAAQkC,YAM9B5M,KAAKikF,aAAe,KAMpBjkF,KAAKkkF,aAAe,KAEpB,MAAMt1E,EAAO5O,KAKbA,KAAKmkF,aAAe,IAAI5/E,SAAQ,SAAUE,EAASD,GACjDoK,EAAKq1E,aAAex/E,EACpBmK,EAAKs1E,aAAe1/E,CAC1B,GACG,CAOD,eAAAw5C,GACE,OAAOh+C,KAAK4jF,aACb,CAMD,0BAAAhyB,GACE,OAAO5xD,KAAK6jF,wBACb,CAOD,aAAAn1D,GACE,OAAO1uB,KAAKkf,UACb,CAMD,cAAAy5B,CAAez5B,GACb,OAAO,IACR,CAKD,OAAAw+B,GACE,OAAO19C,KAAKmkF,YACb,CAOD,QAAAj3E,GACE,OAAOlN,KAAKqtC,MACb,CAKD,QAAA2S,GACE,OAAOhgD,KAAK+jF,MACb,CAKD,cAAAK,GACE,OAAOpkF,KAAKgkF,YACb,CAMD,OAAAK,GACErkF,KAAK6H,SACN,CASD,eAAAy8E,CAAgBrmC,GACdj+C,KAAK4jF,cAAgBH,GAAkBxlC,GACvCj+C,KAAK6H,SACN,CAMD,QAAAiF,CAASP,GACPvM,KAAKqtC,OAAS9gC,EACdvM,KAAK6H,SACN,GCtMH,MAAM08E,GAAe,CAAC,EAAG,EAAG,GA6oB5B,IAAAC,GAhmBA,MAIE,WAAA1kF,CAAY4K,GA2BV,IAAIsnC,EACJ,GAvBAhyC,KAAKitC,aAA8BzmC,IAApBkE,EAAQuiC,QAAwBviC,EAAQuiC,QAAU,EAMjEjtC,KAAK00C,aAAehqC,EAAQgmC,YAC5B18B,GACErR,EACE3C,KAAK00C,cAML,CAACrzC,EAAGC,IAAMA,EAAID,IACd,GAEF,qDAKGqJ,EAAQ+5E,QACX,IAAK,IAAI7iF,EAAI,EAAGuE,EAAKnG,KAAK00C,aAAavzC,OAAS,EAAGS,EAAIuE,IAAMvE,EAC3D,GAAKowC,GAGH,GAAIhyC,KAAK00C,aAAa9yC,GAAK5B,KAAK00C,aAAa9yC,EAAI,KAAOowC,EAAY,CAClEA,OAAaxrC,EACb,KACD,OALDwrC,EAAahyC,KAAK00C,aAAa9yC,GAAK5B,KAAK00C,aAAa9yC,EAAI,GAchE5B,KAAKy0C,YAAczC,EAMnBhyC,KAAKktC,QAAUltC,KAAK00C,aAAavzC,OAAS,EAM1CnB,KAAK0kF,aAA6Bl+E,IAAnBkE,EAAQi6E,OAAuBj6E,EAAQi6E,OAAS,KAM/D3kF,KAAK4kF,SAAW,UACQp+E,IAApBkE,EAAQ+5E,UACVzkF,KAAK4kF,SAAWl6E,EAAQ+5E,QACxBzwE,GACEhU,KAAK4kF,SAASzjF,QAAUnB,KAAK00C,aAAavzC,OAC1C,wDAIJ,MAAMoY,EAAS7O,EAAQ6O,YAER/S,IAAX+S,GAAyBvZ,KAAK0kF,SAAY1kF,KAAK4kF,WACjD5kF,KAAK0kF,QAAU1oE,GAAWzC,IAG5BvF,IACIhU,KAAK0kF,SAAW1kF,KAAK4kF,UAAc5kF,KAAK0kF,UAAY1kF,KAAK4kF,SAC3D,+DAOF5kF,KAAK6kF,WAAa,UACQr+E,IAAtBkE,EAAQo6E,YACV9kF,KAAK6kF,WAAan6E,EAAQo6E,UAC1B9wE,GACEhU,KAAK6kF,WAAW1jF,QAAUnB,KAAK00C,aAAavzC,OAC5C,0DAQJnB,KAAK+kF,eACkBv+E,IAArBkE,EAAQs6E,SACJt6E,EAAQs6E,SACPhlF,KAAK6kF,WAEN,KADAv1C,GAENt7B,IACIhU,KAAK+kF,WAAa/kF,KAAK6kF,YACtB7kF,KAAK+kF,YAAc/kF,KAAK6kF,WAC3B,mEAOF7kF,KAAKqgB,aAAqB7Z,IAAX+S,EAAuBA,EAAS,KAM/CvZ,KAAKilF,gBAAkB,KAMvBjlF,KAAKklF,SAAW,CAAC,EAAG,GAMpBllF,KAAKmlF,WAAa,CAAC,EAAG,EAAG,EAAG,QAEN3+E,IAAlBkE,EAAQ06E,MACVplF,KAAKilF,gBAAkBv6E,EAAQ06E,MAAMx6C,KAAI,CAACn3B,EAAM4rB,KAC9C,MAAMsrC,EAAY,IAAIK,GACpBh/D,KAAKwP,IAAI,EAAG/H,EAAK,IACjBzH,KAAKyP,IAAIhI,EAAK,GAAK,GAAI,GACvBzH,KAAKwP,IAAI,EAAG/H,EAAK,IACjBzH,KAAKyP,IAAIhI,EAAK,GAAK,GAAI,IAEzB,GAAI8F,EAAQ,CACV,MAAM8rE,EAAsBrlF,KAAK+iF,0BAA0BxpE,EAAQ8lB,GACnEsrC,EAAUxwD,KAAOnO,KAAKyP,IAAI4pE,EAAoBlrE,KAAMwwD,EAAUxwD,MAC9DwwD,EAAUtwD,KAAOrO,KAAKwP,IAAI6pE,EAAoBhrE,KAAMswD,EAAUtwD,MAC9DswD,EAAUvwD,KAAOpO,KAAKyP,IAAI4pE,EAAoBjrE,KAAMuwD,EAAUvwD,MAC9DuwD,EAAUrwD,KAAOtO,KAAKwP,IAAI6pE,EAAoB/qE,KAAMqwD,EAAUrwD,KAC/D,CACD,OAAOqwD,CAAS,IAETpxD,GACTvZ,KAAKslF,qBAAqB/rE,EAE7B,CAUD,gBAAAgsE,CAAiBhsE,EAAQ47B,EAAMx5B,GAC7B,MAAMgvD,EAAY3qE,KAAK+iF,0BAA0BxpE,EAAQ47B,GACzD,IAAK,IAAIvzC,EAAI+oE,EAAUxwD,KAAMhU,EAAKwkE,EAAUtwD,KAAMzY,GAAKuE,IAAMvE,EAC3D,IAAK,IAAIwiB,EAAIumD,EAAUvwD,KAAM2Q,EAAK4/C,EAAUrwD,KAAM8J,GAAK2G,IAAM3G,EAC3DzI,EAAS,CAACw5B,EAAMvzC,EAAGwiB,GAGxB,CASD,+BAAAohE,CACEl5E,EACAqP,EACA8pE,EACAC,GAEA,IAAI/a,EAAWvzD,EAAGC,EACdsuE,EAAkB,KAClBtmD,EAAI/yB,EAAU,GAAK,EAOvB,IANyB,IAArBtM,KAAKy0C,aACPr9B,EAAI9K,EAAU,GACd+K,EAAI/K,EAAU,IAEdq5E,EAAkB3lF,KAAKsiF,mBAAmBh2E,EAAWo5E,GAEhDrmD,GAAKr/B,KAAKitC,SAAS,CAYxB,QAXUzmC,IAAN4Q,QAAyB5Q,IAAN6Q,GACrBD,EAAIpL,KAAKuT,MAAMnI,EAAI,GACnBC,EAAIrL,KAAKuT,MAAMlI,EAAI,GACnBszD,EAAYib,GAAwBxuE,EAAGA,EAAGC,EAAGA,EAAGouE,IAEhD9a,EAAY3qE,KAAK+iF,0BACf4C,EACAtmD,EACAomD,GAGA9pE,EAAS0jB,EAAGsrC,GACd,OAAO,IAEPtrC,CACH,CACD,OAAO,CACR,CAOD,SAAAjgB,GACE,OAAOpf,KAAKqgB,OACb,CAOD,UAAA4tB,GACE,OAAOjuC,KAAKktC,OACb,CAOD,UAAAc,GACE,OAAOhuC,KAAKitC,OACb,CAQD,SAAAqqC,CAAUj4C,GACR,OAAIr/B,KAAK0kF,QACA1kF,KAAK0kF,QAEP1kF,KAAK4kF,SAASvlD,EACtB,CAQD,aAAA7D,CAAc6D,GACZ,OAAOr/B,KAAK00C,aAAarV,EAC1B,CAOD,cAAAsZ,GACE,OAAO34C,KAAK00C,YACb,CAQD,0BAAAmxC,CAA2Bv5E,EAAWm5E,EAAeC,GACnD,GAAIp5E,EAAU,GAAKtM,KAAKktC,QAAS,CAC/B,GAAyB,IAArBltC,KAAKy0C,YAAmB,CAC1B,MAAMt6B,EAAsB,EAAf7N,EAAU,GACjB8N,EAAsB,EAAf9N,EAAU,GACvB,OAAOs5E,GACLzrE,EACAA,EAAO,EACPC,EACAA,EAAO,EACPqrE,EAEH,CACD,MAAME,EAAkB3lF,KAAKsiF,mBAC3Bh2E,EACAo5E,GAAc1lF,KAAKmlF,YAErB,OAAOnlF,KAAK+iF,0BACV4C,EACAr5E,EAAU,GAAK,EACfm5E,EAEH,CACD,OAAO,IACR,CAQD,4BAAAK,CAA6Bx5E,EAAW+yB,EAAGomD,GACzC,GAAIpmD,EAAIr/B,KAAKktC,SAAW7N,EAAIr/B,KAAKitC,QAC/B,OAAO,KAGT,MAAM84C,EAAaz5E,EAAU,GACvB05E,EAAa15E,EAAU,GACvB25E,EAAa35E,EAAU,GAE7B,GAAI+yB,IAAM0mD,EACR,OAAOH,GACLI,EACAC,EACAD,EACAC,EACAR,GAIJ,GAAIzlF,KAAKy0C,YAAa,CACpB,MAAM1vB,EAAS/Y,KAAKC,IAAIjM,KAAKy0C,YAAapV,EAAI0mD,GACxC5rE,EAAOnO,KAAKuT,MAAMymE,EAAajhE,GAC/B3K,EAAOpO,KAAKuT,MAAM0mE,EAAalhE,GACrC,GAAIsa,EAAI0mD,EACN,OAAOH,GAAwBzrE,EAAMA,EAAMC,EAAMA,EAAMqrE,GAKzD,OAAOG,GAAwBzrE,EAFlBnO,KAAKuT,MAAMwF,GAAUihE,EAAa,IAAM,EAEV5rE,EAD9BpO,KAAKuT,MAAMwF,GAAUkhE,EAAa,IAAM,EACER,EACxD,CAED,MAAME,EAAkB3lF,KAAKsiF,mBAAmBh2E,EAAWtM,KAAKmlF,YAChE,OAAOnlF,KAAK+iF,0BAA0B4C,EAAiBtmD,EAAGomD,EAC3D,CASD,yBAAA1C,CAA0BxpE,EAAQ8lB,EAAGomD,GACnCzlF,KAAKkmF,uBAAuB3sE,EAAO,GAAIA,EAAO,GAAI8lB,GAAG,EAAOklD,IAC5D,MAAMpqE,EAAOoqE,GAAa,GACpBnqE,EAAOmqE,GAAa,GAC1BvkF,KAAKkmF,uBAAuB3sE,EAAO,GAAIA,EAAO,GAAI8lB,GAAG,EAAMklD,IAG3D,OAAOqB,GAAwBzrE,EAFlBoqE,GAAa,GAEiBnqE,EAD9BmqE,GAAa,GAC6BkB,EACxD,CAMD,kBAAAU,CAAmB75E,GACjB,MAAMq4E,EAAS3kF,KAAKs3E,UAAUhrE,EAAU,IAClCoQ,EAAa1c,KAAKw7B,cAAclvB,EAAU,IAC1C04E,EAAWlmB,GAAO9+D,KAAKmjF,YAAY72E,EAAU,IAAKtM,KAAKklF,UAC7D,MAAO,CACLP,EAAO,IAAMr4E,EAAU,GAAK,IAAO04E,EAAS,GAAKtoE,EACjDioE,EAAO,IAAMr4E,EAAU,GAAK,IAAO04E,EAAS,GAAKtoE,EAEpD,CAUD,kBAAA4lE,CAAmBh2E,EAAWo5E,GAC5B,MAAMf,EAAS3kF,KAAKs3E,UAAUhrE,EAAU,IAClCoQ,EAAa1c,KAAKw7B,cAAclvB,EAAU,IAC1C04E,EAAWlmB,GAAO9+D,KAAKmjF,YAAY72E,EAAU,IAAKtM,KAAKklF,UACvD/qE,EAAOwqE,EAAO,GAAKr4E,EAAU,GAAK04E,EAAS,GAAKtoE,EAChDtC,EAAOuqE,EAAO,IAAMr4E,EAAU,GAAK,GAAK04E,EAAS,GAAKtoE,EAG5D,OAAOjC,GAAeN,EAAMC,EAFfD,EAAO6qE,EAAS,GAAKtoE,EACrBtC,EAAO4qE,EAAS,GAAKtoE,EACYgpE,EAC/C,CAaD,iCAAAU,CAAkCjvE,EAAYuF,EAAY2pE,GACxD,OAAOrmF,KAAKsmF,gCACVnvE,EAAW,GACXA,EAAW,GACXuF,GACA,EACA2pE,EAEH,CAeD,+BAAAC,CACElvE,EACAC,EACAqF,EACA6pE,EACAF,GAEA,MAAMhnD,EAAIr/B,KAAK6iF,kBAAkBnmE,GAC3BhF,EAAQgF,EAAa1c,KAAKw7B,cAAc6D,GACxCslD,EAAS3kF,KAAKs3E,UAAUj4C,GACxB2lD,EAAWlmB,GAAO9+D,KAAKmjF,YAAY9jD,GAAIr/B,KAAKklF,UAElD,IAAIc,EAActuE,GAASN,EAAIutE,EAAO,IAAOjoE,EAAasoE,EAAS,GAC/DiB,EAAcvuE,GAASitE,EAAO,GAAKttE,GAAMqF,EAAasoE,EAAS,GAUnE,OARIuB,GACFP,EAAa/gE,GAAK+gE,EA7eP,GA6e+B,EAC1CC,EAAahhE,GAAKghE,EA9eP,GA8e+B,IAE1CD,EAAazmE,GAAMymE,EAhfR,GAifXC,EAAa1mE,GAAM0mE,EAjfR,IAofNO,GAAwBnnD,EAAG2mD,EAAYC,EAAYI,EAC3D,CAiBD,sBAAAH,CAAuB9uE,EAAGC,EAAGgoB,EAAGknD,EAA2BF,GACzD,MAAM1B,EAAS3kF,KAAKs3E,UAAUj4C,GACxB3iB,EAAa1c,KAAKw7B,cAAc6D,GAChC2lD,EAAWlmB,GAAO9+D,KAAKmjF,YAAY9jD,GAAIr/B,KAAKklF,UAElD,IAAIc,GAAc5uE,EAAIutE,EAAO,IAAMjoE,EAAasoE,EAAS,GACrDiB,GAActB,EAAO,GAAKttE,GAAKqF,EAAasoE,EAAS,GAUzD,OARIuB,GACFP,EAAa/gE,GAAK+gE,EA/gBP,GA+gB+B,EAC1CC,EAAahhE,GAAKghE,EAhhBP,GAghB+B,IAE1CD,EAAazmE,GAAMymE,EAlhBR,GAmhBXC,EAAa1mE,GAAM0mE,EAnhBR,IAshBNO,GAAwBnnD,EAAG2mD,EAAYC,EAAYI,EAC3D,CAUD,wBAAAI,CAAyBtvE,EAAYkoB,EAAGgnD,GACtC,OAAOrmF,KAAKkmF,uBACV/uE,EAAW,GACXA,EAAW,GACXkoB,GACA,EACAgnD,EAEH,CAMD,sBAAAK,CAAuBp6E,GACrB,OAAOtM,KAAK00C,aAAapoC,EAAU,GACpC,CAUD,WAAA62E,CAAY9jD,GACV,OAAIr/B,KAAK+kF,UACA/kF,KAAK+kF,UAEP/kF,KAAK6kF,WAAWxlD,EACxB,CAMD,gBAAAurC,CAAiBvrC,GACf,OAAKr/B,KAAKilF,gBAKHjlF,KAAKilF,gBAAgB5lD,GAJnBr/B,KAAKqgB,QACRrgB,KAAK+iF,0BAA0B/iF,KAAKqgB,QAASgf,GAC7C,IAGP,CAmBD,iBAAAwjD,CAAkBnmE,EAAYiqE,GAM5B,OAAO/iE,GALGpiB,EACRxB,KAAK00C,aACLh4B,EACAiqE,GAAiB,GAEH3mF,KAAKitC,QAASjtC,KAAKktC,QACpC,CAQD,2BAAA05C,CAA4Bt6E,EAAWu6E,GACrC,OAAO9xD,GACL8xD,EACA,EACAA,EAAS1lF,OACT,EACAnB,KAAKsiF,mBAAmBh2E,GAE3B,CAMD,oBAAAg5E,CAAqB/rE,GACnB,MAAMpY,EAASnB,KAAK00C,aAAavzC,OAC3B2lF,EAAiB,IAAIzkF,MAAMlB,GACjC,IAAK,IAAIk+B,EAAIr/B,KAAKitC,QAAS5N,EAAIl+B,IAAUk+B,EACvCynD,EAAeznD,GAAKr/B,KAAK+iF,0BAA0BxpE,EAAQ8lB,GAE7Dr/B,KAAKilF,gBAAkB6B,CACxB,GCjnBH,MAAMC,WAAqBC,GAIzB,WAAAlnF,CAAY4K,GACVzF,MAAM,CACJsU,OAAQ7O,EAAQ6O,OAChBorE,OAAQj6E,EAAQi6E,OAChBF,QAAS/5E,EAAQ+5E,QACjB/zC,YAAahmC,EAAQgmC,YACrBs0C,SAAUt6E,EAAQs6E,SAClBF,UAAWp6E,EAAQo6E,UACnBM,MAAO16E,EAAQ06E,QAOjBplF,KAAKinF,WAAav8E,EAAQw8E,SAC3B,CAMD,WAAAC,CAAY9nD,GACV,OAAOr/B,KAAKinF,WAAW5nD,EACxB,CAOD,YAAA+nD,GACE,OAAOpnF,KAAKinF,UACb,EAGH,IAAAI,GAAeN,GAcR,SAASO,GACdC,EACAhuE,EACAiuE,GAGA,MAAM92C,EAAc,GAEdw2C,EAAY,GAEZzC,EAAU,GAEVK,EAAY,GAEZM,EAAQ,GAEdoC,OAAgChhF,IAAjBghF,EAA6BA,EAAe,GAE3D,MACMC,EAAoB,aACpBC,EAAqB,aACrBC,EAA2B,mBAC3BC,EAAwB,gBAKxB1oE,EAAawP,GADN64D,EAA8B,cAErCtmE,EAAgB/B,EAAWkC,mBAE3BymE,EAAiE,MAAhD3oE,EAAWoC,qBAAqBwmE,OAAO,EAAG,GAmDjE,OAjDAP,EAAUE,GAAmBrzD,MAAK,SAAU/yB,EAAGC,GAC7C,OAAOA,EAAEqmF,GAA4BtmF,EAAEsmF,EAC3C,IAEEJ,EAAUE,GAAmBv8E,SAAQ,SAAU68E,GAC7C,IAAIC,EAsBJ,GAlBEA,IADER,EAAarmF,OAAS,IACNqmF,EAAa1pC,MAAK,SAAUmqC,GAC5C,OAAIF,EAAIL,IAAuBO,EAAOR,KAKjCM,EAAIL,GAAoBhiF,SAAS,MAElC6hF,EAAUG,GAAsB,IAAMK,EAAIL,KAC1CO,EAAOR,EAInB,IAKQO,EAAiB,CACnBd,EAAUvhF,KAAKoiF,EAAIL,IACnB,MAAMhrE,EAC6B,MAAhCqrE,EAAIJ,GAAuC1mE,EACxCinE,EAAYH,EAAqB,UACjCI,EAAaJ,EAAsB,WACrCF,EACFpD,EAAQ9+E,KAAK,CACXoiF,EAAIH,GAAuB,GAC3BG,EAAIH,GAAuB,KAG7BnD,EAAQ9+E,KAAKoiF,EAAIH,IAEnBl3C,EAAY/qC,KAAK+W,GACjBooE,EAAUn/E,KACRuiF,GAAaC,EAAaD,EAAY,CAACA,EAAWC,IAEpD/C,EAAMz/E,KAAK,CAACoiF,EAAiB,YAAGA,EAAkB,cACnD,CACL,IAES,IAAIhB,GAAa,CACtBxtE,OAAQA,EACRkrE,QAASA,EACT/zC,YAAaA,EACbw2C,UAAWA,EACXpC,UAAWA,EACXM,MAAOA,GAEX,CCpKO,SAASgD,GAAiBlpE,GAC/B,IAAIyC,EAAWzC,EAAWuC,qBAK1B,OAJKE,IACHA,EAAW0mE,GAAoBnpE,GAC/BA,EAAWwC,mBAAmBC,IAEzBA,CACT,CAQO,SAAS1C,GAAM0C,EAAUrV,EAAW4S,GACzC,MAAMmgB,EAAI/yB,EAAU,GACdmQ,EAASkF,EAASwkE,mBAAmB75E,GACrC6S,EAAmBmpE,GAAqBppE,GAC9C,IAAKrF,GAAmBsF,EAAkB1C,GAAS,CACjD,MAAM6C,EAAanD,GAASgD,GACtBsI,EAAazb,KAAKiZ,MACrB9F,EAAiB,GAAK1C,EAAO,IAAM6C,GAGtC,OADA7C,EAAO,IAAM6C,EAAamI,EACnB9F,EAAS8kE,yBAAyBhqE,EAAQ4iB,EAClD,CACD,OAAO/yB,CACT,CAWO,SAASi8E,GAAgBhvE,EAAQ2zB,EAAS83C,EAAUzoE,GACzDA,OAAoB/V,IAAX+V,EAAuBA,EAAS,WAEzC,MAAMm0B,EAAc83C,GAAsBjvE,EAAQ2zB,EAAS83C,GAE3D,OAAO,IAAIgC,GAAS,CAClBztE,OAAQA,EACRorE,OAAQroE,GAAU/C,EAAQgD,GAC1Bm0B,YAAaA,EACbs0C,SAAUA,GAEd,CAoBO,SAASyD,GAAU/9E,GACxB,MAAMg+E,EAAah+E,GAAW,GAExB6O,EAASmvE,EAAWnvE,QAAUmV,GAAc,aAAatP,YAEzDupE,EAAc,CAClBpvE,OAAQA,EACR0zB,QAASy7C,EAAWz7C,QACpB+3C,SAAU0D,EAAW1D,SACrBt0C,YAAa83C,GACXjvE,EACAmvE,EAAWx7C,QACXw7C,EAAW1D,SACX0D,EAAW37C,gBAGf,OAAO,IAAIi6C,GAAS2B,EACtB,CAYA,SAASH,GAAsBjvE,EAAQ2zB,EAAS83C,EAAUj4C,GACxDG,OAAsB1mC,IAAZ0mC,EAAwBA,EAAUmC,GAC5C21C,EAAWlmB,QAAoBt4D,IAAbw+E,EAAyBA,EAAW11C,IAEtD,MAAM7/B,EAAS2M,GAAU7C,GACnB/J,EAAQ2M,GAAS5C,GAEvBwzB,EACEA,EAAgB,EACZA,EACA/gC,KAAKyP,IAAIjM,EAAQw1E,EAAS,GAAIv1E,EAASu1E,EAAS,IAEtD,MAAM7jF,EAAS+rC,EAAU,EACnBwD,EAAc,IAAIruC,MAAMlB,GAC9B,IAAK,IAAIk+B,EAAI,EAAGA,EAAIl+B,IAAUk+B,EAC5BqR,EAAYrR,GAAK0N,EAAgB/gC,KAAKC,IAAI,EAAGozB,GAE/C,OAAOqR,CACT,CAWO,SAAS23C,GAAoBnpE,EAAYguB,EAAS83C,EAAUzoE,GAEjE,OAAOgsE,GADQD,GAAqBppE,GACLguB,EAAS83C,EAAUzoE,EACpD,CAQO,SAAS+rE,GAAqBppE,GAEnC,IAAI3F,GADJ2F,EAAawP,GAAcxP,IACHE,YACxB,IAAK7F,EAAQ,CACX,MAAMqvE,EACH,IAAMjpE,GAAgBG,QAAWZ,EAAWkC,mBAC/C7H,EAASkB,IAAgBmuE,GAAOA,EAAMA,EAAMA,EAC7C,CACD,OAAOrvE,CACT,CCiNO,MAAMsvE,WAAwB9iF,EAKnC,WAAAjG,CAAYC,EAAMkN,GAChBhI,MAAMlF,GAONC,KAAKiN,KAAOA,CACb,EAGH,IAAA67E,GAzVA,cAAyBC,GAIvB,WAAAjpF,CAAY4K,GACVzF,MAAM,CACJg5C,aAAcvzC,EAAQuzC,aACtB6lC,wBAAyBp5E,EAAQo5E,wBACjC5kE,WAAYxU,EAAQwU,WACpB3S,MAAO7B,EAAQ6B,MACf0S,MAAOvU,EAAQuU,MACfrS,YAAalC,EAAQkC,cAMvB5M,KAAK0H,GAKL1H,KAAKiH,KAKLjH,KAAK2H,GAML3H,KAAKgpF,aAA6BxiF,IAAnBkE,EAAQu+E,QAAuBv+E,EAAQu+E,OAMtDjpF,KAAKkpF,qBACwB1iF,IAA3BkE,EAAQy+E,eAA+Bz+E,EAAQy+E,eAAiB,EAKlEnpF,KAAK2hB,cAAgCnb,IAArBkE,EAAQiX,SAAyBjX,EAAQiX,SAAW,KAEpE,MAAMqjE,EAAW,CAAC,IAAK,KACnBhlF,KAAK2hB,UACPm9C,GAAO9+D,KAAK2hB,SAASwhE,YAAYnjF,KAAK2hB,SAASqsB,cAAeg3C,GAOhEhlF,KAAKopF,UAAY,IAAIC,GAAU3+E,EAAQygC,WAAa,GAMpDnrC,KAAKspF,QAAU,CAAC,EAAG,GAMnBtpF,KAAK+pE,KAAOr/D,EAAQnD,KAAO,GAM3BvH,KAAKupF,YAAc,CACjB78E,WAAYhC,EAAQgC,WACpBE,YAAalC,EAAQkC,aAUvB5M,KAAKwpF,WAAa9+E,EAAQ8+E,WAAa9+E,EAAQ8+E,WAAa,CAC7D,CAKD,cAAAv9C,GACE,OAAOjsC,KAAKopF,UAAUn9C,gBACvB,CAMD,WAAAy9B,CAAYxqD,EAAY+mD,GACtB,MAAMmjB,EAAYppF,KAAKypF,0BAA0BvqE,GAC7CkqE,GACFA,EAAU1f,YAAYzD,EAEzB,CAWD,iBAAAyjB,CAAkBxqE,EAAYmgB,EAAGsrC,EAAWhvD,GAC1C,MAAMytE,EAAYppF,KAAKypF,0BAA0BvqE,GACjD,IAAKkqE,EACH,OAAO,EAGT,IACIn8E,EAAM08E,EAAclvD,EADpBmvD,GAAU,EAEd,IAAK,IAAIxyE,EAAIuzD,EAAUxwD,KAAM/C,GAAKuzD,EAAUtwD,OAAQjD,EAClD,IAAK,IAAIC,EAAIszD,EAAUvwD,KAAM/C,GAAKszD,EAAUrwD,OAAQjD,EAClDsyE,EAAepf,GAAUlrC,EAAGjoB,EAAGC,GAC/BojB,GAAS,EACL2uD,EAAUxf,YAAY+f,KACxB18E,EACEm8E,EAAUjgF,IAAIwgF,GAEhBlvD,EAASxtB,EAAKC,aAAerB,EACzB4uB,IACFA,GAA4B,IAAnB9e,EAAS1O,KAGjBwtB,IACHmvD,GAAU,GAIhB,OAAOA,CACR,CAMD,sBAAAC,CAAuB3qE,GACrB,OAAO,CACR,CAMD,MAAAnS,GACE,OAAO/M,KAAK+pE,IACb,CAOD,MAAA+f,CAAOviF,GACDvH,KAAK+pE,OAASxiE,IAChBvH,KAAK+pE,KAAOxiE,EACZvH,KAAK6H,UAER,CAMD,SAAAkiF,CAAU7qE,GACR,OAAOlf,KAAKgpF,OACb,CAMD,cAAArwC,CAAez5B,GACb,MAAMyC,EAAWzC,EACblf,KAAKgqF,yBAAyB9qE,GAC9Blf,KAAK2hB,SACT,OAAKA,EAGEA,EAASg3B,iBAFP,IAGV,CAWD,OAAAsxC,CAAQ5qD,EAAGjoB,EAAGC,EAAG6jB,EAAYhc,GAC3B,OAAO5W,GACR,CAOD,WAAA4hF,GACE,OAAOlqF,KAAK2hB,QACb,CAMD,wBAAAqoE,CAAyB9qE,GACvB,OAAKlf,KAAK2hB,SAGH3hB,KAAK2hB,SAFHqoE,GAAyB9qE,EAGnC,CAOD,yBAAAuqE,CAA0BvqE,GACxB,MAAMqM,EAAmBvrB,KAAK0uB,gBAK9B,OAJA1a,GACuB,OAArBuX,GAA6BF,GAAWE,EAAkBrM,GAC1D,wGAEKlf,KAAKopF,SACb,CASD,iBAAAe,CAAkBjvD,GAChB,OAAOl7B,KAAKkpF,eACb,CAQD,gBAAAkB,CAAiB/qD,EAAGnE,EAAYhc,GAC9B,MAAMyC,EAAW3hB,KAAKgqF,yBAAyB9qE,GACzCiqE,EAAiBnpF,KAAKmqF,kBAAkBjvD,GACxC8pD,EAAWlmB,GAAOn9C,EAASwhE,YAAY9jD,GAAIr/B,KAAKspF,SACtD,OAAsB,GAAlBH,EACKnE,EAEFqF,GAAUrF,EAAUmE,EAAgBnpF,KAAKspF,QACjD,CAWD,8BAAAgB,CAA+Bh+E,EAAW4S,GACxCA,OAA4B1Y,IAAf0Y,EAA2BA,EAAalf,KAAK0uB,gBAC1D,MAAM/M,EAAW3hB,KAAKgqF,yBAAyB9qE,GAI/C,OAHIlf,KAAKggD,YAAc9gC,EAAWqC,aAChCjV,EAAY2S,GAAM0C,EAAUrV,EAAW4S,IAElCwrD,GAAiBp+D,EAAWqV,GAAYrV,EAAY,IAC5D,CAMD,KAAA3H,GACE3E,KAAKopF,UAAUzkF,OAChB,CAED,OAAA0/E,GACErkF,KAAK2E,QACLM,MAAMo/E,SACP,CAOD,eAAAkG,CAAgBC,EAAWtrE,GACzB,MAAMkqE,EAAYppF,KAAKypF,0BAA0BvqE,GAC7CsrE,EAAYpB,EAAU/f,gBACxB+f,EAAU/f,cAAgBmhB,EAE7B,CAUD,OAAAC,CAAQprD,EAAGjoB,EAAGC,EAAG6H,GAAc,GCzW1B,SAASwrE,GAAmB3jE,EAAUpF,GAC3C,MAAMgpE,EAAS,SACTC,EAAS,SACTC,EAAS,SACTC,EAAa,UACnB,OAAA,SAOYx+E,EAAW4uB,EAAYhc,GAC/B,GAAK5S,EAGL,OAAOya,EACJzD,QAAQqnE,EAAQr+E,EAAU,GAAGqM,YAC7B2K,QAAQsnE,EAAQt+E,EAAU,GAAGqM,YAC7B2K,QAAQunE,EAAQv+E,EAAU,GAAGqM,YAC7B2K,QAAQwnE,GAAY,WACnB,MAAMzrD,EAAI/yB,EAAU,GACdy+E,EAAQppE,EAASipD,iBAAiBvrC,GACxC,IAAK0rD,EACH,MAAM,IAAIxiF,MACR,yDAIJ,OADUwiF,EAAM3uE,YAAc9P,EAAU,GAAK,GACpCqM,UACnB,GAEI,CACJ,CAOO,SAASqyE,GAAoBC,EAAWtpE,GAC7C,MAAM3Z,EAAMijF,EAAU9pF,OAChB+pF,EAAmB,IAAI7oF,MAAM2F,GACnC,IAAK,IAAIpG,EAAI,EAAGA,EAAIoG,IAAOpG,EACzBspF,EAAiBtpF,GAAK8oF,GAAmBO,EAAUrpF,GAAI+f,GAEzD,OAAOwpE,GAA2BD,EACpC,CAMO,SAASC,GAA2BD,GACzC,OAAgC,IAA5BA,EAAiB/pF,OACZ+pF,EAAiB,GAE1B,SAOY5+E,EAAW4uB,EAAYhc,GAC/B,IAAK5S,EACH,OAEF,MACMrJ,EAAQ0hB,GADJymE,GAAc9+E,GACA4+E,EAAiB/pF,QACzC,OAAO+pF,EAAiBjoF,GAAOqJ,EAAW4uB,EAAYhc,EAExD,CACJ,CAQO,SAASmsE,GAAoB/+E,EAAW4uB,EAAYhc,GAE3D,CAMO,SAASosE,GAAUze,GACxB,MAAM0e,EAAO,GACb,IAAIxgD,EAAQ,sBAAsBN,KAAKoiC,GACvC,GAAI9hC,EAAO,CAET,MAAMygD,EAAgBzgD,EAAM,GAAG0gD,WAAW,GACpCC,EAAe3gD,EAAM,GAAG0gD,WAAW,GACzC,IAAIE,EACJ,IAAKA,EAAWH,EAAeG,GAAYD,IAAgBC,EACzDJ,EAAK5lF,KAAKknE,EAAIvpD,QAAQynB,EAAM,GAAIniC,OAAOgjF,aAAaD,KAEtD,OAAOJ,CACR,CAED,GADAxgD,EAAQ,kBAAkBN,KAAKoiC,GAC3B9hC,EAAO,CAET,MAAM8gD,EAAOr7E,SAASu6B,EAAM,GAAI,IAChC,IAAK,IAAInpC,EAAI4O,SAASu6B,EAAM,GAAI,IAAKnpC,GAAKiqF,EAAMjqF,IAC9C2pF,EAAK5lF,KAAKknE,EAAIvpD,QAAQynB,EAAM,GAAInpC,EAAE+W,aAEpC,OAAO4yE,CACR,CAED,OADAA,EAAK5lF,KAAKknE,GACH0e,CACT,CCtFA,MAAMO,WAAgBC,GAIpB,WAAAjsF,CAAY4K,GACVzF,MAAM,CACJg5C,aAAcvzC,EAAQuzC,aACtB9S,UAAWzgC,EAAQygC,UACnB89C,OAAQv+E,EAAQu+E,OAChB/pE,WAAYxU,EAAQwU,WACpB3S,MAAO7B,EAAQ6B,MACfoV,SAAUjX,EAAQiX,SAClBwnE,eAAgBz+E,EAAQy+E,eACxBlqE,MAAOvU,EAAQuU,MACfvS,WAAYhC,EAAQgC,WACpBE,YAAalC,EAAQkC,YACrBrF,IAAKmD,EAAQnD,IACbu8E,wBAAyBp5E,EAAQo5E,wBACjC0F,WAAY9+E,EAAQ8+E,aAOtBxpF,KAAKgsF,yBACHhsF,KAAKisF,kBAAoBH,GAAQjoF,UAAUooF,gBAM7CjsF,KAAKo8B,iBAAmB1xB,EAAQ0xB,iBAE5B1xB,EAAQuhF,kBACVjsF,KAAKisF,gBAAkBvhF,EAAQuhF,iBAOjCjsF,KAAKurF,KAAO,KAER7gF,EAAQ6gF,KACVvrF,KAAKksF,QAAQxhF,EAAQ6gF,MACZ7gF,EAAQmiE,KACjB7sE,KAAKmsF,OAAOzhF,EAAQmiE,KAOtB7sE,KAAKosF,iBAAmB,EACzB,CAOD,mBAAAC,GACE,OAAOrsF,KAAKo8B,gBACb,CAOD,kBAAAkwD,GACE,OAAO5lF,OAAO6lF,eAAevsF,MAAMisF,kBAAoBjsF,KAAKisF,gBACxDjsF,KAAKisF,gBAAgB/kF,KAAKlH,MAC1BA,KAAKisF,eACV,CASD,OAAAO,GACE,OAAOxsF,KAAKurF,IACb,CAOD,gBAAA/8B,CAAiB3oD,GACf,MAAMoH,EAAoDpH,EAAY,OAChE4mF,EAAMhkF,EAAOwE,GACby/E,EAAYz/E,EAAKC,WACvB,IAAInN,EACA2sF,GAAa7gF,GACf7L,KAAKosF,iBAAiBK,IAAO,EAC7B1sF,EAAOyjF,IACEiJ,KAAOzsF,KAAKosF,0BACdpsF,KAAKosF,iBAAiBK,GAC7B1sF,EACE2sF,GAAa7gF,EACT23E,GACAkJ,GAAa7gF,EACb23E,QACAh9E,GAEIA,MAARzG,GACFC,KAAK4F,cAAc,IAAIijF,GAAgB9oF,EAAMkN,GAEhD,CAOD,mBAAA0/E,CAAoBvwD,GAClBp8B,KAAKopF,UAAUzkF,QACf3E,KAAKo8B,iBAAmBA,EACxBp8B,KAAK6H,SACN,CAQD,kBAAA+kF,CAAmBX,EAAiB1kF,GAClCvH,KAAKisF,gBAAkBA,EACvBjsF,KAAKopF,UAAUre,0BACI,IAARxjE,EACTvH,KAAK8pF,OAAOviF,GAEZvH,KAAK6H,SAER,CAOD,MAAAskF,CAAOtf,GACL,MAAM0e,EAAOD,GAAUze,GACvB7sE,KAAKurF,KAAOA,EACZvrF,KAAKksF,QAAQX,EACd,CAOD,OAAAW,CAAQX,GACNvrF,KAAKurF,KAAOA,EACZ,MAAMhkF,EAAMgkF,EAAK1yE,KAAK,MAClB7Y,KAAKgsF,yBACPhsF,KAAK4sF,mBAAmB5B,GAAoBO,EAAMvrF,KAAK2hB,UAAWpa,GAElEvH,KAAK8pF,OAAOviF,EAEf,CAQD,eAAA0kF,CAAgB3/E,EAAW4uB,EAAYhc,GAEtC,CAQD,OAAAurE,CAAQprD,EAAGjoB,EAAGC,GACZ,MAAMsyE,EAAepf,GAAUlrC,EAAGjoB,EAAGC,GACjCrX,KAAKopF,UAAUxf,YAAY+f,IAC7B3pF,KAAKopF,UAAUjgF,IAAIwgF,EAEtB,EAGH,IAAAkD,GAAef,GC+Mf,SAASgB,GAAwBC,EAAWpyD,GACQoyD,EAAUzxD,WAAYX,IACtEA,CACJ,CAEA,IAAAqyD,GAxXA,cAAwBlB,GAItB,WAAAhsF,CAAY4K,GACVzF,MAAM,CACJg5C,aAAcvzC,EAAQuzC,aACtB9S,UAAWzgC,EAAQygC,UACnB89C,OAAQv+E,EAAQu+E,OAChB/pE,WAAYxU,EAAQwU,WACpB3S,MAAO7B,EAAQ6B,MACfoV,SAAUjX,EAAQiX,SAClBya,iBAAkB1xB,EAAQ0xB,iBACtB1xB,EAAQ0xB,iBACR0wD,GACJ3D,eAAgBz+E,EAAQy+E,eACxB8C,gBAAiBvhF,EAAQuhF,gBACzBpf,IAAKniE,EAAQmiE,IACb0e,KAAM7gF,EAAQ6gF,KACdtsE,MAAOvU,EAAQuU,MACfvS,WAAYhC,EAAQgC,WACpBE,iBAC0BpG,IAAxBkE,EAAQkC,aAA4BlC,EAAQkC,YAC9CrF,IAAKmD,EAAQnD,IACbu8E,wBAAyBp5E,EAAQo5E,wBACjC0F,WAAY9+E,EAAQ8+E,aAOtBxpF,KAAKm8B,iBACqB31B,IAAxBkE,EAAQyxB,YAA4BzxB,EAAQyxB,YAAc,KAM5Dn8B,KAAKitF,eACmBzmF,IAAtBkE,EAAQuiF,UAA0BviF,EAAQuiF,UAAYC,GAMxDltF,KAAKmtF,uBAAyB,GAM9BntF,KAAKotF,sBAAwB,GAM7BptF,KAAKqtF,4BAA8B3iF,EAAQ4iF,2BAM3CttF,KAAKutF,0BAA2B,CACjC,CAKD,cAAAthD,GACE,GAAIjsC,KAAKopF,UAAUn9C,iBACjB,OAAO,EAET,IAAK,MAAM1kC,KAAOvH,KAAKmtF,uBACrB,GAAIntF,KAAKmtF,uBAAuB5lF,GAAK0kC,iBACnC,OAAO,EAIX,OAAO,CACR,CAMD,WAAAy9B,CAAYxqD,EAAY+mD,GACtB,MAAMunB,EAAgBxtF,KAAKypF,0BAA0BvqE,GAErDlf,KAAKopF,UAAU1f,YACb1pE,KAAKopF,WAAaoE,EAAgBvnB,EAAY,CAAE,GAElD,IAAK,MAAM14D,KAAMvN,KAAKmtF,uBAAwB,CAC5C,MAAM/D,EAAYppF,KAAKmtF,uBAAuB5/E,GAC9C67E,EAAU1f,YAAY0f,GAAaoE,EAAgBvnB,EAAY,CAAE,EAClE,CACF,CAMD,sBAAA4jB,CAAuB3qE,GACrB,OACElf,KAAK0uB,iBACLxP,IACCmM,GAAWrrB,KAAK0uB,gBAAiBxP,GAE3B,EAEFlf,KAAKytF,WACb,CAKD,SAAAA,GACE,OAAO,CACR,CAMD,MAAA1gF,GACE,IAAIxF,EAAMtC,MAAM8H,SAIhB,OAHK/M,KAAKokF,mBACR78E,GAAO,0BAEFA,CACR,CAMD,SAAAwiF,CAAU7qE,GACR,QACElf,KAAK0uB,iBACLxP,IACCmM,GAAWrrB,KAAK0uB,gBAAiBxP,KAI7Bja,MAAM8kF,UAAU7qE,EACxB,CAMD,wBAAA8qE,CAAyB9qE,GACvB,MAAMwuE,EAAW1tF,KAAK0uB,gBACtB,GAAI1uB,KAAK2hB,YAAc+rE,GAAYriE,GAAWqiE,EAAUxuE,IACtD,OAAOlf,KAAK2hB,SAEd,MAAMgsE,EAAUllF,EAAOyW,GAKvB,OAJMyuE,KAAW3tF,KAAKotF,wBACpBptF,KAAKotF,sBAAsBO,GACzB3D,GAAyB9qE,IAEtBlf,KAAKotF,sBAAsBO,EACnC,CAMD,yBAAAlE,CAA0BvqE,GACxB,MAAMwuE,EAAW1tF,KAAK0uB,gBACtB,IAAKg/D,GAAYriE,GAAWqiE,EAAUxuE,GACpC,OAAOlf,KAAKopF,UAEd,MAAMuE,EAAUllF,EAAOyW,GAMvB,OALMyuE,KAAW3tF,KAAKmtF,yBACpBntF,KAAKmtF,uBAAuBQ,GAAW,IAAItE,GACzCrpF,KAAKopF,UAAU/f,gBAGZrpE,KAAKmtF,uBAAuBQ,EACpC,CAYD,WAAAC,CAAYvuD,EAAGjoB,EAAGC,EAAG6jB,EAAYhc,EAAY3X,GAC3C,MAAM+E,EAAY,CAAC+yB,EAAGjoB,EAAGC,GACnB+zD,EAAeprE,KAAKsqF,+BACxBh+E,EACA4S,GAEI2uE,EAAUziB,EACZprE,KAAKisF,gBAAgB7gB,EAAclwC,EAAYhc,QAC/C1Y,EACEyG,EAAO,IAAIjN,KAAKitF,UACpB3gF,OACY9F,IAAZqnF,EAAwBhiF,EAAiBA,OAC7BrF,IAAZqnF,EAAwBA,EAAU,GAClC7tF,KAAKm8B,YACLn8B,KAAKo8B,iBACLp8B,KAAKupF,aAIP,OAFAt8E,EAAK1F,IAAMA,EACX0F,EAAK3H,iBAAiBwB,EAAkB9G,KAAKwuD,iBAAiBtnD,KAAKlH,OAC5DiN,CACR,CAUD,OAAAg9E,CAAQ5qD,EAAGjoB,EAAGC,EAAG6jB,EAAYhc,GAC3B,MAAMqM,EAAmBvrB,KAAK0uB,gBAC9B,IACGnD,IACArM,GACDmM,GAAWE,EAAkBrM,GAE7B,OAAOlf,KAAK8tF,gBACVzuD,EACAjoB,EACAC,EACA6jB,EACA3P,GAAoBrM,GAGxB,MAAMmE,EAAQrjB,KAAKypF,0BAA0BvqE,GACvC5S,EAAY,CAAC+yB,EAAGjoB,EAAGC,GACzB,IAAIpK,EACJ,MAAM08E,EAAe58E,GAAOT,GACxB+W,EAAMumD,YAAY+f,KACpB18E,EAAOoW,EAAMla,IAAIwgF,IAEnB,MAAMpiF,EAAMvH,KAAK+M,SACjB,GAAIE,GAAQA,EAAK1F,KAAOA,EACtB,OAAO0F,EAET,MAAM00E,EAAiB3hF,KAAKgqF,yBAAyBz+D,GAC/Cq2D,EAAiB5hF,KAAKgqF,yBAAyB9qE,GAC/C6sD,EAAmB/rE,KAAKsqF,+BAC5Bh+E,EACA4S,GAEI6uE,EAAU,IAAIC,GAClBziE,EACAo2D,EACAziE,EACA0iE,EACAt1E,EACAy/D,EACA/rE,KAAKmqF,kBAAkBjvD,GACvBl7B,KAAKytF,aACL,CAACpuD,EAAGjoB,EAAGC,EAAG6jB,IACRl7B,KAAK8tF,gBAAgBzuD,EAAGjoB,EAAGC,EAAG6jB,EAAY3P,IAC5CvrB,KAAKqtF,4BACLrtF,KAAKutF,yBACLvtF,KAAKupF,aAWP,OATAwE,EAAQxmF,IAAMA,EAEV0F,GACF8gF,EAAQvhF,YAAcS,EACtB8gF,EAAQ5gF,sBACRkW,EAAMC,QAAQqmE,EAAcoE,IAE5B1qE,EAAMvZ,IAAI6/E,EAAcoE,GAEnBA,CACR,CAWD,eAAAD,CAAgBzuD,EAAGjoB,EAAGC,EAAG6jB,EAAYhc,GACnC,IAAIjS,EAAO,KACX,MAAM08E,EAAepf,GAAUlrC,EAAGjoB,EAAGC,GAC/B9P,EAAMvH,KAAK+M,SACjB,GAAK/M,KAAKopF,UAAUxf,YAAY+f,IAK9B,GADA18E,EAAOjN,KAAKopF,UAAUjgF,IAAIwgF,GACtB18E,EAAK1F,KAAOA,EAAK,CAInB,MAAMiF,EAAcS,EACpBA,EAAOjN,KAAK4tF,YAAYvuD,EAAGjoB,EAAGC,EAAG6jB,EAAYhc,EAAY3X,GAGrDiF,EAAYU,YAAcrB,EAE5BoB,EAAKT,YAAcA,EAAYA,YAE/BS,EAAKT,YAAcA,EAErBS,EAAKE,sBACLnN,KAAKopF,UAAU9lE,QAAQqmE,EAAc18E,EACtC,OApBDA,EAAOjN,KAAK4tF,YAAYvuD,EAAGjoB,EAAGC,EAAG6jB,EAAYhc,EAAY3X,GACzDvH,KAAKopF,UAAUt/E,IAAI6/E,EAAc18E,GAqBnC,OAAOA,CACR,CAOD,0BAAAghF,CAA2BpxC,GACzB,GAAI78C,KAAKutF,0BAA4B1wC,EAArC,CAGA78C,KAAKutF,yBAA2B1wC,EAChC,IAAK,MAAMtvC,KAAMvN,KAAKmtF,uBACpBntF,KAAKmtF,uBAAuB5/E,GAAI5I,QAElC3E,KAAK6H,SALJ,CAMF,CAcD,wBAAAqmF,CAAyBhvE,EAAYivE,GACnC,MAAMC,EAAO1/D,GAAcxP,GAC3B,GAAIkvE,EAAM,CACR,MAAMT,EAAUllF,EAAO2lF,GACjBT,KAAW3tF,KAAKotF,wBACpBptF,KAAKotF,sBAAsBO,GAAWQ,EAEzC,CACF,CAED,KAAAxpF,GACEM,MAAMN,QACN,IAAK,MAAM4I,KAAMvN,KAAKmtF,uBACpBntF,KAAKmtF,uBAAuB5/E,GAAI5I,OAEnC,GC/ZI,SAAS0pF,GAAQ/hF,GACtB,MAAM+yB,EAAI/yB,EAAU,GACdgiF,EAAS,IAAIjsF,MAAMg9B,GACzB,IACIz9B,EAAG+pF,EADH4C,EAAO,GAAMlvD,EAAI,EAErB,IAAKz9B,EAAI,EAAGA,EAAIy9B,IAAKz9B,EAEnB+pF,EAAW,GACPr/E,EAAU,GAAKiiF,IACjB5C,GAAY,GAEVr/E,EAAU,GAAKiiF,IACjB5C,GAAY,GAEd2C,EAAO1sF,GAAKgH,OAAOgjF,aAAaD,GAChC4C,IAAS,EAEX,OAAOD,EAAOz1E,KAAK,GACrB,CA+SA,IAAA21E,GA3NA,cAAuBC,GAIrB,WAAA3uF,CAAY4K,GACV,MAAMgkF,OAA0BloF,IAAlBkE,EAAQgkF,OAAsBhkF,EAAQgkF,MAEpDzpF,MAAM,CACJkmC,UAAWzgC,EAAQygC,UACnBhP,YAAa,YACbvvB,YAAalC,EAAQkC,YACrBq8E,QAAQ,EACR/pE,WAAYwP,GAAc,aAC1B4+D,2BAA4B5iF,EAAQ4iF,2BACpC/gF,MAAO,UACP6vB,iBAAkB1xB,EAAQ0xB,iBAC1B+sD,eAAgBuF,EAAQ,EAAI,EAC5BzvE,WAAyBzY,IAAlBkE,EAAQuU,OAAsBvU,EAAQuU,MAC7CvS,WAAYhC,EAAQgC,WACpB88E,WAAY9+E,EAAQ8+E,aAOtBxpF,KAAK2uF,OAASD,EAMd1uF,KAAK4uF,cAA+BpoF,IAApBkE,EAAQmkF,QAAwBnkF,EAAQmkF,QAAU,QAMlE7uF,KAAK8uF,cAA+BtoF,IAApBkE,EAAQwiC,QAAwBxiC,EAAQwiC,SAAW,EAMnEltC,KAAK+uF,QAAUrkF,EAAQnD,IAMvBvH,KAAKgvF,YAActkF,EAAQukF,WAM3BjvF,KAAKkvF,kBAAoBxkF,EAAQykF,iBAEjC,MAAMtiB,EACJ,yDACA7sE,KAAKgvF,YACL,iDACAhvF,KAAK+uF,QACL,MACA/uF,KAAK4uF,SAEPQ,MAAMviB,GACH/4D,MAAM66D,GAAaA,EAAS0gB,SAC5Bv7E,MAAMu7E,GAASrvF,KAAKsvF,8BAA8BD,IACtD,CAQD,SAAAE,GACE,OAAOvvF,KAAK+uF,OACb,CAQD,aAAAS,GACE,OAAOxvF,KAAKgvF,WACb,CAKD,6BAAAM,CAA8B3gB,GAC5B,GACyB,KAAvBA,EAAS8gB,YACqB,MAA9B9gB,EAAS+gB,mBAC4B,oBAArC/gB,EAASghB,0BACuB,GAAhChhB,EAASihB,aAAazuF,QACuB,GAA7CwtE,EAASihB,aAAa,GAAGC,UAAU1uF,OAGnC,YADAnB,KAAK8M,SAAS,SAIhB,MAAMgjF,EAAWnhB,EAASihB,aAAa,GAAGC,UAAU,GAC9C3iD,GAA4B,GAAlBltC,KAAK8uF,SAAiBgB,EAASC,QAAU/vF,KAAK8uF,SAGxDv1E,EAAS+uE,GADUtoF,KAAK0uB,iBAExBhX,EAAQ1X,KAAK2uF,OAAS,EAAI,EAC1B3J,EACJ8K,EAASE,YAAcF,EAASG,YAC5BH,EAASE,WAAat4E,EACtB,CAACo4E,EAASE,WAAat4E,EAAOo4E,EAASG,YAAcv4E,GAErDiK,EAAW8mE,GAAU,CACzBlvE,OAAQA,EACR0zB,QAAS6iD,EAASI,QAClBhjD,QAASA,EACT83C,SAAUA,IAEZhlF,KAAK2hB,SAAWA,EAEhB,MAAMktE,EAAU7uF,KAAK4uF,SACfF,EAAQ1uF,KAAK2uF,OACbQ,EAAmBnvF,KAAKkvF,kBA4C9B,GA3CAlvF,KAAKisF,gBAAkBd,GACrB2E,EAASK,mBAAmBvlD,KAAI,SAAUwlD,GAExC,MAAMC,EAAmB,CAAC,EAAG,EAAG,GAC1BC,EAAWR,EAASQ,SACvBhtE,QAAQ,cAAe8sE,GACvB9sE,QAAQ,YAAaurE,GACxB,OAAA,SAOYviF,EAAW4uB,EAAYhc,GAC/B,IAAK5S,EACH,OAEFmO,GACEnO,EAAU,GACVA,EAAU,GACVA,EAAU,GACV+jF,GAEF,MAAMxjB,EAAM,IAAIoC,IACdqhB,EAAShtE,QAAQ,YAAa+qE,GAAQgC,KAElCE,EAAS1jB,EAAI2jB,aAUnB,OATI9B,IACF6B,EAAOzmF,IAAI,MAAO,MAClBymF,EAAOzmF,IAAI,SAAU,YAEE,IAArBqlF,EACFoB,EAAOE,OAAO,MACgB,IAArBtB,GACToB,EAAOzmF,IAAI,IAAK,KAEX+iE,EAAIl0D,UAEb,CACV,KAGQm3E,EAASY,iBAAkB,CAC7B,MAAM36E,EAAYiU,GAChB0E,GAAc,aACd1uB,KAAK0uB,iBAGP1uB,KAAKskF,iBAAiB9mC,IACpB,MAAMS,EAAe,GACf1E,EAAYiE,EAAWjE,UACvB53B,EAAW3hB,KAAKkqF,cAChB7qD,EAAI1d,EAASkhE,kBACjBtpC,EAAU78B,WACV1c,KAAKwpF,YAMDr0C,EAJYxzB,EAAS8kE,yBACzBltC,EAAU98B,OACV4iB,GAEqB,GAsBvB,OArBAywD,EAASY,iBAAiB9lD,KAAI,SAAU+lD,GACtC,IAAIC,GAAe,EACnB,MAAMC,EAAgBF,EAAgBE,cACtC,IAAK,IAAIjvF,EAAI,EAAGuE,EAAK0qF,EAAc1vF,OAAQS,EAAIuE,IAAMvE,EAAG,CACtD,MAAMkvF,EAAeD,EAAcjvF,GACnC,GAAIuzC,GAAQ27C,EAAaZ,SAAW/6C,GAAQ27C,EAAaf,QAAS,CAChE,MAAMgB,EAAOD,EAAaC,KAG1B,GAAIlzE,GADWa,GADQ,CAACqyE,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACVh7E,GACvBynC,EAAWjkC,QAAS,CACzCq3E,GAAe,EACf,KACD,CACF,CACF,CACGA,GACF3yC,EAAat4C,KAAKgrF,EAAgBz8B,YAE9C,IAEQjW,EAAat4C,KA7RnB,gIA8Ras4C,CAAY,GAEtB,CAEDj+C,KAAK8M,SAAS,QACf,GC7MH,IAAAkkF,GAxDA,cAAkBvC,GAIhB,WAAA3uF,CAAY4K,GAGV,MAAMwU,OACmB1Y,KAHzBkE,EAAUA,GAAW,IAGXwU,WAA2BxU,EAAQwU,WAAa,YAEpDyC,OACiBnb,IAArBkE,EAAQiX,SACJjX,EAAQiX,SACR8mE,GAAU,CACRlvE,OAAQ+uE,GAAqBppE,GAC7B6tB,cAAeriC,EAAQqiC,cACvBG,QAASxiC,EAAQwiC,QACjBD,QAASviC,EAAQuiC,QACjB+3C,SAAUt6E,EAAQs6E,WAG1B//E,MAAM,CACJg5C,aAAcvzC,EAAQuzC,aACtB9S,UAAWzgC,EAAQygC,UACnBhP,YAAazxB,EAAQyxB,YACrBvvB,YAAalC,EAAQkC,YACrBq8E,OAAQv+E,EAAQu+E,OAChB/pE,WAAYA,EACZouE,2BAA4B5iF,EAAQ4iF,2BACpC3rE,SAAUA,EACVya,iBAAkB1xB,EAAQ0xB,iBAC1B+sD,eAAgBz+E,EAAQy+E,eACxB8C,gBAAiBvhF,EAAQuhF,gBACzBpf,IAAKniE,EAAQmiE,IACb0e,KAAM7gF,EAAQ6gF,KACdtsE,WAAyBzY,IAAlBkE,EAAQuU,OAAsBvU,EAAQuU,MAC7CvS,WAAYhC,EAAQgC,WACpBo3E,wBAAyBp5E,EAAQo5E,wBACjC0F,WAAY9+E,EAAQ8+E,aAOtBxpF,KAAK+hF,aAA6Bv7E,IAAnBkE,EAAQgyE,OAAuBhyE,EAAQgyE,OAAS,CAChE,CAKD,SAAA+Q,GACE,OAAOztF,KAAK+hF,OACb,GC5HY,SAASkP,GAAYxvF,EAAK6iB,EAAG+/B,EAAMhvB,EAAOvyB,GACrDouF,GAAgBzvF,EAAK6iB,EAAG+/B,GAAQ,EAAGhvB,GAAU5zB,EAAIN,OAAS,EAAI2B,GAAWquF,GAC7E,CAEA,SAASD,GAAgBzvF,EAAK6iB,EAAG+/B,EAAMhvB,EAAOvyB,GAE1C,KAAOuyB,EAAQgvB,GAAM,CACjB,GAAIhvB,EAAQgvB,EAAO,IAAK,CACpB,IAAI1iD,EAAI0zB,EAAQgvB,EAAO,EACnBrkC,EAAIsE,EAAI+/B,EAAO,EACfhlB,EAAIrzB,KAAKqW,IAAI1gB,GACbkoC,EAAI,GAAM79B,KAAKmX,IAAI,EAAIkc,EAAI,GAC3B+xD,EAAK,GAAMplF,KAAKka,KAAKmZ,EAAIwK,GAAKloC,EAAIkoC,GAAKloC,IAAMqe,EAAIre,EAAI,EAAI,GAAK,EAAI,GAGtEuvF,GAAgBzvF,EAAK6iB,EAFPtY,KAAKyP,IAAI4oC,EAAMr4C,KAAKuT,MAAM+E,EAAItE,EAAI6pB,EAAIloC,EAAIyvF,IACzCplF,KAAKwP,IAAI6Z,EAAOrpB,KAAKuT,MAAM+E,GAAK3iB,EAAIqe,GAAK6pB,EAAIloC,EAAIyvF,IACrBtuF,EAC9C,CAED,IAAIiJ,EAAItK,EAAI6iB,GACR1iB,EAAIyiD,EACJjgC,EAAIiR,EAKR,IAHAg8D,GAAK5vF,EAAK4iD,EAAM//B,GACZxhB,EAAQrB,EAAI4zB,GAAQtpB,GAAK,GAAGslF,GAAK5vF,EAAK4iD,EAAMhvB,GAEzCzzB,EAAIwiB,GAAG,CAIV,IAHAitE,GAAK5vF,EAAKG,EAAGwiB,GACbxiB,IACAwiB,IACOthB,EAAQrB,EAAIG,GAAImK,GAAK,GAAGnK,IAC/B,KAAOkB,EAAQrB,EAAI2iB,GAAIrY,GAAK,GAAGqY,GAClC,CAE6B,IAA1BthB,EAAQrB,EAAI4iD,GAAOt4C,GAAUslF,GAAK5vF,EAAK4iD,EAAMjgC,GAG7CitE,GAAK5vF,IADL2iB,EACaiR,GAGbjR,GAAKE,IAAG+/B,EAAOjgC,EAAI,GACnBE,GAAKF,IAAGiR,EAAQjR,EAAI,EAC3B,CACL,CAEA,SAASitE,GAAK5vF,EAAKG,EAAGwiB,GAClB,IAAIniB,EAAMR,EAAIG,GACdH,EAAIG,GAAKH,EAAI2iB,GACb3iB,EAAI2iB,GAAKniB,CACb,CAEA,SAASkvF,GAAe9vF,EAAGC,GACvB,OAAOD,EAAIC,GAAK,EAAID,EAAIC,EAAI,EAAI,CACpC,CCnDe,IAAAgwF,GAAA,MACX,WAAAxxF,CAAYyxF,EAAa,GAErBvxF,KAAKwxF,YAAcxlF,KAAKyP,IAAI,EAAG81E,GAC/BvxF,KAAKyxF,YAAczlF,KAAKyP,IAAI,EAAGzP,KAAKiZ,KAAwB,GAAnBjlB,KAAKwxF,cAC9CxxF,KAAK2E,OACR,CAED,GAAAqxD,GACI,OAAOh2D,KAAK0xF,KAAK1xF,KAAKmC,KAAM,GAC/B,CAED,MAAAwvF,CAAOZ,GACH,IAAIz/E,EAAOtR,KAAKmC,KAChB,MAAMquC,EAAS,GAEf,IAAK3yB,GAAWkzE,EAAMz/E,GAAO,OAAOk/B,EAEpC,MAAMohD,EAAS5xF,KAAK4xF,OACdC,EAAgB,GAEtB,KAAOvgF,GAAM,CACT,IAAK,IAAI1P,EAAI,EAAGA,EAAI0P,EAAKK,SAASxQ,OAAQS,IAAK,CAC3C,MAAMkwF,EAAQxgF,EAAKK,SAAS/P,GACtBmwF,EAAYzgF,EAAK0gF,KAAOJ,EAAOE,GAASA,EAE1Cj0E,GAAWkzE,EAAMgB,KACbzgF,EAAK0gF,KAAMxhD,EAAO7qC,KAAKmsF,GAClBh/B,GAASi+B,EAAMgB,GAAY/xF,KAAK0xF,KAAKI,EAAOthD,GAChDqhD,EAAclsF,KAAKmsF,GAE/B,CACDxgF,EAAOugF,EAAc5mF,KACxB,CAED,OAAOulC,CACV,CAED,QAAAyhD,CAASlB,GACL,IAAIz/E,EAAOtR,KAAKmC,KAEhB,IAAK0b,GAAWkzE,EAAMz/E,GAAO,OAAO,EAEpC,MAAMugF,EAAgB,GACtB,KAAOvgF,GAAM,CACT,IAAK,IAAI1P,EAAI,EAAGA,EAAI0P,EAAKK,SAASxQ,OAAQS,IAAK,CAC3C,MAAMkwF,EAAQxgF,EAAKK,SAAS/P,GACtBmwF,EAAYzgF,EAAK0gF,KAAOhyF,KAAK4xF,OAAOE,GAASA,EAEnD,GAAIj0E,GAAWkzE,EAAMgB,GAAY,CAC7B,GAAIzgF,EAAK0gF,MAAQl/B,GAASi+B,EAAMgB,GAAY,OAAO,EACnDF,EAAclsF,KAAKmsF,EACtB,CACJ,CACDxgF,EAAOugF,EAAc5mF,KACxB,CAED,OAAO,CACV,CAED,IAAAoC,CAAKlL,GACD,IAAMA,IAAQA,EAAKhB,OAAS,OAAOnB,KAEnC,GAAImC,EAAKhB,OAASnB,KAAKyxF,YAAa,CAChC,IAAK,IAAI7vF,EAAI,EAAGA,EAAIO,EAAKhB,OAAQS,IAC7B5B,KAAKkyF,OAAO/vF,EAAKP,IAErB,OAAO5B,IACV,CAGD,IAAIsR,EAAOtR,KAAKmyF,OAAOhwF,EAAK2B,QAAS,EAAG3B,EAAKhB,OAAS,EAAG,GAEzD,GAAKnB,KAAKmC,KAAKwP,SAASxQ,OAIjB,GAAInB,KAAKmC,KAAKsN,SAAW6B,EAAK7B,OAEjCzP,KAAKoyF,WAAWpyF,KAAKmC,KAAMmP,OAExB,CACH,GAAItR,KAAKmC,KAAKsN,OAAS6B,EAAK7B,OAAQ,CAEhC,MAAM4iF,EAAUryF,KAAKmC,KACrBnC,KAAKmC,KAAOmP,EACZA,EAAO+gF,CACV,CAGDryF,KAAKsyF,QAAQhhF,EAAMtR,KAAKmC,KAAKsN,OAAS6B,EAAK7B,OAAS,GAAG,EAC1D,MAhBGzP,KAAKmC,KAAOmP,EAkBhB,OAAOtR,IACV,CAED,MAAAkyF,CAAO7mF,GAEH,OADIA,GAAMrL,KAAKsyF,QAAQjnF,EAAMrL,KAAKmC,KAAKsN,OAAS,GACzCzP,IACV,CAED,KAAA2E,GAEI,OADA3E,KAAKmC,KAAOowF,GAAW,IAChBvyF,IACV,CAED,MAAAyL,CAAOJ,EAAMmnF,GACT,IAAKnnF,EAAM,OAAOrL,KAElB,IAAIsR,EAAOtR,KAAKmC,KAChB,MAAM4uF,EAAO/wF,KAAK4xF,OAAOvmF,GACnBonF,EAAO,GACPC,EAAU,GAChB,IAAI9wF,EAAGsP,EAAQyhF,EAGf,KAAOrhF,GAAQmhF,EAAKtxF,QAAQ,CASxB,GAPKmQ,IACDA,EAAOmhF,EAAKxnF,MACZiG,EAASuhF,EAAKA,EAAKtxF,OAAS,GAC5BS,EAAI8wF,EAAQznF,MACZ0nF,GAAU,GAGVrhF,EAAK0gF,KAAM,CACX,MAAM/uF,EAAQ2vF,GAASvnF,EAAMiG,EAAKK,SAAU6gF,GAE5C,IAAe,IAAXvvF,EAKA,OAHAqO,EAAKK,SAAS9K,OAAO5D,EAAO,GAC5BwvF,EAAK9sF,KAAK2L,GACVtR,KAAK6yF,UAAUJ,GACRzyF,IAEd,CAEI2yF,GAAYrhF,EAAK0gF,OAAQl/B,GAASxhD,EAAMy/E,GAOlC7/E,GACPtP,IACA0P,EAAOJ,EAAOS,SAAS/P,GACvB+wF,GAAU,GAEPrhF,EAAO,MAXVmhF,EAAK9sF,KAAK2L,GACVohF,EAAQ/sF,KAAK/D,GACbA,EAAI,EACJsP,EAASI,EACTA,EAAOA,EAAKK,SAAS,GAQ5B,CAED,OAAO3R,IACV,CAED,MAAA4xF,CAAOvmF,GAAQ,OAAOA,CAAO,CAE7B,WAAAynF,CAAYzxF,EAAGC,GAAK,OAAOD,EAAE8Y,KAAO7Y,EAAE6Y,IAAO,CAC7C,WAAA44E,CAAY1xF,EAAGC,GAAK,OAAOD,EAAE+Y,KAAO9Y,EAAE8Y,IAAO,CAE7C,MAAA44E,GAAW,OAAOhzF,KAAKmC,IAAO,CAE9B,QAAA8wF,CAAS9wF,GAEL,OADAnC,KAAKmC,KAAOA,EACLnC,IACV,CAED,IAAA0xF,CAAKpgF,EAAMk/B,GACP,MAAMqhD,EAAgB,GACtB,KAAOvgF,GACCA,EAAK0gF,KAAMxhD,EAAO7qC,QAAQ2L,EAAKK,UAC9BkgF,EAAclsF,QAAQ2L,EAAKK,UAEhCL,EAAOugF,EAAc5mF,MAEzB,OAAOulC,CACV,CAED,MAAA2hD,CAAOe,EAAO7uC,EAAMhvB,EAAO5lB,GAEvB,MAAM0jF,EAAI99D,EAAQgvB,EAAO,EACzB,IACI/yC,EADA8hF,EAAIpzF,KAAKwxF,YAGb,GAAI2B,GAAKC,EAIL,OAFA9hF,EAAOihF,GAAWW,EAAMpvF,MAAMugD,EAAMhvB,EAAQ,IAC5Cg+D,GAAS/hF,EAAMtR,KAAK4xF,QACbtgF,EAGN7B,IAEDA,EAASzD,KAAKiZ,KAAKjZ,KAAKqW,IAAI8wE,GAAKnnF,KAAKqW,IAAI+wE,IAG1CA,EAAIpnF,KAAKiZ,KAAKkuE,EAAInnF,KAAKC,IAAImnF,EAAG3jF,EAAS,KAG3C6B,EAAOihF,GAAW,IAClBjhF,EAAK0gF,MAAO,EACZ1gF,EAAK7B,OAASA,EAId,MAAM6jF,EAAKtnF,KAAKiZ,KAAKkuE,EAAIC,GACnBG,EAAKD,EAAKtnF,KAAKiZ,KAAKjZ,KAAKka,KAAKktE,IAEpCI,GAAYN,EAAO7uC,EAAMhvB,EAAOk+D,EAAIvzF,KAAK8yF,aAEzC,IAAK,IAAIlxF,EAAIyiD,EAAMziD,GAAKyzB,EAAOzzB,GAAK2xF,EAAI,CAEpC,MAAME,EAASznF,KAAKwP,IAAI5Z,EAAI2xF,EAAK,EAAGl+D,GAEpCm+D,GAAYN,EAAOtxF,EAAG6xF,EAAQH,EAAItzF,KAAK+yF,aAEvC,IAAK,IAAI3uE,EAAIxiB,EAAGwiB,GAAKqvE,EAAQrvE,GAAKkvE,EAAI,CAElC,MAAMI,EAAS1nF,KAAKwP,IAAI4I,EAAIkvE,EAAK,EAAGG,GAGpCniF,EAAKK,SAAShM,KAAK3F,KAAKmyF,OAAOe,EAAO9uE,EAAGsvE,EAAQjkF,EAAS,GAC7D,CACJ,CAID,OAFA4jF,GAAS/hF,EAAMtR,KAAK4xF,QAEbtgF,CACV,CAED,cAAAqiF,CAAe5C,EAAMz/E,EAAMyX,EAAO0pE,GAC9B,KACIA,EAAK9sF,KAAK2L,IAENA,EAAK0gF,MAAQS,EAAKtxF,OAAS,IAAM4nB,GAH5B,CAKT,IAEI6qE,EAFA55B,EAAUx/C,IACVq5E,EAAiBr5E,IAGrB,IAAK,IAAI5Y,EAAI,EAAGA,EAAI0P,EAAKK,SAASxQ,OAAQS,IAAK,CAC3C,MAAMkwF,EAAQxgF,EAAKK,SAAS/P,GACtBsa,EAAO43E,GAAShC,GAChBiC,GAgNA1yF,EAhN2B0vF,EAgNxBzvF,EAhN8BwwF,GAiN3C9lF,KAAKyP,IAAIna,EAAE+Y,KAAMhZ,EAAEgZ,MAAQrO,KAAKwP,IAAIla,EAAE6Y,KAAM9Y,EAAE8Y,QAC9CnO,KAAKyP,IAAIna,EAAEgZ,KAAMjZ,EAAEiZ,MAAQtO,KAAKwP,IAAIla,EAAE8Y,KAAM/Y,EAAE+Y,OAlNM8B,GAG5C63E,EAAcF,GACdA,EAAiBE,EACjB/5B,EAAU99C,EAAO89C,EAAU99C,EAAO89C,EAClC45B,EAAa9B,GAENiC,IAAgBF,GAEnB33E,EAAO89C,IACPA,EAAU99C,EACV03E,EAAa9B,EAGxB,CAEDxgF,EAAOsiF,GAActiF,EAAKK,SAAS,EACtC,CA8LT,IAAsBtQ,EAAGC,EA5LjB,OAAOgQ,CACV,CAED,OAAAghF,CAAQjnF,EAAM0d,EAAOirE,GACjB,MAAMjD,EAAOiD,EAAS3oF,EAAOrL,KAAK4xF,OAAOvmF,GACnC4oF,EAAa,GAGb3iF,EAAOtR,KAAK2zF,eAAe5C,EAAM/wF,KAAKmC,KAAM4mB,EAAOkrE,GAOzD,IAJA3iF,EAAKK,SAAShM,KAAK0F,GACnBnJ,GAAOoP,EAAMy/E,GAGNhoE,GAAS,GACRkrE,EAAWlrE,GAAOpX,SAASxQ,OAASnB,KAAKwxF,aACzCxxF,KAAKk0F,OAAOD,EAAYlrE,GACxBA,IAKR/oB,KAAKm0F,oBAAoBpD,EAAMkD,EAAYlrE,EAC9C,CAGD,MAAAmrE,CAAOD,EAAYlrE,GACf,MAAMzX,EAAO2iF,EAAWlrE,GAClBqqE,EAAI9hF,EAAKK,SAASxQ,OAClB6e,EAAIhgB,KAAKyxF,YAEfzxF,KAAKo0F,iBAAiB9iF,EAAM0O,EAAGozE,GAE/B,MAAMiB,EAAar0F,KAAKs0F,kBAAkBhjF,EAAM0O,EAAGozE,GAE7CpiF,EAAUuhF,GAAWjhF,EAAKK,SAAS9K,OAAOwtF,EAAY/iF,EAAKK,SAASxQ,OAASkzF,IACnFrjF,EAAQvB,OAAS6B,EAAK7B,OACtBuB,EAAQghF,KAAO1gF,EAAK0gF,KAEpBqB,GAAS/hF,EAAMtR,KAAK4xF,QACpByB,GAASriF,EAAShR,KAAK4xF,QAEnB7oE,EAAOkrE,EAAWlrE,EAAQ,GAAGpX,SAAShM,KAAKqL,GAC1ChR,KAAKoyF,WAAW9gF,EAAMN,EAC9B,CAED,UAAAohF,CAAW9gF,EAAMN,GAEbhR,KAAKmC,KAAOowF,GAAW,CAACjhF,EAAMN,IAC9BhR,KAAKmC,KAAKsN,OAAS6B,EAAK7B,OAAS,EACjCzP,KAAKmC,KAAK6vF,MAAO,EACjBqB,GAASrzF,KAAKmC,KAAMnC,KAAK4xF,OAC5B,CAED,iBAAA0C,CAAkBhjF,EAAM0O,EAAGozE,GACvB,IAAInwF,EACAsxF,EAAa/5E,IACbw/C,EAAUx/C,IAEd,IAAK,IAAI5Y,EAAIoe,EAAGpe,GAAKwxF,EAAIpzE,EAAGpe,IAAK,CAC7B,MAAM4yF,EAAQC,GAASnjF,EAAM,EAAG1P,EAAG5B,KAAK4xF,QAClC8C,EAAQD,GAASnjF,EAAM1P,EAAGwxF,EAAGpzF,KAAK4xF,QAElC+C,EAAUC,GAAiBJ,EAAOE,GAClCx4E,EAAO43E,GAASU,GAASV,GAASY,GAGpCC,EAAUJ,GACVA,EAAaI,EACb1xF,EAAQrB,EAERo4D,EAAU99C,EAAO89C,EAAU99C,EAAO89C,GAE3B26B,IAAYJ,GAEfr4E,EAAO89C,IACPA,EAAU99C,EACVjZ,EAAQrB,EAGnB,CAED,OAAOqB,GAASmwF,EAAIpzE,CACvB,CAGD,gBAAAo0E,CAAiB9iF,EAAM0O,EAAGozE,GACtB,MAAMN,EAAcxhF,EAAK0gF,KAAOhyF,KAAK8yF,YAAc+B,GAC7C9B,EAAczhF,EAAK0gF,KAAOhyF,KAAK+yF,YAAc+B,GACnC90F,KAAK+0F,eAAezjF,EAAM0O,EAAGozE,EAAGN,GAChC9yF,KAAK+0F,eAAezjF,EAAM0O,EAAGozE,EAAGL,IAIzBzhF,EAAKK,SAASyiB,KAAK0+D,EAC7C,CAGD,cAAAiC,CAAezjF,EAAM0O,EAAGozE,EAAGtwF,GACvBwO,EAAKK,SAASyiB,KAAKtxB,GAEnB,MAAM8uF,EAAS5xF,KAAK4xF,OACdoD,EAAWP,GAASnjF,EAAM,EAAG0O,EAAG4xE,GAChCqD,EAAYR,GAASnjF,EAAM8hF,EAAIpzE,EAAGozE,EAAGxB,GAC3C,IAAIxpB,EAAS8sB,GAAWF,GAAYE,GAAWD,GAE/C,IAAK,IAAIrzF,EAAIoe,EAAGpe,EAAIwxF,EAAIpzE,EAAGpe,IAAK,CAC5B,MAAMkwF,EAAQxgF,EAAKK,SAAS/P,GAC5BM,GAAO8yF,EAAU1jF,EAAK0gF,KAAOJ,EAAOE,GAASA,GAC7C1pB,GAAU8sB,GAAWF,EACxB,CAED,IAAK,IAAIpzF,EAAIwxF,EAAIpzE,EAAI,EAAGpe,GAAKoe,EAAGpe,IAAK,CACjC,MAAMkwF,EAAQxgF,EAAKK,SAAS/P,GAC5BM,GAAO+yF,EAAW3jF,EAAK0gF,KAAOJ,EAAOE,GAASA,GAC9C1pB,GAAU8sB,GAAWD,EACxB,CAED,OAAO7sB,CACV,CAED,mBAAA+rB,CAAoBpD,EAAM0B,EAAM1pE,GAE5B,IAAK,IAAInnB,EAAImnB,EAAOnnB,GAAK,EAAGA,IACxBM,GAAOuwF,EAAK7wF,GAAImvF,EAEvB,CAED,SAAA8B,CAAUJ,GAEN,IAAK,IAAyB0C,EAArBvzF,EAAI6wF,EAAKtxF,OAAS,EAAaS,GAAK,EAAGA,IACZ,IAA5B6wF,EAAK7wF,GAAG+P,SAASxQ,OACbS,EAAI,GACJuzF,EAAW1C,EAAK7wF,EAAI,GAAG+P,SACvBwjF,EAAStuF,OAAOsuF,EAASvuF,QAAQ6rF,EAAK7wF,IAAK,IAExC5B,KAAK2E,QAET0uF,GAASZ,EAAK7wF,GAAI5B,KAAK4xF,OAErC,GAGL,SAASgB,GAASvnF,EAAM6nF,EAAOV,GAC3B,IAAKA,EAAU,OAAOU,EAAMtsF,QAAQyE,GAEpC,IAAK,IAAIzJ,EAAI,EAAGA,EAAIsxF,EAAM/xF,OAAQS,IAC9B,GAAI4wF,EAASnnF,EAAM6nF,EAAMtxF,IAAK,OAAOA,EAEzC,OAAQ,CACZ,CAGA,SAASyxF,GAAS/hF,EAAMsgF,GACpB6C,GAASnjF,EAAM,EAAGA,EAAKK,SAASxQ,OAAQywF,EAAQtgF,EACpD,CAGA,SAASmjF,GAASnjF,EAAMgT,EAAG8wE,EAAGxD,EAAQyD,GAC7BA,IAAUA,EAAW9C,GAAW,OACrC8C,EAASl7E,KAAOK,IAChB66E,EAASj7E,KAAOI,IAChB66E,EAASh7E,MAAQG,IACjB66E,EAAS/6E,MAAQE,IAEjB,IAAK,IAAI5Y,EAAI0iB,EAAG1iB,EAAIwzF,EAAGxzF,IAAK,CACxB,MAAMkwF,EAAQxgF,EAAKK,SAAS/P,GAC5BM,GAAOmzF,EAAU/jF,EAAK0gF,KAAOJ,EAAOE,GAASA,EAChD,CAED,OAAOuD,CACX,CAEA,SAASnzF,GAAOb,EAAGC,GAKf,OAJAD,EAAE8Y,KAAOnO,KAAKwP,IAAIna,EAAE8Y,KAAM7Y,EAAE6Y,MAC5B9Y,EAAE+Y,KAAOpO,KAAKwP,IAAIna,EAAE+Y,KAAM9Y,EAAE8Y,MAC5B/Y,EAAEgZ,KAAOrO,KAAKyP,IAAIpa,EAAEgZ,KAAM/Y,EAAE+Y,MAC5BhZ,EAAEiZ,KAAOtO,KAAKyP,IAAIpa,EAAEiZ,KAAMhZ,EAAEgZ,MACrBjZ,CACX,CAEA,SAASwzF,GAAgBxzF,EAAGC,GAAK,OAAOD,EAAE8Y,KAAO7Y,EAAE6Y,IAAO,CAC1D,SAAS26E,GAAgBzzF,EAAGC,GAAK,OAAOD,EAAE+Y,KAAO9Y,EAAE8Y,IAAO,CAE1D,SAAS05E,GAASzyF,GAAO,OAAQA,EAAEgZ,KAAOhZ,EAAE8Y,OAAS9Y,EAAEiZ,KAAOjZ,EAAE+Y,KAAQ,CACxE,SAAS86E,GAAW7zF,GAAK,OAAQA,EAAEgZ,KAAOhZ,EAAE8Y,MAAS9Y,EAAEiZ,KAAOjZ,EAAE+Y,KAAQ,CAOxE,SAASw6E,GAAiBvzF,EAAGC,GACzB,MAAM6Y,EAAOnO,KAAKyP,IAAIpa,EAAE8Y,KAAM7Y,EAAE6Y,MAC1BC,EAAOpO,KAAKyP,IAAIpa,EAAE+Y,KAAM9Y,EAAE8Y,MAC1BC,EAAOrO,KAAKwP,IAAIna,EAAEgZ,KAAM/Y,EAAE+Y,MAC1BC,EAAOtO,KAAKwP,IAAIna,EAAEiZ,KAAMhZ,EAAEgZ,MAEhC,OAAOtO,KAAKyP,IAAI,EAAGpB,EAAOF,GACnBnO,KAAKyP,IAAI,EAAGnB,EAAOF,EAC9B,CAEA,SAAS04C,GAASzxD,EAAGC,GACjB,OAAOD,EAAE8Y,MAAQ7Y,EAAE6Y,MACZ9Y,EAAE+Y,MAAQ9Y,EAAE8Y,MACZ9Y,EAAE+Y,MAAQhZ,EAAEgZ,MACZ/Y,EAAEgZ,MAAQjZ,EAAEiZ,IACvB,CAEA,SAASuD,GAAWxc,EAAGC,GACnB,OAAOA,EAAE6Y,MAAQ9Y,EAAEgZ,MACZ/Y,EAAE8Y,MAAQ/Y,EAAEiZ,MACZhZ,EAAE+Y,MAAQhZ,EAAE8Y,MACZ7Y,EAAEgZ,MAAQjZ,EAAE+Y,IACvB,CAEA,SAASm4E,GAAW5gF,GAChB,MAAO,CACHA,WACAlC,OAAQ,EACRuiF,MAAM,EACN73E,KAAMK,IACNJ,KAAMI,IACNH,MAAOG,IACPF,MAAOE,IAEf,CAKA,SAASg5E,GAAY/xF,EAAK4iD,EAAMhvB,EAAO1zB,EAAGmB,GACtC,MAAM+uB,EAAQ,CAACwyB,EAAMhvB,GAErB,KAAOxD,EAAM1wB,QAAQ,CAIjB,IAHAk0B,EAAQxD,EAAM5mB,QACdo5C,EAAOxyB,EAAM5mB,QAEOtJ,EAAG,SAEvB,MAAMb,EAAMujD,EAAOr4C,KAAKiZ,MAAMoQ,EAAQgvB,GAAQ1iD,EAAI,GAAKA,EACvDsvF,GAAYxvF,EAAKX,EAAKujD,EAAMhvB,EAAOvyB,GAEnC+uB,EAAMlsB,KAAK0+C,EAAMvjD,EAAKA,EAAKu0B,EAC9B,CACL,CCpSA,IAAAigE,GAnMA,MAIE,WAAAx1F,CAAYyxF,GAIVvxF,KAAKu1F,OAAS,IAAIC,GAAOjE,GAQzBvxF,KAAKy1F,OAAS,EACf,CAOD,MAAAvD,CAAO34E,EAAQlV,GAEb,MAAMgH,EAAO,CACX8O,KAAMZ,EAAO,GACba,KAAMb,EAAO,GACbc,KAAMd,EAAO,GACbe,KAAMf,EAAO,GACblV,MAAOA,GAGTrE,KAAKu1F,OAAOrD,OAAO7mF,GACnBrL,KAAKy1F,OAAOhtF,EAAOpE,IAAUgH,CAC9B,CAOD,IAAAgC,CAAKqoF,EAAS1sF,GACZ,MAAMkqF,EAAQ,IAAI7wF,MAAM2G,EAAO7H,QAC/B,IAAK,IAAIS,EAAI,EAAGmd,EAAI/V,EAAO7H,OAAQS,EAAImd,EAAGnd,IAAK,CAC7C,MAAM2X,EAASm8E,EAAQ9zF,GACjByC,EAAQ2E,EAAOpH,GAGfyJ,EAAO,CACX8O,KAAMZ,EAAO,GACba,KAAMb,EAAO,GACbc,KAAMd,EAAO,GACbe,KAAMf,EAAO,GACblV,MAAOA,GAET6uF,EAAMtxF,GAAKyJ,EACXrL,KAAKy1F,OAAOhtF,EAAOpE,IAAUgH,CAC9B,CACDrL,KAAKu1F,OAAOloF,KAAK6lF,EAClB,CAOD,MAAAznF,CAAOpH,GACL,MAAMooF,EAAMhkF,EAAOpE,GAIbgH,EAAOrL,KAAKy1F,OAAOhJ,GAEzB,cADOzsF,KAAKy1F,OAAOhJ,GACiB,OAA7BzsF,KAAKu1F,OAAO9pF,OAAOJ,EAC3B,CAOD,MAAAuyB,CAAOrkB,EAAQlV,GACb,MAAMgH,EAAOrL,KAAKy1F,OAAOhtF,EAAOpE,IAE3B9B,GADQ,CAAC8I,EAAK8O,KAAM9O,EAAK+O,KAAM/O,EAAKgP,KAAMhP,EAAKiP,MAClCf,KAChBvZ,KAAKyL,OAAOpH,GACZrE,KAAKkyF,OAAO34E,EAAQlV,GAEvB,CAMD,MAAAsxF,GAEE,OADc31F,KAAKu1F,OAAOv/B,MACbprB,KAAI,SAAUv/B,GACzB,OAAOA,EAAKhH,KAClB,GACG,CAOD,WAAAuxF,CAAYr8E,GAEV,MAAMw3E,EAAO,CACX52E,KAAMZ,EAAO,GACba,KAAMb,EAAO,GACbc,KAAMd,EAAO,GACbe,KAAMf,EAAO,IAGf,OADcvZ,KAAKu1F,OAAO5D,OAAOZ,GACpBnmD,KAAI,SAAUv/B,GACzB,OAAOA,EAAKhH,KAClB,GACG,CASD,OAAA6G,CAAQyQ,GACN,OAAO3b,KAAK61F,SAAS71F,KAAK21F,SAAUh6E,EACrC,CAQD,eAAAm6E,CAAgBv8E,EAAQoC,GACtB,OAAO3b,KAAK61F,SAAS71F,KAAK41F,YAAYr8E,GAASoC,EAChD,CAQD,QAAAk6E,CAAS7sF,EAAQ2S,GACf,IAAI60B,EACJ,IAAK,IAAI5uC,EAAI,EAAGmd,EAAI/V,EAAO7H,OAAQS,EAAImd,EAAGnd,IAExC,GADA4uC,EAAS70B,EAAS3S,EAAOpH,IACrB4uC,EACF,OAAOA,EAGX,OAAOA,CACR,CAKD,OAAA1rC,GACE,OAAOA,EAAQ9E,KAAKy1F,OACrB,CAKD,KAAA9wF,GACE3E,KAAKu1F,OAAO5wF,QACZ3E,KAAKy1F,OAAS,EACf,CAMD,SAAAr2E,CAAU7F,GACR,MAAMpX,EAAOnC,KAAKu1F,OAAOvC,SACzB,OAAOv4E,GAAetY,EAAKgY,KAAMhY,EAAKiY,KAAMjY,EAAKkY,KAAMlY,EAAKmY,KAAMf,EACnE,CAKD,MAAAw8E,CAAOC,GACLh2F,KAAKu1F,OAAOloF,KAAK2oF,EAAMT,OAAOv/B,OAC9B,IAAK,MAAMp0D,KAAKo0F,EAAMP,OACpBz1F,KAAKy1F,OAAO7zF,GAAKo0F,EAAMP,OAAO7zF,EAEjC,GC1MH,MAAM44E,WAAevnD,GAQnB,WAAAnzB,CAAY2c,EAAQqL,EAAQmH,GAC1BhqB,aACeuB,IAAXyoB,QAAmCzoB,IAAXshB,EAC1B9nB,KAAK+vB,mBAAmBd,EAAQxS,IAEhCqL,EAASA,GAAkB,EAC3B9nB,KAAKi2F,mBAAmBx5E,EAAQqL,EAAQmH,GAE3C,CAOD,KAAAna,GACE,MAAMkR,EAAS,IAAIw0D,GACjBx6E,KAAK6a,gBAAgB/W,aACrB0C,EACAxG,KAAKivB,QAGP,OADAjJ,EAAOhc,gBAAgBhK,MAChBgmB,CACR,CASD,cAAA+H,CAAe3W,EAAGC,EAAG2W,EAAcC,GACjC,MAAMpT,EAAkB7a,KAAK6a,gBACvBhD,EAAKT,EAAIyD,EAAgB,GACzB/C,EAAKT,EAAIwD,EAAgB,GACzBiJ,EAAkBjM,EAAKA,EAAKC,EAAKA,EACvC,GAAIgM,EAAkBmK,EAAoB,CACxC,GAAwB,IAApBnK,EACF,IAAK,IAAIliB,EAAI,EAAGA,EAAI5B,KAAK+a,SAAUnZ,EACjCosB,EAAapsB,GAAKiZ,EAAgBjZ,OAE/B,CACL,MAAM8L,EAAQ1N,KAAKimB,YAAcja,KAAKka,KAAKpC,GAC3CkK,EAAa,GAAKnT,EAAgB,GAAKnN,EAAQmK,EAC/CmW,EAAa,GAAKnT,EAAgB,GAAKnN,EAAQoK,EAC/C,IAAK,IAAIlW,EAAI,EAAGA,EAAI5B,KAAK+a,SAAUnZ,EACjCosB,EAAapsB,GAAKiZ,EAAgBjZ,EAErC,CAED,OADAosB,EAAa7sB,OAASnB,KAAK+a,OACpB+I,CACR,CACD,OAAOmK,CACR,CAOD,UAAAnU,CAAW1C,EAAGC,GACZ,MAAMwD,EAAkB7a,KAAK6a,gBACvBhD,EAAKT,EAAIyD,EAAgB,GACzB/C,EAAKT,EAAIwD,EAAgB,GAC/B,OAAOhD,EAAKA,EAAKC,EAAKA,GAAM9X,KAAKk2F,mBAClC,CAOD,SAAA75E,GACE,OAAOrc,KAAK6a,gBAAgB/W,MAAM,EAAG9D,KAAK+a,OAC3C,CAOD,aAAAsT,CAAc9U,GACZ,MAAMsB,EAAkB7a,KAAK6a,gBACvBiN,EAASjN,EAAgB7a,KAAK+a,QAAUF,EAAgB,GAC9D,OAAOJ,GACLI,EAAgB,GAAKiN,EACrBjN,EAAgB,GAAKiN,EACrBjN,EAAgB,GAAKiN,EACrBjN,EAAgB,GAAKiN,EACrBvO,EAEH,CAOD,SAAA0M,GACE,OAAOja,KAAKka,KAAKlmB,KAAKk2F,oBACvB,CAMD,iBAAAA,GACE,MAAMr+E,EAAK7X,KAAK6a,gBAAgB7a,KAAK+a,QAAU/a,KAAK6a,gBAAgB,GAC9D/C,EAAK9X,KAAK6a,gBAAgB7a,KAAK+a,OAAS,GAAK/a,KAAK6a,gBAAgB,GACxE,OAAOhD,EAAKA,EAAKC,EAAKA,CACvB,CAOD,OAAA0W,GACE,MAAO,QACR,CAQD,gBAAAC,CAAiBlV,GAEf,GAAIsE,GAAWtE,EADMvZ,KAAKof,aACY,CACpC,MAAM3C,EAASzc,KAAKqc,YAEpB,OAAI9C,EAAO,IAAMkD,EAAO,IAAMlD,EAAO,IAAMkD,EAAO,KAG9ClD,EAAO,IAAMkD,EAAO,IAAMlD,EAAO,IAAMkD,EAAO,IAI3Cf,GAAcnC,EAAQvZ,KAAKouB,qBAAqBlnB,KAAKlH,OAC7D,CACD,OAAO,CACR,CAOD,SAAA86C,CAAUr+B,GACR,MAAM1B,EAAS/a,KAAK+a,OACd+M,EAAS9nB,KAAK6a,gBAAgBE,GAAU/a,KAAK6a,gBAAgB,GAC7DA,EAAkB4B,EAAO3Y,QAC/B+W,EAAgBE,GAAUF,EAAgB,GAAKiN,EAC/C,IAAK,IAAIlmB,EAAI,EAAGA,EAAImZ,IAAUnZ,EAC5BiZ,EAAgBE,EAASnZ,GAAK6a,EAAO7a,GAEvC5B,KAAK+vB,mBAAmB/vB,KAAKivB,OAAQpU,GACrC7a,KAAK6H,SACN,CAUD,kBAAAouF,CAAmBx5E,EAAQqL,EAAQmH,GACjCjvB,KAAKiwB,UAAUhB,EAAQxS,EAAQ,GAC1Bzc,KAAK6a,kBACR7a,KAAK6a,gBAAkB,IAGzB,MAAMA,EAAkB7a,KAAK6a,gBAC7B,IAAIC,EAASqW,GAAkBtW,EAAiB,EAAG4B,EAAQzc,KAAK+a,QAChEF,EAAgBC,KAAYD,EAAgB,GAAKiN,EACjD,IAAK,IAAIlmB,EAAI,EAAGuE,EAAKnG,KAAK+a,OAAQnZ,EAAIuE,IAAMvE,EAC1CiZ,EAAgBC,KAAYD,EAAgBjZ,GAE9CiZ,EAAgB1Z,OAAS2Z,EACzB9a,KAAK6H,SACN,CAED,cAAA4nB,GACE,OAAO,IACR,CAED,cAAAO,CAAe1W,EAAa2V,GAAU,CAOtC,SAAAknE,CAAUruE,GACR9nB,KAAK6a,gBAAgB7a,KAAK+a,QAAU/a,KAAK6a,gBAAgB,GAAKiN,EAC9D9nB,KAAK6H,SACN,CASD,MAAAyP,CAAOC,EAAO2V,GACZ,MAAMzQ,EAASzc,KAAKqc,YACdtB,EAAS/a,KAAKsvB,YACpBtvB,KAAK86C,UACHxjC,GAAOmF,EAAQ,EAAGA,EAAOtb,OAAQ4Z,EAAQxD,EAAO2V,EAAQzQ,IAE1Dzc,KAAK6H,SACN,EAyBH2yE,GAAO32E,UAAUkS,UACjB,IAAAqgF,GAAe5b,GCrPf,MAAMH,WAA2B7qD,GAI/B,WAAA1vB,CAAY40E,GACVzvE,QAMAjF,KAAKq2F,YAAc3hB,GAA0B,KAK7C10E,KAAKs2F,kBAAoB,GAEzBt2F,KAAKu2F,yBACN,CAKD,yBAAAC,GACEx2F,KAAKs2F,kBAAkBprF,QAAQ5D,GAC/BtH,KAAKs2F,kBAAkBn1F,OAAS,CACjC,CAKD,uBAAAo1F,GACE,GAAKv2F,KAAKq2F,YAGV,IAAK,IAAIz0F,EAAI,EAAGuE,EAAKnG,KAAKq2F,YAAYl1F,OAAQS,EAAIuE,IAAMvE,EACtD5B,KAAKs2F,kBAAkB3wF,KACrBoB,EAAO/G,KAAKq2F,YAAYz0F,GAAIkF,EAAkB9G,KAAK6H,QAAS7H,MAGjE,CAOD,KAAA8U,GACE,MAAM2hF,EAAqB,IAAIpc,GAAmB,MAGlD,OAFAoc,EAAmBC,cAAc12F,KAAKq2F,aACtCI,EAAmBzsF,gBAAgBhK,MAC5By2F,CACR,CASD,cAAA1oE,CAAe3W,EAAGC,EAAG2W,EAAcC,GACjC,GAAIA,EAAqBrU,GAAyB5Z,KAAKof,YAAahI,EAAGC,GACrE,OAAO4W,EAET,MAAMymD,EAAa10E,KAAKq2F,YACxB,IAAK,IAAIz0F,EAAI,EAAGuE,EAAKuuE,EAAWvzE,OAAQS,EAAIuE,IAAMvE,EAChDqsB,EAAqBymD,EAAW9yE,GAAGmsB,eACjC3W,EACAC,EACA2W,EACAC,GAGJ,OAAOA,CACR,CAOD,UAAAnU,CAAW1C,EAAGC,GACZ,MAAMq9D,EAAa10E,KAAKq2F,YACxB,IAAK,IAAIz0F,EAAI,EAAGuE,EAAKuuE,EAAWvzE,OAAQS,EAAIuE,IAAMvE,EAChD,GAAI8yE,EAAW9yE,GAAGkY,WAAW1C,EAAGC,GAC9B,OAAO,EAGX,OAAO,CACR,CAOD,aAAAgX,CAAc9U,GACZmB,GAAoBnB,GACpB,MAAMm7D,EAAa10E,KAAKq2F,YACxB,IAAK,IAAIz0F,EAAI,EAAGuE,EAAKuuE,EAAWvzE,OAAQS,EAAIuE,IAAMvE,EAChDM,GAAOqX,EAAQm7D,EAAW9yE,GAAGwd,aAE/B,OAAO7F,CACR,CAOD,aAAA8hE,GACE,OAAOsb,GAAgB32F,KAAKq2F,YAC7B,CAKD,kBAAA1hB,GACE,OAAO30E,KAAKq2F,WACb,CAKD,2BAAAO,GAEE,IAAIC,EAAkB,GACtB,MAAMniB,EAAa10E,KAAKq2F,YACxB,IAAK,IAAIz0F,EAAI,EAAGuE,EAAKuuE,EAAWvzE,OAAQS,EAAIuE,IAAMvE,EAC5C8yE,EAAW9yE,GAAG4sB,YAAcxuB,KAAKwuB,UACnCqoE,EAAkBA,EAAgBd,OAE9BrhB,EAAW9yE,GACXg1F,+BAGJC,EAAgBlxF,KAAK+uE,EAAW9yE,IAGpC,OAAOi1F,CACR,CAOD,qBAAAhpE,CAAsBD,GAKpB,GAJI5tB,KAAKytB,6BAA+BztB,KAAK8H,gBAC3C9H,KAAKwtB,yCAA2C,EAChDxtB,KAAKytB,2BAA6BztB,KAAK8H,eAGvC8lB,EAAmB,GACgC,IAAlD5tB,KAAKwtB,0CACJI,EAAmB5tB,KAAKwtB,yCAE1B,OAAOxtB,KAGT,MAAM82F,EAAuB,GACvBpiB,EAAa10E,KAAKq2F,YACxB,IAAIU,GAAa,EACjB,IAAK,IAAIn1F,EAAI,EAAGuE,EAAKuuE,EAAWvzE,OAAQS,EAAIuE,IAAMvE,EAAG,CACnD,MAAM+S,EAAW+/D,EAAW9yE,GACtBiuB,EACJlb,EAASkZ,sBAAsBD,GACjCkpE,EAAqBnxF,KAAKkqB,GACtBA,IAAuBlb,IACzBoiF,GAAa,EAEhB,CACD,GAAIA,EAAY,CACd,MAAMC,EAA+B,IAAI3c,GAAmB,MAE5D,OADA2c,EAA6BC,mBAAmBH,GACzCE,CACR,CAED,OADAh3F,KAAKwtB,yCAA2CI,EACzC5tB,IACR,CAOD,OAAAwuB,GACE,MAAO,oBACR,CAQD,gBAAAC,CAAiBlV,GACf,MAAMm7D,EAAa10E,KAAKq2F,YACxB,IAAK,IAAIz0F,EAAI,EAAGuE,EAAKuuE,EAAWvzE,OAAQS,EAAIuE,IAAMvE,EAChD,GAAI8yE,EAAW9yE,GAAG6sB,iBAAiBlV,GACjC,OAAO,EAGX,OAAO,CACR,CAKD,OAAAzU,GACE,OAAmC,IAA5B9E,KAAKq2F,YAAYl1F,MACzB,CASD,MAAAmW,CAAOC,EAAO2V,GACZ,MAAMwnD,EAAa10E,KAAKq2F,YACxB,IAAK,IAAIz0F,EAAI,EAAGuE,EAAKuuE,EAAWvzE,OAAQS,EAAIuE,IAAMvE,EAChD8yE,EAAW9yE,GAAG0V,OAAOC,EAAO2V,GAE9BltB,KAAK6H,SACN,CAYD,KAAA6P,CAAMQ,EAAIC,EAAI+U,GACPA,IACHA,EAAS7Q,GAAUrc,KAAKof,cAE1B,MAAMs1D,EAAa10E,KAAKq2F,YACxB,IAAK,IAAIz0F,EAAI,EAAGuE,EAAKuuE,EAAWvzE,OAAQS,EAAIuE,IAAMvE,EAChD8yE,EAAW9yE,GAAG8V,MAAMQ,EAAIC,EAAI+U,GAE9BltB,KAAK6H,SACN,CAOD,aAAA6uF,CAAchiB,GACZ10E,KAAKi3F,mBAAmBN,GAAgBjiB,GACzC,CAKD,kBAAAuiB,CAAmBviB,GACjB10E,KAAKw2F,4BACLx2F,KAAKq2F,YAAc3hB,EACnB10E,KAAKu2F,0BACLv2F,KAAK6H,SACN,CAWD,cAAA6W,CAAeC,GACb,MAAM+1D,EAAa10E,KAAKq2F,YACxB,IAAK,IAAIz0F,EAAI,EAAGuE,EAAKuuE,EAAWvzE,OAAQS,EAAIuE,IAAMvE,EAChD8yE,EAAW9yE,GAAG8c,eAAeC,GAE/B3e,KAAK6H,SACN,CASD,SAAA+P,CAAUoG,EAAQC,GAChB,MAAMy2D,EAAa10E,KAAKq2F,YACxB,IAAK,IAAIz0F,EAAI,EAAGuE,EAAKuuE,EAAWvzE,OAAQS,EAAIuE,IAAMvE,EAChD8yE,EAAW9yE,GAAGgW,UAAUoG,EAAQC,GAElCje,KAAK6H,SACN,CAKD,eAAApH,GACET,KAAKw2F,4BACLvxF,MAAMxE,iBACP,EAOH,SAASk2F,GAAgBjiB,GACvB,MAAMwiB,EAAmB,GACzB,IAAK,IAAIt1F,EAAI,EAAGuE,EAAKuuE,EAAWvzE,OAAQS,EAAIuE,IAAMvE,EAChDs1F,EAAiBvxF,KAAK+uE,EAAW9yE,GAAGkT,SAEtC,OAAOoiF,CACT,CAEA,IAAAC,GAAe9c,GCtUR,SAAS+c,GACdv8E,EACAC,EACA9Y,EACA+Y,EACAi8B,EACAr9B,EACAqJ,GAEA,IAAIyc,EAAG1zB,EACP,MAAMpK,GAAKK,EAAM8Y,GAAUC,EAC3B,GAAU,IAANpZ,EACF89B,EAAI3kB,OACC,GAAU,IAANnZ,EACT89B,EAAI3kB,EACJ/O,EAAIirC,OACC,GAAU,IAANr1C,EAAS,CAClB,IAAImb,EAAKjC,EAAgBC,GACrBiC,EAAKlC,EAAgBC,EAAS,GAC9B3Z,EAAS,EACb,MAAMk2F,EAAoB,CAAC,GAC3B,IAAK,IAAIz1F,EAAIkZ,EAASC,EAAQnZ,EAAII,EAAKJ,GAAKmZ,EAAQ,CAClD,MAAMiC,EAAKnC,EAAgBjZ,GACrBqb,EAAKpC,EAAgBjZ,EAAI,GAC/BT,GAAU6K,KAAKka,MAAMlJ,EAAKF,IAAOE,EAAKF,IAAOG,EAAKF,IAAOE,EAAKF,IAC9Ds6E,EAAkB1xF,KAAKxE,GACvB2b,EAAKE,EACLD,EAAKE,CACN,CACD,MAAM9c,EAAS62C,EAAW71C,EACpB8B,EAAQvC,EAAa22F,EAAmBl3F,GAC1C8C,EAAQ,GACV8I,GACG5L,EAASk3F,GAAmBp0F,EAAQ,KACpCo0F,GAAmBp0F,EAAQ,GAAKo0F,GAAmBp0F,EAAQ,IAC9Dw8B,EAAI3kB,IAAW7X,EAAQ,GAAK8X,GAE5B0kB,EAAI3kB,EAAS7X,EAAQ8X,CAExB,CACDiI,EAAYA,EAAY,EAAIA,EAAY,EACxCrJ,EAAOA,GAAc,IAAItX,MAAM2gB,GAC/B,IAAK,IAAIphB,EAAI,EAAGA,EAAIohB,IAAaphB,EAC/B+X,EAAK/X,QACG4E,IAANi5B,EACItR,SACM3nB,IAANuF,EACA8O,EAAgB4kB,EAAI79B,GACpBgjB,GAAK/J,EAAgB4kB,EAAI79B,GAAIiZ,EAAgB4kB,EAAI1kB,EAASnZ,GAAImK,GAEtE,OAAO4N,CACT,CAWO,SAAS29E,GACdz8E,EACAC,EACA9Y,EACA+Y,EACAiF,EACAu3E,GAEA,GAAIv1F,GAAO8Y,EACT,OAAO,KAET,IAAI3D,EACJ,GAAI6I,EAAInF,EAAgBC,EAASC,EAAS,GACxC,OAAIw8E,GACFpgF,EAAa0D,EAAgB/W,MAAMgX,EAAQA,EAASC,GACpD5D,EAAW4D,EAAS,GAAKiF,EAClB7I,GAEF,KAET,GAAI0D,EAAgB7Y,EAAM,GAAKge,EAC7B,OAAIu3E,GACFpgF,EAAa0D,EAAgB/W,MAAM9B,EAAM+Y,EAAQ/Y,GACjDmV,EAAW4D,EAAS,GAAKiF,EAClB7I,GAEF,KAGT,GAAI6I,GAAKnF,EAAgBC,EAASC,EAAS,GACzC,OAAOF,EAAgB/W,MAAMgX,EAAQA,EAASC,GAEhD,IAAIy8E,EAAK18E,EAASC,EACd08E,EAAKz1F,EAAM+Y,EACf,KAAOy8E,EAAKC,GAAI,CACd,MAAM32F,EAAO02F,EAAKC,GAAO,EACrBz3E,EAAInF,GAAiB/Z,EAAM,GAAKia,EAAS,GAC3C08E,EAAK32F,EAEL02F,EAAK12F,EAAM,CAEd,CACD,MAAM42F,EAAK78E,EAAgB28E,EAAKz8E,EAAS,GACzC,GAAIiF,GAAK03E,EACP,OAAO78E,EAAgB/W,OAAO0zF,EAAK,GAAKz8E,GAASy8E,EAAK,GAAKz8E,EAASA,GAEtE,MACMhP,GAAKiU,EAAI03E,IADJ78E,GAAiB28E,EAAK,GAAKz8E,EAAS,GACpB28E,GAC3BvgF,EAAa,GACb,IAAK,IAAIvV,EAAI,EAAGA,EAAImZ,EAAS,IAAKnZ,EAChCuV,EAAWxR,KACTif,GACE/J,GAAiB28E,EAAK,GAAKz8E,EAASnZ,GACpCiZ,EAAgB28E,EAAKz8E,EAASnZ,GAC9BmK,IAKN,OADAoL,EAAWxR,KAAKqa,GACT7I,CACT,CAYO,SAASwgF,GACd98E,EACAC,EACA4V,EACA3V,EACAiF,EACAu3E,EACA3qF,GAEA,GAAIA,EACF,OAAO0qF,GACLz8E,EACAC,EACA4V,EAAKA,EAAKvvB,OAAS,GACnB4Z,EACAiF,EACAu3E,GAGJ,IAAIpgF,EACJ,GAAI6I,EAAInF,EAAgBE,EAAS,GAC/B,OAAIw8E,GACFpgF,EAAa0D,EAAgB/W,MAAM,EAAGiX,GACtC5D,EAAW4D,EAAS,GAAKiF,EAClB7I,GAEF,KAET,GAAI0D,EAAgBA,EAAgB1Z,OAAS,GAAK6e,EAChD,OAAIu3E,GACFpgF,EAAa0D,EAAgB/W,MAAM+W,EAAgB1Z,OAAS4Z,GAC5D5D,EAAW4D,EAAS,GAAKiF,EAClB7I,GAEF,KAET,IAAK,IAAIvV,EAAI,EAAGuE,EAAKuqB,EAAKvvB,OAAQS,EAAIuE,IAAMvE,EAAG,CAC7C,MAAMI,EAAM0uB,EAAK9uB,GACjB,GAAIkZ,GAAU9Y,EAAd,CAGA,GAAIge,EAAInF,EAAgBC,EAASC,EAAS,GACxC,OAAO,KAET,GAAIiF,GAAKnF,EAAgB7Y,EAAM,GAC7B,OAAOs1F,GACLz8E,EACAC,EACA9Y,EACA+Y,EACAiF,GACA,GAGJlF,EAAS9Y,CAdR,CAeF,CACD,OAAO,IACT,CCpMO,SAAS41F,GAAiB/8E,EAAiBC,EAAQ9Y,EAAK+Y,GAC7D,IAAI+B,EAAKjC,EAAgBC,GACrBiC,EAAKlC,EAAgBC,EAAS,GAC9B3Z,EAAS,EACb,IAAK,IAAIS,EAAIkZ,EAASC,EAAQnZ,EAAII,EAAKJ,GAAKmZ,EAAQ,CAClD,MAAMiC,EAAKnC,EAAgBjZ,GACrBqb,EAAKpC,EAAgBjZ,EAAI,GAC/BT,GAAU6K,KAAKka,MAAMlJ,EAAKF,IAAOE,EAAKF,IAAOG,EAAKF,IAAOE,EAAKF,IAC9DD,EAAKE,EACLD,EAAKE,CACN,CACD,OAAO9b,CACT,CCFA,MAAM44E,WAAmB9mD,GAMvB,WAAAnzB,CAAYwZ,EAAa2V,GACvBhqB,QAMAjF,KAAK63F,cAAgB,KAMrB73F,KAAK83F,uBAAyB,EAM9B93F,KAAKkzB,WAAa,EAMlBlzB,KAAKmzB,mBAAqB,OAEX3sB,IAAXyoB,GAAyB5sB,MAAMC,QAAQgX,EAAY,IAMrDtZ,KAAKgwB,eACX,EAGQf,GATFjvB,KAAK+vB,mBACHd,EACR,EAUG,CAOD,gBAAA8oE,CAAiB5gF,GACfjV,EAAOlC,KAAK6a,gBAAiB1D,GAC7BnX,KAAK6H,SACN,CAOD,KAAAiN,GACE,MAAMkjF,EAAa,IAAIje,GACrB/5E,KAAK6a,gBAAgB/W,QACrB9D,KAAKivB,QAGP,OADA+oE,EAAWhuF,gBAAgBhK,MACpBg4F,CACR,CASD,cAAAjqE,CAAe3W,EAAGC,EAAG2W,EAAcC,GACjC,OAAIA,EAAqBrU,GAAyB5Z,KAAKof,YAAahI,EAAGC,GAC9D4W,GAELjuB,KAAKmzB,mBAAqBnzB,KAAK8H,gBACjC9H,KAAKkzB,UAAYlnB,KAAKka,KACpBoK,GACEtwB,KAAK6a,gBACL,EACA7a,KAAK6a,gBAAgB1Z,OACrBnB,KAAK+a,OACL,IAGJ/a,KAAKmzB,kBAAoBnzB,KAAK8H,eAEzB+oB,GACL7wB,KAAK6a,gBACL,EACA7a,KAAK6a,gBAAgB1Z,OACrBnB,KAAK+a,OACL/a,KAAKkzB,WACL,EACA9b,EACAC,EACA2W,EACAC,GAEH,CAaD,cAAA0G,CAAehZ,GACb,OAAOgZ,GACL30B,KAAK6a,gBACL,EACA7a,KAAK6a,gBAAgB1Z,OACrBnB,KAAK+a,OACLY,EAEH,CAgBD,gBAAAs8E,CAAiBj4E,EAAGu3E,GAClB,MAAmB,OAAfv3F,KAAKivB,QAAkC,QAAfjvB,KAAKivB,OACxB,MAETsoE,OAA8B/wF,IAAhB+wF,GAA4BA,EACnCD,GACLt3F,KAAK6a,gBACL,EACA7a,KAAK6a,gBAAgB1Z,OACrBnB,KAAK+a,OACLiF,EACAu3E,GAEH,CAOD,cAAA9nE,GACE,OAAOgD,GACLzyB,KAAK6a,gBACL,EACA7a,KAAK6a,gBAAgB1Z,OACrBnB,KAAK+a,OAER,CAYD,eAAAm9E,CAAgBlhD,EAAUr9B,GACxB,OAAOy9E,GACLp3F,KAAK6a,gBACL,EACA7a,KAAK6a,gBAAgB1Z,OACrBnB,KAAK+a,OACLi8B,EACAr9B,EACA3Z,KAAK+a,OAER,CAOD,SAAA/P,GACE,OAAO4sF,GACL53F,KAAK6a,gBACL,EACA7a,KAAK6a,gBAAgB1Z,OACrBnB,KAAK+a,OAER,CAKD,eAAA85D,GAQE,OAPI70E,KAAK83F,uBAAyB93F,KAAK8H,gBACrC9H,KAAK63F,cAAgB73F,KAAKk4F,gBACxB,GACAl4F,KAAK63F,oBAAiBrxF,GAExBxG,KAAK83F,sBAAwB93F,KAAK8H,eAEC9H,KAAkB,aACxD,CAOD,6BAAA8vB,CAA8BlC,GAE5B,MAAM8D,EAA4B,GAUlC,OATAA,EAA0BvwB,OAASswB,GACjCzxB,KAAK6a,gBACL,EACA7a,KAAK6a,gBAAgB1Z,OACrBnB,KAAK+a,OACL6S,EACA8D,EACA,GAEK,IAAIqoD,GAAWroD,EAA2B,KAClD,CAOD,OAAAlD,GACE,MAAO,YACR,CAQD,gBAAAC,CAAiBlV,GACf,OAAOkb,GACLz0B,KAAK6a,gBACL,EACA7a,KAAK6a,gBAAgB1Z,OACrBnB,KAAK+a,OACLxB,EAEH,CAQD,cAAAyW,CAAe1W,EAAa2V,GAC1BjvB,KAAKiwB,UAAUhB,EAAQ3V,EAAa,GAC/BtZ,KAAK6a,kBACR7a,KAAK6a,gBAAkB,IAEzB7a,KAAK6a,gBAAgB1Z,OAASiwB,GAC5BpxB,KAAK6a,gBACL,EACAvB,EACAtZ,KAAK+a,QAEP/a,KAAK6H,SACN,EAGH,IAAAswF,GAAepe,GC/Rf,MAAMI,WAAwBlnD,GAQ5B,WAAAnzB,CAAYwZ,EAAa2V,EAAQyB,GAqB/B,GApBAzrB,QAMAjF,KAAKg2B,MAAQ,GAMbh2B,KAAKkzB,WAAa,EAMlBlzB,KAAKmzB,mBAAqB,EAEtB9wB,MAAMC,QAAQgX,EAAY,IAC5BtZ,KAAKgwB,eACX,EAGQf,QAEG,QAAezoB,IAAXyoB,GAAwByB,EACjC1wB,KAAK+vB,mBACHd,EACR,GAEMjvB,KAAKg2B,MAAQtF,MACR,CACL,MAAM0nE,EAAgD,EAEhDv9E,EAAkB,GAClB6V,EAAO,GACb,IAAK,IAAI9uB,EAAI,EAAGuE,EAAKiyF,EAAYj3F,OAAQS,EAAIuE,IAAMvE,EAAG,CAEpDM,EAAO2Y,EADYu9E,EAAYx2F,GACIytB,sBACnCqB,EAAK/qB,KAAKkV,EAAgB1Z,OAC3B,CACD,MAAM8tB,EACmB,IAAvBmpE,EAAYj3F,OACRnB,KAAK4vB,YACLwoE,EAAY,GAAGxoE,YACrB5vB,KAAK+vB,mBAAmBd,EAAQpU,GAChC7a,KAAKg2B,MAAQtF,CACd,CACF,CAOD,gBAAA2nE,CAAiBL,GACf91F,EAAOlC,KAAK6a,gBAAiBm9E,EAAW3oE,qBAAqBvrB,SAC7D9D,KAAKg2B,MAAMrwB,KAAK3F,KAAK6a,gBAAgB1Z,QACrCnB,KAAK6H,SACN,CAOD,KAAAiN,GACE,MAAMwjF,EAAkB,IAAIne,GAC1Bn6E,KAAK6a,gBAAgB/W,QACrB9D,KAAKivB,OACLjvB,KAAKg2B,MAAMlyB,SAGb,OADAw0F,EAAgBtuF,gBAAgBhK,MACzBs4F,CACR,CASD,cAAAvqE,CAAe3W,EAAGC,EAAG2W,EAAcC,GACjC,OAAIA,EAAqBrU,GAAyB5Z,KAAKof,YAAahI,EAAGC,GAC9D4W,GAELjuB,KAAKmzB,mBAAqBnzB,KAAK8H,gBACjC9H,KAAKkzB,UAAYlnB,KAAKka,KACpBuK,GACEzwB,KAAK6a,gBACL,EACA7a,KAAKg2B,MACLh2B,KAAK+a,OACL,IAGJ/a,KAAKmzB,kBAAoBnzB,KAAK8H,eAEzBmpB,GACLjxB,KAAK6a,gBACL,EACA7a,KAAKg2B,MACLh2B,KAAK+a,OACL/a,KAAKkzB,WACL,EACA9b,EACAC,EACA2W,EACAC,GAEH,CAwBD,gBAAAgqE,CAAiBj4E,EAAGu3E,EAAa3qF,GAC/B,MACkB,OAAf5M,KAAKivB,QAAkC,QAAfjvB,KAAKivB,QACE,IAAhCjvB,KAAK6a,gBAAgB1Z,OAEd,MAETo2F,OAA8B/wF,IAAhB+wF,GAA4BA,EAC1C3qF,OAA8BpG,IAAhBoG,GAA4BA,EACnC+qF,GACL33F,KAAK6a,gBACL,EACA7a,KAAKg2B,MACLh2B,KAAK+a,OACLiF,EACAu3E,EACA3qF,GAEH,CAOD,cAAA6iB,GACE,OAAOiD,GACL1yB,KAAK6a,gBACL,EACA7a,KAAKg2B,MACLh2B,KAAK+a,OAER,CAKD,OAAA0b,GACE,OAAOz2B,KAAKg2B,KACb,CAQD,aAAAuiE,CAAct1F,GACZ,OAAIA,EAAQ,GAAKjD,KAAKg2B,MAAM70B,QAAU8B,EAC7B,KAEF,IAAI82E,GACT/5E,KAAK6a,gBAAgB/W,MACT,IAAVb,EAAc,EAAIjD,KAAKg2B,MAAM/yB,EAAQ,GACrCjD,KAAKg2B,MAAM/yB,IAEbjD,KAAKivB,OAER,CAOD,cAAAupE,GACE,MAAM39E,EAAkB7a,KAAK6a,gBACvB6V,EAAO1wB,KAAKg2B,MACZ/G,EAASjvB,KAAKivB,OAEdmpE,EAAc,GACpB,IAAIt9E,EAAS,EACb,IAAK,IAAIlZ,EAAI,EAAGuE,EAAKuqB,EAAKvvB,OAAQS,EAAIuE,IAAMvE,EAAG,CAC7C,MAAMI,EAAM0uB,EAAK9uB,GACXo2F,EAAa,IAAIje,GACrBl/D,EAAgB/W,MAAMgX,EAAQ9Y,GAC9BitB,GAEFmpE,EAAYzyF,KAAKqyF,GACjBl9E,EAAS9Y,CACV,CACD,OAAOo2F,CACR,CAKD,gBAAApjB,GAEE,MAAMyjB,EAAY,GACZ59E,EAAkB7a,KAAK6a,gBAC7B,IAAIC,EAAS,EACb,MAAM4V,EAAO1wB,KAAKg2B,MACZjb,EAAS/a,KAAK+a,OACpB,IAAK,IAAInZ,EAAI,EAAGuE,EAAKuqB,EAAKvvB,OAAQS,EAAIuE,IAAMvE,EAAG,CAC7C,MAAMI,EAAM0uB,EAAK9uB,GAQjBM,EAAOu2F,EAPUrB,GACfv8E,EACAC,EACA9Y,EACA+Y,EACA,KAGFD,EAAS9Y,CACV,CACD,OAAOy2F,CACR,CAOD,6BAAA3oE,CAA8BlC,GAE5B,MAAM8D,EAA4B,GAE5BQ,EAAiB,GAWvB,OAVAR,EAA0BvwB,OAAS8wB,GACjCjyB,KAAK6a,gBACL,EACA7a,KAAKg2B,MACLh2B,KAAK+a,OACL6S,EACA8D,EACA,EACAQ,GAEK,IAAIioD,GAAgBzoD,EAA2B,KAAMQ,EAC7D,CAOD,OAAA1D,GACE,MAAO,iBACR,CAQD,gBAAAC,CAAiBlV,GACf,OAAOub,GACL90B,KAAK6a,gBACL,EACA7a,KAAKg2B,MACLh2B,KAAK+a,OACLxB,EAEH,CAQD,cAAAyW,CAAe1W,EAAa2V,GAC1BjvB,KAAKiwB,UAAUhB,EAAQ3V,EAAa,GAC/BtZ,KAAK6a,kBACR7a,KAAK6a,gBAAkB,IAEzB,MAAM6V,EAAOW,GACXrxB,KAAK6a,gBACL,EACAvB,EACAtZ,KAAK+a,OACL/a,KAAKg2B,OAEPh2B,KAAK6a,gBAAgB1Z,OAAyB,IAAhBuvB,EAAKvvB,OAAe,EAAIuvB,EAAKA,EAAKvvB,OAAS,GACzEnB,KAAK6H,SACN,EAGH,IAAA6wF,GAAeve,GC5Uf,MAAMD,WAAmBjnD,GAMvB,WAAAnzB,CAAYwZ,EAAa2V,GACvBhqB,QACIgqB,IAAW5sB,MAAMC,QAAQgX,EAAY,IACvCtZ,KAAK+vB,mBACHd,EACR,GAGMjvB,KAAKgwB,eACX,EAGQf,EAGL,CAOD,WAAA0pE,CAAYj2E,GACVxgB,EAAOlC,KAAK6a,gBAAiB6H,EAAM2M,sBACnCrvB,KAAK6H,SACN,CAOD,KAAAiN,GACE,MAAM8jF,EAAa,IAAI1e,GACrBl6E,KAAK6a,gBAAgB/W,QACrB9D,KAAKivB,QAGP,OADA2pE,EAAW5uF,gBAAgBhK,MACpB44F,CACR,CASD,cAAA7qE,CAAe3W,EAAGC,EAAG2W,EAAcC,GACjC,GAAIA,EAAqBrU,GAAyB5Z,KAAKof,YAAahI,EAAGC,GACrE,OAAO4W,EAET,MAAMpT,EAAkB7a,KAAK6a,gBACvBE,EAAS/a,KAAK+a,OACpB,IAAK,IAAInZ,EAAI,EAAGuE,EAAK0U,EAAgB1Z,OAAQS,EAAIuE,EAAIvE,GAAKmZ,EAAQ,CAChE,MAAM+I,EAAkB0M,GACtBpZ,EACAC,EACAwD,EAAgBjZ,GAChBiZ,EAAgBjZ,EAAI,IAEtB,GAAIkiB,EAAkBmK,EAAoB,CACxCA,EAAqBnK,EACrB,IAAK,IAAIM,EAAI,EAAGA,EAAIrJ,IAAUqJ,EAC5B4J,EAAa5J,GAAKvJ,EAAgBjZ,EAAIwiB,GAExC4J,EAAa7sB,OAAS4Z,CACvB,CACF,CACD,OAAOkT,CACR,CAOD,cAAAwB,GACE,OAAOgD,GACLzyB,KAAK6a,gBACL,EACA7a,KAAK6a,gBAAgB1Z,OACrBnB,KAAK+a,OAER,CAQD,QAAA89E,CAAS51F,GACP,MAAMtB,EAAI3B,KAAK6a,gBAAgB1Z,OAASnB,KAAK+a,OAC7C,OAAI9X,EAAQ,GAAKtB,GAAKsB,EACb,KAEF,IAAIqwB,GACTtzB,KAAK6a,gBAAgB/W,MACnBb,EAAQjD,KAAK+a,QACZ9X,EAAQ,GAAKjD,KAAK+a,QAErB/a,KAAKivB,OAER,CAOD,SAAA6pE,GACE,MAAMj+E,EAAkB7a,KAAK6a,gBACvBoU,EAASjvB,KAAKivB,OACdlU,EAAS/a,KAAK+a,OAEdg+E,EAAS,GACf,IAAK,IAAIn3F,EAAI,EAAGuE,EAAK0U,EAAgB1Z,OAAQS,EAAIuE,EAAIvE,GAAKmZ,EAAQ,CAChE,MAAM2H,EAAQ,IAAI4Q,GAAMzY,EAAgB/W,MAAMlC,EAAGA,EAAImZ,GAASkU,GAC9D8pE,EAAOpzF,KAAK+c,EACb,CACD,OAAOq2E,CACR,CAOD,OAAAvqE,GACE,MAAO,YACR,CAQD,gBAAAC,CAAiBlV,GACf,MAAMsB,EAAkB7a,KAAK6a,gBACvBE,EAAS/a,KAAK+a,OACpB,IAAK,IAAInZ,EAAI,EAAGuE,EAAK0U,EAAgB1Z,OAAQS,EAAIuE,EAAIvE,GAAKmZ,EAAQ,CAGhE,GAAIjB,GAAWP,EAFLsB,EAAgBjZ,GAChBiZ,EAAgBjZ,EAAI,IAE5B,OAAO,CAEV,CACD,OAAO,CACR,CAQD,cAAAouB,CAAe1W,EAAa2V,GAC1BjvB,KAAKiwB,UAAUhB,EAAQ3V,EAAa,GAC/BtZ,KAAK6a,kBACR7a,KAAK6a,gBAAkB,IAEzB7a,KAAK6a,gBAAgB1Z,OAASiwB,GAC5BpxB,KAAK6a,gBACL,EACAvB,EACAtZ,KAAK+a,QAEP/a,KAAK6H,SACN,EAGH,IAAAmxF,GAAe9e,GCxLR,SAASnnD,GAAalY,EAAiBC,EAAQ8V,EAAO7V,GAC3D,MAAM+Y,EAAc,GACpB,IAAIva,ExIsLG,CAACiB,IAAUA,KAAU,KAAW,KwIrLvC,IAAK,IAAI5Y,EAAI,EAAGuE,EAAKyqB,EAAMzvB,OAAQS,EAAIuE,IAAMvE,EAAG,CAC9C,MAAM8uB,EAAOE,EAAMhvB,GACnB2X,EAASqB,GACPC,EACAC,EACA4V,EAAK,GACL3V,GAEF+Y,EAAYnuB,MAAM4T,EAAO,GAAKA,EAAO,IAAM,GAAIA,EAAO,GAAKA,EAAO,IAAM,GACxEuB,EAAS4V,EAAKA,EAAKvvB,OAAS,EAC7B,CACD,OAAO2yB,CACT,CCIA,MAAMsmD,WAAqBnnD,GAOzB,WAAAnzB,CAAYwZ,EAAa2V,EAAQ2B,GA6C/B,GA5CA3rB,QAMAjF,KAAKi5F,OAAS,GAMdj5F,KAAKk5F,6BAA+B,EAMpCl5F,KAAKm5F,oBAAsB,KAM3Bn5F,KAAKkzB,WAAa,EAMlBlzB,KAAKmzB,mBAAqB,EAM1BnzB,KAAKm2B,mBAAqB,EAM1Bn2B,KAAKo2B,yBAA2B,MAE3BxF,IAAUvuB,MAAMC,QAAQgX,EAAY,IAAK,CAC5C,MAAM8/E,EAA0C,EAE1Cv+E,EAAkB,GAClBw+E,EAAY,GAClB,IAAK,IAAIz3F,EAAI,EAAGuE,EAAKizF,EAASj4F,OAAQS,EAAIuE,IAAMvE,EAAG,CACjD,MAAM00B,EAAU8iE,EAASx3F,GACnBkZ,EAASD,EAAgB1Z,OACzBuvB,EAAO4F,EAAQG,UACrB,IAAK,IAAIrS,EAAI,EAAG2G,EAAK2F,EAAKvvB,OAAQijB,EAAI2G,IAAM3G,EAC1CsM,EAAKtM,IAAMtJ,EAEb5Y,EAAO2Y,EAAiByb,EAAQjH,sBAChCgqE,EAAU1zF,KAAK+qB,EAChB,CACDzB,EACsB,IAApBmqE,EAASj4F,OAAenB,KAAK4vB,YAAcwpE,EAAS,GAAGxpE,YACzDtW,EAAcuB,EACd+V,EAAQyoE,CACT,MACc7yF,IAAXyoB,GAAwB2B,GAC1B5wB,KAAK+vB,mBACHd,EACR,GAEMjvB,KAAKi5F,OAASroE,GAEd5wB,KAAKgwB,eACX,EAGQf,EAGL,CAOD,aAAAqqE,CAAchjE,GAEZ,IAAI5F,EACJ,GAAK1wB,KAAK6a,gBAIH,CACL,MAAMC,EAAS9a,KAAK6a,gBAAgB1Z,OACpCe,EAAOlC,KAAK6a,gBAAiByb,EAAQjH,sBACrCqB,EAAO4F,EAAQG,UAAU3yB,QACzB,IAAK,IAAIlC,EAAI,EAAGuE,EAAKuqB,EAAKvvB,OAAQS,EAAIuE,IAAMvE,EAC1C8uB,EAAK9uB,IAAMkZ,CAEd,MAVC9a,KAAK6a,gBAAkByb,EAAQjH,qBAAqBvrB,QACpD4sB,EAAO4F,EAAQG,UAAU3yB,QACzB9D,KAAKi5F,OAAOtzF,OASd3F,KAAKi5F,OAAOtzF,KAAK+qB,GACjB1wB,KAAK6H,SACN,CAOD,KAAAiN,GACE,MAAM9M,EAAMhI,KAAKi5F,OAAO93F,OAClBo4F,EAAW,IAAIl3F,MAAM2F,GAC3B,IAAK,IAAIpG,EAAI,EAAGA,EAAIoG,IAAOpG,EACzB23F,EAAS33F,GAAK5B,KAAKi5F,OAAOr3F,GAAGkC,QAG/B,MAAM01F,EAAe,IAAIpf,GACvBp6E,KAAK6a,gBAAgB/W,QACrB9D,KAAKivB,OACLsqE,GAIF,OAFAC,EAAaxvF,gBAAgBhK,MAEtBw5F,CACR,CASD,cAAAzrE,CAAe3W,EAAGC,EAAG2W,EAAcC,GACjC,OAAIA,EAAqBrU,GAAyB5Z,KAAKof,YAAahI,EAAGC,GAC9D4W,GAELjuB,KAAKmzB,mBAAqBnzB,KAAK8H,gBACjC9H,KAAKkzB,UAAYlnB,KAAKka,KACpByK,GACE3wB,KAAK6a,gBACL,EACA7a,KAAKi5F,OACLj5F,KAAK+a,OACL,IAGJ/a,KAAKmzB,kBAAoBnzB,KAAK8H,eAEzBopB,GACLlxB,KAAKu2B,6BACL,EACAv2B,KAAKi5F,OACLj5F,KAAK+a,OACL/a,KAAKkzB,WACL,EACA9b,EACAC,EACA2W,EACAC,GAEH,CAOD,UAAAnU,CAAW1C,EAAGC,GACZ,OAAOuc,GACL5zB,KAAKu2B,6BACL,EACAv2B,KAAKi5F,OACLj5F,KAAK+a,OACL3D,EACAC,EAEH,CAOD,OAAA4E,GACE,OAAOw9E,GACLz5F,KAAKu2B,6BACL,EACAv2B,KAAKi5F,OACLj5F,KAAK+a,OAER,CAeD,cAAA0U,CAAe4F,GACb,IAAIxa,EAcJ,YAbcrU,IAAV6uB,GACFxa,EAAkB7a,KAAKu2B,6BAA6BzyB,QACpD4xB,GACE7a,EACA,EACA7a,KAAKi5F,OACLj5F,KAAK+a,OACLsa,IAGFxa,EAAkB7a,KAAK6a,gBAGlB8X,GACL9X,EACA,EACA7a,KAAKi5F,OACLj5F,KAAK+a,OAER,CAKD,QAAAm6D,GACE,OAAOl1E,KAAKi5F,MACb,CAKD,qBAAA7jB,GACE,GAAIp1E,KAAKk5F,6BAA+Bl5F,KAAK8H,cAAe,CAC1D,MAAMgsB,EAAc4lE,GAClB15F,KAAK6a,gBACL,EACA7a,KAAKi5F,OACLj5F,KAAK+a,QAEP/a,KAAKm5F,oBAAsB7kE,GACzBt0B,KAAKu2B,6BACL,EACAv2B,KAAKi5F,OACLj5F,KAAK+a,OACL+Y,GAEF9zB,KAAKk5F,4BAA8Bl5F,KAAK8H,aACzC,CACD,OAAqC9H,KAAwB,mBAC9D,CAQD,iBAAA25F,GACE,OAAO,IAAIzf,GAAWl6E,KAAKo1E,wBAAwBtxE,QAAS,MAC7D,CAKD,0BAAAyyB,GACE,GAAIv2B,KAAKm2B,mBAAqBn2B,KAAK8H,cAAe,CAChD,MAAM+S,EAAkB7a,KAAK6a,gBAE3B0a,GAAwB1a,EAAiB,EAAG7a,KAAKi5F,OAAQj5F,KAAK+a,QAE9D/a,KAAKo2B,yBAA2Bvb,GAEhC7a,KAAKo2B,yBAA2Bvb,EAAgB/W,QAChD9D,KAAKo2B,yBAAyBj1B,OAASu0B,GACrC11B,KAAKo2B,yBACL,EACAp2B,KAAKi5F,OACLj5F,KAAK+a,SAGT/a,KAAKm2B,kBAAoBn2B,KAAK8H,aAC/B,CACD,OAAqC9H,KAA6B,wBACnE,CAOD,6BAAA8vB,CAA8BlC,GAE5B,MAAM8D,EAA4B,GAE5Bc,EAAkB,GAWxB,OAVAd,EAA0BvwB,OAASoxB,GACjCvyB,KAAK6a,gBACL,EACA7a,KAAKi5F,OACLj5F,KAAK+a,OACL/O,KAAKka,KAAK0H,GACV8D,EACA,EACAc,GAEK,IAAI4nD,GAAa1oD,EAA2B,KAAMc,EAC1D,CAQD,UAAAonE,CAAW32F,GACT,GAAIA,EAAQ,GAAKjD,KAAKi5F,OAAO93F,QAAU8B,EACrC,OAAO,KAET,IAAI6X,EACJ,GAAc,IAAV7X,EACF6X,EAAS,MACJ,CACL,MAAM++E,EAAW75F,KAAKi5F,OAAOh2F,EAAQ,GACrC6X,EAAS++E,EAASA,EAAS14F,OAAS,EACrC,CACD,MAAMuvB,EAAO1wB,KAAKi5F,OAAOh2F,GAAOa,QAC1B9B,EAAM0uB,EAAKA,EAAKvvB,OAAS,GAC/B,GAAe,IAAX2Z,EACF,IAAK,IAAIlZ,EAAI,EAAGuE,EAAKuqB,EAAKvvB,OAAQS,EAAIuE,IAAMvE,EAC1C8uB,EAAK9uB,IAAMkZ,EAGf,OAAO,IAAIib,GACT/1B,KAAK6a,gBAAgB/W,MAAMgX,EAAQ9Y,GACnChC,KAAKivB,OACLyB,EAEH,CAOD,WAAAopE,GACE,MAAM7qE,EAASjvB,KAAKivB,OACdpU,EAAkB7a,KAAK6a,gBACvB+V,EAAQ5wB,KAAKi5F,OACbG,EAAW,GACjB,IAAIt+E,EAAS,EACb,IAAK,IAAIlZ,EAAI,EAAGuE,EAAKyqB,EAAMzvB,OAAQS,EAAIuE,IAAMvE,EAAG,CAC9C,MAAM8uB,EAAOE,EAAMhvB,GAAGkC,QAChB9B,EAAM0uB,EAAKA,EAAKvvB,OAAS,GAC/B,GAAe,IAAX2Z,EACF,IAAK,IAAIsJ,EAAI,EAAG2G,EAAK2F,EAAKvvB,OAAQijB,EAAI2G,IAAM3G,EAC1CsM,EAAKtM,IAAMtJ,EAGf,MAAMwb,EAAU,IAAIP,GAClBlb,EAAgB/W,MAAMgX,EAAQ9Y,GAC9BitB,EACAyB,GAEF0oE,EAASzzF,KAAK2wB,GACdxb,EAAS9Y,CACV,CACD,OAAOo3F,CACR,CAOD,OAAA5qE,GACE,MAAO,cACR,CAQD,gBAAAC,CAAiBlV,GACf,OAAO0b,GACLj1B,KAAKu2B,6BACL,EACAv2B,KAAKi5F,OACLj5F,KAAK+a,OACLxB,EAEH,CAQD,cAAAyW,CAAe1W,EAAa2V,GAC1BjvB,KAAKiwB,UAAUhB,EAAQ3V,EAAa,GAC/BtZ,KAAK6a,kBACR7a,KAAK6a,gBAAkB,IAEzB,MAAM+V,EAAQW,GACZvxB,KAAK6a,gBACL,EACAvB,EACAtZ,KAAK+a,OACL/a,KAAKi5F,QAEP,GAAqB,IAAjBroE,EAAMzvB,OACRnB,KAAK6a,gBAAgB1Z,OAAS,MACzB,CACL,MAAM44F,EAAWnpE,EAAMA,EAAMzvB,OAAS,GACtCnB,KAAK6a,gBAAgB1Z,OACC,IAApB44F,EAAS54F,OAAe,EAAI44F,EAASA,EAAS54F,OAAS,EAC1D,CACDnB,KAAK6H,SACN,EAGH,IAAAmyF,GAAe5f,GCtaf,MAAM/sD,G5IZG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,G4ImBzB,MAAM4sE,GAUJ,WAAAn6F,CAAYC,EAAM8a,EAAiB6V,EAAM3V,EAAQlG,EAAYtH,GAI3DvN,KAAKk6F,cAMLl6F,KAAKqgB,QAMLrgB,KAAKqU,IAAM9G,EAMXvN,KAAKm6F,MAAQp6F,EAMbC,KAAKo6F,iBAAmBv/E,EAMxB7a,KAAKm5F,oBAAsB,KAM3Bn5F,KAAKq6F,eAAiB,KAMtBr6F,KAAKg2B,MAAQtF,EAMb1wB,KAAKs6F,YAAczlF,EAKnB7U,KAAKsxE,kBAKLtxE,KAAKu6F,QAAUx/E,EAMf/a,KAAKw6F,mBACN,CAQD,GAAArxF,CAAI5B,GACF,OAAOvH,KAAKs6F,YAAY/yF,EACzB,CAOD,SAAA6X,GAYE,OAXKpf,KAAKqgB,UACRrgB,KAAKqgB,QACY,UAAfrgB,KAAKm6F,MACDx/E,GAA6B3a,KAAKo6F,kBAClCx/E,GACE5a,KAAKo6F,iBACL,EACAp6F,KAAKo6F,iBAAiBj5F,OACtB,IAGHnB,KAAKqgB,OACb,CAKD,oBAAAqW,GACE,IAAK12B,KAAKm5F,oBAAqB,CAC7B,MAAMxiE,EAAata,GAAUrc,KAAKof,aAClCpf,KAAKm5F,oBAAsBtlE,GACzB7zB,KAAKo6F,iBACL,EAC8Bp6F,KAAU,MACxC,EACA22B,EACA,EAEH,CACD,OAAO32B,KAAKm5F,mBACb,CAKD,qBAAA/jB,GACE,IAAKp1E,KAAKm5F,oBAAqB,CAC7B,MAAMzoE,EAAOiF,GAAY31B,KAAKo6F,iBAAkBp6F,KAAKg2B,OAC/ClC,EAAc4lE,GAAmB15F,KAAKo6F,iBAAkB,EAAG1pE,EAAM,GACvE1wB,KAAKm5F,oBAAsB7kE,GACzBt0B,KAAKo6F,iBACL,EACA1pE,EACA,EACAoD,EAEH,CACD,OAAO9zB,KAAKm5F,mBACb,CAKD,eAAAtkB,GAUE,OATK70E,KAAKq6F,iBACRr6F,KAAKq6F,eAAiBjD,GACpBp3F,KAAKo6F,iBACL,EACAp6F,KAAKo6F,iBAAiBj5F,OACtB,EACA,KAGGnB,KAAKq6F,cACb,CAKD,gBAAArlB,GACE,IAAKh1E,KAAKq6F,eAAgB,CACxBr6F,KAAKq6F,eAAiB,GACtB,MAAMx/E,EAAkB7a,KAAKo6F,iBAC7B,IAAIt/E,EAAS,EACb,MAAM4V,EAAqC1wB,KAAU,MACrD,IAAK,IAAI4B,EAAI,EAAGuE,EAAKuqB,EAAKvvB,OAAQS,EAAIuE,IAAMvE,EAAG,CAC7C,MAAMI,EAAM0uB,EAAK9uB,GACX64F,EAAWrD,GAAiBv8E,EAAiBC,EAAQ9Y,EAAK,EAAG,IACnEE,EAAOlC,KAAKq6F,eAAgBI,GAC5B3/E,EAAS9Y,CACV,CACF,CACD,OAAOhC,KAAKq6F,cACb,CAQD,KAAAjlF,GACE,OAAOpV,KAAKqU,GACb,CAKD,0BAAAkiB,GACE,OAAOv2B,KAAKo6F,gBACb,CAQD,WAAAnlF,GACE,OAAOjV,IACR,CAMD,qBAAA6tB,CAAsBD,GACpB,OAAO5tB,IACR,CAQD,mBAAA8tB,CAAoBF,EAAkB7X,GACpC,OAAO/V,IACR,CAOD,aAAAsJ,GACE,OAAOtJ,KAAKs6F,WACb,CAOD,qBAAA9wF,GACE,OAAOxJ,KAAKs6F,WACb,CAKD,SAAAhrE,GACE,OAAOtvB,KAAKu6F,OACb,CAKD,gBAAAllF,GACE,OAAOrV,KAAKk6F,aACb,CAOD,OAAA1rE,GACE,OAAOxuB,KAAKm6F,KACb,CAOD,SAAApkF,CAAUmJ,GAER,MAAM2P,GADN3P,EAAawP,GAAcxP,IACIE,YACzB0P,EAAkB5P,EAAWmC,iBACnC,GAAIwN,GAAeC,EAAiB,CAClC,MAAMpX,EAAQ0E,GAAU0S,GAAmB1S,GAAUyS,GACrDE,GACE1B,GACAyB,EAAgB,GAChBA,EAAgB,GAChBpX,GACCA,EACD,EACA,EACA,GAEFuV,GACEjtB,KAAKo6F,iBACL,EACAp6F,KAAKo6F,iBAAiBj5F,OACtB,EACAksB,GACArtB,KAAKo6F,iBAER,CACF,CASD,cAAA17E,CAAeC,GACbA,EAAY3e,KAAKo6F,iBAAkBp6F,KAAKo6F,iBAAkBp6F,KAAKu6F,QAChE,CAKD,KAAAzlF,GACE,OAAO,IAAImlF,GACTj6F,KAAKm6F,MACLn6F,KAAKo6F,iBAAiBt2F,QACtB9D,KAAKg2B,MAAMlyB,QACX9D,KAAKu6F,QACL7zF,OAAO6C,OAAO,GAAIvJ,KAAKs6F,aACvBt6F,KAAKqU,IAER,CAKD,OAAAoiB,GACE,OAAOz2B,KAAKg2B,KACb,CAMD,yBAAA0kE,GAkEE,OAjEA16F,KAAK8tB,oBAAsBxqB,GAAW,CAACsqB,EAAkB7X,KACvD,GAAI6X,IAAqB5tB,KAAKsxE,kBAC5B,OAAOtxE,KAAKw6F,oBAEdx6F,KAAKw6F,oBAAsBx6F,KAAK8U,QAC5BiB,GACF/V,KAAKw6F,oBAAoB97E,eAAe3I,GAE1C,MAAM2b,EACJ1xB,KAAKw6F,oBAAoBnrE,qBAC3B,IAAI6C,EACJ,OAAQlyB,KAAKm6F,OACX,IAAK,aACHzoE,EAA0BvwB,OAASswB,GACjCC,EACA,EACA1xB,KAAKw6F,oBAAoBJ,iBAAiBj5F,OAC1CnB,KAAKw6F,oBAAoBD,QACzB3sE,EACA8D,EACA,GAEFQ,EAAiB,CAACR,EAA0BvwB,QAC5C,MACF,IAAK,kBACH+wB,EAAiB,GACjBR,EAA0BvwB,OAAS8wB,GACjCP,EACA,EACA1xB,KAAKw6F,oBAAoBxkE,MACzBh2B,KAAKw6F,oBAAoBD,QACzB3sE,EACA8D,EACA,EACAQ,GAEF,MACF,IAAK,UACHA,EAAiB,GACjBR,EAA0BvwB,OAASmxB,GACjCZ,EACA,EACA1xB,KAAKw6F,oBAAoBxkE,MACzBh2B,KAAKw6F,oBAAoBD,QACzBvuF,KAAKka,KAAK0H,GACV8D,EACA,EACAQ,GAgBN,OAXIA,IACFlyB,KAAKw6F,oBAAsB,IAAIP,GAC7Bj6F,KAAKm6F,MACLzoE,EACAQ,EACA,EACAlyB,KAAKs6F,YACLt6F,KAAKqU,MAGTrU,KAAKsxE,kBAAoB1jD,EAClB5tB,KAAKw6F,mBAAmB,IAE1Bx6F,IACR,EAiBI,SAAS26F,GAAW5f,GACzB,MAAM6f,EAAe7f,EAAcvsD,UACnC,OAAQosE,GACN,IAAK,QACH,OAAO,IAAItnE,GAAMynD,EAAc1rD,sBACjC,IAAK,aACH,OAAO,IAAI6qD,GAAWa,EAAc1rD,qBAAsB,MAC5D,IAAK,aACH,OAAO,IAAI0qD,GAAWgB,EAAc1rD,qBAAsB,MAC5D,IAAK,kBACH,OAAO,IAAI8qD,GACTY,EAAc1rD,qBACd,KAC8B0rD,EAActkD,WAEhD,IAAK,UACH,MAAM5b,EAAkBkgE,EAAc1rD,qBAChCqB,EAAqCqqD,EAActkD,UACnD7F,EAAQ+E,GAAY9a,EAAiB6V,GAC3C,OAAOE,EAAMzvB,OAAS,EAClB,IAAIi5E,GAAav/D,EAAiB,KAAM+V,GACxC,IAAImF,GAAQlb,EAAiB,KAAM6V,GACzC,QACE,MAAM,IAAInoB,MAAM,yBAA2BqyF,GAEjD,CApCAX,GAAcp2F,UAAUwrB,mBACtB4qE,GAAcp2F,UAAU0yB,2BA8D1B,IAAAskE,GAAeZ,GCxgBAa,GAMD,aANCA,GAaE,gBAbFA,GAoBN,QApBMA,GA4BE,gBA5BFA,GAmCM,oBAnCNA,GA0CI,kBA1CJA,GAiDM,oBClBd,MAAMC,WAA0Bh1F,EAMrC,WAAAjG,CAAYC,EAAM0/C,EAASwjB,GACzBh+D,MAAMlF,GAONC,KAAKy/C,QAAUA,EAOfz/C,KAAKijE,SAAWA,CACjB,EA4kCH,IAAA+3B,GAz9BA,cAA2BjS,GAIzB,WAAAjpF,CAAY4K,GAGVzF,MAAM,CACJg5C,cAHFvzC,EAAUA,GAAW,IAGGuzC,aACtBrxC,aAAa,EACbsS,gBAAY1Y,EACZ+F,MAAO,QACP0S,WAAyBzY,IAAlBkE,EAAQuU,OAAsBvU,EAAQuU,QAM/Cjf,KAAK0H,GAKL1H,KAAKiH,KAKLjH,KAAK2H,GAML3H,KAAKoT,QAAU/P,EAMfrD,KAAKi7F,QAAUvwF,EAAQoc,OAMvB9mB,KAAKk7F,eAAiC10F,IAArBkE,EAAQywF,UAAgCzwF,EAAQywF,SAMjEn7F,KAAKo7F,KAAO1wF,EAAQmiE,SAEGrmE,IAAnBkE,EAAQ2I,OACVrT,KAAKoT,QAAU1I,EAAQ2I,YACA7M,IAAdxG,KAAKo7F,OACdpnF,GAAOhU,KAAKi7F,QAAS,0CAErBj7F,KAAKoT,QAAU45D,GACbhtE,KAAKo7F,KACkDp7F,KAAY,UAQvEA,KAAKq7F,eACkB70F,IAArBkE,EAAQ4wF,SAAyB5wF,EAAQ4wF,SAAWC,GAEtD,MAAMC,OACwBh1F,IAA5BkE,EAAQ8wF,iBAAgC9wF,EAAQ8wF,gBAqDlD,IAAI1zC,EAEAmb,EAjDJjjE,KAAKy7F,eAAiBD,EAAkB,IAAIE,GAAU,KAMtD17F,KAAK27F,oBAAsB,IAAID,GAM/B17F,KAAK47F,qBAAuB,EAM5B57F,KAAK67F,sBAAwB,GAO7B77F,KAAK87F,SAAW,GAOhB97F,KAAK+7F,UAAY,GAMjB/7F,KAAKg8F,mBAAqB,GAM1Bh8F,KAAKi8F,oBAAsB,KAMvB55F,MAAMC,QAAQoI,EAAQu4D,UACxBA,EAAWv4D,EAAQu4D,SACVv4D,EAAQu4D,WACjBnb,EAAap9C,EAAQu4D,SACrBA,EAAWnb,EAAW18C,YAEnBowF,QAAkCh1F,IAAfshD,IACtBA,EAAa,IAAIv9C,EAAW04D,SAEbz8D,IAAby8D,GACFjjE,KAAKk8F,oBAAoBj5B,QAERz8D,IAAfshD,GACF9nD,KAAKm8F,wBAAwBr0C,EAEhC,CAcD,UAAAs0C,CAAW38C,GACTz/C,KAAKq8F,mBAAmB58C,GACxBz/C,KAAK6H,SACN,CAOD,kBAAAw0F,CAAmB58C,GACjB,MAAM68C,EAAa7zF,EAAOg3C,GAE1B,IAAKz/C,KAAKu8F,YAAYD,EAAY78C,GAIhC,YAHIz/C,KAAKi8F,qBACPj8F,KAAKi8F,oBAAoBxwF,OAAOg0C,IAKpCz/C,KAAKw8F,mBAAmBF,EAAY78C,GAEpC,MAAM9qC,EAAW8qC,EAAQxqC,cACzB,GAAIN,EAAU,CACZ,MAAM4E,EAAS5E,EAASyK,YACpBpf,KAAKy7F,gBACPz7F,KAAKy7F,eAAevJ,OAAO34E,EAAQkmC,EAE3C,MACMz/C,KAAK67F,sBAAsBS,GAAc78C,EAG3Cz/C,KAAK4F,cACH,IAAIm1F,GAAkBD,GAA4Br7C,GAErD,CAOD,kBAAA+8C,CAAmBF,EAAY78C,GACzBA,aAAmBw6C,KAGvBj6F,KAAKg8F,mBAAmBM,GAAc,CACpCv1F,EAAO04C,EAAS34C,EAAkB9G,KAAKy8F,qBAAsBz8F,MAC7D+G,EACE04C,EACAp/C,EACAL,KAAKy8F,qBACLz8F,OAGL,CASD,WAAAu8F,CAAYD,EAAY78C,GACtB,IAAIi9C,GAAQ,EACZ,QAAwBl2F,IAApBi5C,EAAQrqC,QAAuB,CACjC,MAAM7H,EAAK3E,OAAO62C,EAAQrqC,SAC1B,GAAM7H,KAAMvN,KAAK87F,SAEV,GAAIr8C,aAAmBw6C,GAAe,CAC3C,MAAM0C,EAAiB38F,KAAK87F,SAASvuF,GAC/BovF,aAA0B1C,GAGzB53F,MAAMC,QAAQq6F,GAGjBA,EAAeh3F,KAAK85C,GAFpBz/C,KAAK87F,SAASvuF,GAAM,CAACovF,EAAgBl9C,GAHvCi9C,GAAQ,CAQlB,MACQA,GAAQ,OAbR18F,KAAK87F,SAASvuF,GAAMkyC,CAevB,CAQD,OAPIi9C,IACF1oF,KACIsoF,KAAct8F,KAAK+7F,WACrB,wDAEF/7F,KAAK+7F,UAAUO,GAAc78C,GAExBi9C,CACR,CAOD,WAAAzuB,CAAYhL,GACVjjE,KAAKk8F,oBAAoBj5B,GACzBjjE,KAAK6H,SACN,CAOD,mBAAAq0F,CAAoBj5B,GAClB,MAAMyyB,EAAU,GAEVkH,EAAc,GAEdC,EAAmB,GAEzB,IAAK,IAAIj7F,EAAI,EAAGT,EAAS8hE,EAAS9hE,OAAQS,EAAIT,EAAQS,IAAK,CACzD,MAAM69C,EAAUwjB,EAASrhE,GACnB06F,EAAa7zF,EAAOg3C,GACtBz/C,KAAKu8F,YAAYD,EAAY78C,IAC/Bm9C,EAAYj3F,KAAK85C,EAEpB,CAED,IAAK,IAAI79C,EAAI,EAAGT,EAASy7F,EAAYz7F,OAAQS,EAAIT,EAAQS,IAAK,CAC5D,MAAM69C,EAAUm9C,EAAYh7F,GACtB06F,EAAa7zF,EAAOg3C,GAC1Bz/C,KAAKw8F,mBAAmBF,EAAY78C,GAEpC,MAAM9qC,EAAW8qC,EAAQxqC,cACzB,GAAIN,EAAU,CACZ,MAAM4E,EAAS5E,EAASyK,YACxBs2E,EAAQ/vF,KAAK4T,GACbsjF,EAAiBl3F,KAAK85C,EAC9B,MACQz/C,KAAK67F,sBAAsBS,GAAc78C,CAE5C,CAKD,GAJIz/C,KAAKy7F,gBACPz7F,KAAKy7F,eAAepuF,KAAKqoF,EAASmH,GAGhC78F,KAAKyG,YAAYq0F,IACnB,IAAK,IAAIl5F,EAAI,EAAGT,EAASy7F,EAAYz7F,OAAQS,EAAIT,EAAQS,IACvD5B,KAAK4F,cACH,IAAIm1F,GAAkBD,GAA4B8B,EAAYh7F,IAIrE,CAMD,uBAAAu6F,CAAwBr0C,GACtB,IAAIg1C,GAAsB,EAC1B98F,KAAKsF,iBACHw1F,IAIA,SAAUl7F,GACHk9F,IACHA,GAAsB,EACtBh1C,EAAWniD,KAAK/F,EAAI6/C,SACpBq9C,GAAsB,EAEzB,IAEH98F,KAAKsF,iBACHw1F,IAIA,SAAUl7F,GACHk9F,IACHA,GAAsB,EACtBh1C,EAAWr8C,OAAO7L,EAAI6/C,SACtBq9C,GAAsB,EAEzB,IAEHh1C,EAAWxiD,iBACT6E,GAICvK,IACMk9F,IACHA,GAAsB,EACtB98F,KAAKo8F,WAAWx8F,EAAI0K,SACpBwyF,GAAsB,EACvB,IAGLh1C,EAAWxiD,iBACT6E,GAICvK,IACMk9F,IACHA,GAAsB,EACtB98F,KAAK+8F,cAAcn9F,EAAI0K,SACvBwyF,GAAsB,EACvB,IAGL98F,KAAKi8F,oBAAsBn0C,CAC5B,CAOD,KAAAnjD,CAAMq4F,GACJ,GAAIA,EAAM,CACR,IAAK,MAAMC,KAAaj9F,KAAKg8F,mBAAoB,CAClCh8F,KAAKg8F,mBAAmBiB,GAChC/xF,QAAQ5D,EACd,CACItH,KAAKi8F,sBACRj8F,KAAKg8F,mBAAqB,GAC1Bh8F,KAAK87F,SAAW,GAChB97F,KAAK+7F,UAAY,GAEzB,MACM,GAAI/7F,KAAKy7F,eAAgB,CACvB,MAAMyB,EAAyBz9C,IAC7Bz/C,KAAKm9F,sBAAsB19C,EAAQ,EAErCz/C,KAAKy7F,eAAevwF,QAAQgyF,GAC5B,IAAK,MAAM3vF,KAAMvN,KAAK67F,sBACpB77F,KAAKm9F,sBAAsBn9F,KAAK67F,sBAAsBtuF,GAEzD,CAECvN,KAAKi8F,qBACPj8F,KAAKi8F,oBAAoBt3F,QAGvB3E,KAAKy7F,gBACPz7F,KAAKy7F,eAAe92F,QAEtB3E,KAAK67F,sBAAwB,GAE7B,MAAMuB,EAAa,IAAIrC,GAAkBD,IACzC96F,KAAK4F,cAAcw3F,GACnBp9F,KAAK6H,SACN,CAcD,cAAAw1F,CAAe1hF,GACb,GAAI3b,KAAKy7F,eACP,OAAOz7F,KAAKy7F,eAAevwF,QAAQyQ,GAEjC3b,KAAKi8F,qBACPj8F,KAAKi8F,oBAAoB/wF,QAAQyQ,EAEpC,CAiBD,gCAAA2hF,CAAiCnmF,EAAYwE,GAC3C,MAAMpC,EAAS,CAACpC,EAAW,GAAIA,EAAW,GAAIA,EAAW,GAAIA,EAAW,IACxE,OAAOnX,KAAKu9F,uBAAuBhkF,GAAQ,SAAUkmC,GACnD,MAAM9qC,EAAW8qC,EAAQxqC,cACzB,GACEN,aAAoBslF,IACpBtlF,EAASyZ,qBAAqBjX,GAE9B,OAAOwE,EAAS8jC,EAGxB,GACG,CAqBD,sBAAA89C,CAAuBhkF,EAAQoC,GAC7B,GAAI3b,KAAKy7F,eACP,OAAOz7F,KAAKy7F,eAAe3F,gBAAgBv8E,EAAQoC,GAEjD3b,KAAKi8F,qBACPj8F,KAAKi8F,oBAAoB/wF,QAAQyQ,EAEpC,CAiBD,gCAAA6hF,CAAiCjkF,EAAQoC,GACvC,OAAO3b,KAAKu9F,uBACVhkF,GAKA,SAAUkmC,GACR,MAAM9qC,EAAW8qC,EAAQxqC,cACzB,GACEN,aAAoBslF,IACpBtlF,EAAS8Z,iBAAiBlV,GAC1B,CACA,MAAMi3B,EAAS70B,EAAS8jC,GACxB,GAAIjP,EACF,OAAOA,CAEV,CACF,GAEJ,CASD,qBAAAitD,GACE,OAAOz9F,KAAKi8F,mBACb,CAQD,WAAA7+C,GACE,IAAI6lB,EASJ,OARIjjE,KAAKi8F,oBACPh5B,EAAWjjE,KAAKi8F,oBAAoB7wF,WAAWtH,MAAM,GAC5C9D,KAAKy7F,iBACdx4B,EAAWjjE,KAAKy7F,eAAe9F,SAC1B7wF,EAAQ9E,KAAK67F,wBAChB35F,EAAO+gE,EAAUv8D,OAAOsC,OAAOhJ,KAAK67F,yBAGjC54B,CACR,CAQD,uBAAAy6B,CAAwBvmF,GACtB,MAAM8rD,EAAW,GAIjB,OAHAjjE,KAAKs9F,iCAAiCnmF,GAAY,SAAUsoC,GAC1DwjB,EAASt9D,KAAK85C,EACpB,IACWwjB,CACR,CAgBD,mBAAA06B,CAAoBpkF,EAAQ2F,GAC1B,GAAIlf,KAAKy7F,eAAgB,CAGvB,KAFmBv8E,GAAcA,EAAWG,YAAcrf,KAAKggD,YAG7D,OAAOhgD,KAAKy7F,eAAe7F,YAAYr8E,GAGzC,MAAMm8E,EAAUl2E,GAAcjG,EAAQ2F,GAEtC,MAAO,GAAG62E,UACLL,EAAQ9qD,KAAKgzD,GAAa59F,KAAKy7F,eAAe7F,YAAYgI,KAEhE,CACD,OAAI59F,KAAKi8F,oBACAj8F,KAAKi8F,oBAAoB7wF,WAAWtH,MAAM,GAE5C,EACR,CAeD,6BAAA+5F,CAA8B1mF,EAAYqgC,GAQxC,MAAMpgC,EAAID,EAAW,GACfE,EAAIF,EAAW,GACrB,IAAI2mF,EAAiB,KACrB,MAAM9vE,EAAe,CAACG,IAAKA,KAC3B,IAAIF,EAAqBzT,IACzB,MAAMjB,EAAS,EAAEiB,KAAWA,IAAUA,IAAUA,KA8BhD,OA7BAg9B,EAASA,GAAkBr0C,EAC3BnD,KAAKy7F,eAAe3F,gBAClBv8E,GAIA,SAAUkmC,GACR,GAAIjI,EAAOiI,GAAU,CACnB,MAAM9qC,EAAW8qC,EAAQxqC,cACnB8oF,EAA6B9vE,EAKnC,GAJAA,EACEtZ,aAAoBslF,GAChB,EACAtlF,EAASoZ,eAAe3W,EAAGC,EAAG2W,EAAcC,GAC9CA,EAAqB8vE,EAA4B,CACnDD,EAAiBr+C,EAKjB,MAAMu+C,EAAchyF,KAAKka,KAAK+H,GAC9B1U,EAAO,GAAKnC,EAAI4mF,EAChBzkF,EAAO,GAAKlC,EAAI2mF,EAChBzkF,EAAO,GAAKnC,EAAI4mF,EAChBzkF,EAAO,GAAKlC,EAAI2mF,CACjB,CACF,CACF,IAEIF,CACR,CAYD,SAAA1+E,CAAU7F,GACR,OAAOvZ,KAAKy7F,eAAer8E,UAAU7F,EACtC,CAcD,cAAA0kF,CAAe1wF,GACb,MAAMkyC,EAAUz/C,KAAK87F,SAASvuF,EAAGoL,YACjC,YAAmBnS,IAAZi5C,EAAwBA,EAAU,IAC1C,CAQD,eAAAy+C,CAAgBzR,GACd,MAAMhtC,EAAUz/C,KAAK+7F,UAAUtP,GAC/B,YAAmBjmF,IAAZi5C,EAAwBA,EAAU,IAC1C,CAQD,SAAA0+C,GACE,OAAOn+F,KAAKi7F,OACb,CAKD,WAAAmD,GACE,OAAOp+F,KAAKk7F,SACb,CAQD,MAAAmD,GACE,OAAOr+F,KAAKo7F,IACb,CAMD,oBAAAqB,CAAqB52F,GACnB,MAAM45C,EAAuC55C,EAAY,OACnDy2F,EAAa7zF,EAAOg3C,GACpB9qC,EAAW8qC,EAAQxqC,cACzB,GAAKN,EAOE,CACL,MAAM4E,EAAS5E,EAASyK,YACpBk9E,KAAct8F,KAAK67F,8BACd77F,KAAK67F,sBAAsBS,GAC9Bt8F,KAAKy7F,gBACPz7F,KAAKy7F,eAAevJ,OAAO34E,EAAQkmC,IAGjCz/C,KAAKy7F,gBACPz7F,KAAKy7F,eAAe79D,OAAOrkB,EAAQkmC,EAGxC,MAlBO68C,KAAct8F,KAAK67F,wBACnB77F,KAAKy7F,gBACPz7F,KAAKy7F,eAAehwF,OAAOg0C,GAE7Bz/C,KAAK67F,sBAAsBS,GAAc78C,GAe7C,MAAMlyC,EAAKkyC,EAAQrqC,QACnB,QAAW5O,IAAP+G,EAAkB,CACpB,MAAM+wF,EAAM/wF,EAAGoL,WACX3Y,KAAK87F,SAASwC,KAAS7+C,IACzBz/C,KAAKu+F,mBAAmB9+C,GACxBz/C,KAAK87F,SAASwC,GAAO7+C,EAE7B,MACMz/C,KAAKu+F,mBAAmB9+C,GACxBz/C,KAAK+7F,UAAUO,GAAc78C,EAE/Bz/C,KAAK6H,UACL7H,KAAK4F,cACH,IAAIm1F,GAAkBD,GAA+Br7C,GAExD,CAQD,UAAA++C,CAAW/+C,GACT,MAAMlyC,EAAKkyC,EAAQrqC,QACnB,YAAW5O,IAAP+G,EACKA,KAAMvN,KAAK87F,SAEbrzF,EAAOg3C,KAAYz/C,KAAK+7F,SAChC,CAKD,OAAAj3F,GACE,OAAI9E,KAAKy7F,eAELz7F,KAAKy7F,eAAe32F,WAAaA,EAAQ9E,KAAK67F,wBAG9C77F,KAAKi8F,qBACyC,IAAzCj8F,KAAKi8F,oBAAoBjxF,WAGnC,CAOD,YAAAyzF,CAAallF,EAAQmD,EAAYwC,GAC/B,MAAMw/E,EAAqB1+F,KAAK27F,oBAC1BgD,EAAgB3+F,KAAKq7F,UAAU9hF,EAAQmD,EAAYwC,GACzD,IAAK,IAAItd,EAAI,EAAGuE,EAAKw4F,EAAcx9F,OAAQS,EAAIuE,IAAMvE,EAAG,CACtD,MAAMg9F,EAAeD,EAAc/8F,GACb88F,EAAmB5I,gBACvC8I,GAKA,SAAUh6F,GACR,OAAOmV,GAAenV,EAAO2U,OAAQqlF,EACtC,QAGC5+F,KAAK47F,qBACP57F,KAAK4F,cACH,IAAIm1F,GAAkBD,KAExB96F,KAAKoT,QAAQrP,KACX/D,KACA4+F,EACAliF,EACAwC,GACC+jD,MACGjjE,KAAK47F,qBACP57F,KAAK4F,cACH,IAAIm1F,GACFD,QACAt0F,EACAy8D,GAEH,IAEH,OACIjjE,KAAK47F,qBACP57F,KAAK4F,cACH,IAAIm1F,GAAkBD,IACvB,IAGL4D,EAAmBxM,OAAO0M,EAAc,CAACrlF,OAAQqlF,EAAa96F,UAEjE,CACD9D,KAAKkkE,UACHlkE,KAAKoT,QAAQjS,OAAS,IAAYnB,KAAK47F,qBAAuB,CACjE,CAED,OAAAvX,GACErkF,KAAK2E,OAAM,GACX3E,KAAK27F,oBAAoBh3F,QACzBM,MAAMo/E,SACP,CAOD,kBAAAwa,CAAmBtlF,GACjB,MAAMmlF,EAAqB1+F,KAAK27F,oBAChC,IAAIjzF,EACJg2F,EAAmB5I,gBAAgBv8E,GAAQ,SAAU3U,GACnD,GAAIrC,GAAOqC,EAAO2U,OAAQA,GAExB,OADA7Q,EAAM9D,GACC,CAEf,IACQ8D,GACFg2F,EAAmBjzF,OAAO/C,EAE7B,CASD,aAAAq0F,CAAct9C,GACZ,IAAKA,EACH,OAEF,MAAM68C,EAAa7zF,EAAOg3C,GACtB68C,KAAct8F,KAAK67F,6BACd77F,KAAK67F,sBAAsBS,GAE9Bt8F,KAAKy7F,gBACPz7F,KAAKy7F,eAAehwF,OAAOg0C,GAGhBz/C,KAAKm9F,sBAAsB19C,IAExCz/C,KAAK6H,SAER,CASD,qBAAAs1F,CAAsB19C,GACpB,MAAM68C,EAAa7zF,EAAOg3C,GACpBq/C,EAAoB9+F,KAAKg8F,mBAAmBM,GAClD,IAAKwC,EACH,OAEFA,EAAkB5zF,QAAQ5D,UACnBtH,KAAKg8F,mBAAmBM,GAC/B,MAAM/uF,EAAKkyC,EAAQrqC,QAQnB,YAPW5O,IAAP+G,UACKvN,KAAK87F,SAASvuF,EAAGoL,mBAEnB3Y,KAAK+7F,UAAUO,GACtBt8F,KAAK4F,cACH,IAAIm1F,GAAkBD,GAA+Br7C,IAEhDA,CACR,CASD,kBAAA8+C,CAAmB9+C,GACjB,IAAIs/C,GAAU,EACd,IAAK,MAAMxxF,KAAMvN,KAAK87F,SAAU,CAC9B,MAAMa,EAAiB38F,KAAK87F,SAASvuF,GACrC,GACEkyC,aAAmBw6C,IACnB53F,MAAMC,QAAQq6F,IACdA,EAAej3F,SAAS+5C,GAExBk9C,EAAe91F,OAAO81F,EAAe/1F,QAAQ64C,GAAU,QAClD,GAAIz/C,KAAK87F,SAASvuF,KAAQkyC,EAAS,QACjCz/C,KAAK87F,SAASvuF,GACrBwxF,GAAU,EACV,KACD,CACF,CACD,OAAOA,CACR,CAQD,SAAAC,CAAU3rF,GACRrT,KAAKoT,QAAUC,CAChB,CAOD,MAAA84E,CAAOtf,GACL74D,GAAOhU,KAAKi7F,QAAS,0CACrBj7F,KAAKo7F,KAAOvuB,EACZ7sE,KAAKg/F,UAAUhyB,GAAIH,EAAK7sE,KAAKi7F,SAC9B,GC5zBH,IAAAgE,GArQA,cAAsBC,GAIpB,WAAAp/F,CAAY4K,GACVzF,MAAM,CACJg5C,aAAcvzC,EAAQuzC,aACtBh/B,MAAOvU,EAAQuU,QAOjBjf,KAAK0c,gBAAalW,EAMlBxG,KAAKsnB,cAAgC9gB,IAArBkE,EAAQ4c,SAAyB5c,EAAQ4c,SAAW,GAMpEtnB,KAAKg+F,YAActzF,EAAQszF,aAAe,EAM1Ch+F,KAAKm/F,mBAAqB,EAM1Bn/F,KAAKijE,SAAW,GAOhBjjE,KAAKo/F,iBACH10F,EAAQ00F,kBACR,SAAU3/C,GACR,MAAM9qC,EAAiC8qC,EAAQxqC,cAK/C,OAJAjB,IACGW,GAAmC,UAAvBA,EAAS6Z,UACtB,6EAEK7Z,CACf,EAMI3U,KAAKq/F,qBAAuB30F,EAAQ40F,cAMpCt/F,KAAKiK,OAAS,KAKdjK,KAAKu/F,cAAgBv/F,KAAKqkF,QAAQn9E,KAAKlH,MAEvCA,KAAKw/F,eAAex/F,KAAKsnB,SAAUtnB,KAAKg+F,aACxCh+F,KAAKg9C,UAAUtyC,EAAQT,QAAU,KAClC,CAOD,KAAAtF,CAAMq4F,GACJh9F,KAAKijE,SAAS9hE,OAAS,EACvB8D,MAAMN,MAAMq4F,EACb,CAOD,WAAAn1E,GACE,OAAO7nB,KAAKsnB,QACb,CAOD,SAAA21B,GACE,OAAOj9C,KAAKiK,MACb,CAOD,YAAAw0F,CAAallF,EAAQmD,EAAYwC,GAC/Blf,KAAKiK,OAAOw0F,aAAallF,EAAQmD,EAAYwC,GACzCxC,IAAe1c,KAAK0c,aACtB1c,KAAK0c,WAAaA,EAClB1c,KAAKqkF,UAER,CAOD,WAAAob,CAAYn4E,GACVtnB,KAAKw/F,eAAel4E,EAAUtnB,KAAKg+F,YACpC,CAQD,cAAA0B,CAAe1B,GACbh+F,KAAKw/F,eAAex/F,KAAKsnB,SAAU02E,EACpC,CAOD,cAAA2B,GACE,OAAO3/F,KAAKg+F,WACb,CAOD,SAAAhhD,CAAU/yC,GACJjK,KAAKiK,QACPjK,KAAKiK,OAAO3D,oBAAoBQ,EAAkB9G,KAAKu/F,eAEzDv/F,KAAKiK,OAASA,EACVA,GACFA,EAAO3E,iBAAiBwB,EAAkB9G,KAAKu/F,eAEjDv/F,KAAKqkF,SACN,CAKD,OAAAA,GACErkF,KAAK2E,QACL3E,KAAK4/F,UACL5/F,KAAKiuE,YAAYjuE,KAAKijE,SACvB,CAOD,cAAAu8B,CAAel4E,EAAU02E,GACvB,MAAMhuD,EACS,IAAb1oB,EAAiB,EAAItb,KAAKwP,IAAIwiF,EAAa12E,GAAYA,EACnDzf,EACJyf,IAAatnB,KAAKsnB,UAAYtnB,KAAKm/F,qBAAuBnvD,EAC5DhwC,KAAKsnB,SAAWA,EAChBtnB,KAAKg+F,YAAcA,EACnBh+F,KAAKm/F,mBAAqBnvD,EACtBnoC,GACF7H,KAAKqkF,SAER,CAKD,OAAAub,GACE,QAAwBp5F,IAApBxG,KAAK0c,aAA6B1c,KAAKiK,OACzC,OAEF,MAAMsP,E7IpED,CAACiB,IAAUA,KAAU,KAAW,K6IqE/BqlF,EAAc7/F,KAAKsnB,SAAWtnB,KAAK0c,WACnCumD,EAAWjjE,KAAKiK,OAAOmzC,cAGvB0iD,EAAY,CAAA,EAElB,IAAK,IAAIl+F,EAAI,EAAGuE,EAAK88D,EAAS9hE,OAAQS,EAAIuE,EAAIvE,IAAK,CACjD,MAAM69C,EAAUwjB,EAASrhE,GACzB,KAAM6G,EAAOg3C,KAAYqgD,GAAY,CACnC,MAAMnrF,EAAW3U,KAAKo/F,iBAAiB3/C,GACvC,GAAI9qC,EAAU,CAEZgG,GADoBhG,EAAS8a,iBACalW,GAC1CG,GAAOH,EAAQsmF,EAAatmF,GAE5B,MAAMwmF,EAAY//F,KAAKiK,OACpB0zF,oBAAoBpkF,GACpBi+B,QAAO,SAAUwoD,GAChB,MAAMvT,EAAMhkF,EAAOu3F,GACnB,QAAIvT,KAAOqT,KAGXA,EAAUrT,IAAO,GACV,EACrB,IACUzsF,KAAKijE,SAASt9D,KAAK3F,KAAKs/F,cAAcS,EAAWxmF,GAClD,CACF,CACF,CACF,CAQD,aAAA+lF,CAAcr8B,EAAU1pD,GACtB,MAAM47C,EAAW,CAAC,EAAG,GACrB,IAAK,IAAIvzD,EAAIqhE,EAAS9hE,OAAS,EAAGS,GAAK,IAAKA,EAAG,CAC7C,MAAM+S,EAAW3U,KAAKo/F,iBAAiBn8B,EAASrhE,IAC5C+S,EACFkjC,GAAcsd,EAAUxgD,EAAS8a,kBAEjCwzC,EAASp8D,OAAOjF,EAAG,EAEtB,CACD42D,GAAgBrD,EAAU,EAAI8N,EAAS9hE,QACvC,MAAM8+F,EAAe5jF,GAAU9C,GACzBy2B,EAAQhwC,KAAKm/F,mBACbxqF,EAAW,IAAI2e,GAAM,CACzB6hC,EAAS,IAAM,EAAInlB,GAASiwD,EAAa,GAAKjwD,EAC9CmlB,EAAS,IAAM,EAAInlB,GAASiwD,EAAa,GAAKjwD,IAEhD,OAAIhwC,KAAKq/F,qBACAr/F,KAAKq/F,qBAAqB1qF,EAAUsuD,GAEtC,IAAI9uD,GAAQ,CACjBQ,WACAsuD,YAEH,GCyKH,IAAAi9B,GAhcA,cAA6BC,GAI3B,WAAArgG,CAAY4K,GACVzF,MAAM,CACJqH,UAAW5B,EAAQ4B,UACnB+G,OAAQ,IAAM9O,QAAQE,QAAQ,IAAI8N,WAAW,IAC7C3F,YAAalC,EAAQkC,YACrBF,WAAYhC,EAAQgC,aAOtB1M,KAAKo7B,YAAc1wB,EAAQwwB,WAM3Bl7B,KAAK+hF,QAAUr3E,EAAQgyE,OAMvB18E,KAAKogG,YAAc,KAMnBpgG,KAAKqgG,aAAe,KAMpBrgG,KAAKsgG,iBAAc95F,EAMnBxG,KAAKgiF,gBAAkBt3E,EAAQi3E,eAM/B3hF,KAAKiiF,gBAAkBv3E,EAAQk3E,eAM/B5hF,KAAKkiF,kBAAoBx3E,EAAQqhE,kBAAoBrhE,EAAQ4B,UAM7DtM,KAAKmiF,aAAe,GAMpBniF,KAAKoiF,qBAAuB,KAM5BpiF,KAAKqiF,SAAW,EAEhB,MAAM9F,EAAev8E,KAAKiiF,gBAAgBK,mBACxCtiF,KAAKkiF,mBAEDK,EAAkBviF,KAAKiiF,gBAAgB7iE,YAC7C,IAAIq/D,EAAkBz+E,KAAKgiF,gBAAgB5iE,YAE3C,MAAMojE,EAAsBD,EACxB5kE,GAAgB4+D,EAAcgG,GAC9BhG,EAEJ,GAAqC,IAAjCtgE,GAAQumE,GAIV,YADAxiF,KAAKuM,MAAQV,GAIf,MAAMsf,EAAazgB,EAAQygB,WACrBs3D,EAAmBt3D,EAAW/L,YAChCqjE,IAIAhE,EAHGA,EAGe9gE,GAAgB8gE,EAAiBgE,GAFjCA,GAMtB,MAAMvvC,EAAmBlzC,KAAKiiF,gBAAgBzmD,cAC5Cx7B,KAAKkiF,kBAAkB,IAGnB/F,EAAazxE,EAAQyxE,WACrBlpC,EAAmBqpC,GACvBnxD,EACAgxD,EACAqG,EACAtvC,GAGF,IAAKzzB,SAASwzB,IAAqBA,GAAoB,EAIrD,YADAjzC,KAAKuM,MAAQV,GAIf,MAAM62E,OACuBl8E,IAA3BkE,EAAQg0E,eACJh0E,EAAQg0E,eACRH,GAeN,GATAv+E,KAAK2iF,eAAiB,IAAIC,GACxBz3D,EACAgxD,EACAqG,EACA/D,EACAxrC,EAAmByvC,EACnBxvC,GAGgD,IAA9ClzC,KAAK2iF,eAAejF,eAAev8E,OAGrC,YADAnB,KAAKuM,MAAQV,GAIf7L,KAAKqiF,SAAWriF,KAAKgiF,gBAAgBa,kBAAkB5vC,GACvD,IAAIpmB,EAAe7sB,KAAK2iF,eAAelB,wBAmBvC,GAjBIhD,IACEtzD,EAAW9L,YACbwN,EAAa,GAAKjJ,GAChBiJ,EAAa,GACb4xD,EAAgB,GAChBA,EAAgB,IAElB5xD,EAAa,GAAKjJ,GAChBiJ,EAAa,GACb4xD,EAAgB,GAChBA,EAAgB,KAGlB5xD,EAAelP,GAAgBkP,EAAc4xD,IAI5CxiE,GAAQ4Q,GAEN,CACL,MAAMi2D,EAAc9iF,KAAKgiF,gBAAgBe,0BACvCl2D,EACA7sB,KAAKqiF,UAED4H,EAAUv/E,EAAQm3E,gBACxB,IAAK,IAAImB,EAAOF,EAAY3oE,KAAM6oE,GAAQF,EAAYzoE,KAAM2oE,IAC1D,IAAK,IAAIC,EAAOH,EAAY1oE,KAAM6oE,GAAQH,EAAYxoE,KAAM2oE,IAAQ,CAClE,MAAMh2E,EAAOg9E,EAAQjqF,KAAKqiF,SAAUW,EAAMC,EAAMjjF,KAAKo7B,aACjDnuB,GACFjN,KAAKmiF,aAAax8E,KAAKsH,EAE1B,CAG8B,IAA7BjN,KAAKmiF,aAAahhF,SACpBnB,KAAKuM,MAAQV,EAEhB,MAnBC7L,KAAKuM,MAAQV,CAoBhB,CAMD,OAAA6H,GACE,OAAO1T,KAAKsgG,WACb,CAMD,OAAA1sF,GACE,OAAO5T,KAAKogG,WACb,CAMD,QAAAvsF,GACE,OAAO7T,KAAKqgG,YACb,CAKD,UAAAnd,GACE,MAAMqd,EAAc,GAoDpB,GAnDAvgG,KAAKmiF,aAAaj3E,SAAS+B,IACzB,IAAKA,GAAQA,EAAKC,aAAerB,EAC/B,OAEF,MAAM4H,EAAOxG,EAAKyG,UACZgpE,EAAS18E,KAAK+hF,QAIpB,IAAIye,EACJ,MAAMC,EAAYnuF,GAAYrF,EAAK2G,WAEjC4sF,EADEC,GAGS7tF,GAAQV,GAAYjF,EAAK2G,YAEtC,MAAM8sF,EAAY,CAACjtF,EAAK,GAAK,EAAIipE,EAAQjpE,EAAK,GAAK,EAAIipE,GACjDikB,EAAUH,aAAoB/tF,aAC9BmuF,EAAaF,EAAU,GAAKA,EAAU,GACtCG,EAAWF,EAAUluF,aAAeF,WACpCuuF,EAAY,IAAID,EAASL,EAAS9mF,QAClCqnF,EAAkBF,EAASG,kBAC3BC,EAAiBF,EAAkBD,EAAU3/F,OAAUy/F,EACvDM,EAAcJ,EAAUK,WAAaT,EAAU,GAC/CU,EAAYp1F,KAAKuT,MACrB2hF,EAAcH,EAAkBL,EAAU,IAEtCW,EAAeT,EAAaQ,EAClC,IAAIE,EAAaR,EACjB,GAAIA,EAAU3/F,SAAWkgG,EAAc,CACrCC,EAAa,IAAIT,EAASQ,GAC1B,IAAIE,EAAY,EACZC,EAAY,EAChB,MAAMC,EAAWf,EAAU,GAAKU,EAChC,IAAK,IAAIM,EAAW,EAAGA,EAAWhB,EAAU,KAAMgB,EAAU,CAC1D,IAAK,IAAIC,EAAW,EAAGA,EAAWF,IAAYE,EAC5CL,EAAWC,KAAeT,EAAUU,EAAYG,GAElDH,GAAaN,EAAcH,CAC5B,CACF,CACDR,EAAY56F,KAAK,CACf4T,OAAQvZ,KAAKgiF,gBAAgBM,mBAAmBr1E,EAAKX,WACrDnK,KAAM,IAAIoQ,WAAW+uF,EAAW5nF,QAChCkoF,SAAUf,EACVI,cAAeA,EACfP,UAAWA,GACX,IAEJ1gG,KAAKmiF,aAAahhF,OAAS,EAEA,IAAvBo/F,EAAYp/F,OACdnB,KAAKuM,MAAQV,MACR,CACL,MAAMwzB,EAAIr/B,KAAKkiF,kBAAkB,GAC3BzuE,EAAOzT,KAAKiiF,gBAAgBkB,YAAY9jD,GACxCwiE,EAA8B,iBAATpuF,EAAoBA,EAAOA,EAAK,GACrDquF,EAA+B,iBAATruF,EAAoBA,EAAOA,EAAK,GACtDy/B,EAAmBlzC,KAAKiiF,gBAAgBzmD,cAAc6D,GACtD4T,EAAmBjzC,KAAKgiF,gBAAgBxmD,cAC5Cx7B,KAAKqiF,UAGD9F,EAAev8E,KAAKiiF,gBAAgBK,mBACxCtiF,KAAKkiF,mBAGP,IAAI6f,EAAOC,EAEX,MAAMf,EAAgBV,EAAY,GAAGU,cAGrC,IAAK,IAAIgB,EADOj2F,KAAKiZ,KAAKg8E,EAAgB,GACd,EAAGgB,GAAU,IAAKA,EAAQ,CACpD,MAAMxlB,EAAU,GAChB,IAAK,IAAI76E,EAAI,EAAGoG,EAAMu4F,EAAYp/F,OAAQS,EAAIoG,IAAOpG,EAAG,CACtD,MAAMsgG,EAAa3B,EAAY3+F,GACzB8X,EAASwoF,EAAW//F,KACpBu+F,EAAYwB,EAAWxB,UACvBlxF,EAAQkxF,EAAU,GAClBjxF,EAASixF,EAAU,GACnBxwF,EAAUX,GAAsBC,EAAOC,EAAQC,IAC/CiE,EAAYzD,EAAQiyF,gBAAgB3yF,EAAOC,GAC3CtN,EAAOwR,EAAUxR,KACvB,IAAI2Y,EAAkB,EAATmnF,EACb,IAAK,IAAI79E,EAAI,EAAGpc,EAAM7F,EAAKhB,OAAQijB,EAAIpc,EAAKoc,GAAK,EAC/CjiB,EAAKiiB,GAAK1K,EAAOoB,GACjB3Y,EAAKiiB,EAAI,GAAK1K,EAAOoB,EAAS,GAC9B3Y,EAAKiiB,EAAI,GAAK1K,EAAOoB,EAAS,GAC9B3Y,EAAKiiB,EAAI,GAAK,IACdtJ,GAAUmmF,EAEZ/wF,EAAQkyF,aAAazuF,EAAW,EAAG,GACnC8oE,EAAQ92E,KAAK,CACX4T,OAAQ2oF,EAAW3oF,OACnB1G,MAAO3C,EAAQN,QAElB,CAED,MAAMA,EAASwzE,GACbye,EACAC,EACA9hG,KAAKo7B,YACL6X,EACAjzC,KAAKgiF,gBAAgB5iE,YACrB8zB,EACAqpC,EACAv8E,KAAK2iF,eACLlG,EACAz8E,KAAK+hF,SACL,GACA,GAGF,IAAK,IAAIngF,EAAI,EAAGoG,EAAMy0E,EAAQt7E,OAAQS,EAAIoG,IAAOpG,EAAG,CAClD,MACMsO,EADSusE,EAAQ76E,GAAGiR,MACH7C,WAAW,MAClCC,GAAcC,GACdR,GAAW/J,KAAKuK,EAAQN,OACzB,CAED,MAAMM,EAAUN,EAAOI,WAAW,MAC5B2D,EAAYzD,EAAQ8C,aACxB,EACA,EACApD,EAAOJ,MACPI,EAAOH,QAGTQ,GAAcC,GACdR,GAAW/J,KAAKiK,GAEXmyF,IACHC,EAAQ,IAAIzvF,WACV0uF,EAAgBttF,EAAUnE,MAAQmE,EAAUlE,QAE9CsyF,EAAQ,IAAIxB,EAAY,GAAGqB,SAASI,EAAMtoF,SAG5C,MAAMvX,EAAOwR,EAAUxR,KACvB,IAAI2Y,EAAkB,EAATmnF,EACb,IAAK,IAAIrgG,EAAI,EAAGoG,EAAM7F,EAAKhB,OAAQS,EAAIoG,EAAKpG,GAAK,EAC3B,MAAhBO,EAAKP,EAAI,IACXogG,EAAMlnF,GAAU3Y,EAAKP,GACrBogG,EAAMlnF,EAAS,GAAK3Y,EAAKP,EAAI,GAC7BogG,EAAMlnF,EAAS,GAAK3Y,EAAKP,EAAI,KAE7BogG,EAAMlnF,GAAU,EAChBknF,EAAMlnF,EAAS,GAAK,EACpBknF,EAAMlnF,EAAS,GAAK,GAEtBA,GAAUmmF,CAEb,CAEDjhG,KAAKogG,YAAc2B,EACnB/hG,KAAKsgG,YAAc,CACjBt0F,KAAKgZ,MAAM68E,EAAc7hG,KAAKo7B,aAC9BpvB,KAAKgZ,MAAM88E,EAAe9hG,KAAKo7B,cAEjCp7B,KAAKuM,MAAQV,CACd,CACD7L,KAAK6H,SACN,CAKD,IAAAwF,GACE,GAAIrN,KAAKuM,QAAUV,GAAkB7L,KAAKuM,QAAUV,EAClD,OAEF7L,KAAKuM,MAAQV,EACb7L,KAAK6H,UAEL,IAAIw7E,EAAa,EAEjBrjF,KAAKoiF,qBAAuB,GAC5BpiF,KAAKmiF,aAAaj3E,SAAS+B,IACzB,MAAMV,EAAQU,EAAKC,WACnB,GAAIX,IAAUV,GAAkBU,IAAUV,EACxC,OAEFw3E,IAEA,MAAMC,EAAkBv8E,EACtBkG,EACAnG,GACA,WACE,MAAMyF,EAAQU,EAAKC,WAEjBX,GAASV,GACTU,GAASV,GACTU,GAASV,IAETvE,EAAcg8E,GACdD,IACmB,IAAfA,IACFrjF,KAAKujF,mBACLvjF,KAAKkjF,cAGV,GACDljF,MAEFA,KAAKoiF,qBAAqBz8E,KAAK29E,EAAgB,IAG9B,IAAfD,EACF7xC,WAAWxxC,KAAKkjF,WAAWh8E,KAAKlH,MAAO,GAEvCA,KAAKmiF,aAAaj3E,SAAQ,SAAU+B,GACpBA,EAAKC,YACNrB,GACXoB,EAAKI,MAEf,GAEG,CAKD,gBAAAk2E,GACEvjF,KAAKoiF,qBAAqBl3E,QAAQ5D,GAClCtH,KAAKoiF,qBAAuB,IAC7B,GCvFH,IAAAigB,GAzVA,cAA6BtW,GAI3B,WAAAjsF,CAAY4K,GACV,MAAMwU,OACmB1Y,IAAvBkE,EAAQwU,WAA2B,YAAcxU,EAAQwU,WAE3D,IAAIyC,EAAWjX,EAAQiX,cACNnb,IAAbmb,GAA0BzC,IAC5ByC,EAAW8mE,GAAU,CACnBlvE,OAAQ+uE,GAAqBppE,GAC7B6tB,cAAeriC,EAAQqiC,cACvBG,QAASxiC,EAAQwiC,QACjBD,QAASviC,EAAQuiC,QACjB+3C,SAAUt6E,EAAQs6E,YAItB//E,MAAM,CACJkmC,UAAW,GACX8S,aAAcvzC,EAAQuzC,aACtB6lC,wBAAyBp5E,EAAQo5E,wBACjC5kE,WAAYA,EACZyC,SAAUA,EACVsnE,OAAQv+E,EAAQu+E,OAChB18E,MAAO7B,EAAQ6B,MACf0S,MAAOvU,EAAQuU,MACfvS,WAAYhC,EAAQgC,WACpBE,YAAalC,EAAQkC,cAOvB5M,KAAK+hF,aAA6Bv7E,IAAnBkE,EAAQgyE,OAAuBhyE,EAAQgyE,OAAS,EAM/D18E,KAAK+kF,UAAYr6E,EAAQs6E,SAAWlmB,GAAOp0D,EAAQs6E,UAAY,KAM/DhlF,KAAK6kF,WAAa,KAMlB7kF,KAAKosF,iBAAmB,GAKxBpsF,KAAKoT,QAAU1I,EAAQ2I,OAEvBrT,KAAK2hE,kBAAoB3hE,KAAK2hE,kBAAkBz6D,KAAKlH,MAKrDA,KAAKohG,eAAkC56F,IAAtBkE,EAAQ02F,UAA0B,EAAI12F,EAAQ02F,UAM/DphG,KAAKsiG,uBAAyB,GAM9BtiG,KAAKuiG,wBAA0B,EAChC,CAQD,YAAAC,CAAa1d,GACX9kF,KAAK6kF,WAAaC,CACnB,CASD,WAAA3B,CAAY9jD,GACV,GAAIr/B,KAAK6kF,WACP,OAAO7kF,KAAK6kF,WAAWxlD,GAEzB,GAAIr/B,KAAK+kF,UACP,OAAO/kF,KAAK+kF,UAEd,MAAMpjE,EAAW3hB,KAAKkqF,cACtB,OAAOvoE,EAAWm9C,GAAOn9C,EAASwhE,YAAY9jD,IAAM,CAAC,IAAK,IAC3D,CAMD,sBAAAwqD,CAAuB3qE,GACrB,MAAMwuE,EAAW1tF,KAAK0uB,gBACtB,OAAKg/D,GAAYriE,GAAWqiE,EAAUxuE,GAC7Blf,KAAK+hF,QAGP,CACR,CAMD,SAAAid,CAAU3rF,GACRrT,KAAKoT,QAAUC,CAChB,CAUD,cAAAovF,CAAepjE,EAAGjoB,EAAGC,EAAG8kE,EAAYhxD,GAClC,MAAM9H,EAAQrjB,KAAKypF,0BAA0BtN,GACvCwN,EAAepf,GAAUlrC,EAAGjoB,EAAGC,GACrC,GAAIgM,EAAMumD,YAAY+f,GAAe,CACnC,MAAM18E,EAAOoW,EAAMla,IAAIwgF,GACvB,GAAI18E,GAAQA,EAAK1F,KAAOvH,KAAK+M,SAC3B,OAAOE,CAEV,CAED,MAAM0U,EAAW3hB,KAAKkqF,cAChBwY,EAAuB12F,KAAKyP,IAAIvX,MACpC,KACAyd,EAASg3B,iBAAiB/N,KAAI,CAAC1mB,EAAGmb,KAChC,MAAM2lD,EAAWlmB,GAAOn9C,EAASwhE,YAAY9jD,IACvCsjE,EAAc3iG,KAAKmjF,YAAY9jD,GACrC,OAAOrzB,KAAKyP,IACVknF,EAAY,GAAK3d,EAAS,GAC1B2d,EAAY,GAAK3d,EAAS,GAC3B,KAICrD,EAAiB3hF,KAAKgqF,yBAAyB7+D,GAC/Cy2D,EAAiB5hF,KAAKgqF,yBAAyB7N,GAC/C7vE,EAAY,CAAC+yB,EAAGjoB,EAAGC,GACnB00D,EAAmB/rE,KAAKsqF,+BAC5Bh+E,EACA6vE,GAGIzxE,EAAUhE,OAAO6C,OACrB,CACE4hB,aACAw2D,iBACAxF,aACAyF,iBACAt1E,YACAy/D,mBACA7wC,WAAYwnE,EACZhmB,OAAQ18E,KAAK6pF,uBAAuB1+D,GACpC02D,gBAAiB,CAACxiD,EAAGjoB,EAAGC,EAAG6jB,IACzBl7B,KAAKiqF,QAAQ5qD,EAAGjoB,EAAGC,EAAG6jB,EAAY/P,IAEtCnrB,KAAKupF,aAEDwE,EAAU,IAAI6U,GAAel4F,GAEnC,OADAqjF,EAAQxmF,IAAMvH,KAAK+M,SACZghF,CACR,CAUD,OAAA9D,CAAQ5qD,EAAGjoB,EAAGC,EAAG6jB,EAAYhc,GAC3B,MAAMqM,EAAmBvrB,KAAK0uB,gBAC9B,GACEnD,GACArM,IACCmM,GAAWE,EAAkBrM,GAE9B,OAAOlf,KAAKyiG,eAAepjE,EAAGjoB,EAAGC,EAAG6H,EAAYqM,GAGlD,MAAM9X,EAAOzT,KAAKmjF,YAAY9jD,GACxBsqD,EAAepf,GAAUlrC,EAAGjoB,EAAGC,GACrC,GAAIrX,KAAKopF,UAAUxf,YAAY+f,GAC7B,OAAO3pF,KAAKopF,UAAUjgF,IAAIwgF,GAG5B,MAAMkZ,EAAe7iG,KAAKoT,QAQ1B,MAAM1I,EAAUhE,OAAO6C,OACrB,CACE+C,UAAW,CAAC+yB,EAAGjoB,EAAGC,GAClBhE,OATJ,WACE,OAAOlP,GAAU,WACf,OAAO0+F,EAAaxjE,EAAGjoB,EAAGC,EAClC,GACK,EAMG5D,KAAMA,GAERzT,KAAKupF,aAGDt8E,EAAO,IAAIkzF,GAASz1F,GAK1B,OAJAuC,EAAK1F,IAAMvH,KAAK+M,SAChBE,EAAK3H,iBAAiBwB,EAAkB9G,KAAK2hE,mBAE7C3hE,KAAKopF,UAAUt/E,IAAI6/E,EAAc18E,GAC1BA,CACR,CAMD,iBAAA00D,CAAkB97D,GAChB,MAAMoH,EAAoDpH,EAAY,OAChE4mF,EAAMhkF,EAAOwE,GACby/E,EAAYz/E,EAAKC,WACvB,IAAInN,EACA2sF,GAAa7gF,GACf7L,KAAKosF,iBAAiBK,IAAO,EAC7B1sF,EAAOyjF,IACEiJ,KAAOzsF,KAAKosF,0BACdpsF,KAAKosF,iBAAiBK,GAC7B1sF,EACE2sF,GAAa7gF,EACT23E,GACAkJ,GAAa7gF,EACb23E,QACAh9E,GAEJzG,GACFC,KAAK4F,cAAc,IAAIijF,GAAgB9oF,EAAMkN,GAEhD,CAMD,wBAAA+8E,CAAyB9qE,GACvB,MAAMwuE,EAAW1tF,KAAK0uB,gBACtB,GAAI1uB,KAAK2hB,YAAc+rE,GAAYriE,GAAWqiE,EAAUxuE,IACtD,OAAOlf,KAAK2hB,SAGd,MAAMgsE,EAAUllF,EAAOyW,GAKvB,OAJMyuE,KAAW3tF,KAAKsiG,yBACpBtiG,KAAKsiG,uBAAuB3U,GAC1B3D,GAAyB9qE,IAEtBlf,KAAKsiG,uBAAuB3U,EACpC,CAcD,wBAAAO,CAAyBhvE,EAAYivE,GACnC,MAAMC,EAAO1/D,GAAcxP,GAC3B,GAAIkvE,EAAM,CACR,MAAMT,EAAUllF,EAAO2lF,GACjBT,KAAW3tF,KAAKsiG,yBACpBtiG,KAAKsiG,uBAAuB3U,GAAWQ,EAE1C,CACF,CAMD,yBAAA1E,CAA0BvqE,GACxB,MAAMwuE,EAAW1tF,KAAK0uB,gBACtB,IAAKg/D,GAAYriE,GAAWqiE,EAAUxuE,GACpC,OAAOlf,KAAKopF,UAGd,MAAMuE,EAAUllF,EAAOyW,GAIvB,OAHMyuE,KAAW3tF,KAAKuiG,0BACpBviG,KAAKuiG,wBAAwB5U,GAAW,IAAItE,GAAU,KAEjDrpF,KAAKuiG,wBAAwB5U,EACrC,CAMD,WAAAjkB,CAAYxqD,EAAY+mD,GACtB,MAAMunB,EAAgBxtF,KAAKypF,0BAA0BvqE,GAErDlf,KAAKopF,UAAU1f,YACb1pE,KAAKopF,WAAaoE,EAAgBvnB,EAAY,CAAE,GAElD,IAAK,MAAM14D,KAAMvN,KAAKuiG,wBAAyB,CAC7C,MAAMnZ,EAAYppF,KAAKuiG,wBAAwBh1F,GAC/C67E,EAAU1f,YAAY0f,GAAaoE,EAAgBvnB,EAAY,CAAE,EAClE,CACF,CAED,KAAAthE,GACEM,MAAMN,QACN,IAAK,MAAM4I,KAAMvN,KAAKuiG,wBACpBviG,KAAKuiG,wBAAwBh1F,GAAI5I,OAEpC,GChJH,IAAAm+F,GAlOA,cAA0B/mE,GAWxB,WAAAj8B,CACEqrB,EACAgxD,EACAI,EACArpC,EACAhY,EACA6nE,EACAn2F,GAEA,IAAI6xE,EAAkBtzD,EAAW/L,YAC7Bq/D,GAAmBtzD,EAAW9L,aAChCo/D,EAAkBA,EAAgB36E,QAClC26E,EAAgB,IAAMjkE,IACtBikE,EAAgB,GAAKjkE,KAEvB,IAAI+nE,EAAkBpG,EAAW/8D,YAC7BmjE,GAAmBpG,EAAW98D,aAChCkjE,EAAkBA,EAAgBz+E,QAClCy+E,EAAgB,IAAM/nE,IACtB+nE,EAAgB,GAAK/nE,KAGvB,MAAMgoE,EAAsBD,EACxB5kE,GAAgB4+D,EAAcgG,GAC9BhG,EAGEtpC,EAAmBipC,GACvB/wD,EACAgxD,EAHmB9/D,GAAUmmE,GAK7BtvC,GAKIspC,EAAgB,IAAIoG,GACxBz3D,EACAgxD,EACAqG,EACA/D,EAN6BF,GAO7BtrC,EACAC,GAGIrmB,EAAe2vD,EAAciF,wBAC7BuhB,EAAcl+F,GAAQ+nB,GACxB,KACAk2E,EAAiBl2E,EAAcomB,EAAkB/X,GAC/C3uB,EAAQy2F,EAAc9oE,GAAkBA,GACxC+oE,EAAmBD,EAAcA,EAAYznE,gBAAkB,EAErEt2B,MAAMs3E,EAAcrpC,EAAkB+vD,EAAkB12F,GAMxDvM,KAAK6+E,YAAc1C,EAMnBn8E,KAAKi/E,iBAAmBR,EAMxBz+E,KAAK2iF,eAAiBnG,EAMtBx8E,KAAK+zC,kBAAoBb,EAMzBlzC,KAAKkjG,cAAgB3mB,EAMrBv8E,KAAKmjG,aAAeH,EAMpBhjG,KAAKojG,kBAAoBH,EAMzBjjG,KAAKgkF,aAAep3E,EAMpB5M,KAAKg8B,QAAU,KAMfh8B,KAAKqjG,mBAAqB,IAC3B,CAKD,eAAA5iG,GACMT,KAAKuM,OAAS2tB,IAChBl6B,KAAKsjG,kBAEPr+F,MAAMxE,iBACP,CAKD,QAAA66B,GACE,OAAOt7B,KAAKg8B,OACb,CAKD,aAAAtN,GACE,OAAO1uB,KAAK6+E,WACb,CAKD,UAAAqE,GACE,MAAMt8B,EAAc5mD,KAAKmjG,aAAaj2F,WACtC,GAAI05C,GAAe1sB,GAAmB,CACpC,MAAM1qB,EAAQ2M,GAASnc,KAAKkjG,eAAiBljG,KAAK+zC,kBAC5CtkC,EAAS2M,GAAUpc,KAAKkjG,eAAiBljG,KAAK+zC,kBACpD/zC,KAAKg8B,QAAUonD,GACb5zE,EACAC,EACAzP,KAAKojG,kBACL9kB,GAAmBt+E,KAAKmjG,aAAa3nE,iBACrCx7B,KAAKi/E,iBACLj/E,KAAK+zC,kBACL/zC,KAAKkjG,cACLljG,KAAK2iF,eACL,CACE,CACEppE,OAAQvZ,KAAKmjG,aAAa/jF,YAC1BvM,MAAO7S,KAAKmjG,aAAa7nE,aAG7B,OACA90B,EACAxG,KAAKgkF,cACL,EAEH,CACDhkF,KAAKuM,MAAQq6C,EACb5mD,KAAK6H,SACN,CAKD,IAAAwF,GACE,GAAIrN,KAAKuM,OAAS2tB,GAAiB,CACjCl6B,KAAKuM,MAAQ2tB,GACbl6B,KAAK6H,UAEL,MAAM++C,EAAc5mD,KAAKmjG,aAAaj2F,WAClC05C,GAAe1sB,IAAqB0sB,GAAe1sB,GACrDl6B,KAAKkjF,cAELljF,KAAKqjG,mBAAqBt8F,EACxB/G,KAAKmjG,aACLr8F,GACA,SAAUmQ,GACR,MAAM2vC,EAAc5mD,KAAKmjG,aAAaj2F,WAEpC05C,GAAe1sB,IACf0sB,GAAe1sB,KAEfl6B,KAAKsjG,kBACLtjG,KAAKkjF,aAER,GACDljF,MAEFA,KAAKmjG,aAAa91F,OAErB,CACF,CAKD,eAAAi2F,GACEh8F,EACoDtH,KAAuB,oBAE3EA,KAAKqjG,mBAAqB,IAC3B,GCvPI,MAMME,GAAW,ECYXC,GAMK,iBANLA,GAaG,eAbHA,GAoBK,iBAYX,MAAMC,WAAyB19F,EAKpC,WAAAjG,CAAYC,EAAM8S,GAChB5N,MAAMlF,GAONC,KAAK6S,MAAQA,CACd,EAiRI,SAAS6wF,GAAyB7wF,EAAO8nB,GACI9nB,EAAMyoB,WAAYX,IAAMA,CAC5E,CAUO,SAASgpE,GAAiBpqF,EAAQmD,EAAYwe,EAAY8U,GAC/D,MAAM4zD,EAAkBlnF,EAAawe,EAC/Bze,EAASJ,GAAU9C,GACnBq2B,EAAY3qB,GAAK9I,GAAS5C,GAAUqqF,EAAiBL,IACrD1zD,EAAa5qB,GAAK7I,GAAU7C,GAAUqqF,EAAiBL,IAK7D,OAAO/mF,GAAkBC,EAAQmnF,EAAiB,EAAG,CAHhCh0D,EAAY,EADb3qB,IAAO+qB,EAAQ,GAAKJ,EAAa,EAAG2zD,IAGlC1zD,EAAa,EADd5qB,IAAO+qB,EAAQ,GAAKH,EAAc,EAAG0zD,KAM5D,CAEA,IAAAM,GA5QA,cAA0B9a,GAIxB,WAAAjpF,CAAY4K,GACVzF,MAAM,CACJg5C,aAAcvzC,EAAQuzC,aACtB/+B,WAAYxU,EAAQwU,WACpB3S,MAAO7B,EAAQ6B,MACfK,iBAC0BpG,IAAxBkE,EAAQkC,aAA4BlC,EAAQkC,cAMhD5M,KAAK0H,GAKL1H,KAAKiH,KAKLjH,KAAK2H,GAML3H,KAAKqT,OAAS3I,EAAQ2I,QAAU,KAMhCrT,KAAK00C,kBACqBluC,IAAxBkE,EAAQgmC,YAA4BhmC,EAAQgmC,YAAc,KAM5D1wC,KAAK8jG,kBAAoB,KAMzB9jG,KAAK+jG,qBAAuB,EAM5B/jG,KAAK6S,MAAQ,KAMb7S,KAAKgkG,cAMLhkG,KAAKikG,kBAMLjkG,KAAKkkG,UAAUx5F,EAAQ2I,QAAmC,IAA1B3I,EAAQ2I,OAAOlS,OAM/CnB,KAAKmkG,kBAAoB,IAC1B,CAKD,cAAAxrD,GACE,OAAO34C,KAAK00C,YACb,CAKD,cAAA0vD,CAAe1zD,GACb1wC,KAAK00C,aAAehE,CACrB,CAOD,qBAAA2zD,CAAsB3nF,GACpB,MAAMg0B,EAAc1wC,KAAK24C,iBACzB,GAAIjI,EAAa,CAEfh0B,EAAag0B,EADDlvC,EAAkBkvC,EAAah0B,EAAY,GAExD,CACD,OAAOA,CACR,CASD,QAAA4e,CAAS/hB,EAAQmD,EAAYwe,EAAYhc,GACvC,MAAMqM,EAAmBvrB,KAAK0uB,gBAC9B,IACGnD,IACArM,GACDmM,GAAWE,EAAkBrM,GAM7B,OAJIqM,IACFrM,EAAaqM,GAGRvrB,KAAKskG,iBAAiB/qF,EAAQmD,EAAYwe,EAAYhc,GAE/D,GAAIlf,KAAK8jG,kBAAmB,CAC1B,GACE9jG,KAAK+jG,sBAAwB/jG,KAAK8H,eAClCujB,GAAWrrB,KAAK8jG,kBAAkBp1E,gBAAiBxP,IACnDlf,KAAK8jG,kBAAkBtoE,iBAAmB9e,GAC1Cna,GAAOvC,KAAK8jG,kBAAkB1kF,YAAa7F,GAE3C,OAAOvZ,KAAK8jG,kBAEd9jG,KAAK8jG,kBAAkBtjG,UACvBR,KAAK8jG,kBAAoB,IAC1B,CAcD,OAZA9jG,KAAK8jG,kBAAoB,IAAIS,GAC3Bh5E,EACArM,EACA3F,EACAmD,EACAwe,GACA,CAAC3hB,EAAQmD,EAAYwe,IACnBl7B,KAAKskG,iBAAiB/qF,EAAQmD,EAAYwe,EAAY3P,IACxDvrB,KAAKokF,kBAEPpkF,KAAK+jG,qBAAuB/jG,KAAK8H,cAE1B9H,KAAK8jG,iBACb,CAWD,gBAAAQ,CAAiB/qF,EAAQmD,EAAYwe,EAAYhc,GAC/C,GAAIlf,KAAKqT,OAAQ,CACf,MAAMmxF,EAAgBb,GAAiBpqF,EAAQmD,EAAYwe,EAAY,GACjEO,EAAoBz7B,KAAKqkG,sBAAsB3nF,GACrD,GACE1c,KAAK6S,QACJ7S,KAAKkkG,SACHlkG,KAAKmkG,oBAAsBjlF,IACxBlf,KAAKgkG,eACLjqF,GAAe/Z,KAAKgkG,cAAeQ,IACnCzqF,GAAe/Z,KAAK6S,MAAMuM,YAAaolF,MACvCxkG,KAAKikG,mBACL3lB,GAAmBt+E,KAAKikG,qBACtBxoE,GACF6iD,GAAmBt+E,KAAK6S,MAAM2oB,mBAC5BC,IAER,OAAOz7B,KAAK6S,MAEd7S,KAAKmkG,kBAAoBjlF,EACzBlf,KAAKgkG,cAAgBQ,EACrBxkG,KAAKikG,kBAAoBxoE,EACzBz7B,KAAK6S,MAAQ,IAAIkpB,GACfyoE,EACA/oE,EACAP,EACAl7B,KAAKqT,QAEPrT,KAAK6S,MAAMvN,iBACTwB,EACA9G,KAAKykG,kBAAkBv9F,KAAKlH,MAE/B,CACD,OAAOA,KAAK6S,KACb,CAOD,iBAAA4xF,CAAkB5+F,GAChB,MAAMgN,EAAsDhN,EAAY,OACxE,IAAI9F,EACJ,OAAQ8S,EAAM3F,YACZ,KAAKgtB,GACHl6B,KAAKkkE,SAAU,EACfnkE,EAAOyjG,GACP,MACF,KAAKtpE,GACHl6B,KAAKkkE,SAAU,EACfnkE,EAAOyjG,GACP,MACF,KAAKtpE,GACHl6B,KAAKkkE,SAAU,EACfnkE,EAAOyjG,GACP,MACF,QACE,OAEAxjG,KAAKyG,YAAY1G,IACnBC,KAAK4F,cAAc,IAAI69F,GAAiB1jG,EAAM8S,GAEjD,GCpUI,SAAS6xF,GAAaC,EAAKpU,GAEhC,MAAMqU,EAAY,GAElBl+F,OAAOC,KAAK4pF,GAAQrlF,SAAQ,SAAUoZ,GAClB,OAAdisE,EAAOjsE,SAA6B9d,IAAd+pF,EAAOjsE,IAC/BsgF,EAAUj/F,KAAK2e,EAAI,IAAMugF,mBAAmBtU,EAAOjsE,IAEzD,IACE,MAAMwgF,EAAKF,EAAU/rF,KAAK,KAK1B,OAHA8rF,EAAMA,EAAIrhF,QAAQ,QAAS,KAE3BqhF,GAAOA,EAAIj/F,SAAS,KAAO,IAAM,KACpBo/F,CACf,CCNO,SAASC,GACdC,EACAzrF,EACAmD,EACAwe,EACAhc,EACAqxE,GAKA,MAAM0U,EAAO/lF,EACVgC,UACAyE,MAAM,aACN1a,MAEG24F,EAAkBlnF,EAAawe,EAE/B+7C,EAAY,CAChBjyD,GAAM7I,GAAS5C,GAAUqqF,EAAiBL,IAC1Cv+E,GAAM5I,GAAU7C,GAAUqqF,EAAiBL,KAG7ChT,EAAa,KAAItZ,EAAU,GAAK,IAAMA,EAAU,GAChDsZ,EAAa,KAAIh3E,EAAOV,KAAK,KAC7B03E,EAAe,OAAI0U,EACnB1U,EAAgB,QAAI0U,EACpB1U,EAAY,IAAIvkF,KAAKgZ,MACnBurE,EAAY,IAAIA,EAAY,IAAIr1D,EAAa,GAAKA,GAGpD,MAAMgqE,EAAcF,EACjB1hF,QAAQ,gBAAiB,oBACzBA,QAAQ,kBAAmB,2BAC9B,GAAI4hF,GAAeF,EACjB,MAAM,IAAIz8F,MAAM,6CAElB,OAAOm8F,GAAaQ,EAAa3U,EACnC,CAiCO,SAAS4U,GAAaz6F,GAC3B,MAAM2C,EAAO3C,EAAQ2C,KAAO3C,EAAQ2C,KAAO0B,GACrCmQ,EAAawP,GAAchkB,EAAQwU,YAAc,aAGvD,OAAO,SAAU3F,EAAQmD,EAAYwe,GACnCA,EAAaxwB,EAAQgkF,MAAQxzD,EAAa,EAE1C,MAAMq1D,EAAS,CACb6U,EAAK,QACLC,OAAU,QACVC,aAAe,GAEjB5+F,OAAO6C,OAAOgnF,EAAQ7lF,EAAQ6lF,QAE9Bh3E,EAASoqF,GAAiBpqF,EAAQmD,EAAYwe,EAAYxwB,EAAQslC,OAElE,MAAMrV,EAAMoqE,GACVr6F,EAAQmiE,IACRtzD,EACAmD,EACAwe,EACAhc,EACAqxE,GAGI19E,EAAQ,IAAI/D,MAKlB,OAJ4B,OAAxBpE,EAAQyxB,cACVtpB,EAAMspB,YAAczxB,EAAQyxB,aAGvB9uB,EAAKwF,EAAO8nB,GAAK7mB,MAAMjB,IAE5B,MAAM6J,EAAcP,GAAS5C,GAAU1G,EAAMrD,MAAS0rB,EACtD,MAAO,CAACroB,QAAO0G,SAAQmD,aAAYwe,aAAW,GAEpD,CACA,CC+FA,IAAAqqE,GA/KA,cAA8BC,GAI5B,WAAA1lG,CAAY4K,GAGVzF,MAAM,CACJg5C,cAHFvzC,EAAUA,GAAoB,IAGNuzC,aACtBrxC,YAAalC,EAAQkC,YACrBsS,WAAYxU,EAAQwU,WACpBwxB,YAAahmC,EAAQgmC,cAOvB1wC,KAAKq8B,kBACqB71B,IAAxBkE,EAAQyxB,YAA4BzxB,EAAQyxB,YAAc,KAM5Dn8B,KAAK2uF,YAA2BnoF,IAAlBkE,EAAQgkF,OAAsBhkF,EAAQgkF,MAMpD1uF,KAAKo7F,KAAO1wF,EAAQmiE,IAMpB7sE,KAAKylG,wBAC2Bj/F,IAA9BkE,EAAQg7F,kBACJh7F,EAAQg7F,kBACRhC,GAMN1jG,KAAK2lG,QAAUj7F,EAAQ6lF,QAAU,CAAA,EAMjCvwF,KAAKq7B,OAAS,KAMdr7B,KAAK4lG,WAAa,CAAC,EAAG,GAMtB5lG,KAAK6lG,kBAAoB,EAMzB7lG,KAAK8lG,YAA2Bt/F,IAAlBkE,EAAQslC,MAAsBtlC,EAAQslC,MAAQ,IAM5DhwC,KAAK+lG,kBAAoB,IAC1B,CAQD,SAAAC,GACE,OAAOhmG,KAAK2lG,OACb,CASD,gBAAArB,CAAiB/qF,EAAQmD,EAAYwe,EAAYhc,GAC/C,YAAkB1Y,IAAdxG,KAAKo7F,KACA,MAEJp7F,KAAKqT,QAAUrT,KAAK+lG,oBAAsB7mF,IAE7Clf,KAAK+lG,kBAAoB7mF,EACzBlf,KAAKqT,OAAS8xF,GAAa,CACzBhpE,YAAan8B,KAAKq8B,aAClBk0D,OAAQvwF,KAAK2lG,QACbzmF,WAAYA,EACZwvE,MAAO1uF,KAAK2uF,OACZ9hB,IAAK7sE,KAAKo7F,KACVprD,MAAOhwC,KAAK8lG,OACZz4F,KAAM,CAACwF,EAAO8nB,KACZ36B,KAAK6S,MAAM+oB,SAAS/oB,GACpB7S,KAAKylG,mBAAmBzlG,KAAK6S,MAAO8nB,GAC7B5rB,GAAO8D,OAKb5N,MAAMq/F,iBAAiB/qF,EAAQmD,EAAYwe,EAAYhc,GAC/D,CAOD,oBAAA+mF,GACE,OAAOjmG,KAAKylG,kBACb,CAOD,MAAApH,GACE,OAAOr+F,KAAKo7F,IACb,CAOD,oBAAA8K,CAAqBR,GACnB1lG,KAAKq7B,OAAS,KACdr7B,KAAKylG,mBAAqBC,EAC1B1lG,KAAK6H,SACN,CAOD,MAAAskF,CAAOtf,GACDA,GAAO7sE,KAAKo7F,OACdp7F,KAAKo7F,KAAOvuB,EACZ7sE,KAAKq7B,OAAS,KACdr7B,KAAK6H,UAER,CAOD,YAAAs+F,CAAa5V,GACX7pF,OAAO6C,OAAOvJ,KAAK2lG,QAASpV,GAC5BvwF,KAAKq7B,OAAS,KACdr7B,KAAK6H,SACN,GCnFH,IAAAu+F,GArFA,cAAgCZ,GAI9B,WAAA1lG,CAAY4K,GAGVzF,MAAM,CACJg5C,cAHFvzC,EAAUA,GAAoB,IAGNuzC,aACtBrxC,YAAalC,EAAQkC,YACrBsS,WAAYxU,EAAQwU,WACpBwxB,YAAahmC,EAAQgmC,YACrBnkC,MAAO7B,EAAQ6B,QAOjBvM,KAAKqmG,gBAAkB37F,EAAQ47F,eAM/BtmG,KAAKg8B,QAAU,KAMfh8B,KAAK6lG,kBAAoB,EAMzB7lG,KAAK8lG,YAA2Bt/F,IAAlBkE,EAAQslC,MAAsBtlC,EAAQslC,MAAQ,GAC7D,CASD,gBAAAs0D,CAAiB/qF,EAAQmD,EAAYwe,EAAYhc,GAC/CxC,EAAa1c,KAAKqkG,sBAAsB3nF,GAExC,IAAI9M,EAAS5P,KAAKg8B,QAClB,GACEpsB,GACA5P,KAAK6lG,mBAAqB7lG,KAAK8H,eAC/B8H,EAAO4rB,iBAAmB9e,GAC1B9M,EAAO2rB,iBAAmBL,GAC1BnhB,GAAenK,EAAOwP,YAAa7F,GAEnC,OAAO3J,EAITmO,GADAxE,EAASA,EAAOzV,QACQ9D,KAAK8lG,QAC7B,MAEMryF,EAAO,CAFC0I,GAAS5C,GAAUmD,EAEXwe,EADP9e,GAAU7C,GAAUmD,EACQwe,GAErCqrE,EAAgBvmG,KAAKqmG,gBAAgBtiG,KACzC/D,KACAuZ,EACAmD,EACAwe,EACAznB,EACAyL,GAQF,OANIqnF,IACF32F,EAAS,IAAI42F,GAAYjtF,EAAQmD,EAAYwe,EAAYqrE,IAE3DvmG,KAAKg8B,QAAUpsB,EACf5P,KAAK6lG,kBAAoB7lG,KAAK8H,cAEvB8H,CACR,GC5GI,SAASu1F,GAAaz6F,GAC3B,MAAM2C,EAAO3C,EAAQ2C,MAAQ0B,GACvBwK,EAAS7O,EAAQ+7F,YACjB5zF,EAAQ,IAAI/D,MAKlB,OAJ4B,OAAxBpE,EAAQyxB,cACVtpB,EAAMspB,YAAczxB,EAAQyxB,aAGvB,IACL9uB,EAAKwF,EAAOnI,EAAQmiE,KAAK/4D,MAAMjB,IAC7B,MAAM6zF,EAAcvqF,GAAS5C,GAAU1G,EAAMrD,MACvCm3F,EAAcvqF,GAAU7C,GAAU1G,EAAMpD,OAG9C,MAAO,CAACoD,QAAO0G,SAAQmD,WADrBgqF,IAAgBC,EAAc,CAACD,EAAaC,GAAeA,EAC1BzrE,WAAY,EAAE,GAEvD,CCgFA,IAAA0rE,GA5FA,cAAqBpB,GAInB,WAAA1lG,CAAY4K,GACV,MAAMyxB,OACoB31B,IAAxBkE,EAAQyxB,YAA4BzxB,EAAQyxB,YAAc,KAEJupE,OACtBl/F,IAA9BkE,EAAQg7F,kBACJh7F,EAAQg7F,kBACRhC,GAERz+F,MAAM,CACJg5C,aAAcvzC,EAAQuzC,aACtBrxC,YAAalC,EAAQkC,YACrBsS,WAAYwP,GAAchkB,EAAQwU,cAOpClf,KAAKo7F,KAAO1wF,EAAQmiE,IAMpB7sE,KAAK6mG,aAAen8F,EAAQ+7F,YAM5BzmG,KAAK6S,MAAQ,KAEb7S,KAAK6S,MAAQ,IAAIkpB,GACf/7B,KAAK6mG,kBACLrgG,EACA,EACA2+F,GAAa,CACXt4B,IAAKniE,EAAQmiE,IACb45B,YAAa/7F,EAAQ+7F,YACrBtqE,cACA9uB,KAAM,CAACwF,EAAO8nB,KACZ36B,KAAK6S,MAAM+oB,SAAS/oB,GACpB6yF,EAAkB1lG,KAAK6S,MAAO8nB,GACvB5rB,GAAO8D,OAKpB7S,KAAK6S,MAAMvN,iBACTwB,EACA9G,KAAKykG,kBAAkBv9F,KAAKlH,MAE/B,CAOD,cAAA8mG,GACE,OAAO9mG,KAAK6mG,YACb,CASD,gBAAAvC,CAAiB/qF,EAAQmD,EAAYwe,EAAYhc,GAC/C,OAAIrB,GAAWtE,EAAQvZ,KAAK6S,MAAMuM,aACzBpf,KAAK6S,MAEP,IACR,CAOD,MAAAwrF,GACE,OAAOr+F,KAAKo7F,IACb,GCvGI,MAAM2L,GAAkB,QAMzBC,GAA4B,CAAC,IAAK,KAoBjC,SAASjC,GAAcC,EAASzrF,EAAQ9F,EAAMyL,EAAYqxE,GAC/DA,EAAc,MAAI98E,EAAK,GACvB88E,EAAe,OAAI98E,EAAK,GAExB,MAAMgN,EAAkBvB,EAAWoC,qBACnC,IAAIyvE,EACJ,MAAMkW,EAAM1hF,GAAgBgrE,EAAgB,QAAG,QAAU,EASzD,OARAA,EAAO0W,EAAM,MAAQ,OAAS/nF,EAAWgC,UAEvC6vE,EADEkW,GAAuC,MAAhCxmF,EAAgBqnE,OAAO,EAAG,GAC5B,CAACvuE,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,IAEzCA,EAETg3E,EAAa,KAAIQ,EAAKl4E,KAAK,KAEpB6rF,GAAY,EAAkCnU,EACvD,CAYO,SAAS2W,GACd3tF,EACAmD,EACAwe,EACAhc,EACA2tD,EACA0jB,EACA4W,GAEA5W,EAAS7pF,OAAO6C,OAAO,CAAC69F,QAAS,UAAW7W,GAE5C,MAAMqT,EAAkBlnF,EAAawe,EAE/B+7C,EAAY,CAChBjyD,GAAM7I,GAAS5C,GAAUqqF,EAAiBL,IAC1Cv+E,GAAM5I,GAAU7C,GAAUqqF,EAAiBL,KAG7C,GAAkB,GAAdroE,EACF,OAAQisE,GACN,IAAK,YACH,MAAME,EAAO,GAAKnsE,EAAa,GAAO,EAClC,mBAAoBq1D,EACtBA,EAAuB,gBAAK,QAAU8W,EAEtC9W,EAAuB,eAAI,OAAS8W,EAEtC,MACF,IAAK,YACH9W,EAAuB,eAAI,GAAKr1D,EAChC,MACF,IAAK,iBACL,IAAK,OACHq1D,EAAY,IAAI,GAAKr1D,EACrB,MACF,QACE,MAAM,IAAI3yB,MAAM,mCAKtB,OADYw8F,GAAcl4B,EAAKtzD,EAAQ09D,EAAW/3D,EAAYqxE,EAEhE,CAOO,SAAS+W,GAAiB/W,EAAQgX,GACvC,OAAO7gG,OAAO6C,OACZ,CACE69F,QAAWG,EACXC,QAAW,MACXC,QAAWV,GACX1B,OAAU,YACVqC,OAAU,GACVpC,aAAe,GAEjB/U,EAEJ,CA+BO,SAAS4U,GAAaz6F,GAC3B,MAAMgkF,OAA0BloF,IAAlBkE,EAAQgkF,OAA6BhkF,EAAQgkF,MACrDxvE,EAAawP,GAAchkB,EAAQwU,YAAc,aACjD8wB,EAAQtlC,EAAQslC,OAAS,IACzB3iC,EAAO3C,EAAQ2C,MAAQ0B,GAK7B,MAAO,CAACwK,EAAQmD,EAAYwe,KAC1B3hB,EAASoqF,GAAiBpqF,EAAQmD,EAAYwe,EAAY8U,GACxC,GAAd9U,GAAqBwzD,QAAgCloF,IAAvBkE,EAAQy8F,aACxCjsE,EAAa,GAEf,MAAMP,EAAMusE,GACV3tF,EACAmD,EACAwe,EACAhc,EACAxU,EAAQmiE,IACRy6B,GAAiB58F,EAAQ6lF,OAAQ,UACjC7lF,EAAQy8F,YAEJt0F,EAAQ,IAAI/D,MAIlB,OAH4B,OAAxBpE,EAAQyxB,cACVtpB,EAAMspB,YAAczxB,EAAQyxB,aAEvB9uB,EAAKwF,EAAO8nB,GAAK7mB,MAAMjB,IAAW,CAACA,QAAO0G,SAAQ2hB,gBAAa,CAE1E,CAcO,SAASysE,GAAkBj9F,EAASyM,EAAYuF,GACrD,QAAoBlW,IAAhBkE,EAAQmiE,IACV,OAGF,MAAM+6B,EAAgBl5E,GAAchkB,EAAQwU,YAAc,aAEpD3F,EAASiD,GACbrF,EACAuF,EACA,EACAsqF,IAGIa,EAAa,CACjBC,aAAgBp9F,EAAQ6lF,OAAe,OACvCwX,YAAe,oBAEjBrhG,OAAO6C,OACLs+F,EACAP,GAAiB58F,EAAQ6lF,OAAQ,kBACjC7lF,EAAQ6lF,QAGV,MAAMn5E,EAAImI,IAAOpI,EAAW,GAAKoC,EAAO,IAAMmD,EAAY6mF,IACpDlsF,EAAIkI,IAAOhG,EAAO,GAAKpC,EAAW,IAAMuF,EAAY6mF,IACpD0D,EAAM1hF,GAAgBsiF,EAAoB,QAAG,QAAU,EAI7D,OAHAA,EAAWZ,EAAM,IAAM,KAAO7vF,EAC9BywF,EAAWZ,EAAM,IAAM,KAAO5vF,EAEvB0tF,GACLr6F,EAAQmiE,IACRtzD,EACAytF,GACAY,EACAC,EAEJ,CAaO,SAASG,GAAat9F,EAASgS,GACpC,QAAoBlW,IAAhBkE,EAAQmiE,IACV,OAGF,MAAMg7B,EAAa,CACjBL,QAAW,MACXC,QAAWV,GACXK,QAAW,mBACX/B,OAAU,aAGZ,QAAuB7+F,IAAnBkE,EAAQ6lF,aAAoD/pF,IAA5BkE,EAAQ6lF,OAAc,MAAiB,CACzE,MAAM1pC,EAASn8C,EAAQ6lF,OAAO0X,OAE9B,MADuB5lG,MAAMC,QAAQukD,IAA6B,IAAlBA,EAAO1lD,QAErD,OAEF0mG,EAAkB,MAAIhhD,CACvB,CAED,QAAmBrgD,IAAfkW,EAA0B,CAC5B,MAAMwrF,EACJx5E,GAAchkB,EAAQwU,YAAc,aAAakC,oBAAsB,EACnEs/E,EAAY,MAClBmH,EAAkB,MAAKnrF,EAAawrF,EAAOxH,CAC5C,CAID,OAFAh6F,OAAO6C,OAAOs+F,EAAYn9F,EAAQ6lF,QAE3BmU,GAAah6F,EAAQmiE,IAAKg7B,EACnC,CCLA,IAAAM,GA/OA,cAAuB3C,GAIrB,WAAA1lG,CAAY4K,GAGVzF,MAAM,CACJg5C,cAHFvzC,EAAUA,GAAoB,IAGNuzC,aACtBrxC,YAAalC,EAAQkC,YACrBsS,WAAYxU,EAAQwU,WACpBwxB,YAAahmC,EAAQgmC,cAOvB1wC,KAAKq8B,kBACqB71B,IAAxBkE,EAAQyxB,YAA4BzxB,EAAQyxB,YAAc,KAM5Dn8B,KAAKo7F,KAAO1wF,EAAQmiE,IAMpB7sE,KAAKylG,wBAC2Bj/F,IAA9BkE,EAAQg7F,kBACJh7F,EAAQg7F,kBACRhC,GAMN1jG,KAAK2lG,QAAUj7F,EAAQ6lF,OAMvBvwF,KAAKooG,YAAc19F,EAAQy8F,WAM3BnnG,KAAK2uF,YAA2BnoF,IAAlBkE,EAAQgkF,OAAsBhkF,EAAQgkF,MAMpD1uF,KAAK6lG,kBAAoB,EAMzB7lG,KAAK8lG,YAA2Bt/F,IAAlBkE,EAAQslC,MAAsBtlC,EAAQslC,MAAQ,IAM5DhwC,KAAK+lG,kBAAoB,IAC1B,CAgBD,iBAAA4B,CAAkBxwF,EAAYuF,EAAYwC,EAAYqxE,GACpD,MAAMqX,EAAgBl5E,GAAcxP,GAC9BmpF,EAAsBroG,KAAK0uB,gBAE7B25E,GAAuBA,IAAwBT,IACjDlrF,EAAaw/D,GACXmsB,EACAT,EACAzwF,EACAuF,GAEFvF,EAAapB,GAAUoB,EAAYywF,EAAeS,IAWpD,OAAOV,GARS,CACd96B,IAAK7sE,KAAKo7F,KACV7K,OAAQ,IACHvwF,KAAK2lG,WACLpV,GAELrxE,WAAYmpF,GAAuBT,GAEHzwF,EAAYuF,EAC/C,CAgBD,YAAAsrF,CAAatrF,EAAY6zE,GACvB,OAAOyX,GACL,CACEn7B,IAAK7sE,KAAKo7F,KACV7K,OAAQ,IACHvwF,KAAK2lG,WACLpV,IAGP7zE,EAEH,CAQD,SAAAspF,GACE,OAAOhmG,KAAK2lG,OACb,CASD,gBAAArB,CAAiB/qF,EAAQmD,EAAYwe,EAAYhc,GAC/C,YAAkB1Y,IAAdxG,KAAKo7F,KACA,MAEJp7F,KAAKqT,QAAUrT,KAAK+lG,oBAAsB7mF,IAE7Clf,KAAK+lG,kBAAoB7mF,EACzBlf,KAAKqT,OAAS8xF,GAAa,CACzBhpE,YAAan8B,KAAKq8B,aAClBk0D,OAAQvwF,KAAK2lG,QACbzmF,WAAYA,EACZioF,WAAYnnG,KAAKooG,YACjB1Z,MAAO1uF,KAAK2uF,OACZ9hB,IAAK7sE,KAAKo7F,KACVprD,MAAOhwC,KAAK8lG,OACZz4F,KAAM,CAACwF,EAAO8nB,KACZ36B,KAAK6S,MAAM+oB,SAAS/oB,GACpB7S,KAAKylG,mBAAmBzlG,KAAK6S,MAAO8nB,GAC7B5rB,GAAO8D,OAKb5N,MAAMq/F,iBAAiB/qF,EAAQmD,EAAYwe,EAAYhc,GAC/D,CAOD,oBAAA+mF,GACE,OAAOjmG,KAAKylG,kBACb,CAOD,MAAApH,GACE,OAAOr+F,KAAKo7F,IACb,CAOD,oBAAA8K,CAAqBR,GACnB1lG,KAAKylG,mBAAqBC,EAC1B1lG,KAAK6H,SACN,CAOD,MAAAskF,CAAOtf,GACDA,GAAO7sE,KAAKo7F,OACdp7F,KAAKo7F,KAAOvuB,EACZ7sE,KAAKqT,OAAS,KACdrT,KAAK6H,UAER,CAOD,YAAAs+F,CAAa5V,GACX7pF,OAAO6C,OAAOvJ,KAAK2lG,QAASpV,GAC5BvwF,KAAK6H,SACN,CAED,OAAAA,GACE7H,KAAK6S,MAAQ,KACb5N,MAAM4C,SACP,GCnNH,MAAMygG,GAAqB,CACzB,aAAa,EACb,cAAc,EACd,aAAa,EACb,cAAc,GAMVC,GAAwB,CAC5B,sCAAsC,EACtC,wBAAwB,GAwBnB,SAASC,GAAsBC,EAAOC,GAC3C,IAAIC,EACAC,EACJ,IAAK,IAAIhnG,EAAI,EAAGA,EAAI6mG,EAAMtnG,SAAUS,EAAG,CACrC,MAAMinG,EAAOJ,EAAM7mG,GACnB,GAAiB,SAAbinG,EAAKC,IAAgB,CACvB,GAAID,EAAK9oG,OAAS2oG,EAAW,CAC3BC,EAAkBE,EAAK35B,KACvB,KACD,EACGo5B,GAAmBO,EAAK9oG,QAEhB6oG,GAAuBC,EAAK9oG,KAAKgpG,WAAW,aADtDH,EAAsBC,EAAK35B,KAI9B,CACF,CAED,IAAKy5B,EAAiB,CACpB,IAAIC,EAGF,MAAM,IAAIrgG,MAAM,8BAFhBogG,EAAkBC,CAIrB,CAED,OAAOD,CACT,CAQO,SAASK,GACdP,EACAC,EACAO,GAEA,IAAIN,EACAC,EAMJ,MAAMM,EAAa,CAAA,EAEnB,IAAK,IAAItnG,EAAI,EAAGA,EAAI6mG,EAAMtnG,SAAUS,EAAG,CACrC,MAAMinG,EAAOJ,EAAM7mG,GAEnB,GADAsnG,EAAWL,EAAK9oG,MAAQ8oG,EAAK35B,KACZ,SAAb25B,EAAKC,IAAgB,CACvB,GAAID,EAAK9oG,OAAS2oG,EAAW,CAC3BC,EAAkBE,EAAK35B,KACvB,KACD,CACGq5B,GAAsBM,EAAK9oG,QAC7B6oG,EAAsBC,EAAK35B,KAE9B,CACF,CAED,IAAKy5B,GAAmBM,EACtB,IAAK,IAAIrnG,EAAI,EAAGA,EAAIqnG,EAAoB9nG,SAAUS,EAAG,CACnD,MAAMunG,EAAqBF,EAAoBrnG,GAC/C,GAAIsnG,EAAWC,GAAqB,CAClCR,EAAkBO,EAAWC,GAC7B,KACD,CACF,CAGH,IAAKR,EAAiB,CACpB,IAAIC,EAGF,MAAM,IAAIrgG,MAAM,8BAFhBogG,EAAkBC,CAIrB,CAED,OAAOD,CACT,CASA,SAASS,GACPC,EACAC,EACAX,EACAY,GAEA,IAAIrqF,EAAamqF,EAAWnqF,WAC5B,IAAKA,IACHA,EAAawP,GAAc46E,EAAcE,MACpCtqF,GACH,MAAM,IAAI3W,MAAM,oBAAoB+gG,EAAcE,OAGtD,MAAMC,EAA6D,OAAjDvqF,EAAWoC,qBAAqBwmE,OAAO,EAAG,GAEtD4hB,EAAWJ,EAAcK,aAKzBC,EAAe,CAAA,EACrB,IAAK,IAAIhoG,EAAI,EAAGA,EAAI8nG,EAASvoG,SAAUS,EAAG,CACxC,MAAMioG,EAASH,EAAS9nG,GACxBgoG,EAAaC,EAAOt8F,IAAMs8F,CAC3B,CAKD,MAAMC,EAAc,CAAA,EAKd5iB,EAAY,GAElB,GAAIqiB,EACF,IAAK,IAAI3nG,EAAI,EAAGA,EAAI2nG,EAAoBpoG,SAAUS,EAAG,CACnD,MAAMmoG,EAAQR,EAAoB3nG,GAC5B2L,EAAKw8F,EAAMC,WACjB9iB,EAAUvhF,KAAK4H,GACfu8F,EAAYv8F,GAAMw8F,CACnB,MAED,IAAK,IAAInoG,EAAI,EAAGA,EAAI8nG,EAASvoG,SAAUS,EAAG,CACxC,MAAM2L,EAAKm8F,EAAS9nG,GAAG2L,GACvB25E,EAAUvhF,KAAK4H,EAChB,CAGH,MAAMpM,EAAS+lF,EAAU/lF,OACnBsjF,EAAU,IAAIpiF,MAAMlB,GACpBuvC,EAAc,IAAIruC,MAAMlB,GACxBikF,EAAQ,IAAI/iF,MAAMlB,GAClB2jF,EAAY,IAAIziF,MAAMlB,GACtBoY,EAAS,EAAEiB,KAAWA,IAAUA,IAAUA,KAEhD,IAAK,IAAI5Y,EAAI,EAAGA,EAAIT,IAAUS,EAAG,CAC/B,MAAM2L,EAAK25E,EAAUtlF,GACfioG,EAASD,EAAar8F,GACtBo3E,EAASklB,EAAOI,cAEpBxlB,EAAQ7iF,GADN6nG,EACW,CAAC9kB,EAAO,GAAIA,EAAO,IAEnBA,EAEfj0C,EAAY9uC,GAAKioG,EAAOK,SACxB9kB,EAAMxjF,GAAK,CAACioG,EAAOM,YAAaN,EAAOO,cACvCtlB,EAAUljF,GAAK,CAACioG,EAAO3hB,UAAW2hB,EAAO1hB,YACzC,MAAM4hB,EAAQD,EAAYv8F,GAC1B,GAAIw8F,EAAO,CACT,MAAMM,EAAeR,EAAOK,SAAWL,EAAO3hB,UACxC/tE,EAAOsqE,EAAQ7iF,GAAG,GAAKmoG,EAAMO,WAAaD,EAC1ChwF,EAAOoqE,EAAQ7iF,GAAG,IAAMmoG,EAAMQ,WAAa,GAAKF,EAEhDG,EAAgBX,EAAOK,SAAWL,EAAO1hB,WAG/C,IAAI/tE,EACAE,EAHyC,eAA1BuvF,EAAOY,gBAKxBrwF,EAAOqqE,EAAQ7iF,GAAG,GAAKmoG,EAAMW,WAAaF,EAC1ClwF,EAAOmqE,EAAQ7iF,GAAG,IAAMmoG,EAAMY,WAAa,GAAKH,IAEhDpwF,EAAOqqE,EAAQ7iF,GAAG,IAAMmoG,EAAMY,WAAa,GAAKH,EAChDlwF,EAAOmqE,EAAQ7iF,GAAG,GAAKmoG,EAAMW,WAAaF,GAG5CI,GAAiBrxF,EAAQ,CAACY,EAAMC,EAAMC,EAAMC,GAAOf,EACpD,CACF,CAED,MAAMoI,EAAW,IAAIqlE,GAAS,CAC5BvC,QAASA,EACT/zC,YAAaA,EACb00C,MAAOA,EACPN,UAAWA,EACXvrE,OAAQgwF,EAAsBhwF,OAAS/S,IAGnC0J,EAAUm5F,EAAWn5F,QACrBs6B,EAAO6+D,EAAWx8B,IAuCxB,MAAO,CACLg+B,KAAMlpF,EACNmpF,YAAanC,EACboC,YAvCF,SAAyBz+F,EAAW4uB,EAAYhc,GAC9C,IAAK5S,EACH,OAGF,MAAMiB,EAAK25E,EAAU56E,EAAU,IACzBu9F,EAASD,EAAar8F,GACtBy9F,EAAuC,eAA1BnB,EAAOY,eAEpBQ,EAAe,CACnBjB,WAAYz8F,EACZ29F,QAAS5+F,EAAU,GACnB6+F,QAASH,GAAc1+F,EAAU,GAAK,EAAIA,EAAU,IAGtD,GAAIi9F,EAAqB,CACvB,MAAMQ,EAAQD,EAAYD,EAAOt8F,IACjC,GACE09F,EAAaC,QAAUnB,EAAMO,YAC7BW,EAAaC,QAAUnB,EAAMQ,YAC7BU,EAAaE,QAAUpB,EAAMW,YAC7BO,EAAaE,QAAUpB,EAAMY,WAE7B,MAEH,CAEDjkG,OAAO6C,OAAO0hG,EAAc/6F,GAE5B,MAAM28D,EAAM87B,EAAgBrlF,QAAQ,eAAe,SAAUtD,EAAGo1E,GAC9D,OAAO6V,EAAa7V,EAC1B,IAEI,OAAOpmB,GAAWxkC,EAAMqiC,EACzB,EAOH,CA8DO,SAASu+B,GAAe/B,GAC7B,OAAOv6B,GAAQu6B,EAAWx8B,KAAK/4D,MAAK,SAAUu3F,GAC5C,OAzDJ,SAA8BhC,EAAYgC,GACxC,MAAM9B,EAAsB8B,EAAQ9B,oBAEpC,IAAIZ,EAEJ,GAAyB,QAArB0C,EAAQzJ,SACV+G,EAAkBH,GAChB6C,EAAQ5C,MACRY,EAAWX,eAER,IAAyB,WAArB2C,EAAQzJ,SAOjB,MAAM,IAAIr5F,MAAM,sDANhBogG,EAAkBK,GAChBqC,EAAQ5C,MACRY,EAAWX,UACXW,EAAWJ,oBAId,CAED,GAAIoC,EAAQ/B,cACV,OAAOF,GACLC,EACAgC,EAAQ/B,cACRX,EACAY,GAIJ,MAAM+B,EAAoBD,EAAQ5C,MAAM3qD,MACrC+qD,GACc,yDAAbA,EAAKC,MAET,IAAKwC,EACH,MAAM,IAAI/iG,MACR,uFAGJ,MAAMgjG,EAA0BD,EAAkBp8B,KAGlD,OAAOJ,GADKE,GAAWq6B,EAAWx8B,IAAK0+B,IACnBz3F,MAAK,SAAUw1F,GACjC,OAAOF,GACLC,EACAC,EACAX,EACAY,EAEN,GACA,CAQWiC,CAAqBnC,EAAYgC,EAC5C,GACA,CCxTA,IAAAI,GAlDA,cAAyBhd,GAIvB,WAAA3uF,CAAY4K,GACVzF,MAAM,CACJg5C,aAAcvzC,EAAQuzC,aACtB9S,UAAWzgC,EAAQygC,UACnBhP,YAAazxB,EAAQyxB,YACrBvvB,YAAalC,EAAQkC,YACrBsS,WAAYxU,EAAQwU,WACpBouE,2BAA4B5iF,EAAQ4iF,2BACpC/gF,MAAO,UACP6vB,iBAAkB1xB,EAAQ0xB,iBAC1Bnd,WAAyBzY,IAAlBkE,EAAQuU,OAAsBvU,EAAQuU,MAC7CvS,WAAYhC,EAAQgC,aAUtB0+F,GAPmB,CACjBv+B,IAAKniE,EAAQmiE,IACb3tD,WAAYlf,KAAK0uB,gBACjBg6E,UAAWh+F,EAAQg+F,UACnBx4F,QAASxF,EAAQwF,SAAW,OAI3B4D,KAAK9T,KAAK0rG,mBAAmBxkG,KAAKlH,OAClC+T,MAAM/T,KAAK2rG,aAAazkG,KAAKlH,MACjC,CAMD,kBAAA0rG,CAAmBE,GACjB5rG,KAAK2hB,SAAWiqF,EAAYf,KAC5B7qG,KAAK4sF,mBAAmBgf,EAAYb,YAAaa,EAAYd,aAC7D9qG,KAAK8M,SAAS,QACf,CAMD,YAAA6+F,CAAar8F,GACXu8F,GAASv8F,GACTtP,KAAK8M,SAAS,QACf,GC9EI,MAAMg/F,GACX,2GA8EF,IAAAC,GAxCA,cAAkBC,GAIhB,WAAAlsG,CAAY4K,GAGV,IAAIuzC,EAEFA,OAD2Bz3C,KAH7BkE,EAAUA,GAAW,IAGTuzC,aACKvzC,EAAQuzC,aAER,CAAC6tD,IAGlB,MAAM3vE,OACoB31B,IAAxBkE,EAAQyxB,YAA4BzxB,EAAQyxB,YAAc,YAEtD0wC,OACYrmE,IAAhBkE,EAAQmiE,IACJniE,EAAQmiE,IACR,iDAEN5nE,MAAM,CACJg5C,aAAcA,EACd6lC,yBAAyB,EACzB34C,UAAWzgC,EAAQygC,UACnBhP,YAAaA,EACbvvB,YAAalC,EAAQkC,YACrBsgC,aAA6B1mC,IAApBkE,EAAQwiC,QAAwBxiC,EAAQwiC,QAAU,GAC3D+7C,YAA2BziF,IAAnBkE,EAAQu+E,QAAuBv+E,EAAQu+E,OAC/CqE,2BAA4B5iF,EAAQ4iF,2BACpClxD,iBAAkB1xB,EAAQ0xB,iBAC1B1vB,WAAYhC,EAAQgC,WACpBmgE,IAAKA,EACL5tD,MAAOvU,EAAQuU,MACfuqE,WAAY9+E,EAAQ8+E,YAEvB,GCjCH,IAAAyiB,GAVA,cAA6BjtC,GAI3B,WAAAl/D,CAAY4K,GAEVzF,MADAyF,EAAUA,GAAoB,GAE/B,GCmJH,IAAAwhG,GA7LA,cAA4B1kG,EAI1B,WAAA1H,CAAY4tC,GACVzoC,QAMAjF,KAAKikE,OAAQ,EAGbjkE,KAAKmsG,wBAA0BnsG,KAAKosG,mBAAmBllG,KAAKlH,MAM5DA,KAAKqsG,OAAS3+D,EAKd1tC,KAAKssG,uBAAyB,IAC/B,CAQD,WAAAlvD,CAAYC,GACV,OAAO/0C,GACR,CAMD,OAAAsL,CAAQypC,GACN,OAAO,IACR,CAQD,YAAAe,CAAaZ,GACX,OAAOl1C,GACR,CASD,WAAA+1C,CAAYb,EAAYr9C,GACtB,OAAOmI,GACR,CAQD,kBAAAikG,CAAmBC,EAAOr3D,EAAMloC,GACzBu/F,EAAMr3D,KACTq3D,EAAMr3D,GAAQ,IAEhBq3D,EAAMr3D,GAAMloC,EAAKX,UAAUqM,YAAc1L,CAE1C,CAWD,sBAAAw/F,CAAuBxiG,EAAQiV,EAAYstF,GACzC,MAAA,CAMGr3D,EAAMw1B,KACL,MAAMhvD,EAAW3b,KAAKusG,mBAAmBrlG,KAAKlH,KAAMwsG,EAAOr3D,GAC3D,OAAOlrC,EAAOy/E,kBAAkBxqE,EAAYi2B,EAAMw1B,EAAWhvD,EAE/D,CACH,CAWD,0BAAAyjC,CACEjoC,EACAqmC,EACA6B,EACA1jC,EACAmkC,GAGD,CAKD,QAAA4sD,GACE,OAAO1sG,KAAKqsG,MACb,CAMD,kBAAA3mC,GAAuB,CAOvB,kBAAA0mC,CAAmBvmG,GACjB,MAAMgN,EAAsDhN,EAAY,OAEtEgN,EAAM3F,aAAegtB,IACrBrnB,EAAM3F,aAAegtB,IAErBl6B,KAAK2sG,yBAER,CASD,SAAAC,CAAU/5F,GACR,IAAImoE,EAAanoE,EAAM3F,WAQvB,OAPI8tE,GAAc9gD,IAAqB8gD,GAAc9gD,IACnDrnB,EAAMvN,iBAAiBwB,EAAkB9G,KAAKmsG,yBAE5CnxB,GAAc9gD,KAChBrnB,EAAMxF,OACN2tE,EAAanoE,EAAM3F,YAEd8tE,GAAc9gD,EACtB,CAKD,uBAAAyyE,GACE,MAAMj/D,EAAQ1tC,KAAK0sG,WACfh/D,GAASA,EAAMG,cAA2C,UAA3BH,EAAMW,kBACvCX,EAAM7lC,SAET,CAKD,eAAApH,UACST,KAAKqsG,OACZpnG,MAAMxE,iBACP,GC7KI,MAAMiP,GAAa,GAK1B,IAAIm9F,GAAe,KAySnB,IAAAC,GA5RA,cAAkCC,GAIhC,WAAAjtG,CAAY4tC,GACVzoC,MAAMyoC,GAMN1tC,KAAKkmD,UAAY,KAMjBlmD,KAAKosE,mBAQLpsE,KAAKgtG,clK/BA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GkKuCrBhtG,KAAKitG,elKvCA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GkK+CrBjtG,KAAKygD,sBlK/CA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GkKoDrBzgD,KAAKkQ,QAAU,KAKflQ,KAAKktG,iBAAkB,EAMvBltG,KAAKmtG,cAAgB,KAMrBntG,KAAKw9C,WAAa,IACnB,CAQD,YAAAxqC,CAAaH,EAAOu6F,EAAKC,GAMvB,IAAIlrG,EALC0qG,KAnFPA,GAAet9F,GAAsB,EAAG,OAAG/I,EAAW,CACpDsM,oBAAoB,KAqFpB+5F,GAAa18F,UAAU,EAAG,EAAG,EAAG,GAGhC,IACE08F,GAAa95F,UAAUF,EAAOu6F,EAAKC,EAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GACvDlrG,EAAO0qG,GAAa75F,aAAa,EAAG,EAAG,EAAG,GAAG7Q,IAC9C,CAAC,MAAOmC,GAEP,OADAuoG,GAAe,KACR,IACR,CACD,OAAO1qG,CACR,CAMD,aAAAmrC,CAAckQ,GAEZ,IAAI7Q,EADU3sC,KAAK0sG,WACIp/D,gBAIvB,MAH0B,mBAAfX,IACTA,EAAaA,EAAW6Q,EAAWjE,UAAU78B,aAExCiwB,QAAcnmC,CACtB,CAQD,YAAA8mG,CAAantG,EAAQ4V,EAAWw3F,GAC9B,MAAMC,EAAiBxtG,KAAK0sG,WAAWn/D,eACvC,IAAI2Y,EAAWh2C,EACf,GACE/P,GACAA,EAAOitC,YAAcogE,KACnBD,GACCptG,GACCA,EAAOmQ,MAAMi9F,iBACbhrG,EACEmpC,GAAQvrC,EAAOmQ,MAAMi9F,iBACrB7hE,GAAQ6hE,KAEd,CACA,MAAM39F,EAASzP,EAAOstG,kBAClB79F,aAAkBuC,oBACpBjC,EAAUN,EAAOI,WAAW,MAE/B,CAcD,GAbIE,GAAWA,EAAQN,OAAOU,MAAMyF,YAAcA,GAEhD/V,KAAKkmD,UAAY/lD,EACjBH,KAAKkQ,QAAUA,EACflQ,KAAKktG,iBAAkB,GACdltG,KAAKktG,iBAEdltG,KAAKkmD,UAAY,KACjBlmD,KAAKkQ,QAAU,KACflQ,KAAKktG,iBAAkB,GACdltG,KAAKkmD,YACdlmD,KAAKkmD,UAAU51C,MAAMi9F,gBAAkB,OAEpCvtG,KAAKkmD,UAAW,CACnBA,EAAYp2C,SAASC,cAAc,OACnCm2C,EAAU9Y,UAAYogE,EACtB,IAAIl9F,EAAQ41C,EAAU51C,MACtBA,EAAM0oB,SAAW,WACjB1oB,EAAMd,MAAQ,OACdc,EAAMb,OAAS,OACfS,EAAUX,KACV,MAAMK,EAASM,EAAQN,OACvBs2C,EAAUj0C,YAAYrC,GACtBU,EAAQV,EAAOU,MACfA,EAAM0oB,SAAW,WACjB1oB,EAAM+zC,KAAO,IACb/zC,EAAMo9F,gBAAkB,WACxB1tG,KAAKkmD,UAAYA,EACjBlmD,KAAKkQ,QAAUA,CAChB,CAEElQ,KAAKktG,kBACNK,GACCvtG,KAAKkmD,UAAU51C,MAAMi9F,kBAEtBvtG,KAAKkmD,UAAU51C,MAAMi9F,gBAAkBA,EAE1C,CAQD,aAAAI,CAAcz9F,EAASstC,EAAYjkC,GACjC,MAAMq0F,EAAU5xF,GAAWzC,GACrBs0F,EAAW9xF,GAAYxC,GACvBu0F,EAAchyF,GAAevC,GAC7Bw0F,EAAalyF,GAActC,GAEjCmF,GAAe8+B,EAAW0B,2BAA4B0uD,GACtDlvF,GAAe8+B,EAAW0B,2BAA4B2uD,GACtDnvF,GAAe8+B,EAAW0B,2BAA4B4uD,GACtDpvF,GAAe8+B,EAAW0B,2BAA4B6uD,GAEtD,MAAMC,EAAWhuG,KAAKygD,sBACtB/hC,GAAesvF,EAAUJ,GACzBlvF,GAAesvF,EAAUH,GACzBnvF,GAAesvF,EAAUF,GACzBpvF,GAAesvF,EAAUD,GAEzB79F,EAAQq1C,OACRr1C,EAAQ+jE,YACR/jE,EAAQ2jE,OAAO7nE,KAAKgZ,MAAM4oF,EAAQ,IAAK5hG,KAAKgZ,MAAM4oF,EAAQ,KAC1D19F,EAAQ4jE,OAAO9nE,KAAKgZ,MAAM6oF,EAAS,IAAK7hG,KAAKgZ,MAAM6oF,EAAS,KAC5D39F,EAAQ4jE,OAAO9nE,KAAKgZ,MAAM8oF,EAAY,IAAK9hG,KAAKgZ,MAAM8oF,EAAY,KAClE59F,EAAQ4jE,OAAO9nE,KAAKgZ,MAAM+oF,EAAW,IAAK/hG,KAAKgZ,MAAM+oF,EAAW,KAChE79F,EAAQ8rE,MACT,CAQD,oBAAAiyB,CAAqBluG,EAAMmQ,EAASstC,GAClC,MAAM9P,EAAQ1tC,KAAK0sG,WACnB,GAAIh/D,EAAMjnC,YAAY1G,GAAO,CAC3B,MAAM8F,EAAQ,IAAI2gD,GAChBzmD,EACAC,KAAKygD,sBACLjD,EACAttC,GAEFw9B,EAAM9nC,cAAcC,EACrB,CACF,CAOD,SAAAqoG,CAAUh+F,EAASstC,GACjBx9C,KAAKw9C,WAAaA,EAClBx9C,KAAKiuG,qBAAqBl/D,GAA2B7+B,EAASstC,EAC/D,CAOD,UAAA2wD,CAAWj+F,EAASstC,GAClBx9C,KAAKiuG,qBAAqBl/D,GAA4B7+B,EAASstC,EAChE,CAcD,kBAAA4wD,CACE3xF,EACAC,EACAC,EACAue,EACA1rB,EACAC,EACA+lC,GAEA,MAAMx9B,EAAMxI,EAAQ,EACdyI,EAAMxI,EAAS,EACfyI,EAAKgjB,EAAaxe,EAClBvE,GAAMD,EACNE,GAAOqE,EAAO,GAAK+4B,EACnBn9B,GAAOoE,EAAO,GACpB,OAAOsS,GACL/uB,KAAKgtG,cACLh1F,EACAC,EACAC,EACAC,GACCwE,EACDvE,EACAC,EAEH,CAKD,eAAA5X,UACST,KAAKw9C,WACZv4C,MAAMxE,iBACP,GCrDH,IAAA4tG,GAlPA,cAAuCC,GAIrC,WAAAxuG,CAAYyuG,GACVtpG,MAAMspG,GAMNvuG,KAAKq7B,OAAS,IACf,CAKD,QAAAC,GACE,OAAQt7B,KAAKq7B,OAAgBr7B,KAAKq7B,OAAOC,WAAnB,IACvB,CAOD,YAAA8iB,CAAaZ,GACX,MAAMrB,EAAaqB,EAAWI,iBAAiBJ,EAAWmJ,YACpDzrB,EAAasiB,EAAWtiB,WACxBqe,EAAYiE,EAAWjE,UACvBi1D,EAAiBj1D,EAAU78B,WAE3B+xF,EAAczuG,KAAK0sG,WAAWzvD,YAE9B7E,EAAQoF,EAAWonB,UAEzB,IAAI8pC,EAAiBlxD,EAAWjkC,OAQhC,QAP0B/S,IAAtB21C,EAAW5iC,SACbm1F,EAAiB/wF,GACf+wF,EACAtiF,GAAe+vB,EAAW5iC,OAAQggC,EAAUr6B,eAK7Ck5B,EAAMpJ,MACNoJ,EAAMpJ,MACNlqC,GAAQ4pG,GAET,GAAID,EAAa,CACf,MAAMvvF,EAAaq6B,EAAUr6B,WACvBrM,EAAQ47F,EAAYnzE,SACxBozE,EACAF,EACAtzE,EACAhc,GAEErM,IACE7S,KAAK4sG,UAAU/5F,GACjB7S,KAAKq7B,OAASxoB,EACLA,EAAM3F,aAAegtB,KAC9Bl6B,KAAKq7B,OAAS,MAG1B,MACQr7B,KAAKq7B,OAAS,KAIlB,QAASr7B,KAAKq7B,MACf,CAMD,OAAAznB,CAAQypC,GACN,MAAMG,EAAax9C,KAAKw9C,WACxB,IAAKA,EACH,OAAO,KAGT,MAAM9P,EAAQ1tC,KAAK0sG,WACbv1F,EAAauH,GACjB8+B,EAAW2B,2BACX9B,EAAMv5C,SAGFi6C,EAAcrQ,EAAMtuB,YAC1B,GAAI2+B,IACGlkC,GAAmBkkC,EAAa5mC,GACnC,OAAO,KAIX,MAAMsvF,EAAczmG,KAAKq7B,OAAOjc,YAC1Bkb,EAAMt6B,KAAKq7B,OAAOC,WAElBqzE,EAAgBxyF,GAASsqF,GACzB2G,EAAMphG,KAAKuT,MACf+a,EAAI9qB,QAAU2H,EAAW,GAAKsvF,EAAY,IAAMkI,IAElD,GAAIvB,EAAM,GAAKA,GAAO9yE,EAAI9qB,MACxB,OAAO,KAGT,MAAMo/F,EAAiBxyF,GAAUqqF,GAC3B4G,EAAMrhG,KAAKuT,MACf+a,EAAI7qB,SAAWg3F,EAAY,GAAKtvF,EAAW,IAAMy3F,IAEnD,OAAIvB,EAAM,GAAKA,GAAO/yE,EAAI7qB,OACjB,KAGFzP,KAAKgT,aAAasnB,EAAK8yE,EAAKC,EACpC,CAQD,WAAAhvD,CAAYb,EAAYr9C,GACtB,MAAM0S,EAAQ7S,KAAKq7B,OACborE,EAAc5zF,EAAMuM,YACpBwkF,EAAkB/wF,EAAM2oB,iBACvBqzE,EAAkBC,GAAoBzsG,MAAMC,QAAQshG,GACvDA,EACA,CAACA,EAAiBA,GAChB1sB,EAAkBrkE,EAAM0oB,gBACxB4gB,EAAaqB,EAAWI,iBAAiBJ,EAAWmJ,YACpDzrB,EAAasiB,EAAWtiB,WACxBqe,EAAYiE,EAAWjE,UACvBw1D,EAAax1D,EAAU98B,OACvB+xF,EAAiBj1D,EAAU78B,WAC3B8mD,EACHtoC,EAAa2zE,GAAqBL,EAAiBt3B,GAChDzT,EACHvoC,EAAa4zE,GAAqBN,EAAiBt3B,GAEhD39D,EAASikC,EAAWjkC,OACpBmD,EAAa68B,EAAU78B,WACvBC,EAAW48B,EAAU58B,SAErBnN,EAAQxD,KAAKgZ,MAAO7I,GAAS5C,GAAUmD,EAAcwe,GACrDzrB,EAASzD,KAAKgZ,MAAO5I,GAAU7C,GAAUmD,EAAcwe,GAG7DnM,GACE/uB,KAAKitG,eACLzvD,EAAW/pC,KAAK,GAAK,EACrB+pC,EAAW/pC,KAAK,GAAK,EACrB,EAAIynB,EACJ,EAAIA,EACJve,GACCnN,EAAQ,GACRC,EAAS,GAEZ6I,GAAYtY,KAAKygD,sBAAuBzgD,KAAKitG,gBAE7C,MAAM+B,EAAkBC,GAAkBjvG,KAAKitG,gBAE/CjtG,KAAKstG,aAAantG,EAAQ6uG,EAAiBhvG,KAAKstC,cAAckQ,IAE9D,MAAMttC,EAAUlQ,KAAKkQ,QACfN,EAASM,EAAQN,OAEnBA,EAAOJ,OAASA,GAASI,EAAOH,QAAUA,GAC5CG,EAAOJ,MAAQA,EACfI,EAAOH,OAASA,GACNzP,KAAKktG,iBACfh9F,EAAQC,UAAU,EAAG,EAAGX,EAAOC,GAIjC,IAAIy/F,GAAU,EACVryD,GAAS,EACb,GAAIV,EAAW5iC,OAAQ,CACrB,MAAMwkC,EAAc3xB,GAClB+vB,EAAW5iC,OACXggC,EAAUr6B,YAEZ29B,EAASpuB,GAAiBsvB,EAAaP,EAAWjkC,QAClD21F,EAAUryD,IAAW9iC,GAAegkC,EAAaP,EAAWjkC,QACxD21F,GACFlvG,KAAK2tG,cAAcz9F,EAASstC,EAAYO,EAE3C,CAED,MAAMzjB,EAAMznB,EAAMyoB,WAEZvlB,EAAYgZ,GAChB/uB,KAAKgtG,cACLx9F,EAAQ,EACRC,EAAS,EACT+zD,EACAC,EACA,EACCyT,GAAmBuvB,EAAY,GAAKsI,EAAW,IAAOF,EACtD33B,GAAmB63B,EAAW,GAAKtI,EAAY,IAAOqI,GAGzD9uG,KAAKosE,mBAAsB0iC,EAAmB5zE,EAAcg8C,EAE5D,MAAMi4B,EAAK70E,EAAI9qB,MAAQuG,EAAU,GAC3Bq5F,EAAK90E,EAAI7qB,OAASsG,EAAU,GAOlC,GALK/V,KAAK0sG,WAAWzvD,YAAYmnC,mBAC/Bl0E,EAAQ2sE,uBAAwB,GAGlC78E,KAAKkuG,UAAUh+F,EAASstC,GACpBX,GAAUsyD,GAAM,IAAOC,GAAM,GAAK,CACpC,MAAMv3F,EAAK9B,EAAU,GACf+B,EAAK/B,EAAU,GACf62B,EAAUuP,EAAWvP,QAC3B,IAAIyiE,EACY,IAAZziE,IACFyiE,EAAgBn/F,EAAQs1C,YACxBt1C,EAAQs1C,YAAc5Y,GAExB18B,EAAQ6C,UAAUunB,EAAK,EAAG,GAAIA,EAAI9qB,OAAQ8qB,EAAI7qB,OAAQoI,EAAIC,EAAIq3F,EAAIC,GAClD,IAAZxiE,IACF18B,EAAQs1C,YAAc6pD,EAEzB,CAYD,OAXArvG,KAAKmuG,WAAWj+F,EAASstC,GAErB0xD,GACFh/F,EAAQ01C,UAEV11C,EAAQ2sE,uBAAwB,EAE5BmyB,IAAoBp/F,EAAOU,MAAMyF,YACnCnG,EAAOU,MAAMyF,UAAYi5F,GAGpBhvG,KAAKkmD,SACb,GCzNH,IAAAopD,GAhCA,cAAyBC,GAIvB,WAAAzvG,CAAY4K,GACVzF,MAAMyF,EACP,CAED,cAAAg0C,GACE,OAAO,IAAI8wD,GAAyBxvG,KACrC,CAiBD,OAAA4T,CAAQypC,GACN,OAAOp4C,MAAM2O,QAAQypC,EACtB,GCxCYoyD,GACJ,UADIA,GAEe,yBCsJ9B,IAAAC,GAnGA,cAA4B1wC,GAI1B,WAAAl/D,CAAY4K,GACVA,EAAUA,GAAoB,GAE9B,MAAM4xC,EAAc51C,OAAO6C,OAAO,CAAE,EAAEmB,UAE/B4xC,EAAYqzD,eACZrzD,EAAYszD,uBACnB3qG,MAAMq3C,GAKNt8C,KAAK0H,GAKL1H,KAAKiH,KAKLjH,KAAK2H,GAEL3H,KAAK6vG,gBAA+BrpG,IAApBkE,EAAQilG,QAAwBjlG,EAAQilG,QAAU,GAClE3vG,KAAK8vG,+BACgCtpG,IAAnCkE,EAAQklG,wBACJllG,EAAQklG,uBAGf,CAQD,UAAAG,GACE,OAA8B/vG,KAAKmJ,IAAIsmG,GACxC,CAQD,UAAAI,CAAWF,GACT3vG,KAAK8J,IAAI2lG,GAAsBE,EAChC,CAQD,yBAAAK,GACE,OACEhwG,KAAKmJ,IAAIsmG,GAEZ,CAQD,yBAAAK,CAA0BF,GACxB5vG,KAAK8J,IAAI2lG,GAAyCG,EACnD,CAkBD,OAAAh8F,CAAQypC,GACN,OAAOp4C,MAAM2O,QAAQypC,EACtB,GCqmBH,IAAA4yD,GA5tBA,cAAsC3B,GAIpC,WAAAxuG,CAAYowG,GACVjrG,MAAMirG,GAMNlwG,KAAKmwG,eAAgB,EAMrBnwG,KAAKowG,gBAAkB,KAMvBpwG,KAAKqwG,mBAMLrwG,KAAKswG,mBAAqB,KAM1BtwG,KAAKqsE,iBAMLrsE,KAAKuwG,cAAgB,GAMrBvwG,KAAKwwG,WAAY,EAMjBxwG,KAAKywG,UrK0GA,CAACj2F,IAAUA,KAAU,KAAW,KqKpGrCxa,KAAK0wG,cAAgB,IAAI1lC,GAAU,EAAG,EAAG,EAAG,EAC7C,CAOD,cAAA2lC,CAAe1jG,GACb,MAAMijG,EAAYlwG,KAAK0sG,WACjBhgB,EAAYz/E,EAAKC,WACjB0iG,EAAyBM,EAAUF,4BACzC,OACEtjB,GAAa7gF,GACb6gF,GAAa7gF,GACZ6gF,GAAa7gF,IAAoB+jG,CAErC,CASD,OAAA3lB,CAAQ5qD,EAAGjoB,EAAGC,EAAGmmC,GACf,MAAMtiB,EAAasiB,EAAWtiB,WACxBhc,EAAas+B,EAAWjE,UAAUr6B,WAClCgxF,EAAYlwG,KAAK0sG,WAEvB,IAAIz/F,EADeijG,EAAUjzD,YACPgtC,QAAQ5qD,EAAGjoB,EAAGC,EAAG6jB,EAAYhc,GAUnD,OATIjS,EAAKC,YAAcrB,GACjBqkG,EAAUF,6BAA+BE,EAAUH,aAAe,IAEpE/vG,KAAKwwG,WAAY,GAGhBxwG,KAAK2wG,eAAe1jG,KACvBA,EAAOA,EAAKD,kBAEPC,CACR,CAMD,OAAA2G,CAAQypC,GACN,MAAMG,EAAax9C,KAAKw9C,WACxB,IAAKA,EACH,OAAO,KAGT,MAAM9P,EAAQ1tC,KAAK0sG,WACbv1F,EAAauH,GACjB8+B,EAAW2B,2BACX9B,EAAMv5C,SAGFi6C,EAAcrQ,EAAMtuB,YAC1B,GAAI2+B,IACGlkC,GAAmBkkC,EAAa5mC,GACnC,OAAO,KAIX,MAAM+jB,EAAasiB,EAAWtiB,WACxBhc,EAAas+B,EAAWjE,UAAUr6B,WAClCq6B,EAAYiE,EAAWjE,UACvBtvC,EAASyjC,EAAMwP,kBACfv7B,EAAW1X,EAAO+/E,yBAAyBzwC,EAAUr6B,YACrDiqE,EAAiBl/E,EAAOkgF,kBAAkB3sC,EAAWtiB,YAE3D,IACE,IAAImE,EAAI1d,EAASkhE,kBAAkBtpC,EAAU78B,YAC7C2iB,GAAK1d,EAASqsB,eACZ3O,EACF,CACA,MAAM/yB,EAAYqV,EAAS8kE,yBAAyBtvE,EAAYkoB,GAC1DpyB,EAAOhD,EAAOggF,QAClB5qD,EACA/yB,EAAU,GACVA,EAAU,GACV4uB,EACAhc,GAEF,KACIjS,aAAgBigF,IAAajgF,aAAgB+gF,KAC9C/gF,aAAgB+gF,IAAc/gF,EAAKC,aAAerB,EAEnD,OAAO,KAGT,GAAIoB,EAAKC,aAAerB,EACtB,SAGF,MAAM+kG,EAAajvF,EAAS21D,UAAUj4C,GAChC2lD,EAAWlmB,GAAOn9C,EAASwhE,YAAY9jD,IACvCiwB,EAAiB3tC,EAAS6Z,cAAc6D,GAExC+tE,EAAMphG,KAAKuT,MACf4pE,IACIhyE,EAAW,GAAKy5F,EAAW,IAAMthD,EACjChjD,EAAU,GAAK04E,EAAS,KAGxBqoB,EAAMrhG,KAAKuT,MACf4pE,IACIynB,EAAW,GAAKz5F,EAAW,IAAMm4C,EACjChjD,EAAU,GAAK04E,EAAS,KAGxBtI,EAAS1wE,KAAKgZ,MAClBmkE,EAAiBl/E,EAAO4/E,uBAAuBtwC,EAAUr6B,aAG3D,OAAOlf,KAAKgT,aAAa/F,EAAKquB,WAAY8xE,EAAM1wB,EAAQ2wB,EAAM3wB,EAC/D,CAED,OAAO,IACR,CAQD,kBAAA6vB,CAAmBC,EAAOr3D,EAAMloC,GAC9B,QAAIjN,KAAK2wG,eAAe1jG,IACfhI,MAAMsnG,mBAAmBC,EAAOr3D,EAAMloC,EAGhD,CAOD,YAAAmxC,CAAaZ,GACX,QAASx9C,KAAK0sG,WAAWzvD,WAC1B,CAQD,WAAAoB,CAAYb,EAAYr9C,GACtB,MAAMg8C,EAAaqB,EAAWI,iBAAiBJ,EAAWmJ,YACpDpN,EAAYiE,EAAWjE,UACvBr6B,EAAaq6B,EAAUr6B,WACvBsvF,EAAiBj1D,EAAU78B,WAC3BqyF,EAAax1D,EAAU98B,OACvBE,EAAW48B,EAAU58B,SACrBue,EAAasiB,EAAWtiB,WAExBg1E,EAAYlwG,KAAK0sG,WACjBmE,EAAaX,EAAUjzD,YACvB6zD,EAAiBD,EAAW/oG,cAC5B6Z,EAAWkvF,EAAW7mB,yBAAyB9qE,GAC/CmgB,EAAI1d,EAASkhE,kBAAkB2rB,EAAgBqC,EAAWrnB,YAC1Dl6B,EAAiB3tC,EAAS6Z,cAAc6D,GAE9C,IAAI9lB,EAASikC,EAAWjkC,OACxB,MAAMmD,EAAa8gC,EAAWjE,UAAU78B,WAClCysE,EAAiB0nB,EAAW1mB,kBAAkBjvD,GAE9C1rB,EAAQxD,KAAKgZ,MAAO7I,GAAS5C,GAAUmD,EAAcwe,GACrDzrB,EAASzD,KAAKgZ,MAAO5I,GAAU7C,GAAUmD,EAAcwe,GAEvD6iB,EACJ5B,EAAW5iC,QAAU6S,GAAe+vB,EAAW5iC,OAAQ2F,GACrD6+B,IACFxkC,EAASoE,GACPpE,EACA6S,GAAe+vB,EAAW5iC,OAAQ2F,KAItC,MAAMrH,EAAMy3C,EAAiB9/C,EAAS,EAAI25E,EACpCrxE,EAAMw3C,EAAiB7/C,EAAU,EAAI05E,EACrC4nB,EAAe,CACnBhC,EAAW,GAAKl3F,EAChBk3F,EAAW,GAAKj3F,EAChBi3F,EAAW,GAAKl3F,EAChBk3F,EAAW,GAAKj3F,GAGZ6yD,EAAYhpD,EAASohE,0BAA0BxpE,EAAQ8lB,GAKvD2xE,EAAiB,CAAA,EACvBA,EAAe3xE,GAAK,GAEpB,MAAM4xE,EAAkBjxG,KAAKysG,uBAC3BoE,EACA3xF,EACA8xF,GAGIP,EAAYzwG,KAAKywG,UACjBS,EAAelxG,KAAK0wG,cAC1B1wG,KAAKwwG,WAAY,EACjB,MAAM3pB,EAAWlqE,EACbS,GACEm8B,EAAU98B,OACVC,EACAC,EACA6gC,EAAW/pC,WAEbjN,EACJ,IAAK,IAAI4Q,EAAIuzD,EAAUxwD,KAAM/C,GAAKuzD,EAAUtwD,OAAQjD,EAClD,IAAK,IAAIC,EAAIszD,EAAUvwD,KAAM/C,GAAKszD,EAAUrwD,OAAQjD,EAAG,CACrD,GACEsF,IACCgF,EAASilE,4BAA4B,CAACvnD,EAAGjoB,EAAGC,GAAIwvE,GAEjD,SAEF,MAAM55E,EAAOjN,KAAKiqF,QAAQ5qD,EAAGjoB,EAAGC,EAAGmmC,GACnC,GAAIx9C,KAAK2wG,eAAe1jG,GAAO,CAC7B,MAAMw/E,EAAMhkF,EAAOzI,MACnB,GAAIiN,EAAKC,YAAcrB,EAAkB,CACvCmlG,EAAe3xE,GAAGpyB,EAAKX,UAAUqM,YAAc1L,EAC/C,IAAIU,EAAeV,EAAKU,aAAa8+E,GACjC9+E,GAAuC,IAAvBwuC,EAAWvP,UAE7B3/B,EAAKW,cAAc6+E,GACnB9+E,GAAe,GAGd3N,KAAKwwG,YACL7iG,GAAiB3N,KAAKuwG,cAAc7qG,SAASuH,KAE9CjN,KAAKwwG,WAAY,EAEpB,CACD,GAA4C,IAAxCvjG,EAAKK,SAASm/E,EAAKjvC,EAAWhwC,MAEhC,QAEH,CAED,MAAM2jG,EAAiBxvF,EAASkkE,2BAC9B54E,EAAKX,UACL4kG,EACAT,GAGF,IAAI7mB,GAAU,EACVunB,IACFvnB,EAAUqnB,EAAgB5xE,EAAI,EAAG8xE,IAE9BvnB,GACHjoE,EAAS6jE,gCACPv4E,EAAKX,UACL2kG,EACAC,EACAT,EAGL,CAGH,MAAMW,EACF9hD,EAAiBk/C,EAAkBtzE,EAAciuD,EAGrDp6D,GACE/uB,KAAKitG,eACLzvD,EAAW/pC,KAAK,GAAK,EACrB+pC,EAAW/pC,KAAK,GAAK,EACrB,EAAIynB,EACJ,EAAIA,EACJve,GACCnN,EAAQ,GACRC,EAAS,GAGZ,MAAMu/F,EAAkBC,GAAkBjvG,KAAKitG,gBAE/CjtG,KAAKstG,aAAantG,EAAQ6uG,EAAiBhvG,KAAKstC,cAAckQ,IAC9D,MAAMttC,EAAUlQ,KAAKkQ,QACfN,EAASM,EAAQN,OAEvB0I,GAAYtY,KAAKygD,sBAAuBzgD,KAAKitG,gBAG7Cl+E,GACE/uB,KAAKgtG,cACLx9F,EAAQ,EACRC,EAAS,EACT2hG,EACAA,EACA,GACC5hG,EAAQ,GACRC,EAAS,GAGRG,EAAOJ,OAASA,GAASI,EAAOH,QAAUA,GAC5CG,EAAOJ,MAAQA,EACfI,EAAOH,OAASA,GACNzP,KAAKktG,iBACfh9F,EAAQC,UAAU,EAAG,EAAGX,EAAOC,GAG7BsuC,GACF/9C,KAAK2tG,cAAcz9F,EAASstC,EAAYO,GAGrC8yD,EAAWzsB,mBACdl0E,EAAQ2sE,uBAAwB,GAGlC78E,KAAKkuG,UAAUh+F,EAASstC,GAExBx9C,KAAKuwG,cAAcpvG,OAAS,EAE5B,IAGIkwG,EAAOC,EAAQC,EAHfC,EAAK9qG,OAAOC,KAAKqqG,GAAgBpmE,IAAIX,QACzCunE,EAAGp9E,KAAKpzB,GAIiB,IAAvBm7C,EAAWvP,SACT5sC,KAAKktG,kBACL2D,EAAW9mB,UAAUvsC,EAAWjE,UAAUr6B,aAI5CmyF,EAAQ,GACRC,EAAS,IAHTE,EAAKA,EAAGC,UAKV,IAAK,IAAI7vG,EAAI4vG,EAAGrwG,OAAS,EAAGS,GAAK,IAAKA,EAAG,CACvC,MAAM8vG,EAAWF,EAAG5vG,GACd+vG,EAAuBd,EAAWzmB,iBACtCsnB,EACAx2E,EACAhc,GAGI0yF,EADoBjwF,EAAS6Z,cAAck2E,GACRpiD,EACnCz3C,EAAK85F,EAAqB,GAAKC,EAAeR,EAC9Ct5F,EAAK65F,EAAqB,GAAKC,EAAeR,EAC9CS,EAAkBlwF,EAAS8kE,yBAC/BzqE,GAAW+0F,GACXW,GAEII,EAAmBnwF,EAAS2gE,mBAAmBuvB,GAC/CltB,EAASjmE,GAAe1e,KAAKgtG,cAAe,CAC/C7jB,GAAkB2oB,EAAiB,GAAKf,EAAa,IACpDzhD,EACD65B,GAAkB4nB,EAAa,GAAKe,EAAiB,IACpDxiD,IAEEyiD,EACJ5oB,EAAiB0nB,EAAWhnB,uBAAuB3qE,GAC/C8yF,EAAchB,EAAeU,GACnC,IAAK,MAAM/nB,KAAgBqoB,EAAa,CACtC,MAAM/kG,EACJ+kG,EAAYroB,GAERr9E,EAAYW,EAAKX,UAGjB2lG,EAASJ,EAAgB,GAAKvlG,EAAU,GACxC4lG,EAAQlmG,KAAKgZ,MAAM2/D,EAAO,IAAMstB,EAAS,GAAKp6F,GAC9Cs6F,EAASN,EAAgB,GAAKvlG,EAAU,GACxC8lG,EAAQpmG,KAAKgZ,MAAM2/D,EAAO,IAAMwtB,EAAS,GAAKr6F,GAC9CV,EAAIpL,KAAKgZ,MAAM2/D,EAAO,GAAKstB,EAASp6F,GACpCR,EAAIrL,KAAKgZ,MAAM2/D,EAAO,GAAKwtB,EAASr6F,GACpCigC,EAAIm6D,EAAQ96F,EACZipB,EAAI+xE,EAAQ/6F,EACZ3K,EAAa2yB,IAAMqyE,EAEnB/jG,EACJjB,GAA+D,IAAjDO,EAAKK,SAAS7E,EAAOzI,MAAOw9C,EAAWhwC,MACvD,IAAI6kG,GAAe,EACnB,IAAK1kG,EACH,GAAI0jG,EAAO,CAETE,EAAc,CAACn6F,EAAGC,EAAGD,EAAI2gC,EAAG1gC,EAAGD,EAAI2gC,EAAG1gC,EAAIgpB,EAAGjpB,EAAGC,EAAIgpB,GACpD,IAAK,IAAIz+B,EAAI,EAAGuE,EAAKkrG,EAAMlwG,OAAQS,EAAIuE,IAAMvE,EAC3C,GAAIy9B,IAAMqyE,GAAYA,EAAWJ,EAAO1vG,GAAI,CAC1C,MAAMo6E,EAAOq1B,EAAMzvG,GAEjBic,GACE,CAACzG,EAAGC,EAAGD,EAAI2gC,EAAG1gC,EAAIgpB,GAClB,CAAC27C,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,OAG9Bq2B,IACHniG,EAAQq1C,OACR8sD,GAAe,GAEjBniG,EAAQ+jE,YAER/jE,EAAQ2jE,OAAO09B,EAAY,GAAIA,EAAY,IAC3CrhG,EAAQ4jE,OAAOy9B,EAAY,GAAIA,EAAY,IAC3CrhG,EAAQ4jE,OAAOy9B,EAAY,GAAIA,EAAY,IAC3CrhG,EAAQ4jE,OAAOy9B,EAAY,GAAIA,EAAY,IAE3CrhG,EAAQ2jE,OAAOmI,EAAK,GAAIA,EAAK,IAC7B9rE,EAAQ4jE,OAAOkI,EAAK,GAAIA,EAAK,IAC7B9rE,EAAQ4jE,OAAOkI,EAAK,GAAIA,EAAK,IAC7B9rE,EAAQ4jE,OAAOkI,EAAK,GAAIA,EAAK,IAC7B9rE,EAAQ8rE,OAEX,CAEHq1B,EAAM1rG,KAAK4rG,GACXD,EAAO3rG,KAAK+rG,EACxB,MACYxhG,EAAQC,UAAUiH,EAAGC,EAAG0gC,EAAG1X,GAG/BrgC,KAAKsyG,cACHrlG,EACAuwC,EACApmC,EACAC,EACA0gC,EACA1X,EACA0xE,EACArlG,GAEE2kG,IAAU1jG,GACR0kG,GACFniG,EAAQ01C,UAEV5lD,KAAKuwG,cAAcgC,QAAQtlG,IAE3BjN,KAAKuwG,cAAc5qG,KAAKsH,GAE1BjN,KAAKwyG,gBAAgBh1D,EAAWyoB,UAAW4qC,EAAY5jG,EACxD,CACF,CAiCD,OA/BAjN,KAAKqsE,iBAAmBykC,EACxB9wG,KAAKosE,mBAAqB9c,EAC1BtvD,KAAKmwG,eACFnwG,KAAKowG,kBAAoB7tG,GAAOvC,KAAKowG,gBAAiBW,GACzD/wG,KAAKowG,gBAAkBW,EACvB/wG,KAAKqwG,mBAAqBn1E,EAC1Bl7B,KAAKswG,mBAAqBpxF,EAE1Blf,KAAKyyG,kBACHj1D,EACAqzD,EACAlvF,EACAuZ,EACAhc,EACA3F,EACA8lB,EACA6wE,EAAUH,cAEZ/vG,KAAK0yG,oBAAoBl1D,EAAYqzD,GAErC7wG,KAAKmuG,WAAWj+F,EAASstC,GAErBrB,EAAW5iC,QACbrJ,EAAQ01C,UAEV11C,EAAQ2sE,uBAAwB,EAE5BmyB,IAAoBp/F,EAAOU,MAAMyF,YACnCnG,EAAOU,MAAMyF,UAAYi5F,GAGpBhvG,KAAKkmD,SACb,CAYD,aAAAosD,CAAcrlG,EAAMuwC,EAAYpmC,EAAGC,EAAG0gC,EAAG1X,EAAGq8C,EAAQhwE,GAClD,MAAMmG,EAAQ7S,KAAK2yG,aAAa1lG,GAChC,IAAK4F,EACH,OAEF,MAAM45E,EAAMhkF,EAAOzI,MACbm8C,EAAaqB,EAAWI,iBAAiBJ,EAAWmJ,YACpDrc,EACJ6R,EAAWvP,SACVlgC,EAAaO,EAAKK,SAASm/E,EAAKjvC,EAAWhwC,MAAQ,GAChDolG,EAAetoE,IAAUtqC,KAAKkQ,QAAQs1C,YACxCotD,IACF5yG,KAAKkQ,QAAQq1C,OACbvlD,KAAKkQ,QAAQs1C,YAAclb,GAE7BtqC,KAAKkQ,QAAQ6C,UACXF,EACA6pE,EACAA,EACA7pE,EAAMrD,MAAQ,EAAIktE,EAClB7pE,EAAMpD,OAAS,EAAIitE,EACnBtlE,EACAC,EACA0gC,EACA1X,GAGEuyE,GACF5yG,KAAKkQ,QAAQ01C,UAEXtb,IAAU6R,EAAWvP,QACvB4Q,EAAW1H,SAAU,EACZppC,GACTO,EAAKW,cAAc6+E,EAEtB,CAKD,QAAAnxD,GACE,MAAMprB,EAAUlQ,KAAKkQ,QACrB,OAAOA,EAAUA,EAAQN,OAAS,IACnC,CAQD,YAAA+iG,CAAa1lG,GACX,OAAOA,EAAKquB,UACb,CAOD,mBAAAo3E,CAAoBl1D,EAAYqzD,GAC9B,GAAIA,EAAW5kE,iBAAkB,CAM/B,MAAM4mE,EAAqB,SAAUhC,EAAYjmE,EAAK4S,GACpD,MAAM4R,EAAgB3mD,EAAOooG,GACzBzhD,KAAiB5R,EAAWyoB,WAC9B4qC,EAAWnnC,YACTlsB,EAAWjE,UAAUr6B,WACrBs+B,EAAWyoB,UAAU7W,GAGjC,EAAQloD,KAAK,KAAM2pG,GAEbrzD,EAAW+C,oBAAoB56C,KACrC,EAIK,CACF,CAQD,eAAA6sG,CAAgBvsC,EAAW4qC,EAAY5jG,GAErC,MAAMmiD,EAAgB3mD,EAAOooG,GACvBzhD,KAAiB6W,IACrBA,EAAU7W,GAAiB,IAE7B6W,EAAU7W,GAAeniD,EAAKF,WAAY,CAC3C,CAoBD,iBAAA0lG,CACEj1D,EACAqzD,EACAlvF,EACAuZ,EACAhc,EACA3F,EACAm4F,EACA/B,EACAmD,GAEA,MAAM1jD,EAAgB3mD,EAAOooG,GACvBzhD,KAAiB5R,EAAW+R,cAChC/R,EAAW+R,YAAYH,GAAiB,IAE1C,MAAMG,EAAc/R,EAAW+R,YAAYH,GACrCuV,EAAYnnB,EAAWmnB,UACvB13B,EAAUtrB,EAASqsB,aACnBrxB,EAAW6gC,EAAWjE,UAAU58B,SAChCkqE,EAAWlqE,EACbS,GACEogC,EAAWjE,UAAU98B,OACrB+gC,EAAWjE,UAAU78B,WACrBC,EACA6gC,EAAW/pC,WAEbjN,EACJ,IACIyG,EAAM09D,EAAWrb,EAAgBl4C,EAAGC,EAAGgoB,EADvCmrD,EAAY,EAEhB,IAAKnrD,EAAI4N,EAAS5N,GAAKqyE,IAAYryE,EAGjC,IAFAsrC,EAAYhpD,EAASohE,0BAA0BxpE,EAAQ8lB,EAAGsrC,GAC1Drb,EAAiB3tC,EAAS6Z,cAAc6D,GACnCjoB,EAAIuzD,EAAUxwD,KAAM/C,GAAKuzD,EAAUtwD,OAAQjD,EAC9C,IAAKC,EAAIszD,EAAUvwD,KAAM/C,GAAKszD,EAAUrwD,OAAQjD,EAE5CsF,IACCgF,EAASilE,4BAA4B,CAACvnD,EAAGjoB,EAAGC,GAAIwvE,KAI/C6qB,EAAWryE,GAAKswE,KAChBnlB,EACFv9E,EAAO4jG,EAAW5mB,QAAQ5qD,EAAGjoB,EAAGC,EAAG6jB,EAAYhc,GAC3CjS,EAAKC,YAAcrB,IACrB0jD,EAAYtiD,EAAKF,WAAY,EACxB43D,EAAUjX,YAAYzgD,EAAKF,WAC9B43D,EAAUzX,QAAQ,CAChBjgD,EACAmiD,EACAztC,EAASwkE,mBAAmBl5E,EAAKX,WACjCgjD,UAIe9oD,IAAjBssG,GACFA,EAAa7lG,IAGf4jG,EAAWpmB,QAAQprD,EAAGjoB,EAAGC,EAAG6H,IAKpC2xF,EAAWtmB,gBAAgBC,EAAWtrE,EACvC,GC/tBH,IAAA6zF,GAbA,cAAwBC,GAItB,WAAAlzG,CAAY4K,GACVzF,MAAMyF,EACP,CAED,cAAAg0C,GACE,OAAO,IAAIu0D,GAAwBjzG,KACpC,GCVH,IAQIkQ,GARAgjG,IAAe,EACnB,IACE,IAAIC,UAAU,GAAI,GACpB,CAAE,MAAOvnE,GACPsnE,IAAe,CACjB,CAWO,SAASE,GAAajxG,EAAMqN,EAAOC,GACxC,GAAIyjG,GACF,OAAO,IAAIC,UAAUhxG,EAAMqN,EAAOC,GAG/BS,KACHA,GAAUJ,SAASC,cAAc,UAAUC,WAAW,OAExD,MAAM2D,EAAYzD,GAAQiyF,gBAAgB3yF,EAAOC,GAEjD,OADAkE,EAAUxR,KAAK2H,IAAI3H,GACZwR,CACT,CAoBA,SAAS0/F,GAAaC,GACpB,IAAIC,GAAqB,EACzB,IACE,IAAIJ,UAAU,GAAI,GACnB,CAAC,MAAOvnE,GACP2nE,GAAqB,CACtB,CAED,SAASC,EAAmBrxG,EAAMqN,EAAOC,GACvC,OAAI8jG,EACK,IAAIJ,UAAUhxG,EAAMqN,EAAOC,GAE7B,CAACtN,KAAMA,EAAMqN,MAAOA,EAAOC,OAAQA,EAC3C,CAED,OAAO,SAAUtN,GAEf,MAAMsxG,EAAUtxG,EAAc,QACxBuxG,EAAOvxG,EAAW,KAClBwxG,EAAWxxG,EAAe,SAC1BqN,EAAQrN,EAAY,MACpBsN,EAAStN,EAAa,OAEtByxG,EAAaH,EAAQtyG,OACrB0yG,EAAWJ,EAAQ,GAAGtS,WAE5B,GAAIwS,EAAU,CACZ,MAAMG,EAAS,IAAIzxG,MAAMuxG,GACzB,IAAK,IAAItyG,EAAI,EAAGA,EAAIsyG,IAActyG,EAChCwyG,EAAOxyG,GAAKkyG,EACV,IAAIhhG,kBAAkBihG,EAAQnyG,IAC9BkO,EACAC,GAIJ,OADe6jG,EAAUQ,EAAQJ,GAAMvxG,KACzBuX,MACf,CAED,MAAMqJ,EAAS,IAAIvQ,kBAAkBqhG,GAC/BE,EAAS,IAAI1xG,MAAMuxG,GACnBI,EAAS,IAAI3xG,MAAMuxG,GACzB,IAAK,IAAItyG,EAAI,EAAGA,EAAIsyG,IAActyG,EAChCyyG,EAAOzyG,GAAK,IAAIkR,kBAAkBihG,EAAQnyG,IAC1C0yG,EAAO1yG,GAAK,CAAC,EAAG,EAAG,EAAG,GAExB,IAAK,IAAIM,EAAI,EAAGA,EAAIiyG,EAAUjyG,GAAK,EAAG,CACpC,IAAK,IAAIwiB,EAAI,EAAGA,EAAIwvF,IAAcxvF,EAAG,CACnC,MAAM3Z,EAAQspG,EAAO3vF,GACrB4vF,EAAO5vF,GAAG,GAAK3Z,EAAM7I,GACrBoyG,EAAO5vF,GAAG,GAAK3Z,EAAM7I,EAAI,GACzBoyG,EAAO5vF,GAAG,GAAK3Z,EAAM7I,EAAI,GACzBoyG,EAAO5vF,GAAG,GAAK3Z,EAAM7I,EAAI,EAC1B,CACD,MAAMy7C,EAAQi2D,EAAUU,EAAQN,GAChC3wF,EAAOnhB,GAAKy7C,EAAM,GAClBt6B,EAAOnhB,EAAI,GAAKy7C,EAAM,GACtBt6B,EAAOnhB,EAAI,GAAKy7C,EAAM,GACtBt6B,EAAOnhB,EAAI,GAAKy7C,EAAM,EACvB,CACD,OAAOt6B,EAAOrJ,MAClB,CACA,CAQA,SAASu6F,GAAaC,EAAQC,GAC5B,MAIMC,EAJM1tG,OAAOC,KAAKutG,EAAOG,KAAO,IAAIzpE,KAAI,SAAUn1B,GACtD,MAAO,SAAWA,EAAO,MAAQy+F,EAAOG,IAAI5+F,GAAMkD,WAAa,GACnE,IAEoBo9E,OAAO,CACvB,uBAAyBsd,GAAa16F,WAAa,KACnDu7F,EAAOZ,UAAU36F,WACjB,KACA,qDACA,2CACA,yEACA,QAGI27F,EAAS,IAAIC,OACD,oBAATC,KACH,+BACAC,OAAOjjD,KAAK4iD,EAAMv7F,KAAK,MAAO,UAAUF,SAAS,UACjDs2D,IAAIylC,gBAAgB,IAAIF,KAAKJ,EAAO,CAACr0G,KAAM,sBAGjD,OADAu0G,EAAOhvG,iBAAiB,UAAW6uG,GAC5BG,CACT,CAuDO,MAAMK,WAAkB3vG,EAI7B,WAAAlF,CAAYo0G,GAIV,IAAIU,EAHJ3vG,QAEAjF,KAAK60G,YAAcX,EAAOP,SAGxBiB,EADqB,IAAnBV,EAAOU,QACC,EACD50G,KAAK60G,UACJ,EAEAX,EAAOU,SAAW,EAM9B,MAAME,EAAU,IAAIzyG,MAAMuyG,GAC1B,GAAIA,EACF,IAAK,IAAIhzG,EAAI,EAAGA,EAAIgzG,IAAWhzG,EAC7BkzG,EAAQlzG,GAAKqyG,GAAaC,EAAQl0G,KAAK+0G,iBAAiB7tG,KAAKlH,KAAM4B,SAGrEkzG,EAAQ,GApEd,SAA0BZ,EAAQC,GAChC,MAAMa,EAAS3B,GAAaa,EAAOZ,WACnC,IAAI2B,GAAa,EACjB,MAAO,CACLC,YAAa,SAAU/yG,GACrBqvC,YAAW,WACLyjE,GAGJd,EAAU,CAAChyG,KAAM,CAACuX,OAAQs7F,EAAO7yG,GAAOuxG,KAAMvxG,EAAW,OAC1D,GAAE,EACJ,EACDgzG,UAAW,WACTF,GAAa,CACd,EAEL,CAoDmBG,CACXlB,EACAl0G,KAAK+0G,iBAAiB7tG,KAAKlH,KAAM,IAGrCA,KAAKq1G,SAAWP,EAMhB90G,KAAKs1G,OAAS,GAEdt1G,KAAKu1G,gBAAkBrB,EAAOsB,OAASh7F,IACvCxa,KAAKy1G,SAAW,EAMhBz1G,KAAK01G,YAAc,GAMnB11G,KAAK21G,KAAO,IACb,CAWD,OAAAC,CAAQC,EAAQnC,EAAM/3F,GACpB3b,KAAK81G,SAAS,CACZD,OAAQA,EACRnC,KAAMA,EACN/3F,SAAUA,IAEZ3b,KAAK+1G,WACN,CAMD,QAAAD,CAASE,GAEP,IADAh2G,KAAKs1G,OAAO3vG,KAAKqwG,GACVh2G,KAAKs1G,OAAOn0G,OAASnB,KAAKu1G,iBAC/Bv1G,KAAKs1G,OAAOzlG,QAAQ8L,SAAS,KAAM,KAEtC,CAKD,SAAAo6F,GACE,GAAI/1G,KAAKy1G,UAAmC,IAAvBz1G,KAAKs1G,OAAOn0G,OAC/B,OAGF,MAAM60G,EAAMh2G,KAAKs1G,OAAOzlG,QACxB7P,KAAK21G,KAAOK,EACZ,MAAMxmG,EAAQwmG,EAAIH,OAAO,GAAGrmG,MACtBC,EAASumG,EAAIH,OAAO,GAAGpmG,OACvBgkG,EAAUuC,EAAIH,OAAOjrE,KAAI,SAAU9nB,GACvC,OAAOA,EAAM3gB,KAAKuX,MACxB,IACUk7F,EAAU50G,KAAKq1G,SAASl0G,OAE9B,GADAnB,KAAKy1G,SAAWb,EACA,IAAZA,EAWF,YAVA50G,KAAKq1G,SAAS,GAAGH,YACf,CACEzB,QAASA,EACTC,KAAMsC,EAAItC,KACVC,SAAU3zG,KAAK60G,UACfrlG,MAAOA,EACPC,OAAQA,GAEVgkG,GAKJ,MAAMtyG,EAAS60G,EAAIH,OAAO,GAAG1zG,KAAKhB,OAC5BkzB,EAAgB,EAAIroB,KAAKiZ,KAAK9jB,EAAS,EAAIyzG,GACjD,IAAK,IAAIhzG,EAAI,EAAGA,EAAIgzG,IAAWhzG,EAAG,CAChC,MAAMkZ,EAASlZ,EAAIyyB,EACb4hF,EAAS,GACf,IAAK,IAAI7xF,EAAI,EAAG2G,EAAK0oF,EAAQtyG,OAAQijB,EAAI2G,IAAM3G,EAC7C6xF,EAAOtwG,KAAK8tG,EAAQrvF,GAAGtgB,MAAMgX,EAAQA,EAASuZ,IAEhDr0B,KAAKq1G,SAASzzG,GAAGszG,YACf,CACEzB,QAASwC,EACTvC,KAAMsC,EAAItC,KACVC,SAAU3zG,KAAK60G,UACfrlG,MAAOA,EACPC,OAAQA,GAEVwmG,EAEH,CACF,CAOD,gBAAAlB,CAAiB9xG,EAAO4C,GAClB7F,KAAKO,WAGTP,KAAK01G,YAAYzyG,GAAS4C,EAAM1D,OAC9BnC,KAAKy1G,SACe,IAAlBz1G,KAAKy1G,UACPz1G,KAAKk2G,cAER,CAMD,WAAAA,GACE,MAAMF,EAAMh2G,KAAK21G,KACXf,EAAU50G,KAAKq1G,SAASl0G,OAC9B,IAAIgB,EAAMuxG,EACV,GAAgB,IAAZkB,EACFzyG,EAAO,IAAIqQ,kBAAkBxS,KAAK01G,YAAY,GAAW,QACzDhC,EAAO1zG,KAAK01G,YAAY,GAAS,SAC5B,CACL,MAAMv0G,EAAS60G,EAAIH,OAAO,GAAG1zG,KAAKhB,OAClCgB,EAAO,IAAIqQ,kBAAkBrR,GAC7BuyG,EAAO,IAAIrxG,MAAMuyG,GACjB,MAAMvgF,EAAgB,EAAIroB,KAAKiZ,KAAK9jB,EAAS,EAAIyzG,GACjD,IAAK,IAAIhzG,EAAI,EAAGA,EAAIgzG,IAAWhzG,EAAG,CAChC,MAAM8X,EAAS1Z,KAAK01G,YAAY9zG,GAAW,OACrCkZ,EAASlZ,EAAIyyB,EACnBlyB,EAAK2H,IAAI,IAAI0I,kBAAkBkH,GAASoB,GACxC44F,EAAK9xG,GAAK5B,KAAK01G,YAAY9zG,GAAS,IACrC,CACF,CACD5B,KAAK21G,KAAO,KACZ31G,KAAK01G,YAAc,GACnBM,EAAIr6F,SACF,KACAy3F,GAAajxG,EAAM6zG,EAAIH,OAAO,GAAGrmG,MAAOwmG,EAAIH,OAAO,GAAGpmG,QACtDikG,GAEF1zG,KAAK+1G,WACN,CAKD,eAAAt1G,GACE,IAAK,IAAImB,EAAI,EAAGA,EAAI5B,KAAKq1G,SAASl0G,SAAUS,EAC1C5B,KAAKq1G,SAASzzG,GAAGuzG,YAEnBn1G,KAAKq1G,SAASl0G,OAAS,CACxB,EAyBH,MAAMg1G,GAOc,mBAPdA,GAgBa,kBAiBZ,MAAMC,WAA0BrwG,EAOrC,WAAAjG,CAAYC,EAAMy9C,EAAYr7C,GAC5B8C,MAAMlF,GAONC,KAAKuZ,OAASikC,EAAWjkC,OAOzBvZ,KAAK0c,WAAa8gC,EAAWjE,UAAU78B,WAAa8gC,EAAWtiB,WAQ/Dl7B,KAAKmC,KAAOA,CACb,EA6CH,MAAMk0G,WAAqB7Q,GAIzB,WAAA1lG,CAAY4K,GACVzF,MAAM,CACJia,WAAY,OAMdlf,KAAK0H,GAKL1H,KAAKiH,KAKLjH,KAAK2H,GAML3H,KAAKs2G,WAAa,KAMlBt2G,KAAKu2G,oBACuB/vG,IAA1BkE,EAAQ8rG,cAA8B9rG,EAAQ8rG,cAAgB,QAMhEx2G,KAAKy2G,cAA+BjwG,IAApBkE,EAAQkqG,QAAwBlqG,EAAQkqG,QAAU,EAMlE50G,KAAK02G,QA0ZT,SAAsBj6B,GACpB,MAAMz0E,EAAMy0E,EAAQt7E,OACd0lD,EAAS,IAAIxkD,MAAM2F,GACzB,IAAK,IAAIpG,EAAI,EAAGA,EAAIoG,IAAOpG,EACzBilD,EAAOjlD,GAAK+0G,GAAYl6B,EAAQ76E,IAElC,OAAOilD,CACT,CAjamB+vD,CAAalsG,EAAQ+xE,SAEpC,MAAM50E,EAAU7H,KAAK6H,QAAQX,KAAKlH,MAClC,IAAK,IAAI4B,EAAI,EAAGuE,EAAKnG,KAAK02G,QAAQv1G,OAAQS,EAAIuE,IAAMvE,EAClD5B,KAAK02G,QAAQ90G,GAAG0D,iBAAiBwB,EAAkBe,GA2YzD,IAA6Bg/C,EAvYzB7mD,KAAK62G,gBAA0C,OAAxBnsG,EAAQgmC,YAM/B1wC,KAAKyhE,WAAa,IAAIC,IAAU,WAC9B,OAAO,CACR,GAAE1hE,KAAK82G,gBAAgB5vG,KAAKlH,OAO7BA,KAAK+2G,qBAOL/2G,KAAKg3G,qBAAuB,KAM5Bh3G,KAAK6lG,kBAML7lG,KAAKogE,YAAc,CACjBtqB,SAAS,EACToJ,2BzKnlBG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GyKolBnB8mB,cAAe,KACfzsD,OAAQ,KACRtW,MAAO,EACP0jD,WAAY,EACZ/I,kBA8VuBiJ,EA9Ve7mD,KAAK02G,QA+VxC7vD,EAAOjc,KAAI,SAAU8C,GAC1B,OAAOA,EAAMF,eACjB,KAhWMtS,WAAY,EACZikB,2BzK1lBG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GyK2lBnBoB,oBAAqB,GACrB9sC,KAAM,CAAC,EAAG,GACVkxD,UAAW3kE,KAAKyhE,WAChBj0D,KAAMqwB,KAAKC,MACXmoC,UAAW,CAAE,EACb1sB,UAAsD,CACpD58B,SAAU,GAEZioD,UAAW,GACXrV,YAAa,CAAE,EACf2W,MAAOz9D,EAAOzI,MACdmmE,cAAe,CAAE,GAGnBnmE,KAAKskF,iBAAgB,SAAU9mC,GAC7B,MAAMS,EAAe,GACrB,IACE,IAAIh7C,EAAQ,EAAGg0G,EAAOvsG,EAAQ+xE,QAAQt7E,OACtC8B,EAAQg0G,IACNh0G,EACF,CACA,MAAMi0G,EAAgBxsG,EAAQ+xE,QAAQx5E,GAChCgH,EACJitG,aAAyBnuB,GACrBmuB,EACAA,EAAcj6D,YACpB,IAAKhzC,EACH,SAEF,MAAMktG,EAAoBltG,EAAO+zC,kBACjC,GAAiC,mBAAtBm5D,EAAkC,CAC3C,MAAMC,EAAoBD,EAAkB35D,GAC5CS,EAAat4C,KAAKzB,MAAM+5C,EAAcm5D,EACvC,CACF,CACD,OAA+B,IAAxBn5D,EAAa98C,OAAe88C,EAAe,IACxD,SAE8Bz3C,IAAtBkE,EAAQ4oG,WACVtzG,KAAKq3G,aAAa3sG,EAAQ4oG,UAAW5oG,EAAQ2pG,IAEhD,CASD,YAAAgD,CAAa/D,EAAWe,GAClBr0G,KAAKs2G,YACPt2G,KAAKs2G,WAAW91G,UAGlBR,KAAKs2G,WAAa,IAAI3B,GAAU,CAC9BrB,UAAWA,EACXK,SAAkC,UAAxB3zG,KAAKu2G,eACff,MAAO,EACPnB,IAAKA,EACLO,QAAS50G,KAAKy2G,WAEhBz2G,KAAK6H,SACN,CAUD,iBAAAyvG,CAAkB/9F,EAAQmD,EAAYwC,GACpC,MAAMs+B,EACJ92C,OAAO6C,OAAO,GAAIvJ,KAAKogE,aAGzB5iB,EAAWjE,UACT7yC,OAAO6C,OAAO,GAAIi0C,EAAWjE,WAG/B,MAAM98B,EAASJ,GAAU9C,GAEzBikC,EAAW/pC,KAAK,GAAKzH,KAAKiZ,KAAK9I,GAAS5C,GAAUmD,GAClD8gC,EAAW/pC,KAAK,GAAKzH,KAAKiZ,KAAK7I,GAAU7C,GAAUmD,GACnD8gC,EAAWjkC,OAAS,CAClBkD,EAAO,GAAM+gC,EAAW/pC,KAAK,GAAKiJ,EAAc,EAChDD,EAAO,GAAM+gC,EAAW/pC,KAAK,GAAKiJ,EAAc,EAChDD,EAAO,GAAM+gC,EAAW/pC,KAAK,GAAKiJ,EAAc,EAChDD,EAAO,GAAM+gC,EAAW/pC,KAAK,GAAKiJ,EAAc,GAElD8gC,EAAWhwC,KAAOqwB,KAAKC,MAEvB,MAAMyb,EAAYiE,EAAWjE,UAI7B,OAHAA,EAAU98B,OAASA,EACnB88B,EAAUr6B,WAAaA,EACvBq6B,EAAU78B,WAAaA,EAChB8gC,CACR,CAOD,gBAAA+5D,GACE,IACIttG,EADAg6D,GAAQ,EAEZ,IAAK,IAAIriE,EAAI,EAAGuE,EAAKnG,KAAK02G,QAAQv1G,OAAQS,EAAIuE,IAAMvE,EAElD,GADAqI,EAASjK,KAAK02G,QAAQ90G,GAAGq7C,aACpBhzC,GAAgC,UAAtBA,EAAOiD,WAAwB,CAC5C+2D,GAAQ,EACR,KACD,CAEH,OAAOA,CACR,CASD,QAAA3oC,CAAS/hB,EAAQmD,EAAYwe,EAAYhc,GACvC,IAAKlf,KAAKu3G,mBACR,OAAO,KAGTv3G,KAAKyhE,WAAW1S,cAAc,GAAI,IAElCryC,EAAa1c,KAAKqkG,sBAAsB3nF,GACxC,MAAM8gC,EAAax9C,KAAKs3G,kBAAkB/9F,EAAQmD,EAAYwC,GAI9D,GAHAlf,KAAK+2G,qBAAuBv5D,EAGxBx9C,KAAKg3G,qBAAsB,CAC7B,MAAM5qC,EAAqBpsE,KAAKg3G,qBAAqBx7E,gBAC/CkzE,EAAiB1uG,KAAKg3G,qBAAqB53F,YAE/C1C,IAAe0vD,GACd7pE,GAAOi7C,EAAWjkC,OAAQm1F,KAE3B1uG,KAAKg3G,qBAAuB,KAE/B,CAaD,OAVGh3G,KAAKg3G,sBACNh3G,KAAK8H,gBAAkB9H,KAAK6lG,mBAE5B7lG,KAAK82G,kBAGHt5D,EAAW1H,SACb4B,sBAAsB13C,KAAK6H,QAAQX,KAAKlH,OAGnCA,KAAKg3G,oBACb,CAMD,eAAAF,GACE,MAAMt5D,EAAax9C,KAAK+2G,qBAClB/uG,EAAMhI,KAAK02G,QAAQv1G,OACnBq2G,EAAa,IAAIn1G,MAAM2F,GAC7B,IAAK,IAAIpG,EAAI,EAAGA,EAAIoG,IAAOpG,EAAG,CAC5B47C,EAAWmJ,WAAa/kD,EACxB47C,EAAW2oB,cAAgB,GAC3B,MAAMxyD,EAAYX,GAAahT,KAAK02G,QAAQ90G,GAAI47C,GAChD,IAAI7pC,EAGF,OAFA6jG,EAAW51G,GAAK+R,CAInB,CAED,MAAMxR,EAAO,CAAA,EACbnC,KAAK4F,cACH,IAAIwwG,GAAkBD,GAAkC34D,EAAYr7C,IAEtEnC,KAAKs2G,WAAWV,QACd4B,EACAr1G,EACAnC,KAAKy3G,kBAAkBvwG,KAAKlH,KAAMw9C,GAErC,CAUD,iBAAAi6D,CAAkBj6D,EAAYl5C,EAAKye,EAAQ5gB,GACzC,GAAImC,IAAQye,EACV,OAIF,MAAMxJ,EAASikC,EAAWjkC,OACpBmD,EAAa8gC,EAAWjE,UAAU78B,WACxC,GACEA,IAAe1c,KAAK+2G,qBAAqBx9D,UAAU78B,aAClDna,GAAOgX,EAAQvZ,KAAK+2G,qBAAqBx9F,QAE1C,OAGF,IAAIrJ,EACJ,GAAIlQ,KAAKg3G,qBACP9mG,EAAUlQ,KAAKg3G,qBAAqB17E,WAAWtrB,WAAW,UACrD,CAGLE,EAAUX,GAFIvD,KAAKgZ,MAAM7I,GAAS5C,GAAUmD,GAC7B1Q,KAAKgZ,MAAM5I,GAAU7C,GAAUmD,IAE9C1c,KAAKg3G,qBAAuB,IAAIxQ,GAC9BjtF,EACAmD,EACA,EACAxM,EAAQN,OAEX,CACDM,EAAQkyF,aAAar/E,EAAQ,EAAG,GAE5By6B,EAAW1H,QACb4B,sBAAsB13C,KAAK6H,QAAQX,KAAKlH,OAExCA,KAAK6H,UAEP7H,KAAK6lG,kBAAoB7lG,KAAK8H,cAE9B9H,KAAK4F,cACH,IAAIwwG,GAAkBD,GAAiC34D,EAAYr7C,GAEtE,CAMD,cAAAw2C,CAAez5B,GACb,IAAKlf,KAAK62G,gBACR,OAAO,KAET,IAAInmE,EAAczrC,MAAM0zC,iBACxB,IAAKjI,EACH,IAAK,IAAI9uC,EAAI,EAAGuE,EAAKnG,KAAK02G,QAAQv1G,OAAQS,EAAIuE,IAAMvE,EAAG,CAGrD,GADA8uC,EADe1wC,KAAK02G,QAAQ90G,GAAGq7C,YACVtE,eAAez5B,GAChCwxB,EACF,KAEH,CAEH,OAAOA,CACR,CAED,eAAAjwC,GACMT,KAAKs2G,YACPt2G,KAAKs2G,WAAW91G,UAElByE,MAAMxE,iBACP,EAQH41G,GAAaxyG,UAAUrD,QAOvB,IAAImS,GAAgB,KAQpB,SAASK,GAAa06B,EAAO8P,GAC3B,MAAMwmB,EAAWt2B,EAAMyQ,cACvB,IAAK6lB,EACH,MAAM,IAAIz7D,MAAM,2BAA6BmlC,GAG/C,IAAKs2B,EAAS5lB,aAAaZ,GACzB,OAAO,KAET,MAAMhuC,EAAQguC,EAAW/pC,KAAK,GACxBhE,EAAS+tC,EAAW/pC,KAAK,GAC/B,GAAc,IAAVjE,GAA0B,IAAXC,EACjB,OAAO,KAET,MAAMy2C,EAAY8d,EAAS3lB,YAAYb,EAAY,MACnD,IAAIlzC,EACJ,GAAI47C,aAAqB/zC,kBACvB7H,EAAU47C,MACL,CAIL,GAHIA,IACF57C,EAAU47C,EAAUunD,qBAEhBnjG,aAAmB6H,mBACvB,MAAM,IAAI5J,MAAM,iCAAmC+B,GAErD,GAAIA,EAAQkF,QAAUA,GAASlF,EAAQmF,SAAWA,EAAQ,CAExD,OADgBnF,EAAQ0F,WAAW,MACpBgD,aAAa,EAAG,EAAGxD,EAAOC,EAC1C,CACF,CAED,GAAKkD,GAIE,CACL,MAAM/C,EAAS+C,GAAc/C,OACzBA,EAAOJ,QAAUA,GAASI,EAAOH,SAAWA,EAC9CkD,GAAgBpD,GAAsBC,EAAOC,OAAQjJ,EAAW,CAC9DsM,oBAAoB,IAGtBH,GAAcxC,UAAU,EAAG,EAAGX,EAAOC,EAExC,MAZCkD,GAAgBpD,GAAsBC,EAAOC,OAAQjJ,EAAW,CAC9DsM,oBAAoB,IAaxB,OADAH,GAAcI,UAAUzI,EAAS,EAAG,EAAGkF,EAAOC,GACvCkD,GAAcK,aAAa,EAAG,EAAGxD,EAAOC,EACjD,CAgCA,SAASknG,GAAYe,GAEnB,IAAIhqE,EAUJ,OATIgqE,aAAyB3uB,GACvB2uB,aAAyB3rB,GAC3Br+C,EAAQ,IAAIiqE,GAAU,CAAC1tG,OAAQytG,IACtBA,aAAyBlS,KAClC93D,EAAQ,IAAIkqE,GAAW,CAAC3tG,OAAQytG,KAGlChqE,EAAQgqE,EAEHhqE,CACT,CAEA,IAAAmqE,GAAexB,GCv/Bf,MAoBMyB,GAAc,CAClBC,eAAkB,CAChB31G,UAAW,MACX6mF,QAAQ,GAEV+uB,0BAA6B,CAC3B51G,UAAW,MACX6mF,QAAQ,GAEVgvB,sBAAyB,CACvB71G,UAAW,MACX6mF,QAAQ,GAEVivB,qBAAwB,CACtB91G,UAAW,MACX6mF,QAAQ,GAEVkvB,wBAA2B,CACzB/1G,UAAW,MACX6mF,QAAQ,GAEVmvB,aAAgB,CACdh2G,UAAW,MACX6mF,QAAQ,GAEVovB,oBAAuB,CACrBj2G,UAAW,MACX6mF,QAAQ,GAEVqvB,mBAAsB,CACpBl2G,UAAW,MACX6mF,QAAQ,GAEVsvB,kBAAqB,CACnBn2G,UAAW,MACX6mF,QAAQ,GAEVuvB,kBAAqB,CACnBp2G,UAAW,MACX6mF,QAAQ,GAEVwvB,eAAkB,CAChBr2G,UAAW,MACX6mF,QAAQ,GAEVyvB,oBAAuB,CACrBt2G,UAAW,MACX6mF,QAAQ,GAEV0vB,SAAY,CACVv2G,UAAW,MACX6mF,QAAQ,GAEV2vB,WAAc,CACZx2G,UAAW,MACX6mF,QAAQ,IAON4vB,GAAiB,CACrBd,eAAkB,CAChB9qE,QAAS,EACTC,QAAS,GACT4rE,QAAQ,GAEVV,aAAgB,CACdnrE,QAAS,EACTC,QAAS,GACT4rE,QAAQ,GAEVN,kBAAqB,CACnBvrE,QAAS,EACTC,QAAS,GACT4rE,QAAQ,IAgGZ,IAAAC,GA3DA,cAAyB/M,GAIvB,WAAAlsG,CAAY4K,GACV,MAAM9I,EAAI8I,EAAQgjC,MAAM9mC,QAAQ,KAC1BoyG,GAAiB,GAANp3G,EAAU8I,EAAQgjC,MAAQhjC,EAAQgjC,MAAM5pC,MAAM,EAAGlC,GAC5Dq3G,EAAiBJ,GAAeG,IAAa,CACjD/rE,QAAW,EACXC,QAAW,GACX4rE,QAAU,GAGNI,EAAcpB,GAAYptG,EAAQgjC,OAClCyrE,EAAQzuG,EAAQ0uG,OAAS,YAAc1uG,EAAQ0uG,OAAS,GACxDN,EAASG,EAAeH,QAAUpuG,EAAQouG,OAAS,MAAQ,GAE3DjsC,OACYrmE,IAAhBkE,EAAQmiE,IACJniE,EAAQmiE,IACR,sCACAniE,EAAQgjC,MACR,eACAorE,EACA,IACAI,EAAY92G,UACZ+2G,EAEAl7D,EAAe,CAhKvB,+EAOA,8EAyJ6Do7D,IAEvD3uG,EAAQgjC,MAAMq7D,WAAW,YAC3B9qD,EAAap3C,OAAO,EAAG,EArJ3B,0EAwJE5B,MAAM,CACJg5C,aAAcA,EACd9S,UAAWzgC,EAAQygC,UACnBhP,YAAa,YACbvvB,YAAalC,EAAQkC,YACrBsgC,aACsB1mC,IAApBkE,EAAQwiC,QACJxiC,EAAQwiC,QACR+rE,EAAe/rE,QACrBD,aACsBzmC,IAApBkE,EAAQuiC,QACJviC,EAAQuiC,QACRgsE,EAAehsE,QACrBg8C,OAAQiwB,EAAYjwB,OACpBqE,2BAA4B5iF,EAAQ4iF,2BACpClxD,iBAAkB1xB,EAAQ0xB,iBAC1B1vB,WAAYhC,EAAQgC,WACpBmgE,IAAKA,EACLsc,eAAgB2vB,EAAS,EAAI,EAC7B75F,MAAOvU,EAAQuU,MACfuqE,WAAY9+E,EAAQ8+E,YAEvB,GC0CH,IAAA8vB,GA/KA,cAA6B7qB,GAI3B,WAAA3uF,CAAY4K,GAGVzF,MAAM,CACJg5C,cAHFvzC,EAAUA,GAAoB,IAGNuzC,aACtB9S,UAAWzgC,EAAQygC,UACnBhP,YAAazxB,EAAQyxB,YACrBvvB,YAAalC,EAAQkC,YACrBsS,WAAYxU,EAAQwU,WACpBouE,2BAA4B5iF,EAAQ4iF,2BACpC3rE,SAAUjX,EAAQiX,SAClBya,iBAAkB1xB,EAAQ0xB,iBAC1BywC,IAAKniE,EAAQmiE,IACb0e,KAAM7gF,EAAQ6gF,KACdtsE,WAAyBzY,IAAlBkE,EAAQuU,OAAsBvU,EAAQuU,MAC7CvS,WAAYhC,EAAQgC,WACpB88E,WAAY9+E,EAAQ8+E,aAOtBxpF,KAAK2lG,QAAUj7F,EAAQ6lF,QAAU,CAAA,EAMjCvwF,KAAK2uF,YAA2BnoF,IAAlBkE,EAAQgkF,OAAsBhkF,EAAQgkF,MAMpD1uF,KAAKmlF,WzK0FA,CAAC3qE,IAAUA,KAAU,KAAW,KyKxFrCxa,KAAK8pF,OAAO9pF,KAAKu5G,mBAClB,CAMD,gBAAAA,GACE,IAAI33G,EAAI,EACR,MAAMsB,EAAM,GACZ,IAAK,MAAMqE,KAAOvH,KAAK2lG,QACrBziG,EAAItB,KAAO2F,EAAM,IAAMvH,KAAK2lG,QAAQp+F,GAEtC,OAAOrE,EAAI2V,KAAK,IACjB,CAQD,SAAAmtF,GACE,OAAOhmG,KAAK2lG,OACb,CAYD,cAAA6T,CACEltG,EACA04E,EACAy0B,EACAv+E,EACAhc,EACAqxE,GAEA,MAAMhF,EAAOvrF,KAAKurF,KAClB,IAAKA,EACH,OAEF,IAAI1e,EACJ,GAAmB,GAAf0e,EAAKpqF,OACP0rE,EAAM0e,EAAK,OACN,CAEL1e,EAAM0e,EADQ5mE,GAAOymE,GAAc9+E,GAAYi/E,EAAKpqF,QAErD,CAED,OAAO4jG,GACLl4B,EACA4sC,GAEEz5G,KAAK2hB,UAAY3hB,KAAKgqF,yBAAyB9qE,IAC/Csc,cAAclvB,EAAU,IAC1B4uB,EACAhc,EACAqxE,EAEH,CAOD,iBAAApG,CAAkBjvD,GAChB,OAAOl7B,KAAK2uF,OAASzzD,EAAa,CACnC,CAOD,YAAAirE,CAAa5V,GACX7pF,OAAO6C,OAAOvJ,KAAK2lG,QAASpV,GAC5BvwF,KAAK8pF,OAAO9pF,KAAKu5G,mBAClB,CASD,eAAAttB,CAAgB3/E,EAAW4uB,EAAYhc,GACrC,IAAIyC,EAAW3hB,KAAKkqF,cAKpB,GAJKvoE,IACHA,EAAW3hB,KAAKgqF,yBAAyB9qE,IAGvCyC,EAASg3B,iBAAiBx3C,QAAUmL,EAAU,GAChD,OAGgB,GAAd4uB,GAAoBl7B,KAAK2uF,SAC3BzzD,EAAa,GAGf,MAAMu+E,EAAa93F,EAAS2gE,mBAAmBh2E,EAAWtM,KAAKmlF,YAC/D,IAAIH,EAAWlmB,GAAOn9C,EAASwhE,YAAY72E,EAAU,IAAKtM,KAAKspF,SAE7C,GAAdpuD,IACF8pD,EAAWqF,GAAUrF,EAAU9pD,EAAYl7B,KAAKspF,UAIlD,MAAMue,EAAa,CACjBzC,EAAK,QACLC,OAAU,QACVC,aAAe,GAIjB,OAFA5+F,OAAO6C,OAAOs+F,EAAY7nG,KAAK2lG,SAExB3lG,KAAKw5G,eACVltG,EACA04E,EACAy0B,EACAv+E,EACAhc,EACA2oF,EAEH,GCzKH,IAAA6R,GA1CA,cAAwB1N,GAItB,WAAAlsG,CAAY4K,GAMVzF,MAAM,CACJgkF,QAAQ,EACR/pE,YAJFxU,EAAUA,GAAW,IAICwU,WACpByC,SAAUjX,EAAQiX,SAClB1C,WAAyBzY,IAAlBkE,EAAQuU,OAAsBvU,EAAQuU,MAC7CuqE,WAAY9+E,EAAQ8+E,WACpB3c,IAAKniE,EAAQqc,UAAY,oBACzBqV,iBAAkB,CAACnvB,EAAMy1C,KACvB,MAAMrjB,EAAIpyB,EAAKG,eAAe,GACxB43E,EAAWlmB,GAAO9+D,KAAK2hB,SAASwhE,YAAY9jD,IAC5CnvB,EAAUX,GAAsBy1E,EAAS,GAAIA,EAAS,IAE5D90E,EAAQwgE,YAAc,OACtBxgE,EAAQypG,WAAW,GAAK,GAAK30B,EAAS,GAAK,GAAKA,EAAS,GAAK,IAE9D90E,EAAQ0sB,UAAY,OACpB1sB,EAAQwgE,YAAc,QACtBxgE,EAAQ+lE,UAAY,SACpB/lE,EAAQgmE,aAAe,SACvBhmE,EAAQqzC,KAAO,kBACfrzC,EAAQ80C,UAAY,EACpB90C,EAAQujE,WAAW/wB,EAAMsiC,EAAS,GAAK,EAAGA,EAAS,GAAK,EAAGA,EAAS,IACpE90E,EAAQwjE,SAAShxB,EAAMsiC,EAAS,GAAK,EAAGA,EAAS,GAAK,EAAGA,EAAS,IAEjB,EAAOppD,SACtD1rB,EAAQN,OACT,GAGN,GC+IH,IAAAgqG,GA5IA,cAAuBnrB,GAIrB,WAAA3uF,CAAY4K,GA2BV,GA1BAzF,MAAM,CACJg5C,aAAcvzC,EAAQuzC,aACtB9S,UAAWzgC,EAAQygC,UACnBhP,YAAazxB,EAAQyxB,YACrBvvB,YAAalC,EAAQkC,YACrBsS,WAAYwP,GAAc,aAC1B4+D,2BAA4B5iF,EAAQ4iF,2BACpC/gF,MAAO,UACP6vB,iBAAkB1xB,EAAQ0xB,iBAC1Bnd,WAAyBzY,IAAlBkE,EAAQuU,OAAsBvU,EAAQuU,MAC7CvS,WAAYhC,EAAQgC,WACpB88E,WAAY9+E,EAAQ8+E,aAOtBxpF,KAAK65G,UAAY,KAMjB75G,KAAK+kF,UAAYr6E,EAAQs6E,SAErBt6E,EAAQmiE,IACV,GAAIniE,EAAQwjE,MACV4rC,GACEpvG,EAAQmiE,IACR7sE,KAAK+5G,uBAAuB7yG,KAAKlH,MACjCA,KAAKg6G,oBAAoB9yG,KAAKlH,WAE3B,CACL,MAAM6uE,EAAS,IAAI5B,eACnB4B,EAAOvpE,iBAAiB,OAAQtF,KAAKi6G,WAAW/yG,KAAKlH,OACrD6uE,EAAOvpE,iBAAiB,QAAStF,KAAKk6G,YAAYhzG,KAAKlH,OACvD6uE,EAAO3B,KAAK,MAAOxiE,EAAQmiE,KAC3BgC,EAAOd,MACR,KACI,KAAIrjE,EAAQyvG,SAGjB,MAAM,IAAI5xG,MAAM,uDAFhBvI,KAAK+5G,uBAAuBrvG,EAAQyvG,SAGrC,CACF,CAMD,UAAAF,CAAWp0G,GACT,MAAMgpE,EAAwChpE,EAAY,OAE1D,IAAKgpE,EAAOxB,QAAWwB,EAAOxB,QAAU,KAAOwB,EAAOxB,OAAS,IAAM,CACnE,IAAIsB,EACJ,IACEA,EAAkCrB,KAAKtiC,MAAM6jC,EAAOtB,aACrD,CAAC,MAAOjpE,GAEP,YADAtE,KAAKg6G,qBAEN,CACDh6G,KAAK+5G,uBAAuBprC,EAClC,MACM3uE,KAAKg6G,qBAER,CAMD,WAAAE,CAAYr0G,GACV7F,KAAKg6G,qBACN,CAMD,WAAAI,GACE,OAAOp6G,KAAK65G,SACb,CAMD,sBAAAE,CAAuBI,GACrB,MAAME,EAAqB3rF,GAAc,aAEnCnD,EAAmBvrB,KAAK0uB,gBAC9B,IAAInV,EACJ,QAA2B/S,IAAvB2zG,EAAiB,OAAiB,CACpC,MAAMpkG,EAAYiU,GAChBqwF,EACA9uF,GAEFhS,EAASmF,GAAey7F,EAAiB,OAAGpkG,EAC7C,CAED,MAAMukG,EAAahyB,GAAqB/8D,GAClC0hB,EAAUktE,EAAkB,SAAK,EAEjCx4F,EAAW8mE,GAAU,CACzBlvE,OAAQ+gG,EACRptE,QAHcitE,EAAkB,SAAK,GAIrCltE,QAASA,EACT+3C,SAAUhlF,KAAK+kF,YAMjB,GAJA/kF,KAAK2hB,SAAWA,EAEhB3hB,KAAKisF,gBAAkBjB,GAAoBmvB,EAAgB,MAAGx4F,GAE1Dw4F,EAAsB,cAAMn6G,KAAKg+C,kBAAmB,CACtD,MAAMu8D,OAA+B/zG,IAAX+S,EAAuBA,EAAS+gG,EAC1Dt6G,KAAKskF,iBAAgB,SAAU9mC,GAC7B,OAAI3/B,GAAW08F,EAAmB/8D,EAAWjkC,QACpC,CAAC4gG,EAAsB,aAEzB,IACf,GACK,CACDn6G,KAAK65G,UAAYM,EACjBn6G,KAAK8M,SAAS,QACf,CAKD,mBAAAktG,GACEh6G,KAAK8M,SAAS,QACf,GCuMH,IAAA0tG,GAzUA,cAAsB/rB,GAIpB,WAAA3uF,CAAY4K,GACVA,EAAUA,GAA4C,CAAE,EAExD,MAAM6lF,EAAS7pF,OAAO6C,OAAO,CAAA,EAAImB,EAAQ6lF,QAEnCkqB,IAAc,gBAAiBlqB,IAASA,EAAoB,YAElEtrF,MAAM,CACJg5C,aAAcvzC,EAAQuzC,aACtB6lC,wBAAyBp5E,EAAQo5E,wBACjC34C,UAAWzgC,EAAQygC,UACnBhP,YAAazxB,EAAQyxB,YACrBvvB,YAAalC,EAAQkC,YACrBq8E,QAASwxB,EACTv7F,WAAYxU,EAAQwU,WACpBouE,2BAA4B5iF,EAAQ4iF,2BACpCL,UAAWviF,EAAQuiF,UACnBtrE,SAAUjX,EAAQiX,SAClBya,iBAAkB1xB,EAAQ0xB,iBAC1BywC,IAAKniE,EAAQmiE,IACb0e,KAAM7gF,EAAQ6gF,KACdtsE,WAAyBzY,IAAlBkE,EAAQuU,OAAsBvU,EAAQuU,MAC7CvS,WAAYhC,EAAQgC,WACpB88E,WAAY9+E,EAAQ8+E,aAOtBxpF,KAAK+hF,aAA6Bv7E,IAAnBkE,EAAQgyE,OAAuBhyE,EAAQgyE,OAAS,EAM/D18E,KAAK2lG,QAAUpV,EAMfvwF,KAAK06G,MAAO,EAMZ16G,KAAKooG,YAAc19F,EAAQy8F,WAM3BnnG,KAAK2uF,YAA2BnoF,IAAlBkE,EAAQgkF,OAAsBhkF,EAAQgkF,MAMpD1uF,KAAKmlF,W5KuDA,CAAC3qE,IAAUA,KAAU,KAAW,K4KrDrCxa,KAAK26G,aACL36G,KAAK8pF,OAAO9pF,KAAKu5G,mBAClB,CAgBD,iBAAA5R,CAAkBxwF,EAAYuF,EAAYwC,EAAYqxE,GACpD,MAAMqX,EAAgBl5E,GAAcxP,GAC9BmpF,EAAsBroG,KAAK0uB,iBAAmBk5E,EAEpD,IAAIjmF,EAAW3hB,KAAKkqF,cACfvoE,IACHA,EAAW3hB,KAAKgqF,yBAAyBqe,IAG3C,MAAMuS,EAAkB7kG,GACtBoB,EACAywF,EACAS,GAEIp1D,EAAmBipC,GACvBmsB,EACAT,EACAzwF,EACAuF,GAGI2iB,EAAI1d,EAASkhE,kBAAkB5vC,EAAkBjzC,KAAKwpF,YACtDl6B,EAAiB3tC,EAAS6Z,cAAc6D,GACxC/yB,EAAYqV,EAAS8kE,yBAAyBm0B,EAAiBv7E,GAErE,GAAI1d,EAASg3B,iBAAiBx3C,QAAUmL,EAAU,GAChD,OAGF,IAAImtG,EAAa93F,EAAS2gE,mBAAmBh2E,EAAWtM,KAAKmlF,YAE7D,MAAMzI,EAAS18E,KAAK+hF,QACL,IAAXrF,IACF+8B,EAAa//F,GAAO+/F,EAAYnqD,EAAiBotB,EAAQ+8B,IAG3D,MAAM5R,EAAa,CACjBC,aAAgB9nG,KAAK2lG,QAAgB,QAEvCj/F,OAAO6C,OACLs+F,EACAP,GAAiBtnG,KAAK2lG,QAAS,kBAC/BpV,GAGF,MAAMn5E,EAAIpL,KAAKuT,OAAOq7F,EAAgB,GAAKnB,EAAW,IAAMnqD,GACtDj4C,EAAIrL,KAAKuT,OAAOk6F,EAAW,GAAKmB,EAAgB,IAAMtrD,GAK5D,OAHAu4C,EAAW7nG,KAAK06G,KAAO,IAAM,KAAOtjG,EACpCywF,EAAW7nG,KAAK06G,KAAO,IAAM,KAAOrjG,EAE7BrX,KAAKw5G,eACVltG,EACAmtG,EACA,EACApR,GAAuBT,EACvBC,EAEH,CAgBD,YAAAG,CAAatrF,EAAY6zE,GACvB,QAAqB/pF,IAAjBxG,KAAKurF,KAAK,GACZ,OAGF,MAAMsc,EAAa,CACjBL,QAAW,MACXC,QAAWV,GACXK,QAAW,mBACX/B,OAAU,aAGZ,QAAe7+F,IAAX+pF,QAA4C/pF,IAApB+pF,EAAc,MAAiB,CACzD,MAAM1pC,EAAS7mD,KAAK2lG,QAAQsC,OAE5B,MADuB5lG,MAAMC,QAAQukD,IAA6B,IAAlBA,EAAO1lD,QAErD,OAEF0mG,EAAkB,MAAIhhD,CACvB,CAED,QAAmBrgD,IAAfkW,EAA0B,CAC5B,MAAMwrF,EAAMloG,KAAK0uB,gBACb1uB,KAAK0uB,gBAAgBtN,mBACrB,EACEs/E,EAAY,MAClBmH,EAAkB,MAAKnrF,EAAawrF,EAAOxH,CAC5C,CAID,OAFAh6F,OAAO6C,OAAOs+F,EAAYtX,GAEnBmU,GAAoC1kG,KAAKurF,KAAK,GAAKsc,EAC3D,CAKD,SAAApa,GACE,OAAOztF,KAAK+hF,OACb,CAQD,SAAAikB,GACE,OAAOhmG,KAAK2lG,OACb,CAWD,cAAA6T,CAAeltG,EAAWmtG,EAAYv+E,EAAYhc,EAAYqxE,GAC5D,MAAMhF,EAAOvrF,KAAKurF,KAClB,IAAKA,EACH,OAEF,IAAI1e,EACJ,GAAmB,GAAf0e,EAAKpqF,OACP0rE,EAAM0e,EAAK,OACN,CAEL1e,EAAM0e,EADQ5mE,GAAOymE,GAAc9+E,GAAYi/E,EAAKpqF,QAErD,CAED,OAAO+lG,GACLuS,GAEEz5G,KAAK2hB,UAAY3hB,KAAKgqF,yBAAyB9qE,IAC/Csc,cAAclvB,EAAU,IAC1B4uB,EACAhc,EACA2tD,EACA0jB,EACAvwF,KAAKooG,YAER,CAOD,iBAAAje,CAAkBjvD,GAChB,OAAQl7B,KAAK2uF,aAA+BnoF,IAArBxG,KAAKooG,YAAgCltE,EAAJ,CACzD,CAMD,gBAAAq+E,GACE,IAAI33G,EAAI,EACR,MAAMsB,EAAM,GACZ,IAAK,MAAMqE,KAAOvH,KAAK2lG,QACrBziG,EAAItB,KAAO2F,EAAM,IAAMvH,KAAK2lG,QAAQp+F,GAEtC,OAAOrE,EAAI2V,KAAK,IACjB,CAOD,YAAAstF,CAAa5V,GACX7pF,OAAO6C,OAAOvJ,KAAK2lG,QAASpV,GAC5BvwF,KAAK26G,aACL36G,KAAK8pF,OAAO9pF,KAAKu5G,mBAClB,CAKD,UAAAoB,GACE,MAAME,EAAU76G,KAAK2lG,QAAiB,SAAKoB,GAC3C/mG,KAAK06G,KAAOn1F,GAAgBs1F,EAAS,QAAU,CAChD,CASD,eAAA5uB,CAAgB3/E,EAAW4uB,EAAYhc,GACrC,IAAIyC,EAAW3hB,KAAKkqF,cAKpB,GAJKvoE,IACHA,EAAW3hB,KAAKgqF,yBAAyB9qE,IAGvCyC,EAASg3B,iBAAiBx3C,QAAUmL,EAAU,GAChD,OAGgB,GAAd4uB,GAAqBl7B,KAAK2uF,aAA+BnoF,IAArBxG,KAAKooG,cAC3CltE,EAAa,GAGf,MAAMo0B,EAAiB3tC,EAAS6Z,cAAclvB,EAAU,IACxD,IAAImtG,EAAa93F,EAAS2gE,mBAAmBh2E,EAAWtM,KAAKmlF,YAE7D,MAAMzI,EAAS18E,KAAK+hF,QACL,IAAXrF,IACF+8B,EAAa//F,GAAO+/F,EAAYnqD,EAAiBotB,EAAQ+8B,IAG3D,MAAM5R,EAAanhG,OAAO6C,OACxB,CAAE,EACF+9F,GAAiBtnG,KAAK2lG,QAAS,WAGjC,OAAO3lG,KAAKw5G,eACVltG,EACAmtG,EACAv+E,EACAhc,EACA2oF,EAEH,GC5XI,MAAMiT,WAAmB3nG,GAS9B,WAAArT,CAAYwM,EAAWC,EAAOouB,EAAKphB,EAAQwhG,EAAY7sC,GACrDjpE,MAAMqH,EAAWC,GAMjBvM,KAAKs8B,KAAO3B,EAMZ36B,KAAKqgB,QAAU9G,EAMfvZ,KAAKg7G,YAAcD,EAMnB/6G,KAAKi7G,MAAQ,KAMbj7G,KAAKk7G,MAAQ,KAMbl7G,KAAKsT,MAAQ,KAMbtT,KAAKm7G,OAASjtC,CACf,CAMD,QAAA5yC,GACE,OAAO,IACR,CAOD,OAAA1nB,CAAQuD,GACN,IAAKnX,KAAKi7G,QAAUj7G,KAAKk7G,MACvB,OAAO,KAET,MAAME,GACHjkG,EAAW,GAAKnX,KAAKqgB,QAAQ,KAAOrgB,KAAKqgB,QAAQ,GAAKrgB,KAAKqgB,QAAQ,IAChEg7F,GACHlkG,EAAW,GAAKnX,KAAKqgB,QAAQ,KAAOrgB,KAAKqgB,QAAQ,GAAKrgB,KAAKqgB,QAAQ,IAEhEgtF,EAAMrtG,KAAKi7G,MAAMjvG,KAAKuT,OAAO,EAAI87F,GAAar7G,KAAKi7G,MAAM95G,SAE/D,GAAmB,iBAARksG,EACT,OAAO,KAGT,IAAIltF,EAAOktF,EAAI5hB,WAAWz/E,KAAKuT,MAAM67F,EAAY/N,EAAIlsG,SACjDgf,GAAQ,IACVA,IAEEA,GAAQ,IACVA,IAEFA,GAAQ,GAER,IAAIhe,EAAO,KACX,GAAIge,KAAQngB,KAAKk7G,MAAO,CACtB,MAAM3tG,EAAKvN,KAAKk7G,MAAM/6F,GAEpBhe,EADEnC,KAAKsT,OAAS/F,KAAMvN,KAAKsT,MACpBtT,KAAKsT,MAAM/F,GAEXA,CAEV,CACD,OAAOpL,CACR,CAUD,mBAAAm5G,CAAoBnkG,EAAYwE,EAAU4rF,GACpCvnG,KAAKuM,OAASV,IAA+B,IAAZ07F,GACnCvnG,KAAKuM,MAAQV,EACbxE,EACErH,KACA8G,GACA,SAAUmQ,GACR0E,EAAS3b,KAAK4T,QAAQuD,GACvB,GACDnX,MAEFA,KAAKu7G,kBAEW,IAAZhU,EACF/1D,YAAW,KACT71B,EAAS3b,KAAK4T,QAAQuD,GAAY,GACjC,GAEHwE,EAAS3b,KAAK4T,QAAQuD,GAG3B,CAMD,MAAApK,GACE,OAAO/M,KAAKs8B,IACb,CAKD,YAAAqvE,GACE3rG,KAAKuM,MAAQV,EACb7L,KAAK6H,SACN,CAMD,WAAAo0B,CAAYozD,GACVrvF,KAAKi7G,MAAQ5rB,EAAW,KACxBrvF,KAAKk7G,MAAQ7rB,EAAW,KACxBrvF,KAAKsT,MAAQ+7E,EAAW,KAExBrvF,KAAKuM,MAAQV,EACb7L,KAAK6H,SACN,CAKD,aAAA0zG,GACE,GAAIv7G,KAAKuM,OAASV,EAEhB,GADA7L,KAAKuM,MAAQV,EACT7L,KAAKm7G,OACPrB,GACE95G,KAAKs8B,KACLt8B,KAAKi8B,YAAY/0B,KAAKlH,MACtBA,KAAK2rG,aAAazkG,KAAKlH,WAEpB,CACL,MAAM6uE,EAAS,IAAI5B,eACnB4B,EAAOvpE,iBAAiB,OAAQtF,KAAKi6G,WAAW/yG,KAAKlH,OACrD6uE,EAAOvpE,iBAAiB,QAAStF,KAAKk6G,YAAYhzG,KAAKlH,OACvD6uE,EAAO3B,KAAK,MAAOltE,KAAKs8B,MACxBuyC,EAAOd,MACR,CAEJ,CAMD,UAAAksC,CAAWp0G,GACT,MAAMgpE,EAAwChpE,EAAY,OAE1D,IAAKgpE,EAAOxB,QAAWwB,EAAOxB,QAAU,KAAOwB,EAAOxB,OAAS,IAAM,CACnE,IAAIsB,EACJ,IACEA,EACErB,KAAKtiC,MAAM6jC,EAAOtB,aAErB,CAAC,MAAOjpE,GAEP,YADAtE,KAAK2rG,cAEN,CACD3rG,KAAKi8B,YAAY0yC,EACvB,MACM3uE,KAAK2rG,cAER,CAMD,WAAAuO,CAAYr0G,GACV7F,KAAK2rG,cACN,CAID,IAAAt+F,GACMrN,KAAKg7G,YACPh7G,KAAKu7G,gBAELv7G,KAAK8M,SAASjB,EAEjB,EAuQH,IAAA2vG,GA5OA,cAAsBzvB,GAIpB,WAAAjsF,CAAY4K,GAgCV,GA/BAzF,MAAM,CACJia,WAAYwP,GAAc,aAC1BniB,MAAO,UACPi9E,WAAY9+E,EAAQ8+E,aAOtBxpF,KAAKg7G,iBACoBx0G,IAAvBkE,EAAQqwG,YAA2BrwG,EAAQqwG,WAM7C/6G,KAAKy7G,iBAAmBpwB,GAMxBrrF,KAAK07G,eAAYl1G,EAMjBxG,KAAKm7G,OAASzwG,EAAQwjE,QAAS,EAE3BxjE,EAAQmiE,IACV,GAAI7sE,KAAKm7G,OACPrB,GACEpvG,EAAQmiE,IACR7sE,KAAK+5G,uBAAuB7yG,KAAKlH,MACjCA,KAAKg6G,oBAAoB9yG,KAAKlH,WAE3B,CACL,MAAM6uE,EAAS,IAAI5B,eACnB4B,EAAOvpE,iBAAiB,OAAQtF,KAAKi6G,WAAW/yG,KAAKlH,OACrD6uE,EAAOvpE,iBAAiB,QAAStF,KAAKk6G,YAAYhzG,KAAKlH,OACvD6uE,EAAO3B,KAAK,MAAOxiE,EAAQmiE,KAC3BgC,EAAOd,MACR,KACI,KAAIrjE,EAAQyvG,SAGjB,MAAM,IAAI5xG,MAAM,uDAFhBvI,KAAK+5G,uBAAuBrvG,EAAQyvG,SAGrC,CACF,CAMD,UAAAF,CAAWp0G,GACT,MAAMgpE,EAAwChpE,EAAY,OAE1D,IAAKgpE,EAAOxB,QAAWwB,EAAOxB,QAAU,KAAOwB,EAAOxB,OAAS,IAAM,CACnE,IAAIsB,EACJ,IACEA,EACErB,KAAKtiC,MAAM6jC,EAAOtB,aAErB,CAAC,MAAOjpE,GAEP,YADAtE,KAAKg6G,qBAEN,CACDh6G,KAAK+5G,uBAAuBprC,EAClC,MACM3uE,KAAKg6G,qBAER,CAMD,WAAAE,CAAYr0G,GACV7F,KAAKg6G,qBACN,CAOD,WAAA2B,GACE,OAAO37G,KAAK07G,SACb,CAaD,gCAAAE,CAAiCzkG,EAAYuF,EAAYf,EAAU4rF,GACjE,GAAIvnG,KAAK2hB,SAAU,CACjB,MAAM0d,EAAIr/B,KAAK2hB,SAASkhE,kBAAkBnmE,EAAY1c,KAAKwpF,YACrDl9E,EAAYtM,KAAK2hB,SAAS8kE,yBAAyBtvE,EAAYkoB,GAEnEr/B,KAAKiqF,QACH39E,EAAU,GACVA,EAAU,GACVA,EAAU,GACV,EACAtM,KAAK0uB,iBAGJ4sF,oBAAoBnkG,EAAYwE,EAAU4rF,EACrD,MACsB,IAAZA,EACF/1D,YAAW,WACT71B,EAAS,KACV,GAAE,GAEHA,EAAS,KAGd,CAKD,mBAAAq+F,GACEh6G,KAAK8M,SAAS,QACf,CAOD,sBAAAitG,CAAuBI,GACrB,MAAME,EAAqB3rF,GAAc,aAEnCnD,EAAmBvrB,KAAK0uB,gBAC9B,IAAInV,EACJ,QAA2B/S,IAAvB2zG,EAAiB,OAAiB,CACpC,MAAMpkG,EAAYiU,GAChBqwF,EACA9uF,GAEFhS,EAASmF,GAAey7F,EAAiB,OAAGpkG,EAC7C,CAED,MAAMukG,EAAahyB,GAAqB/8D,GAClC0hB,EAAUktE,EAAkB,SAAK,EAEjCx4F,EAAW8mE,GAAU,CACzBlvE,OAAQ+gG,EACRptE,QAHcitE,EAAkB,SAAK,GAIrCltE,QAASA,IAEXjtC,KAAK2hB,SAAWA,EAEhB3hB,KAAK07G,UAAYvB,EAAmB,SAEpC,MAAM0B,EAAQ1B,EAAgB,MAC9B,GAAK0B,EAAL,CAOA,GAFA77G,KAAKy7G,iBAAmBzwB,GAAoB6wB,EAAOl6F,QAEnBnb,IAA5B2zG,EAAsB,YAAiB,CACzC,MAAMI,OAA+B/zG,IAAX+S,EAAuBA,EAAS+gG,EAC1Dt6G,KAAKskF,iBAAgB,SAAU9mC,GAC7B,OAAI3/B,GAAW08F,EAAmB/8D,EAAWjkC,QACpC,CAAC4gG,EAAsB,aAEzB,IACf,GACK,CAEDn6G,KAAK8M,SAAS,QAdb,MAFC9M,KAAK8M,SAAS,QAiBjB,CAUD,OAAAm9E,CAAQ5qD,EAAGjoB,EAAGC,EAAG6jB,EAAYhc,GAC3B,MAAMyqE,EAAepf,GAAUlrC,EAAGjoB,EAAGC,GACrC,GAAIrX,KAAKopF,UAAUxf,YAAY+f,GAC7B,OAAO3pF,KAAKopF,UAAUjgF,IAAIwgF,GAE5B,MAAMr9E,EAAY,CAAC+yB,EAAGjoB,EAAGC,GACnB+zD,EAAeprE,KAAKsqF,+BACxBh+E,EACA4S,GAEI2uE,EAAU7tF,KAAKy7G,iBAAiBrwC,EAAclwC,EAAYhc,GAC1DjS,EAAO,IAAI6tG,GACfxuG,OACY9F,IAAZqnF,EAAwBhiF,EAAiBA,OAC7BrF,IAAZqnF,EAAwBA,EAAU,GAClC7tF,KAAK2hB,SAAS2gE,mBAAmBh2E,GACjCtM,KAAKg7G,YACLh7G,KAAKm7G,QAGP,OADAn7G,KAAKopF,UAAUt/E,IAAI6/E,EAAc18E,GAC1BA,CACR,CAQD,OAAAw9E,CAAQprD,EAAGjoB,EAAGC,GACZ,MAAMsyE,EAAepf,GAAUlrC,EAAGjoB,EAAGC,GACjCrX,KAAKopF,UAAUxf,YAAY+f,IAC7B3pF,KAAKopF,UAAUjgF,IAAIwgF,EAEtB,GC7KH,IAAAmyB,GA1QA,cAAmBrtB,GAIjB,WAAA3uF,CAAY4K,GAGV,MAAMqxG,OACwBv1G,IAA5BkE,EAAQqxG,gBAAgCrxG,EAAQqxG,gBAAkB,MAI9Dp6F,EAAWjX,EAAQiX,SAEzB,IAAI4pE,EAAO7gF,EAAQ6gF,UACN/kF,IAAT+kF,QAAsC/kF,IAAhBkE,EAAQmiE,MAChC0e,EAAOD,GAAU5gF,EAAQmiE,MAG3B5nE,MAAM,CACJg5C,aAAcvzC,EAAQuzC,aACtB6lC,wBAAyBp5E,EAAQo5E,wBACjC34C,UAAWzgC,EAAQygC,UACnBhP,YAAazxB,EAAQyxB,YACrBvvB,YAAalC,EAAQkC,YACrBsS,WAAYxU,EAAQwU,WACpBouE,2BAA4B5iF,EAAQ4iF,2BACpCL,UAAWviF,EAAQuiF,UACnBtrE,SAAUA,EACVya,iBAAkB1xB,EAAQ0xB,iBAC1B+sD,eAAgBz+E,EAAQy+E,eACxBoC,KAAMA,EACNtsE,WAAyBzY,IAAlBkE,EAAQuU,OAAsBvU,EAAQuU,MAC7CvS,WAAYhC,EAAQgC,WACpB88E,WAAY9+E,EAAQ8+E,aAOtBxpF,KAAKg8G,cAA+Bx1G,IAApBkE,EAAQmwG,QAAwBnwG,EAAQmwG,QAAU,QAMlE76G,KAAKi7F,aAA6Bz0F,IAAnBkE,EAAQoc,OAAuBpc,EAAQoc,OAAS,aAM/D9mB,KAAKi8G,iBACoBz1G,IAAvBkE,EAAQwxG,WAA2BxxG,EAAQwxG,WAAa,CAAA,EAM1Dl8G,KAAKqsG,OAAS3hG,EAAQgjC,MAMtB1tC,KAAKm8G,WAAazxG,EAAQ68E,UAM1BvnF,KAAKuU,OAAS7J,EAAQ4F,MAStBtQ,KAAKo8G,iBAAmBL,EAExB/7G,KAAK8pF,OAAO9pF,KAAKq8G,wBAEb9wB,GAAQA,EAAKpqF,OAAS,IACxBnB,KAAKisF,gBAAkBd,GACrBI,EAAK3gD,IAAI5qC,KAAKs8G,uBAAuBp1G,KAAKlH,QAG/C,CAOD,OAAAksF,CAAQX,GACNvrF,KAAKurF,KAAOA,EACZ,MAAMhkF,EAAMgkF,EAAK1yE,KAAK,MACtB7Y,KAAK4sF,mBACHzB,GACEI,EAAK3gD,IAAI5qC,KAAKs8G,uBAAuBp1G,KAAKlH,QAE5CuH,EAEH,CASD,aAAAg1G,GACE,OAAOv8G,KAAKi8G,WACb,CAOD,SAAA9d,GACE,OAAOn+F,KAAKi7F,OACb,CAOD,QAAAyR,GACE,OAAO1sG,KAAKqsG,MACb,CAOD,YAAAmQ,GACE,OAAOx8G,KAAKm8G,UACb,CAOD,kBAAAM,GACE,OAAOz8G,KAAKo8G,gBACb,CAOD,QAAAlnG,GACE,OAAOlV,KAAKuU,MACb,CAOD,UAAAmoG,GACE,OAAO18G,KAAKg8G,QACb,CAMD,oBAAAK,GACE,MAAMn5G,EAAMlD,KAAKurF,KAAOvrF,KAAKurF,KAAKznF,MAAM,GAAK,GAC7C,IAAK,MAAMyD,KAAOvH,KAAKi8G,YACrB/4G,EAAIyC,KAAK4B,EAAM,IAAMvH,KAAKi8G,YAAY10G,IAExC,OAAOrE,EAAI2V,KAAK,IACjB,CAOD,gBAAA8jG,CAAiBT,GACfx1G,OAAO6C,OAAOvJ,KAAKi8G,YAAaC,GAChCl8G,KAAK8pF,OAAO9pF,KAAKq8G,uBAClB,CAMD,sBAAAC,CAAuBv1F,GACrB,MAAMg1F,EAAkB/7G,KAAKo8G,iBAIvBlsG,EAAU,CACdw9B,MAAS1tC,KAAKqsG,OACd/7F,MAAStQ,KAAKuU,OACdqoG,cAAiB58G,KAAKm8G,YAGD,OAAnBJ,GACFr1G,OAAO6C,OAAO2G,EAAS,CACrB2sG,QAAW,OACXC,QAAW,UACXC,QAAW/8G,KAAKg8G,SAChBgB,OAAUh9G,KAAKi7F,UAQnBl0E,EACqB,OAAnBg1F,EACIrX,GAAa39E,EAAU7W,GACvB6W,EAASzD,QAAQ,eAAe,SAAUtD,EAAGo1E,GAC3C,OAAOA,EAAEpnF,gBAAiBkC,EAAUA,EAAQklF,EAAEpnF,eAAiBgS,CAC3E,IAEI,MAAM2B,EACJ3hB,KACN,SACUk8G,EAAal8G,KAAKi8G,YAExB,OAAA,SAOY3vG,EAAW4uB,EAAYhc,GAC/B,IAAK5S,EACH,OAEF,MAAM2+F,EAAe,CACnBgS,WAAct7F,EAASwlE,YAAY76E,EAAU,IAC7C4wG,QAAW5wG,EAAU,GACrB6wG,QAAW7wG,EAAU,IAEvB5F,OAAO6C,OAAO0hG,EAAciR,GAC5B,IAAIrvC,EAAM9lD,EAQV,OANE8lD,EADqB,OAAnBkvC,EACIrX,GAAa73B,EAAKo+B,GAElBp+B,EAAIvpD,QAAQ,eAAe,SAAUtD,EAAGo1E,GAC5C,OAAO6V,EAAa7V,EAChC,IAEevoB,CAET,CACH,GCpTI,MAAMuwC,GACX,4CAOK,SAASC,GAAgBC,EAAcC,GAC5C,OAAOC,KAAcH,gBAAgBC,EAAcC,EACrD,CAUO,SAASE,GAAkBnsG,EAAMosG,GACtC,OAAOC,GAAmBrsG,EAAMosG,EAAqB,IAAI7kG,KAAK,GAChE,CAWO,SAAS8kG,GAAmBrsG,EAAMosG,EAAqBE,GAC5D,GACEtsG,EAAKusG,UAAYC,KAAKC,oBACtBzsG,EAAKusG,UAAYC,KAAKE,UAElBN,EACFE,EAAYj4G,KAAKiD,OAAO0I,EAAK2sG,WAAW36F,QAAQ,gBAAiB,KAEjEs6F,EAAYj4G,KAAK2L,EAAK2sG,eAEnB,CACL,IAAIt8G,EACJ,IAAKA,EAAI2P,EAAK80C,WAAYzkD,EAAGA,EAAIA,EAAEu8G,YACjCP,GAAmBh8G,EAAG+7G,EAAqBE,EAE9C,CACD,OAAOA,CACT,CAMO,SAASO,GAAWv5G,GACzB,MAAO,oBAAqBA,CAC9B,CAQO,SAASw5G,GAAe9sG,EAAMgsG,EAAc7nG,GACjD,OAAOnE,EAAK8sG,eAAed,EAAc7nG,IAAS,EACpD,CAQO,SAASu1B,GAAMqzE,GACpB,OAAO,IAAI5wC,WAAYC,gBAAgB2wC,EAAK,kBAC9C,CAUO,SAASC,GAAkBC,EAAav3G,GAC7C,OAAA,SAKYsK,EAAMktG,GACd,MAAMn6G,EAAQk6G,EAAYx6G,UACZyC,IAAZQ,EAAwBA,EAAUhH,KAClCsR,EACAktG,GAEF,QAAch4G,IAAVnC,EAAqB,CAIvBnC,EAFEs8G,EAAYA,EAAYr9G,OAAS,GAErBkD,EACf,CAEH,CACJ,CAUO,SAASo6G,GAAgBF,EAAav3G,GAC3C,OAAA,SAKYsK,EAAMktG,GACd,MAAMn6G,EAAQk6G,EAAYx6G,UACZyC,IAAZQ,EAAwBA,EAAUhH,KAClCsR,EACAktG,GAEF,QAAch4G,IAAVnC,EAAqB,CAErBm6G,EAAYA,EAAYr9G,OAAS,GAE7BwE,KAAKtB,EACZ,CAEH,CACJ,CAUO,SAASq6G,GAAaH,EAAav3G,GACxC,OAAA,SAKYsK,EAAMktG,GACd,MAAMn6G,EAAQk6G,EAAYx6G,UACZyC,IAAZQ,EAAwBA,EAAUhH,KAClCsR,EACAktG,QAEYh4G,IAAVnC,IACFm6G,EAAYA,EAAYr9G,OAAS,GAAKkD,EAG1C,CACJ,CAWO,SAASs6G,GAAyBJ,EAAa15G,EAAUmC,GAC9D,OAAA,SAKYsK,EAAMktG,GACd,MAAMn6G,EAAQk6G,EAAYx6G,UACZyC,IAAZQ,EAAwBA,EAAUhH,KAClCsR,EACAktG,GAEF,QAAch4G,IAAVnC,EAAqB,CACvB,MAAMO,EACJ45G,EAAYA,EAAYr9G,OAAS,GAE7BsU,OAAoBjP,IAAb3B,EAAyBA,EAAWyM,EAAKstG,UACtD,IAAIn0G,EACAgL,KAAQ7Q,EACV6F,EAAQ7F,EAAO6Q,IAEfhL,EAAQ,GACR7F,EAAO6Q,GAAQhL,GAEjBA,EAAM9E,KAAKtB,EACZ,CAEH,CACJ,CAUO,SAASw6G,GAAyBN,EAAa15G,EAAUmC,GAC9D,OAAA,SAKYsK,EAAMktG,GACd,MAAMn6G,EAAQk6G,EAAYx6G,UACZyC,IAAZQ,EAAwBA,EAAUhH,KAClCsR,EACAktG,GAEF,QAAch4G,IAAVnC,EAAqB,CAErBm6G,EAAYA,EAAYr9G,OAAS,QAETqF,IAAb3B,EAAyBA,EAAWyM,EAAKstG,WACvCv6G,CAChB,CAEH,CACJ,CAWO,SAASy6G,GAAkBC,EAAY/3G,GAC5C,OAAO,SAAUsK,EAAMjN,EAAOm6G,GAC5BO,EAAWh7G,UACGyC,IAAZQ,EAAwBA,EAAUhH,KAClCsR,EACAjN,EACAm6G,GAGAA,EAAYA,EAAYr9G,OAAS,GAETmQ,KACfW,YAAYX,EAC3B,CACA,CAcO,SAAS0tG,GAAoBD,EAAY/3G,GAC9C,IAAIi4G,EAAeC,EACnB,OAAO,SAAU5tG,EAAMjN,EAAOm6G,GAC5B,QAAsBh4G,IAAlBy4G,EAA6B,CAC/BA,EAAgB,CAAA,EAChB,MAAME,EAAc,CAAA,EACpBA,EAAY7tG,EAAKstG,WAAaG,EAC9BE,EAAc3tG,EAAKgsG,cAAgB6B,EACnCD,EAAcE,GAAsB9tG,EAAKstG,UAC1C,CACDS,GAAUJ,EAAeC,EAAa76G,EAAOm6G,EACjD,CACA,CAeO,SAASY,GAAsBE,EAAeC,GACnD,OAAA,SAOYl7G,EAAOm6G,EAAagB,GAC5B,MAGMluG,EAFJktG,EAAYA,EAAYr9G,OAAS,GAEdmQ,KACrB,IAAImuG,EAAWH,OACE94G,IAAbi5G,IACFA,EAAWD,GAKb,OAAOnC,QADiB72G,IAAtB+4G,EAAkCA,EAAoBjuG,EAAKgsG,aACD,EAE9D,CACJ,CASO,MAAMoC,GAA+BN,KAarC,SAASO,GAAa/6G,EAAQg7G,GACnC,MAAMz+G,EAASy+G,EAAYz+G,OACrB0+G,EAAW,IAAIx9G,MAAMlB,GAC3B,IAAK,IAAIS,EAAI,EAAGA,EAAIT,IAAUS,EAC5Bi+G,EAASj+G,GAAKgD,EAAOg7G,EAAYh+G,IAEnC,OAAOi+G,CACT,CAYO,SAASC,GAAgBC,EAAeC,EAAWC,GAExD,IAAIr+G,EAAGuE,EACP,IAFA85G,OAA8Bz5G,IAAhBy5G,EAA4BA,EAAc,CAAA,EAEnDr+G,EAAI,EAAGuE,EAAK45G,EAAc5+G,OAAQS,EAAIuE,IAAMvE,EAC/Cq+G,EAAYF,EAAcn+G,IAAMo+G,EAElC,OAAOC,CACT,CAUO,SAASC,GAAUC,EAAW7uG,EAAMktG,EAAax3G,GACtD,IAAIrF,EACJ,IAAKA,EAAI2P,EAAKm8F,kBAAmB9rG,EAAGA,EAAIA,EAAEy+G,mBAAoB,CAC5D,MAAMC,EAAUF,EAAUx+G,EAAE27G,cAC5B,QAAgB92G,IAAZ65G,EAAuB,CACzB,MAAMC,EAASD,EAAQ1+G,EAAEi9G,gBACVp4G,IAAX85G,GACFA,EAAOv8G,KAAKiD,EAASrF,EAAG68G,EAE3B,CACF,CACH,CAaO,SAAS+B,GAAgB37G,EAAQu7G,EAAW7uG,EAAMktG,EAAax3G,GAGpE,OAFAw3G,EAAY74G,KAAKf,GACjBs7G,GAAUC,EAAW7uG,EAAMktG,EAAax3G,GACfw3G,EAAYvzG,KACvC,CAwBO,SAASo0G,GACdJ,EACAC,EACAl2G,EACAw1G,EACA73G,EACAK,GAEA,MAAM7F,QAAmBqF,IAATG,EAAqBA,EAAOqC,GAAQ7H,OACpD,IAAIkD,EAAOiN,EACX,IAAK,IAAI1P,EAAI,EAAGA,EAAIT,IAAUS,EAC5ByC,EAAQ2E,EAAOpH,QACD4E,IAAVnC,IACFiN,EAAO4tG,EAAYn7G,UACLyC,IAAZQ,EAAwBA,EAAUhH,KAClCqE,EACAm6G,OACSh4G,IAATG,EAAqBA,EAAK/E,QAAK4E,QAEpBA,IAAT8K,GACF2tG,EAAc3tG,EAAKgsG,cAAchsG,EAAKstG,WAAW76G,KAC/CiD,EACAsK,EACAjN,EACAm6G,GAKV,CAyBO,SAASgC,GACd57G,EACAq6G,EACAC,EACAl2G,EACAw1G,EACA73G,EACAK,GAIA,OAFAw3G,EAAY74G,KAAKf,GACjBy6G,GAAUJ,EAAeC,EAAal2G,EAAQw1G,EAAa73G,EAAMK,GAC9Bw3G,EAAYvzG,KACjD,CAEA,IAAIw1G,GAuBAC,GAPG,SAASC,KAId,YAHuBn6G,IAAnBi6G,IAAyD,oBAAlBG,gBACzCH,GAAiB,IAAIG,eAEhBH,EACT,CAmBO,SAASjD,KAId,YAHkBh3G,IAAdk6G,IAA+C,oBAAb5wG,WACpC4wG,GAAY5wG,SAAS+wG,eAAeC,eAAe,GAAI,GAAI,OAEtDJ,EACT,CCpjBO,SAAS7qG,KACd,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACvD,CAOO,SAASkrG,GAAcC,EAAMjrG,GAOlC,OANAirG,EAAK,GAAKjrG,EAAU,GACpBirG,EAAK,GAAKjrG,EAAU,GACpBirG,EAAK,GAAKjrG,EAAU,GACpBirG,EAAK,GAAKjrG,EAAU,GACpBirG,EAAK,IAAMjrG,EAAU,GACrBirG,EAAK,IAAMjrG,EAAU,GACdirG,CACT,CCDA,MAAMC,GAIJ,WAAAnhH,CAAY4K,GAKV1K,KAAKkhH,SAAWx2G,EAAQkiC,QAMxB5sC,KAAKmhH,gBAAkBz2G,EAAQ02G,eAM/BphH,KAAK4yD,UAAYloD,EAAQiS,SAMzB3c,KAAKqhH,OAAS32G,EAAQgN,MAMtB1X,KAAKshH,YAAcxiD,GAAOp0D,EAAQgN,OAMlC1X,KAAKuhH,cAAgB72G,EAAQ82G,aAM7BxhH,KAAKyhH,eAAiB/2G,EAAQ+uE,aAC/B,CAOD,KAAA3kE,GACE,MAAM4C,EAAQ1X,KAAK0hH,WACnB,OAAO,IAAIT,GAAW,CACpBr0E,QAAS5sC,KAAK4tC,aACdl2B,MAAOrV,MAAMC,QAAQoV,GAASA,EAAM5T,QAAU4T,EAC9CiF,SAAU3c,KAAK61C,cACfurE,eAAgBphH,KAAKu3E,oBACrBiqC,aAAcxhH,KAAK2hH,kBAAkB79G,QACrC21E,cAAez5E,KAAK05E,oBAEvB,CAOD,UAAA9rC,GACE,OAAO5tC,KAAKkhH,QACb,CAOD,iBAAA3pC,GACE,OAAOv3E,KAAKmhH,eACb,CAOD,WAAAtrE,GACE,OAAO71C,KAAK4yD,SACb,CAOD,QAAA8uD,GACE,OAAO1hH,KAAKqhH,MACb,CAMD,aAAA5pC,GACE,OAAOz3E,KAAKshH,WACb,CAOD,eAAAK,GACE,OAAO3hH,KAAKuhH,aACb,CAOD,gBAAA7nC,GACE,OAAO15E,KAAKyhH,cACb,CAQD,SAAArqC,GACE,OAAO9uE,GACR,CAQD,QAAAgzB,CAASJ,GACP,OAAO5yB,GACR,CAMD,oBAAAs5G,GACE,OAAOt5G,GACR,CAOD,aAAAizB,CAAcL,GACZ,OAAO,CACR,CAMD,aAAAq+C,GACE,OAAOjxE,GACR,CAMD,YAAAu5G,GACE,OAAOv5G,GACR,CAOD,SAAAgvE,GACE,OAAOhvE,GACR,CAOD,OAAAoL,GACE,OAAOpL,GACR,CAQD,eAAAw5G,CAAgBN,GACdxhH,KAAKuhH,cAAgBC,CACtB,CAQD,UAAA7yE,CAAW/B,GACT5sC,KAAKkhH,SAAWt0E,CACjB,CAQD,iBAAAm1E,CAAkBX,GAChBphH,KAAKmhH,gBAAkBC,CACxB,CAQD,WAAAnsE,CAAYt4B,GACV3c,KAAK4yD,UAAYj2C,CAClB,CAQD,QAAAqlG,CAAStqG,GACP1X,KAAKqhH,OAAS3pG,EACd1X,KAAKshH,YAAcxiD,GAAOpnD,EAC3B,CAMD,iBAAAwjE,CAAkB31E,GAChB+C,GACD,CAMD,IAAA+E,GACE/E,GACD,CAMD,mBAAA2yE,CAAoB11E,GAClB+C,GACD,EAGH,IAAA25G,GAAehB,GChPf,MAAMiB,WAAqBjB,GAIzB,WAAAnhH,CAAY4K,GAOVzF,MAAM,CACJ2nC,QAAS,EACTw0E,oBAJ2B56G,IAA3BkE,EAAQ02G,gBAA+B12G,EAAQ02G,eAK/CzkG,cAA+BnW,IAArBkE,EAAQiS,SAAyBjS,EAAQiS,SAAW,EAC9DjF,WAAyBlR,IAAlBkE,EAAQgN,MAAsBhN,EAAQgN,MAAQ,EACrD8pG,kBAC2Bh7G,IAAzBkE,EAAQ82G,aAA6B92G,EAAQ82G,aAAe,CAAC,EAAG,GAClE/nC,cAAe/uE,EAAQ+uE,gBAOzBz5E,KAAKmiH,UAMLniH,KAAKoiH,oBAAsB,KAM3BpiH,KAAKqiH,WAAyB77G,IAAjBkE,EAAQypE,KAAqBzpE,EAAQypE,KAAO,KAMzDn0E,KAAK0kF,QAAU,CAAC,EAAG,GAMnB1kF,KAAKy9B,QAAU/yB,EAAQquF,OAMvB/4F,KAAKsiH,aACgB97G,IAAnBkE,EAAQod,OAAuBpd,EAAQod,OAASpd,EAAQ63G,QAM1DviH,KAAKwiH,SAAW93G,EAAQ+3G,QAMxBziH,KAAK09B,YAA2Bl3B,IAAlBkE,EAAQ6M,MAAsB7M,EAAQ6M,MAAQ,EAM5DvX,KAAK0iH,aAA6Bl8G,IAAnBkE,EAAQ0pE,OAAuB1pE,EAAQ0pE,OAAS,KAM/Dp0E,KAAKwT,MAMLxT,KAAK2iH,eAEL3iH,KAAK68C,QACN,CAOD,KAAA/nC,GACE,MAAM4C,EAAQ1X,KAAK0hH,WACbpxG,EAAQ,IAAI4xG,GAAa,CAC7B/tC,KAAMn0E,KAAKq0E,UAAYr0E,KAAKq0E,UAAUv/D,aAAUtO,EAChDuyF,OAAQ/4F,KAAK84F,YACbhxE,OAAQ9nB,KAAKimB,YACbw8F,QAASziH,KAAK4iH,aACdrrG,MAAOvX,KAAKk+B,WACZk2C,OAAQp0E,KAAKs0E,YAAct0E,KAAKs0E,YAAYx/D,aAAUtO,EACtDmW,SAAU3c,KAAK61C,cACfurE,eAAgBphH,KAAKu3E,oBACrB7/D,MAAOrV,MAAMC,QAAQoV,GAASA,EAAM5T,QAAU4T,EAC9C8pG,aAAcxhH,KAAK2hH,kBAAkB79G,QACrC21E,cAAez5E,KAAK05E,qBAGtB,OADAppE,EAAMq+B,WAAW3uC,KAAK4tC,cACft9B,CACR,CAQD,SAAA8mE,GACE,MAAM3jE,EAAOzT,KAAKwT,MACZguG,EAAexhH,KAAK2hH,kBACpBjqG,EAAQ1X,KAAKy3E,gBAGnB,MAAO,CACLhkE,EAAK,GAAK,EAAI+tG,EAAa,GAAK9pG,EAAM,GACtCjE,EAAK,GAAK,EAAI+tG,EAAa,GAAK9pG,EAAM,GAEzC,CAOD,QAAAwmB,GACE,OAAOl+B,KAAK09B,MACb,CAOD,OAAA22C,GACE,OAAOr0E,KAAKqiH,KACb,CAOD,OAAAQ,CAAQ1uC,GACNn0E,KAAKqiH,MAAQluC,EACbn0E,KAAK68C,QACN,CAKD,oBAAA+kE,GAME,OALK5hH,KAAKoiH,sBACRpiH,KAAKoiH,oBAAsBpiH,KAAK8iH,0BAC9B9iH,KAAK2iH,iBAGF3iH,KAAKoiH,mBACb,CAQD,QAAA9mF,CAASJ,GACP,IAAIroB,EAAQ7S,KAAKmiH,UAAUjnF,GAC3B,IAAKroB,EAAO,CACV,MAAMkwG,EAAgB/iH,KAAK2iH,eACrBzyG,EAAUX,GACdwzG,EAActvG,KAAOynB,EACrB6nF,EAActvG,KAAOynB,GAEvBl7B,KAAKgjH,MAAMD,EAAe7yG,EAASgrB,GAEnCroB,EAAQ3C,EAAQN,OAChB5P,KAAKmiH,UAAUjnF,GAAcroB,CAC9B,CACD,OAAOA,CACR,CAOD,aAAA0oB,CAAcL,GACZ,OAAOA,CACR,CAKD,YAAA2mF,GACE,OAAO7hH,KAAKwT,KACb,CAKD,aAAA+lE,GACE,OAAOr/C,EACR,CAOD,SAAAo9C,GACE,OAAOt3E,KAAK0kF,OACb,CAOD,SAAAoU,GACE,OAAO94F,KAAKy9B,OACb,CAOD,SAAAxX,GACE,OAAOjmB,KAAKsiH,OACb,CAOD,UAAAM,GACE,OAAO5iH,KAAKwiH,QACb,CAOD,OAAA9uG,GACE,OAAO1T,KAAKwT,KACb,CAOD,SAAA8gE,GACE,OAAOt0E,KAAK0iH,OACb,CAOD,SAAAO,CAAU7uC,GACRp0E,KAAK0iH,QAAUtuC,EACfp0E,KAAK68C,QACN,CAKD,iBAAAq+B,CAAkB31E,GAAY,CAK9B,IAAA8H,GAAS,CAKT,mBAAA4tE,CAAoB11E,GAAY,CAUhC,sBAAA29G,CAAuBrtC,EAAUstC,EAAartC,GAC5C,GACkB,IAAhBqtC,GACAnjH,KAAKy9B,UAAYjjB,KACH,UAAbq7D,GAAqC,UAAbA,EAEzB,OAAOstC,EAwBT,IAAIC,EAAKpjH,KAAKsiH,QACVe,OAAuB78G,IAAlBxG,KAAKwiH,SAAyBY,EAAKpjH,KAAKwiH,SACjD,GAAIY,EAAKC,EAAI,CACX,MAAMphH,EAAMmhH,EACZA,EAAKC,EACLA,EAAKphH,CACN,CACD,MAAM82F,OACcvyF,IAAlBxG,KAAKwiH,SAAyBxiH,KAAKy9B,QAAyB,EAAfz9B,KAAKy9B,QAC9C6M,EAAS,EAAIt+B,KAAK6T,GAAMk5E,EACxB13F,EAAIgiH,EAAKr3G,KAAKyL,IAAI6yB,GAElBtzB,EAAIosG,EADAp3G,KAAKka,KAAKm9F,EAAKA,EAAKhiH,EAAIA,GAE5B4V,EAAIjL,KAAKka,KAAK7kB,EAAIA,EAAI2V,EAAIA,GAC1BssG,EAAarsG,EAAI5V,EACvB,GAAiB,UAAbw0E,GAAwBytC,GAAcxtC,EACxC,OAAOwtC,EAAaH,EAetB,MAAM7+F,EAAI6+F,EAAc,EAAIG,EACtBvkG,EAAKokG,EAAc,GAAMnsG,EAAIC,GAE7BssG,EADOv3G,KAAKka,MAAMk9F,EAAK9+F,IAAM8+F,EAAK9+F,GAAKvF,EAAIA,GACzBqkG,EACxB,QAAsB58G,IAAlBxG,KAAKwiH,UAAuC,UAAb3sC,EACjC,OAAkB,EAAX0tC,EAIT,MAAMC,EAAKJ,EAAKp3G,KAAKyL,IAAI6yB,GAEnBm5E,EAAKJ,EADAr3G,KAAKka,KAAKk9F,EAAKA,EAAKI,EAAKA,GAG9BE,EADK13G,KAAKka,KAAKs9F,EAAKA,EAAKC,EAAKA,GACPD,EAC7B,GAAIE,GAAmB5tC,EAAY,CACjC,MAAM6tC,EAAeD,EAAkBP,EAAe,EAAIE,EAAKD,EAC/D,OAAO,EAAIp3G,KAAKyP,IAAI8nG,EAAUI,EAC/B,CACD,OAAkB,EAAXJ,CACR,CAMD,mBAAAK,GACE,IAKIlzC,EALA+E,EAAU7zB,GACVi0B,EAAW/zB,GACXg0B,EAAa,EACbJ,EAAW,KACXE,EAAiB,EAEjButC,EAAc,EAEdnjH,KAAK0iH,UACPhyC,EAAcjE,GAAYzsE,KAAK0iH,QAAQtsC,YAAcp0B,IACrDmhE,EAAcnjH,KAAK0iH,QAAQvmG,YtH9SD,EsH+S1Bu5D,EAAW11E,KAAK0iH,QAAQjsC,cACxBb,EAAiB51E,KAAK0iH,QAAQ/rC,qBAAuB,EACrDd,EAAW71E,KAAK0iH,QAAQ7rC,eAAiB/0B,GACzC2zB,EAAUz1E,KAAK0iH,QAAQnsC,cAAgB30B,GACvCk0B,EAAa91E,KAAK0iH,QAAQ1rC,iBAAmBj1B,IAG/C,MAAMx+B,EAAMvjB,KAAKkjH,uBAAuBrtC,EAAUstC,EAAartC,GACzD+tC,EAAY73G,KAAKyP,IAAIzb,KAAKsiH,QAAStiH,KAAKwiH,UAAY,GAG1D,MAAO,CACL9xC,YAAaA,EACbyyC,YAAaA,EACb1vG,KALWzH,KAAKiZ,KAAK,EAAI4+F,EAAYtgG,GAMrCkyD,QAASA,EACTC,SAAUA,EACVE,eAAgBA,EAChBC,SAAUA,EACVC,WAAYA,EAEf,CAKD,MAAAj5B,GACE78C,KAAK2iH,eAAiB3iH,KAAK4jH,sBAC3B,MAAMnwG,EAAOzT,KAAK2iH,eAAelvG,KACjCzT,KAAKmiH,UAAY,GACjBniH,KAAKoiH,oBAAsB,KAC3BpiH,KAAKwT,MAAQ,CAACC,EAAMA,EACrB,CAQD,KAAAuvG,CAAMD,EAAe7yG,EAASgrB,GAO5B,GANAhrB,EAAQwH,MAAMwjB,EAAYA,GAE1BhrB,EAAQ0H,UAAUmrG,EAActvG,KAAO,EAAGsvG,EAActvG,KAAO,GAE/DzT,KAAK8jH,YAAY5zG,GAEblQ,KAAKqiH,MAAO,CACd,IAAIt4E,EAAQ/pC,KAAKqiH,MAAMjsC,WACT,OAAVrsC,IACFA,EAAQ4X,IAEVzxC,EAAQ0sB,UAAY6vC,GAAY1iC,GAChC75B,EAAQikE,MACT,CACG4uC,EAAcryC,cAChBxgE,EAAQwgE,YAAcqyC,EAAcryC,YACpCxgE,EAAQ80C,UAAY+9D,EAAcI,YAC9BJ,EAAcrtC,WAChBxlE,EAAQylE,YAAYotC,EAAcrtC,UAClCxlE,EAAQ0lE,eAAiBmtC,EAAcntC,gBAEzC1lE,EAAQulE,QAAUstC,EAActtC,QAChCvlE,EAAQ2lE,SAAWktC,EAAcltC,SACjC3lE,EAAQ4lE,WAAaitC,EAAcjtC,WACnC5lE,EAAQkkE,SAEX,CAOD,yBAAA0uC,CAA0BC,GACxB,IAAI7yG,EACJ,GAAIlQ,KAAKqiH,MAAO,CACd,IAAIt4E,EAAQ/pC,KAAKqiH,MAAMjsC,WAGnBxpC,EAAU,EACO,iBAAV7C,IACTA,EAAQ2B,GAAQ3B,IAEJ,OAAVA,EACF6C,EAAU,EACDvqC,MAAMC,QAAQynC,KACvB6C,EAA2B,IAAjB7C,EAAM5oC,OAAe4oC,EAAM,GAAK,GAE5B,IAAZ6C,IAGF18B,EAAUX,GAAsBwzG,EAActvG,KAAMsvG,EAActvG,MAClEzT,KAAK+jH,wBAAwBhB,EAAe7yG,GAE/C,CACD,OAAOA,EAAUA,EAAQN,OAAS5P,KAAKs7B,SAAS,EACjD,CAMD,WAAAwoF,CAAY5zG,GACV,IAAI6oF,EAAS/4F,KAAKy9B,QAClB,MAAM3V,EAAS9nB,KAAKsiH,QACpB,GAAIvpB,IAAWv+E,IACbtK,EAAQgkE,IAAI,EAAG,EAAGpsD,EAAQ,EAAG,EAAI9b,KAAK6T,QACjC,CACL,MAAM4iG,OAA4Bj8G,IAAlBxG,KAAKwiH,SAAyB16F,EAAS9nB,KAAKwiH,cACtCh8G,IAAlBxG,KAAKwiH,WACPzpB,GAAU,GAEZ,MAAMthE,EAAaz3B,KAAK09B,OAAS1xB,KAAK6T,GAAK,EACrCw+D,EAAQ,EAAIryE,KAAK6T,GAAMk5E,EAC7B,IAAK,IAAIn3F,EAAI,EAAGA,EAAIm3F,EAAQn3F,IAAK,CAC/B,MAAMoiH,EAASvsF,EAAa71B,EAAIy8E,EAC1B4lC,EAAUriH,EAAI,GAAM,EAAIkmB,EAAS26F,EACvCvyG,EAAQ4jE,OAAOmwC,EAAUj4G,KAAKwL,IAAIwsG,GAASC,EAAUj4G,KAAKyL,IAAIusG,GAC/D,CACD9zG,EAAQ6jE,WACT,CACF,CAOD,uBAAAgwC,CAAwBhB,EAAe7yG,GAErCA,EAAQ0H,UAAUmrG,EAActvG,KAAO,EAAGsvG,EAActvG,KAAO,GAE/DzT,KAAK8jH,YAAY5zG,GAEjBA,EAAQ0sB,UAAY+kB,GACpBzxC,EAAQikE,OACJ4uC,EAAcryC,cAChBxgE,EAAQwgE,YAAcqyC,EAAcryC,YACpCxgE,EAAQ80C,UAAY+9D,EAAcI,YAC9BJ,EAAcrtC,WAChBxlE,EAAQylE,YAAYotC,EAAcrtC,UAClCxlE,EAAQ0lE,eAAiBmtC,EAAcntC,gBAEzC1lE,EAAQ2lE,SAAWktC,EAAcltC,SACjC3lE,EAAQ4lE,WAAaitC,EAAcjtC,WACnC5lE,EAAQkkE,SAEX,EAGH,IAAA8vC,GAAehC,GCzkBf,MAAMiC,WAAoBjC,GAIxB,WAAApiH,CAAY4K,GAGVzF,MAAM,CACJ8zF,OAAQv+E,IACR25D,MAJFzpE,EAAUA,GAAoB,CAACod,OAAQ,IAIvBqsD,KACdrsD,OAAQpd,EAAQod,OAChBssD,OAAQ1pE,EAAQ0pE,OAChB18D,WAAyBlR,IAAlBkE,EAAQgN,MAAsBhN,EAAQgN,MAAQ,EACrDiF,cAA+BnW,IAArBkE,EAAQiS,SAAyBjS,EAAQiS,SAAW,EAC9DykG,oBAC6B56G,IAA3BkE,EAAQ02G,gBAA+B12G,EAAQ02G,eACjDI,kBAC2Bh7G,IAAzBkE,EAAQ82G,aAA6B92G,EAAQ82G,aAAe,CAAC,EAAG,GAClE/nC,cAAe/uE,EAAQ+uE,eAE1B,CAOD,KAAA3kE,GACE,MAAM4C,EAAQ1X,KAAK0hH,WACbpxG,EAAQ,IAAI6zG,GAAY,CAC5BhwC,KAAMn0E,KAAKq0E,UAAYr0E,KAAKq0E,UAAUv/D,aAAUtO,EAChD4tE,OAAQp0E,KAAKs0E,YAAct0E,KAAKs0E,YAAYx/D,aAAUtO,EACtDshB,OAAQ9nB,KAAKimB,YACbvO,MAAOrV,MAAMC,QAAQoV,GAASA,EAAM5T,QAAU4T,EAC9CiF,SAAU3c,KAAK61C,cACfurE,eAAgBphH,KAAKu3E,oBACrBiqC,aAAcxhH,KAAK2hH,kBAAkB79G,QACrC21E,cAAez5E,KAAK05E,qBAGtB,OADAppE,EAAMq+B,WAAW3uC,KAAK4tC,cACft9B,CACR,CAQD,SAAA6lF,CAAUruE,GACR9nB,KAAKsiH,QAAUx6F,EACf9nB,KAAK68C,QACN,EAGH,IAAAunE,GAAeD,GCjEf,MAAME,GAIJ,WAAAvkH,CAAY4K,GACVA,EAAUA,GAAW,GAMrB1K,KAAKskH,YAA2B99G,IAAlBkE,EAAQq/B,MAAsBr/B,EAAQq/B,MAAQ,IAC7D,CAOD,KAAAj1B,GACE,MAAMi1B,EAAQ/pC,KAAKo2E,WACnB,OAAO,IAAIiuC,GAAK,CACdt6E,MAAO1nC,MAAMC,QAAQynC,GAASA,EAAMjmC,QAAUimC,QAASvjC,GAE1D,CAOD,QAAA4vE,GACE,OAAOp2E,KAAKskH,MACb,CAQD,QAAAC,CAASx6E,GACP/pC,KAAKskH,OAASv6E,CACf,EAGH,IAAAy6E,GAAeH,GC/Cf,IAAII,GAAqB,KAEzB,MAAMC,WAAkBj9G,EAQtB,WAAA3H,CAAY+S,EAAO8nB,EAAKwB,EAAa6+C,EAAYjxC,GAC/C9kC,QAMAjF,KAAK2kH,mBAAqB,KAM1B3kH,KAAKq7B,OAASxoB,EAMd7S,KAAKq8B,aAAeF,EAMpBn8B,KAAKg8B,QAAU,GAMfh8B,KAAKskH,OAASv6E,EAMd/pC,KAAK4kH,iBAA6Bp+G,IAAfw0E,EAA2B9gD,GAAkB8gD,EAMhEh7E,KAAKwT,MACHX,GAASA,EAAMrD,OAASqD,EAAMpD,OAAS,CAACoD,EAAMrD,MAAOqD,EAAMpD,QAAU,KAMvEzP,KAAKs8B,KAAO3B,EAKZ36B,KAAK6kH,QACN,CAKD,gBAAAC,GACE9kH,KAAKq7B,OAAS,IAAIvsB,MACQ,OAAtB9O,KAAKq8B,eACPr8B,KAAKq7B,OAAOc,YAAcn8B,KAAKq8B,aAElC,CAMD,UAAA0oF,GACE,QAAsBv+G,IAAlBxG,KAAK6kH,UAA0B7kH,KAAK4kH,cAAgB1qF,GAAmB,CACpEuqF,KACHA,GAAqBl1G,GAAsB,EAAG,OAAG/I,EAAW,CAC1DsM,oBAAoB,KAGxB2xG,GAAmB1xG,UAAU/S,KAAKq7B,OAAQ,EAAG,GAC7C,IACEopF,GAAmBzxG,aAAa,EAAG,EAAG,EAAG,GACzChT,KAAK6kH,UAAW,CACjB,CAAC,MAAO5tG,GACPwtG,GAAqB,KACrBzkH,KAAK6kH,UAAW,CACjB,CACF,CACD,OAAyB,IAAlB7kH,KAAK6kH,QACb,CAKD,oBAAAG,GACEhlH,KAAK4F,cAAckB,EACpB,CAKD,iBAAA41B,GACE18B,KAAK4kH,YAAc1qF,GACnBl6B,KAAKglH,sBACN,CAKD,gBAAAjoF,GACE/8B,KAAK4kH,YAAc1qF,GACnBl6B,KAAKwT,MAAQ,CAACxT,KAAKq7B,OAAO7rB,MAAOxP,KAAKq7B,OAAO5rB,QAC7CzP,KAAKglH,sBACN,CAMD,QAAA1pF,CAASJ,GAKP,OAJKl7B,KAAKq7B,QACRr7B,KAAK8kH,mBAEP9kH,KAAKilH,cAAc/pF,GACZl7B,KAAKg8B,QAAQd,GAAcl7B,KAAKg8B,QAAQd,GAAcl7B,KAAKq7B,MACnE,CAMD,aAAAE,CAAcL,GAEZ,OADAl7B,KAAKilH,cAAc/pF,GACZl7B,KAAKg8B,QAAQd,GAAcA,EAAa,CAChD,CAKD,aAAAq+C,GACE,OAAOv5E,KAAK4kH,WACb,CAKD,oBAAAhD,GAIE,GAHK5hH,KAAKq7B,QACRr7B,KAAK8kH,oBAEF9kH,KAAK2kH,mBACR,GAAI3kH,KAAK+kH,aAAc,CACrB,MAAMv1G,EAAQxP,KAAKwT,MAAM,GACnB/D,EAASzP,KAAKwT,MAAM,GACpBtD,EAAUX,GAAsBC,EAAOC,GAC7CS,EAAQ2sB,SAAS,EAAG,EAAGrtB,EAAOC,GAC9BzP,KAAK2kH,mBAAqBz0G,EAAQN,MAC1C,MACQ5P,KAAK2kH,mBAAqB3kH,KAAKq7B,OAGnC,OAAOr7B,KAAK2kH,kBACb,CAMD,OAAAjxG,GACE,OAAO1T,KAAKwT,KACb,CAKD,MAAA0xG,GACE,OAAOllH,KAAKs8B,IACb,CAKD,IAAAjvB,GACE,GAAIrN,KAAK4kH,cAAgB1qF,GAAzB,CAGKl6B,KAAKq7B,QACRr7B,KAAK8kH,mBAGP9kH,KAAK4kH,YAAc1qF,GACnB,SACoB1zB,IAAdxG,KAAKs8B,OAC0Bt8B,KAAW,OAAE26B,IAAM36B,KAAKs8B,KAE5D,CAAC,MAAOrlB,GACPjX,KAAK08B,mBACN,CACG18B,KAAKq7B,kBAAkBK,kBACzBX,GAAe/6B,KAAKq7B,OAAQr7B,KAAKs8B,MAC9BxoB,MAAMjB,IACL7S,KAAKq7B,OAASxoB,EACd7S,KAAK+8B,kBAAkB,IAExBhpB,MAAM/T,KAAK08B,kBAAkBx1B,KAAKlH,MAnBtC,CAqBF,CAMD,aAAAilH,CAAc/pF,GACZ,IACGl7B,KAAKskH,QACNtkH,KAAKg8B,QAAQd,IACbl7B,KAAK4kH,cAAgB1qF,GAErB,OAGF,MAAMrnB,EAAQ7S,KAAKq7B,OACbzrB,EAASE,SAASC,cAAc,UACtCH,EAAOJ,MAAQxD,KAAKiZ,KAAKpS,EAAMrD,MAAQ0rB,GACvCtrB,EAAOH,OAASzD,KAAKiZ,KAAKpS,EAAMpD,OAASyrB,GAEzC,MAAMyB,EAAM/sB,EAAOI,WAAW,MAC9B2sB,EAAIjlB,MAAMwjB,EAAYA,GACtByB,EAAI5pB,UAAUF,EAAO,EAAG,GAExB8pB,EAAIogD,yBAA2B,WAC/BpgD,EAAIC,UAAYqO,GAASjrC,KAAKskH,QAC9B3nF,EAAIE,SAAS,EAAG,EAAGjtB,EAAOJ,MAAQ0rB,EAAYtrB,EAAOH,OAASyrB,GAE9DyB,EAAIogD,yBAA2B,iBAC/BpgD,EAAI5pB,UAAUF,EAAO,EAAG,GAExB7S,KAAKg8B,QAAQd,GAActrB,CAC5B,EAWI,SAASzG,GAAI0J,EAAOsyG,EAAUhpF,EAAa6+C,EAAYjxC,GAC5D,IAAIoC,OACW3lC,IAAb2+G,OACI3+G,EACAq4C,GAAe11C,IAAIg8G,EAAUhpF,EAAa4N,GAWhD,OAVKoC,IACHA,EAAY,IAAIu4E,GACd7xG,EACAA,aAAiB6oB,iBAAmB7oB,EAAM8nB,UAAOn0B,EAAY2+G,EAC7DhpF,EACA6+C,EACAjxC,GAEF8U,GAAe/0C,IAAIq7G,EAAUhpF,EAAa4N,EAAOoC,IAE5CA,CACT,CAEA,IAAAi5E,GAAeV,GCrOf,SAASW,GAAe71G,EAAOC,EAAQ61G,EAAaC,GAClD,YAAoB/+G,IAAhB8+G,QAA8C9+G,IAAjB++G,EACxB,CAACD,EAAc91G,EAAO+1G,EAAe91G,QAE1BjJ,IAAhB8+G,EACKA,EAAc91G,OAEFhJ,IAAjB++G,EACKA,EAAe91G,EAEjB,CACT,CAOA,MAAM+1G,WAAavE,GAIjB,WAAAnhH,CAAY4K,GAMV,MAAMkiC,OAA8BpmC,KALpCkE,EAAUA,GAAW,IAKGkiC,QAAwBliC,EAAQkiC,QAAU,EAK5DjwB,OAAgCnW,IAArBkE,EAAQiS,SAAyBjS,EAAQiS,SAAW,EAK/DjF,OAA0BlR,IAAlBkE,EAAQgN,MAAsBhN,EAAQgN,MAAQ,EAKtD0pG,OACuB56G,IAA3BkE,EAAQ02G,gBAA+B12G,EAAQ02G,eAEjDn8G,MAAM,CACJ2nC,QAASA,EACTjwB,SAAUA,EACVjF,MAAOA,EACP8pG,kBAC2Bh7G,IAAzBkE,EAAQ82G,aAA6B92G,EAAQ82G,aAAe,CAAC,EAAG,GAClEJ,eAAgBA,EAChB3nC,cAAe/uE,EAAQ+uE,gBAOzBz5E,KAAK48D,aAA6Bp2D,IAAnBkE,EAAQwiB,OAAuBxiB,EAAQwiB,OAAS,CAAC,GAAK,IAMrEltB,KAAKylH,kBAAoB,KAMzBzlH,KAAK0lH,mBACsBl/G,IAAzBkE,EAAQi7G,aAA6Bj7G,EAAQi7G,aAAe,WAM9D3lH,KAAK4lH,mBACsBp/G,IAAzBkE,EAAQm7G,aAA6Bn7G,EAAQm7G,aAAe,WAM9D7lH,KAAK8lH,mBACsBt/G,IAAzBkE,EAAQq7G,aAA6Br7G,EAAQq7G,aAAe,WAM9D/lH,KAAKq8B,kBACqB71B,IAAxBkE,EAAQyxB,YAA4BzxB,EAAQyxB,YAAc,KAE5D,MAAMtpB,OAAwBrM,IAAhBkE,EAAQ4vB,IAAoB5vB,EAAQ4vB,IAAM,KAExD,IAuBI0gD,EAvBAmqC,EAAWz6G,EAAQiwB,IAmFvB,GAjFA3mB,UACiBxN,IAAb2+G,GAA0BtyG,GAC5B,8DAGgBrM,IAAb2+G,GAA8C,IAApBA,EAAShkH,SAAiB0R,IACvDsyG,EAA2C,EAAQxqF,KAAOlyB,EAAOoK,IAEnEmB,QACexN,IAAb2+G,GAA0BA,EAAShkH,OAAS,EAC5C,6DAGF6S,WAEuBxN,IAAlBkE,EAAQ8E,YAA0ChJ,IAAnBkE,EAAQ+E,cACtBjJ,IAAlBkE,EAAQgN,OAEV,qEAIkBlR,IAAhBkE,EAAQiwB,IACVqgD,EAAa9gD,QACM1zB,IAAVqM,IAGLmoE,EAFAnoE,aAAiB6oB,iBACf7oB,EAAMmoB,SACKnoB,EAAM8nB,IAAMT,GAAoBA,GAEhCA,GAGFA,IAQjBl6B,KAAKskH,YAA2B99G,IAAlBkE,EAAQq/B,MAAsB2B,GAAQhhC,EAAQq/B,OAAS,KAMrE/pC,KAAKgmH,WAAaC,GAChBpzG,EACN,EACM7S,KAAKq8B,aACL2+C,EACAh7E,KAAKskH,QAOPtkH,KAAKkmH,aAA6B1/G,IAAnBkE,EAAQoQ,OAAuBpQ,EAAQoQ,OAAS,CAAC,EAAG,GAKnE9a,KAAKmmH,mBACsB3/G,IAAzBkE,EAAQ07G,aAA6B17G,EAAQ07G,aAAe,WAM9DpmH,KAAK0kF,QAAU,KAMf1kF,KAAKwT,WAAyBhN,IAAjBkE,EAAQ+I,KAAqB/I,EAAQ+I,KAAO,UAKnCjN,IAAlBkE,EAAQ8E,YAA0ChJ,IAAnBkE,EAAQ+E,OAAsB,CAC/D,IAAID,EAAOC,EACX,GAAI/E,EAAQ+I,MACTjE,EAAOC,GAAU/E,EAAQ+I,SACrB,CACL,MAAMZ,EAAQ7S,KAAKs7B,SAAS,GAC5B,GAAIzoB,EAAMrD,OAASqD,EAAMpD,OACvBD,EAAQqD,EAAMrD,MACdC,EAASoD,EAAMpD,YACV,GAAIoD,aAAiB6oB,iBAAkB,CAC5C17B,KAAKqmH,gBAAkB37G,EACvB,MAAM0iE,EAAS,KAEb,GADAptE,KAAKi7E,oBAAoB7N,IACpBptE,KAAKqmH,gBACR,OAEF,MAAMpvC,EAAYj3E,KAAKgmH,WAAWtyG,UAClC1T,KAAKgiH,SACHqD,GACEpuC,EAAU,GACVA,EAAU,GACVvsE,EAAQ8E,MACR9E,EAAQ+E,QAEX,EAGH,YADAzP,KAAKk7E,kBAAkB9N,EAExB,CACF,MACa5mE,IAAVgJ,GACFxP,KAAKgiH,SACHqD,GAAe71G,EAAOC,EAAQ/E,EAAQ8E,MAAO9E,EAAQ+E,QAG1D,CACF,CAOD,KAAAqF,GACE,IAAI4C,EAAOlI,EAAOC,EAQlB,OAPIzP,KAAKqmH,iBACP72G,EAAQxP,KAAKqmH,gBAAgB72G,MAC7BC,EAASzP,KAAKqmH,gBAAgB52G,SAE9BiI,EAAQ1X,KAAK0hH,WACbhqG,EAAQrV,MAAMC,QAAQoV,GAASA,EAAM5T,QAAU4T,GAE1C,IAAI8tG,GAAK,CACdt4F,OAAQltB,KAAK48D,QAAQ94D,QACrB6hH,aAAc3lH,KAAK0lH,cACnBG,aAAc7lH,KAAK4lH,cACnBG,aAAc/lH,KAAK8lH,cACnB/7E,MACE/pC,KAAKskH,QAAUtkH,KAAKskH,OAAOxgH,MACvB9D,KAAKskH,OAAOxgH,QACZ9D,KAAKskH,aAAU99G,EACrB21B,YAAan8B,KAAKq8B,aAClBvhB,OAAQ9a,KAAKkmH,QAAQpiH,QACrBsiH,aAAcpmH,KAAKmmH,cACnBv5E,QAAS5sC,KAAK4tC,aACdwzE,eAAgBphH,KAAKu3E,oBACrB56D,SAAU3c,KAAK61C,cACfn+B,QACAlI,QACAC,SACAgE,KAAqB,OAAfzT,KAAKwT,MAAiBxT,KAAKwT,MAAM1P,aAAU0C,EACjDm0B,IAAK36B,KAAKklH,SACV1D,aAAcxhH,KAAK2hH,kBAAkB79G,QACrC21E,cAAez5E,KAAK05E,oBAEvB,CAQD,SAAAtC,GACE,IAAIlqD,EAASltB,KAAKylH,kBAClB,IAAKv4F,EAAQ,CACXA,EAASltB,KAAK48D,QACd,MAAMnpD,EAAOzT,KAAK0T,UAClB,GACwB,YAAtB1T,KAAK4lH,eACiB,YAAtB5lH,KAAK8lH,cACL,CACA,IAAKryG,EACH,OAAO,KAETyZ,EAASltB,KAAK48D,QAAQ94D,QACI,YAAtB9D,KAAK4lH,gBACP14F,EAAO,IAAMzZ,EAAK,IAEM,YAAtBzT,KAAK8lH,gBACP54F,EAAO,IAAMzZ,EAAK,GAErB,CAED,GAA0B,YAAtBzT,KAAK0lH,cAA6B,CACpC,IAAKjyG,EACH,OAAO,KAELyZ,IAAWltB,KAAK48D,UAClB1vC,EAASltB,KAAK48D,QAAQ94D,SAGA,aAAtB9D,KAAK0lH,eACiB,gBAAtB1lH,KAAK0lH,gBAELx4F,EAAO,IAAMA,EAAO,GAAKzZ,EAAK,IAGR,eAAtBzT,KAAK0lH,eACiB,gBAAtB1lH,KAAK0lH,gBAELx4F,EAAO,IAAMA,EAAO,GAAKzZ,EAAK,GAEjC,CACDzT,KAAKylH,kBAAoBv4F,CAC1B,CACD,MAAMs0F,EAAexhH,KAAK2hH,kBACpBjqG,EAAQ1X,KAAKy3E,gBAGnB,MAAO,CACLvqD,EAAO,GAAKs0F,EAAa,GAAK9pG,EAAM,GACpCwV,EAAO,GAAKs0F,EAAa,GAAK9pG,EAAM,GAEvC,CASD,SAAA4uG,CAAUp5F,GACRltB,KAAK48D,QAAU1vC,EACfltB,KAAKylH,kBAAoB,IAC1B,CAOD,QAAArvC,GACE,OAAOp2E,KAAKskH,MACb,CASD,QAAAhpF,CAASJ,GACP,OAAOl7B,KAAKgmH,WAAW1qF,SAASJ,EACjC,CAQD,aAAAK,CAAcL,GACZ,OAAOl7B,KAAKgmH,WAAWzqF,cAAcL,EACtC,CAKD,YAAA2mF,GACE,OAAO7hH,KAAKgmH,WAAWtyG,SACxB,CAKD,aAAA6lE,GACE,OAAOv5E,KAAKgmH,WAAWzsC,eACxB,CAKD,oBAAAqoC,GACE,OAAO5hH,KAAKgmH,WAAWpE,sBACxB,CAOD,SAAAtqC,GACE,GAAIt3E,KAAK0kF,QACP,OAAO1kF,KAAK0kF,QAEd,IAAI5pE,EAAS9a,KAAKkmH,QAElB,GAA0B,YAAtBlmH,KAAKmmH,cAA6B,CACpC,MAAM1yG,EAAOzT,KAAK0T,UACZ6yG,EAAgBvmH,KAAKgmH,WAAWtyG,UACtC,IAAKD,IAAS8yG,EACZ,OAAO,KAETzrG,EAASA,EAAOhX,QAEQ,aAAtB9D,KAAKmmH,eACiB,gBAAtBnmH,KAAKmmH,gBAELrrG,EAAO,GAAKyrG,EAAc,GAAK9yG,EAAK,GAAKqH,EAAO,IAG1B,eAAtB9a,KAAKmmH,eACiB,gBAAtBnmH,KAAKmmH,gBAELrrG,EAAO,GAAKyrG,EAAc,GAAK9yG,EAAK,GAAKqH,EAAO,GAEnD,CAED,OADA9a,KAAK0kF,QAAU5pE,EACR9a,KAAK0kF,OACb,CAOD,MAAAwgC,GACE,OAAOllH,KAAKgmH,WAAWd,QACxB,CAOD,OAAAxxG,GACE,OAAQ1T,KAAKwT,MAAoCxT,KAAKwT,MAAjCxT,KAAKgmH,WAAWtyG,SACtC,CAOD,QAAAyI,GACE,MAAMzE,EAAQ1X,KAAKy3E,gBACnB,OAAIz3E,KAAKwT,MACAxT,KAAKwT,MAAM,GAAKkE,EAAM,GAE3B1X,KAAKgmH,WAAWzsC,iBAAmBr/C,GAC9Bl6B,KAAKgmH,WAAWtyG,UAAU,GAAKgE,EAAM,QAD9C,CAID,CAOD,SAAA0E,GACE,MAAM1E,EAAQ1X,KAAKy3E,gBACnB,OAAIz3E,KAAKwT,MACAxT,KAAKwT,MAAM,GAAKkE,EAAM,GAE3B1X,KAAKgmH,WAAWzsC,iBAAmBr/C,GAC9Bl6B,KAAKgmH,WAAWtyG,UAAU,GAAKgE,EAAM,QAD9C,CAID,CAQD,QAAAsqG,CAAStqG,UACA1X,KAAKqmH,gBACZphH,MAAM+8G,SAAStqG,EAChB,CAKD,iBAAAwjE,CAAkB31E,GAChBvF,KAAKgmH,WAAW1gH,iBAAiBwB,EAAkBvB,EACpD,CASD,IAAA8H,GACErN,KAAKgmH,WAAW34G,MACjB,CAKD,mBAAA4tE,CAAoB11E,GAClBvF,KAAKgmH,WAAW1/G,oBAAoBQ,EAAkBvB,EACvD,EAGH,IAAAihH,GAAehB,GC5hBf,MAAMiB,GAIJ,WAAA3mH,CAAY4K,GACVA,EAAUA,GAAW,GAMrB1K,KAAKskH,YAA2B99G,IAAlBkE,EAAQq/B,MAAsBr/B,EAAQq/B,MAAQ,KAM5D/pC,KAAK0mH,SAAWh8G,EAAQ+qE,QAMxBz1E,KAAK2mH,eAAiCngH,IAArBkE,EAAQgrE,SAAyBhrE,EAAQgrE,SAAW,KAMrE11E,KAAK4mH,gBAAkBl8G,EAAQkrE,eAM/B51E,KAAK6mH,UAAYn8G,EAAQmrE,SAMzB71E,KAAK8mH,YAAcp8G,EAAQorE,WAM3B91E,KAAK+mH,OAASr8G,EAAQ8E,KACvB,CAOD,KAAAsF,GACE,MAAMi1B,EAAQ/pC,KAAKo2E,WACnB,OAAO,IAAIqwC,GAAO,CAChB18E,MAAO1nC,MAAMC,QAAQynC,GAASA,EAAMjmC,QAAUimC,QAASvjC,EACvDivE,QAASz1E,KAAKu2E,aACdb,SAAU11E,KAAKy2E,cAAgBz2E,KAAKy2E,cAAc3yE,aAAU0C,EAC5DovE,eAAgB51E,KAAK22E,oBACrBd,SAAU71E,KAAK62E,cACff,WAAY91E,KAAKg3E,gBACjBxnE,MAAOxP,KAAKmc,YAEf,CAOD,QAAAi6D,GACE,OAAOp2E,KAAKskH,MACb,CAOD,UAAA/tC,GACE,OAAOv2E,KAAK0mH,QACb,CAOD,WAAAjwC,GACE,OAAOz2E,KAAK2mH,SACb,CAOD,iBAAAhwC,GACE,OAAO32E,KAAK4mH,eACb,CAOD,WAAA/vC,GACE,OAAO72E,KAAK6mH,SACb,CAOD,aAAA7vC,GACE,OAAOh3E,KAAK8mH,WACb,CAOD,QAAA3qG,GACE,OAAOnc,KAAK+mH,MACb,CAQD,QAAAxC,CAASx6E,GACP/pC,KAAKskH,OAASv6E,CACf,CAQD,UAAAi9E,CAAWvxC,GACTz1E,KAAK0mH,SAAWjxC,CACjB,CAQD,WAAAE,CAAYD,GACV11E,KAAK2mH,UAAYjxC,CAClB,CAQD,iBAAAuxC,CAAkBrxC,GAChB51E,KAAK4mH,gBAAkBhxC,CACxB,CAQD,WAAAsxC,CAAYrxC,GACV71E,KAAK6mH,UAAYhxC,CAClB,CAQD,aAAAsxC,CAAcrxC,GACZ91E,KAAK8mH,YAAchxC,CACpB,CAQD,QAAAsxC,CAAS53G,GACPxP,KAAK+mH,OAASv3G,CACf,EAGH,IAAA63G,GAAeZ,GC5Ef,MAAMa,GAIJ,WAAAxnH,CAAY4K,GACVA,EAAUA,GAAW,GAMrB1K,KAAK+4D,UAAY,KAMjB/4D,KAAKunH,kBAAoBC,QAEAhhH,IAArBkE,EAAQiK,UACV3U,KAAK4U,YAAYlK,EAAQiK,UAO3B3U,KAAKqiH,WAAyB77G,IAAjBkE,EAAQypE,KAAqBzpE,EAAQypE,KAAO,KAMzDn0E,KAAKq7B,YAA2B70B,IAAlBkE,EAAQmI,MAAsBnI,EAAQmI,MAAQ,KAM5D7S,KAAK08C,eAAiCl2C,IAArBkE,EAAQs5D,SAAyBt5D,EAAQs5D,SAAW,KAMrEhkE,KAAKynH,2BAC8BjhH,IAAjCkE,EAAQ2kE,qBACJ3kE,EAAQ2kE,qBACR,KAMNrvE,KAAK0iH,aAA6Bl8G,IAAnBkE,EAAQ0pE,OAAuB1pE,EAAQ0pE,OAAS,KAM/Dp0E,KAAKuyE,WAAyB/rE,IAAjBkE,EAAQg4C,KAAqBh4C,EAAQg4C,KAAO,KAMzD1iD,KAAK0nH,QAAUh9G,EAAQoiC,MACxB,CAOD,KAAAh4B,GACE,IAAIH,EAAW3U,KAAKiV,cAMpB,OALIN,GAAgC,iBAAbA,IACrBA,EAAgE,EAE9DG,SAEG,IAAIwyG,GAAM,CACf3yG,SAAUA,QAAYnO,EACtB2tE,KAAMn0E,KAAKq0E,UAAYr0E,KAAKq0E,UAAUv/D,aAAUtO,EAChDqM,MAAO7S,KAAKs7B,WAAat7B,KAAKs7B,WAAWxmB,aAAUtO,EACnDw9D,SAAUhkE,KAAKm+C,oBAAiB33C,EAChC4tE,OAAQp0E,KAAKs0E,YAAct0E,KAAKs0E,YAAYx/D,aAAUtO,EACtDk8C,KAAM1iD,KAAKu0E,UAAYv0E,KAAKu0E,UAAUz/D,aAAUtO,EAChDsmC,OAAQ9sC,KAAK2tC,aAEhB,CAQD,WAAAwQ,GACE,OAAOn+C,KAAK08C,SACb,CAQD,WAAAirE,CAAY3jD,GACVhkE,KAAK08C,UAAYsnB,CAClB,CAQD,uBAAA4jD,CAAwB5jD,GACtBhkE,KAAKynH,sBAAwBzjD,CAC9B,CAQD,uBAAAsX,GACE,OAAOt7E,KAAKynH,qBACb,CASD,WAAAxyG,GACE,OAAOjV,KAAK+4D,SACb,CAQD,mBAAA0b,GACE,OAAOz0E,KAAKunH,iBACb,CAOD,OAAAlzC,GACE,OAAOr0E,KAAKqiH,KACb,CAOD,OAAAQ,CAAQ1uC,GACNn0E,KAAKqiH,MAAQluC,CACd,CAOD,QAAA74C,GACE,OAAOt7B,KAAKq7B,MACb,CAOD,QAAAO,CAAS/oB,GACP7S,KAAKq7B,OAASxoB,CACf,CAOD,SAAAyhE,GACE,OAAOt0E,KAAK0iH,OACb,CAOD,SAAAO,CAAU7uC,GACRp0E,KAAK0iH,QAAUtuC,CAChB,CAOD,OAAAG,GACE,OAAOv0E,KAAKuyE,KACb,CAOD,OAAAs1C,CAAQnlE,GACN1iD,KAAKuyE,MAAQ7vB,CACd,CAOD,SAAA/U,GACE,OAAO3tC,KAAK0nH,OACb,CAUD,WAAA9yG,CAAYD,GACc,mBAAbA,EACT3U,KAAKunH,kBAAoB5yG,EACI,iBAAbA,EAChB3U,KAAKunH,kBAAoB,SAAU9nE,GACjC,OACEA,EAAQt2C,IAAIwL,EAEtB,EACgBA,OAEYnO,IAAbmO,IACT3U,KAAKunH,kBAAoB,WACvB,OAAA,CACR,GAJMvnH,KAAKunH,kBAAoBC,GAM3BxnH,KAAK+4D,UAAYpkD,CAClB,CAQD,SAAAk6B,CAAU/B,GACR9sC,KAAK0nH,QAAU56E,CAChB,EAWI,SAASg7E,GAAWp/G,GACzB,IAAIwxF,EAEJ,GAAmB,mBAARxxF,EACTwxF,EAAgBxxF,MACX,CAIL,IAAIgN,EACJ,GAAIrT,MAAMC,QAAQoG,GAChBgN,EAAShN,MACJ,CACLsL,GACgD,mBAArB,EAAe,UACxC,8CAGF0B,EAAS,CAD2B,EAErC,CACDwkF,EAAgB,WACd,OAAOxkF,CACb,CACG,CACD,OAAOwkF,CACT,CAKA,IAAI6tB,GAAgB,KAOb,SAASC,GAAmBvoE,EAAS/iC,GAM1C,IAAKqrG,GAAe,CAClB,MAAM5zC,EAAO,IAAIkwC,GAAK,CACpBt6E,MAAO,0BAEHqqC,EAAS,IAAIqyC,GAAO,CACxB18E,MAAO,UACPv6B,MAAO,OAETu4G,GAAgB,CACd,IAAIT,GAAM,CACRz0G,MAAO,IAAIsxG,GAAY,CACrBhwC,KAAMA,EACNC,OAAQA,EACRtsD,OAAQ,IAEVqsD,KAAMA,EACNC,OAAQA,IAGb,CACD,OAAO2zC,EACT,CAMO,SAASE,KAEd,MAAMvyG,EAAS,CAAA,EACTypB,EAAQ,CAAC,IAAK,IAAK,IAAK,GACxB4B,EAAO,CAAC,EAAG,IAAK,IAAK,GAmD3B,OAjDArrB,EAAgB,QAAI,CAClB,IAAI4xG,GAAM,CACRnzC,KAAM,IAAIkwC,GAAK,CACbt6E,MAAO,CAAC,IAAK,IAAK,IAAK,SAI7Br0B,EAAqB,aAAIA,EAAgB,QAEzCA,EAAmB,WAAI,CACrB,IAAI4xG,GAAM,CACRlzC,OAAQ,IAAIqyC,GAAO,CACjB18E,MAAO5K,EACP3vB,MAAOA,MAGX,IAAI83G,GAAM,CACRlzC,OAAQ,IAAIqyC,GAAO,CACjB18E,MAAOhJ,EACPvxB,MApBQ,OAwBdkG,EAAwB,gBAAIA,EAAmB,WAE/CA,EAAe,OAAIA,EAAgB,QAAEqgF,OAAOrgF,EAAmB,YAE/DA,EAAc,MAAI,CAChB,IAAI4xG,GAAM,CACRz0G,MAAO,IAAIsxG,GAAY,CACrBr8F,OAAQtY,EACR2kE,KAAM,IAAIkwC,GAAK,CACbt6E,MAAOhJ,IAETqzC,OAAQ,IAAIqyC,GAAO,CACjB18E,MAAO5K,EACP3vB,MAAOA,QAGXs9B,OAAQtyB,OAGZ9E,EAAmB,WAAIA,EAAc,MAErCA,EAA2B,mBAAIA,EAAgB,QAAEqgF,OAC/CrgF,EAAmB,WACnBA,EAAc,OAGTA,CACT,CAOA,SAAS8xG,GAAwB/nE,GAC/B,OAAOA,EAAQxqC,aACjB,CAEA,IAAAizG,GAAeZ,GCjff,MAAMa,GAIJ,WAAAroH,CAAY4K,GACVA,EAAUA,GAAW,GAMrB1K,KAAKooH,MAAQ19G,EAAQ64C,KAMrBvjD,KAAK4yD,UAAYloD,EAAQiS,SAMzB3c,KAAKmhH,gBAAkBz2G,EAAQ02G,eAM/BphH,KAAKqhH,OAAS32G,EAAQgN,MAMtB1X,KAAKshH,YAAcxiD,QAAyBt4D,IAAlBkE,EAAQgN,MAAsBhN,EAAQgN,MAAQ,GAMxE1X,KAAKuyE,MAAQ7nE,EAAQg4C,KAMrB1iD,KAAKqoH,WAAa39G,EAAQurE,UAM1Bj2E,KAAKsoH,SAAW59G,EAAQ69G,QAMxBvoH,KAAKwoH,QAAU99G,EAAQ+9G,OAMvBzoH,KAAK0oH,cAAgBh+G,EAAQwrE,aAM7Bl2E,KAAKqiH,WACc77G,IAAjBkE,EAAQypE,KACJzpE,EAAQypE,KACR,IAAIkwC,GAAK,CAACt6E,MAzHO,SA+HvB/pC,KAAK2oH,eACkBniH,IAArBkE,EAAQk+G,SAAyBl+G,EAAQk+G,SAAW58G,KAAK6T,GAAK,EAMhE7f,KAAK6oH,gBACmBriH,IAAtBkE,EAAQo+G,UAA0Bp+G,EAAQo+G,UAAY,QAMxD9oH,KAAK+oH,YAAcr+G,EAAQg2D,SAM3B1gE,KAAK0iH,aAA6Bl8G,IAAnBkE,EAAQ0pE,OAAuB1pE,EAAQ0pE,OAAS,KAM/Dp0E,KAAKgpH,cAA+BxiH,IAApBkE,EAAQ8qC,QAAwB9qC,EAAQ8qC,QAAU,EAMlEx1C,KAAKipH,cAA+BziH,IAApBkE,EAAQ+qC,QAAwB/qC,EAAQ+qC,QAAU,EAMlEz1C,KAAKkpH,gBAAkBx+G,EAAQy+G,eAC3Bz+G,EAAQy+G,eACR,KAMJnpH,KAAKopH,kBAAoB1+G,EAAQ2+G,iBAC7B3+G,EAAQ2+G,iBACR,KAMJrpH,KAAK20C,cAA+BnuC,IAApBkE,EAAQkqC,QAAwB,KAAOlqC,EAAQkqC,OAChE,CAOD,KAAA9/B,GACE,MAAM4C,EAAQ1X,KAAK0hH,WACnB,OAAO,IAAIyG,GAAK,CACd5kE,KAAMvjD,KAAKq4E,UACXywC,UAAW9oH,KAAKspH,eAChBb,OAAQzoH,KAAKupH,YACbX,SAAU5oH,KAAKwpH,cACf9oD,SAAU1gE,KAAKypH,cACf9sG,SAAU3c,KAAK61C,cACfurE,eAAgBphH,KAAKu3E,oBACrB7/D,MAAOrV,MAAMC,QAAQoV,GAASA,EAAM5T,QAAU4T,EAC9CgrC,KAAM1iD,KAAKu0E,UACX0B,UAAWj2E,KAAK+4E,eAChBwvC,QAASvoH,KAAK0pH,aACdxzC,aAAcl2E,KAAKi5E,kBACnB9E,KAAMn0E,KAAKq0E,UAAYr0E,KAAKq0E,UAAUv/D,aAAUtO,EAChD4tE,OAAQp0E,KAAKs0E,YAAct0E,KAAKs0E,YAAYx/D,aAAUtO,EACtDgvC,QAASx1C,KAAKu4E,aACd9iC,QAASz1C,KAAKy4E,aACd0wC,eAAgBnpH,KAAK2pH,oBACjB3pH,KAAK2pH,oBAAoB70G,aACzBtO,EACJ6iH,iBAAkBrpH,KAAK4pH,sBACnB5pH,KAAK4pH,sBAAsB90G,aAC3BtO,EACJouC,QAAS50C,KAAK6pH,mBAAgBrjH,GAEjC,CAOD,WAAAijH,GACE,OAAOzpH,KAAK+oH,SACb,CAOD,OAAA1wC,GACE,OAAOr4E,KAAKooH,KACb,CAOD,WAAAoB,GACE,OAAOxpH,KAAK2oH,SACb,CAOD,YAAAW,GACE,OAAOtpH,KAAK6oH,UACb,CAOD,SAAAU,GACE,OAAOvpH,KAAKwoH,OACb,CAOD,UAAAjwC,GACE,OAAOv4E,KAAKgpH,QACb,CAOD,UAAAvwC,GACE,OAAOz4E,KAAKipH,QACb,CAOD,OAAA50C,GACE,OAAOr0E,KAAKqiH,KACb,CAOD,iBAAA9qC,GACE,OAAOv3E,KAAKmhH,eACb,CAOD,WAAAtrE,GACE,OAAO71C,KAAK4yD,SACb,CAOD,QAAA8uD,GACE,OAAO1hH,KAAKqhH,MACb,CAMD,aAAA5pC,GACE,OAAOz3E,KAAKshH,WACb,CAOD,SAAAhtC,GACE,OAAOt0E,KAAK0iH,OACb,CAOD,OAAAnuC,GACE,OAAOv0E,KAAKuyE,KACb,CAOD,YAAAwG,GACE,OAAO/4E,KAAKqoH,UACb,CAOD,UAAAqB,GACE,OAAO1pH,KAAKsoH,QACb,CAOD,eAAArvC,GACE,OAAOj5E,KAAK0oH,aACb,CAOD,iBAAAiB,GACE,OAAO3pH,KAAKkpH,eACb,CAOD,mBAAAU,GACE,OAAO5pH,KAAKopH,iBACb,CAOD,UAAAS,GACE,OAAO7pH,KAAK20C,QACb,CAQD,WAAAm1E,CAAYppD,GACV1gE,KAAK+oH,UAAYroD,CAClB,CAQD,OAAAqpD,CAAQxmE,GACNvjD,KAAKooH,MAAQ7kE,CACd,CAQD,WAAAymE,CAAYpB,GACV5oH,KAAK2oH,UAAYC,CAClB,CAQD,UAAAqB,CAAWz0E,GACTx1C,KAAKgpH,SAAWxzE,CACjB,CAQD,UAAA00E,CAAWz0E,GACTz1C,KAAKipH,SAAWxzE,CACjB,CAQD,YAAA00E,CAAarB,GACX9oH,KAAK6oH,WAAaC,CACnB,CAOD,SAAAsB,CAAU3B,GACRzoH,KAAKwoH,QAAUC,CAChB,CAQD,iBAAA1G,CAAkBX,GAChBphH,KAAKmhH,gBAAkBC,CACxB,CAQD,OAAAyB,CAAQ1uC,GACNn0E,KAAKqiH,MAAQluC,CACd,CAQD,WAAAl/B,CAAYt4B,GACV3c,KAAK4yD,UAAYj2C,CAClB,CAQD,QAAAqlG,CAAStqG,GACP1X,KAAKqhH,OAAS3pG,EACd1X,KAAKshH,YAAcxiD,QAAiBt4D,IAAVkR,EAAsBA,EAAQ,EACzD,CAQD,SAAAurG,CAAU7uC,GACRp0E,KAAK0iH,QAAUtuC,CAChB,CAQD,OAAAyzC,CAAQnlE,GACN1iD,KAAKuyE,MAAQ7vB,CACd,CAQD,YAAA2nE,CAAap0C,GACXj2E,KAAKqoH,WAAapyC,CACnB,CAQD,UAAAq0C,CAAW/B,GACTvoH,KAAKsoH,SAAWC,CACjB,CAQD,eAAAgC,CAAgBr0C,GACdl2E,KAAK0oH,cAAgBxyC,CACtB,CAQD,iBAAAs0C,CAAkBr2C,GAChBn0E,KAAKkpH,gBAAkB/0C,CACxB,CAQD,mBAAAs2C,CAAoBr2C,GAClBp0E,KAAKopH,kBAAoBh1C,CAC1B,CAQD,UAAAs2C,CAAW91E,GACT50C,KAAK20C,SAAWC,CACjB,EAGH,IAAA+1E,GAAexC,GCnVR,SAASH,KACd,MAAO,CACL,aAAc,wBACd,eAAgB,UAChB,eAAgB,KAChB,gBAAiB,EACjB,oBAAqB,wBACrB,sBAAuB,KACvB,sBAAuB,UAE3B,CCzBA,IAAA4C,GAnPA,MAKE,WAAA9qH,CAAYm3B,GAKVj3B,KAAK6qH,OAML7qH,KAAK8qH,MAML9qH,KAAK+qH,MAML/qH,KAAKgrH,eAAyBxkH,IAAbywB,GAAgCA,EAMjDj3B,KAAKirH,QAAU,CAChB,CAOD,UAAAC,CAAW/oH,GAET,MAAMkJ,EAAO,CACXK,UAAMlF,EACN2kH,UAAM3kH,EACNrE,KAAMA,GAGFssE,EAAOzuE,KAAK+qH,MAGlB,GAAKt8C,EAOE,CAEL,MAAM08C,EAAO18C,EAAK08C,KAClB9/G,EAAKK,KAAO+iE,EACZpjE,EAAK8/G,KAAOA,EACZ18C,EAAK08C,KAAO9/G,EACR8/G,IACFA,EAAKz/G,KAAOL,GAGVojE,IAASzuE,KAAK8qH,QAChB9qH,KAAK8qH,MAAQz/G,EAEhB,MAnBCrL,KAAK6qH,OAASx/G,EACdrL,KAAK8qH,MAAQz/G,EACTrL,KAAKgrH,YACP3/G,EAAK8/G,KAAO9/G,EACZA,EAAKK,KAAOL,GAgBhBrL,KAAK+qH,MAAQ1/G,EACbrL,KAAKirH,SACN,CAMD,UAAAG,GACE,MAAM38C,EAAOzuE,KAAK+qH,MAClB,GAAIt8C,EAAM,CACR,MAAM08C,EAAO18C,EAAK08C,KACZz/G,EAAO+iE,EAAK/iE,KACdy/G,IACFA,EAAKz/G,KAAOA,GAEVA,IACFA,EAAKy/G,KAAOA,GAEdnrH,KAAK+qH,MAAQI,GAAQz/G,EAEjB1L,KAAK6qH,SAAW7qH,KAAK8qH,OACvB9qH,KAAK+qH,WAAQvkH,EACbxG,KAAK6qH,YAASrkH,EACdxG,KAAK8qH,WAAQtkH,GACJxG,KAAK6qH,SAAWp8C,EACzBzuE,KAAK6qH,OAAS7qH,KAAK+qH,MACV/qH,KAAK8qH,QAAUr8C,IACxBzuE,KAAK8qH,MAAQp/G,EAAO1L,KAAK+qH,MAAMr/G,KAAO1L,KAAK+qH,OAE7C/qH,KAAKirH,SACN,CACF,CAOD,SAAAI,GAEE,GADArrH,KAAK+qH,MAAQ/qH,KAAK6qH,OACd7qH,KAAK+qH,MACP,OAAO/qH,KAAK+qH,MAAM5oH,IAGrB,CAOD,QAAAmpH,GAEE,GADAtrH,KAAK+qH,MAAQ/qH,KAAK8qH,MACd9qH,KAAK+qH,MACP,OAAO/qH,KAAK+qH,MAAM5oH,IAGrB,CAOD,QAAAopH,GACE,GAAIvrH,KAAK+qH,OAAS/qH,KAAK+qH,MAAMI,KAE3B,OADAnrH,KAAK+qH,MAAQ/qH,KAAK+qH,MAAMI,KACjBnrH,KAAK+qH,MAAM5oH,IAGrB,CAOD,WAAAqpH,GACE,GAAIxrH,KAAK+qH,OAAS/qH,KAAK+qH,MAAMI,KAC3B,OAAOnrH,KAAK+qH,MAAMI,KAAKhpH,IAG1B,CAOD,QAAAspH,GACE,GAAIzrH,KAAK+qH,OAAS/qH,KAAK+qH,MAAMr/G,KAE3B,OADA1L,KAAK+qH,MAAQ/qH,KAAK+qH,MAAMr/G,KACjB1L,KAAK+qH,MAAM5oH,IAGrB,CAOD,WAAAupH,GACE,GAAI1rH,KAAK+qH,OAAS/qH,KAAK+qH,MAAMr/G,KAC3B,OAAO1L,KAAK+qH,MAAMr/G,KAAKvJ,IAG1B,CAOD,WAAAwpH,GACE,GAAI3rH,KAAK+qH,MACP,OAAO/qH,KAAK+qH,MAAM5oH,IAGrB,CAMD,YAAAypH,GACM5rH,KAAKgrH,WAAahrH,KAAK+qH,QACzB/qH,KAAK6qH,OAAS7qH,KAAK+qH,MACnB/qH,KAAK8qH,MAAQ9qH,KAAK+qH,MAAMr/G,KAE3B,CAMD,MAAAqqF,CAAO81B,GACL,GAAIA,EAAKd,MAAO,CACd,GAAI/qH,KAAK+qH,MAAO,CACd,MAAM/oH,EAAMhC,KAAK+qH,MAAMI,KACvBnrH,KAAK+qH,MAAMI,KAAOU,EAAKhB,OACvBgB,EAAKhB,OAAOn/G,KAAO1L,KAAK+qH,MACxB/oH,EAAI0J,KAAOmgH,EAAKf,MAChBe,EAAKf,MAAMK,KAAOnpH,EAClBhC,KAAKirH,SAAWY,EAAKZ,OAC7B,MACQjrH,KAAK+qH,MAAQc,EAAKd,MAClB/qH,KAAK6qH,OAASgB,EAAKhB,OACnB7qH,KAAK8qH,MAAQe,EAAKf,MAClB9qH,KAAKirH,QAAUY,EAAKZ,QAEtBY,EAAKd,WAAQvkH,EACbqlH,EAAKhB,YAASrkH,EACdqlH,EAAKf,WAAQtkH,EACbqlH,EAAKZ,QAAU,CAChB,CACF,CAOD,SAAAjgH,GACE,OAAOhL,KAAKirH,OACb,GCxPH,MAAMa,GACY,EADZA,GAEQ,EAFRA,GAGI,EAHJA,GAIQ,EAJRA,GAKI,EALJA,GAMQ,EANRA,GAOQ,EAPRA,GAQU,EARVA,GASE,EATFA,GAUa,EAVbA,GAWY,GAXZA,GAYc,GAZdA,GAaI,GAMGC,GAAkB,CAACD,IAKnBE,GAAoB,CAACF,IAKrBG,GAAuB,CAACH,IAKxBI,GAAuB,CAACJ,ICimBrC,IAAAK,GA5mBA,cAA4Bl7C,GAO1B,WAAAnxE,CAAYob,EAAWg1B,EAAWxzB,EAAYwe,GAC5Cj2B,QAMAjF,KAAKkb,UAAYA,EAOjBlb,KAAKkwC,UAAYA,EAMjBlwC,KAAKk7B,WAAaA,EAMlBl7B,KAAKosH,aAAe,EAOpBpsH,KAAK0c,WAAaA,EAMlB1c,KAAKqsH,2BAA6B,KAMlCrsH,KAAKssH,2BAA6B,KAMlCtsH,KAAKusH,mBAAqB,KAM1BvsH,KAAKwsH,aAAe,GAMpBxsH,KAAKsZ,YAAc,GAMnBtZ,KAAKysH,eAAiB,GAMtBzsH,KAAK0sH,yBAA2B,GAMhC1sH,KAAKuM,MAA+D,CAAE,CACvE,CAOD,eAAAogH,CAAgBC,GACd,MAAM1xF,EAAal7B,KAAKk7B,WACxB,OAAqB,GAAdA,EACH0xF,EACAA,EAAUhiF,KAAI,SAAUiiF,GACtB,OAAOA,EAAO3xF,CACxB,GACG,CAQD,0BAAA4xF,CAA2BjyG,EAAiBE,GAC1C,MAAMxB,EAASvZ,KAAK+sH,uBACdhtE,EAAW//C,KAAKysH,eAChBnzG,EAActZ,KAAKsZ,YACzB,IAAI0zG,EAAQ1zG,EAAYnY,OACxB,IAAK,IAAIS,EAAI,EAAGuE,EAAK0U,EAAgB1Z,OAAQS,EAAIuE,EAAIvE,GAAKmZ,EACxDglC,EAAS,GAAKllC,EAAgBjZ,GAC9Bm+C,EAAS,GAAKllC,EAAgBjZ,EAAI,GAC9BiY,GAAmBN,EAAQwmC,KAC7BzmC,EAAY0zG,KAAWjtE,EAAS,GAChCzmC,EAAY0zG,KAAWjtE,EAAS,IAGpC,OAAOitE,CACR,CAYD,yBAAAC,CACEpyG,EACAC,EACA9Y,EACA+Y,EACAmyG,EACAC,GAEA,MAAM7zG,EAActZ,KAAKsZ,YACzB,IAAI0zG,EAAQ1zG,EAAYnY,OACxB,MAAMoY,EAASvZ,KAAK+sH,uBAChBI,IACFryG,GAAUC,GAEZ,IAAIqyG,EAAavyG,EAAgBC,GAC7BuyG,EAAaxyG,EAAgBC,EAAS,GAC1C,MAAMwyG,EAAYttH,KAAKysH,eACvB,IAEI7qH,EAAG2rH,EAASC,EAFZC,GAAU,EAGd,IAAK7rH,EAAIkZ,EAASC,EAAQnZ,EAAII,EAAKJ,GAAKmZ,EACtCuyG,EAAU,GAAKzyG,EAAgBjZ,GAC/B0rH,EAAU,GAAKzyG,EAAgBjZ,EAAI,GACnC4rH,EAAUtzG,GAAuBX,EAAQ+zG,GACrCE,IAAYD,GACVE,IACFn0G,EAAY0zG,KAAWI,EACvB9zG,EAAY0zG,KAAWK,EACvBI,GAAU,GAEZn0G,EAAY0zG,KAAWM,EAAU,GACjCh0G,EAAY0zG,KAAWM,EAAU,IACxBE,IAAY10G,GAAaE,cAClCM,EAAY0zG,KAAWM,EAAU,GACjCh0G,EAAY0zG,KAAWM,EAAU,GACjCG,GAAU,GAEVA,GAAU,EAEZL,EAAaE,EAAU,GACvBD,EAAaC,EAAU,GACvBC,EAAUC,EAQZ,OAJKN,GAAUO,GAAY7rH,IAAMkZ,EAASC,KACxCzB,EAAY0zG,KAAWI,EACvB9zG,EAAY0zG,KAAWK,GAElBL,CACR,CAUD,sBAAAU,CAAuB7yG,EAAiBC,EAAQ4V,EAAM3V,EAAQ4yG,GAC5D,IAAK,IAAI/rH,EAAI,EAAGuE,EAAKuqB,EAAKvvB,OAAQS,EAAIuE,IAAMvE,EAAG,CAC7C,MAAMI,EAAM0uB,EAAK9uB,GACXgsH,EAAa5tH,KAAKitH,0BACtBpyG,EACAC,EACA9Y,EACA+Y,GACA,GACA,GAEF4yG,EAAYhoH,KAAKioH,GACjB9yG,EAAS9Y,CACV,CACD,OAAO8Y,CACR,CAQD,UAAAs0D,CAAWz6D,EAAU8qC,EAASukB,EAAUqL,GACtCrvE,KAAK6tH,cAAcl5G,EAAU8qC,GAE7B,MAAM1/C,EAAO4U,EAAS6Z,UAChBzT,EAASpG,EAAS2a,YAClBw+F,EAAe9tH,KAAKsZ,YAAYnY,OAEtC,IAAI0Z,EAAiB+yG,EAAYD,EAAaI,EAC1CjzG,EAEJ,OAAQ/a,GACN,IAAK,eACH8a,EAC8D,EAE1D0b,6BACJw3F,EAAe,GACf,MAAMn9F,EACwD,EAE1DskD,WACJp6D,EAAS,EACT,IAAK,IAAIlZ,EAAI,EAAGuE,EAAKyqB,EAAMzvB,OAAQS,EAAIuE,IAAMvE,EAAG,CAC9C,MAAMosH,EAAS,GACflzG,EAAS9a,KAAK0tH,uBACZ7yG,EACAC,EACA8V,EAAMhvB,GACNmZ,EACAizG,GAEFD,EAAapoH,KAAKqoH,EACnB,CACDhuH,KAAKwsH,aAAa7mH,KAAK,CACrBsoH,GACAH,EACAC,EACAp5G,EACAqvD,EACArxC,KAEF3yB,KAAK0sH,yBAAyB/mH,KAAK,CACjCsoH,GACAH,EACAC,EACAp5G,EACA06D,GAAwBrL,EACxBrxC,KAEF,MACF,IAAK,UACL,IAAK,kBACHg7F,EAAc,GACd9yG,EACU,WAAR9a,EAC2D,EAErDw2B,6BACF5hB,EAAS0a,qBACfvU,EAAS9a,KAAK0tH,uBACZ7yG,EACA,EACuG,EAErG4b,UACF1b,EACA4yG,GAEF3tH,KAAKwsH,aAAa7mH,KAAK,CACrBsoH,GACAH,EACAH,EACAh5G,EACAqvD,EACAtxC,KAEF1yB,KAAK0sH,yBAAyB/mH,KAAK,CACjCsoH,GACAH,EACAH,EACAh5G,EACA06D,GAAwBrL,EACxBtxC,KAEF,MACF,IAAK,aACL,IAAK,SACH7X,EAAkBlG,EAAS0a,qBAC3Bu+F,EAAa5tH,KAAKitH,0BAChBpyG,EACA,EACAA,EAAgB1Z,OAChB4Z,GACA,GACA,GAEF/a,KAAKwsH,aAAa7mH,KAAK,CACrBsoH,GACAH,EACAF,EACAj5G,EACAqvD,EACAvxC,KAEFzyB,KAAK0sH,yBAAyB/mH,KAAK,CACjCsoH,GACAH,EACAF,EACAj5G,EACA06D,GAAwBrL,EACxBvxC,KAEF,MACF,IAAK,aACH5X,EAAkBlG,EAAS0a,qBAC3Bu+F,EAAa5tH,KAAK8sH,2BAA2BjyG,EAAiBE,GAE1D6yG,EAAaE,IACf9tH,KAAKwsH,aAAa7mH,KAAK,CACrBsoH,GACAH,EACAF,EACAj5G,EACAqvD,EACAvxC,KAEFzyB,KAAK0sH,yBAAyB/mH,KAAK,CACjCsoH,GACAH,EACAF,EACAj5G,EACA06D,GAAwBrL,EACxBvxC,MAGJ,MACF,IAAK,QACH5X,EAAkBlG,EAAS0a,qBAC3BrvB,KAAKsZ,YAAY3T,KAAKkV,EAAgB,GAAIA,EAAgB,IAC1D+yG,EAAa5tH,KAAKsZ,YAAYnY,OAE9BnB,KAAKwsH,aAAa7mH,KAAK,CACrBsoH,GACAH,EACAF,EACAj5G,EACAqvD,IAEFhkE,KAAK0sH,yBAAyB/mH,KAAK,CACjCsoH,GACAH,EACAF,EACAj5G,EACA06D,GAAwBrL,IAK9BhkE,KAAKkuH,YAAYzuE,EAClB,CAOD,aAAAouE,CAAcl5G,EAAU8qC,GACtBz/C,KAAKqsH,2BAA6B,CAChC4B,GACAxuE,EACA,EACA9qC,GAEF3U,KAAKwsH,aAAa7mH,KAAK3F,KAAKqsH,4BAC5BrsH,KAAKssH,2BAA6B,CAChC2B,GACAxuE,EACA,EACA9qC,GAEF3U,KAAK0sH,yBAAyB/mH,KAAK3F,KAAKssH,2BACzC,CAKD,MAAA6B,GACE,MAAO,CACL3B,aAAcxsH,KAAKwsH,aACnBE,yBAA0B1sH,KAAK0sH,yBAC/BpzG,YAAatZ,KAAKsZ,YAErB,CAKD,+BAAA80G,GACE,MAAM1B,EAA2B1sH,KAAK0sH,yBAItC,IAAI9qH,EAFJ8qH,EAAyBjb,UAGzB,MAAM9vG,EAAI+qH,EAAyBvrH,OACnC,IAAIktH,EACAtuH,EACAgC,GAAS,EACb,IAAKH,EAAI,EAAGA,EAAID,IAAKC,EACnBysH,EAAc3B,EAAyB9qH,GACvC7B,EAA0DsuH,EAAY,GAClEtuH,GAAQkuH,GACVlsH,EAAQH,EACC7B,GAAQkuH,KACjBI,EAAY,GAAKzsH,EACjBE,EAAgB9B,KAAK0sH,yBAA0B3qH,EAAOH,GACtDG,GAAS,EAGd,CAMD,kBAAA0uE,CAAmB7zC,EAAW8zC,GAC5B,MAAMnkE,EAAQvM,KAAKuM,MACnB,GAAIqwB,EAAW,CACb,MAAMu5C,EAAiBv5C,EAAUw5C,WACjC7pE,EAAMqwB,UAAY6vC,GAChB0J,GAAkCx0B,GAE1C,MACMp1C,EAAMqwB,eAAYp2B,EAEpB,GAAIkqE,EAAa,CACf,MAAM2F,EAAmB3F,EAAY0F,WACrC7pE,EAAMmkE,YAAcjE,GAClB4J,GAAsCr0B,IAExC,MAAMs0B,EAAqB5F,EAAY6F,aACvChqE,EAAMkpE,aACmBjvE,IAAvB8vE,EAAmCA,EAAqB10B,GAC1D,MAAM40B,EAAsB9F,EAAY+F,cACxClqE,EAAMmpE,SAAWc,EACbA,EAAoB1yE,QACpB+9C,GACJ,MAAM60B,EAA4BhG,EAAYiG,oBAC9CpqE,EAAMqpE,eAAiBc,GjI9XQ,EiIiY/B,MAAME,EAAsBlG,EAAYmG,cACxCtqE,EAAMspE,cACoBrvE,IAAxBowE,EACIA,EACA90B,GACN,MAAMg1B,EAAmBpG,EAAYv0D,WACrC5P,EAAMy4C,eACiBx+C,IAArBswE,EAAiCA,EjI9VT,EiI+V1B,MAAMC,EAAwBrG,EAAYsG,gBAC1CzqE,EAAMupE,gBACsBtvE,IAA1BuwE,EACIA,EACAh1B,GAEFx1C,EAAMy4C,UAAYhlD,KAAKosH,eACzBpsH,KAAKosH,aAAe7/G,EAAMy4C,UAE1BhlD,KAAKusH,mBAAqB,KAElC,MACMhgH,EAAMmkE,iBAAclqE,EACpB+F,EAAMkpE,aAAUjvE,EAChB+F,EAAMmpE,SAAW,KACjBnpE,EAAMqpE,oBAAiBpvE,EACvB+F,EAAMspE,cAAWrvE,EACjB+F,EAAMy4C,eAAYx+C,EAClB+F,EAAMupE,gBAAatvE,CAEtB,CAMD,UAAA8nH,CAAW/hH,GACT,MAAMqwB,EAAYrwB,EAAMqwB,UAElBmvF,EAAkB,CAACkC,GAAkCrxF,GAK3D,MAJyB,iBAAdA,GAETmvF,EAAgBpmH,MAAK,GAEhBomH,CACR,CAKD,WAAAwC,CAAYhiH,GACVvM,KAAKwsH,aAAa7mH,KAAK3F,KAAKwuH,aAAajiH,GAC1C,CAMD,YAAAiiH,CAAajiH,GACX,MAAO,CACL0hH,GACA1hH,EAAMmkE,YACNnkE,EAAMy4C,UAAYhlD,KAAKk7B,WACvB3uB,EAAMkpE,QACNlpE,EAAMspE,SACNtpE,EAAMupE,WACN91E,KAAK2sH,gBAAgBpgH,EAAMmpE,UAC3BnpE,EAAMqpE,eAAiB51E,KAAKk7B,WAE/B,CAMD,eAAAuzF,CAAgBliH,EAAO+hH,GACrB,MAAM1xF,EAAYrwB,EAAMqwB,UACC,iBAAdA,GAA0BrwB,EAAMmiH,kBAAoB9xF,SAC3Cp2B,IAAdo2B,GACF58B,KAAKwsH,aAAa7mH,KAAK2oH,EAAWvqH,KAAK/D,KAAMuM,IAE/CA,EAAMmiH,iBAAmB9xF,EAE5B,CAMD,iBAAA+xF,CAAkBpiH,EAAOgiH,GACvB,MAAM79C,EAAcnkE,EAAMmkE,YACpB+E,EAAUlpE,EAAMkpE,QAChBC,EAAWnpE,EAAMmpE,SACjBE,EAAiBrpE,EAAMqpE,eACvBC,EAAWtpE,EAAMspE,SACjB7wB,EAAYz4C,EAAMy4C,UAClB8wB,EAAavpE,EAAMupE,YAEvBvpE,EAAMqiH,oBAAsBl+C,GAC5BnkE,EAAMsiH,gBAAkBp5C,GACvBC,GAAYnpE,EAAMuiH,kBAChBvsH,EAAOgK,EAAMuiH,gBAAiBp5C,IACjCnpE,EAAMwiH,uBAAyBn5C,GAC/BrpE,EAAMyiH,iBAAmBn5C,GACzBtpE,EAAM0iH,kBAAoBjqE,GAC1Bz4C,EAAM2iH,mBAAqBp5C,UAEPtvE,IAAhBkqE,GACF69C,EAAYxqH,KAAK/D,KAAMuM,GAEzBA,EAAMqiH,mBAAqBl+C,EAC3BnkE,EAAMsiH,eAAiBp5C,EACvBlpE,EAAMuiH,gBAAkBp5C,EACxBnpE,EAAMwiH,sBAAwBn5C,EAC9BrpE,EAAMyiH,gBAAkBn5C,EACxBtpE,EAAM0iH,iBAAmBjqE,EACzBz4C,EAAM2iH,kBAAoBp5C,EAE7B,CAKD,WAAAo4C,CAAYzuE,GACVz/C,KAAKqsH,2BAA2B,GAAKrsH,KAAKwsH,aAAarrH,OACvDnB,KAAKqsH,2BAA6B,KAClCrsH,KAAKssH,2BAA2B,GAAKtsH,KAAK0sH,yBAAyBvrH,OACnEnB,KAAKssH,2BAA6B,KAClC,MAAM6C,EAAyB,CAAClB,GAAgCxuE,GAChEz/C,KAAKwsH,aAAa7mH,KAAKwpH,GACvBnvH,KAAK0sH,yBAAyB/mH,KAAKwpH,EACpC,CASD,oBAAApC,GACE,IAAK/sH,KAAKusH,qBACRvsH,KAAKusH,mBAAqBz3G,GAAM9U,KAAKkwC,WACjClwC,KAAKosH,aAAe,GAAG,CACzB,MAAM58G,EAASxP,KAAK0c,YAAc1c,KAAKosH,aAAe,GAAM,EAC5D1yG,GAAO1Z,KAAKusH,mBAAoB/8G,EAAOxP,KAAKusH,mBAC7C,CAEH,OAAOvsH,KAAKusH,kBACb,GCzXH,IAAA6C,GAxQA,cAAiCC,GAO/B,WAAAvvH,CAAYob,EAAWg1B,EAAWxzB,EAAYwe,GAC5Cj2B,MAAMiW,EAAWg1B,EAAWxzB,EAAYwe,GAMxCl7B,KAAK2kH,mBAAqB,KAM1B3kH,KAAKq7B,OAAS,KAMdr7B,KAAKsvH,sBAAmB9oH,EAMxBxG,KAAKuvH,cAAW/oH,EAMhBxG,KAAKwvH,cAAWhpH,EAMhBxG,KAAKyvH,aAAUjpH,EAMfxG,KAAKkhH,cAAW16G,EAMhBxG,KAAK0vH,cAAWlpH,EAMhBxG,KAAK2vH,cAAWnpH,EAMhBxG,KAAKmhH,qBAAkB36G,EAMvBxG,KAAK4yD,eAAYpsD,EAMjBxG,KAAKqhH,YAAS76G,EAMdxG,KAAK+mH,YAASvgH,EAMdxG,KAAKyhH,oBAAiBj7G,EAOtBxG,KAAK4vH,6BAA0BppH,CAChC,CAMD,SAAA4pE,CAAUC,EAAe5wB,GACvB,IAAKz/C,KAAKq7B,OACR,OAEFr7B,KAAK6tH,cAAcx9C,EAAe5wB,GAClC,MAAM5kC,EAAkBw1D,EAAchhD,qBAChCtU,EAASs1D,EAAc/gD,YACvBugG,EAAU7vH,KAAKsZ,YAAYnY,OAC3B6rH,EAAQhtH,KAAK8sH,2BAA2BjyG,EAAiBE,GAC/D/a,KAAKwsH,aAAa7mH,KAAK,CACrBsoH,GACA4B,EACA7C,EACAhtH,KAAKq7B,OAELr7B,KAAKuvH,SAAWvvH,KAAKsvH,iBACrBtvH,KAAKwvH,SAAWxvH,KAAKsvH,iBACrBtjH,KAAKiZ,KAAKjlB,KAAKyvH,QAAUzvH,KAAKsvH,kBAC9BtvH,KAAKkhH,SACLlhH,KAAK0vH,SAAW1vH,KAAKsvH,iBACrBtvH,KAAK2vH,SAAW3vH,KAAKsvH,iBACrBtvH,KAAKmhH,gBACLnhH,KAAK4yD,UACL,CACG5yD,KAAKqhH,OAAO,GAAKrhH,KAAKk7B,WAAcl7B,KAAKsvH,iBACzCtvH,KAAKqhH,OAAO,GAAKrhH,KAAKk7B,WAAcl7B,KAAKsvH,kBAE5CtjH,KAAKiZ,KAAKjlB,KAAK+mH,OAAS/mH,KAAKsvH,kBAC7BtvH,KAAKyhH,eACLzhH,KAAK4vH,0BAEP5vH,KAAK0sH,yBAAyB/mH,KAAK,CACjCsoH,GACA4B,EACA7C,EACAhtH,KAAK2kH,mBAEL3kH,KAAKuvH,SACLvvH,KAAKwvH,SACLxvH,KAAKyvH,QACL,EACAzvH,KAAK0vH,SACL1vH,KAAK2vH,SACL3vH,KAAKmhH,gBACLnhH,KAAK4yD,UACL5yD,KAAKqhH,OACLrhH,KAAK+mH,OACL/mH,KAAKyhH,eACLzhH,KAAK4vH,0BAEP5vH,KAAKkuH,YAAYzuE,EAClB,CAMD,cAAAuwB,CAAeC,EAAoBxwB,GACjC,IAAKz/C,KAAKq7B,OACR,OAEFr7B,KAAK6tH,cAAc59C,EAAoBxwB,GACvC,MAAM5kC,EAAkBo1D,EAAmB5gD,qBACrCtU,EAASk1D,EAAmB3gD,YAC5BugG,EAAU7vH,KAAKsZ,YAAYnY,OAC3B6rH,EAAQhtH,KAAK8sH,2BAA2BjyG,EAAiBE,GAC/D/a,KAAKwsH,aAAa7mH,KAAK,CACrBsoH,GACA4B,EACA7C,EACAhtH,KAAKq7B,OAELr7B,KAAKuvH,SAAWvvH,KAAKsvH,iBACrBtvH,KAAKwvH,SAAWxvH,KAAKsvH,iBACrBtjH,KAAKiZ,KAAKjlB,KAAKyvH,QAAUzvH,KAAKsvH,kBAC9BtvH,KAAKkhH,SACLlhH,KAAK0vH,SAAW1vH,KAAKsvH,iBACrBtvH,KAAK2vH,SAAW3vH,KAAKsvH,iBACrBtvH,KAAKmhH,gBACLnhH,KAAK4yD,UACL,CACG5yD,KAAKqhH,OAAO,GAAKrhH,KAAKk7B,WAAcl7B,KAAKsvH,iBACzCtvH,KAAKqhH,OAAO,GAAKrhH,KAAKk7B,WAAcl7B,KAAKsvH,kBAE5CtjH,KAAKiZ,KAAKjlB,KAAK+mH,OAAS/mH,KAAKsvH,kBAC7BtvH,KAAKyhH,eACLzhH,KAAK4vH,0BAEP5vH,KAAK0sH,yBAAyB/mH,KAAK,CACjCsoH,GACA4B,EACA7C,EACAhtH,KAAK2kH,mBAEL3kH,KAAKuvH,SACLvvH,KAAKwvH,SACLxvH,KAAKyvH,QACL,EACAzvH,KAAK0vH,SACL1vH,KAAK2vH,SACL3vH,KAAKmhH,gBACLnhH,KAAK4yD,UACL5yD,KAAKqhH,OACLrhH,KAAK+mH,OACL/mH,KAAKyhH,eACLzhH,KAAK4vH,0BAEP5vH,KAAKkuH,YAAYzuE,EAClB,CAKD,MAAA0uE,GAgBE,OAfAnuH,KAAKouH,kCAELpuH,KAAKuvH,cAAW/oH,EAChBxG,KAAKwvH,cAAWhpH,EAChBxG,KAAK2kH,mBAAqB,KAC1B3kH,KAAKq7B,OAAS,KACdr7B,KAAKsvH,sBAAmB9oH,EACxBxG,KAAKyvH,aAAUjpH,EACfxG,KAAKqhH,YAAS76G,EACdxG,KAAKkhH,cAAW16G,EAChBxG,KAAK0vH,cAAWlpH,EAChBxG,KAAK2vH,cAAWnpH,EAChBxG,KAAKmhH,qBAAkB36G,EACvBxG,KAAK4yD,eAAYpsD,EACjBxG,KAAK+mH,YAASvgH,EACPvB,MAAMkpH,QACd,CAMD,aAAAx9C,CAAcC,EAAYk/C,GACxB,MAAM5iG,EAAS0jD,EAAWwG,YACpB3jE,EAAOm9D,EAAWl9D,UAClBixE,EAAS/T,EAAW0G,YAC1Bt3E,KAAKsvH,iBAAmB1+C,EAAWr1C,cAAcv7B,KAAKk7B,YACtDl7B,KAAKuvH,SAAWriG,EAAO,GACvBltB,KAAKwvH,SAAWtiG,EAAO,GACvBltB,KAAK2kH,mBAAqB/zC,EAAWgxC,uBACrC5hH,KAAKq7B,OAASu1C,EAAWt1C,SAASt7B,KAAKk7B,YACvCl7B,KAAKyvH,QAAUh8G,EAAK,GACpBzT,KAAKkhH,SAAWtwC,EAAWhjC,aAC3B5tC,KAAK0vH,SAAW/qC,EAAO,GACvB3kF,KAAK2vH,SAAWhrC,EAAO,GACvB3kF,KAAKmhH,gBAAkBvwC,EAAW2G,oBAClCv3E,KAAK4yD,UAAYge,EAAW/6B,cAC5B71C,KAAKqhH,OAASzwC,EAAW6G,gBACzBz3E,KAAK+mH,OAAStzG,EAAK,GACnBzT,KAAKyhH,eAAiB7wC,EAAW8I,mBACjC15E,KAAK4vH,wBAA0BE,CAChC,GCzGH,IAAAC,GAxJA,cAAsCV,GAOpC,WAAAvvH,CAAYob,EAAWg1B,EAAWxzB,EAAYwe,GAC5Cj2B,MAAMiW,EAAWg1B,EAAWxzB,EAAYwe,EACzC,CAUD,oBAAA80F,CAAqBn1G,EAAiBC,EAAQ9Y,EAAK+Y,GACjD,MAAM80G,EAAU7vH,KAAKsZ,YAAYnY,OAC3B6rH,EAAQhtH,KAAKitH,0BACjBpyG,EACAC,EACA9Y,EACA+Y,GACA,GACA,GAEIk1G,EAA0B,CAC9BhC,GACA4B,EACA7C,GAIF,OAFAhtH,KAAKwsH,aAAa7mH,KAAKsqH,GACvBjwH,KAAK0sH,yBAAyB/mH,KAAKsqH,GAC5BjuH,CACR,CAMD,cAAA4tE,CAAeC,EAAoBpwB,GACjC,MAAMlzC,EAAQvM,KAAKuM,MACbmkE,EAAcnkE,EAAMmkE,YACpB1rB,EAAYz4C,EAAMy4C,UACxB,QAAoBx+C,IAAhBkqE,QAA2ClqE,IAAdw+C,EAC/B,OAEFhlD,KAAK2uH,kBAAkBpiH,EAAOvM,KAAKuuH,aACnCvuH,KAAK6tH,cAAch+C,EAAoBpwB,GACvCz/C,KAAK0sH,yBAAyB/mH,KAC5B,CACEsoH,GACA1hH,EAAMmkE,YACNnkE,EAAMy4C,UACNz4C,EAAMkpE,QACNlpE,EAAMspE,SACNtpE,EAAMupE,WACNj0B,GnI6C6B,GmI1C/BoqE,IAEF,MAAMpxG,EAAkBg1D,EAAmBxgD,qBACrCtU,EAAS80D,EAAmBvgD,YAClCtvB,KAAKgwH,qBACHn1G,EACA,EACAA,EAAgB1Z,OAChB4Z,GAEF/a,KAAK0sH,yBAAyB/mH,KAAKqmH,IACnChsH,KAAKkuH,YAAYzuE,EAClB,CAMD,mBAAAqwB,CAAoBC,EAAyBtwB,GAC3C,MAAMlzC,EAAQvM,KAAKuM,MACbmkE,EAAcnkE,EAAMmkE,YACpB1rB,EAAYz4C,EAAMy4C,UACxB,QAAoBx+C,IAAhBkqE,QAA2ClqE,IAAdw+C,EAC/B,OAEFhlD,KAAK2uH,kBAAkBpiH,EAAOvM,KAAKuuH,aACnCvuH,KAAK6tH,cAAc99C,EAAyBtwB,GAC5Cz/C,KAAK0sH,yBAAyB/mH,KAC5B,CACEsoH,GACA1hH,EAAMmkE,YACNnkE,EAAMy4C,UACNz4C,EAAMkpE,QACNlpE,EAAMspE,SACNtpE,EAAMupE,WACNj0B,GnIO6B,GmIJ/BoqE,IAEF,MAAMv7F,EAAOq/C,EAAwBt5C,UAC/B5b,EAAkBk1D,EAAwB1gD,qBAC1CtU,EAASg1D,EAAwBzgD,YACvC,IAAIxU,EAAS,EACb,IAAK,IAAIlZ,EAAI,EAAGuE,EAAKuqB,EAAKvvB,OAAQS,EAAIuE,IAAMvE,EAC1CkZ,EAAS9a,KAAKgwH,qBACZn1G,EACAC,EACuB4V,EAAK9uB,GAC5BmZ,GAGJ/a,KAAK0sH,yBAAyB/mH,KAAKqmH,IACnChsH,KAAKkuH,YAAYzuE,EAClB,CAKD,MAAA0uE,GACE,MAAM5hH,EAAQvM,KAAKuM,MASnB,OAPsB/F,MAApB+F,EAAM2jH,YACN3jH,EAAM2jH,YAAclwH,KAAKsZ,YAAYnY,QAErCnB,KAAKwsH,aAAa7mH,KAAKqmH,IAEzBhsH,KAAKouH,kCACLpuH,KAAKuM,MAAQ,KACNtH,MAAMkpH,QACd,CAKD,WAAAI,CAAYhiH,GAEY/F,MAApB+F,EAAM2jH,YACN3jH,EAAM2jH,YAAclwH,KAAKsZ,YAAYnY,SAErCnB,KAAKwsH,aAAa7mH,KAAKqmH,IACvBz/G,EAAM2jH,WAAalwH,KAAKsZ,YAAYnY,QAEtCoL,EAAM2jH,WAAa,EACnBjrH,MAAMspH,YAAYhiH,GAClBvM,KAAKwsH,aAAa7mH,KAAKsmH,GACxB,GCqGH,IAAAkE,GAnPA,cAAmCd,GAOjC,WAAAvvH,CAAYob,EAAWg1B,EAAWxzB,EAAYwe,GAC5Cj2B,MAAMiW,EAAWg1B,EAAWxzB,EAAYwe,EACzC,CAUD,qBAAAk1F,CAAsBv1G,EAAiBC,EAAQ4V,EAAM3V,GACnD,MAAMxO,EAAQvM,KAAKuM,MACb4nE,OAA2B3tE,IAApB+F,EAAMqwB,UACbw3C,OAA+B5tE,IAAtB+F,EAAMmkE,YACf2/C,EAAU3/F,EAAKvvB,OACrBnB,KAAKwsH,aAAa7mH,KAAKsmH,IACvBjsH,KAAK0sH,yBAAyB/mH,KAAKsmH,IACnC,IAAK,IAAIrqH,EAAI,EAAGA,EAAIyuH,IAAWzuH,EAAG,CAChC,MAAMI,EAAM0uB,EAAK9uB,GACXiuH,EAAU7vH,KAAKsZ,YAAYnY,OAC3B6rH,EAAQhtH,KAAKitH,0BACjBpyG,EACAC,EACA9Y,EACA+Y,GACA,GACCq5D,GAEG67C,EAA0B,CAC9BhC,GACA4B,EACA7C,GAEFhtH,KAAKwsH,aAAa7mH,KAAKsqH,GACvBjwH,KAAK0sH,yBAAyB/mH,KAAKsqH,GAC/B77C,IAGFp0E,KAAKwsH,aAAa7mH,KAAKumH,IACvBlsH,KAAK0sH,yBAAyB/mH,KAAKumH,KAErCpxG,EAAS9Y,CACV,CASD,OARImyE,IACFn0E,KAAKwsH,aAAa7mH,KAAKomH,IACvB/rH,KAAK0sH,yBAAyB/mH,KAAKomH,KAEjC33C,IACFp0E,KAAKwsH,aAAa7mH,KAAKqmH,IACvBhsH,KAAK0sH,yBAAyB/mH,KAAKqmH,KAE9BlxG,CACR,CAMD,UAAAy0D,CAAWC,EAAgB/vB,GACzB,MAAMlzC,EAAQvM,KAAKuM,MACbqwB,EAAYrwB,EAAMqwB,UAClB8zC,EAAcnkE,EAAMmkE,YAC1B,QAAkBlqE,IAAdo2B,QAA2Cp2B,IAAhBkqE,EAC7B,OAEF1wE,KAAKswH,uBACLtwH,KAAK6tH,cAAcr+C,EAAgB/vB,QACXj5C,IAApB+F,EAAMqwB,WACR58B,KAAK0sH,yBAAyB/mH,KAAK,CACjCsoH,GACAtsE,UAGsBn7C,IAAtB+F,EAAMmkE,aACR1wE,KAAK0sH,yBAAyB/mH,KAAK,CACjCsoH,GACA1hH,EAAMmkE,YACNnkE,EAAMy4C,UACNz4C,EAAMkpE,QACNlpE,EAAMspE,SACNtpE,EAAMupE,WACNj0B,GpIQ6B,IoIJjC,MAAMhnC,EAAkB20D,EAAengD,qBACjCtU,EAASy0D,EAAelgD,YACxBugG,EAAU7vH,KAAKsZ,YAAYnY,OACjCnB,KAAKitH,0BACHpyG,EACA,EACAA,EAAgB1Z,OAChB4Z,GACA,GACA,GAEF,MAAMw1G,EAAoB,CAACtC,GAA0B4B,GACrD7vH,KAAKwsH,aAAa7mH,KAAKsmH,GAAsBsE,GAC7CvwH,KAAK0sH,yBAAyB/mH,KAAKsmH,GAAsBsE,QACjC/pH,IAApB+F,EAAMqwB,YACR58B,KAAKwsH,aAAa7mH,KAAKomH,IACvB/rH,KAAK0sH,yBAAyB/mH,KAAKomH,UAEXvlH,IAAtB+F,EAAMmkE,cACR1wE,KAAKwsH,aAAa7mH,KAAKqmH,IACvBhsH,KAAK0sH,yBAAyB/mH,KAAKqmH,KAErChsH,KAAKkuH,YAAYzuE,EAClB,CAMD,WAAA6wB,CAAYC,EAAiB9wB,GAC3B,MAAMlzC,EAAQvM,KAAKuM,MACbqwB,EAAYrwB,EAAMqwB,UAClB8zC,EAAcnkE,EAAMmkE,YAC1B,QAAkBlqE,IAAdo2B,QAA2Cp2B,IAAhBkqE,EAC7B,OAEF1wE,KAAKswH,uBACLtwH,KAAK6tH,cAAct9C,EAAiB9wB,QACZj5C,IAApB+F,EAAMqwB,WACR58B,KAAK0sH,yBAAyB/mH,KAAK,CACjCsoH,GACAtsE,UAGsBn7C,IAAtB+F,EAAMmkE,aACR1wE,KAAK0sH,yBAAyB/mH,KAAK,CACjCsoH,GACA1hH,EAAMmkE,YACNnkE,EAAMy4C,UACNz4C,EAAMkpE,QACNlpE,EAAMspE,SACNtpE,EAAMupE,WACNj0B,GpIhD6B,IoIoDjC,MAAMnxB,EAAO6/C,EAAgB95C,UACvB5b,EAAkB01D,EAAgBh6C,6BAClCxb,EAASw1D,EAAgBjhD,YAC/BtvB,KAAKowH,sBACHv1G,EACA,EACN,EACME,GAEF/a,KAAKkuH,YAAYzuE,EAClB,CAMD,gBAAAywB,CAAiBC,EAAsB1wB,GACrC,MAAMlzC,EAAQvM,KAAKuM,MACbqwB,EAAYrwB,EAAMqwB,UAClB8zC,EAAcnkE,EAAMmkE,YAC1B,QAAkBlqE,IAAdo2B,QAA2Cp2B,IAAhBkqE,EAC7B,OAEF1wE,KAAKswH,uBACLtwH,KAAK6tH,cAAc19C,EAAsB1wB,QACjBj5C,IAApB+F,EAAMqwB,WACR58B,KAAK0sH,yBAAyB/mH,KAAK,CACjCsoH,GACAtsE,UAGsBn7C,IAAtB+F,EAAMmkE,aACR1wE,KAAK0sH,yBAAyB/mH,KAAK,CACjCsoH,GACA1hH,EAAMmkE,YACNnkE,EAAMy4C,UACNz4C,EAAMkpE,QACNlpE,EAAMspE,SACNtpE,EAAMupE,WACNj0B,GpI3F6B,IoI+FjC,MAAMjxB,EAAQu/C,EAAqB+E,WAC7Br6D,EAAkBs1D,EAAqB55C,6BACvCxb,EAASo1D,EAAqB7gD,YACpC,IAAIxU,EAAS,EACb,IAAK,IAAIlZ,EAAI,EAAGuE,EAAKyqB,EAAMzvB,OAAQS,EAAIuE,IAAMvE,EAC3CkZ,EAAS9a,KAAKowH,sBACZv1G,EACAC,EACA8V,EAAMhvB,GACNmZ,GAGJ/a,KAAKkuH,YAAYzuE,EAClB,CAKD,MAAA0uE,GACEnuH,KAAKouH,kCACLpuH,KAAKuM,MAAQ,KAKb,MAAM2O,EAAYlb,KAAKkb,UACvB,GAAkB,IAAdA,EAAiB,CACnB,MAAM5B,EAActZ,KAAKsZ,YACzB,IAAK,IAAI1X,EAAI,EAAGuE,EAAKmT,EAAYnY,OAAQS,EAAIuE,IAAMvE,EACjD0X,EAAY1X,GAAKwwB,GAAK9Y,EAAY1X,GAAIsZ,EAEzC,CACD,OAAOjW,MAAMkpH,QACd,CAKD,oBAAAmC,GACE,MAAM/jH,EAAQvM,KAAKuM,WAED/F,IADA+F,EAAMqwB,WAEtB58B,KAAKyuH,gBAAgBliH,EAAOvM,KAAKsuH,iBAET9nH,IAAtB+F,EAAMmkE,aACR1wE,KAAK2uH,kBAAkBpiH,EAAOvM,KAAKuuH,YAEtC,GCtPI,SAASiC,GAAUC,EAAa51G,EAAiBC,EAAQ9Y,EAAK+Y,GACnE,MAAM6pC,EAAS,GACf,IAAI8rE,EAAS51G,EACT61G,EAAS,EACTC,EAAe/1G,EAAgB/W,MAAMgX,EAAQ,GACjD,KAAO61G,EAASF,GAAeC,EAAS31G,EAAS/Y,GAAK,CACpD,MAAO8a,EAAIC,GAAM6zG,EAAa9sH,OAAO,GAC/BkZ,EAAKnC,EAAgB61G,EAAS31G,GAC9BkC,EAAKpC,EAAgB61G,EAAS31G,EAAS,GACvCsZ,EAAgBroB,KAAKka,MACxBlJ,EAAKF,IAAOE,EAAKF,IAAOG,EAAKF,IAAOE,EAAKF,IAG5C,GADA4zG,GAAUt8F,EACNs8F,GAAUF,EAAa,CACzB,MAAMzwG,GAAKywG,EAAcE,EAASt8F,GAAiBA,EAC7Cjd,EAAIwN,GAAK9H,EAAIE,EAAIgD,GACjB3I,EAAIuN,GAAK7H,EAAIE,EAAI+C,GACvB4wG,EAAajrH,KAAKyR,EAAGC,GACrButC,EAAOj/C,KAAKirH,GACZA,EAAe,CAACx5G,EAAGC,GACfs5G,GAAUF,IACZC,GAAU31G,GAEZ41G,EAAS,CACf,MAAW,GAAIA,EAASF,EAClBG,EAAajrH,KACXkV,EAAgB61G,EAAS31G,GACzBF,EAAgB61G,EAAS31G,EAAS,IAEpC21G,GAAU31G,MACL,CACL,MAAM81G,EAAUx8F,EAAgBs8F,EAC1Bv5G,EAAIwN,GAAK9H,EAAIE,EAAI6zG,EAAUx8F,GAC3Bhd,EAAIuN,GAAK7H,EAAIE,EAAI4zG,EAAUx8F,GACjCu8F,EAAajrH,KAAKyR,EAAGC,GACrButC,EAAOj/C,KAAKirH,GACZA,EAAe,CAACx5G,EAAGC,GACnBs5G,EAAS,EACTD,GAAU31G,CACX,CACF,CAID,OAHI41G,EAAS,GACX/rE,EAAOj/C,KAAKirH,GAEPhsE,CACT,CC3CO,SAASksE,GAAclI,EAAU/tG,EAAiBC,EAAQ9Y,EAAK+Y,GACpE,IAKIg2G,EAAMnvH,EAAGovH,EAAKC,EAAKn0G,EAAIC,EAAIm0G,EAAKC,EAAKC,EAAKC,EAL1CC,EAAax2G,EACby2G,EAAWz2G,EACX61G,EAAS,EACT3wG,EAAI,EACJvS,EAAQqN,EAEZ,IAAKlZ,EAAIkZ,EAAQlZ,EAAII,EAAKJ,GAAKmZ,EAAQ,CACrC,MAAMiC,EAAKnC,EAAgBjZ,GACrBqb,EAAKpC,EAAgBjZ,EAAI,QACpB4E,IAAPsW,IACFs0G,EAAMp0G,EAAKF,EACXu0G,EAAMp0G,EAAKF,EACXk0G,EAAMjlH,KAAKka,KAAKkrG,EAAMA,EAAMC,EAAMA,QACtB7qH,IAAR0qH,IACFlxG,GAAKgxG,EACLD,EAAO/kH,KAAK+kH,MAAMG,EAAME,EAAMD,EAAME,IAAQL,EAAMC,IAC9CF,EAAOnI,IACL5oG,EAAI2wG,IACNA,EAAS3wG,EACTsxG,EAAa7jH,EACb8jH,EAAW3vH,GAEboe,EAAI,EACJvS,EAAQ7L,EAAImZ,IAGhBi2G,EAAMC,EACNC,EAAME,EACND,EAAME,GAERv0G,EAAKE,EACLD,EAAKE,CACN,CAED,OADA+C,GAAKixG,EACEjxG,EAAI2wG,EAAS,CAACljH,EAAO7L,GAAK,CAAC0vH,EAAYC,EAChD,CCpBO,MAAMC,GAAa,CACxBntE,KAAQ,EACR5nC,OAAU,GACV4Y,MAAS,EACTikC,IAAO,EACPm4D,OAAU,GACVC,QAAW,GACXC,WAAc,GACdC,YAAe,GACfC,OAAU,GA+mBZ,IAAAC,GA5mBA,cAAgCzC,GAO9B,WAAAvvH,CAAYob,EAAWg1B,EAAWxzB,EAAYwe,GAC5Cj2B,MAAMiW,EAAWg1B,EAAWxzB,EAAYwe,GAMxCl7B,KAAK+xH,QAAU,KAMf/xH,KAAKuyE,MAAQ,GAMbvyE,KAAKwyE,aAAe,EAMpBxyE,KAAKyyE,aAAe,EAMpBzyE,KAAK0yE,yBAAsBlsE,EAM3BxG,KAAK2yE,cAAgB,EAMrB3yE,KAAK6yE,eAAiB,KAKtB7yE,KAAKgyH,WAAa,GAClBhyH,KAAKgyH,WAAWrwE,IAAoB,CAAC/kB,UAAW+kB,IAMhD3hD,KAAK8yE,iBAAmB,KAKxB9yE,KAAKiyH,aAAe,GAMpBjyH,KAAK+yE,WAA8D,CAAE,EAKrE/yE,KAAKkyH,WAAa,GAMlBlyH,KAAKmyH,SAAW,GAMhBnyH,KAAKoyH,SAAW,GAMhBpyH,KAAKqyH,WAAa,GAOlBryH,KAAK4vH,6BAA0BppH,CAChC,CAKD,MAAA2nH,GACE,MAAM3B,EAAevnH,MAAMkpH,SAI3B,OAHA3B,EAAa0F,WAAalyH,KAAKkyH,WAC/B1F,EAAawF,WAAahyH,KAAKgyH,WAC/BxF,EAAayF,aAAejyH,KAAKiyH,aAC1BzF,CACR,CAMD,QAAAh8C,CAAS77D,EAAU8qC,GACjB,MAAM41B,EAAYr1E,KAAK6yE,eACjB0C,EAAcv1E,KAAK8yE,iBACnBiD,EAAY/1E,KAAK+yE,WACvB,GAAmB,KAAf/yE,KAAKuyE,QAAiBwD,IAAeV,IAAcE,EACrD,OAGF,MAAMj8D,EAActZ,KAAKsZ,YACzB,IAAIvX,EAAQuX,EAAYnY,OAExB,MAAMy5F,EAAejmF,EAAS6Z,UAC9B,IAAI3T,EAAkB,KAClBE,EAASpG,EAAS2a,YAEtB,GAC0B,SAAxBymD,EAAU+yC,WACO,cAAhBluB,GACiB,mBAAhBA,GACgB,WAAhBA,GACgB,gBAAhBA,EAsEG,CACL,IAAI03B,EAAiBv8C,EAAUrV,SAAW,KAAO,GACjD,OAAQk6B,GACN,IAAK,QACL,IAAK,aACH//E,EAC4D,EAExDwU,qBACJ,MACF,IAAK,aACHxU,EAC4D,EAExDg6D,kBACJ,MACF,IAAK,SACHh6D,EACwD,EAEpDwB,YACJ,MACF,IAAK,kBACHxB,EACiE,EAE7Dm6D,mBACJj6D,EAAS,EACT,MACF,IAAK,UACHF,EACyD,EAErD6b,uBACCq/C,EAAUrV,UACb4xD,EAAe3sH,KAAKkV,EAAgB,GAAK7a,KAAK0c,YAEhD3B,EAAS,EACT,MACF,IAAK,eACH,MAAMwZ,EACwD,EAE1D6gD,wBACJv6D,EAAkB,GAClB,IAAK,IAAIjZ,EAAI,EAAGuE,EAAKouB,EAAepzB,OAAQS,EAAIuE,EAAIvE,GAAK,EAClDm0E,EAAUrV,UACb4xD,EAAe3sH,KAAK4uB,EAAe3yB,EAAI,GAAK5B,KAAK0c,YAEnD7B,EAAgBlV,KAAK4uB,EAAe3yB,GAAI2yB,EAAe3yB,EAAI,IAE7D,GAA+B,IAA3BiZ,EAAgB1Z,OAClB,OAEF4Z,EAAS,EAIb,MAAM/Y,EAAMhC,KAAK8sH,2BAA2BjyG,EAAiBE,GAC7D,GAAI/Y,IAAQD,EACV,OAEF,GACEuwH,IACCtwH,EAAMD,GAAS,GAAM8Y,EAAgB1Z,OAAS4Z,EAC/C,CACA,IAAIw3G,EAAMxwH,EAAQ,EAClBuwH,EAAiBA,EAAe96E,QAAO,CAACO,EAAGn2C,KACzC,MAAM+nE,EACJrwD,EAAwB,GAAXi5G,EAAM3wH,MAAYiZ,EAAgBjZ,EAAImZ,IACnDzB,EAAwB,GAAXi5G,EAAM3wH,GAAS,KAAOiZ,EAAgBjZ,EAAImZ,EAAS,GAIlE,OAHK4uD,KACD4oD,EAEG5oD,CAAI,GAEd,CAED3pE,KAAKwyH,mBAEDz8C,EAAUozC,gBAAkBpzC,EAAUszC,oBACxCrpH,KAAKywE,mBACHsF,EAAUozC,eACVpzC,EAAUszC,kBAERtzC,EAAUozC,gBACZnpH,KAAKyuH,gBAAgBzuH,KAAKuM,MAAOvM,KAAKsuH,YAEpCv4C,EAAUszC,mBACZrpH,KAAK2uH,kBAAkB3uH,KAAKuM,MAAOvM,KAAKuuH,aACxCvuH,KAAK0sH,yBAAyB/mH,KAAK3F,KAAKwuH,aAAaxuH,KAAKuM,UAI9DvM,KAAK6tH,cAAcl5G,EAAU8qC,GAG7B,IAAI7K,EAAUmhC,EAAUnhC,QACxB,GACEA,GAAWuN,KACV4zB,EAAUr+D,MAAM,GAAK,GAAKq+D,EAAUr+D,MAAM,GAAK,GAChD,CACA,IAAI+6G,EAAK18C,EAAUnhC,QAAQ,GACvB89E,EAAK38C,EAAUnhC,QAAQ,GACvB+9E,EAAK58C,EAAUnhC,QAAQ,GACvBg+E,EAAK78C,EAAUnhC,QAAQ,GACvBmhC,EAAUr+D,MAAM,GAAK,IACvBg7G,GAAMA,EACNE,GAAMA,GAEJ78C,EAAUr+D,MAAM,GAAK,IACvB+6G,GAAMA,EACNE,GAAMA,GAER/9E,EAAU,CAAC69E,EAAIC,EAAIC,EAAIC,EACxB,CAKD,MAAM13F,EAAal7B,KAAKk7B,WACxBl7B,KAAKwsH,aAAa7mH,KAAK,CACrBsoH,GACAlsH,EACAC,EACA,KACAmsB,IACAA,IACAA,IACA,EACA,EACA,EACAnuB,KAAK0yE,oBACL1yE,KAAK2yE,cACL,CAAC,EAAG,GACJxkD,SACA3nB,EACAxG,KAAK4vH,wBACLh7E,GAAWuN,GACPA,GACAvN,EAAQhK,KAAI,SAAUwqD,GACpB,OAAOA,EAAIl6D,CACzB,MACU66C,EAAUozC,iBACVpzC,EAAUszC,iBACZrpH,KAAKuyE,MACLvyE,KAAKmyH,SACLnyH,KAAKqyH,WACLryH,KAAKoyH,SACLpyH,KAAKwyE,aACLxyE,KAAKyyE,aACL6/C,IAEF,MAAM56G,EAAQ,EAAIwjB,EAEZwzF,EAAmB1uH,KAAKuM,MAAMqwB,UAChCm5C,EAAUozC,iBACZnpH,KAAKuM,MAAMqwB,UAAY+kB,GACvB3hD,KAAK0sH,yBAAyB/mH,KAAK3F,KAAKsuH,WAAWtuH,KAAKuM,SAE1DvM,KAAK0sH,yBAAyB/mH,KAAK,CACjCsoH,GACAlsH,EACAC,EACA,KACAmsB,IACAA,IACAA,IACA,EACA,EACA,EACAnuB,KAAK0yE,oBACL1yE,KAAK2yE,cACL,CAACj7D,EAAOA,GACRyW,SACA3nB,EACAxG,KAAK4vH,wBACLh7E,IACEmhC,EAAUozC,iBACVpzC,EAAUszC,iBACZrpH,KAAKuyE,MACLvyE,KAAKmyH,SACLnyH,KAAKqyH,WACLryH,KAAKoyH,SAAWzwE,GAAmB3hD,KAAKoyH,SACxCpyH,KAAKwyE,aACLxyE,KAAKyyE,aACL6/C,IAGEv8C,EAAUozC,iBACZnpH,KAAKuM,MAAMqwB,UAAY8xF,EACvB1uH,KAAK0sH,yBAAyB/mH,KAAK3F,KAAKsuH,WAAWtuH,KAAKuM,SAG1DvM,KAAKkuH,YAAYzuE,EAClB,KAxQC,CACA,IAAK5hC,GAAW7d,KAAK+sH,uBAAwBp4G,EAASyK,aACpD,OAEF,IAAIsR,EAEJ,GADA7V,EAAkBlG,EAAS0a,qBACP,cAAhBurE,EACFlqE,EAAO,CAAC7V,EAAgB1Z,aACnB,GAAoB,mBAAhBy5F,EACTlqE,EAAsE,EAEpE+F,eACG,GAAoB,WAAhBmkE,EACTlqE,EAA8D,EAC3D+F,UACA3yB,MAAM,EAAG,QACP,GAAoB,gBAAhB82F,EAAgC,CACzC,MAAMhqE,EACwD,EAE1DskD,WACJxkD,EAAO,GACP,IAAK,IAAI9uB,EAAI,EAAGuE,EAAKyqB,EAAMzvB,OAAQS,EAAIuE,IAAMvE,EAC3C8uB,EAAK/qB,KAAKirB,EAAMhvB,GAAG,GAEtB,CACD5B,KAAK6tH,cAAcl5G,EAAU8qC,GAC7B,MAAMgpE,EAAS1yC,EAAU0yC,OACnBxyC,EAAYwyC,OAASjiH,EAAYuvE,EAAUE,UAEjD,IAAI48C,EAAa,EACjB,IAAK,IAAIpzF,EAAI,EAAGqzF,EAAKpiG,EAAKvvB,OAAQs+B,EAAIqzF,IAAMrzF,EAAG,CAC7C,IAAImlB,EAEFA,EADE6jE,EACO+H,GACP/H,EAASzoH,KAAK0c,WACd7B,EACAg4G,EACAniG,EAAK+O,GACL1kB,GAGO,CAACF,EAAgB/W,MAAM+uH,EAAYniG,EAAK+O,KAEnD,IAAK,IAAI1oB,EAAI,EAAGg8G,EAAKnuE,EAAOzjD,OAAQ4V,EAAIg8G,IAAMh8G,EAAG,CAC/C,MAAMi8G,EAAQpuE,EAAO7tC,GACrB,IAAIk8G,EAAa,EACb1B,EAAWyB,EAAM7xH,OACrB,GAAiBqF,MAAbyvE,EAAwB,CAC1B,MAAM8U,EAAQ+lC,GACZ/6C,EAAU6yC,SACVoK,EACA,EACAA,EAAM7xH,OACN,GAEF8xH,EAAaloC,EAAM,GACnBwmC,EAAWxmC,EAAM,EAClB,CACD,IAAK,IAAInpF,EAAIqxH,EAAYrxH,EAAI2vH,EAAU3vH,GAAKmZ,EAC1CzB,EAAY3T,KAAKqtH,EAAMpxH,GAAIoxH,EAAMpxH,EAAI,IAEvC,MAAMI,EAAMsX,EAAYnY,OACxB0xH,EAAaniG,EAAK+O,GAClBz/B,KAAKkzH,WAAWnxH,EAAOC,GACvBD,EAAQC,CACT,CACF,CACDhC,KAAKkuH,YAAYzuE,EACvB,CAoMG,CAKD,eAAA+yE,GACE,MAAMj9C,EAAcv1E,KAAK8yE,iBACnBiD,EAAY/1E,KAAK+yE,WACjBsC,EAAYr1E,KAAK6yE,eAEjBsgD,EAAYnzH,KAAKqyH,WACnB98C,IACI49C,KAAanzH,KAAKiyH,eACtBjyH,KAAKiyH,aAAakB,GAAa,CAC7BziD,YAAa6E,EAAY7E,YACzB+E,QAASF,EAAYE,QACrBG,eAAgBL,EAAYK,eAC5B5wB,UAAWuwB,EAAYvwB,UACvB6wB,SAAUN,EAAYM,SACtBC,WAAYP,EAAYO,WACxBJ,SAAUH,EAAYG,YAI5B,MAAM09C,EAAUpzH,KAAKmyH,SACfiB,KAAWpzH,KAAKkyH,aACpBlyH,KAAKkyH,WAAWkB,GAAW,CACzB7vE,KAAMwyB,EAAUxyB,KAChB0yB,UAAWF,EAAUE,WAAah0B,GAClCsmE,QAASxyC,EAAUwyC,QACnBryC,aAAcH,EAAUG,cAAgBh0B,GACxCxqC,MAAOq+D,EAAUr+D,QAGrB,MAAM27G,EAAUrzH,KAAKoyH,SACjB/8C,IACIg+C,KAAWrzH,KAAKgyH,aACpBhyH,KAAKgyH,WAAWqB,GAAW,CACzBz2F,UAAWy4C,EAAUz4C,YAI5B,CAOD,UAAAs2F,CAAWnxH,EAAOC,GAChB,MAAMuzE,EAAcv1E,KAAK8yE,iBACnBiD,EAAY/1E,KAAK+yE,WAEjBogD,EAAYnzH,KAAKqyH,WACjBe,EAAUpzH,KAAKmyH,SACfkB,EAAUrzH,KAAKoyH,SACrBpyH,KAAKwyH,kBAEL,MAAMt3F,EAAal7B,KAAKk7B,WAClBo4F,EAAW9B,GAAWz7C,EAAUG,cAEhCzgC,EAAUz1C,KAAKyyE,aAAev3C,EAC9BwnB,EAAO1iD,KAAKuyE,MACZ4wC,EAAc5tC,EACfA,EAAYvwB,UAAYh5C,KAAKmP,IAAI46D,EAAUr+D,MAAM,IAAO,EACzD,EAEJ1X,KAAKwsH,aAAa7mH,KAAK,CACrBsoH,GACAlsH,EACAC,EACAsxH,EACAv9C,EAAUrV,SACV2yD,EACAt9C,EAAU6yC,SACV1tF,EACAua,EACA09E,EACAhQ,EAAcjoF,EACdwnB,EACA0wE,EACA,IAEFpzH,KAAK0sH,yBAAyB/mH,KAAK,CACjCsoH,GACAlsH,EACAC,EACAsxH,EACAv9C,EAAUrV,SACV2yD,EAAU1xE,GAAmB0xE,EAC7Bt9C,EAAU6yC,SACV1tF,EACAua,EACA09E,EACAhQ,EAAcjoF,EACdwnB,EACA0wE,EACA,EAAIl4F,GAEP,CAMD,YAAA41C,CAAaC,EAAW++C,GACtB,IAAI/5C,EAAWV,EAAWE,EAC1B,GAAKxE,EAEE,CACL,MAAM2G,EAAgB3G,EAAUsD,UAC3BqD,GAIHrC,EAAYr1E,KAAK6yE,eACZwC,IACHA,EAAS,CAAsD,EAC/Dr1E,KAAK6yE,eAAiBwC,GAExBA,EAAUz4C,UAAY6vC,GACpBiL,EAActB,YAAcz0B,MAT9B0zB,EAAY,KACZr1E,KAAK6yE,eAAiBwC,GAYxB,MAAMuC,EAAkB7G,EAAUuD,YAClC,GAAKsD,EAGE,CACLrC,EAAcv1E,KAAK8yE,iBACdyC,IACHA,EAAW,CAAwD,EACnEv1E,KAAK8yE,iBAAmByC,GAE1B,MAAMG,EAAWkC,EAAgBnB,cAC3Bb,EAAiBgC,EAAgBjB,oBACjC3xB,EAAY4yB,EAAgBz7D,WAC5B25D,EAAa8B,EAAgBZ,gBACnCzB,EAAYE,QAAUmC,EAAgBrB,cAAgB30B,GACtD2zB,EAAYG,SAAWA,EAAWA,EAAS5xE,QAAU+9C,GACrD0zB,EAAYK,oBACSpvE,IAAnBovE,EvI3d2B,EuI2d4BA,EACzDL,EAAYM,SAAW+B,EAAgBf,eAAiB/0B,GACxDyzB,EAAYvwB,eACIx+C,IAAdw+C,EvIpbsB,EuIobuBA,EAC/CuwB,EAAYO,gBACKtvE,IAAfsvE,EAA2B/zB,GAAoB+zB,EACjDP,EAAY7E,YAAcjE,GACxBmL,EAAgBxB,YAAcp0B,GAEjC,MAxBCuzB,EAAc,KACdv1E,KAAK8yE,iBAAmByC,EAyB1BQ,EAAY/1E,KAAK+yE,WACjB,MAAMxvB,EAAOwtB,EAAUsH,WAAa32B,GACpCc,GAAae,GACb,MAAMq1B,EAAY7H,EAAU0G,gBAC5B1B,EAAUrV,SAAWqQ,EAAU04C,cAC/B1zC,EAAUxyB,KAAOA,EACjBwyB,EAAU6yC,SAAW73C,EAAUy4C,cAC/BzzC,EAAU+yC,UAAY/3C,EAAUu4C,eAChCvzC,EAAUE,UAAYlF,EAAUgI,eAChChD,EAAU0yC,OAAS13C,EAAUw4C,YAC7BxzC,EAAUwyC,QAAUx3C,EAAU24C,aAC9B3zC,EAAUG,aACRnF,EAAUkI,mBAAqB/2B,GACjC6zB,EAAUozC,eAAiBp4C,EAAU44C,oBACrC5zC,EAAUszC,iBAAmBt4C,EAAU64C,sBACvC7zC,EAAUnhC,QAAUm8B,EAAU84C,cAAgB1nE,GAC9C4zB,EAAUr+D,WAAsBlR,IAAdoyE,EAA0B,CAAC,EAAG,GAAKA,EAErD,MAAMN,EAAcvH,EAAUwH,aACxBC,EAAczH,EAAU0H,aACxBC,EAAqB3H,EAAUwG,oBAC/BoB,EAAe5H,EAAUl7B,cAC/B71C,KAAKuyE,MAAQxB,EAAUwD,WAAa,GACpCv0E,KAAKwyE,kBAA+BhsE,IAAhB8xE,EAA4B,EAAIA,EACpDt4E,KAAKyyE,kBAA+BjsE,IAAhBgyE,EAA4B,EAAIA,EACpDx4E,KAAK0yE,yBACoBlsE,IAAvBkyE,GAA2CA,EAC7C14E,KAAK2yE,mBAAiCnsE,IAAjBmyE,EAA6B,EAAIA,EAEtD34E,KAAKqyH,WAAa98C,GACqB,iBAA3BA,EAAY7E,YAChB6E,EAAY7E,YACZjoE,EAAO8sE,EAAY7E,cACvB6E,EAAYE,QACZF,EAAYK,eACZ,IACAL,EAAYvwB,UACZuwB,EAAYM,SACZN,EAAYO,WACZ,IACAP,EAAYG,SAAS78D,OACrB,IACA,GACJ7Y,KAAKmyH,SACHp8C,EAAUxyB,KACVwyB,EAAUr+D,OACTq+D,EAAUE,WAAa,MACvBF,EAAU0yC,QAAU,MACpB1yC,EAAUwyC,SAAW,MACrBxyC,EAAUG,cAAgB,KAC7Bl2E,KAAKoyH,SAAW/8C,EACkB,iBAAvBA,EAAUz4C,UACfy4C,EAAUz4C,UACV,IAAMn0B,EAAO4sE,EAAUz4C,WACzB,EACL,MApGC58B,KAAKuyE,MAAQ,GAqGfvyE,KAAK4vH,wBAA0BE,CAChC,GCroBH,MAAMyD,GAAqB,CACzB/4C,OAAUg5C,GACVC,QAAWC,GACX5kH,MAAS6kH,GACT55C,WAAc65C,GACd79F,QAAWy9F,GACXrL,KAAQ0L,IAqFV,IAAAC,GAlFA,MAOE,WAAAh0H,CAAYob,EAAWg1B,EAAWxzB,EAAYwe,GAK5Cl7B,KAAK+zH,WAAa74G,EAMlBlb,KAAKg0H,WAAa9jF,EAMlBlwC,KAAKo7B,YAAcF,EAMnBl7B,KAAKi0H,YAAcv3G,EAMnB1c,KAAKk0H,kBAAoB,EAC1B,CAKD,MAAA/F,GACE,MAAMgG,EAAsB,CAAA,EAC5B,IAAK,MAAMC,KAAQp0H,KAAKk0H,kBAAmB,CACzCC,EAAoBC,GAAQD,EAAoBC,IAAS,CAAA,EACzD,MAAMC,EAAWr0H,KAAKk0H,kBAAkBE,GACxC,IAAK,MAAME,KAAcD,EAAU,CACjC,MAAME,EAAqBF,EAASC,GAAYnG,SAChDgG,EAAoBC,GAAME,GAAcC,CACzC,CACF,CACD,OAAOJ,CACR,CAOD,UAAAv6C,CAAW9sC,EAAQ0nF,GACjB,MAAMC,OAAuBjuH,IAAXsmC,EAAuBA,EAAOn0B,WAAa,IAC7D,IAAI+7G,EAAU10H,KAAKk0H,kBAAkBO,QACrBjuH,IAAZkuH,IACFA,EAAU,CAAA,EACV10H,KAAKk0H,kBAAkBO,GAAaC,GAEtC,IAAIC,EAASD,EAAQF,GACrB,QAAehuH,IAAXmuH,EAAsB,CAExBA,EAAS,IAAIC,EADOrB,GAAmBiB,IAErCx0H,KAAK+zH,WACL/zH,KAAKg0H,WACLh0H,KAAKi0H,YACLj0H,KAAKo7B,aAEPs5F,EAAQF,GAAeG,CACxB,CACD,OAAOA,CACR,GC/EI,SAASE,GACdh6G,EACAC,EACA9Y,EACA+Y,EACA2nC,EACAoyE,EACAlM,EACAlxG,EACA6sC,EACAhB,EACAlgC,EACA1G,GAEA,IAAIK,EAAKnC,EAAgBC,GACrBmC,EAAKpC,EAAgBC,EAAS,GAC9BgC,EAAK,EACLC,EAAK,EACLsX,EAAgB,EAChB0gG,EAAW,EAEf,SAASC,IACPl4G,EAAKE,EACLD,EAAKE,EAELD,EAAKnC,EADLC,GAAUC,GAEVkC,EAAKpC,EAAgBC,EAAS,GAC9Bi6G,GAAY1gG,EACZA,EAAgBroB,KAAKka,MAAMlJ,EAAKF,IAAOE,EAAKF,IAAOG,EAAKF,IAAOE,EAAKF,GACrE,CACD,GACEi4G,UACOl6G,EAAS9Y,EAAM+Y,GAAUg6G,EAAW1gG,EAAgBygG,GAE7D,IAAIloH,EACgB,IAAlBynB,EAAsB,GAAKygG,EAASC,GAAY1gG,EAClD,MAAM4gG,EAASrwG,GAAK9H,EAAIE,EAAIpQ,GACtBsoH,EAAStwG,GAAK7H,EAAIE,EAAIrQ,GAEtBuoH,EAAcr6G,EAASC,EACvBq6G,EAAcL,EACdM,EAAOP,EAASp9G,EAAQ6sC,EAAyBhB,EAAMb,EAAMr/B,GACnE,KAAOvI,EAAS9Y,EAAM+Y,GAAUg6G,EAAW1gG,EAAgBghG,GACzDL,IAEFpoH,EAAgC,IAAlBynB,EAAsB,GAAKghG,EAAON,GAAY1gG,EAC5D,MAAM9V,EAAOqG,GAAK9H,EAAIE,EAAIpQ,GACpB4R,EAAOoG,GAAK7H,EAAIE,EAAIrQ,GAG1B,IAAI6kG,EACJ,GAAI90F,EAAU,CACZ,MAAM24G,EAAO,CAACL,EAAQC,EAAQ32G,EAAMC,GACpClH,GAAOg+G,EAAM,EAAG,EAAG,EAAG34G,EAAU24G,EAAMA,GACtC7jB,EAAU6jB,EAAK,GAAKA,EAAK,EAC7B,MACI7jB,EAAUwjB,EAAS12G,EAGrB,MAAMsB,EAAK7T,KAAK6T,GACV2wB,EAAS,GACT+kF,EAAgBJ,EAAcp6G,IAAWD,EAQ/C,IAAI06G,EAEJ,GAPAnhG,EAAgB,EAChB0gG,EAAWK,EACXp4G,EAAKnC,EAHLC,EAASq6G,GAITl4G,EAAKpC,EAAgBC,EAAS,GAI1By6G,EAAe,CACjBP,IAEAQ,EAAgBxpH,KAAKmc,MAAMlL,EAAKF,EAAIC,EAAKF,GACrC20F,IACF+jB,GAAiBA,EAAgB,GAAK31G,EAAKA,GAE7C,MAAMzI,GAAKmH,EAAO02G,GAAU,EACtB59G,GAAKmH,EAAO02G,GAAU,EAE5B,OADA1kF,EAAO,GAAK,CAACp5B,EAAGC,GAAIg+G,EAAOP,GAAU,EAAGU,EAAe9yE,GAChDlS,CACR,CAKD,IAAK,IAAI5uC,EAAI,EAAGuE,GAFhBu8C,EAAOA,EAAKp/B,QAAQ,MAAO,MAEDniB,OAAQS,EAAIuE,GAAM,CAC1C6uH,IACA,IAAIz9G,EAAQvL,KAAKmc,MAAMlL,EAAKF,EAAIC,EAAKF,GAIrC,GAHI20F,IACFl6F,GAASA,EAAQ,GAAKsI,EAAKA,QAEPrZ,IAAlBgvH,EAA6B,CAC/B,IAAI9nH,EAAQ6J,EAAQi+G,EAEpB,GADA9nH,GAASA,EAAQmS,GAAM,EAAIA,EAAKnS,GAASmS,EAAK,EAAIA,EAAK,EACnD7T,KAAKmP,IAAIzN,GAASk7G,EACpB,OAAO,IAEV,CACD4M,EAAgBj+G,EAEhB,MAAMk+G,EAAS7zH,EACf,IAAI8zH,EAAa,EACjB,KAAO9zH,EAAIuE,IAAMvE,EAAG,CAClB,MACMoG,EAAM0P,EAAQ6sC,EAAyBhB,EAAMb,EADrC+uD,EAAUtrG,EAAKvE,EAAI,EAAIA,GAC2ByhB,GAChE,GACEvI,EAASC,EAAS/Y,GAClB+yH,EAAW1gG,EAAgBygG,EAASY,EAAa1tH,EAAM,EAEvD,MAEF0tH,GAAc1tH,CACf,CACD,GAAIpG,IAAM6zH,EACR,SAEF,MAAME,EAAQlkB,EACV/uD,EAAKkzE,UAAUzvH,EAAKsvH,EAAQtvH,EAAKvE,GACjC8gD,EAAKkzE,UAAUH,EAAQ7zH,GAC3BgL,EACoB,IAAlBynB,EACI,GACCygG,EAASY,EAAa,EAAIX,GAAY1gG,EAC7C,MAAMjd,EAAIwN,GAAK9H,EAAIE,EAAIpQ,GACjByK,EAAIuN,GAAK7H,EAAIE,EAAIrQ,GACvB4jC,EAAO7qC,KAAK,CAACyR,EAAGC,EAAGq+G,EAAa,EAAGn+G,EAAOo+G,IAC1Cb,GAAUY,CACX,CACD,OAAOllF,CACT,CC9FA,MAAMigE,GtMyIG,CAACj2F,IAAUA,KAAU,KAAW,KsMtInCk4G,GAAK,GAELC,GAAK,GAELC,GAAK,GAELiD,GAAK,GAMX,SAASC,GAAgBC,GACvB,OAAOA,EAAuB,GAAGC,YACnC,CAEA,MAAMC,GAAW,IAAIh1E,OAEnB,IACEr4C,OAAOgjF,aAAa,MAAW,IAAMhjF,OAAOgjF,aAAa,MACzDhjF,OAAOgjF,aAAa,OAAW,IAAMhjF,OAAOgjF,aAAa,OACzDhjF,OAAOgjF,aAAa,OAAW,IAAMhjF,OAAOgjF,aAAa,OACzDhjF,OAAOgjF,aAAa,OAAW,IAAMhjF,OAAOgjF,aAAa,OACzDhjF,OAAOgjF,aAAa,QAAW,IAAMhjF,OAAOgjF,aAAa,QAC3D,KASF,SAASsqC,GAAoBxzE,EAAMyzE,GAMjC,MALc,UAAVA,EACFA,EAAQF,GAAS7nH,KAAKs0C,GAAQ,QAAU,OACrB,QAAVyzE,IACTA,EAAQF,GAAS7nH,KAAKs0C,GAAQ,OAAS,SAElC8uE,GAAW2E,EACpB,CAQA,SAASC,GAAiBl9C,EAAKm9C,EAAMz0H,GAKnC,OAJIA,EAAI,GACNs3E,EAAIvzE,KAAK,KAAM,IAEjBuzE,EAAIvzE,KAAK0wH,EAAM,IACRn9C,CACT,CAsnCA,IAAAo9C,GApnCA,MAOE,WAAAx2H,CAAY4c,EAAYwe,EAAYigE,EAAUqxB,GAK5CxsH,KAAKm7F,SAAWA,EAMhBn7F,KAAKk7B,WAAaA,EAOlBl7B,KAAK0c,WAAaA,EAMlB1c,KAAKu2H,WAMLv2H,KAAKwsH,aAAeA,EAAaA,aAMjCxsH,KAAKsZ,YAAckzG,EAAalzG,YAMhCtZ,KAAKw2H,iBAAmB,GAMxBx2H,KAAKy2H,mBxMzIA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GwM+IrBz2H,KAAK0sH,yBAA2BF,EAAaE,yBAM7C1sH,KAAKgzE,kBAAoB,KAMzBhzE,KAAKqxE,cAAgB,EAKrBrxE,KAAKgyH,WAAaxF,EAAawF,YAAc,CAAA,EAK7ChyH,KAAKiyH,aAAezF,EAAayF,cAAgB,CAAA,EAKjDjyH,KAAKkyH,WAAa1F,EAAa0F,YAAc,CAAA,EAM7ClyH,KAAK02H,QAAU,GAMf12H,KAAK+xH,QAAU,EAChB,CASD,WAAA4E,CAAYj0E,EAAM0wE,EAASC,EAASF,GAClC,MAAM5rH,EAAMm7C,EAAO0wE,EAAUC,EAAUF,EACvC,GAAInzH,KAAK+xH,QAAQxqH,GACf,OAAOvH,KAAK+xH,QAAQxqH,GAEtB,MAAMguE,EAAc49C,EAAYnzH,KAAKiyH,aAAakB,GAAa,KACzD99C,EAAYg+C,EAAUrzH,KAAKgyH,WAAWqB,GAAW,KACjDt9C,EAAY/1E,KAAKkyH,WAAWkB,GAC5Bl4F,EAAal7B,KAAKk7B,WAClBxjB,EAAQ,CACZq+D,EAAUr+D,MAAM,GAAKwjB,EACrB66C,EAAUr+D,MAAM,GAAKwjB,GAEjB07F,EAAcv0H,MAAMC,QAAQogD,GAC5ByzE,EAAQpgD,EAAUwyC,QACpBiJ,GAAWz7C,EAAUwyC,SACrB2N,GACE7zH,MAAMC,QAAQogD,GAAQA,EAAK,GAAKA,EAChCqzB,EAAUE,WAAah0B,IAEvBkhE,EACJgQ,GAAa59C,EAAYvwB,UAAYuwB,EAAYvwB,UAAY,EAEzDJ,EAASgyE,EACXl0E,EACAA,EAAK/8B,MAAM,MAAM6+B,OAAO4xE,GAAkB,KAExC5mH,MAACA,EAAKC,OAAEA,EAAMo1C,OAAEA,EAAMC,QAAEA,EAAOC,WAAEA,GAAcL,GACnDqxB,EACAnxB,GAEIiyE,EAAcrnH,EAAQ2zG,EACtB19D,EAAsB,GAEtB1N,GAAK8+E,EAAc,GAAKn/G,EAAM,GAC9B2oB,GAAK5wB,EAAS0zG,GAAezrG,EAAM,GAEnCguC,EAAQ,CACZl2C,MAAOuoC,EAAI,EAAI/rC,KAAKuT,MAAMw4B,GAAK/rC,KAAKiZ,KAAK8yB,GACzCtoC,OAAQ4wB,EAAI,EAAIr0B,KAAKuT,MAAM8gB,GAAKr0B,KAAKiZ,KAAKob,GAC1ColB,oBAAqBA,GAEP,GAAZ/tC,EAAM,IAAuB,GAAZA,EAAM,IACzB+tC,EAAoB9/C,KAAK,QAAS+R,GAEhCy7G,IACF1tE,EAAoB9/C,KAAK,cAAe4vE,EAAY7E,aACpDjrB,EAAoB9/C,KAAK,YAAaw9G,GACtC19D,EAAoB9/C,KAAK,UAAW4vE,EAAYE,SAChDhwB,EAAoB9/C,KAAK,WAAY4vE,EAAYM,UACjDpwB,EAAoB9/C,KAAK,aAAc4vE,EAAYO,YACnDrwB,EAAoB9/C,KAAK,cAAe,CAAC4vE,EAAYG,WACrDjwB,EAAoB9/C,KAAK,iBAAkB4vE,EAAYK,iBAErDy9C,GACF5tE,EAAoB9/C,KAAK,YAAa0vE,EAAUz4C,WAElD6oB,EAAoB9/C,KAAK,eAAgB,UACzC8/C,EAAoB9/C,KAAK,YAAa,UACtC,MAAMmxH,EAAY,GAAMX,EACxB,IAAI/+G,EAAI++G,EAAQU,EAAcC,EAAY3T,EAC1C,MAAM4T,EAAqB,GACrBC,EAAmB,GACzB,IAIIC,EAJA51E,EAAa,EACb61E,EAAa,EACbC,EAAmB,EACnBC,EAAiB,EAErB,IAAK,IAAIx1H,EAAI,EAAGuE,EAAKy+C,EAAOzjD,OAAQS,EAAIuE,EAAIvE,GAAK,EAAG,CAClD,MAAM8gD,EAAOkC,EAAOhjD,GACpB,GAAa,OAAT8gD,EAAe,CACjBw0E,GAAc71E,EACdA,EAAa,EACbjqC,EAAI++G,EAAQU,EAAcC,EAAY3T,IACpCiU,EACF,QACD,CACD,MAAM7zE,EAAOqB,EAAOhjD,EAAI,IAAMm0E,EAAUxyB,KACpCA,IAAS0zE,IACP9D,GACF4D,EAAmBpxH,KAAK,OAAQ49C,GAE9B8vE,GACF2D,EAAiBrxH,KAAK,OAAQ49C,GAEhC0zE,EAAe1zE,GAEjBlC,EAAar1C,KAAKyP,IAAI4lC,EAAYyD,EAAQqyE,IAC1C,MAAME,EAAiB,CACrB30E,EACAtrC,EACE0/G,EAAYjyE,EAAOsyE,GACnBhB,GAAStxE,EAAOsyE,GAAoBpyE,EAAWqyE,IACjD,IAAOjU,EAAc9hE,GAAc61E,GAErC9/G,GAAKytC,EAAOsyE,GACRhE,GACF4D,EAAmBpxH,KAAK,aAAc0xH,GAEpChE,GACF2D,EAAiBrxH,KAAK,WAAY0xH,KAElCF,CACH,CAID,OAHA90H,MAAMwB,UAAU8B,KAAKzB,MAAMuhD,EAAqBsxE,GAChD10H,MAAMwB,UAAU8B,KAAKzB,MAAMuhD,EAAqBuxE,GAChDh3H,KAAK+xH,QAAQxqH,GAAOm+C,EACbA,CACR,CAWD,qBAAA4xE,CACEpnH,EACAwiH,EACAC,EACAC,EACAiD,EACA9J,EACAC,GAEA97G,EAAQ+jE,YACR/jE,EAAQ2jE,OAAO3vE,MAAMgM,EAASwiH,GAC9BxiH,EAAQ4jE,OAAO5vE,MAAMgM,EAASyiH,GAC9BziH,EAAQ4jE,OAAO5vE,MAAMgM,EAAS0iH,GAC9B1iH,EAAQ4jE,OAAO5vE,MAAMgM,EAAS2lH,GAC9B3lH,EAAQ4jE,OAAO5vE,MAAMgM,EAASwiH,GAC1B3G,IACF/rH,KAAKu2H,WAAqCxK,EAAgB,GAC1D/rH,KAAKqiH,MAAMnyG,IAET87G,IACFhsH,KAAKu3H,gBACHrnH,EACR,GAEMA,EAAQkkE,SAEX,CAsBD,gCAAAojD,CACEC,EACAC,EACAr9E,EACAC,EACA9qC,EACAC,EACA0d,EACAC,EACAi4B,EACAC,EACA3oC,EACAjF,EACAigH,EACA/iF,EACAgjF,EACAn4E,GAIA,IAAIroC,EAAIijC,GAFRltB,GAAWzV,EAAM,IAGbL,EAAIijC,GAFRltB,GAAW1V,EAAM,IAIjB,MAAMqgC,EAAIvoC,EAAQ61C,EAAUoyE,EAAaA,EAAapyE,EAAU71C,EAC1D6wB,EAAI5wB,EAAS61C,EAAUoyE,EAAcA,EAAcpyE,EAAU71C,EAC7DooH,EAAOjjF,EAAQ,GAAKmD,EAAIrgC,EAAM,GAAKk9B,EAAQ,GAC3CkjF,EAAOljF,EAAQ,GAAKvU,EAAI3oB,EAAM,GAAKk9B,EAAQ,GAC3CmjF,EAAO3gH,EAAIw9B,EAAQ,GACnBojF,EAAO3gH,EAAIu9B,EAAQ,GAazB,IAAI7+B,EAqCJ,OAhDI6hH,GAA2B,IAAbj7G,KAChB+1G,GAAG,GAAKqF,EACRlC,GAAG,GAAKkC,EACRrF,GAAG,GAAKsF,EACRrF,GAAG,GAAKqF,EACRrF,GAAG,GAAKoF,EAAOF,EACfjF,GAAG,GAAKD,GAAG,GACXC,GAAG,GAAKoF,EAAOF,EACfjC,GAAG,GAAKjD,GAAG,IAII,IAAbj2G,GACF5G,EAAYgZ,GxMlZT,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GwMoZjBsrB,EACAC,EACA,EACA,EACA39B,GACC09B,GACAC,GAGH57B,GAAe3I,EAAW28G,IAC1Bh0G,GAAe3I,EAAW48G,IAC1Bj0G,GAAe3I,EAAW68G,IAC1Bl0G,GAAe3I,EAAW8/G,IAC1Bp7G,GACEzO,KAAKwP,IAAIk3G,GAAG,GAAIC,GAAG,GAAIC,GAAG,GAAIiD,GAAG,IACjC7pH,KAAKwP,IAAIk3G,GAAG,GAAIC,GAAG,GAAIC,GAAG,GAAIiD,GAAG,IACjC7pH,KAAKyP,IAAIi3G,GAAG,GAAIC,GAAG,GAAIC,GAAG,GAAIiD,GAAG,IACjC7pH,KAAKyP,IAAIi3G,GAAG,GAAIC,GAAG,GAAIC,GAAG,GAAIiD,GAAG,IACjCplB,KAGFh2F,GACEzO,KAAKwP,IAAIu8G,EAAMA,EAAOF,GACtB7rH,KAAKwP,IAAIw8G,EAAMA,EAAOF,GACtB9rH,KAAKyP,IAAIs8G,EAAMA,EAAOF,GACtB7rH,KAAKyP,IAAIu8G,EAAMA,EAAOF,GACtBrnB,IAGAknB,IACFvgH,EAAIpL,KAAKgZ,MAAM5N,GACfC,EAAIrL,KAAKgZ,MAAM3N,IAEV,CACL4gH,WAAY7gH,EACZ8gH,WAAY7gH,EACZ8gH,WAAYpgF,EACZqgF,WAAY/3F,EACZglB,QAASA,EACTC,QAASA,EACT0wE,aAAc,CACZ77G,KAAMs2F,GAAU,GAChBr2F,KAAMq2F,GAAU,GAChBp2F,KAAMo2F,GAAU,GAChBn2F,KAAMm2F,GAAU,GAChBpsG,MAAOo7C,GAETuvD,gBAAiBj5F,EACjB2B,MAAOA,EAEV,CAaD,mBAAA2gH,CACEnoH,EACAooH,EACAC,EACArc,EACAtvE,EACAm/E,EACAC,GAEA,MAAM4L,KAAgB7L,IAAmBC,GAEnCpjD,EAAMszC,EAAW8Z,aACjBpmH,EAASM,EAAQN,OACjB4oH,EAAgBxM,EACjBA,EAAkB,GAAK9P,EAAWxkG,MAAM,GAAM,EAC/C,EAiCJ,OA/BEkxD,EAAIzuD,KAAOq+G,GAAiB5oH,EAAOJ,MAAQ8oH,GAC3C1vD,EAAIvuD,KAAOm+G,GAAiB,GAC5B5vD,EAAIxuD,KAAOo+G,GAAiB5oH,EAAOH,OAAS6oH,GAC5C1vD,EAAItuD,KAAOk+G,GAAiB,IAGxBZ,GACF53H,KAAKs3H,sBACHpnH,EACAwiH,GACAC,GACAC,GACAiD,GACV,EACA,GAGM1wE,GACEj1C,EACAgsG,EAAWlN,gBACXpiE,EACA2rF,EACArc,EAAW72D,QACX62D,EAAW52D,QACX42D,EAAWic,WACXjc,EAAWkc,WACXlc,EAAW+b,WACX/b,EAAWgc,WACXhc,EAAWxkG,SAGR,CACR,CAMD,KAAA2qG,CAAMnyG,GACJ,GAAIlQ,KAAKu2H,WAAY,CACnB,MAAM5xC,EAASjmE,GAAe1e,KAAKy2H,mBAAoB,CAAC,EAAG,IACrDgC,EAAa,IAAMz4H,KAAKk7B,WAC9BhrB,EAAQq1C,OACRr1C,EAAQ0H,UAAU+sE,EAAO,GAAK8zC,EAAY9zC,EAAO,GAAK8zC,GACtDvoH,EAAQoH,OAAOtX,KAAKqxE,cACrB,CACDnhE,EAAQikE,OACJn0E,KAAKu2H,YACPrmH,EAAQ01C,SAEX,CAOD,eAAA2xE,CAAgBrnH,EAASm+G,GACvBn+G,EAAqB,YACoCm+G,EAAY,GACrEn+G,EAAQ80C,UAAmCqpE,EAAY,GACvDn+G,EAAQulE,QAAwC44C,EAAY,GAC5Dn+G,EAAQ2lE,SAA0Cw4C,EAAY,GAC9Dn+G,EAAQ4lE,WAAoCu4C,EAAY,GACxDn+G,EAAQ0lE,eAAwCy4C,EAAY,GAC5Dn+G,EAAQylE,YAA0C04C,EAAY,GAC/D,CAUD,4BAAAqK,CAA6Bh2E,EAAM0wE,EAASD,EAAWE,GACrD,MAAMt9C,EAAY/1E,KAAKkyH,WAAWkB,GAE5B1tE,EAAQ1lD,KAAK22H,YAAYj0E,EAAM0wE,EAASC,EAASF,GAEjD59C,EAAcv1E,KAAKiyH,aAAakB,GAChCj4F,EAAal7B,KAAKk7B,WAClBi7F,EAAQD,GACZ7zH,MAAMC,QAAQogD,GAAQA,EAAK,GAAKA,EAChCqzB,EAAUE,WAAah0B,IAEnBqxE,EAAW9B,GAAWz7C,EAAUG,cAAgBh0B,IAChDihE,EACJ5tC,GAAeA,EAAYvwB,UAAYuwB,EAAYvwB,UAAY,EASjE,MAAO,CACLU,MAAOA,EACPv4B,QAPcgpG,GADFzwE,EAAMl2C,MAAQ0rB,EAAa,EAAI66C,EAAUr+D,MAAM,IAC7B,GAAK,GAAMy+G,GAAShT,EAQlD/1F,QANCkmG,EAAW5tE,EAAMj2C,OAAUyrB,EAC5B,GAAK,GAAMo4F,GAAYnQ,EAO1B,CAgBD,QAAAwV,CACEzoH,EACAooH,EACAviH,EACAy2G,EACAmL,EACAiB,EACAC,EACA7yD,GAGA,IAAImN,EACAnzE,KAAKgzE,mBAAqBzwE,EAAOwT,EAAW/V,KAAKy2H,oBACnDtjD,EAAmBnzE,KAAKgzE,mBAEnBhzE,KAAKgzE,oBACRhzE,KAAKgzE,kBAAoB,IAE3BG,EAAmBlmD,GACjBjtB,KAAKsZ,YACL,EACAtZ,KAAKsZ,YAAYnY,OACjB,EACA4U,EACA/V,KAAKgzE,mBAEP8lD,GAAsB94H,KAAKy2H,mBAAoB1gH,IAEjD,IAAInU,EAAI,EACR,MAAMuE,EAAKqmH,EAAarrH,OACxB,IACIsiH,EACAt2F,EACFC,EACA2rG,EACAC,EACAC,EACAC,EACArmH,EACA6vC,EACA0wE,EACAD,EACAE,EAZEr8G,EAAI,EAaJmiH,EAAc,EACdC,EAAgB,EAChBC,EAAsB,KACtBC,EAAwB,KAC5B,MAAMC,EAAkBv5H,KAAKw2H,iBACvBtlD,EAAelxE,KAAKqxE,cACpBmoD,EACJxtH,KAAKgZ,MAAgD,KAA1ChZ,KAAKmc,OAAOpS,EAAU,GAAIA,EAAU,KAAc,KAEzDxJ,EAAwD,CAC5D2D,QAASA,EACTgrB,WAAYl7B,KAAKk7B,WACjBxe,WAAY1c,KAAK0c,WACjBC,SAAUu0D,GAKNuoD,EACJz5H,KAAKwsH,cAAgBA,GAAgBxsH,KAAKm7F,SAAW,EAAI,IAC3D,IAA0D17C,EACtDroC,EAAGC,EAAGqiH,EACV,KAAO93H,EAAIuE,GAAI,CACb,MAAMkoH,EAAc7B,EAAa5qH,GAIjC,OAFEysH,EAAY,IAGZ,KAAKJ,GACHxuE,EACE4uE,EAAY,GAEdqL,EAAkBrL,EAAY,GACzB5uE,EAAQxqC,mBAGGzO,IAAdqyH,GACCh7G,GAAWg7G,EAAWa,EAAgBt6G,eAIrCxd,EAFFA,EAA2BysH,EAAY,GAAM,EAL7CzsH,EAA2BysH,EAAY,GASzC,MACF,KAAKJ,GACCkL,EAAcM,IAChBz5H,KAAKqiH,MAAMnyG,GACXipH,EAAc,GAEZC,EAAgBK,IAClBvpH,EAAQkkE,SACRglD,EAAgB,GAEbD,GAAgBC,IACnBlpH,EAAQ+jE,YACR8kD,EAAQ5qG,IACR6qG,EAAQ7qG,OAERvsB,EACF,MACF,KAAKqsH,GACHj3G,EAA2Bq3G,EAAY,GACvC,MAAMvxG,EAAKq2D,EAAiBn8D,GACtB+F,EAAKo2D,EAAiBn8D,EAAI,GAG1Ba,EAFKs7D,EAAiBn8D,EAAI,GAEhB8F,EACVhF,EAFKq7D,EAAiBn8D,EAAI,GAEhB+F,EACVmH,EAAIlY,KAAKka,KAAKrO,EAAKA,EAAKC,EAAKA,GACnC5H,EAAQ2jE,OAAO/2D,EAAKoH,EAAGnH,GACvB7M,EAAQgkE,IAAIp3D,EAAIC,EAAImH,EAAG,EAAG,EAAIlY,KAAK6T,IAAI,KACrCje,EACF,MACF,KAAKqsH,GACH/9G,EAAQ6jE,cACNnyE,EACF,MACF,KAAKqsH,GACHj3G,EAA2Bq3G,EAAY,GACvC5K,EAAK4K,EAAY,GACjB,MAAM15G,EAEF05G,EAAY,GAEVrqD,EAAWqqD,EAAY,GACvB9qH,EAA2B,GAAtB8qH,EAAYltH,OAAcktH,EAAY,QAAK7nH,EACtD+F,EAAMoI,SAAWA,EACjBpI,EAAMkzC,QAAUA,EACV79C,KAAK23H,IACTA,EAAgB33H,GAAK,IAEvB,MAAMq3B,EAASsgG,EAAgB33H,GAC3B2B,EACFA,EAAG4vE,EAAkBn8D,EAAGysG,EAAI,EAAGxqF,IAE/BA,EAAO,GAAKk6C,EAAiBn8D,GAC7BiiB,EAAO,GAAKk6C,EAAiBn8D,EAAI,GACjCiiB,EAAO93B,OAAS,GAElB6iE,EAAS/qC,EAAQ1sB,KACf3K,EACF,MACF,KAAKqsH,GACHj3G,EAA2Bq3G,EAAY,GACvC5K,EAA4B4K,EAAY,GACxCx7G,EAEIw7G,EAAY,GAIhBlhG,EAAiCkhG,EAAY,GAC7CjhG,EAAiCihG,EAAY,GAC7C,IAAI5+G,EAAgC4+G,EAAY,GAChD,MAAMzhF,EAAiCyhF,EAAY,GAC7ChpE,EAAiCgpE,EAAY,GAC7C/oE,EAAiC+oE,EAAY,GAC7CjN,EAAyCiN,EAAY,IAC3D,IAAI1xG,EAAkC0xG,EAAY,IAClD,MAAM32G,EACJ22G,EAAY,IAEd,IAAI7+G,EAA+B6+G,EAAY,IAC/C,MAAM50C,EAEF40C,EAAY,IAEVx9C,EAEFw9C,EAAY,IAGhB,IAAKx7G,GAASw7G,EAAYltH,QAAU,GAAI,CAEtCuhD,EAA8B2rE,EAAY,IAC1C+E,EAAiC/E,EAAY,IAC7C8E,EAAmC9E,EAAY,IAC/CgF,EAAiChF,EAAY,IAC7C,MAAMsL,EAAkB35H,KAAK04H,6BAC3Bh2E,EACA0wE,EACAD,EACAE,GAEFxgH,EAAQ8mH,EAAgBj0E,MACxB2oE,EAAY,GAAKx7G,EACjB,MAAMylE,EAAqC+1C,EAAY,IACvDlhG,GAAWwsG,EAAgBxsG,QAAUmrD,GAAet4E,KAAKk7B,WACzDmzF,EAAY,GAAKlhG,EACjB,MAAMqrD,EAAqC61C,EAAY,IACvDjhG,GAAWusG,EAAgBvsG,QAAUorD,GAAex4E,KAAKk7B,WACzDmzF,EAAY,GAAKjhG,EACjB3d,EAASoD,EAAMpD,OACf4+G,EAAY,GAAK5+G,EACjBD,EAAQqD,EAAMrD,MACd6+G,EAAY,IAAM7+G,CACnB,CAED,IAAI8iH,GAKA19E,GAASu0E,GAAgBE,GAJzBgF,EAAYltH,OAAS,KACvBmxH,GAAwCjE,EAAY,KAIlDA,EAAYltH,OAAS,IACvByzC,GAAwCy5E,EAAY,IACpDlF,GAAyCkF,EAAY,IACrDhF,GAA2CgF,EAAY,MAEvDz5E,GAAUuN,GACVgnE,IAAiB,EACjBE,IAAmB,GAGjBjI,GAAkBoY,EAEpB78G,GAAYu0D,EACFkwC,GAAmBoY,IAE7B78G,GAAYu0D,GAEd,IAAI0oD,GAAa,EACjB,KAAO5iH,EAAIysG,EAAIzsG,GAAK,EAAG,CACrB,GACEs7G,IACAA,GAAesH,MAAgBpqH,EAAQxP,KAAKk7B,WAE5C,SAEF,MAAMghF,EAAal8G,KAAKw3H,iCACtB3kH,EAAMrD,MACNqD,EAAMpD,OACN0jE,EAAiBn8D,GACjBm8D,EAAiBn8D,EAAI,GACrBxH,EACAC,EACA0d,EACAC,EACAi4B,EACAC,EACA3oC,EACAjF,EACAigH,EACA/iF,GACAu0E,IAAkBE,GAClB5pE,GAGIz2B,EAAO,CACX9Y,EACAooH,EACAzlH,EACAqpG,EACAtvE,EACAu8E,GACd,EACkB,KACJE,GACd,EACkB,MAEN,GAAIrjD,EAAe,CACjB,GAAsB,SAAlByT,EAEF,SACK,GAAsB,aAAlBA,EAA8B,CAEvCzT,EAAcksB,OAAOgqB,EAAW8Z,cAChC,QAChB,CAAqB,CACL,IAAI6D,EACAC,EACJ,GAAIjpD,EAAwB,CAC1B,MAAM5tE,EAAQwgH,EAAKzsG,EACnB,IAAK65D,EAAuB5tE,GAAQ,CAElC4tE,EAAuB5tE,GAAS+lB,EAEhC,QACD,CAID,GAHA6wG,EAAYhpD,EAAuB5tE,UAC5B4tE,EAAuB5tE,GAC9B62H,EAAoBhE,GAAgB+D,GAChC7zD,EAAcisB,SAAS6nC,GACzB,QAEH,CACD,GAAI9zD,EAAcisB,SAASiqB,EAAW8Z,cACpC,SAEE6D,IAEF7zD,EAAcksB,OAAO4nC,GAErB95H,KAAKq4H,oBAAoBn0H,MAAMlE,KAAM65H,IAEvC7zD,EAAcksB,OAAOgqB,EAAW8Z,aACjC,CACF,CACDh2H,KAAKq4H,oBAAoBn0H,MAAMlE,KAAMgpB,EACtC,GACCpnB,EACF,MACF,KAAKqsH,GACH,MAAMlsH,GAA+BssH,EAAY,GAC3CrsH,GAA6BqsH,EAAY,GACzCiF,GAAkCjF,EAAY,GAC9C3tD,GAAkC2tD,EAAY,GACpDgF,EAAiChF,EAAY,GAC7C,MAAMzF,GAAkCyF,EAAY,GAC9C0L,GAA2C1L,EAAY,GACvD54E,GAAiC44E,EAAY,GACnD8E,EAAmC9E,EAAY,GAC/C,MAAMlL,GAAqCkL,EAAY,IACvD3rE,EAA8B2rE,EAAY,IAC1C+E,EAAiC/E,EAAY,IAC7C,MAAM2L,GAAkB,CACC3L,EAAY,IACZA,EAAY,KAG/Bt4C,GAAY/1E,KAAKkyH,WAAWkB,GAC5B7vE,GAAOwyB,GAAUxyB,KACjBq1B,GAAY,CAChB7C,GAAUr+D,MAAM,GAAKqiH,GACrBhkD,GAAUr+D,MAAM,GAAKqiH,IAGvB,IAAIE,GACA12E,MAAQvjD,KAAK02H,QACfuD,GAAej6H,KAAK02H,QAAQnzE,KAE5B02E,GAAe,CAAA,EACfj6H,KAAK02H,QAAQnzE,IAAQ02E,IAGvB,MAAMC,GAAatiC,GAAiBzkB,EAAkBpxE,GAAOC,GAAK,GAC5Dm4H,GACJnuH,KAAKmP,IAAIy9D,GAAU,IACnBr0B,GAAyBhB,GAAMb,EAAMu3E,IACvC,GAAIv5D,IAAYy5D,IAAcD,GAAY,CACxC,MAGM7vF,EAAQwqF,GACZ1hD,EACApxE,GACAC,GACA,EACA0gD,GANCw3E,GAAaC,IAAcjE,GAAoBxzE,EAFhC1iD,KAAKkyH,WAAWkB,GAASn9C,WAUzC2yC,GACA58G,KAAKmP,IAAIy9D,GAAU,IACnBr0B,GACAhB,GACA02E,GACAT,EAA4B,EAAIx5H,KAAKqxE,eAEvC+oD,EAAW,GAAI/vF,EAAO,CAEpB,MAAM0rF,EAAyB,GAC/B,IAAIh/G,EAAGg8G,EAAI4C,EAAOjwE,EAAO20E,EACzB,GAAIlH,EACF,IAAKp8G,EAAI,EAAGg8G,EAAK1oF,EAAMlpC,OAAQ4V,EAAIg8G,IAAMh8G,EAAG,CAC1CsjH,EAAOhwF,EAAMtzB,GACb4+G,EAA+B0E,EAAK,GACpC30E,EAAQ1lD,KAAK22H,YAAYhB,EAAOvC,EAAS,GAAID,GAC7ChmG,EACyBktG,EAAK,IAC3BzhD,GAAU,GAAK,GAAKuqC,GAAcA,IACrC/1F,EACEkmG,GAAW5tE,EAAMj2C,OACG,GAAlB,GAAM6jH,IAAgBnQ,GAAcvqC,GAAU,GAC9CA,GAAU,GACZnjC,GACF,MAAMymE,EAAal8G,KAAKw3H,iCACtB9xE,EAAMl2C,MACNk2C,EAAMj2C,OACN4qH,EAAK,GACLA,EAAK,GACL30E,EAAMl2C,MACNk2C,EAAMj2C,OACN0d,EACAC,EACA,EACA,EACAitG,EAAK,GACLL,IACA,EACA73E,IACA,EACA1C,GAEF,GACEumB,GACAA,EAAcisB,SAASiqB,EAAW8Z,cAElC,MAAMoE,EAERrE,EAAuBpwH,KAAK,CAC1BuK,EACAooH,EACA5yE,EACAw2D,EACA,EACA,KACA,MAEH,CAEH,GAAImX,EACF,IAAKt8G,EAAI,EAAGg8G,EAAK1oF,EAAMlpC,OAAQ4V,EAAIg8G,IAAMh8G,EAAG,CAC1CsjH,EAAOhwF,EAAMtzB,GACb4+G,EAA+B0E,EAAK,GACpC30E,EAAQ1lD,KAAK22H,YAAYhB,EAAOvC,EAASC,EAAS,IAClDlmG,EAAiCktG,EAAK,GACtCjtG,EAAUkmG,GAAW5tE,EAAMj2C,OAASgmC,GACpC,MAAMymE,EAAal8G,KAAKw3H,iCACtB9xE,EAAMl2C,MACNk2C,EAAMj2C,OACN4qH,EAAK,GACLA,EAAK,GACL30E,EAAMl2C,MACNk2C,EAAMj2C,OACN0d,EACAC,EACA,EACA,EACAitG,EAAK,GACLL,IACA,EACA73E,IACA,EACA1C,GAEF,GACEumB,GACAA,EAAcisB,SAASiqB,EAAW8Z,cAElC,MAAMoE,EAERrE,EAAuBpwH,KAAK,CAC1BuK,EACAooH,EACA5yE,EACAw2D,EACA,EACA,KACA,MAEH,CAECl2C,GACFA,EAAc34D,KAAK0oH,EAAuBnrF,IAAIkrF,KAEhD,IAAK,IAAIl0H,EAAI,EAAGuE,EAAK4vH,EAAuB50H,OAAQS,EAAIuE,IAAMvE,EAC5D5B,KAAKq4H,oBAAoBn0H,MAAMlE,KAAM+1H,EAAuBn0H,GAE/D,CACF,GACCA,EACF,MACF,KAAKqsH,GACH,QAAwBznH,IAApBoyH,EAA+B,CACjCn5E,EACE4uE,EAAY,GAEd,MAAM79E,EAASooF,EAAgBn5E,EAASi6E,GACxC,GAAIlpF,EACF,OAAOA,CAEV,GACC5uC,EACF,MACF,KAAKqsH,GACCwL,EACFN,IAEAn5H,KAAKqiH,MAAMnyG,KAEXtO,EACF,MACF,KAAKqsH,GAYH,IAXAj3G,EAA2Bq3G,EAAY,GACvC5K,EAA4B4K,EAAY,GACxCj3G,EAAI+7D,EAAiBn8D,GACrBK,EAAI87D,EAAiBn8D,EAAI,GACzBiiH,EAAU7hH,EAAI,GAAO,EACrB8hH,EAAU7hH,EAAI,GAAO,EACjB4hH,IAAWF,GAASG,IAAWF,IACjC9oH,EAAQ2jE,OAAOz8D,EAAGC,GAClB0hH,EAAQE,EACRD,EAAQE,GAELliH,GAAK,EAAGA,EAAIysG,EAAIzsG,GAAK,EACxBI,EAAI+7D,EAAiBn8D,GACrBK,EAAI87D,EAAiBn8D,EAAI,GACzBiiH,EAAU7hH,EAAI,GAAO,EACrB8hH,EAAU7hH,EAAI,GAAO,EACjBL,GAAKysG,EAAK,GAAKwV,IAAWF,GAASG,IAAWF,IAChD9oH,EAAQ4jE,OAAO18D,EAAGC,GAClB0hH,EAAQE,EACRD,EAAQE,KAGVt3H,EACF,MACF,KAAKqsH,GACHoL,EAAsBhL,EACtBruH,KAAKu2H,WAAalI,EAAY,GAE1B8K,IACFn5H,KAAKqiH,MAAMnyG,GACXipH,EAAc,EACVC,IACFlpH,EAAQkkE,SACRglD,EAAgB,IAIpBlpH,EAAQ0sB,UAEJyxF,EAAY,KAEdzsH,EACF,MACF,KAAKqsH,GACHqL,EAAwBjL,EACpB+K,IACFlpH,EAAQkkE,SACRglD,EAAgB,GAElBp5H,KAAKu3H,gBAAgBrnH,EAAkC,KACrDtO,EACF,MACF,KAAKqsH,GACCwL,EACFL,IAEAlpH,EAAQkkE,WAERxyE,EACF,MACF,UACIA,EAGP,CACGu3H,GACFn5H,KAAKqiH,MAAMnyG,GAETkpH,GACFlpH,EAAQkkE,QAGX,CAUD,OAAAkmD,CACEpqH,EACAooH,EACAviH,EACAm7D,EACAymD,EACA3xD,GAEAhmE,KAAKqxE,cAAgBH,EACrBlxE,KAAK24H,SACHzoH,EACAooH,EACAviH,EACA/V,KAAKwsH,aACLmL,OACAnxH,OACAA,EACAw/D,EAEH,CAYD,mBAAAu0D,CACErqH,EACA6F,EACAm7D,EACA0nD,EACAC,GAGA,OADA74H,KAAKqxE,cAAgBH,EACdlxE,KAAK24H,SACVzoH,EACA,EACA6F,EACA/V,KAAK0sH,0BACL,EACAkM,EACAC,EAEH,GCptCH,MAAM2B,GAAQ,CAAC,UAAW,SAAU,aAAc,QAAS,OAAQ,WAgWnE,MAAMC,GAA6B,CAAA,EAS5B,SAASC,GAAmB5yG,GACjC,QAA2CthB,IAAvCi0H,GAA2B3yG,GAC7B,OAAO2yG,GAA2B3yG,GAGpC,MAAMrU,EAAgB,EAATqU,EAAa,EACpB6yG,EAAgB7yG,EAASA,EACzB8yG,EAAY,IAAIv4H,MAAMs4H,EAAgB,GAC5C,IAAK,IAAI/4H,EAAI,EAAGA,GAAKkmB,IAAUlmB,EAC7B,IAAK,IAAIwiB,EAAI,EAAGA,GAAK0D,IAAU1D,EAAG,CAChC,MAAM87B,EAAat+C,EAAIA,EAAIwiB,EAAIA,EAC/B,GAAI87B,EAAay6E,EACf,MAEF,IAAIrzG,EAAWszG,EAAU16E,GACpB54B,IACHA,EAAW,GACXszG,EAAU16E,GAAc54B,GAE1BA,EAAS3hB,KAA4C,IAArCmiB,EAASlmB,GAAK6R,GAAQqU,EAAS1D,IAAU,GACrDxiB,EAAI,GACN0lB,EAAS3hB,KAA4C,IAArCmiB,EAASlmB,GAAK6R,GAAQqU,EAAS1D,IAAU,GAEvDA,EAAI,IACNkD,EAAS3hB,KAA4C,IAArCmiB,EAASlmB,GAAK6R,GAAQqU,EAAS1D,IAAU,GACrDxiB,EAAI,GACN0lB,EAAS3hB,KAA4C,IAArCmiB,EAASlmB,GAAK6R,GAAQqU,EAAS1D,IAAU,GAG9D,CAGH,MAAMy2G,EAAa,GACnB,IAAK,IAAIj5H,EAAI,EAAGuE,EAAKy0H,EAAUz5H,OAAQS,EAAIuE,IAAMvE,EAC3Cg5H,EAAUh5H,IACZi5H,EAAWl1H,QAAQi1H,EAAUh5H,IAKjC,OADA64H,GAA2B3yG,GAAU+yG,EAC9BA,CACT,CAEA,IAAAC,GAlZA,MAaE,WAAAh7H,CACEowC,EACAxzB,EACAwe,EACAigE,EACA4/B,EACAC,GAMAh7H,KAAKg0H,WAAa9jF,EAMlBlwC,KAAKk7F,UAAYC,EAMjBn7F,KAAKo7B,YAAcF,EAMnBl7B,KAAKi0H,YAAcv3G,EAMnB1c,KAAKi7H,cAAgBD,EAMrBh7H,KAAKk7H,mBAAqB,GAM1Bl7H,KAAKm7H,qBAAuB,KAM5Bn7H,KAAKo7H,uBzMpDA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GyMsDrBp7H,KAAKq7H,iBAAiBN,EACvB,CAMD,IAAA/+C,CAAK9rE,EAAS6F,GACZ,MAAMulH,EAAiBt7H,KAAKu7H,cAAcxlH,GAC1C7F,EAAQ+jE,YACR/jE,EAAQ2jE,OAAOynD,EAAe,GAAIA,EAAe,IACjDprH,EAAQ4jE,OAAOwnD,EAAe,GAAIA,EAAe,IACjDprH,EAAQ4jE,OAAOwnD,EAAe,GAAIA,EAAe,IACjDprH,EAAQ4jE,OAAOwnD,EAAe,GAAIA,EAAe,IACjDprH,EAAQ8rE,MACT,CAOD,gBAAAq/C,CAAiBN,GACf,IAAK,MAAMjuF,KAAUiuF,EAAiB,CACpC,IAAIS,EAAYx7H,KAAKk7H,mBAAmBpuF,QACtBtmC,IAAdg1H,IACFA,EAAY,CAAA,EACZx7H,KAAKk7H,mBAAmBpuF,GAAU0uF,GAEpC,MAAMC,EAAsBV,EAAgBjuF,GAC5C,IAAK,MAAM0nF,KAAeiH,EAAqB,CAC7C,MAAMjP,EAAeiP,EAAoBjH,GACzCgH,EAAUhH,GAAe,IAAIkH,GAC3B17H,KAAKi0H,YACLj0H,KAAKo7B,YACLp7B,KAAKk7F,UACLsxB,EAEH,CACF,CACF,CAMD,YAAAmP,CAAaH,GACX,IAAK,MAAM1uF,KAAU9sC,KAAKk7H,mBAAoB,CAC5C,MAAMU,EAAa57H,KAAKk7H,mBAAmBpuF,GAC3C,IAAK,IAAIlrC,EAAI,EAAGuE,EAAKq1H,EAAUr6H,OAAQS,EAAIuE,IAAMvE,EAC/C,GAAI45H,EAAU55H,KAAMg6H,EAClB,OAAO,CAGZ,CACD,OAAO,CACR,CAYD,0BAAAx8E,CACEjoC,EACAuF,EACAC,EACA0iC,EACA1jC,EACAkgH,GAGA,MAAMC,EAA6B,GADnCz8E,EAAerzC,KAAKgZ,MAAMq6B,IACa,EACjCtpC,EAAYgZ,GAChB/uB,KAAKo7H,uBACL/7E,EAAe,GACfA,EAAe,GACf,EAAI3iC,GACH,EAAIA,GACJC,GACAxF,EAAW,IACXA,EAAW,IAGR4kH,GAAc/7H,KAAKm7H,qBACrBY,IACF/7H,KAAKm7H,qBAAuB5rH,GAC1BusH,EACAA,OACAt1H,EACA,CAACsM,oBAAoB,KAGzB,MAAM5C,EAAUlQ,KAAKm7H,qBAerB,IAAItC,EAZF3oH,EAAQN,OAAOJ,QAAUssH,GACzB5rH,EAAQN,OAAOH,SAAWqsH,GAE1B5rH,EAAQN,OAAOJ,MAAQssH,EACvB5rH,EAAQN,OAAOH,OAASqsH,GACdC,GACV7rH,EAAQC,UAAU,EAAG,EAAG2rH,EAAaA,QAOZt1H,IAAvBxG,KAAKi7H,gBACPpC,EvMTG,CAACr+G,IAAUA,KAAU,KAAW,KuMUnCf,GAAiBo/G,EAAW1hH,GAC5BuC,GACEm/G,EACAn8G,GAAc1c,KAAKi7H,cAAgB57E,GACnCw5E,IAIJ,MAAMnmC,EAAUgoC,GAAmBr7E,GAEnC,IAAIm1E,EAOJ,SAASoE,EAAgBn5E,EAAS9qC,GAChC,MAAMhB,EAAYzD,EAAQ8C,aACxB,EACA,EACA8oH,EACAA,GACA35H,KACF,IAAK,IAAIP,EAAI,EAAGuE,EAAKusF,EAAQvxF,OAAQS,EAAIuE,EAAIvE,IAC3C,GAAI+R,EAAU++E,EAAQ9wF,IAAM,EAAG,CAC7B,IACGi6H,GACgB,UAAhBrH,GAA2C,SAAhBA,GAC5BqH,EAAoBn2H,SAAS+5C,GAC7B,CACA,MAAMu8E,GAAOtpC,EAAQ9wF,GAAK,GAAK,EACzBwV,EAAIioC,EAAgB28E,EAAMF,EAC1BzkH,EAAIgoC,GAAiB28E,EAAMF,EAAe,GAC1CtrF,EAAS70B,EAAS8jC,EAAS9qC,EAAUyC,EAAIA,EAAIC,EAAIA,GACvD,GAAIm5B,EACF,OAAOA,CAEV,CACDtgC,EAAQC,UAAU,EAAG,EAAG2rH,EAAaA,GACrC,KACD,CAGJ,CAGD,MAAMtqB,EAAK9qG,OAAOC,KAAK3G,KAAKk7H,oBAAoBtwF,IAAIX,QAGpD,IAAIroC,EAAGwiB,EAAGo3G,EAAWS,EAAUzrF,EAC/B,IAHAghE,EAAGp9E,KAAKpzB,GAGHY,EAAI4vG,EAAGrwG,OAAS,EAAGS,GAAK,IAAKA,EAAG,CACnC,MAAM6yH,EAAYjjB,EAAG5vG,GAAG+W,WAExB,IADA6iH,EAAYx7H,KAAKk7H,mBAAmBzG,GAC/BrwG,EAAIo2G,GAAMr5H,OAAS,EAAGijB,GAAK,IAAKA,EAGnC,GAFAowG,EAAcgG,GAAMp2G,GACpB63G,EAAWT,EAAUhH,QACJhuH,IAAby1H,IACFzrF,EAASyrF,EAAS1B,oBAChBrqH,EACA6F,EACA4G,EACAi8G,EACAC,GAEEroF,GACF,OAAOA,CAId,CAEF,CAMD,aAAA+qF,CAAcxlH,GACZ,MAAMm6B,EAAYlwC,KAAKg0H,WACvB,IAAK9jF,EACH,OAAO,KAET,MAAM/1B,EAAO+1B,EAAU,GACjB91B,EAAO81B,EAAU,GACjB71B,EAAO61B,EAAU,GACjB51B,EAAO41B,EAAU,GACjBorF,EAAiB,CAACnhH,EAAMC,EAAMD,EAAMG,EAAMD,EAAMC,EAAMD,EAAMD,GAElE,OADA6S,GAAYquG,EAAgB,EAAG,EAAG,EAAGvlH,EAAWulH,GACzCA,CACR,CAKD,OAAAx2H,GACE,OAAOA,EAAQ9E,KAAKk7H,mBACrB,CAYD,OAAAZ,CACEpqH,EACAooH,EACAviH,EACAm7D,EACAymD,EACAuE,EACAl2D,GAGA,MAAMwrC,EAAK9qG,OAAOC,KAAK3G,KAAKk7H,oBAAoBtwF,IAAIX,QAWpD,IAAIroC,EAAGuE,EAAIie,EAAG2G,EAAI2pG,EAASC,EAI3B,IAdAnjB,EAAGp9E,KAAKpzB,GAIJhB,KAAKg0H,aACP9jH,EAAQq1C,OACRvlD,KAAKg8E,KAAK9rE,EAAS6F,IAGrBmmH,EAAeA,GAA8B1B,GAEzCx0D,GACFwrC,EAAGC,UAEA7vG,EAAI,EAAGuE,EAAKqrG,EAAGrwG,OAAQS,EAAIuE,IAAMvE,EAAG,CACvC,MAAM6yH,EAAYjjB,EAAG5vG,GAAG+W,WAExB,IADA+7G,EAAU10H,KAAKk7H,mBAAmBzG,GAC7BrwG,EAAI,EAAG2G,EAAKmxG,EAAa/6H,OAAQijB,EAAI2G,IAAM3G,EAAG,CAEjDuwG,EAASD,EADWwH,EAAa93G,SAElB5d,IAAXmuH,GACFA,EAAO2F,QACLpqH,EACAooH,EACAviH,EACAm7D,EACAymD,EACA3xD,EAGL,CACF,CAEGhmE,KAAKg0H,YACP9jH,EAAQ01C,SAEX,GC/VI,MAAMu2E,GAAwB,GAgB9B,SAASC,GACd3oH,EACA+P,EACAy/C,EACAi3B,EACA3gF,EACAmD,EACAC,GAEA,MAEMzM,EAAUX,GAFFkE,EAAK,GAAK0oH,GACT1oH,EAAK,GAAK0oH,IAEzBjsH,EAAQ2sE,uBAAwB,EAChC,MAAMjtE,EAASM,EAAQN,OACjBo0D,EAAW,IAAI2X,GACnBzrE,EACAisH,GACA5iH,EACA,KACAoD,GAEI0/G,EAAep5D,EAAS9hE,OAExBm7H,EAActwH,KAAKuT,MAAM,SAAwB88G,GACjDE,EAAmB,CAAA,EACzB,IAAK,IAAI36H,EAAI,EAAGA,GAAKy6H,IAAgBz6H,EAAG,CACtC,MAAM69C,EAAUwjB,EAASrhE,EAAI,GACvB46H,EAAuB/8E,EAAQpqC,oBAAsB6kF,EAC3D,IAAKsiC,EACH,SAEF,IAAI9mH,EAAS8mH,EAAqB/8E,EAAS/iC,GAC3C,IAAKhH,EACH,SAEGrT,MAAMC,QAAQoT,KACjBA,EAAS,CAACA,IAEZ,MACMq0B,GADQnoC,EAAI06H,GACE3jH,SAAS,IAAI8jH,SAAS,EAAG,UAC7C,IAAK,IAAIr4G,EAAI,EAAG2G,EAAKrV,EAAOvU,OAAQijB,EAAI2G,IAAM3G,EAAG,CAC/C,MAAMs4G,EAAgBhnH,EAAO0O,GACvBzP,EAAW+nH,EAAcjoD,qBAAdioD,CAAoCj9E,GACrD,IAAK9qC,IAAakJ,GAAWtE,EAAQ5E,EAASyK,aAC5C,SAEF,MAAM9O,EAAQosH,EAAc5nH,QACtBq/D,EAAO7jE,EAAM+jE,UACfF,GACFA,EAAKowC,SAASx6E,GAEhB,MAAMqqC,EAAS9jE,EAAMgkE,YACjBF,IACFA,EAAOmwC,SAASx6E,GAChBqqC,EAAOuB,YAAY,OAErBrlE,EAAMu3G,aAAQrhH,GACd,MAAMqM,EAAQ6pH,EAAcphG,WAC5B,GAAIzoB,EAAO,CACT,MAAM8pH,EAAU9pH,EAAMgvG,eACtB,IAAK8a,EACH,SAGF,MAAMC,EAAartH,GACjBotH,EAAQ,GACRA,EAAQ,QACRn2H,EACA,CAAC8jC,OAAO,IAEJhQ,EAAMsiG,EAAWhtH,OACvBgtH,EAAWhgG,UAAYmN,EACvB6yF,EAAW//F,SAAS,EAAG,EAAGvC,EAAI9qB,MAAO8qB,EAAI7qB,QACzCa,EAAMsrB,SACJ,IAAI4pF,GAAK,CACPlrF,IAAKA,EACLpN,OAAQra,EAAMukE,YACdyuC,aAAc,SACdE,aAAc,SACdjrG,OAAQjI,EAAMykE,YACd1qC,QAAS,EACTn5B,KAAMZ,EAAMa,UACZgE,MAAO7E,EAAM6uG,WACb/kG,SAAU9J,EAAMgjC,cAChBurE,eAAgBvuG,EAAM0kE,sBAG3B,CACD,MAAMzqC,EAASx8B,EAAMq9B,aAAe,EACpC,IAAIkvF,EAAiBN,EAAiBzvF,GACjC+vF,IACHA,EAAiB,CAAA,EACjBN,EAAiBzvF,GAAU+vF,EAC3BA,EAAwB,QAAI,GAC5BA,EAAuB,OAAI,GAC3BA,EAA2B,WAAI,GAC/BA,EAAsB,MAAI,IAE5B,MAAM98H,EAAO4U,EAAS6Z,UACtB,GAAa,uBAATzuB,EAA+B,CACjC,MAAM20E,EAC8D,EAEhEkiB,8BACJ,IAAK,IAAIh1F,EAAI,EAAGuE,EAAKuuE,EAAWvzE,OAAQS,EAAIuE,IAAMvE,EAAG,CACnD,MAAM+S,EAAW+/D,EAAW9yE,GAC5Bi7H,EAAeloH,EAAS6Z,UAAUlL,QAAQ,QAAS,KAAK3d,KACtDgP,EACArE,EAEH,CACT,MACQusH,EAAe98H,EAAKujB,QAAQ,QAAS,KAAK3d,KAAKgP,EAAUrE,EAE5D,CACF,CAED,MAAMwsH,EAAap2H,OAAOC,KAAK41H,GAAkB3xF,IAAIX,QAAQ7V,KAAKpzB,GAClE,IAAK,IAAIY,EAAI,EAAGuE,EAAK22H,EAAW37H,OAAQS,EAAIuE,IAAMvE,EAAG,CACnD,MAAMi7H,EAAiBN,EAAiBO,EAAWl7H,IACnD,IAAK,MAAM7B,KAAQ88H,EAAgB,CACjC,MAAME,EAAeF,EAAe98H,GACpC,IAAK,IAAIqkB,EAAI,EAAG2G,EAAKgyG,EAAa57H,OAAQijB,EAAI2G,EAAI3G,GAAK,EAAG,CACxD4/C,EAAS7uD,SAAS4nH,EAAa34G,EAAI,IACnC,IAAK,IAAIE,EAAI,EAAG04G,EAAKx5G,EAAWriB,OAAQmjB,EAAI04G,IAAM14G,EAChD0/C,EAASwQ,aAAahxD,EAAWc,IACjC0/C,EAASsL,aAAaytD,EAAa34G,GAEtC,CACF,CACF,CACD,OAAOlU,EAAQ8C,aAAa,EAAG,EAAGpD,EAAOJ,MAAOI,EAAOH,OACzD,CAYO,SAASwtH,GAAU5/E,EAAO4lB,EAAUtvD,GAEzC,MAAMupH,EAAiB,GACvB,GAAIvpH,EAAW,CACb,MAAMyD,EAAIpL,KAAKuT,MAAMvT,KAAKgZ,MAAMq4B,EAAM,IAAM8+E,IACtC9kH,EAAIrL,KAAKuT,MAAMvT,KAAKgZ,MAAMq4B,EAAM,IAAM8+E,IAItCl5H,EAGJ,GAFC2gB,GAAMxM,EAAG,EAAGzD,EAAUnE,MAAQ,GAC7BoU,GAAMvM,EAAG,EAAG1D,EAAUlE,OAAS,GAAKkE,EAAUnE,OAE5C0U,EAAIvQ,EAAUxR,KAAKc,GACnBm8B,EAAIzrB,EAAUxR,KAAKc,EAAQ,GAE3BrB,EADI+R,EAAUxR,KAAKc,EAAQ,GACnB,KAAOm8B,EAAI,IAAMlb,GACzBo4G,EAActwH,KAAKuT,MAAM,SAAwB0jD,EAAS9hE,QAC5DS,GAAKA,EAAI06H,GAAgB,GAC3BY,EAAev3H,KAAKs9D,EAASrhE,EAAI06H,EAAc,GAElD,CACD,OAAOY,CACT,CC4lBA,IAAAC,GA5uBA,cAAwC7uB,GAItC,WAAAxuG,CAAYs9H,GACVn4H,MAAMm4H,GAGNp9H,KAAKq9H,6BAA+Br9H,KAAKs9H,wBAAwBp2H,KAAKlH,MAKtEA,KAAKu9H,wBAKLv9H,KAAKw9H,uBAAyB,KAK9Bx9H,KAAKy9H,kBAAoB,KAMzBz9H,KAAK6lG,mBAAqB,EAM1B7lG,KAAK09H,oBAAsBvvG,IAM3BnuB,KAAKowG,gBzMyGA,CAAC51F,IAAUA,KAAU,KAAW,KyMnGrCxa,KAAK29H,uBzMmGA,CAACnjH,IAAUA,KAAU,KAAW,KyM7FrCxa,KAAK49H,kBAML59H,KAAK69H,gBAAkB,KAMvB79H,KAAK89H,oBAAsB,KAM3B99H,KAAK+9H,qBAAuB,KAM5B/9H,KAAKg+H,aAAe,KAMpBh+H,KAAKi+H,oBAAqB,EAK1Bj+H,KAAKssG,uBAAyB,KAM9BtsG,KAAKk+H,UAAW,EAMhBl+H,KAAKm+H,oBAAsB,KAM3Bn+H,KAAKkhH,SAAW,CACjB,CAOD,YAAAkd,CAAaC,EAAe7gF,EAAYwoB,GACtC,MAAMzsD,EAASikC,EAAWjkC,OACpBggC,EAAYiE,EAAWjE,UACvB98B,EAAS88B,EAAU98B,OACnBC,EAAa68B,EAAU78B,WACvBwC,EAAaq6B,EAAUr6B,WACvBvC,EAAW48B,EAAU58B,SACrBwC,EAAmBD,EAAWE,YAC9Bk/G,EAAet+H,KAAK0sG,WAAWzvD,YAC/B/hB,EAAasiB,EAAWtiB,WACxB0pC,EAAYpnB,EAAWonB,UACvB+yD,IACJ/yD,EAAU51B,KAAuB41B,EAAU51B,KAEvC9+B,EAAUlQ,KAAKm+H,oBACf3uH,EAAQxD,KAAKgZ,MAAMw4B,EAAW/pC,KAAK,GAAKynB,GACxCzrB,EAASzD,KAAKgZ,MAAMw4B,EAAW/pC,KAAK,GAAKynB,GAEzC0W,EAAa0sF,EAAat+E,YAAc9gC,EAAWG,WACnDC,EAAasyB,EAAaz1B,GAASgD,GAAoB,KACvDo/G,EAAW3sF,EACb5lC,KAAKiZ,MAAM1L,EAAO,GAAK4F,EAAiB,IAAMG,GAAc,EAC5D,EACJ,IAAIk/G,EAAQ5sF,EACR5lC,KAAKuT,OAAOhG,EAAO,GAAK4F,EAAiB,IAAMG,GAC/C,EACJ,EAAG,CACD,MAAMvJ,EAAY/V,KAAKouG,mBACrB3xF,EACAC,EACAC,EACAue,EACA1rB,EACAC,EACA+uH,EAAQl/G,GAEV++G,EAAc/D,QACZpqH,EACA,EACA6F,EACA4G,EACAg7G,OACAnxH,EACAw/D,EAER,SAAew4D,EAAQD,EACpB,CAED,wBAAAE,GACE,GAAsB,IAAlBz+H,KAAKkhH,SAAgB,CACvB,MAAMwd,EAAqBnvH,GACzBvP,KAAKkQ,QAAQN,OAAOJ,MACpBxP,KAAKkQ,QAAQN,OAAOH,OACpBC,IAEF1P,KAAKm+H,oBAAsBO,CACjC,MACM1+H,KAAKm+H,oBAAsBn+H,KAAKkQ,OAEnC,CAED,0BAAAyuH,GACE,GAAsB,IAAlB3+H,KAAKkhH,SAAgB,CACvB,MAAM52E,EAAQtqC,KAAKkQ,QAAQs1C,YAC3BxlD,KAAKkQ,QAAQs1C,YAAcxlD,KAAKkhH,SAChClhH,KAAKkQ,QAAQ6C,UAAU/S,KAAKm+H,oBAAoBvuH,OAAQ,EAAG,GAC3D5P,KAAKkQ,QAAQs1C,YAAclb,EAC3Br6B,GAAcjQ,KAAKm+H,qBACnBzuH,GAAW/J,KAAK3F,KAAKm+H,oBAAoBvuH,QACzC5P,KAAKm+H,oBAAsB,IAC5B,CACF,CAMD,eAAAr3E,CAAgBtJ,GACVx9C,KAAKssG,yBACPtsG,KAAKy+H,2BACLz+H,KAAKo+H,aACHp+H,KAAKssG,uBACL9uD,EACAA,EAAWwoB,eAEbhmE,KAAK2+H,6BAER,CAQD,WAAAtgF,CAAYb,EAAYr9C,GACtB,MAAM+6B,EAAasiB,EAAWtiB,WACxBihB,EAAaqB,EAAWI,iBAAiBJ,EAAWmJ,YAG1DhvC,GAAU3X,KAAKitG,eAAgB,EAAI/xE,EAAY,EAAIA,GACnD5iB,GAAYtY,KAAKygD,sBAAuBzgD,KAAKitG,gBAE7C,MAAM+B,EAAkB4vB,GAAkB5+H,KAAKitG,gBAE/CjtG,KAAKstG,aAAantG,EAAQ6uG,EAAiBhvG,KAAKstC,cAAckQ,IAC9D,MAAMttC,EAAUlQ,KAAKkQ,QACfN,EAASM,EAAQN,OAEjB0qE,EAAct6E,KAAKg+H,aACnB1xB,EAAyBtsG,KAAKssG,uBACpC,IAAIzvD,EACDy9B,IAAgBA,EAAYx1E,WAC5BwnG,IAA2BA,EAAuBxnG,UACrD,IAAK+3C,EAAQ,CAIX,KAFE78C,KAAK0sG,WAAWjmG,YAAYsoC,KAC5B/uC,KAAK0sG,WAAWjmG,YAAYsoC,KAE5B,OAAO,IAEV,CAGD,MAAMv/B,EAAQxD,KAAKgZ,MAAMw4B,EAAW/pC,KAAK,GAAKynB,GACxCzrB,EAASzD,KAAKgZ,MAAMw4B,EAAW/pC,KAAK,GAAKynB,GAC3CtrB,EAAOJ,OAASA,GAASI,EAAOH,QAAUA,GAC5CG,EAAOJ,MAAQA,EACfI,EAAOH,OAASA,EACZG,EAAOU,MAAMyF,YAAci5F,IAC7Bp/F,EAAOU,MAAMyF,UAAYi5F,IAEjBhvG,KAAKktG,iBACfh9F,EAAQC,UAAU,EAAG,EAAGX,EAAOC,GAGjCzP,KAAKkuG,UAAUh+F,EAASstC,GAExB,MAAMjE,EAAYiE,EAAWjE,UACvBr6B,EAAaq6B,EAAUr6B,WAE7Blf,KAAKkhH,SAAW/kE,EAAWvP,QAC3B5sC,KAAKy+H,2BAGL,IAAIvvB,GAAU,EACd,GAAIryD,GAAUV,EAAW5iC,QAAUvZ,KAAKk+H,SAAU,CAChD,MAAMngF,EAAc3xB,GAAe+vB,EAAW5iC,OAAQ2F,GACtD29B,EAASpuB,GAAiBsvB,EAAaP,EAAWjkC,QAClD21F,EAAUryD,IAAW9iC,GAAegkC,EAAaP,EAAWjkC,QACxD21F,GACFlvG,KAAK2tG,cAAc3tG,KAAKm+H,oBAAqB3gF,EAAYO,EAE5D,CAkBD,OAhBIlB,GACF78C,KAAKo+H,aAAa9jD,EAAa98B,GAG7B0xD,GACFlvG,KAAKm+H,oBAAoBv4E,UAG3B5lD,KAAK2+H,6BAEL3+H,KAAKmuG,WAAWj+F,EAASstC,GAErBx9C,KAAK49H,oBAAsBrkF,EAAU58B,WACvC3c,KAAK49H,kBAAoBrkF,EAAU58B,SACnC3c,KAAKw9H,uBAAyB,MAEzBx9H,KAAKkmD,SACb,CAQD,WAAA9I,CAAYC,GACV,OAAO,IAAI94C,SAASE,IAClB,IAAKzE,KAAKw9H,yBAA2Bx9H,KAAKu9H,wBAAyB,CACjE,MAAM9pH,EAAO,CAACzT,KAAKkQ,QAAQN,OAAOJ,MAAOxP,KAAKkQ,QAAQN,OAAOH,QAC7DvL,GAAMlE,KAAKitG,eAAgBx5F,GAC3B,MAAMgJ,EAASzc,KAAK69H,gBACdnhH,EAAa1c,KAAK09H,oBAClB/gH,EAAW3c,KAAK49H,kBAChB1+G,EAAalf,KAAK89H,oBAClBvkH,EAASvZ,KAAK29H,uBACdjwF,EAAQ1tC,KAAK0sG,WACblpF,EAAa,GACbhU,EAAQiE,EAAK,GAAK0oH,GAClB1sH,EAASgE,EAAK,GAAK0oH,GACzB34G,EAAW7d,KACT3F,KAAKouG,mBACH3xF,EACAC,EACAC,EACAw/G,GACA3sH,EACAC,EACA,GACA3L,SAEJ,MAAMmG,EAASyjC,EAAMuP,YACf99B,EAAmBD,EAAWE,YACpC,GACEnV,EAAO+1C,YACP9gC,EAAWG,aACVtF,GAAeoF,EAAkB5F,GAClC,CACA,IAAI8E,EAAS9E,EAAO,GACpB,MAAM+F,EAAanD,GAASgD,GAC5B,IACIq2B,EADAgpF,EAAQ,EAEZ,KAAOngH,EAASc,EAAiB,MAC7Bq/G,EACFhpF,EAAUl2B,EAAak/G,EACvBh7G,EAAW7d,KACT3F,KAAKouG,mBACH3xF,EACAC,EACAC,EACAw/G,GACA3sH,EACAC,EACA+lC,GACA1xC,SAEJua,GAAUiB,EAIZ,IAFAk/G,EAAQ,EACRngH,EAAS9E,EAAO,GACT8E,EAASc,EAAiB,MAC7Bq/G,EACFhpF,EAAUl2B,EAAak/G,EACvBh7G,EAAW7d,KACT3F,KAAKouG,mBACH3xF,EACAC,EACAC,EACAw/G,GACA3sH,EACAC,EACA+lC,GACA1xC,SAEJua,GAAUiB,CAEb,CAEDtf,KAAKw9H,uBAAyBpB,GAC5B3oH,EACA+P,EACAxjB,KAAKy9H,kBACL/vF,EAAMr4B,mBACNkE,EACAmD,EACAC,EAEH,CACDlY,EACEw4H,GAAU5/E,EAAOr9C,KAAKy9H,kBAAmBz9H,KAAKw9H,wBAC/C,GAEJ,CAWD,0BAAAp+E,CACEjoC,EACAqmC,EACA6B,EACA1jC,EACAmkC,GAEA,IAAK9/C,KAAKg+H,aACR,OAEF,MAAMthH,EAAa8gC,EAAWjE,UAAU78B,WAClCC,EAAW6gC,EAAWjE,UAAU58B,SAChC+wB,EAAQ1tC,KAAK0sG,WAGbzpC,EAAW,CAAA,EAQX21D,EAAkB,SAAUn5E,EAAS9qC,EAAUurC,GACnD,MAAM34C,EAAMkB,EAAOg3C,GACb1U,EAAQk4B,EAAS17D,GACvB,GAAKwjC,GAcE,IAAc,IAAVA,GAAkBmV,EAAanV,EAAMmV,WAAY,CAC1D,GAAmB,IAAfA,EAGF,OAFA+iB,EAAS17D,IAAO,EAChBu4C,EAAQj5C,OAAOi5C,EAAQ++E,YAAY9zF,GAAQ,GACpCpvB,EAAS8jC,EAAS/R,EAAO/4B,GAElCo2B,EAAMp2B,SAAWA,EACjBo2B,EAAMmV,WAAaA,CACpB,MAtBW,CACV,GAAmB,IAAfA,EAEF,OADA+iB,EAAS17D,IAAO,EACToU,EAAS8jC,EAAS/R,EAAO/4B,GAElCmrC,EAAQn6C,KACLs9D,EAAS17D,GAAO,CACfk4C,QAASA,EACT/R,MAAOA,EACP/4B,SAAUA,EACVurC,WAAYA,EACZvkC,SAAUA,GAGf,CAUP,EAEI,IAAI60B,EACJ,MAAM+6B,EAAiB,CAACvrE,KAAKg+H,cAkB7B,OAjBIh+H,KAAKssG,wBACP/gC,EAAe5lE,KAAK3F,KAAKssG,wBAE3B/gC,EAAe/sB,MAAM6/E,GACX7tF,EAAS6tF,EAAcj/E,2BAC7BjoC,EACAuF,EACAC,EACA0iC,EACAu5E,EACAyF,IAAkBr+H,KAAKssG,wBACrB9uD,EAAWwoB,cACTxoB,EAAWwoB,cAAchQ,MAAMprB,KAAKv/B,GAASA,EAAKhH,QAClD,QAIDmsC,CACR,CAKD,kBAAAk1B,GACE,MAAMh4B,EAAQ1tC,KAAK0sG,WACfh/D,EAAMG,cAAgB7tC,KAAKg+H,cAC7BtwF,EAAM7lC,SAET,CAOD,uBAAAy1H,CAAwBz3H,GACtB7F,KAAK2sG,yBACN,CAOD,YAAAvuD,CAAaZ,GACX,MAAM4/E,EAAcp9H,KAAK0sG,WACnB4xB,EAAelB,EAAYngF,YACjC,IAAKqhF,EACH,OAAO,EAGT,MAAMQ,EAAYthF,EAAWonB,UAAU51B,IACjC+vF,EAAcvhF,EAAWonB,UAAU51B,IACnCgwF,EAAuB5B,EAAY6B,0BACnCC,EAAyB9B,EAAY+B,4BAE3C,GACGn/H,KAAKikE,QAAU+6D,GAAwBF,IACtCI,GAA0BH,EAG5B,OADA/+H,KAAKu9H,yBAA0B,GACxB,EAETv9H,KAAKu9H,yBAA0B,EAE/B,MAAM6B,EAAmB5hF,EAAWjkC,OAC9BggC,EAAYiE,EAAWjE,UACvBr6B,EAAaq6B,EAAUr6B,WACvBxC,EAAa68B,EAAU78B,WACvBwe,EAAasiB,EAAWtiB,WACxBmkG,EAAsBjC,EAAYt1H,cAClCw3H,EAA0BlC,EAAYmC,kBAC5C,IAAIC,EAAyBpC,EAAYqC,sBAEVj5H,IAA3Bg5H,IACFA,EAAyBE,IAG3B,MAAMjjH,EAAS88B,EAAU98B,OAAO3Y,QAC1ByV,EAASG,GACb0lH,EACAE,EAA0B5iH,GAEtBgyF,EAAiBn1F,EAAOzV,QACxB67H,EAAc,CAACpmH,EAAOzV,SACtBqb,EAAmBD,EAAWE,YAEpC,GACEk/G,EAAat+E,YACb9gC,EAAWG,aACVtF,GAAeoF,EAAkBq+B,EAAWjkC,QAC7C,CAMA,MAAM+F,EAAanD,GAASgD,GACtBu9D,EAAS1wE,KAAKyP,IAAIU,GAAS5C,GAAU,EAAG+F,GAC9C/F,EAAO,GAAK4F,EAAiB,GAAKu9D,EAClCnjE,EAAO,GAAK4F,EAAiB,GAAKu9D,EAClCkjD,GAAgBnjH,EAAQyC,GACxB,MAAM2gH,EAAaC,GAAYH,EAAY,GAAIzgH,GAG7C2gH,EAAW,GAAK1gH,EAAiB,IACjC0gH,EAAW,GAAK1gH,EAAiB,GAEjCwgH,EAAYh6H,KAAK,CACfk6H,EAAW,GAAKvgH,EAChBugH,EAAW,GACXA,EAAW,GAAKvgH,EAChBugH,EAAW,KAGbA,EAAW,GAAK1gH,EAAiB,IACjC0gH,EAAW,GAAK1gH,EAAiB,IAEjCwgH,EAAYh6H,KAAK,CACfk6H,EAAW,GAAKvgH,EAChBugH,EAAW,GACXA,EAAW,GAAKvgH,EAChBugH,EAAW,IAGhB,CAED,GACE7/H,KAAKikE,OACLjkE,KAAK09H,qBAAuBhhH,GAC5B1c,KAAK6lG,mBAAqBw5B,GAC1Br/H,KAAK+9H,sBAAwByB,GAC7BzlH,GAAe/Z,KAAK29H,uBAAwBpkH,GAQ5C,OANKhX,EAAOvC,KAAKowG,gBAAiB1B,KAChC1uG,KAAKw9H,uBAAyB,KAC9Bx9H,KAAKowG,gBAAkB1B,GAEzB1uG,KAAK69H,gBAAkBphH,EACvBzc,KAAKi+H,oBAAqB,GACnB,EAGTj+H,KAAKg+H,aAAe,KAEpB,MAAM1jD,EAAc,IAAIylD,GACtBC,GAAmBtjH,EAAYwe,GAC/B3hB,EACAmD,EACAwe,GAGF,IAAIo+C,EACAt5E,KAAK0sG,WAAWuzB,iBAClB3mD,EAAwB,IAAIymD,GAC1BC,GAAmBtjH,EAAYwe,GAC/B3hB,EACAmD,EACAwe,IAIJ,MAAMrP,EAAiBE,KACvB,IAAIolD,EACJ,GAAItlD,EAAgB,CAClB,IAAK,IAAIjqB,EAAI,EAAGuE,EAAKw5H,EAAYx+H,OAAQS,EAAIuE,IAAMvE,EAAG,CACpD,MACMs+H,EAAa/zG,GADJwzG,EAAY/9H,GACasd,GACxCo/G,EAAa7/B,aACXyhC,EACA7zG,GAAiB3P,EAAYwC,GAC7B2M,EAEH,CACDslD,EAAgBnnD,GAA4B6B,EAAgB3M,EAClE,MACM,IAAK,IAAItd,EAAI,EAAGuE,EAAKw5H,EAAYx+H,OAAQS,EAAIuE,IAAMvE,EACjD08H,EAAa7/B,aAAakhC,EAAY/9H,GAAI8a,EAAYwC,GAI1D,MAAM0O,EAAmBuyG,GAA0BzjH,EAAYwe,GAC/D,IAAI+oC,GAAQ,EACZ,MAAMpnB,EAIH4C,IACC,IAAI/pC,EACJ,MAAMwkF,EACJz6C,EAAQpqC,oBAAsB+nH,EAAY/nH,mBAI5C,GAHI6kF,IACFxkF,EAASwkF,EAAcz6C,EAAS/iC,IAE9BhH,EAAQ,CACV,MAAMw2D,EAAQlsE,KAAK+6E,cACjBt7B,EACA7xB,EACAlY,EACA4kE,EACAnJ,EACAmI,GAEFrV,EAAQA,IAAUiI,CACnB,GAGCg0D,EAAa/zG,GAAa5S,EAAQ2F,GAElC+jD,EAAWq7D,EAAa3gC,oBAAoBuiC,GAC9CV,GACFv8D,EAAS7uC,KAAKorG,GAEhB,IAAK,IAAI59H,EAAI,EAAGuE,EAAK88D,EAAS9hE,OAAQS,EAAIuE,IAAMvE,EAC9Ci7C,EAAOomB,EAASrhE,IAElB5B,KAAKy9H,kBAAoBx6D,EACzBjjE,KAAKikE,MAAQA,EAEb,MAAMm8D,EAA0B9lD,EAAY6zC,SACtCkQ,EAAgB,IAAIgC,GACxB9mH,EACAmD,EACAwe,EACAojG,EAAalgC,cACbgiC,EACAhD,EAAYmC,mBAyBd,OAtBIjmD,IACFt5E,KAAKssG,uBAAyB,IAAI+zB,GAChC9mH,EACAmD,EACAwe,EACAojG,EAAalgC,cACb9kB,EAAsB60C,SACtBiP,EAAYmC,oBAIhBv/H,KAAK09H,oBAAsBhhH,EAC3B1c,KAAK6lG,kBAAoBw5B,EACzBr/H,KAAK+9H,qBAAuByB,EAC5Bx/H,KAAKowG,gBAAkB1B,EACvB1uG,KAAK29H,uBAAyBpkH,EAC9BvZ,KAAK69H,gBAAkBphH,EACvBzc,KAAK89H,oBAAsB5+G,EAC3Blf,KAAKg+H,aAAeK,EACpBr+H,KAAKw9H,uBAAyB,KAE9Bx9H,KAAKi+H,oBAAqB,GACnB,CACR,CAWD,aAAAljD,CACEt7B,EACA7xB,EACAlY,EACA2jE,EACAtjE,EACAujE,GAEA,IAAK5jE,EACH,OAAO,EAET,IAAIwuD,GAAU,EACd,GAAI7hE,MAAMC,QAAQoT,GAChB,IAAK,IAAI9T,EAAI,EAAGuE,EAAKuP,EAAOvU,OAAQS,EAAIuE,IAAMvE,EAC5CsiE,EACE6W,GACE1B,EACA55B,EACA/pC,EAAO9T,GACPgsB,EACA5tB,KAAKq9H,6BACLtnH,EACAujE,IACGpV,OAGTA,EAAU6W,GACR1B,EACA55B,EACA/pC,EACAkY,EACA5tB,KAAKq9H,6BACLtnH,EACAujE,GAGJ,OAAOpV,CACR,GC1jBH,IAAAo8D,GA9MA,cAA6C9wB,GAI3C,WAAA1vG,CAAY4tC,GACVzoC,MAAMyoC,GAMN1tC,KAAKugI,gBAAkB,IAAIC,GAA0B9yF,GAMrD1tC,KAAKygI,iBAAmB/yF,EAAMgzF,gBAM9B1gI,KAAK2gI,kC5MNA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,G4MYrB3gI,KAAK4gI,oCAAsC,IAC5C,CAKD,eAAAngI,GACET,KAAKugI,gBAAgB//H,UACrByE,MAAMxE,iBACP,CAOD,WAAA28C,CAAYC,GACV,IAAKr9C,KAAKugI,gBACR,OAAOh8H,QAAQE,QAAQ,IAEzB,MAAMo8H,EAAc38H,GAClBlE,KAAK2gI,kCACLz8H,GAAMlE,KAAK4gI,oCAAqCvjF,EAAMv5C,UAExD,OAAO9D,KAAKugI,gBAAgBnjF,YAAYyjF,EACzC,CAKD,kBAAAn7D,GACE1lE,KAAKugI,gBAAgB76D,oBACtB,CAOD,YAAAtnB,CAAaZ,GACX,MAAMtiB,EAAasiB,EAAWtiB,WACxBqe,EAAYiE,EAAWjE,UACvBi1D,EAAiBj1D,EAAU78B,WAE3B07B,EAAQoF,EAAWonB,UACnBk8D,EAAiB9gI,KAAKugI,gBAC5B,IAAI7xB,EAAiBlxD,EAAWjkC,OACF,IAA1BvZ,KAAKygI,mBACP/xB,EAAiBA,EAAe5qG,MAAM,GACtCia,GAAgB2wF,EAAgB1uG,KAAKygI,mBAEvC,MAAMjxH,EAAQ2M,GAASuyF,GAAkBF,EACnC/+F,EAAS2M,GAAUsyF,GAAkBF,EAE3C,IACGp2D,EAAMpJ,MACNoJ,EAAMpJ,MACNlqC,GAAQ4pG,GACT,CACAoyB,EAAexzB,aAAa,KAAM,MAClC,MAAMp9F,EAAU4wH,EAAe5wH,QACzBisC,EAAaqB,EAAWI,iBAAiBJ,EAAWmJ,YACpDo6E,EAAkBr6H,OAAO6C,OAAO,CAAA,EAAI4yC,EAAY,CAACvP,QAAS,IAC1Do0F,EACJt6H,OAAO6C,OAAO,CAAE,EAAEi0C,EAAY,CAC5BwoB,cAAe,IAAI01B,GAAM,GACzBniF,OAAQm1F,EACRj7F,KAAM,CAACjE,EAAOC,GACd8pC,UACE7yC,OAAO6C,OAAO,GAAIi0C,EAAWjE,UAAW,CACtC58B,SAAU,IAGdihC,iBAAkB,CAACmjF,GACnBp6E,WAAY,IAGhB,IAAIs6E,GAAa,EACjB,MAAMpuH,EAAQ,IAAI2zF,GAChBkI,EACAF,EACAtzE,EACAhrB,EAAQN,QACR,SAAU+L,GAENmlH,EAAe1iF,aAAa4iF,IAC5BF,EAAe7C,qBAEf6C,EAAe5C,UAAW,EACtB4C,EAAeziF,YAAY2iF,EAAiB,QAC9CF,EAAeh6E,gBAAgBk6E,GAC/BC,GAAa,GAEftlH,IAEH,IAGH9I,EAAMvN,iBAAiBwB,GAAkB,KACvC,GAAI+L,EAAM3F,aAAegtB,GACvB,OAEFl6B,KAAKq7B,OAAS4lG,EAAa,KAAOpuH,EAClC,MAAMqkE,EAAkBrkE,EAAM0oB,gBACxB6wC,EACHkS,GAAmBzrE,EAAM2oB,iBAAmBN,EAC7Cg8C,EACFl3E,KAAKosE,mBAAqBA,EAC1BpsE,KAAK2gI,kCAAoC5oH,GACvC/X,KAAK2gI,kCACLnxH,EAAQ,EACRC,EAAS,EACT,EAAI28D,GACH,EAAIA,EACL,GACC7yB,EAAU98B,OAAO,IACjB88B,EAAU98B,OAAO,GACnB,IAEH5J,EAAMxF,MACP,CAOD,OALIrN,KAAKq7B,SACPr7B,KAAK4gI,oCACHpjF,EAAW2B,2BAA2Br7C,WAGjC9D,KAAKq7B,MACf,CAID,SAAA6yE,GAAc,CAId,UAAAC,GAAe,CAIf,eAAArnD,GAAoB,CAWpB,0BAAA1H,CACEjoC,EACAqmC,EACA6B,EACA1jC,EACAmkC,GAEA,OAAI9/C,KAAKugI,gBACAvgI,KAAKugI,gBAAgBnhF,2BAC1BjoC,EACAqmC,EACA6B,EACA1jC,EACAmkC,GAGG76C,MAAMm6C,2BACXjoC,EACAqmC,EACA6B,EACA1jC,EACAmkC,EAEH,GCzGH,IAAIohF,GAAW,EACR,MAAMC,GAAW,EACXC,GAAc,GAAKF,KACnBG,GAAa,GAAKH,KAClBI,GAAa,GAAKJ,KAClBK,GAAY,GAAKL,KACjBM,GAAkB,GAAKN,KACvBO,GAAUz1H,KAAKC,IAAI,EADIi1H,GACW,EAEzCQ,GAAY,CAChBN,CAACA,IAAc,UACfC,CAACA,IAAa,SACdC,CAACA,IAAa,SACdC,CAACA,IAAY,QACbC,CAACA,IAAkB,YAGfG,GAAaj7H,OAAOC,KAAK+6H,IAAW92F,IAAIX,QAAQ7V,KAAKpzB,GAOpD,SAAS4gI,GAAS7hI,GACvB,MAAMwqC,EAAQ,GACd,IAAK,MAAMs3F,KAAaF,GAClBG,GAAa/hI,EAAM8hI,IACrBt3F,EAAM5kC,KAAK+7H,GAAUG,IAGzB,OAAqB,IAAjBt3F,EAAMppC,OACD,UAELopC,EAAMppC,OAAS,EACVopC,EAAM1xB,KAAK,QAEb0xB,EAAMzmC,MAAM,GAAI,GAAG+U,KAAK,MAAQ,QAAU0xB,EAAMA,EAAMppC,OAAS,EACxE,CAOO,SAAS2gI,GAAaC,EAAOC,GAClC,OAAQD,EAAQC,KAAcA,CAChC,CAOO,SAASC,GAAaC,EAASC,GACpC,SAAUD,EAAUC,EACtB,CAOO,SAASC,GAAOriI,EAAMsiI,GAC3B,OAAOtiI,IAASsiI,CAClB,CAMO,MAAMC,GAKX,WAAAxiI,CAAYC,EAAMsE,GAChBrE,KAAKD,KAAOA,EACZC,KAAKqE,MAAQA,CACd,EAGI,MAAMk+H,GAMX,WAAAziI,CAAYC,EAAMyiI,KAAax5G,GAC7BhpB,KAAKD,KAAOA,EACZC,KAAKwiI,SAAWA,EAChBxiI,KAAKgpB,KAAOA,CACb,EAkBI,SAASy5G,KACd,MAAO,CACLC,UAAW,IAAIjxE,IACf58C,WAAY,IAAI48C,IAChBwrC,WAAW,EACX3sF,MAAO,CAAE,EAEb,CAiCO,SAAS06B,GAAM23F,EAASzyH,EAAS0yH,GACtC,cAAeD,GACb,IAAK,UACH,OAAO,IAAIL,GAAkBlB,GAAauB,GAE5C,IAAK,SACH,OAAO,IAAIL,GAAkBjB,GAAYsB,GAE3C,IAAK,SAAU,CACb,IAAI5iI,EAAOuhI,GAQX,OAPI31F,GAAcg3F,KAChB5iI,GAAQwhI,IAGLa,GAAOriI,EAAO6iI,EAAUzB,MAC3BphI,GAAQ6iI,GAEH,IAAIN,GAAkBviI,EAAM4iI,EACpC,EAMH,IAAKtgI,MAAMC,QAAQqgI,GACjB,MAAM,IAAIp6H,MAAM,oDAGlB,GAAuB,IAAnBo6H,EAAQxhI,OACV,MAAM,IAAIoH,MAAM,oBAGlB,GAA0B,iBAAfo6H,EAAQ,GACjB,OAsxBJ,SAA6BA,EAASzyH,EAAS0yH,GAC7C,MAAMJ,EAAWG,EAAQ,GAEnBriB,EAASD,GAAQmiB,GACvB,IAAKliB,EACH,MAAM,IAAI/3G,MAAM,qBAAqBi6H,KAEvC,OAAOliB,EAAOqiB,EAASzyH,EAAS0yH,EAClC,CA9xBWC,CAAoBF,EAASzyH,EAAS0yH,GAG/C,IAAK,MAAMv3H,KAAQs3H,EACjB,GAAoB,iBAATt3H,EACT,MAAM,IAAI9C,MAAM,gCAIpB,IAAIxI,EAAOyhI,GAOX,OANuB,IAAnBmB,EAAQxhI,QAAmC,IAAnBwhI,EAAQxhI,SAClCpB,GAAQwhI,IAENqB,IACF7iI,GAAQ6iI,GAEH,IAAIN,GAAkBviI,EAAM4iI,EACrC,CAKO,MAAMG,GAAM,CACjBC,IAAK,MACLC,IAAK,MACLC,OAAQ,SACRC,aAAc,gBACdC,IAAK,MACLC,IAAK,MACLC,IAAK,IACLC,WAAY,aACZxvE,KAAM,OACNyvE,KAAM,OACNC,MAAO,KACPC,SAAU,KACVC,YAAa,IACbC,qBAAsB,KACtBC,SAAU,IACVC,kBAAmB,KACnBC,SAAU,IACVC,OAAQ,IACRC,IAAK,IACLC,SAAU,IACVC,MAAO,QACPC,IAAK,IACLC,IAAK,IACLC,IAAK,MACLC,MAAO,QACPC,KAAM,OACNC,MAAO,QACPC,IAAK,MACLC,IAAK,MACLC,KAAM,OACNC,KAAM,OACNC,MAAO,QACPC,QAAS,UACTC,YAAa,cACbC,KAAM,OACNC,GAAI,KACJh7F,OAAQ,SACRrhC,OAAQ,SACRvG,MAAO,QACP6iI,MAAO,QACPC,GAAI,KACJC,KAAM,OACNC,QAAS,WAWLhlB,GAAU,CACd,CAACyiB,GAAIC,KAAMuC,IACT,EAAE15F,EAAGg3F,UACcp8H,IAAbo8H,EA3IV,SAAyBA,GACvB,OAAQA,GACN,IAAK,SACH,OAAOtB,GACT,IAAK,QACH,OAAOC,GACT,IAAK,SACH,OAAOF,GACT,IAAK,UACH,OAAOD,GACT,IAAK,WACH,OAAOI,GACT,QACE,MAAM,IAAIj5H,MAAM,2BAA2Bq6H,KAEjD,CA6He2C,CAE8B,EAC7C,OAGa9D,IAET+D,GAAc,EAAG,IA8OrB,SAAqB7C,EAASzyH,GAC5B,MAAMsvB,EAAMwL,GAAM23F,EAAQ,GAAIzyH,GAC9B,KAAMsvB,aAAe8iG,IACnB,MAAM,IAAI/5H,MAAM,iDAElB,GAAyB,iBAAdi3B,EAAIn7B,MACb,MAAM,IAAIkE,MAAM,gDAGlB,GADA2H,EAAQ2E,WAAW0O,IAAIic,EAAIn7B,OACJ,IAAnBs+H,EAAQxhI,OAAc,CAExB,MAAO,CAACq+B,EADKwL,GAAM23F,EAAQ,GAAIzyH,GAEhC,CACD,MAAO,CAACsvB,EACV,IAzPE,CAACsjG,GAAIE,KAAMsC,IACT,EAAEG,KAAcA,EAAS1lI,MACzBylI,GAAc,EAAG,IA4PrB,SAAqB7C,EAASzyH,EAASw1H,EAAY9C,GACjD,MAAM+C,EAAUhD,EAAQ,GACxB,GAAuB,iBAAZgD,EACT,MAAM,IAAIp9H,MAAM,gDAGlB,GADA2H,EAAQwyH,UAAUn/G,IAAIoiH,KAElB,cAAez1H,EAAQI,aACY9J,IAArC0J,EAAQI,MAAMoyH,UAAUiD,GAExB,MAAO,CAAC,IAAIrD,GAAkBb,GAASkE,IAEzC,MAAMC,EAAe11H,EAAQI,MAAMoyH,UAAUiD,GACvCnmG,EAAwCwL,GAAM46F,EAAc11H,GAElE,GADAsvB,EAAIn7B,MAAQshI,EACR/C,IAAaX,GAAaW,EAAUpjG,EAAIz/B,MAC1C,MAAM,IAAIwI,MACR,gBAAgBo9H,cAAoB/D,GAClCpiG,EAAIz/B,8CACoC6hI,GAASgB,MAGvD,MAAO,CAACpjG,EACV,IAhRE,CAACsjG,GAAIqC,IAAKG,GAAajE,GAAaC,GAAYuE,IAqRlD,SAAuBlD,EAASzyH,GAC9BA,EAAQ+sF,WAAY,CACtB,IAtRE,CAAC6lC,GAAIG,QAASqC,GACZhE,GACAkE,GAAc,EAAGhrH,KACjBsrH,GAAgBrE,KAElB,CAACqB,GAAII,cAAeoC,GAAahE,GAAYuE,IAC7C,CAAC/C,GAAIQ,YAAagC,GAAajE,GAAYwE,IAC3C,CAAC/C,GAAIhvE,MAAOwxE,GAAajE,GAAYwE,IACrC,CAAC/C,GAAIS,MAAO+B,GAAajE,GAAYwE,IACrC,CAAC/C,GAAIK,KAAMmC,GACTlE,GACAoE,GAAc,EAAGhrH,KACjBsrH,GAAgB1E,KAElB,CAAC0B,GAAIM,KAAMkC,GACTlE,GACAoE,GAAc,EAAGhrH,KACjBsrH,GAAgB1E,KAElB,CAAC0B,GAAIO,KAAMiC,GACTlE,GACAoE,GAAc,EAAG,GACjBM,GAAgB1E,KAElB,CAAC0B,GAAIU,OAAQ8B,GACXlE,GACAoE,GAAc,EAAG,GACjBM,GAAgBrE,IAChBsE,IAEF,CAACjD,GAAIW,UAAW6B,GACdlE,GACAoE,GAAc,EAAG,GACjBM,GAAgBrE,IAChBsE,IAEF,CAACjD,GAAIY,aAAc4B,GACjBlE,GACAoE,GAAc,EAAG,GACjBM,GAAgBrE,IAChBsE,IAEF,CAACjD,GAAIa,sBAAuB2B,GAC1BlE,GACAoE,GAAc,EAAG,GACjBM,GAAgBrE,IAChBsE,IAEF,CAACjD,GAAIc,UAAW0B,GACdlE,GACAoE,GAAc,EAAG,GACjBM,GAAgBrE,IAChBsE,IAEF,CAACjD,GAAIe,mBAAoByB,GACvBlE,GACAoE,GAAc,EAAG,GACjBM,GAAgBrE,IAChBsE,IAEF,CAACjD,GAAIgB,UAAWwB,IACbI,IACC,IAAIM,EAAa3E,GAAaE,GAC9B,IAAK,IAAI3/H,EAAI,EAAGA,EAAI8jI,EAAWvkI,OAAQS,IACrCokI,GAAcN,EAAW9jI,GAAG7B,KAE9B,OAAOimI,CAAU,GAEnBR,GAAc,EAAGhrH,KACjBsrH,GAAgBzE,GAAaE,IAC7BwE,IAEF,CAACjD,GAAIiB,QAASuB,GACZjE,GACAmE,GAAc,EAAG,GACjBM,GAAgBzE,KAElB,CAACyB,GAAIkB,KAAMsB,GACTjE,GACAmE,GAAc,EAAGhrH,KACjBsrH,GAAgBzE,KAElB,CAACyB,GAAImB,UAAWqB,GACdjE,GACAmE,GAAc,EAAG,GACjBM,GAAgBzE,KAElB,CAACyB,GAAIoB,OAAQoB,GACXjE,GACAmE,GAAc,EAAG,GACjBM,GAAgBzE,KAElB,CAACyB,GAAIqB,KAAMmB,GACTjE,GACAmE,GAAc,EAAG,GACjBM,GAAgBzE,KAElB,CAACyB,GAAIsB,KAAMkB,GACTjE,GACAmE,GAAc,EAAG,GACjBM,GAAgBzE,KAElB,CAACyB,GAAIuB,KAAMiB,GACTjE,GACAmE,GAAc,EAAG,GACjBM,GAAgBzE,KAElB,CAACyB,GAAIwB,OAAQgB,GACXjE,GACAmE,GAAc,EAAG,GACjBM,GAAgBzE,KAElB,CAACyB,GAAIyB,MAAOe,GACVjE,GACAmE,GAAc,EAAG,GACjBM,GAAgBzE,KAElB,CAACyB,GAAI0B,OAAQc,GACXjE,GACAmE,GAAc,EAAG,GACjBM,GAAgBzE,KAElB,CAACyB,GAAI2B,KAAMa,GACTjE,GACAmE,GAAc,EAAG,GACjBM,GAAgBzE,KAElB,CAACyB,GAAI4B,KAAMY,GACTjE,GACAmE,GAAc,EAAG,GACjBM,GAAgBzE,KAElB,CAACyB,GAAI6B,MAAOW,GACVjE,GACAmE,GAAc,EAAG,GACjBM,GAAgBzE,KAElB,CAACyB,GAAI8B,MAAOU,GACVjE,GACAmE,GAAc,EAAG,GACjBM,GAAgBzE,KAElB,CAACyB,GAAI+B,OAAQS,IACVI,IACC,IAAI3lI,EAAO0hI,GACX,IAAK,IAAI7/H,EAAI,EAAGA,EAAI8jI,EAAWvkI,OAAQS,GAAK,EAC1C7B,GAAQ2lI,EAAW9jI,GAAG7B,KAGxB,OADAA,GAAQ2lI,EAAWA,EAAWvkI,OAAS,GAAGpB,KACnCA,CAAI,GAEbylI,GAAc,EAAGhrH,KACjByrH,IAgQJ,SAAwBtD,EAASzyH,EAASw1H,EAAY9C,GACpD,MAAMsD,EAAYvD,EAAQxhI,OAAS,EAE7B2hB,EAAQkoB,GAAM23F,EAAQ,GAAIzyH,GAChC,IAAIi2H,EAAYrjH,EAAM/iB,KACtB,MAAMqmI,EAAWp7F,GAAM23F,EAAQA,EAAQxhI,OAAS,GAAI+O,GACpD,IAAI81H,OACWx/H,IAAbo8H,EAAyBA,EAAWwD,EAASrmI,KAAOqmI,EAASrmI,KAG/D,MAAMipB,EAAO,IAAI3mB,MAAM6jI,EAAY,GACnC,IAAK,IAAItkI,EAAI,EAAGA,EAAIskI,EAAY,EAAGtkI,GAAK,EAAG,CACzC,MAAMmpC,EAAQC,GAAM23F,EAAQ/gI,EAAI,GAAIsO,GAC9B6S,EAASioB,GAAM23F,EAAQ/gI,EAAI,GAAIsO,GACrCi2H,GAAap7F,EAAMhrC,KACnBimI,GAAcjjH,EAAOhjB,KACrBipB,EAAKpnB,GAAKmpC,EACV/hB,EAAKpnB,EAAI,GAAKmhB,CACf,CAGD,MAAMsjH,EAAoB/E,GAAaD,GAAaD,GACpD,IAAKa,GAAaoE,EAAmBF,GACnC,MAAM,IAAI59H,MACR,6BAA6Bq5H,GAC3ByE,yCAC2CzE,GAASuE,cAG1D,GAAI/D,GAAO4D,EAAY7E,IACrB,MAAM,IAAI54H,MACR,0EACE+kE,KAAKg5D,UAAU3D,IAKrB,IAAK,IAAI/gI,EAAI,EAAGA,EAAIskI,EAAY,EAAGtkI,GAAK,EAAG,CACzC,MAAMmpC,EAAQC,GAAM23F,EAAQ/gI,EAAI,GAAIsO,EAASi2H,GACvCpjH,EAASioB,GAAM23F,EAAQ/gI,EAAI,GAAIsO,EAAS81H,GAC9Ch9G,EAAKpnB,GAAKmpC,EACV/hB,EAAKpnB,EAAI,GAAKmhB,CACf,CAED,MAAO,CACLioB,GAAM23F,EAAQ,GAAIzyH,EAASi2H,MACxBn9G,EACHgiB,GAAM23F,EAAQA,EAAQxhI,OAAS,GAAI+O,EAAS81H,GAEhD,IA9SE,CAAClD,GAAIgC,SAAUQ,GACblE,GACAoE,GAAc,EAAG,GACjBM,GAAgBzE,KAElB,CAACyB,GAAIiC,aAAcO,IAChBI,IACC,IAAI3lI,EAAOwhI,GAAYF,GACvB,IAAK,IAAIz/H,EAAI,EAAGA,EAAI8jI,EAAWvkI,OAAQS,GAAK,EAC1C7B,GAAQ2lI,EAAW9jI,GAAG7B,KAExB,OAAOA,CAAI,GAEbylI,GAAc,EAAGhrH,KACjByrH,IAqSJ,SAA8BtD,EAASzyH,EAASw1H,EAAY9C,GAC1D,MAAM2D,EAAoB5D,EAAQ,GAClC,IAAI6D,EACJ,OAAQD,EAAkB,IACxB,IAAK,SACHC,EAAgB,EAChB,MACF,IAAK,cAEH,GADAA,EAAgBD,EAAkB,GACL,iBAAlBC,EACT,MAAM,IAAIj+H,MAEN,6DAAS+kE,KAAKg5D,UAAUE,cAG9B,MACF,QACEA,EAAgB,KAEpB,IAAKA,EACH,MAAM,IAAIj+H,MACR,+BAA+B+kE,KAAKg5D,UAAUC,MAGlDC,EAAgBx7F,GAAMw7F,EAAet2H,GAGrC,IAAI4S,EAAQkoB,GAAM23F,EAAQ,GAAIzyH,GAC9B,IAAK+xH,GAAaZ,GAAYv+G,EAAM/iB,MAClC,MAAM,IAAIwI,MAEN,uEAASq5H,GAAS9+G,EAAM/iB,iBAG9B+iB,EAAQkoB,GAAM23F,EAAQ,GAAIzyH,EAASmxH,IAEnC,MAAMr4G,EAAO,IAAI3mB,MAAMsgI,EAAQxhI,OAAS,GACxC,IAAK,IAAIS,EAAI,EAAGA,EAAIonB,EAAK7nB,OAAQS,GAAK,EAAG,CACvC,IAAIiqF,EAAO7gD,GAAM23F,EAAQ/gI,EAAI,GAAIsO,GACjC,IAAK+xH,GAAaZ,GAAYx1C,EAAK9rF,MACjC,MAAM,IAAIwI,MAEN,yFAASq5H,GAAS/1C,EAAK9rF,qBAAqB6B,EAAI,aAGtD,IAAImhB,EAASioB,GAAM23F,EAAQ/gI,EAAI,GAAIsO,GACnC,IAAK+xH,GAAaZ,GAAaE,GAAWx+G,EAAOhjB,MAC/C,MAAM,IAAIwI,MAEN,6FAASq5H,GAAS7+G,EAAOhjB,qBAAqB6B,EAAI,aAIxDiqF,EAAO7gD,GAAM23F,EAAQ/gI,EAAI,GAAIsO,EAASmxH,IACtCt+G,EAASioB,GAAM23F,EAAQ/gI,EAAI,GAAIsO,EAASmxH,GAAaE,IACrDv4G,EAAKpnB,GAAKiqF,EACV7iE,EAAKpnB,EAAI,GAAKmhB,CACf,CAED,MAAO,CAACyjH,EAAe1jH,KAAUkG,EACnC,IA9VE,CAAC85G,GAAIkC,MAAOM,IACTI,IACC,IAAI3lI,EAAO0hI,GACX,IAAK,IAAI7/H,EAAI,EAAGA,EAAI8jI,EAAWvkI,OAAQS,GAAK,EAC1C7B,GAAQ2lI,EAAW9jI,GAAG7B,KAGxB,OADAA,GAAQ2lI,EAAWA,EAAWvkI,OAAS,GAAGpB,KACnCA,CAAI,GAEbylI,GAAc,EAAGhrH,MAqMrB,SAAqBmoH,EAASzyH,GAC5B,MAAMojG,EAAYqvB,EAAQ,GACpB8D,EAAW9D,EAAQxhI,OAAS,EAClC,GAAIslI,EAAW,GAAM,EACnB,MAAM,IAAIl+H,MACR,yDAAyD+qG,UAAkBhmC,KAAKg5D,UAC9EG,aAIR,IA2IA,SAAuB9D,EAASzyH,EAASw1H,EAAY9C,GACnD,MAAMwD,EAAWp7F,GAAM23F,EAAQA,EAAQxhI,OAAS,GAAI+O,GACpD,IAAI81H,OACWx/H,IAAbo8H,EAAyBA,EAAWwD,EAASrmI,KAAOqmI,EAASrmI,KAG/D,MAAMipB,EAAO,IAAI3mB,MAAMsgI,EAAQxhI,OAAS,GACxC,IAAK,IAAIS,EAAI,EAAGA,EAAIonB,EAAK7nB,OAAS,EAAGS,GAAK,EAAG,CAC3C,MAAMu2D,EAAYntB,GAAM23F,EAAQ/gI,EAAI,GAAIsO,GAClC6S,EAASioB,GAAM23F,EAAQ/gI,EAAI,GAAIsO,GACrC,IAAK+xH,GAAab,GAAajpE,EAAUp4D,MACvC,MAAM,IAAIwI,MAEN,4EAASq5H,GAASzpE,EAAUp4D,qBAAqB6B,aAGvDokI,GAAcjjH,EAAOhjB,KACrBipB,EAAKpnB,GAAKu2D,EACVnvC,EAAKpnB,EAAI,GAAKmhB,CACf,CAED,GAAIq/G,GAAO4D,EAAY7E,IACrB,MAAM,IAAI54H,MACR,yEACE+kE,KAAKg5D,UAAU3D,IAKrB,IAAK,IAAI/gI,EAAI,EAAGA,EAAIonB,EAAK7nB,OAAS,EAAGS,GAAK,EACxConB,EAAKpnB,EAAI,GAAKopC,GAAM23F,EAAQ/gI,EAAI,GAAIsO,EAAS81H,GAQ/C,OANAh9G,EAAKA,EAAK7nB,OAAS,GAAK6pC,GACtB23F,EAAQA,EAAQxhI,OAAS,GACzB+O,EACA81H,GAGKh9G,CACT,IA7XE,CAAC85G,GAAImC,IAAKK,GAAalE,GAAaoE,GAAc,EAAG,IAkYvD,SAAqB7C,EAASzyH,GAE5B,IAAIvP,EAA+BgiI,EAAQ,GAC3C,IAAKtgI,MAAMC,QAAQ3B,GACjB,MAAM,IAAI4H,MACR,6FAGJ,GAA2B,iBAAhB5H,EAAS,GAAiB,CACnC,GAAoB,YAAhBA,EAAS,GACX,MAAM,IAAI4H,MACR,qHAGJ,IAAKlG,MAAMC,QAAQ3B,EAAS,IAC1B,MAAM,IAAI4H,MACR,6FAGJ5H,EAAWA,EAAS,EACrB,CAED,IAAI+lI,EAAapF,GAAaD,GAC9B,MAAMr4G,EAAO,IAAI3mB,MAAM1B,EAASQ,QAChC,IAAK,IAAIS,EAAI,EAAGA,EAAIonB,EAAK7nB,OAAQS,IAAK,CACpC,MAAM49B,EAAMwL,GAAMrqC,EAASiB,GAAIsO,GAC/Bw2H,GAAclnG,EAAIz/B,KAClBipB,EAAKpnB,GAAK49B,CACX,CACD,GAAI4iG,GAAOsE,EAAYvF,IACrB,MAAM,IAAI54H,MACR,gEACE+kE,KAAKg5D,UAAU3D,IAIrB,MAAM/hI,EAASoqC,GAAM23F,EAAQ,GAAIzyH,EAASw2H,GAC1C,MAAO,CAAC9lI,KAAWooB,EACrB,IAvaE,CAAC85G,GAAI74F,QAASq7F,GACZjE,GACAmE,GAAc,EAAGhrH,KACjBsrH,GAAgBrE,KAElB,CAACqB,GAAIl6H,QAAS08H,GACZhE,GACAkE,GAAc,EAAGhrH,KACjBsrH,GAAgBrE,KAElB,CAACqB,GAAIzgI,OAAQijI,IACVI,GAC8B,IAAtBA,EAAWvkI,QAAsC,IAAtBukI,EAAWvkI,OACzCqgI,GAAkBD,GAClBC,IAENgE,GAAc,EAAGhrH,KACjBsrH,GAAgBzE,KAElB,CAACyB,GAAIoC,OAAQI,GACX/D,GACAiE,GAAc,EAAG,GACjBM,GAAgBzE,KAElB,CAACyB,GAAIsC,MAAOE,GACVjE,GACAmE,GAAc,EAAG,GACjBM,GAAgBzE,KAElB,CAACyB,GAAIuC,SAAUC,GAAa/D,GAAWiE,GAAc,EAAG,IA+Y1D,SAA0B7C,EAASzyH,GACjC,MAAMjN,EAAQ+nC,GAAM23F,EAAQ,GAAIzyH,EAASmxH,IACzC,GAAIp+H,EAAMlD,OAASshI,GACjB,MAAM,IAAI94H,MACR,wDAAwDq5H,GACtD3+H,EAAMlD,iBAIZ,MAAM4mI,EAAShE,EAAQ,GACvB,IAAKtgI,MAAMC,QAAQqkI,GACjB,MAAM,IAAIp+H,MAAM,mDAElB,MAAMq+H,EAAe,IAAIvkI,MAAMskI,EAAOxlI,QACtC,IAAK,IAAIS,EAAI,EAAGA,EAAIglI,EAAazlI,OAAQS,IAAK,CAC5C,MAAMmoC,EAAQiB,GAAM27F,EAAO/kI,GAAIsO,EAASqxH,IACxC,KAAMx3F,aAAiBu4F,IACrB,MAAM,IAAI/5H,MACR,8BAA8B3G,6BAGlC,IAAKqgI,GAAal4F,EAAMhqC,KAAMwhI,IAC5B,MAAM,IAAIh5H,MACR,8BAA8B3G,kCAAkCggI,GAC9D73F,EAAMhqC,iBAIZ6mI,EAAahlI,GAAKmoC,CACnB,CACD,MAAO,CAAC9mC,KAAU2jI,EACpB,KA1WA,SAASf,GAAWlD,EAASzyH,GAC3B,MAAMojG,EAAYqvB,EAAQ,GAC1B,GAAuB,IAAnBA,EAAQxhI,OACV,MAAM,IAAIoH,MAAM,6BAA6B+qG,eAE/C,MAAO,EACT,CAOA,SAASkyB,GAAcqB,EAASC,GAC9B,OAAO,SAAUnE,EAASzyH,GACxB,MAAMojG,EAAYqvB,EAAQ,GACpB8D,EAAW9D,EAAQxhI,OAAS,EAClC,GAAI0lI,IAAYC,GACd,GAAIL,IAAaI,EAAS,CAExB,MAAM,IAAIt+H,MACR,YAAYs+H,aAFa,IAAZA,EAAgB,GAAK,WAEWvzB,UAAkBmzB,IAElE,OACI,GAAIA,EAAWI,GAAWJ,EAAWK,EAAS,CAKnD,MAAM,IAAIv+H,MACR,YAJAu+H,IAAYtsH,IACR,GAAGqsH,YACH,GAAGA,QAAcC,qBAEcxzB,UAAkBmzB,IAExD,CACL,CACA,CAMA,SAASX,GAAgBiB,GACvB,OAAO,SAAUpE,EAASzyH,GACxB,MAAMojG,EAAYqvB,EAAQ,GACpB8D,EAAW9D,EAAQxhI,OAAS,EAI5B6nB,EAAO,IAAI3mB,MAAMokI,GACvB,IAAK,IAAI7kI,EAAI,EAAGA,EAAI6kI,IAAY7kI,EAAG,CACjC,MAAMolI,EAAah8F,GAAM23F,EAAQ/gI,EAAI,GAAIsO,GACzC,IAAK+xH,GAAa8E,EAASC,EAAWjnI,MAAO,CAC3C,MAAMknI,EAAUrF,GAASmF,GACnBG,EAAetF,GAASoF,EAAWjnI,MACzC,MAAM,IAAIwI,MACR,gCAAgC3G,QAAQ0xG,oBAC7B2zB,kBAAwBC,IAEtC,CACDF,EAAWjnI,MAAQgnI,EACnB/9G,EAAKpnB,GAAKolI,CACX,CACD,OAAOh+G,CACX,CACA,CAKA,SAAS+8G,GAAepD,EAASzyH,EAASw1H,GACxC,MAAMpyB,EAAYqvB,EAAQ,GACpB8D,EAAW9D,EAAQxhI,OAAS,EAGlC,IAAIgmI,EAAW1F,GACf,IAAK,IAAI7/H,EAAI,EAAGA,EAAI8jI,EAAWvkI,SAAUS,EACvCulI,GAAYzB,EAAW9jI,GAAG7B,KAG5B,GAAIonI,IAAahG,GACf,MAAM,IAAI54H,MACR,kDAAkD+qG,eAKtD,MAAMtqF,EAAO,IAAI3mB,MAAMokI,GACvB,IAAK,IAAI7kI,EAAI,EAAGA,EAAI6kI,IAAY7kI,EAC9BonB,EAAKpnB,GAAKopC,GAAM23F,EAAQ/gI,EAAI,GAAIsO,EAASi3H,GAE3C,OAAOn+G,CACT,CAoBA,SAASi9G,GAAatD,EAASzyH,GAC7B,MAAMojG,EAAYqvB,EAAQ,GACpB8D,EAAW9D,EAAQxhI,OAAS,EAClC,GAAIslI,EAAW,GAAM,EACnB,MAAM,IAAIl+H,MACR,0DAA0D+qG,UAAkBhmC,KAAKg5D,UAC/EG,aAIR,CA2PA,SAASnB,GAAa8B,KAAeC,GACnC,OAAO,SAAU1E,EAASzyH,EAAS0yH,GACjC,MAAMJ,EAAWG,EAAQ,GACzB,IAAI+C,EAAa,GACjB,IAAK,IAAI9jI,EAAI,EAAGA,EAAIylI,EAAclmI,OAAQS,IACxC8jI,EACE2B,EAAczlI,GAAG+gI,EAASzyH,EAASw1H,EAAY9C,IAAa8C,EAEhE,IAAI4B,EACoB,mBAAfF,EAA4BA,EAAW1B,GAAc0B,EAC9D,QAAiB5gI,IAAbo8H,EAAwB,CAC1B,IAAKX,GAAaqF,EAAY1E,GAC5B,MAAM,IAAIr6H,MACR,mDAAmDq5H,GACjDgB,mBACgBhB,GAAS0F,eAAwBh6D,KAAKg5D,UACtD3D,MAIN2E,GAAc1E,CACf,CACD,GAAI0E,IAAenG,GACjB,MAAM,IAAI54H,MACR,4DAA4D+kE,KAAKg5D,UAC/D3D,MAIN,OAAO,IAAIJ,GAAe+E,EAAY9E,KAAakD,EACvD,CACA,CCnhCO,SAAS6B,KACd,MAAO,CACL7E,UAAW,CAAE,EACb7tH,WAAY,CAAE,EACd6H,WAAYyR,IACZ8uE,UAAW,KAEf,CAwCO,SAASuqC,GAAgB7E,EAAS5iI,EAAMmQ,GAC7C,MAAM82H,EAAah8F,GAAM23F,EAASzyH,GAClC,IAAK+xH,GAAaliI,EAAMinI,EAAWjnI,MAAO,CACxC,MAAMsiI,EAAWT,GAAS7hI,GACpB0nI,EAAS7F,GAASoF,EAAWjnI,MACnC,MAAM,IAAIwI,MACR,qCAAqC85H,UAAiBoF,IAEzD,CACD,OAAOC,GAAkBV,EAC3B,CAOA,SAASU,GAAkBV,EAAY92H,GACrC,GAAI82H,aAAsB1E,GAAmB,CAE3C,GAAI0E,EAAWjnI,OAASwhI,IAAyC,iBAArByF,EAAW3iI,MAAoB,CACzE,MAAMsjI,EAAap8F,GAAWy7F,EAAW3iI,OACzC,OAAO,WACL,OAAOsjI,CACf,CACK,CACD,OAAO,WACL,OAAOX,EAAW3iI,KACxB,CACG,CACD,MAAMm+H,EAAWwE,EAAWxE,SAC5B,OAAQA,GACN,KAAKM,GAAI74F,OACT,KAAK64F,GAAIl6H,OACP,OA2EN,SAAoCo+H,EAAY92H,GAC9C,MAAMnQ,EAAOinI,EAAWxE,SAClBrhI,EAAS6lI,EAAWh+G,KAAK7nB,OAEzB6nB,EAAO,IAAI3mB,MAAMlB,GACvB,IAAK,IAAIS,EAAI,EAAGA,EAAIT,IAAUS,EAC5BonB,EAAKpnB,GAAK8lI,GAAkBV,EAAWh+G,KAAKpnB,IAE9C,OAAQ7B,GACN,KAAK+iI,GAAI74F,OACT,KAAK64F,GAAIl6H,OACP,OAAQsH,IACN,IAAK,IAAItO,EAAI,EAAGA,EAAIT,IAAUS,EAAG,CAC/B,MAAMyC,EAAQ2kB,EAAKpnB,GAAGsO,GACtB,UAAW7L,IAAUtE,EACnB,OAAOsE,CAEV,CACD,MAAM,IAAIkE,MAAM,sCAAsCxI,IAAO,EAGjE,QACE,MAAM,IAAIwI,MAAM,kCAAkCxI,KAGxD,CApGa6nI,CAA2BZ,GAEpC,KAAKlE,GAAIC,IACT,KAAKD,GAAIE,IACP,OAuGN,SAAmCgE,EAAY92H,GAC7C,MAAM23H,EAAmDb,EAAWh+G,KAAK,GACnEvT,EAA8BoyH,EAAoB,MACxD,OAAQb,EAAWxE,UACjB,KAAKM,GAAIC,IACP,OAAQ7yH,GAAYA,EAAQ2E,WAAWY,GAEzC,KAAKqtH,GAAIE,IACP,OAAQ9yH,GAAYA,EAAQwyH,UAAUjtH,GAExC,QACE,MAAM,IAAIlN,MAAM,iCAAiCy+H,EAAWxE,YAGlE,CArHasF,CAA0Bd,GAEnC,KAAKlE,GAAIqC,GACP,OAAQ6B,GAAeA,EAAW/pC,UAEpC,KAAK6lC,GAAIG,OAAQ,CACf,MAAMj6G,EAAOg+G,EAAWh+G,KAAK4hB,KAAK3zB,GAAMywH,GAAkBzwH,KAC1D,OAAQ/G,GACN,GAAG6lF,UAAU/sE,EAAK4hB,KAAKpL,GAAQA,EAAItvB,GAASyI,aAC/C,CACD,KAAKmqH,GAAIQ,WACP,OAAQpzH,GAAYA,EAAQwM,WAE9B,KAAKomH,GAAIK,IACT,KAAKL,GAAIM,IACT,KAAKN,GAAIO,IACP,OA8IN,SAAkC2D,EAAY92H,GAC5C,MAAM63H,EAAKf,EAAWxE,SAChBrhI,EAAS6lI,EAAWh+G,KAAK7nB,OAEzB6nB,EAAO,IAAI3mB,MAAMlB,GACvB,IAAK,IAAIS,EAAI,EAAGA,EAAIT,IAAUS,EAC5BonB,EAAKpnB,GAAK8lI,GAAkBV,EAAWh+G,KAAKpnB,IAE9C,OAAQmmI,GACN,KAAKjF,GAAIK,IACP,OAAQjzH,IACN,IAAK,IAAItO,EAAI,EAAGA,EAAIT,IAAUS,EAC5B,GAAIonB,EAAKpnB,GAAGsO,GACV,OAAO,EAGX,OAAO,CAAK,EAGhB,KAAK4yH,GAAIM,IACP,OAAQlzH,IACN,IAAK,IAAItO,EAAI,EAAGA,EAAIT,IAAUS,EAC5B,IAAKonB,EAAKpnB,GAAGsO,GACX,OAAO,EAGX,OAAO,CAAI,EAGf,KAAK4yH,GAAIO,IACP,OAAQnzH,IAAa8Y,EAAK,GAAG9Y,GAE/B,QACE,MAAM,IAAI3H,MAAM,gCAAgCw/H,KAGtD,CAlLaC,CAAyBhB,GAElC,KAAKlE,GAAIU,MACT,KAAKV,GAAIW,SACT,KAAKX,GAAIc,SACT,KAAKd,GAAIe,kBACT,KAAKf,GAAIY,YACT,KAAKZ,GAAIa,qBACP,OAoGN,SAAqCqD,EAAY92H,GAC/C,MAAM63H,EAAKf,EAAWxE,SAChBn+E,EAAOqjF,GAAkBV,EAAWh+G,KAAK,IACzCqM,EAAQqyG,GAAkBV,EAAWh+G,KAAK,IAChD,OAAQ++G,GACN,KAAKjF,GAAIU,MACP,OAAQtzH,GAAYm0C,EAAKn0C,KAAamlB,EAAMnlB,GAE9C,KAAK4yH,GAAIW,SACP,OAAQvzH,GAAYm0C,EAAKn0C,KAAamlB,EAAMnlB,GAE9C,KAAK4yH,GAAIc,SACP,OAAQ1zH,GAAYm0C,EAAKn0C,GAAWmlB,EAAMnlB,GAE5C,KAAK4yH,GAAIe,kBACP,OAAQ3zH,GAAYm0C,EAAKn0C,IAAYmlB,EAAMnlB,GAE7C,KAAK4yH,GAAIY,YACP,OAAQxzH,GAAYm0C,EAAKn0C,GAAWmlB,EAAMnlB,GAE5C,KAAK4yH,GAAIa,qBACP,OAAQzzH,GAAYm0C,EAAKn0C,IAAYmlB,EAAMnlB,GAE7C,QACE,MAAM,IAAI3H,MAAM,mCAAmCw/H,KAGzD,CA/HaE,CAA4BjB,GAErC,KAAKlE,GAAIgB,SACT,KAAKhB,GAAIiB,OACT,KAAKjB,GAAIkB,IACT,KAAKlB,GAAImB,SACT,KAAKnB,GAAIoB,MACT,KAAKpB,GAAIqB,IACT,KAAKrB,GAAIsB,IACT,KAAKtB,GAAIuB,IACT,KAAKvB,GAAIwB,MACT,KAAKxB,GAAIyB,KACT,KAAKzB,GAAI0B,MACT,KAAK1B,GAAI2B,IACT,KAAK3B,GAAI4B,IACT,KAAK5B,GAAI6B,KACT,KAAK7B,GAAI8B,KACP,OAgKN,SAAkCoC,EAAY92H,GAC5C,MAAM63H,EAAKf,EAAWxE,SAChBrhI,EAAS6lI,EAAWh+G,KAAK7nB,OAEzB6nB,EAAO,IAAI3mB,MAAMlB,GACvB,IAAK,IAAIS,EAAI,EAAGA,EAAIT,IAAUS,EAC5BonB,EAAKpnB,GAAK8lI,GAAkBV,EAAWh+G,KAAKpnB,IAE9C,OAAQmmI,GACN,KAAKjF,GAAIgB,SACP,OAAQ5zH,IACN,IAAI7L,EAAQ,EACZ,IAAK,IAAIzC,EAAI,EAAGA,EAAIT,IAAUS,EAC5ByC,GAAS2kB,EAAKpnB,GAAGsO,GAEnB,OAAO7L,CAAK,EAGhB,KAAKy+H,GAAIiB,OACP,OAAQ7zH,GAAY8Y,EAAK,GAAG9Y,GAAW8Y,EAAK,GAAG9Y,GAEjD,KAAK4yH,GAAIkB,IACP,OAAQ9zH,IACN,IAAI7L,EAAQ,EACZ,IAAK,IAAIzC,EAAI,EAAGA,EAAIT,IAAUS,EAC5ByC,GAAS2kB,EAAKpnB,GAAGsO,GAEnB,OAAO7L,CAAK,EAGhB,KAAKy+H,GAAImB,SACP,OAAQ/zH,GAAY8Y,EAAK,GAAG9Y,GAAW8Y,EAAK,GAAG9Y,GAEjD,KAAK4yH,GAAIoB,MACP,OAAQh0H,IACN,MAAM7L,EAAQ2kB,EAAK,GAAG9Y,GAChBsL,EAAMwN,EAAK,GAAG9Y,GACpB,GAAI7L,EAAQmX,EACV,OAAOA,EAET,MAAMC,EAAMuN,EAAK,GAAG9Y,GACpB,OAAI7L,EAAQoX,EACHA,EAEFpX,CAAK,EAGhB,KAAKy+H,GAAIqB,IACP,OAAQj0H,GAAY8Y,EAAK,GAAG9Y,GAAW8Y,EAAK,GAAG9Y,GAEjD,KAAK4yH,GAAIsB,IACP,OAAQl0H,GAAYlE,KAAKC,IAAI+c,EAAK,GAAG9Y,GAAU8Y,EAAK,GAAG9Y,IAEzD,KAAK4yH,GAAIuB,IACP,OAAQn0H,GAAYlE,KAAKmP,IAAI6N,EAAK,GAAG9Y,IAEvC,KAAK4yH,GAAIwB,MACP,OAAQp0H,GAAYlE,KAAKuT,MAAMyJ,EAAK,GAAG9Y,IAEzC,KAAK4yH,GAAIyB,KACP,OAAQr0H,GAAYlE,KAAKiZ,KAAK+D,EAAK,GAAG9Y,IAExC,KAAK4yH,GAAI0B,MACP,OAAQt0H,GAAYlE,KAAKgZ,MAAMgE,EAAK,GAAG9Y,IAEzC,KAAK4yH,GAAI2B,IACP,OAAQv0H,GAAYlE,KAAKyL,IAAIuR,EAAK,GAAG9Y,IAEvC,KAAK4yH,GAAI4B,IACP,OAAQx0H,GAAYlE,KAAKwL,IAAIwR,EAAK,GAAG9Y,IAEvC,KAAK4yH,GAAI6B,KACP,OAAe,IAAXxjI,EACM+O,GAAYlE,KAAKmc,MAAMa,EAAK,GAAG9Y,GAAU8Y,EAAK,GAAG9Y,IAEnDA,GAAYlE,KAAKkX,KAAK8F,EAAK,GAAG9Y,IAExC,KAAK4yH,GAAI8B,KACP,OAAQ10H,GAAYlE,KAAKka,KAAK8C,EAAK,GAAG9Y,IAExC,QACE,MAAM,IAAI3H,MAAM,gCAAgCw/H,KAGtD,CApPaG,CAAyBlB,GAElC,KAAKlE,GAAI+B,MACP,OAwPN,SAAgCmC,EAAY92H,GAC1C,MAAM/O,EAAS6lI,EAAWh+G,KAAK7nB,OACzB6nB,EAAO,IAAI3mB,MAAMlB,GACvB,IAAK,IAAIS,EAAI,EAAGA,EAAIT,IAAUS,EAC5BonB,EAAKpnB,GAAK8lI,GAAkBV,EAAWh+G,KAAKpnB,IAE9C,OAAQsO,IACN,MAAM7L,EAAQ2kB,EAAK,GAAG9Y,GACtB,IAAK,IAAItO,EAAI,EAAGA,EAAIT,EAAQS,GAAK,EAC/B,GAAIyC,IAAU2kB,EAAKpnB,GAAGsO,GACpB,OAAO8Y,EAAKpnB,EAAI,GAAGsO,GAGvB,OAAO8Y,EAAK7nB,EAAS,GAAG+O,EAAQ,CAEpC,CAvQai4H,CAAuBnB,GAEhC,KAAKlE,GAAIiC,YACP,OA2QN,SAAsCiC,EAAY92H,GAChD,MAAM/O,EAAS6lI,EAAWh+G,KAAK7nB,OACzB6nB,EAAO,IAAI3mB,MAAMlB,GACvB,IAAK,IAAIS,EAAI,EAAGA,EAAIT,IAAUS,EAC5BonB,EAAKpnB,GAAK8lI,GAAkBV,EAAWh+G,KAAKpnB,IAE9C,OAAQsO,IACN,MAAMs6B,EAAOxhB,EAAK,GAAG9Y,GACf7L,EAAQ2kB,EAAK,GAAG9Y,GAEtB,IAAIk4H,EACAC,EACJ,IAAK,IAAIzmI,EAAI,EAAGA,EAAIT,EAAQS,GAAK,EAAG,CAClC,MAAMkhB,EAAQkG,EAAKpnB,GAAGsO,GACtB,IAAI6S,EAASiG,EAAKpnB,EAAI,GAAGsO,GACzB,MAAMo4H,EAAUjmI,MAAMC,QAAQygB,GAI9B,GAHIulH,IACFvlH,EAASqoB,GAAUroB,IAEjBD,GAASze,EACX,OAAU,IAANzC,EACKmhB,EAELulH,EACKC,GACL/9F,EACAnmC,EACA+jI,EACAC,EACAvlH,EACAC,GAGGylH,GACLh+F,EACAnmC,EACA+jI,EACAC,EACAvlH,EACAC,GAGJqlH,EAAgBtlH,EAChBulH,EAAiBtlH,CAClB,CACD,OAAOslH,CAAc,CAEzB,CA1TaI,CAA6BzB,GAEtC,QACE,MAAM,IAAIz+H,MAAM,wBAAwBi6H,KAc9C,CAoTA,SAASgG,GAAkBh+F,EAAMnmC,EAAOqkI,EAAQC,EAASC,EAAQC,GAC/D,MAAMn7H,EAAQk7H,EAASF,EACvB,GAAc,IAAVh7H,EACF,OAAOi7H,EAET,MAAMtiH,EAAQhiB,EAAQqkI,EAKtB,OAAOC,GAHI,IAATn+F,EACInkB,EAAQ3Y,GACP1B,KAAKC,IAAIu+B,EAAMnkB,GAAS,IAAMra,KAAKC,IAAIu+B,EAAM98B,GAAS,KAClCm7H,EAAUF,EACvC,CAWA,SAASJ,GAAiB/9F,EAAMnmC,EAAOqkI,EAAQI,EAAOF,EAAQG,GAE5D,GAAc,IADAH,EAASF,EAErB,OAAOI,EAET,MAAME,EAAQ39F,GAAWy9F,GACnBG,EAAQ59F,GAAW09F,GACzB,IAAIG,EAAWD,EAAM,GAAKD,EAAM,GAC5BE,EAAW,IACbA,GAAY,IACHA,GAAY,MACrBA,GAAY,KASd,OAAOz9F,GAAUH,GANJ,CACXk9F,GAAkBh+F,EAAMnmC,EAAOqkI,EAAQM,EAAM,GAAIJ,EAAQK,EAAM,IAC/DT,GAAkBh+F,EAAMnmC,EAAOqkI,EAAQM,EAAM,GAAIJ,EAAQK,EAAM,IAC/DD,EAAM,GAAKR,GAAkBh+F,EAAMnmC,EAAOqkI,EAAQ,EAAGE,EAAQM,GAC7DV,GAAkBh+F,EAAMnmC,EAAOqkI,EAAQI,EAAM,GAAIF,EAAQG,EAAM,MAGnE,CCheA,SAASjyE,GAAO5mD,GACd,OAAO,CACT,CAUO,SAASi5H,GAAqBC,GACnC,MAAMC,EAAiB5G,KACjB6G,EAAYC,GAAaH,EAAOC,GAChCG,EDlCC,CACL9G,UAAW,CAAE,EACb7tH,WAAY,CAAE,EACd6H,WAAYyR,IACZ8uE,UAAW,MC+Bb,OAAO,SAAUx9C,EAAS/iC,GAGxB,GAFA8sH,EAAkB30H,WAAa4qC,EAAQj2C,wBACvCggI,EAAkB9sH,WAAaA,EAC3B2sH,EAAepsC,UAAW,CAC5B,MAAM1vF,EAAKkyC,EAAQrqC,QAEjBo0H,EAAkBvsC,eADTz2F,IAAP+G,EAC4BA,EAEA,IAEjC,CACD,OAAO+7H,EAAUE,EACrB,CACA,CAUO,SAASC,GAA0BC,GACxC,MAAML,EAAiB5G,KACjBthI,EAASuoI,EAAWvoI,OAKpBwoI,EAAa,IAAItnI,MAAMlB,GAC7B,IAAK,IAAIS,EAAI,EAAGA,EAAIT,IAAUS,EAC5B+nI,EAAW/nI,GAAKgoI,GAAWF,EAAW9nI,GAAIynI,GAE5C,MAAMG,EDrEC,CACL9G,UAAW,CAAE,EACb7tH,WAAY,CAAE,EACd6H,WAAYyR,IACZ8uE,UAAW,MCsEPvnF,EAAS,IAAIrT,MAAMlB,GAEzB,OAAO,SAAUs+C,EAAS/iC,GAGxB,GAFA8sH,EAAkB30H,WAAa4qC,EAAQj2C,wBACvCggI,EAAkB9sH,WAAaA,EAC3B2sH,EAAepsC,UAAW,CAC5B,MAAM1vF,EAAKkyC,EAAQrqC,QAEjBo0H,EAAkBvsC,eADTz2F,IAAP+G,EAC4BA,EAEA,IAEjC,CACD,IAAIs8H,EAAe,EACnB,IAAK,IAAIjoI,EAAI,EAAGA,EAAIT,IAAUS,EAAG,CAC/B,MAAM0O,EAAQq5H,EAAW/nI,GAAG4nI,GACxBl5H,IACFoF,EAAOm0H,GAAgBv5H,EACvBu5H,GAAgB,EAEnB,CAED,OADAn0H,EAAOvU,OAAS0oI,EACTn0H,CACX,CACA,CAiBO,SAAS6zH,GAAaH,EAAOl5H,GAClC,MAAM/O,EAASioI,EAAMjoI,OAKf2oI,EAAgB,IAAIznI,MAAMlB,GAEhC,IAAK,IAAIS,EAAI,EAAGA,EAAIT,IAAUS,EAAG,CAC/B,MAAMmoI,EAAOX,EAAMxnI,GACb41C,EACJ,WAAYuyF,EACRvC,GAAgBuC,EAAKvyF,OAAQ4pF,GAAalxH,GAC1C4mD,GAKN,IAAIphD,EACJ,GAAIrT,MAAMC,QAAQynI,EAAKz5H,OAAQ,CAC7B,MAAM05H,EAAcD,EAAKz5H,MAAMnP,OAC/BuU,EAAS,IAAIrT,MAAM2nI,GACnB,IAAK,IAAI5lH,EAAI,EAAGA,EAAI4lH,IAAe5lH,EACjC1O,EAAO0O,GAAKwlH,GAAWG,EAAKz5H,MAAM8T,GAAIlU,EAE9C,MACMwF,EAAS,CAACk0H,GAAWG,EAAKz5H,MAAOJ,IAGnC45H,EAAcloI,GAAK,CAAC41C,SAAQ9hC,SAC7B,CAED,OAAO,SAAUxF,GAIf,MAAMwF,EAAS,GAEf,IAAIu0H,GAAc,EAClB,IAAK,IAAIroI,EAAI,EAAGA,EAAIT,IAAUS,EAAG,CAE/B,IAAKsoI,EADmBJ,EAAcloI,GAAG41C,QACpBtnC,MAGjBk5H,EAAMxnI,GAAGuoI,OAAQF,GAArB,CAGAA,GAAc,EACd,IAAK,MAAMG,KAAkBN,EAAcloI,GAAG8T,OAAQ,CACpD,MAAMpF,EAAQ85H,EAAel6H,GACxBI,GAGLoF,EAAO/P,KAAK2K,EACb,CARA,CASF,CAED,OAAOoF,CACX,CACA,CAYO,SAASk0H,GAAWS,EAAWn6H,GACpC,MAAMo6H,EAAeC,GAAUF,EAAW,GAAIn6H,GACxCs6H,EAAiBC,GAAYJ,EAAW,GAAIn6H,GAC5Cw6H,EA+MR,SAAmBL,EAAWn6H,GAC5B,MAAMy6H,EAAS,QAMTC,EAAgBC,GAAgBR,EAAWM,EAAS,QAASz6H,GACnE,IAAK06H,EACH,OAAO,KAGT,MAAMN,EAAeC,GAAUF,EAAWM,EAAQz6H,GAE5C46H,EAAyBP,GAC7BF,EACAM,EAAS,cACTz6H,GAGIs6H,EAAiBC,GAAYJ,EAAWM,EAAQz6H,GAEhD66H,EAA2BN,GAC/BJ,EACAM,EAAS,cACTz6H,GAGI86H,EAAeH,GAAgBR,EAAWM,EAAS,OAAQz6H,GAE3D+6H,EAAmBC,GACvBb,EACAM,EAAS,YACTz6H,GAGIi7H,EAAkBD,GACtBb,EACAM,EAAS,WACTz6H,GAGIk7H,EAAkBF,GACtBb,EACAM,EAAS,WACTz6H,GAGIm7H,EAAmBC,GACvBjB,EACAM,EAAS,WACTz6H,GAGIq7H,EAAoBV,GACxBR,EACAM,EAAS,YACTz6H,GAGIs7H,EAAiBN,GAAgBb,EAAWM,EAAS,SAAUz6H,GAE/Du7H,EAAgBC,GAAkBrB,EAAWM,EAAS,QAASz6H,GAE/Dy7H,EAAyBL,GAC7BjB,EACAM,EAAS,mBACTz6H,GAGI07H,EAAmBV,GACvBb,EACAM,EAAS,WACTz6H,GAGI27H,EAAgBhB,GAAgBR,EAAWM,EAAS,QAASz6H,GAE7D47H,EAAkBjB,GACtBR,EACAM,EAAS,UACTz6H,GAGI67H,EAAmBlB,GACvBR,EACAM,EAAS,WACTz6H,GAGI87H,EAAkBC,GACtB5B,EACAM,EAAS,UACTz6H,GAGIwyC,EAAO,IAAIylE,GAAK,CAAA,GACtB,OAAO,SAAUj4G,GAuCf,GAtCAwyC,EAAKmlE,QAAQ+iB,EAAc16H,IAEvBo6H,GACF5nF,EAAKmgE,QAAQynB,EAAap6H,IAGxB46H,GACFpoF,EAAK8nE,kBAAkBsgB,EAAuB56H,IAG5Cs6H,GACF9nF,EAAKugE,UAAUunB,EAAet6H,IAG5B66H,GACFroF,EAAK+nE,oBAAoBsgB,EAAyB76H,IAGhD86H,GACFtoF,EAAKqnE,QAAQihB,EAAa96H,IAGxB+6H,GACFvoF,EAAKsnE,YAAYihB,EAAiB/6H,IAGhCi7H,GACFzoF,EAAKunE,WAAWkhB,EAAgBj7H,IAG9Bk7H,GACF1oF,EAAKwnE,WAAWkhB,EAAgBl7H,IAG9Bm7H,GACF3oF,EAAKonE,YAAYuhB,EAAiBn7H,IAGhCq7H,EAAmB,CACrB,MAAMziB,EAAYyiB,EAAkBr7H,GACpC,GAAkB,UAAd44G,GAAuC,SAAdA,EAC3B,MAAM,IAAIvgH,MAAM,6CAElBm6C,EAAKynE,aAAarB,EACnB,CAkBD,GAhBI0iB,GACF9oF,EAAK0nE,UAAUohB,EAAet7H,IAG5Bu7H,GACF/oF,EAAKs/D,SAASypB,EAAcv7H,IAG1By7H,GACFjpF,EAAKq/D,kBAAkB4pB,EAAuBz7H,IAG5C07H,GACFlpF,EAAKzN,YAAY22F,EAAiB17H,IAGhC27H,EAAe,CACjB,MAAM51D,EAAY41D,EAAc37H,GAChC,GACgB,SAAd+lE,GACc,WAAdA,GACc,UAAdA,GACc,QAAdA,GACc,UAAdA,EAEA,MAAM,IAAI1tE,MACR,8DAGJm6C,EAAK2nE,aAAap0C,EACnB,CAED,GAAI61D,EAAiB,CACnB,MAAMvjB,EAAUujB,EAAgB57H,GAChC,GAAgB,SAAZq4G,GAAkC,UAAZA,GAAmC,WAAZA,EAC/C,MAAM,IAAIhgH,MAAM,oDAElBm6C,EAAK4nE,WAAW/B,EACjB,CAED,GAAIwjB,EAAkB,CACpB,MAAM71D,EAAe61D,EAAiB77H,GACtC,GACmB,WAAjBgmE,GACiB,QAAjBA,GACiB,WAAjBA,GACiB,eAAjBA,GACiB,YAAjBA,EAEA,MAAM,IAAI3tE,MACR,0EAGJm6C,EAAK6nE,gBAAgBr0C,EACtB,CAMD,OAJI81D,GACFtpF,EAAKgoE,WAAWshB,EAAgB97H,IAG3BwyC,CACX,CACA,CA7ZuBwpF,CAAU7B,EAAWn6H,GACpCi8H,EAuaR,SAAoB9B,EAAWn6H,GAC7B,GAAI,aAAcm6H,EAChB,OAmBJ,SAAmBA,EAAWn6H,GAC5B,MAAMy6H,EAAS,QAGTyB,EAAUzB,EAAS,MACnBhwG,EAAM0xG,GAAchC,EAAU+B,GAAUA,GAGxCE,EAAiBC,GACrBlC,EACAM,EAAS,SACTz6H,GAGIu7H,EAAgBC,GAAkBrB,EAAWM,EAAS,QAASz6H,GAE/Ds8H,EAAkBtB,GACtBb,EACAM,EAAS,UACTz6H,GAGIu8H,EAAuBF,GAC3BlC,EACAM,EAAS,eACTz6H,GAGI07H,EAAmBV,GACvBb,EACAM,EAAS,WACTz6H,GAGIy7H,EAAyBL,GAC7BjB,EACAM,EAAS,mBACTz6H,GAIIy1G,EAAe+mB,GAAmBrC,EAAWM,EAAS,iBACtD9kB,EAAe8mB,GACnBtC,EACAM,EAAS,kBAEL5kB,EAAe4mB,GACnBtC,EACAM,EAAS,kBAEL5gG,EAwcR,SAA2BsgG,EAAWxlI,GACpC,MAAM89H,EAAU0H,EAAUxlI,GAC1B,QAAgB2B,IAAZm8H,EACF,OAEF,OAAOiK,GAAiBjK,EAAS99H,EACnC,CA9cgBgoI,CAAkBxC,EAAWM,EAAS,SAC9CxuG,EAgXR,SAAwBkuG,EAAWxlI,GACjC,MAAM89H,EAAU0H,EAAUxlI,GAC1B,QAAgB2B,IAAZm8H,EACF,OAEF,GAAuB,iBAAZA,EACT,MAAM,IAAIp6H,MAAM,yBAAyB1D,KAE3C,OAAO89H,CACT,CAzXsBmK,CAAezC,EAAWM,EAAS,gBACjD7vH,EAsaR,SAA6BuvH,EAAWxlI,GACtC,MAAM89H,EAAU0H,EAAUxlI,GAC1B,QAAgB2B,IAAZm8H,EACF,OAEF,OAAOoK,GAAmBpK,EAAS99H,EACrC,CA5aiBmoI,CAAoB3C,EAAWM,EAAS,UACjDvkB,EAAesmB,GAAmBrC,EAAWM,EAAS,iBACtDn7H,EAAQy9H,GAAe5C,EAAWM,EAAS,SAC3Cl7H,EAASw9H,GAAe5C,EAAWM,EAAS,UAC5Cl3H,EAiVR,SAAsB42H,EAAWxlI,GAC/B,MAAM89H,EAAU0H,EAAUxlI,GAC1B,QAAgB2B,IAAZm8H,EACF,OAEF,GAAuB,iBAAZA,EACT,OAAO7jE,GAAO6jE,GAEhB,IAAKtgI,MAAMC,QAAQqgI,GACjB,MAAM,IAAIp6H,MAAM,uCAAuC1D,KAEzD,GACqB,IAAnB89H,EAAQxhI,QACc,iBAAfwhI,EAAQ,IACO,iBAAfA,EAAQ,GAEf,MAAM,IAAIp6H,MAAM,uCAAuC1D,KAEzD,OAAO89H,CACT,CApWeuK,CAAa7C,EAAWM,EAAS,QACxClxD,EAAgB0zD,GAAsB9C,EAAWM,EAAS,aAE1DyC,EAAO,IAAI5nB,GAAK,CACpB7qF,MACAgrF,eACAE,eACAE,eACAh8E,QACA5N,cACArhB,SACAsrG,eACA32G,SACAD,QACAiE,OACAgmE,kBAGF,OAAO,SAAUvpE,GAwBf,OAvBIs8H,GACFY,EAAKz+F,WAAW69F,EAAgBt8H,IAG9Bu8H,GACFW,EAAKtrB,gBAAgB2qB,EAAqBv8H,IAGxC07H,GACFwB,EAAKn4F,YAAY22F,EAAiB17H,IAGhCy7H,GACFyB,EAAKrrB,kBAAkB4pB,EAAuBz7H,IAG5Cu7H,GACF2B,EAAKprB,SAASypB,EAAcv7H,IAG1Bo8H,GACFc,EAAK9mB,UAAUgmB,EAAep8H,IAEzBk9H,CACX,CACA,CAvHWC,CAAUhD,EAAWn6H,GAG9B,GAAI,iBAAkBm6H,EACpB,OA0HJ,SAAoBA,EAAWn6H,GAC7B,MAAMy6H,EAAS,SAGT2C,EAAa3C,EAAS,SACtB5xC,EAASw0C,GAAclD,EAAUiD,GAAaA,GAG9ChD,EAAeC,GAAUF,EAAWM,EAAQz6H,GAC5Cs6H,EAAiBC,GAAYJ,EAAWM,EAAQz6H,GAChDu7H,EAAgBC,GAAkBrB,EAAWM,EAAS,QAASz6H,GAC/Du8H,EAAuBF,GAC3BlC,EACAM,EAAS,eACTz6H,GAEI07H,EAAmBV,GACvBb,EACAM,EAAS,WACTz6H,GAEIy7H,EAAyBL,GAC7BjB,EACAM,EAAS,mBACTz6H,GAII4X,EAASmlH,GAAe5C,EAAWM,EAAS,UAC5CpoB,EAAU0qB,GAAe5C,EAAWM,EAAS,WAC7CloB,EAAUwqB,GAAe5C,EAAWM,EAAS,WAC7CpzH,EAAQ01H,GAAe5C,EAAWM,EAAS,SAC3ClxD,EAAgB0zD,GACpB9C,EACAM,EAAS,kBAGL6C,EAAQ,IAAItrB,GAAa,CAC7BnpB,SACAjxE,SACAy6F,UACAE,UACAlrG,QACAkiE,kBAGF,OAAO,SAAUvpE,GAoBf,OAnBIo6H,GACFkD,EAAM3qB,QAAQynB,EAAap6H,IAEzBs6H,GACFgD,EAAMvqB,UAAUunB,EAAet6H,IAE7Bu8H,GACFe,EAAM1rB,gBAAgB2qB,EAAqBv8H,IAEzC07H,GACF4B,EAAMv4F,YAAY22F,EAAiB17H,IAEjCy7H,GACF6B,EAAMzrB,kBAAkB4pB,EAAuBz7H,IAE7Cu7H,GACF+B,EAAMxrB,SAASypB,EAAcv7H,IAGxBs9H,CACX,CACA,CA9LWC,CAAWpD,EAAWn6H,GAG/B,GAAI,kBAAmBm6H,EACrB,OAiMJ,SAAqBA,EAAWn6H,GAC9B,MAAMy6H,EAAS,UAGTL,EAAeC,GAAUF,EAAWM,EAAQz6H,GAC5Cs6H,EAAiBC,GAAYJ,EAAWM,EAAQz6H,GAChDw9H,EAAiBxC,GAAgBb,EAAWM,EAAS,SAAUz6H,GAC/Du7H,EAAgBC,GAAkBrB,EAAWM,EAAS,QAASz6H,GAC/Du8H,EAAuBF,GAC3BlC,EACAM,EAAS,eACTz6H,GAEI07H,EAAmBV,GACvBb,EACAM,EAAS,WACTz6H,GAEIy7H,EAAyBL,GAC7BjB,EACAM,EAAS,mBACTz6H,GAIIupE,EAAgB0zD,GACpB9C,EACAM,EAAS,kBAGL3kH,EAAS,IAAIw0D,GAAO,CACxB1yD,OAAQ,EACR2xD,kBAGF,OAAO,SAAUvpE,GAuBf,OAtBIw9H,GACF1nH,EAAOmwE,UAAUu3C,EAAex9H,IAE9Bo6H,GACFtkH,EAAO68F,QAAQynB,EAAap6H,IAE1Bs6H,GACFxkH,EAAOi9F,UAAUunB,EAAet6H,IAE9Bu8H,GACFzmH,EAAO87F,gBAAgB2qB,EAAqBv8H,IAE1C07H,GACF5lH,EAAOivB,YAAY22F,EAAiB17H,IAElCy7H,GACF3lH,EAAO+7F,kBAAkB4pB,EAAuBz7H,IAE9Cu7H,GACFzlH,EAAOg8F,SAASypB,EAAcv7H,IAGzB8V,CACX,CACA,CA7PW2nH,CAAYtD,EAAWn6H,GAGhC,OAAO,IACT,CArbwB09H,CAAWvD,EAAWn6H,GACtC29H,EAAiB3C,GAAgBb,EAAW,UAAWn6H,GAE7D,KACGo6H,GACAE,GACAE,GACAyB,GACArnI,EAAQulI,IAIT,MAAM,IAAI9hI,MACR,mEACE+kE,KAAKg5D,UAAU+D,IAIrB,MAAM/5H,EAAQ,IAAIg3G,GAClB,OAAO,SAAUp3G,GACf,IAAI49H,GAAQ,EACZ,GAAIxD,EAAc,CAChB,MAAMn2D,EAAOm2D,EAAap6H,GACtBikE,IACF25D,GAAQ,GAEVx9H,EAAMuyG,QAAQ1uC,EACf,CACD,GAAIq2D,EAAgB,CAClB,MAAMp2D,EAASo2D,EAAet6H,GAC1BkkE,IACF05D,GAAQ,GAEVx9H,EAAM2yG,UAAU7uC,EACjB,CACD,GAAIs2D,EAAc,CAChB,MAAMhoF,EAAOgoF,EAAax6H,GACtBwyC,IACForF,GAAQ,GAEVx9H,EAAMu3G,QAAQnlE,EACf,CACD,GAAIypF,EAAe,CACjB,MAAMt5H,EAAQs5H,EAAcj8H,GACxB2C,IACFi7H,GAAQ,GAEVx9H,EAAMsrB,SAAS/oB,EAChB,CAID,OAHIg7H,GACFv9H,EAAMu+B,UAAUg/F,EAAe39H,IAE7B49H,EACK,KAEFx9H,CACX,CACA,CAYA,SAASi6H,GAAUF,EAAWM,EAAQz6H,GACpC,MAAM69H,EAAgBC,GACpB3D,EACAM,EAAS,aACTz6H,GAEF,IAAK69H,EACH,OAAO,KAGT,MAAM55D,EAAO,IAAIkwC,GACjB,OAAO,SAAUn0G,GACf,MAAM65B,EAAQgkG,EAAc79H,GAC5B,MAAc,SAAV65B,EACK,MAEToqC,EAAKowC,SAASx6E,GACPoqC,EACX,CACA,CAYA,SAASs2D,GAAYJ,EAAWM,EAAQz6H,GACtC,MAAM+9H,EAAgB/C,GACpBb,EACAM,EAAS,eACTz6H,GAGI69H,EAAgBC,GACpB3D,EACAM,EAAS,eACTz6H,GAGF,IAAK+9H,IAAkBF,EACrB,OAAO,KAGT,MAAMG,EAAkBrD,GACtBR,EACAM,EAAS,kBACTz6H,GAGIi+H,EAAmBtD,GACvBR,EACAM,EAAS,mBACTz6H,GAGIk+H,EAAmBnC,GACvB5B,EACAM,EAAS,mBACTz6H,GAGIm+H,EAAyBnD,GAC7Bb,EACAM,EAAS,0BACTz6H,GAGIo+H,EAAqBpD,GACzBb,EACAM,EAAS,qBACTz6H,GAGIkkE,EAAS,IAAIqyC,GACnB,OAAO,SAAUv2G,GACf,GAAI69H,EAAe,CACjB,MAAMhkG,EAAQgkG,EAAc79H,GAC5B,GAAc,SAAV65B,EACF,OAAO,KAETqqC,EAAOmwC,SAASx6E,EACjB,CAMD,GAJIkkG,GACF75D,EAAOgzC,SAAS6mB,EAAc/9H,IAG5Bg+H,EAAiB,CACnB,MAAMz4D,EAAUy4D,EAAgBh+H,GAChC,GAAgB,SAAZulE,GAAkC,UAAZA,GAAmC,WAAZA,EAC/C,MAAM,IAAIltE,MAAM,4CAElB6rE,EAAO4yC,WAAWvxC,EACnB,CAED,GAAI04D,EAAkB,CACpB,MAAMt4D,EAAWs4D,EAAiBj+H,GAClC,GACe,UAAb2lE,GACa,UAAbA,GACa,UAAbA,EAEA,MAAM,IAAIttE,MAAM,6CAElB6rE,EAAO8yC,YAAYrxC,EACpB,CAcD,OAZIu4D,GACFh6D,EAAOuB,YAAYy4D,EAAiBl+H,IAGlCm+H,GACFj6D,EAAO6yC,kBAAkBonB,EAAuBn+H,IAG9Co+H,GACFl6D,EAAO+yC,cAAcmnB,EAAmBp+H,IAGnCkkE,CACX,CACA,CAmfA,SAAS82D,GAAgBb,EAAW50H,EAAMvF,GACxC,KAAMuF,KAAQ40H,GACZ,OAEF,MAAMf,EAAY9B,GAAgB6C,EAAU50H,GAAO4rH,GAAYnxH,GAC/D,OAAO,SAAUA,GACf,OAAOq9H,GAAcjE,EAAUp5H,GAAUuF,EAC7C,CACA,CAQA,SAASo1H,GAAgBR,EAAW50H,EAAMvF,GACxC,KAAMuF,KAAQ40H,GACZ,OAAO,KAET,MAAMf,EAAY9B,GAAgB6C,EAAU50H,GAAO6rH,GAAYpxH,GAC/D,OAAO,SAAUA,GACf,OAAOm8H,GAAc/C,EAAUp5H,GAAUuF,EAC7C,CACA,CAQA,SAAS61H,GAAiBjB,EAAW50H,EAAMvF,GACzC,KAAMuF,KAAQ40H,GACZ,OAAO,KAET,MAAMf,EAAY9B,GAAgB6C,EAAU50H,GAAO2rH,GAAalxH,GAChE,OAAO,SAAUA,GACf,MAAM7L,EAAQilI,EAAUp5H,GACxB,GAAqB,kBAAV7L,EACT,MAAM,IAAIkE,MAAM,0BAA0BkN,KAE5C,OAAOpR,CACX,CACA,CAQA,SAAS2pI,GAAmB3D,EAAW50H,EAAMvF,GAC3C,KAAMuF,KAAQ40H,GACZ,OAAO,KAET,MAAMf,EAAY9B,GAChB6C,EAAU50H,GACV8rH,GAAYD,GACZpxH,GAEF,OAAO,SAAUA,GACf,OAAO08H,GAAiBtD,EAAUp5H,GAAUuF,EAChD,CACA,CAQA,SAASw2H,GAAqB5B,EAAW50H,EAAMvF,GAC7C,KAAMuF,KAAQ40H,GACZ,OAAO,KAET,MAAMf,EAAY9B,GAAgB6C,EAAU50H,GAAO+rH,GAAiBtxH,GACpE,OAAO,SAAUA,GACf,OAAO68H,GAAmBzD,EAAUp5H,GAAUuF,EAClD,CACA,CAQA,SAAS82H,GAAoBlC,EAAW50H,EAAMvF,GAC5C,KAAMuF,KAAQ40H,GACZ,OAAO,KAET,MAAMf,EAAY9B,GAAgB6C,EAAU50H,GAAO+rH,GAAiBtxH,GACpE,OAAO,SAAUA,GACf,MAAMzF,EAAQsiI,GAAmBzD,EAAUp5H,GAAUuF,GACrD,GAAqB,IAAjBhL,EAAMtJ,OACR,MAAM,IAAIoH,MAAM,4BAA4BkN,KAE9C,OAAOhL,CACX,CACA,CAQA,SAASihI,GAAkBrB,EAAW50H,EAAMvF,GAC1C,KAAMuF,KAAQ40H,GACZ,OAAO,KAET,MAAMf,EAAY9B,GAChB6C,EAAU50H,GACV+rH,GAAkBH,GAClBnxH,GAEF,OAAO,SAAUA,GACf,OAkNJ,SAAyB7L,EAAOQ,GAC9B,GAAqB,iBAAVR,EACT,OAAOA,EAET,MAAMoP,EAAOs5H,GAAmB1oI,EAAOQ,GACvC,GAAoB,IAAhB4O,EAAKtS,OACP,MAAM,IAAIoH,MAAM,wCAAwC1D,KAE1D,OAAO4O,CACT,CA3NW86H,CAAgBjF,EAAUp5H,GAAUuF,EAC/C,CACA,CAOA,SAASw3H,GAAe5C,EAAWxlI,GACjC,MAAMR,EAAQgmI,EAAUxlI,GACxB,QAAc2B,IAAVnC,EAAJ,CAGA,GAAqB,iBAAVA,EACT,MAAM,IAAIkE,MAAM,yBAAyB1D,KAE3C,OAAOR,CAJN,CAKH,CAiDA,SAASqoI,GAAmBrC,EAAWxlI,GACrC,MAAM89H,EAAU0H,EAAUxlI,GAC1B,QAAgB2B,IAAZm8H,EAAJ,CAGA,GACc,gBAAZA,GACY,iBAAZA,GACY,aAAZA,GACY,cAAZA,EAEA,MAAM,IAAIp6H,MACR,kEAAkE1D,KAGtE,OAAO89H,CAXN,CAYH,CAOA,SAASgK,GAAwBtC,EAAWxlI,GAC1C,MAAM89H,EAAU0H,EAAUxlI,GAC1B,QAAgB2B,IAAZm8H,EAAJ,CAGA,GAAgB,WAAZA,GAAoC,aAAZA,EAC1B,MAAM,IAAIp6H,MAAM,mCAAmC1D,KAErD,OAAO89H,CAJN,CAKH,CAoBA,SAASwK,GAAsB9C,EAAWxlI,GACxC,MAAM89H,EAAU0H,EAAUxlI,GAC1B,QAAgB2B,IAAZm8H,EAAJ,CAGA,GAAuB,iBAAZA,EACT,MAAM,IAAIp6H,MAAM,yBAAyB1D,KAE3C,GAAgB,cAAZ89H,GAAuC,aAAZA,GAAsC,SAAZA,EACvD,MAAM,IAAIp6H,MAAM,6CAA6C1D,KAE/D,OAAO89H,CAPN,CAQH,CAoBA,SAASoK,GAAmB1oI,EAAOQ,GACjC,IAAKxC,MAAMC,QAAQ+B,GACjB,MAAM,IAAIkE,MAAM,yBAAyB1D,KAE3C,MAAM1D,EAASkD,EAAMlD,OACrB,IAAK,IAAIS,EAAI,EAAGA,EAAIT,IAAUS,EAC5B,GAAwB,iBAAbyC,EAAMzC,GACf,MAAM,IAAI2G,MAAM,oCAAoC1D,KAGxD,OAAOR,CACT,CAOA,SAASgoI,GAAchoI,EAAOQ,GAC5B,GAAqB,iBAAVR,EACT,MAAM,IAAIkE,MAAM,yBAAyB1D,KAE3C,OAAOR,CACT,CAOA,SAASkpI,GAAclpI,EAAOQ,GAC5B,GAAqB,iBAAVR,EACT,MAAM,IAAIkE,MAAM,yBAAyB1D,KAE3C,OAAOR,CACT,CAOA,SAASuoI,GAAiBvoI,EAAOQ,GAC/B,GAAqB,iBAAVR,EACT,OAAOA,EAET,MAAMoG,EAAQsiI,GAAmB1oI,EAAOQ,GAClC1D,EAASsJ,EAAMtJ,OACrB,GAAIA,EAAS,GAAKA,EAAS,EACzB,MAAM,IAAIoH,MAAM,2CAA2C1D,KAE7D,OAAO4F,CACT,CC7sCA,IAAI+jI,GAAa,KA2BV,SAASC,GAASC,GACvBF,GAAaE,EAEb,MAAMC,EAAYjoI,OAAOC,KAAK+nI,EAAME,MAC9B5mI,EAAM2mI,EAAUxtI,OACtB,IAAIS,EAAGwiB,EACP,IAAKxiB,EAAI,EAAGA,EAAIoG,IAAOpG,EAAG,CACxB,MAAMue,EAAOwuH,EAAU/sI,GACvB,IAAKuH,GAAIgX,GAAO,CACd,MAAM0uH,EAAMH,EAAME,KAAKzuH,GACvB,IAAIsC,EAAmDosH,EAAS,MAC3DpsH,GAA0B,YAAjBosH,EAAIC,WAChBrsH,EAAQ,WAEV8G,GACE,IAAI/G,GAAW,CACbrC,KAAMA,EACNM,gBAAiBouH,EAAIE,KACrB9tH,cAAe4tH,EAAIG,SACnBvsH,UAGL,CACF,CACD,IAAK7gB,EAAI,EAAGA,EAAIoG,IAAOpG,EAAG,CACxB,MAAMqtI,EAAQN,EAAU/sI,GAClBstI,EAAQ/lI,GAAI8lI,GAClB,IAAK7qH,EAAI,EAAGA,EAAIpc,IAAOoc,EAAG,CACxB,MAAM+qH,EAAQR,EAAUvqH,GAClBgrH,EAAQjmI,GAAIgmI,GAClB,IAAKxjH,GAAasjH,EAAOE,GACvB,GAAIT,EAAME,KAAKK,KAAWP,EAAME,KAAKO,GACnCjlH,GAAyB,CAACglH,EAAOE,QAC5B,CACL,MAAMr5H,EAAY24H,EAAMO,EAAOE,GAC/BnkH,GACEkkH,EACAE,EACA1iH,GAA8BwiH,EAAOE,EAAOr5H,EAAUkV,SACtDyB,GAA8B0iH,EAAOF,EAAOn5H,EAAUmV,SAEzD,CAEJ,CACF,CACH,CAMA,IAAImkH,GAAa9gE,eAAgBpuD,GAC/B,MAAMwuD,QAAiBygB,MAAM,mBAAmBjvE,WAChD,IAAKwuD,EAAS2gE,GACZ,MAAM,IAAI/mI,MAAM,qCAAqComE,EAAStB,UAEhE,OAAOsB,EAASjsB,MAClB,EC3BA,MAAMt4C,GACU,cA6QhB,IAAAmlI,GA9PA,cAA8BvwE,GAI5B,WAAAl/D,CAAY4K,GACVA,EAAUA,GAAoB,GAE9B,MAAM4xC,EAAc51C,OAAO6C,OAAO,CAAE,EAAEmB,UAE/B4xC,EAAYhsC,aACZgsC,EAAY0+E,oBACZ1+E,EAAY0iF,4BACZ1iF,EAAY4iF,uBACnBj6H,MAAMq3C,GAMNt8C,KAAKwvI,gBACmBhpI,IAAtBkE,EAAQ+kI,WAA0B/kI,EAAQ+kI,UAM5CzvI,KAAKi7H,mBACsBz0H,IAAzBkE,EAAQswH,aAA6BtwH,EAAQswH,aAAe,IAO9Dh7H,KAAKuU,OAAS,KAOdvU,KAAKwU,oBAAiBhO,EAEtBxG,KAAKmV,SAASzK,EAAQ4F,OAMtBtQ,KAAK0vI,2BAC8BlpI,IAAjCkE,EAAQs0H,sBACJt0H,EAAQs0H,qBAOdh/H,KAAK2vI,6BACgCnpI,IAAnCkE,EAAQw0H,wBACJx0H,EAAQw0H,sBAEf,CAKD,YAAAe,GACE,OAAOjgI,KAAKwvI,UACb,CAgBD,WAAApyF,CAAYC,GACV,OAAOp4C,MAAMm4C,YAAYC,EAC1B,CAKD,eAAAkiF,GACE,OAAOv/H,KAAKi7H,aACb,CAMD,cAAAwE,GACE,OACEz/H,KAAKmJ,IAAIiB,GAEZ,CAQD,QAAA8K,GACE,OAAOlV,KAAKuU,MACb,CAOD,gBAAAc,GACE,OAAOrV,KAAKwU,cACb,CAMD,uBAAAyqH,GACE,OAAOj/H,KAAK0vI,qBACb,CAMD,yBAAAvQ,GACE,OAAOn/H,KAAK2vI,uBACb,CAMD,eAAA7oF,CAAgBtJ,GACTA,EAAWwoB,gBACdxoB,EAAWwoB,cAAgB,IAAI01B,GAAM,IAErB17F,KAAKm+C,cAAe2I,gBAAgBtJ,EACvD,CAMD,cAAAoyF,CAAeC,GACb7vI,KAAK8J,IAAIM,GAAuBylI,EACjC,CAuBD,QAAA16H,CAAS7E,GACPtQ,KAAKuU,OAcT,SAAqBjE,GACnB,QAAc9J,IAAV8J,EACF,OAAO03G,GAET,IAAK13G,EACH,OAAO,KAET,GAAqB,mBAAVA,EACT,OAAOA,EAET,GAAIA,aAAiBg3G,GACnB,OAAOh3G,EAET,IAAKjO,MAAMC,QAAQgO,GACjB,OAAOm5H,GAA0B,CAACn5H,IAEpC,GAAqB,IAAjBA,EAAMnP,OACR,MAAO,GAGT,MAAMA,EAASmP,EAAMnP,OACf4wB,EAAQzhB,EAAM,GAEpB,GAAIyhB,aAAiBu1F,GAAO,CAI1B,MAAM5xG,EAAS,IAAIrT,MAAMlB,GACzB,IAAK,IAAIS,EAAI,EAAGA,EAAIT,IAAUS,EAAG,CAC/B,MAAMC,EAAYyO,EAAM1O,GACxB,KAAMC,aAAqBylH,IACzB,MAAM,IAAI/+G,MAAM,sCAElBmN,EAAO9T,GAAKC,CACb,CACD,OAAO6T,CACR,CAED,GAAI,UAAWqc,EAAO,CAIpB,MAAMq3G,EAAQ,IAAI/mI,MAAMlB,GACxB,IAAK,IAAIS,EAAI,EAAGA,EAAIT,IAAUS,EAAG,CAC/B,MAAMC,EAAYyO,EAAM1O,GACxB,KAAM,UAAWC,GACf,MAAM,IAAI0G,MAAM,kDAElB6gI,EAAMxnI,GAAKC,CACZ,CACD,OAAOsnI,GAAqBC,EAC7B,CAED,MAAMM,EACwD,EAC9D,OAAOD,GAA0BC,EACnC,CAtEkBoG,CAAYx/H,GAC1BtQ,KAAKwU,eACO,OAAVlE,OAAiB9J,EAAYupI,GAAgB/vI,KAAKuU,QACpDvU,KAAK6H,SACN,GCjPH,IAAAmoI,GAbA,cAA0BC,GAIxB,WAAAnwI,CAAY4K,GACVzF,MAAMyF,EACP,CAED,cAAAg0C,GACE,OAAO,IAAI8hF,GAA0BxgI,KACtC,GClBH,SAASq2H,GAAKzpH,EAAamJ,EAAW6X,GAKpC,MAAM/S,EAAkB,GAExB,IAAIq1H,EAAOtjI,EAAY,GACnBujI,EAAOvjI,EAAY,GAEnBvL,EAAI0U,EAAUm6H,GACd5uI,EAAIyU,EAAUo6H,GAGlB,MAAMC,EAAW,CAACD,EAAMD,GAElBr+G,EAAQ,CAACvwB,EAAGD,GAEZgvI,EAAgB,CAAC,EAAG,GAGpBC,EAAY,CAAA,EAElB,IACIC,EAAMvwH,EAAGwwH,EAAOC,EAAOC,EAAOnpI,EAD9BopI,EAAgB,IAGpB,OAASA,EAAgB,GAAKN,EAAclvI,OAAS,GAEnDqvI,EAAQH,EAAcplI,MACtBilI,EAAOE,EAASnlI,MAChB5J,EAAIwwB,EAAM5mB,MAEV1D,EAAMipI,EAAM73H,WACNpR,KAAO+oI,IACXz1H,EAAgBlV,KAAKtE,EAAE,GAAIA,EAAE,IAC7BivI,EAAU/oI,IAAO,GAGnBkpI,EAAQJ,EAAcplI,MACtBklI,EAAOC,EAASnlI,MAChB3J,EAAIuwB,EAAM5mB,MAEVylI,GAASF,EAAQC,GAAS,EAC1BF,EAAO3jI,EAAY8jI,GACnB1wH,EAAIjK,EAAUw6H,GAEZ1sH,GAAuB7D,EAAE,GAAIA,EAAE,GAAI3e,EAAE,GAAIA,EAAE,GAAIC,EAAE,GAAIA,EAAE,IACvDssB,GAKA/S,EAAgBlV,KAAKrE,EAAE,GAAIA,EAAE,IAC7BiG,EAAMkpI,EAAM93H,WACZ23H,EAAU/oI,IAAO,IAIjB8oI,EAAc1qI,KAAK8qI,EAAOC,EAAOA,EAAOF,GACxC3+G,EAAMlsB,KAAKrE,EAAG0e,EAAGA,EAAG3e,GACpB+uI,EAASzqI,KAAKwqI,EAAMI,EAAMA,EAAML,IAIpC,OAAOr1H,CACT,CAoEO,SAAS+1H,GAASC,EAAK9oH,EAAMC,EAAM9I,EAAY0O,GAEpD,OAAOyoG,IAKL,SAAUya,GACR,MAAO,CAACD,EAAK9oH,GAAQC,EAAOD,GAAQ+oH,EACrC,GACDnlH,GATyB+C,GAAc,aASNxP,GACjC0O,EAEJ,CAWO,SAASmjH,GAAStoH,EAAKF,EAAMyoH,EAAM9xH,EAAY0O,GAEpD,OAAOyoG,IAKL,SAAUya,GACR,MAAO,CAACvoH,GAAQyoH,EAAOzoH,GAAQuoH,EAAMroH,EACtC,GACDkD,GATyB+C,GAAc,aASNxP,GACjC0O,EAEJ,CC7IA,MAAMqjH,GAAuB,IAAIxqB,GAAO,CACtC18E,MAAO,oBAOHmnG,GAAY,CAChB,GACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,GACA,GAAK,GACL,GAAK,GACL,EAAI,GACJ,EAAI,GACJ,EAAI,GACJ,GAAK,KACL,GAAK,KACL,GAAK,KACL,EAAI,KACJ,EAAI,KACJ,EAAI,MAmqCN,IAAAC,GAljCA,cAAwBC,GAItB,WAAAtxI,CAAY4K,GACVA,EAAUA,GAAoB,GAE9B,MAAM4xC,EAAc51C,OAAO6C,OACzB,CACEy1H,sBAAsB,EACtBE,wBAAwB,EACxBlE,aAAc,GAEhBtwH,UAGK4xC,EAAY+0F,gBACZ/0F,EAAYo0B,mBACZp0B,EAAYg1F,kBACZh1F,EAAYi1F,kBACZj1F,EAAYk1F,yBACZl1F,EAAYm1F,yBACZn1F,EAAYo1F,wBACZp1F,EAAYq1F,wBACZr1F,EAAYs1F,qBACZt1F,EAAYu1F,qBACZv1F,EAAYw1F,UACnB7sI,MAAMq3C,GAKNt8C,KAAK4zC,YAAc,KAMnB5zC,KAAK+xI,QAAUv3H,IAMfxa,KAAKgyI,QAAUx3H,IAMfxa,KAAKiyI,SAAWz3H,IAMhBxa,KAAKkyI,SAAW13H,IAMhBxa,KAAKmyI,MAAQ33H,IAMbxa,KAAKoyI,MAAQ53H,IAMbxa,KAAKqyI,OAAS73H,IAMdxa,KAAKsyI,OAAS93H,IAMdxa,KAAKuyI,iBACoB/rI,IAAvBkE,EAAQ4mI,WAA2B5mI,EAAQ4mI,WAAa,IAM1DtxI,KAAKwyI,eAAiChsI,IAArBkE,EAAQ2mI,SAAyB3mI,EAAQ2mI,SAAW,IAMrErxI,KAAKyyI,WAAa,GAMlBzyI,KAAK0yI,WAAa,GAMlB1yI,KAAK2yI,kBACqBnsI,IAAxBkE,EAAQgmE,YACJhmE,EAAQgmE,YACRugE,GAMNjxI,KAAK4yI,0BAAuBpsI,EAM5BxG,KAAK6yI,wBAAqBrsI,EAM1BxG,KAAK8yI,wBAA0B,KAM/B9yI,KAAK+yI,YAAc,KAMnB/yI,KAAKgzI,aAAe,KAMpBhzI,KAAKizI,SAAW,KAMhBjzI,KAAKkzI,UAAY,KAMjBlzI,KAAKmzI,iBAAmB,KAMxBnzI,KAAKozI,iBAAmB,KAEpB1oI,EAAQ6mI,aAKVvxI,KAAKqzI,mBAC0B7sI,MAA7BkE,EAAQ8mI,kBACJlrH,GAAoBpf,KAAKlH,KAAM,MAC/B0K,EAAQ8mI,kBAMdxxI,KAAKszI,mBAC0B9sI,MAA7BkE,EAAQ+mI,kBACJnrH,GAAoBpf,KAAKlH,KAAM,MAC/B0K,EAAQ+mI,kBAQdzxI,KAAKuzI,kBACyB/sI,MAA5BkE,EAAQgnI,iBAAgC,EAAIhnI,EAAQgnI,iBAQtD1xI,KAAKwzI,kBACyBhtI,MAA5BkE,EAAQinI,iBAAgC,EAAIjnI,EAAQinI,iBAMtD3xI,KAAKyzI,mBAAqB,IAAInsB,GAAM,CAClC5kE,UAC4Bl8C,IAA1BkE,EAAQknI,cACJlnI,EAAQknI,cAAc98H,QACtB,IAAIqzG,GAAK,CACP5kE,KAAM,0BACN2yB,aAAc,SACd/B,KAAM,IAAIkwC,GAAK,CACbt6E,MAAO,kBAETqqC,OAAQ,IAAIqyC,GAAO,CACjB18E,MAAO,sBACPv6B,MAAO,QAUnBxP,KAAK0zI,eAAkBj0F,IACrB,MAAMiG,EAAQjG,EAAQt2C,IAAI,mBAE1B,OADAnJ,KAAKyzI,mBAAmBl/D,UAAUszC,QAAQniE,GACnC1lD,KAAKyzI,kBAAkB,EAOhCzzI,KAAK2zI,mBAAqB,IAAIrsB,GAAM,CAClC5kE,UAC4Bl8C,IAA1BkE,EAAQmnI,cACJnnI,EAAQmnI,cAAc/8H,QACtB,IAAIqzG,GAAK,CACP5kE,KAAM,0BACN0yB,UAAW,QACX9B,KAAM,IAAIkwC,GAAK,CACbt6E,MAAO,kBAETqqC,OAAQ,IAAIqyC,GAAO,CACjB18E,MAAO,sBACPv6B,MAAO,QAUnBxP,KAAK4zI,eAAkBn0F,IACrB,MAAMiG,EAAQjG,EAAQt2C,IAAI,mBAE1B,OADAnJ,KAAK2zI,mBAAmBp/D,UAAUszC,QAAQniE,GACnC1lD,KAAK2zI,kBAAkB,EAGhC3zI,KAAKmzI,iBAAmB,GACxBnzI,KAAKozI,iBAAmB,GAExBpzI,KAAKsF,iBAAiBwB,GAAsB9G,KAAK6zI,YAAY3sI,KAAKlH,QAOpEA,KAAK8zI,gBACmBttI,IAAtBkE,EAAQonI,UAA0BpnI,EAAQonI,UAAYZ,GAGxDlxI,KAAKg9C,UACH,IAAIkiD,GAAa,CACf7rF,OAAQrT,KAAK+zI,eAAe7sI,KAAKlH,MACjCs7F,SAAUt7F,KAAKg0I,iBAAiB9sI,KAAKlH,MACrCijE,SAAU,IAAI14D,EACd4wF,UAAU,EACVK,iBAAiB,EACjBv8E,MAAOvU,EAAQuU,SASnBjf,KAAKi0I,aAAe,GAMpBj0I,KAAKk0I,WAAa,IAAI5sB,GAAM,CAC1BlzC,OAAQp0E,KAAK2yI,eAOf3yI,KAAKm0I,cAAgB,KAMrBn0I,KAAKowG,gBAAkB,KAMvBpwG,KAAK09H,oBAAsB,KAE3B19H,KAAK4vI,eAAe,KACrB,CASD,gBAAAoE,CAAiBz6H,EAAQmD,GAEvB,IAAI03H,EAAkB76H,EAAOzV,QAe7B,OAdI9D,KAAK4zC,aAAe5zC,KAAKi9C,YAAY+C,YACvC8/E,GAAYsU,EAAiBp0I,KAAK4zC,aAEhC5zC,KAAKm0I,gBAELl5H,GAAoBjb,KAAKm0I,cAAeC,EAAiB13H,GAGzD03H,EAAkBp0I,KAAKm0I,cAAcrwI,QAGrC9D,KAAKi9C,YAAY4hD,mBAAmB7+F,KAAKm0I,gBAGtC,CAACC,EACT,CAQD,cAAAL,CAAex6H,EAAQmD,EAAYwC,GACjClf,KAAKm0I,cAAgB56H,EACrB,MAAMtP,EAASjK,KAAKi9C,YASdo3F,EAAe12H,GAND3d,KAAKof,aAAe,EACrC5E,KACAA,IACDA,IACAA,KAEgDjB,GAElD,GACEvZ,KAAKowG,iBACL7tG,GAAOvC,KAAKowG,gBAAiBikC,IAC7Br0I,KAAK09H,sBAAwBhhH,EAE7B,OAMF,GAJA1c,KAAKowG,gBAAkBikC,EACvBr0I,KAAK09H,oBAAsBhhH,EAGvB5X,GAAQuvI,GACV,OAIF,MAAM53H,EAASJ,GAAUg4H,GACnBzmH,EAAoBlR,EAAaA,EAAc,IAGlD1c,KAAK4zC,cAAgB0gG,GAAqBt0I,KAAK4zC,YAAa10B,KAG7Dlf,KAAKu0I,sBAAsBr1H,GAG7Blf,KAAKw0I,iBAAiBH,EAAc53H,EAAQC,EAAYkR,GAGxD,IAQI6xB,EARA48E,EAAer8H,KAAKyyI,WAAWtxI,OAASnB,KAAK0yI,WAAWvxI,OAS5D,IARInB,KAAKmzI,mBACP9W,GAAgBr8H,KAAKyyI,WAAWtxI,QAE9BnB,KAAKozI,mBACP/W,GAAgBr8H,KAAK0yI,WAAWvxI,QAI3Bk7H,EAAer8H,KAAKi0I,aAAa9yI,QACtCs+C,EAAU,IAAItrC,GACdnU,KAAKi0I,aAAatuI,KAAK85C,GAGzB,MAAMg1F,EAAexqI,EAAOwzF,wBAC5Bg3C,EAAa9vI,QACb,IAGI/C,EAAGmd,EAHH21H,EAAY,EAIhB,IAAK9yI,EAAI,EAAGmd,EAAI/e,KAAKyyI,WAAWtxI,OAAQS,EAAImd,IAAKnd,EAC/C69C,EAAUz/C,KAAKi0I,aAAaS,KAC5Bj1F,EAAQ7qC,YAAY5U,KAAKyyI,WAAW7wI,IACpC69C,EAAQtqC,SAASnV,KAAKk0I,YACtBO,EAAa9uI,KAAK85C,GAEpB,IAAK79C,EAAI,EAAGmd,EAAI/e,KAAK0yI,WAAWvxI,OAAQS,EAAImd,IAAKnd,EAC/C69C,EAAUz/C,KAAKi0I,aAAaS,KAC5Bj1F,EAAQ7qC,YAAY5U,KAAK0yI,WAAW9wI,IACpC69C,EAAQtqC,SAASnV,KAAKk0I,YACtBO,EAAa9uI,KAAK85C,EAErB,CAYD,YAAAk1F,CAAa9D,EAAK+D,EAAQC,EAAQjnH,EAAkBrU,EAAQtW,GAC1D,MAAM+0F,EAAah4F,KAAK80I,aACtBjE,EACA+D,EACAC,EACAjnH,EACA3qB,GAEF,GAAI4a,GAAWm6E,EAAW54E,YAAa7F,GAAS,CAC9C,GAAIvZ,KAAKmzI,iBAAkB,CACzB,MAAMzwF,EAAO1iD,KAAKqzI,mBAAmBxC,GACjC5tI,KAASjD,KAAKmzI,iBAChBnzI,KAAKmzI,iBAAiBlwI,GAAOy/C,KAAOA,EAEpC1iD,KAAKmzI,iBAAiBlwI,GAAS,CAC7B8xI,KAAM,IAAIzhH,GAAM,IAChBovB,KAAMA,EAGX,CACD1iD,KAAKyyI,WAAWxvI,KAAW+0F,CAC5B,CACD,OAAO/0F,CACR,CAYD,YAAA+xI,CAAavsH,EAAKwsH,EAAQC,EAAQtnH,EAAkBrU,EAAQtW,GAC1D,MAAM+0F,EAAah4F,KAAKm1I,aACtB1sH,EACAwsH,EACAC,EACAtnH,EACA3qB,GAEF,GAAI4a,GAAWm6E,EAAW54E,YAAa7F,GAAS,CAC9C,GAAIvZ,KAAKozI,iBAAkB,CACzB,MAAM1wF,EAAO1iD,KAAKszI,mBAAmB7qH,GACjCxlB,KAASjD,KAAKozI,iBAChBpzI,KAAKozI,iBAAiBnwI,GAAOy/C,KAAOA,EAEpC1iD,KAAKozI,iBAAiBnwI,GAAS,CAC7B8xI,KAAM,IAAIzhH,GAAM,IAChBovB,KAAMA,EAGX,CACD1iD,KAAK0yI,WAAWzvI,KAAW+0F,CAC5B,CACD,OAAO/0F,CACR,CAMD,WAAA4wI,CAAYhuI,GACV,MAAM8W,EAAW9W,EAAM23C,WAAWjE,UAAU58B,SACtCD,EAAa7W,EAAM23C,WAAWjE,UAAU78B,WACxCjJ,EAAO5N,EAAM23C,WAAW/pC,KACxB8F,EAAS1T,EAAM23C,WAAWjkC,OAC1B67H,EAAiB/4H,GAAU9C,GACjC,IAAI87H,EAAiB97H,EACrB,GAAIoD,EAAU,CACZ,MAAM24H,EAAiB7hI,EAAK,GAAKiJ,EAC3B64H,EAAkB9hI,EAAK,GAAKiJ,EAClC24H,EAAiB,CACfD,EAAe,GAAKE,EAAiB,EACrCF,EAAe,GAAKG,EAAkB,EACtCH,EAAe,GAAKE,EAAiB,EACrCF,EAAe,GAAKG,EAAkB,EAEzC,CAED,IAAIC,EAAa,EACbjX,EAAW,EACXkX,EAAgBz1I,KAAKwzI,kBAAoB,GAC7C,MAAMr0H,EAAmBnf,KAAK4zC,YAAYx0B,YACpCE,EAAanD,GAASgD,GAC5B,GACEnf,KAAKi9C,YAAY+C,YACjBhgD,KAAK4zC,YAAYv0B,aAChBtF,GAAeoF,EAAkB5F,GAClC,CACAi8H,EAAaxpI,KAAKuT,OAAOhG,EAAO,GAAK4F,EAAiB,IAAMG,GAC5Di/G,EAAWvyH,KAAKiZ,MAAM1L,EAAO,GAAK4F,EAAiB,IAAMG,GAEzDm2H,EAAgBA,IADCzpI,KAAKmP,IAAIwB,GAAY3Q,KAAK6T,GAAK,CAEjD,CACD,MAAM61H,EAAgBn6D,GAAiB11E,GAEvC,IAAK,IAAI24H,EAAQgX,EAAYhX,GAASD,IAAYC,EAAO,CACvD,IACI/+E,EAASx8C,EAAO8b,EAAG42H,EADnBjB,EAAY10I,KAAKyyI,WAAWtxI,OAASnB,KAAK0yI,WAAWvxI,OAGzD,GAAInB,KAAKmzI,iBACP,IAAKlwI,EAAQ,EAAG8b,EAAI/e,KAAKmzI,iBAAiBhyI,OAAQ8B,EAAQ8b,IAAK9b,EAAO,CACpE,MAAM+0F,EAAah4F,KAAKyyI,WAAWxvI,GACnC,GAAK0Z,GAAsB,IAAV6hH,EAEV,CACL,MAAM1pH,EAAQkjF,EAAWljF,QACzBA,EAAM8C,UAAU4mH,EAAQl/G,EAAY,GACpCxK,EAAMwC,QAAQqF,EAAUy4H,GACxBO,EAAY31I,KAAK41I,kBAAkB9gI,EAAOugI,EAAgBpyI,GAC1D0yI,EAAUr+H,OAAOqF,EAAUy4H,EAC5B,MAPCO,EAAY31I,KAAK41I,kBAAkB59C,EAAYz+E,EAAQtW,GAQzDw8C,EAAUz/C,KAAKi0I,aAAaS,KAC5Bj1F,EAAQ7qC,YAAY+gI,GACpBl2F,EAAQ31C,IAAI,kBAAmB9J,KAAKmzI,iBAAiBlwI,GAAOy/C,MAC5DgzF,EAAcjmE,YAAYhwB,EAASz/C,KAAK0zI,eAAej0F,GACxD,CAEH,GAAIz/C,KAAKozI,mBAEJ5U,IAAUgX,GAAcC,GACxBjX,IAAUD,IAAakX,GAExB,IAAKxyI,EAAQ,EAAG8b,EAAI/e,KAAK0yI,WAAWvxI,OAAQ8B,EAAQ8b,IAAK9b,EAAO,CAC9D,MAAM+0F,EAAah4F,KAAK0yI,WAAWzvI,GACnC,GAAK0Z,GAAsB,IAAV6hH,EAEV,CACL,MAAM1pH,EAAQkjF,EAAWljF,QACzBA,EAAM8C,UAAU4mH,EAAQl/G,EAAY,GACpCxK,EAAMwC,QAAQqF,EAAUy4H,GACxBO,EAAY31I,KAAK61I,kBAAkB/gI,EAAOugI,EAAgBpyI,GAC1D0yI,EAAUr+H,OAAOqF,EAAUy4H,EAC5B,MAPCO,EAAY31I,KAAK61I,kBAAkB79C,EAAYz+E,EAAQtW,GAQzDw8C,EAAUz/C,KAAKi0I,aAAaS,KAC5Bj1F,EAAQ7qC,YAAY+gI,GACpBl2F,EAAQ31C,IAAI,kBAAmB9J,KAAKozI,iBAAiBnwI,GAAOy/C,MAC5DgzF,EAAcjmE,YAAYhwB,EAASz/C,KAAK4zI,eAAen0F,GACxD,CAGN,CACF,CASD,gBAAA+0F,CAAiBj7H,EAAQkD,EAAQC,EAAYkR,GAC3C,MAAM+0B,EAAW3iD,KAAK81I,aAAap5H,GACnC,IAAiB,GAAbimC,EASF,OARA3iD,KAAKyyI,WAAWtxI,OAAS,EACzBnB,KAAK0yI,WAAWvxI,OAAS,EACrBnB,KAAKmzI,mBACPnzI,KAAKmzI,iBAAiBhyI,OAAS,QAE7BnB,KAAKozI,mBACPpzI,KAAKozI,iBAAiBjyI,OAAS,IAKnC,IAAI8d,GAAQ,EACZ,MAAME,EAAmBnf,KAAK4zC,YAAYx0B,YACpCE,EAAanD,GAASgD,GAE1Bnf,KAAKi9C,YAAY+C,YACjBhgD,KAAK4zC,YAAYv0B,aAChBtF,GAAeoF,EAAkB5F,KAE9B4C,GAAS5C,IAAW+F,GACtB/F,EAAO,GAAK4F,EAAiB,GAC7B5F,EAAO,GAAK4F,EAAiB,IAE7BF,GAAQ,GAMZ,MAAM82H,EAAe,CACnBnyH,GAAMnH,EAAO,GAAIzc,KAAKqyI,MAAOryI,KAAKmyI,OAClCvuH,GAAMnH,EAAO,GAAIzc,KAAKsyI,MAAOtyI,KAAKoyI,QAO9B4D,EAAeh2I,KAAK6yI,mBAAmBkD,GACzCznH,MAAM0nH,EAAa,MACrBA,EAAa,GACXhqI,KAAKmP,IAAInb,KAAK+xI,UAAY/lI,KAAKmP,IAAInb,KAAKiyI,SACpCjyI,KAAK+xI,QACL/xI,KAAKiyI,SAEb,IAAIgE,EAAYryH,GAAMoyH,EAAa,GAAIh2I,KAAKkyI,QAASlyI,KAAKgyI,SACtDkE,EAAYtyH,GAAMoyH,EAAa,GAAIh2I,KAAKiyI,QAASjyI,KAAK+xI,SAC1D,MAAMV,EAAWrxI,KAAKwyI,UACtB,IAAI2D,EAAKna,EAAKvzG,EAAKooH,EAIfuF,EAAe78H,EACd0F,IACHm3H,EAAe,CACbxyH,GAAMrK,EAAO,GAAIvZ,KAAKqyI,MAAOryI,KAAKmyI,OAClCvuH,GAAMrK,EAAO,GAAIvZ,KAAKsyI,MAAOtyI,KAAKoyI,OAClCxuH,GAAMrK,EAAO,GAAIvZ,KAAKqyI,MAAOryI,KAAKmyI,OAClCvuH,GAAMrK,EAAO,GAAIvZ,KAAKsyI,MAAOtyI,KAAKoyI,SAMtC,MAAMiE,EAAc33H,GAClB03H,EACAp2I,KAAK6yI,wBACLrsI,EACA,GAGF,IAAIquI,EAASwB,EAAY,GACrBnB,EAASmB,EAAY,GACrBzB,EAASyB,EAAY,GACrBpB,EAASoB,EAAY,GAwCzB,GAtCKp3H,IAKCpF,GAAmBu8H,EAAcp2I,KAAK+yI,eACxCkC,EAASj1I,KAAKkyI,QACd0C,EAAS50I,KAAKiyI,SAEZp4H,GAAmBu8H,EAAcp2I,KAAKgzI,gBACxCkC,EAASl1I,KAAKgyI,QACd4C,EAAS50I,KAAKiyI,SAEZp4H,GAAmBu8H,EAAcp2I,KAAKizI,YACxCgC,EAASj1I,KAAKkyI,QACd2C,EAAS70I,KAAK+xI,SAEZl4H,GAAmBu8H,EAAcp2I,KAAKkzI,aACxCgC,EAASl1I,KAAKgyI,QACd6C,EAAS70I,KAAK+xI,SAKhB8C,EAASjxH,GAAMixH,EAAQqB,EAAWl2I,KAAK+xI,SACvCmD,EAAStxH,GAAMsxH,EAAQe,EAAWj2I,KAAKgyI,SACvC4C,EAAShxH,GAAMgxH,EAAQ50I,KAAKiyI,QAASiE,GACrCjB,EAASrxH,GAAMqxH,EAAQj1I,KAAKkyI,QAAS+D,IAKvCA,EAAYjqI,KAAKuT,MAAM02H,EAAYtzF,GAAYA,EAC/CkuF,EAAMjtH,GAAMqyH,EAAWj2I,KAAKkyI,QAASlyI,KAAKgyI,SAE1ChW,EAAMh8H,KAAK20I,aAAa9D,EAAK+D,EAAQC,EAAQjnH,EAAkBrU,EAAQ,GAEvE48H,EAAM,EACFl3H,EACF,MAAQ4xH,GAAOluF,IAAasyF,GAAUkB,IAAQ9E,GAC5CrV,EAAMh8H,KAAK20I,aACT9D,EACA+D,EACAC,EACAjnH,EACArU,EACAyiH,QAIJ,KAAO6U,GAAO7wI,KAAKkyI,SAAWiE,IAAQ9E,GACpCR,EAAM7kI,KAAKyP,IAAIo1H,EAAMluF,EAAU3iD,KAAKkyI,SACpClW,EAAMh8H,KAAK20I,aACT9D,EACA+D,EACAC,EACAjnH,EACArU,EACAyiH,GAQN,GAHA6U,EAAMjtH,GAAMqyH,EAAWj2I,KAAKkyI,QAASlyI,KAAKgyI,SAE1CmE,EAAM,EACFl3H,EACF,MAAQ4xH,GAAOluF,IAAauyF,GAAUiB,IAAQ9E,GAC5CrV,EAAMh8H,KAAK20I,aACT9D,EACA+D,EACAC,EACAjnH,EACArU,EACAyiH,QAIJ,KAAO6U,GAAO7wI,KAAKgyI,SAAWmE,IAAQ9E,GACpCR,EAAM7kI,KAAKwP,IAAIq1H,EAAMluF,EAAU3iD,KAAKgyI,SACpChW,EAAMh8H,KAAK20I,aACT9D,EACA+D,EACAC,EACAjnH,EACArU,EACAyiH,GAkBN,IAbAh8H,KAAKyyI,WAAWtxI,OAAS66H,EACrBh8H,KAAKmzI,mBACPnzI,KAAKmzI,iBAAiBhyI,OAAS66H,GAKjCka,EAAYlqI,KAAKuT,MAAM22H,EAAYvzF,GAAYA,EAC/Cl6B,EAAM7E,GAAMsyH,EAAWl2I,KAAKiyI,QAASjyI,KAAK+xI,SAE1C/V,EAAMh8H,KAAKg1I,aAAavsH,EAAKwsH,EAAQC,EAAQtnH,EAAkBrU,EAAQ,GAEvE48H,EAAM,EACC1tH,GAAOzoB,KAAKiyI,SAAWkE,IAAQ9E,GACpC5oH,EAAMzc,KAAKyP,IAAIgN,EAAMk6B,EAAU3iD,KAAKiyI,SACpCjW,EAAMh8H,KAAKg1I,aACTvsH,EACAwsH,EACAC,EACAtnH,EACArU,EACAyiH,GAOJ,IAHAvzG,EAAM7E,GAAMsyH,EAAWl2I,KAAKiyI,QAASjyI,KAAK+xI,SAE1CoE,EAAM,EACC1tH,GAAOzoB,KAAK+xI,SAAWoE,IAAQ9E,GACpC5oH,EAAMzc,KAAKwP,IAAIiN,EAAMk6B,EAAU3iD,KAAK+xI,SACpC/V,EAAMh8H,KAAKg1I,aACTvsH,EACAwsH,EACAC,EACAtnH,EACArU,EACAyiH,GAIJh8H,KAAK0yI,WAAWvxI,OAAS66H,EACrBh8H,KAAKozI,mBACPpzI,KAAKozI,iBAAiBjyI,OAAS66H,EAElC,CAOD,YAAA8Z,CAAap5H,GACX,MAAMu5H,EAAYj2I,KAAK8yI,wBAAwB,GACzCoD,EAAYl2I,KAAK8yI,wBAAwB,GAC/C,IAAInwF,GAAY,EAChB,MAAMxiD,EAAS6L,KAAKC,IAAIjM,KAAKuyI,YAAc71H,EAAY,GAEjDg2G,EAAK,GAELC,EAAK,GACX,IAAK,IAAI/wH,EAAI,EAAGuE,EAAKnG,KAAK8zI,WAAW3yI,OAAQS,EAAIuE,IAAMvE,EAAG,CACxD,MAAM8L,EAAQkW,GAAM5jB,KAAK8zI,WAAWlyI,GAAK,EAAG,EAAG,IAEzC00I,EAAa1yH,GAAMsyH,GAAY,GAAKxoI,EAAO,GAAKA,GACtDglH,EAAG,GAAKujB,EAAYvoI,EACpBglH,EAAG,GAAK4jB,EAAa5oI,EACrBilH,EAAG,GAAKsjB,EAAYvoI,EACpBilH,EAAG,GAAK2jB,EAAa5oI,EACrB1N,KAAK4yI,qBAAqBlgB,EAAIA,GAC9B1yH,KAAK4yI,qBAAqBjgB,EAAIA,GAE9B,GADa3mH,KAAKC,IAAI0mH,EAAG,GAAKD,EAAG,GAAI,GAAK1mH,KAAKC,IAAI0mH,EAAG,GAAKD,EAAG,GAAI,IACtDvyH,EACV,MAEFwiD,EAAW3iD,KAAK8zI,WAAWlyI,EAC5B,CACD,OAAO+gD,CACR,CAWD,YAAAmyF,CAAajE,EAAK+D,EAAQC,EAAQjnH,EAAkB3qB,GAClD,MAAM4X,EAAkB+1H,GACtBC,EACA+D,EACAC,EACA70I,KAAK4zC,YACLhmB,GAEF,IAAIoqE,EAAah4F,KAAKyyI,WAAWxvI,GAQjC,OAPK+0F,GAIHA,EAAWjoE,mBAAmB,KAAMlV,GACpCm9E,EAAWnwF,YAJXmwF,EAAa,IAAIje,GAAWl/D,EAAiB,MAC7C7a,KAAKyyI,WAAWxvI,GAAS+0F,GAKpBA,CACR,CASD,iBAAA49C,CAAkB59C,EAAYz+E,EAAQtW,GACpC,MAAM4X,EAAkBm9E,EAAW3oE,qBACnC,IAAIwiG,EAAS,EACTv4D,EAAMz+C,EAAgB1Z,OAAS,EAC/B0Z,EAAgBg3G,GAAUh3G,EAAgBy+C,KAC5Cu4D,EAASv4D,EACTA,EAAM,GAER,MAAMi9E,EAAgBvqI,KAAKyP,IAAIlC,EAAO,GAAIsB,EAAgBg3G,IACpD2kB,EAAaxqI,KAAKwP,IAAIjC,EAAO,GAAIsB,EAAgBy+C,IACjD7wC,EAAM7E,GACVrK,EAAO,GAAKvN,KAAKmP,IAAI5B,EAAO,GAAKA,EAAO,IAAMvZ,KAAKuzI,kBACnDgD,EACAC,GAOIr/H,EAAa,CAJjB0D,EAAgBg3G,EAAS,IACvBh3G,EAAgBy+C,EAAM,GAAKz+C,EAAgBg3G,EAAS,KACnDppG,EAAM5N,EAAgBg3G,KACtBh3G,EAAgBy+C,GAAOz+C,EAAgBg3G,IACXppG,GAC3B/F,EAAQ1iB,KAAKmzI,iBAAiBlwI,GAAO8xI,KAE3C,OADAryH,EAAMsN,eAAe7Y,GACduL,CACR,CAOD,YAAA+zH,GACE,OAAOz2I,KAAKyyI,UACb,CAWD,YAAA0C,CAAa1sH,EAAKwsH,EAAQC,EAAQtnH,EAAkB3qB,GAClD,MAAM4X,EAAkBk2H,GACtBtoH,EACAwsH,EACAC,EACAl1I,KAAK4zC,YACLhmB,GAEF,IAAIoqE,EAAah4F,KAAK0yI,WAAWzvI,GAOjC,OANK+0F,GAGHA,EAAWjoE,mBAAmB,KAAMlV,GACpCm9E,EAAWnwF,WAHXmwF,EAAa,IAAIje,GAAWl/D,EAAiB,MAKxCm9E,CACR,CASD,iBAAA69C,CAAkB79C,EAAYz+E,EAAQtW,GACpC,MAAM4X,EAAkBm9E,EAAW3oE,qBACnC,IAAIg1B,EAAO,EACPhvB,EAAQxa,EAAgB1Z,OAAS,EACjC0Z,EAAgBwpC,GAAQxpC,EAAgBwa,KAC1CgvB,EAAOhvB,EACPA,EAAQ,GAEV,MAAMqhH,EAAc1qI,KAAKyP,IAAIlC,EAAO,GAAIsB,EAAgBwpC,IAClDsyF,EAAe3qI,KAAKwP,IAAIjC,EAAO,GAAIsB,EAAgBwa,IACnDw7G,EAAMjtH,GACVrK,EAAO,GAAKvN,KAAKmP,IAAI5B,EAAO,GAAKA,EAAO,IAAMvZ,KAAKwzI,kBACnDkD,EACAC,GAOIx/H,EAAa,CAAC05H,EAJlBh2H,EAAgBwpC,EAAO,IACrBxpC,EAAgBwa,EAAQ,GAAKxa,EAAgBwpC,EAAO,KACnDwsF,EAAMh2H,EAAgBwpC,KACtBxpC,EAAgBwa,GAASxa,EAAgBwpC,KAExC3hC,EAAQ1iB,KAAKozI,iBAAiBnwI,GAAO8xI,KAE3C,OADAryH,EAAMsN,eAAe7Y,GACduL,CACR,CAOD,YAAAk0H,GACE,OAAO52I,KAAK0yI,UACb,CAMD,qBAAA6B,CAAsBr1H,GACpB,MAAMm7F,EAAqB3rF,GAAc,aAEnCnO,EAAcrB,EAAWmC,iBAE/BrhB,KAAK+xI,QAAUxxH,EAAY,GAC3BvgB,KAAKgyI,QAAUzxH,EAAY,GAC3BvgB,KAAKiyI,QAAU1xH,EAAY,GAC3BvgB,KAAKkyI,QAAU3xH,EAAY,GAK3B,MAAMs2H,EAAoBlrH,GAAazM,EAAYm7F,GACnD,GAAIr6G,KAAKkyI,QAAUlyI,KAAKgyI,QACtBhyI,KAAK6yI,mBAAqBgE,MACrB,CACL,MAAMlxH,EAAQ3lB,KAAKkyI,QAAUlyI,KAAKgyI,QAAU,EAC5ChyI,KAAKgyI,SAAW,IAChBhyI,KAAK6yI,mBAAqB,SAAUv5H,EAAayJ,EAAQC,GAEvD,MAAM8zH,EAAoBD,EACxBv9H,EACAyJ,EAHFC,EAAYA,GAAa,GAMzB,IAAK,IAAIphB,EAAI,EAAGmd,EAAI+3H,EAAkB31I,OAAQS,EAAImd,EAAGnd,GAAKohB,EACpD8zH,EAAkBl1I,GAAK+jB,IACzBmxH,EAAkBl1I,IAAM,KAG5B,OAAOk1I,CACf,CACK,CAKD92I,KAAK4yI,qBAAuBjnH,GAAa0uF,EAAoBn7F,GAC7D,MAAM63H,EAAer4H,GACnB,CAAC1e,KAAKkyI,QAASlyI,KAAKiyI,QAASjyI,KAAKgyI,QAAShyI,KAAK+xI,SAChD/xI,KAAK4yI,0BACLpsI,EACA,GAGFxG,KAAKqyI,MAAQ0E,EAAa,GAC1B/2I,KAAKmyI,MAAQ4E,EAAa,GAC1B/2I,KAAKsyI,MAAQyE,EAAa,GAC1B/2I,KAAKoyI,MAAQ2E,EAAa,GAK1B/2I,KAAK+yI,YAAc/yI,KAAK4yI,qBAAqB,CAAC5yI,KAAKkyI,QAASlyI,KAAKiyI,UACjEjyI,KAAKgzI,aAAehzI,KAAK4yI,qBAAqB,CAAC5yI,KAAKgyI,QAAShyI,KAAKiyI,UAClEjyI,KAAKizI,SAAWjzI,KAAK4yI,qBAAqB,CAAC5yI,KAAKkyI,QAASlyI,KAAK+xI,UAC9D/xI,KAAKkzI,UAAYlzI,KAAK4yI,qBAAqB,CAAC5yI,KAAKgyI,QAAShyI,KAAK+xI,UAM/D/xI,KAAK8yI,wBAA0B9yI,KAAK6yI,mBAClCx2H,GAAU6C,EAAWE,cAEnBkP,MAAMtuB,KAAK8yI,wBAAwB,MACrC9yI,KAAK8yI,wBAAwB,GAC3B9mI,KAAKmP,IAAInb,KAAK+xI,UAAY/lI,KAAKmP,IAAInb,KAAKiyI,SACpCjyI,KAAK+xI,QACL/xI,KAAKiyI,SAGbjyI,KAAK4zC,YAAc10B,CACpB,GCptCI,MAAM83H,GAAe,MAUfC,GAAuB,MAwBvBC,GAAe,MAiCtBC,GAAc,CAAC,qBAAsB,QAAS,YAAa,aCpE1D,MAAMC,GD2Bc,MC4FpB,SAASC,GAAqBt3I,GACnC,OAAQA,GACN,KAAKi3I,GACH,OAAOvkI,aACT,KAAKwkI,GACH,OAAOK,YACT,QACE,OAAO7kI,aAEb,CAEA,IAAA8kI,GA7GA,MAME,WAAAz3I,CAAYC,EAAMy3I,GAKhBx3I,KAAK6K,OAAS,KAMd7K,KAAKm6F,MAAQp6F,EAEbiU,GACEjU,IAASi3I,IAAgBj3I,IAASk3I,GAClC,wFAOFj3I,KAAKy3I,YAAmBjxI,IAAVgxI,EAAsBA,EAAQJ,EAC7C,CAOD,MAAAM,CAAOjkI,GAEL,OADAzT,KAAK6K,OAAS,IAAKwsI,GAAqBr3I,KAAKm6F,OAA/B,CAAuC1mF,GAC9CzT,IACR,CAOD,SAAA23I,CAAUltI,GAER,OADAzK,KAAK6K,OAASwsI,GAAqBr3I,KAAKm6F,OAAO3oC,KAAK/mD,GAC7CzK,IACR,CAQD,eAAA43I,CAAgBl+H,GAEd,OADA1Z,KAAK6K,OAAS,IAAKwsI,GAAqBr3I,KAAKm6F,OAA/B,CAAuCzgF,GAC9C1Z,IACR,CAKD,OAAAwuB,GACE,OAAOxuB,KAAKm6F,KACb,CAMD,QAAA/uF,GACE,OAAOpL,KAAK6K,MACb,CAKD,QAAAgtI,GACE,OAAO73I,KAAKy3I,MACb,CAMD,OAAA/jI,GACE,OAAO1T,KAAK6K,OAAS7K,KAAK6K,OAAO1J,OAAS,CAC3C,GCzHY22I,GACP,mBADOA,GAEH,uBC4ZZ,IAAAC,GAjUA,MAIE,WAAAj4I,CAAY4K,GACV1K,KAAKg4I,IAAMttI,EAAQutI,aACnB,MAAMC,EAAKl4I,KAAKg4I,IAEhBh4I,KAAKm4I,YAAcztI,EAAQ0tI,YAAc,EAEzCp4I,KAAKq4I,qBAAuBH,EAAGI,gBAC/Bt4I,KAAKu4I,yBAA2B,KAEhCv4I,KAAKw4I,aAAeN,EAAGO,oBACvBz4I,KAAK04I,aAAeR,EAAGS,qBAIvB,MAAMC,EAAeV,EAAGW,aAAaX,EAAGY,eACxCZ,EAAGa,aACDH,EACAluI,EAAQkuI,cAnHgB,qUAqH1BV,EAAGc,cAAcJ,GACjB,MAAMK,EAAiBf,EAAGW,aAAaX,EAAGgB,iBAC1ChB,EAAGa,aACDE,EACAvuI,EAAQuuI,gBAzGkB,6NA2G5Bf,EAAGc,cAAcC,GACjBj5I,KAAKm5I,qBAAuBjB,EAAGkB,gBAC/BlB,EAAGmB,aAAar5I,KAAKm5I,qBAAsBP,GAC3CV,EAAGmB,aAAar5I,KAAKm5I,qBAAsBF,GAC3Cf,EAAGoB,YAAYt5I,KAAKm5I,sBAGpBn5I,KAAKu5I,4BAA8BrB,EAAGsB,eAEtCtB,EAAGuB,WAAWvB,EAAGlB,aAAch3I,KAAKu5I,6BACpCrB,EAAGwB,WACDxB,EAAGlB,aACH,IAAIvkI,aAJgB,EAAE,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,IAK5DylI,EAAGyB,aAGL35I,KAAK45I,4BAA8B1B,EAAG2B,kBACpC75I,KAAKm5I,qBACL,cAEFn5I,KAAK85I,6BAA+B5B,EAAG6B,mBACrC/5I,KAAKm5I,qBACL,gBAEFn5I,KAAKg6I,6BAA+B9B,EAAG6B,mBACrC/5I,KAAKm5I,qBACL,aAEFn5I,KAAKi6I,6BAA+B/B,EAAG6B,mBACrC/5I,KAAKm5I,qBACL,WAQFn5I,KAAKk6I,UAAY,GACjBxvI,EAAQyvI,UACNzzI,OAAOC,KAAK+D,EAAQyvI,UAAUjvI,SAASuK,IACrCzV,KAAKk6I,UAAUv0I,KAAK,CAClBtB,MAAOqG,EAAQyvI,SAAS1kI,GACxB2kI,SAAUlC,EAAG6B,mBAAmB/5I,KAAKm5I,qBAAsB1jI,IAC3D,GAEP,CAMD,KAAA4kI,GACE,OAAOr6I,KAAKg4I,GACb,CAQD,IAAAsC,CAAK98F,GACH,MAAM06F,EAAKl4I,KAAKq6I,QACV13C,EAAc,CAClBu1C,EAAGqC,mBAAqBv6I,KAAKm4I,YAC7BD,EAAGsC,oBAAsBx6I,KAAKm4I,aAShC,GALAD,EAAGuC,gBAAgBvC,EAAGwC,YAAa16I,KAAK26I,kBACxCzC,EAAG0C,iBAAiB1C,EAAG2C,aAAc76I,KAAK86I,kBAC1C5C,EAAGrxD,SAAS,EAAG,EAAG8b,EAAY,GAAIA,EAAY,KAI3C3iG,KAAKu4I,0BACNv4I,KAAKu4I,yBAAyB,KAAO51C,EAAY,IACjD3iG,KAAKu4I,yBAAyB,KAAO51C,EAAY,GACjD,CACA3iG,KAAKu4I,yBAA2B51C,EAGhC,MAAM55E,EAAQ,EACRgyH,EAAiB7C,EAAG8C,KACpB72F,EAAS,EACTr9B,EAASoxH,EAAG8C,KACZj7I,EAAOm4I,EAAG+C,cACV94I,EAAO,KACb+1I,EAAGgD,YAAYhD,EAAGiD,WAAYn7I,KAAKq4I,sBACnCH,EAAGkD,WACDlD,EAAGiD,WACHpyH,EACAgyH,EACAp4C,EAAY,GACZA,EAAY,GACZx+C,EACAr9B,EACA/mB,EACAoC,GAGF+1I,EAAGmD,cAAcnD,EAAGiD,WAAYjD,EAAGoD,mBAAoBpD,EAAGqD,QAC1DrD,EAAGmD,cAAcnD,EAAGiD,WAAYjD,EAAGsD,eAAgBtD,EAAGuD,eACtDvD,EAAGmD,cAAcnD,EAAGiD,WAAYjD,EAAGwD,eAAgBxD,EAAGuD,eAGtDvD,EAAGyD,qBACDzD,EAAGwC,YACHxC,EAAG0D,kBACH1D,EAAGiD,WACHn7I,KAAKq4I,qBACL,GAGFH,EAAG2D,oBACD3D,EAAG2C,aACH3C,EAAG4D,kBACHn5C,EAAY,GACZA,EAAY,IAEdu1C,EAAG6D,wBACD7D,EAAGwC,YACHxC,EAAG8D,iBACH9D,EAAG2C,aACH76I,KAAK04I,aAER,CACF,CASD,KAAAx0I,CAAMs5C,EAAYy+F,EAAUC,EAAYC,GACtC,MAAMjE,EAAKl4I,KAAKq6I,QACV5mI,EAAO+pC,EAAW/pC,KASxB,GAPAykI,EAAGuC,gBACDvC,EAAGwC,YACHuB,EAAWA,EAAStB,iBAAmB,MAEzCzC,EAAGkE,cAAclE,EAAGmE,UACpBnE,EAAGgD,YAAYhD,EAAGiD,WAAYn7I,KAAKq4I,uBAE9B4D,EAAU,CAGb,MAAMK,EAAW7zI,EAAOyvI,EAAGtoI,QAC3B,IAAK4tC,EAAW2oB,cAAcm2E,GAAW,CACvC,MAAMC,EAAarE,EAAGsE,uBAClBD,GAAcA,EAAWE,wBAC3BvE,EAAGwE,WAAW,EAAK,EAAK,EAAK,GAC7BxE,EAAGyE,WAAW,GACdzE,EAAGvzI,MAAMuzI,EAAG0E,iBAAmB1E,EAAG2E,mBAGpCr/F,EAAW2oB,cAAcm2E,IAAY,CACtC,CACF,CAEDpE,EAAG9uH,QAAQ8uH,EAAG4E,YACd5E,EAAG6E,OAAO7E,EAAG8E,OACb9E,EAAG+E,UAAU/E,EAAGgF,IAAKhF,EAAGiF,qBACxBjF,EAAGrxD,SAAS,EAAG,EAAGqxD,EAAGqC,mBAAoBrC,EAAGsC,qBAE5CtC,EAAGuB,WAAWvB,EAAGlB,aAAch3I,KAAKu5I,6BAEpCrB,EAAGkF,WAAWp9I,KAAKm5I,sBACnBjB,EAAGmF,wBAAwBr9I,KAAK45I,6BAChC1B,EAAGoF,oBACDt9I,KAAK45I,4BACL,EACA1B,EAAGqF,OACH,EACA,EACA,GAEFrF,EAAGsF,UAAUx9I,KAAK85I,6BAA8BrmI,EAAK,GAAIA,EAAK,IAC9DykI,EAAGuF,UAAUz9I,KAAKi6I,6BAA8B,GAEhD,MAAMrtG,EAAU4Q,EAAWI,iBAAiBJ,EAAWmJ,YAAY/Z,QACnEsrG,EAAGwF,UAAU19I,KAAKg6I,6BAA8BptG,GAEhD5sC,KAAK29I,cAAcngG,GAEf0+F,GACFA,EAAWhE,EAAI16F,GAEjB06F,EAAG0F,WAAW1F,EAAG2F,UAAW,EAAG,GAC3B1B,GACFA,EAAYjE,EAAI16F,EAEnB,CAKD,cAAAm9F,GACE,OAAO36I,KAAKw4I,YACb,CAKD,cAAAsC,GACE,OAAO96I,KAAK04I,YACb,CAOD,aAAAiF,CAAcngG,GACZ,MAAM06F,EAAKl4I,KAAKq6I,QAEhB,IAAIh2I,EACAy5I,EAAc,EAClB99I,KAAKk6I,UAAUhvI,SAAQ,SAAU6yI,GAO/B,GANA15I,EAC2B,mBAAlB05I,EAAQ15I,MACX05I,EAAQ15I,MAAMm5C,GACdugG,EAAQ15I,MAGVA,aAAiB8N,mBAAqB9N,aAAiB8uG,UAEpD4qC,EAAQC,UACXD,EAAQC,QAAU9F,EAAGI,iBAEvBJ,EAAGkE,cAAclE,EAAG,UAAU4F,MAC9B5F,EAAGgD,YAAYhD,EAAGiD,WAAY4C,EAAQC,SACtC9F,EAAGmD,cAAcnD,EAAGiD,WAAYjD,EAAGoD,mBAAoBpD,EAAGqD,QAC1DrD,EAAGmD,cAAcnD,EAAGiD,WAAYjD,EAAGsD,eAAgBtD,EAAGuD,eACtDvD,EAAGmD,cAAcnD,EAAGiD,WAAYjD,EAAGwD,eAAgBxD,EAAGuD,eAElDp3I,aAAiB8uG,UACnB+kC,EAAGkD,WACDlD,EAAGiD,WACH,EACAjD,EAAG8C,KACH9C,EAAG8C,KACH32I,EAAMmL,MACNnL,EAAMoL,OACN,EACAyoI,EAAG+C,cACH,IAAI1oI,WAAWlO,EAAMlC,OAGvB+1I,EAAGkD,WACDlD,EAAGiD,WACH,EACAjD,EAAG8C,KACH9C,EAAG8C,KACH9C,EAAG+C,cACH52I,GAKJ6zI,EAAGuF,UAAUM,EAAQ3D,SAAU0D,UAC1B,GAAIz7I,MAAMC,QAAQ+B,GACvB,OAAQA,EAAMlD,QACZ,KAAK,EAEH,YADA+2I,EAAGsF,UAAUO,EAAQ3D,SAAU/1I,EAAM,GAAIA,EAAM,IAEjD,KAAK,EAEH,YADA6zI,EAAG+F,UAAUF,EAAQ3D,SAAU/1I,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAE3D,KAAK,EAQH,YAPA6zI,EAAGgG,UACDH,EAAQ3D,SACR/1I,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,IAGV,QACE,WAEsB,iBAAVA,GAChB6zI,EAAGwF,UAAUK,EAAQ3D,SAAU/1I,EAEvC,GACG,GCzXI,MAAM85I,GACQ,qBADRA,GAGL,SAHKA,GAIL,SAJKA,GAKC,eALDA,GAMD,aANCA,GAOO,mBAPPA,GAQE,eARFA,GASI,iBAQJC,GAAgB,CAC3BnD,cJD2B,KIE3BoD,eJI4B,KIH5BC,aJS0B,KIR1Bf,MJcmB,MI4CfgB,GAAc,CAAA,EAMpB,SAASC,GAAwBj3I,GAC/B,MAAO,UAAYA,CACrB,CAEA,IAAIk3I,GAA4B,EAehC,SAASC,GAAmBn3I,GAC1B,IAAIo3I,EAAYJ,GAAYh3I,GAC5B,IAAKo3I,EAAW,CACd,MAAM/uI,EAASE,SAASC,cAAc,UACtCH,EAAOJ,MAAQ,EACfI,EAAOH,OAAS,EAChBG,EAAOU,MAAM0oB,SAAW,WACxBppB,EAAOU,MAAM+zC,KAAO,IACpB,MAAMn0C,EJ7DH,SAAoBN,EAAQ2sI,GACjCA,EAAa71I,OAAO6C,OAClB,CACEkzI,uBAAuB,EACvBmC,WAAWzwI,IAEbouI,GAEF,MAAMp2I,EAAKgxI,GAAYh2I,OACvB,IAAK,IAAIS,EAAI,EAAGA,EAAIuE,IAAMvE,EACxB,IACE,MAAMsO,EAAUN,EAAOI,WAAWmnI,GAAYv1I,GAAI26I,GAClD,GAAIrsI,EACF,OAAA,CAEH,CAAC,MAAO+G,GAER,CAEH,OAAO,IACT,CIyCoBjH,CAAWJ,GAC3B+uI,EAAY,CAACE,MAAO,EAAG3uI,WACvBquI,GAAYh3I,GAAOo3I,CACpB,CAGD,OADAA,EAAUE,OAAS,EACZF,EAAUzuI,OACnB,CAwJA,MAAM4uI,WAAoB95I,EAIxB,WAAAlF,CAAY4K,GACVzF,QACAyF,EAAUA,GAAW,GAGrB1K,KAAK++I,6BAA+B/+I,KAAKg/I,uBAAuB93I,KAAKlH,MAGrEA,KAAKi/I,iCACHj/I,KAAKk/I,2BAA2Bh4I,KAAKlH,MAMvCA,KAAKm/I,gBAAkBz0I,EAAQ00I,eAC3BZ,GAAwB9zI,EAAQ00I,gBArMxC,WACE,MAAM73I,EAAM,UAAYk3I,GAExB,OADAA,IAA6B,EACtBl3I,CACT,CAkMQ83I,GAMJr/I,KAAKg4I,IAAM0G,GAAmB1+I,KAAKm/I,iBAMnCn/I,KAAKs/I,aAAe,GAMpBt/I,KAAKu/I,gBAAkB,GAMvBv/I,KAAKw/I,gBAAkB,KAMvBx/I,KAAKy/I,qBAAsB,EAE3B,MAAM7vI,EAAS5P,KAAKg4I,IAAIpoI,OAExBA,EAAOtK,iBACLwyI,GACA93I,KAAK++I,8BAEPnvI,EAAOtK,iBACLwyI,GACA93I,KAAKi/I,kCAOPj/I,KAAK0/I,oBzNxVA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GyN8VrB1/I,KAAK2/I,mBzN9VA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GyNoWrB3/I,KAAK4/I,SvChYA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GuCsYnD5/I,KAAK6/I,2BAA6B,GAMlC7/I,KAAK8/I,0BAA4B,GAQjC9/I,KAAKk6I,UAAY,GACbxvI,EAAQyvI,UACVn6I,KAAK+/I,YAAYr1I,EAAQyvI,UAU3Bn6I,KAAKggJ,mBAAqBt1I,EAAQu1I,cAC9Bv1I,EAAQu1I,cAAcr1G,KACnBlgC,GACC,IAAIw1I,GAAwB,CAC1BjI,aAAcj4I,KAAKg4I,IACnBI,WAAY1tI,EAAQ0tI,WACpBQ,aAAcluI,EAAQkuI,aACtBK,eAAgBvuI,EAAQuuI,eACxBkB,SAAUzvI,EAAQyvI,aAGxB,CAAC,IAAI+F,GAAwB,CAACjI,aAAcj4I,KAAKg4I,OAMrDh4I,KAAKmgJ,qBAAuB,KAM5BngJ,KAAK27D,WAAa99B,KAAKC,KACxB,CAKD,WAAAiiH,CAAY5F,GACVn6I,KAAKk6I,UAAY,GACjBl6I,KAAKogJ,YAAYjG,EAClB,CAKD,WAAAiG,CAAYjG,GACV,IAAK,MAAM1kI,KAAQ0kI,EACjBn6I,KAAKk6I,UAAUv0I,KAAK,CAClB8P,KAAMA,EACNpR,MAAO81I,EAAS1kI,IAGrB,CAMD,qBAAA4qI,CAAsBjB,GACpB,OAAOp/I,KAAKm/I,kBAAoBX,GAAwBY,EACzD,CAQD,YAAAkB,CAAa7qI,GACX,GAAIA,KAAQzV,KAAKu/I,gBACf,OAAOv/I,KAAKu/I,gBAAgB9pI,GAE9B,MAAMrT,EAAYpC,KAAKg4I,IAAIsI,aAAa7qI,GAExC,OADAzV,KAAKu/I,gBAAgB9pI,GAAQrT,EACtBA,CACR,CAQD,UAAAq3I,CAAW//H,GACT,MAAMw+H,EAAKl4I,KAAKg4I,IACVuI,EAAY93I,EAAOiR,GACzB,IAAI8mI,EAAcxgJ,KAAKs/I,aAAaiB,GACpC,IAAKC,EAAa,CAEhBA,EAAc,CACZ9mI,OAAQA,EACR+mI,YAHkBvI,EAAGsB,gBAKvBx5I,KAAKs/I,aAAaiB,GAAaC,CAChC,CACDtI,EAAGuB,WAAW//H,EAAO8U,UAAWgyH,EAAYC,YAC7C,CAOD,eAAAC,CAAgBhnI,GACd,MAAMw+H,EAAKl4I,KAAKg4I,IAChBh4I,KAAKy5I,WAAW//H,GAChBw+H,EAAGwB,WAAWhgI,EAAO8U,UAAW9U,EAAOtO,WAAYsO,EAAOm+H,WAC3D,CAKD,YAAA8I,CAAaC,GACX,MAAM1I,EAAKl4I,KAAKg4I,IACVuI,EAAY93I,EAAOm4I,GACnBC,EAAmB7gJ,KAAKs/I,aAAaiB,GACvCM,IAAqB3I,EAAG4I,iBAC1B5I,EAAGyI,aAAaE,EAAiBJ,oBAE5BzgJ,KAAKs/I,aAAaiB,EAC1B,CAKD,eAAA9/I,GACE,MAAMmP,EAAS5P,KAAKg4I,IAAIpoI,OACxBA,EAAOtJ,oBACLwxI,GACA93I,KAAK++I,8BAEPnvI,EAAOtJ,oBACLwxI,GACA93I,KAAKi/I,kCAhYX,SAAuB13I,GACrB,MAAMo3I,EAAYJ,GAAYh3I,GAC9B,IAAKo3I,EACH,OAIF,GADAA,EAAUE,OAAS,EACfF,EAAUE,MAAQ,EACpB,OAGF,MAAM3G,EAAKyG,EAAUzuI,QACf9N,EAAY81I,EAAGoI,aAAa,sBAC9Bl+I,GACFA,EAAU2+I,cAEZ,MAAMnxI,EAASsoI,EAAGtoI,OAClBA,EAAOJ,MAAQ,EACfI,EAAOH,OAAS,SAET8uI,GAAYh3I,EACrB,CA8WI0I,CAAcjQ,KAAKm/I,wBAEZn/I,KAAKg4I,GACb,CAUD,WAAAgJ,CAAYxjG,EAAYyjG,EAAmBC,GACzC,MAAMhJ,EAAKl4I,KAAKg4I,IACVpoI,EAAS5P,KAAKmhJ,YACd1tI,EAAO+pC,EAAW/pC,KAClBynB,EAAasiB,EAAWtiB,WAG5BtrB,EAAOJ,QAAUiE,EAAK,GAAKynB,GAC3BtrB,EAAOH,SAAWgE,EAAK,GAAKynB,IAE5BtrB,EAAOJ,MAAQiE,EAAK,GAAKynB,EACzBtrB,EAAOH,OAASgE,EAAK,GAAKynB,EAC1BtrB,EAAOU,MAAMd,MAAQiE,EAAK,GAAK,KAC/B7D,EAAOU,MAAMb,OAASgE,EAAK,GAAK,MAIlC,IAAK,IAAI7R,EAAI5B,KAAKggJ,mBAAmB7+I,OAAS,EAAGS,GAAK,EAAGA,IACvD5B,KAAKggJ,mBAAmBp+I,GAAG04I,KAAK98F,GAGlC06F,EAAGgD,YAAYhD,EAAGiD,WAAY,MAE9BjD,EAAGwE,WAAW,EAAK,EAAK,EAAK,GAC7BxE,EAAGkJ,WAAW,EAAK,GACnBlJ,EAAGyE,WAAW,GACdzE,EAAGvzI,MAAMuzI,EAAG0E,iBAAmB1E,EAAG2E,kBAElC3E,EAAG6E,OAAO7E,EAAG8E,OACb9E,EAAG+E,UAAU/E,EAAGgF,IAAK+D,EAAoB/I,EAAGmJ,KAAOnJ,EAAGiF,qBAClD+D,GACFhJ,EAAG6E,OAAO7E,EAAG4E,YACb5E,EAAGoJ,UAAUpJ,EAAGqJ,SAEhBrJ,EAAG9uH,QAAQ8uH,EAAG4E,WAEjB,CAQD,WAAA5B,CAAY8C,EAASwD,EAAMC,GACzB,MAAMvJ,EAAKl4I,KAAKg4I,IAChBE,EAAGkE,cAAclE,EAAGmE,SAAWmF,GAC/BtJ,EAAGgD,YAAYhD,EAAGiD,WAAY6C,GAC9B9F,EAAGuF,UAAUz9I,KAAK+5I,mBAAmB0H,GAAcD,EACpD,CAWD,yBAAAE,CACElkG,EACAmkG,EACAV,EACAC,GAEA,MAAMhJ,EAAKl4I,KAAKg4I,IACVvkI,EAAOkuI,EAAajuI,UAE1BwkI,EAAGuC,gBAAgBvC,EAAGwC,YAAaiH,EAAaC,kBAChD1J,EAAG0C,iBAAiB1C,EAAG2C,aAAc8G,EAAaE,kBAClD3J,EAAGrxD,SAAS,EAAG,EAAGpzE,EAAK,GAAIA,EAAK,IAChCykI,EAAGgD,YAAYhD,EAAGiD,WAAYwG,EAAaG,cAC3C5J,EAAGwE,WAAW,EAAK,EAAK,EAAK,GAC7BxE,EAAGkJ,WAAW,EAAK,GACnBlJ,EAAGyE,WAAW,GACdzE,EAAGvzI,MAAMuzI,EAAG0E,iBAAmB1E,EAAG2E,kBAClC3E,EAAG6E,OAAO7E,EAAG8E,OACb9E,EAAG+E,UAAU/E,EAAGgF,IAAK+D,EAAoB/I,EAAGmJ,KAAOnJ,EAAGiF,qBAClD+D,GACFhJ,EAAG6E,OAAO7E,EAAG4E,YACb5E,EAAGoJ,UAAUpJ,EAAGqJ,SAEhBrJ,EAAG9uH,QAAQ8uH,EAAG4E,WAEjB,CAOD,YAAAiF,CAAat0I,EAAOzL,GAClB,MAAMk2I,EAAKl4I,KAAKg4I,IAChBh4I,KAAKsgJ,aAAa,0BAElB,MAAM0B,EAAc9J,EAAGoG,aAGjB2D,EAAWjgJ,EAAMyL,EACjBy0I,EAHc,EAGEz0I,EACtByqI,EAAG6J,aAAa7J,EAAG2F,UAAWoE,EAAUD,EAAaE,EACtD,CAQD,YAAAC,CAAa3kG,EAAY0+F,EAAYC,GAEnC,IAAK,IAAIv6I,EAAI,EAAGuE,EAAKnG,KAAKggJ,mBAAmB7+I,OAAQS,EAAIuE,EAAIvE,IACvDA,IAAMuE,EAAK,EACbnG,KAAKggJ,mBAAmBp+I,GAAGsC,MACzBs5C,EACA,KACA0+F,EACAC,GAGFn8I,KAAKggJ,mBAAmBp+I,GAAGsC,MACzBs5C,EACAx9C,KAAKggJ,mBAAmBp+I,EAAI,GAInC,CAKD,SAAAu/I,GACE,OAAyCnhJ,KAAKg4I,IAAU,MACzD,CAMD,KAAAqC,GACE,OAAOr6I,KAAKg4I,GACb,CAMD,eAAAoK,CAAgB5kG,GACd,MAAM/pC,EAAO+pC,EAAW/pC,KAClBkJ,EAAW6gC,EAAWjE,UAAU58B,SAChCue,EAAasiB,EAAWtiB,WAE9Bl7B,KAAKqiJ,qBACHlE,GACiC,MAAhCtgH,KAAKC,MAAQ99B,KAAK27D,aAErB37D,KAAKqiJ,qBAAqBlE,GAAqB3gG,EAAWjE,UAAUpE,MACpEn1C,KAAKqiJ,qBACHlE,GACA3gG,EAAWjE,UAAU78B,YAEvB1c,KAAKqiJ,qBAAqBlE,GAA4BjjH,GACtDl7B,KAAKsiJ,oBAAoBnE,GAAiC,CACxD1qI,EAAK,GACLA,EAAK,KAEPzT,KAAKqiJ,qBAAqBlE,GAAyBxhI,EACpD,CAMD,wBAAA4lI,CAAyB7pG,GACvB,MAAM8pG,EAAMxiJ,KAAK+5I,mBAAmBoE,IACpCn+I,KAAKq6I,QAAQoD,UAAU+E,EAAK9pG,EAAU,EAAI,GAGtCA,GACF14C,KAAKqiJ,qBAAqBlE,GAA4B,GAEzD,CAMD,aAAAR,CAAcngG,GACZ,MAAM06F,EAAKl4I,KAAKg4I,IAEhB,IAAI3zI,EACAy5I,EAAc,EAClB99I,KAAKk6I,UAAUhvI,SAAS6yI,IAOtB,GANA15I,EAC2B,mBAAlB05I,EAAQ15I,MACX05I,EAAQ15I,MAAMm5C,GACdugG,EAAQ15I,MAIZA,aAAiB8N,mBACjB9N,aAAiBq3B,kBACjBr3B,aAAiB8uG,UACjB,CAEK4qC,EAAQC,UACXD,EAAQ0E,eAAYj8I,EACpBu3I,EAAQC,QAAU9F,EAAGI,iBAEvBt4I,KAAKk7I,YAAY6C,EAAQC,QAASF,EAAaC,EAAQtoI,MACvDyiI,EAAGmD,cAAcnD,EAAGiD,WAAYjD,EAAGoD,mBAAoBpD,EAAGqD,QAC1DrD,EAAGmD,cAAcnD,EAAGiD,WAAYjD,EAAGsD,eAAgBtD,EAAGuD,eACtDvD,EAAGmD,cAAcnD,EAAGiD,WAAYjD,EAAGwD,eAAgBxD,EAAGuD,kBAGlDp3I,aAAiBq3B,mBACa,EAAQV,WACxB+iH,EAAQ0E,YAAcp+I,IACtC05I,EAAQ0E,UAAYp+I,EACpB6zI,EAAGkD,WACDlD,EAAGiD,WACH,EACAjD,EAAG8C,KACH9C,EAAG8C,KACH9C,EAAG+C,cACH52I,IAGJy5I,GACR,MAAa,GAAIz7I,MAAMC,QAAQ+B,IAA2B,IAAjBA,EAAMlD,OACvCnB,KAAK0iJ,sBACH3E,EAAQtoI,KACRsrG,GAAc/gH,KAAK4/I,SAAUv7I,SAE1B,GAAIhC,MAAMC,QAAQ+B,IAAUA,EAAMlD,QAAU,EACjD,OAAQkD,EAAMlD,QACZ,KAAK,EAMH,YALA+2I,EAAGsF,UACDx9I,KAAK+5I,mBAAmBgE,EAAQtoI,MAChCpR,EAAM,GACNA,EAAM,IAGV,KAAK,EAOH,YANA6zI,EAAG+F,UACDj+I,KAAK+5I,mBAAmBgE,EAAQtoI,MAChCpR,EAAM,GACNA,EAAM,GACNA,EAAM,IAGV,KAAK,EAQH,YAPA6zI,EAAGgG,UACDl+I,KAAK+5I,mBAAmBgE,EAAQtoI,MAChCpR,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,IAGV,QACE,WAEsB,iBAAVA,GAChB6zI,EAAGwF,UAAU19I,KAAK+5I,mBAAmBgE,EAAQtoI,MAAOpR,EACrD,GAEJ,CAQD,UAAA+4I,CAAWuF,EAASnlG,GACPx9C,KAAKg4I,IACboF,WAAWuF,GACd3iJ,KAAKw/I,gBAAkBmD,EACvB3iJ,KAAKoiJ,gBAAgB5kG,GACrBx9C,KAAK29I,cAAcngG,EACpB,CAWD,aAAAw7F,CAAc/uI,EAAQlK,GACpB,MAAMm4I,EAAKl4I,KAAKg4I,IACV4K,EAAS1K,EAAGW,aAAa94I,GAG/B,OAFAm4I,EAAGa,aAAa6J,EAAQ34I,GACxBiuI,EAAGc,cAAc4J,GACVA,CACR,CAQD,UAAAC,CAAWC,EAAsBC,GAC/B,MAAM7K,EAAKl4I,KAAKg4I,IAEViB,EAAiBj5I,KAAKg5I,cAC1B8J,EACA5K,EAAGgB,iBAGCN,EAAe54I,KAAKg5I,cACxB+J,EACA7K,EAAGY,eAGC6J,EAAUzK,EAAGkB,gBAKnB,GAJAlB,EAAGmB,aAAasJ,EAAS1J,GACzBf,EAAGmB,aAAasJ,EAAS/J,GACzBV,EAAGoB,YAAYqJ,IAEVzK,EAAG8K,mBAAmB/J,EAAgBf,EAAG+K,gBAAiB,CAC7D,MAAMprH,EAAU,uCAAuCqgH,EAAGgL,iBACxDjK,KAEF,MAAM,IAAI1wI,MAAMsvB,EACjB,CAGD,GAFAqgH,EAAGiL,aAAalK,IAEXf,EAAG8K,mBAAmBpK,EAAcV,EAAG+K,gBAAiB,CAC3D,MAAMprH,EAAU,qCAAqCqgH,EAAGgL,iBACtDtK,KAEF,MAAM,IAAIrwI,MAAMsvB,EACjB,CAGD,GAFAqgH,EAAGiL,aAAavK,IAEXV,EAAGkL,oBAAoBT,EAASzK,EAAGmL,aAAc,CACpD,MAAMxrH,EAAU,8BAA8BqgH,EAAGoL,kBAC/CX,KAEF,MAAM,IAAIp6I,MAAMsvB,EACjB,CAED,OAAO8qH,CACR,CAOD,kBAAA5I,CAAmBtkI,GACjB,MAAM8tI,EAAa96I,EAAOzI,KAAKw/I,iBAQ/B,YAPoDh5I,IAAhDxG,KAAK6/I,2BAA2B0D,KAClCvjJ,KAAK6/I,2BAA2B0D,GAAc,SAEU/8I,IAAtDxG,KAAK6/I,2BAA2B0D,GAAY9tI,KAC9CzV,KAAK6/I,2BAA2B0D,GAAY9tI,GAC1CzV,KAAKg4I,IAAI+B,mBAAmB/5I,KAAKw/I,gBAAiB/pI,IAE/CzV,KAAK6/I,2BAA2B0D,GAAY9tI,EACpD,CAOD,oBAAA+tI,CAAqB/tI,GACnB,MAAM8tI,EAAa96I,EAAOzI,KAAKw/I,iBAQ/B,YAPmDh5I,IAA/CxG,KAAK8/I,0BAA0ByD,KACjCvjJ,KAAK8/I,0BAA0ByD,GAAc,SAEU/8I,IAArDxG,KAAK8/I,0BAA0ByD,GAAY9tI,KAC7CzV,KAAK8/I,0BAA0ByD,GAAY9tI,GACzCzV,KAAKg4I,IAAI6B,kBAAkB75I,KAAKw/I,gBAAiB/pI,IAE9CzV,KAAK8/I,0BAA0ByD,GAAY9tI,EACnD,CASD,uBAAAguI,CAAwBjmG,EAAYznC,GAClC,MAAMtC,EAAO+pC,EAAW/pC,KAClBkJ,EAAW6gC,EAAWjE,UAAU58B,SAChCD,EAAa8gC,EAAWjE,UAAU78B,WAClCD,EAAS+gC,EAAWjE,UAAU98B,OAWpC,OAVAsS,GACEhZ,EACA,EACA,EACA,GAAK2G,EAAajJ,EAAK,IACvB,GAAKiJ,EAAajJ,EAAK,KACtBkJ,GACAF,EAAO,IACPA,EAAO,IAEH1G,CACR,CAOD,oBAAAssI,CAAqBtE,EAAS15I,GAC5BrE,KAAKg4I,IAAI0F,UAAU19I,KAAK+5I,mBAAmBgE,GAAU15I,EACtD,CAOD,mBAAAi+I,CAAoBvE,EAAS15I,GAC3BrE,KAAKg4I,IAAI0L,WAAW1jJ,KAAK+5I,mBAAmBgE,GAAU15I,EACvD,CAOD,mBAAAs/I,CAAoB5F,EAAS15I,GAC3BrE,KAAKg4I,IAAI4L,WAAW5jJ,KAAK+5I,mBAAmBgE,GAAU15I,EACvD,CAOD,qBAAAq+I,CAAsB3E,EAAS15I,GAC7BrE,KAAKg4I,IAAI6L,iBAAiB7jJ,KAAK+5I,mBAAmBgE,IAAU,EAAO15I,EACpE,CAYD,qBAAAy/I,CAAsBC,EAAYtwI,EAAM1T,EAAMgb,EAAQD,GACpD,MAAMs/H,EAAWp6I,KAAKwjJ,qBAAqBO,GAEvC3J,EAAW,IAGfp6I,KAAKg4I,IAAIqF,wBAAwBjD,GACjCp6I,KAAKg4I,IAAIsF,oBAAoBlD,EAAU3mI,EAAM1T,GAAM,EAAOgb,EAAQD,GACnE,CAQD,gBAAAkpI,CAAiBzH,GACf,MAAMxhI,EA4FH,SAAiCwhI,GACtC,IAAIxhI,EAAS,EACb,IAAK,IAAInZ,EAAI,EAAGA,EAAI26I,EAAWp7I,OAAQS,IAAK,CAC1C,MAAMqiJ,EAAO1H,EAAW36I,GACxBmZ,GAAUkpI,EAAKxwI,KAAOywI,GAAoBD,EAAKlkJ,KAChD,CACD,OAAOgb,CACT,CAnGmBopI,CAAwB5H,GACvC,IAAIzhI,EAAS,EACb,IAAK,IAAIlZ,EAAI,EAAGA,EAAI26I,EAAWp7I,OAAQS,IAAK,CAC1C,MAAMqiJ,EAAO1H,EAAW36I,GACxB5B,KAAK8jJ,sBACHG,EAAKxuI,KACLwuI,EAAKxwI,KACLwwI,EAAKlkJ,MJz8BQ,KI08Bbgb,EACAD,GAEFA,GAAUmpI,EAAKxwI,KAAOywI,GAAoBD,EAAKlkJ,KAChD,CACF,CAOD,sBAAAi/I,CAAuBn5I,GACrBlB,EAAM3E,KAAKs/I,cACXt/I,KAAKw/I,gBAAkB,KAEvB35I,EAAMzF,gBACP,CAMD,0BAAA8+I,GACEl/I,KAAKy/I,qBAAsB,CAC5B,CAMD,kBAAA2E,GACE,OAAOpkJ,KAAKy/I,mBACb,CAYD,aAAAnH,CAAc7kI,EAAMtR,EAAM67I,GACxB,MAAM9F,EAAKl4I,KAAKg4I,IAChBgG,EAAUA,GAAW9F,EAAGI,gBAGxB,MACMyC,EAAiB7C,EAAG8C,KAEpBl0H,EAASoxH,EAAG8C,KACZj7I,EAAOm4I,EAAG+C,cAqBhB,OApBA/C,EAAGgD,YAAYhD,EAAGiD,WAAY6C,GAC1B77I,EACF+1I,EAAGkD,WAAWlD,EAAGiD,WAPL,EAOwBJ,EAAgBj0H,EAAQ/mB,EAAMoC,GAElE+1I,EAAGkD,WACDlD,EAAGiD,WAVO,EAYVJ,EACAtnI,EAAK,GACLA,EAAK,GAZM,EAcXqT,EACA/mB,EACA,MAGJm4I,EAAGmD,cAAcnD,EAAGiD,WAAYjD,EAAGoD,mBAAoBpD,EAAGqD,QAC1DrD,EAAGmD,cAAcnD,EAAGiD,WAAYjD,EAAGsD,eAAgBtD,EAAGuD,eACtDvD,EAAGmD,cAAcnD,EAAGiD,WAAYjD,EAAGwD,eAAgBxD,EAAGuD,eAE/CuC,CACR,EAsBH,SAASkG,GAAoBnkJ,GAC3B,OAAQA,GACN,KAAKq+I,GAAcnD,cACjB,OAAO1oI,WAAWyuF,kBACpB,KAAKo9C,GAAcC,eACjB,OAAOgG,YAAYrjD,kBACrB,KAAKo9C,GAAcE,aACjB,OAAOhH,YAAYt2C,kBACrB,KAAKo9C,GAAcb,MACnB,QACE,OAAO9qI,aAAauuF,kBAE1B,CCjmCA,MAAMsjD,WAA2Bv3C,GAK/B,WAAAjtG,CAAY4tC,EAAOhjC,GACjBzF,MAAMyoC,GAENhjC,EAAUA,GAAW,GAQrB1K,KAAKukJ,uB1NfA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,G0NqBrBvkJ,KAAKmtG,cAAgB,KAKrBntG,KAAKwkJ,eAAiB95I,EAAQu1I,cAK9BjgJ,KAAKk6I,UAAYxvI,EAAQyvI,SAMzBn6I,KAAKykJ,OAEL/2G,EAAM9jC,kBAAkB4iC,GAAmBxsC,KAAK0kJ,aAAax9I,KAAKlH,OAElEA,KAAK2kJ,wBAA0B3kJ,KAAK2kJ,wBAAwBz9I,KAAKlH,MACjEA,KAAK4kJ,yBAA2B5kJ,KAAK4kJ,yBAAyB19I,KAAKlH,KACpE,CAOD,uBAAA2kJ,CAAwBz0I,EAASstC,GAC/B,MAAM9P,EAAQ1tC,KAAK0sG,WACnB,GAAIh/D,EAAMjnC,YAAYsoC,IAA6B,CACjD,MAAMlpC,EAAQ,IAAI2gD,GAChBzX,QACAvoC,EACAg3C,EACAttC,GAEFw9B,EAAM9nC,cAAcC,EACrB,CACF,CAOD,wBAAA++I,CAAyB10I,EAASstC,GAChC,MAAM9P,EAAQ1tC,KAAK0sG,WACnB,GAAIh/D,EAAMjnC,YAAYsoC,IAA8B,CAClD,MAAMlpC,EAAQ,IAAI2gD,GAChBzX,QACAvoC,EACAg3C,EACAttC,GAEFw9B,EAAM9nC,cAAcC,EACrB,CACF,CAMD,KAAAiQ,CAAMpL,GACJ1K,KAAKk6I,UAAYxvI,EAAQyvI,SACrBn6I,KAAKykJ,QACPzkJ,KAAKykJ,OAAO1E,YAAY//I,KAAKk6I,UAEhC,CAKD,YAAAwK,GACM1kJ,KAAKykJ,SACPzkJ,KAAKykJ,OAAOjkJ,iBACLR,KAAKykJ,OAEf,CAOD,YAAArmG,CAAaZ,GACX,GAAIx9C,KAAK0sG,WAAWxvD,kBAAmB,CACrC,IAEI9P,EAFAy3G,GAAiB,EACjBC,GAAe,EAEnB,IAAK,IAAIljJ,EAAI,EAAGuE,EAAKq3C,EAAWI,iBAAiBz8C,OAAQS,EAAIuE,EAAIvE,IAAK,CACpE,MAAM8rC,EAAQ8P,EAAWI,iBAAiBh8C,GAAG8rC,MACvCs2B,EAAWt2B,EAAMyQ,cACvB,KAAM6lB,aAAoBsgF,IAAqB,CAC7CO,GAAiB,EACjB,QACD,CACD,MAAMr3C,EAAiB9/D,EAAMH,eAM7B,IALIs3G,GAAkBr3C,IAAmBpgE,KACvC03G,GAAe,EACfD,GAAiB,GAEnBz3G,EAAYogE,EACRxpC,IAAahkE,KACf,KAEH,CAED,MAAMo/I,EACJ,OAAS5hG,EAAW0oB,MAAQ,UAAY4+E,EAGvC9kJ,KAAKykJ,QACLzkJ,KAAKykJ,OAAOpE,sBAAsBjB,KACnCp/I,KAAKykJ,OAAOL,uBAEZpkJ,KAAK0kJ,eAEL1kJ,KAAKykJ,OAAS,IAAI3F,GAAY,CAC5BmB,cAAejgJ,KAAKwkJ,eACpBrK,SAAUn6I,KAAKk6I,UACfkF,eAAgBA,IAGdhyG,IACFptC,KAAKykJ,OAAOtD,YAAY/zG,UAAYA,GAGtCptC,KAAK+kJ,qBAER,CAED,OAAO/kJ,KAAKglJ,qBAAqBxnG,EAClC,CAKD,kBAAAunG,GAAuB,CAQvB,oBAAAC,CAAqBxnG,GACnB,OAAO,CACR,CAKD,eAAA/8C,GACET,KAAK0kJ,eACLz/I,MAAMxE,iBACP,CAQD,oBAAAwtG,CAAqBluG,EAAMmQ,EAASstC,GAClC,MAAM9P,EAAQ1tC,KAAK0sG,WACnB,GAAIh/D,EAAMjnC,YAAY1G,GAAO,CAC3BgvB,GACE/uB,KAAKukJ,uBACL,EACA,EACA/mG,EAAWtiB,YACVsiB,EAAWtiB,WACZ,EACA,GACCsiB,EAAW/pC,KAAK,IAGnB,MAAM5N,EAAQ,IAAI2gD,GAChBzmD,EACAC,KAAKukJ,uBACL/mG,EACAttC,GAEFw9B,EAAM9nC,cAAcC,EACrB,CACF,CAOD,SAAAqoG,CAAUh+F,EAASstC,GACjBx9C,KAAKiuG,qBAAqBl/D,GAA2B7+B,EAASstC,EAC/D,CAOD,UAAA2wD,CAAWj+F,EAASstC,GAClBx9C,KAAKiuG,qBAAqBl/D,GAA4B7+B,EAASstC,EAChE,EAGH,IAAAynG,GAAeX,GClQf,MAAMY,GAAY,IAAI3yI,WAAW,GAwMjC,IAAA4yI,GAjMA,MAKE,WAAArlJ,CAAY2kJ,EAAQhxI,GAKlBzT,KAAKolJ,QAAUX,EACf,MAAMvM,EAAKuM,EAAOpK,QAMlBr6I,KAAKqlJ,SAAWnN,EAAGI,gBAMnBt4I,KAAKslJ,aAAepN,EAAGO,oBAMvBz4I,KAAKulJ,aAAerN,EAAGS,qBAMvB34I,KAAKwT,MAAQC,GAAQ,CAAC,EAAG,GAMzBzT,KAAKsT,MAAQ,IAAIf,WAAW,GAM5BvS,KAAKwlJ,iBAAkB,EAEvBxlJ,KAAKylJ,aACN,CAOD,OAAAr5G,CAAQ34B,GACFlR,EAAOkR,EAAMzT,KAAKwT,SAGtBxT,KAAKwT,MAAM,GAAKC,EAAK,GACrBzT,KAAKwT,MAAM,GAAKC,EAAK,GACrBzT,KAAKylJ,cACN,CAMD,OAAA/xI,GACE,OAAO1T,KAAKwT,KACb,CAOD,eAAAkyI,GACE1lJ,KAAKwlJ,iBAAkB,CACxB,CAOD,OAAAG,GACE,GAAI3lJ,KAAKwlJ,gBAAiB,CACxB,MAAM/xI,EAAOzT,KAAKwT,MACZ0kI,EAAKl4I,KAAKolJ,QAAQ/K,QAExBnC,EAAGuC,gBAAgBvC,EAAGwC,YAAa16I,KAAKslJ,cACxCpN,EAAG0N,WACD,EACA,EACAnyI,EAAK,GACLA,EAAK,GACLykI,EAAG8C,KACH9C,EAAG+C,cACHj7I,KAAKsT,OAEPtT,KAAKwlJ,iBAAkB,CACxB,CACD,OAAOxlJ,KAAKsT,KACb,CAUD,SAAAuyI,CAAUzuI,EAAGC,GACX,GAAID,EAAI,GAAKC,EAAI,GAAKD,EAAIpX,KAAKwT,MAAM,IAAM6D,GAAKrX,KAAKwT,MAAM,GAKzD,OAJA0xI,GAAU,GAAK,EACfA,GAAU,GAAK,EACfA,GAAU,GAAK,EACfA,GAAU,GAAK,EACRA,GAGTllJ,KAAK2lJ,UACL,MAAM1iJ,EACJ+I,KAAKuT,MAAMnI,IAAMpX,KAAKwT,MAAM,GAAKxH,KAAKuT,MAAMlI,GAAK,GAAKrX,KAAKwT,MAAM,GAKnE,OAJA0xI,GAAU,GAAKllJ,KAAKsT,MAAc,EAARrQ,GAC1BiiJ,GAAU,GAAKllJ,KAAKsT,MAAc,EAARrQ,EAAY,GACtCiiJ,GAAU,GAAKllJ,KAAKsT,MAAc,EAARrQ,EAAY,GACtCiiJ,GAAU,GAAKllJ,KAAKsT,MAAc,EAARrQ,EAAY,GAC/BiiJ,EACR,CAKD,UAAApD,GACE,OAAO9hJ,KAAKqlJ,QACb,CAKD,cAAAzD,GACE,OAAO5hJ,KAAKslJ,YACb,CAKD,cAAAzD,GACE,OAAO7hJ,KAAKulJ,YACb,CAKD,WAAAE,GACE,MAAMhyI,EAAOzT,KAAKwT,MACZ0kI,EAAKl4I,KAAKolJ,QAAQ/K,QAExBr6I,KAAKqlJ,SAAWrlJ,KAAKolJ,QAAQ9M,cAAc7kI,EAAM,KAAMzT,KAAKqlJ,UAE5DnN,EAAGuC,gBAAgBvC,EAAGwC,YAAa16I,KAAKslJ,cACxCpN,EAAGrxD,SAAS,EAAG,EAAGpzE,EAAK,GAAIA,EAAK,IAChCykI,EAAGyD,qBACDzD,EAAGwC,YACHxC,EAAG0D,kBACH1D,EAAGiD,WACHn7I,KAAKqlJ,SACL,GAGFnN,EAAG0C,iBAAiB1C,EAAG2C,aAAc76I,KAAKulJ,cAC1CrN,EAAG2D,oBACD3D,EAAG2C,aACH3C,EAAG4D,kBACHroI,EAAK,GACLA,EAAK,IAEPykI,EAAG6D,wBACD7D,EAAGwC,YACHxC,EAAG8D,iBACH9D,EAAG2C,aACH76I,KAAKulJ,cAGPvlJ,KAAKsT,MAAQ,IAAIf,WAAWkB,EAAK,GAAKA,EAAK,GAAK,EACjD,GCrMI,MAAMqyI,GAEa,6CCJ1B,SAASC,GAAO5jJ,EAAM6jJ,EAAaC,GAE/BA,EAAMA,GAAO,EAEb,IAOI9rI,EAAMC,EAAMC,EAAMC,EAAMlD,EAAGC,EAAG6uI,EAP9BC,EAAWH,GAAeA,EAAY7kJ,OACtCilJ,EAAWD,EAAWH,EAAY,GAAKC,EAAM9jJ,EAAKhB,OAClDklJ,EAAYC,GAAWnkJ,EAAM,EAAGikJ,EAAUH,GAAK,GAC/CM,EAAY,GAEhB,IAAKF,GAAaA,EAAUl7B,OAASk7B,EAAU36I,KAAM,OAAO66I,EAO5D,GAHIJ,IAAUE,EA2PlB,SAAwBlkJ,EAAM6jJ,EAAaK,EAAWJ,GAClD,IACIrkJ,EAAGoG,EAAiB6jH,EADpBrW,EAAQ,GAGZ,IAAK5zG,EAAI,EAAGoG,EAAMg+I,EAAY7kJ,OAAQS,EAAIoG,EAAKpG,KAG3CiqH,EAAOy6B,GAAWnkJ,EAFV6jJ,EAAYpkJ,GAAKqkJ,EACnBrkJ,EAAIoG,EAAM,EAAIg+I,EAAYpkJ,EAAI,GAAKqkJ,EAAM9jJ,EAAKhB,OAChB8kJ,GAAK,MAC5Bp6B,EAAKV,OAAMU,EAAK26B,SAAU,GACvChxC,EAAM7vG,KAAK8gJ,GAAY56B,IAM3B,IAHArW,EAAMphF,KAAKsyH,IAGN9kJ,EAAI,EAAGA,EAAI4zG,EAAMr0G,OAAQS,IAC1BykJ,EAAYM,GAAcnxC,EAAM5zG,GAAIykJ,GAGxC,OAAOA,CACX,CA/Q8BO,CAAezkJ,EAAM6jJ,EAAaK,EAAWJ,IAGnE9jJ,EAAKhB,OAAS,GAAK8kJ,EAAK,CACxB9rI,EAAOE,EAAOlY,EAAK,GACnBiY,EAAOE,EAAOnY,EAAK,GAEnB,IAAK,IAAIP,EAAIqkJ,EAAKrkJ,EAAIwkJ,EAAUxkJ,GAAKqkJ,GACjC7uI,EAAIjV,EAAKP,IAEDuY,IAAMA,EAAO/C,IADrBC,EAAIlV,EAAKP,EAAI,IAELwY,IAAMA,EAAO/C,GACjBD,EAAIiD,IAAMA,EAAOjD,GACjBC,EAAIiD,IAAMA,EAAOjD,GAKzB6uI,EAAsB,KADtBA,EAAUl6I,KAAKyP,IAAIpB,EAAOF,EAAMG,EAAOF,IACb,MAAQ8rI,EAAU,CAC/C,CAID,OAFAW,GAAaR,EAAWE,EAAWN,EAAK9rI,EAAMC,EAAM8rI,EAAS,GAEtDK,CACX,CAGA,SAASD,GAAWnkJ,EAAMsL,EAAOzL,EAAKikJ,EAAKa,GACvC,IAAIllJ,EAAGkwB,EAEP,GAAIg1H,IAAeC,GAAW5kJ,EAAMsL,EAAOzL,EAAKikJ,GAAO,EACnD,IAAKrkJ,EAAI6L,EAAO7L,EAAII,EAAKJ,GAAKqkJ,EAAKn0H,EAAOk1H,GAAWplJ,EAAGO,EAAKP,GAAIO,EAAKP,EAAI,GAAIkwB,QAE9E,IAAKlwB,EAAII,EAAMikJ,EAAKrkJ,GAAK6L,EAAO7L,GAAKqkJ,EAAKn0H,EAAOk1H,GAAWplJ,EAAGO,EAAKP,GAAIO,EAAKP,EAAI,GAAIkwB,GAQzF,OALIA,GAAQvvB,GAAOuvB,EAAMA,EAAKq5F,QAC1B95G,GAAWygB,GACXA,EAAOA,EAAKq5F,MAGTr5F,CACX,CAGA,SAASm1H,GAAax5I,EAAOzL,GACzB,IAAKyL,EAAO,OAAOA,EACdzL,IAAKA,EAAMyL,GAEhB,IACIy5I,EADA9xD,EAAI3nF,EAER,GAGI,GAFAy5I,GAAQ,EAEH9xD,EAAEoxD,UAAYjkJ,GAAO6yF,EAAGA,EAAE+1B,OAAqC,IAA5BjvG,GAAKk5E,EAAE1pF,KAAM0pF,EAAGA,EAAE+1B,MAOtD/1B,EAAIA,EAAE+1B,SAP8D,CAGpE,GAFA95G,GAAW+jF,IACXA,EAAIpzF,EAAMozF,EAAE1pF,QACF0pF,EAAE+1B,KAAM,MAClB+7B,GAAQ,CAEpB,QAGaA,GAAS9xD,IAAMpzF,GAExB,OAAOA,CACX,CAGA,SAAS6kJ,GAAaM,EAAKZ,EAAWN,EAAK9rI,EAAMC,EAAM8rI,EAAShwF,GAC5D,GAAKixF,EAAL,EAGKjxF,GAAQgwF,GAuRjB,SAAoBz4I,EAAO0M,EAAMC,EAAM8rI,GACnC,IAAI9wD,EAAI3nF,EACR,GACgB,IAAR2nF,EAAE/1D,IAAS+1D,EAAE/1D,EAAI+nH,GAAOhyD,EAAEh+E,EAAGg+E,EAAE/9E,EAAG8C,EAAMC,EAAM8rI,IAClD9wD,EAAEiyD,MAAQjyD,EAAE1pF,KACZ0pF,EAAEkyD,MAAQlyD,EAAE+1B,KACZ/1B,EAAIA,EAAE+1B,WACD/1B,IAAM3nF,GAEf2nF,EAAEiyD,MAAMC,MAAQ,KAChBlyD,EAAEiyD,MAAQ,KAOd,SAAoBx7B,GAChB,IAAIjqH,EAAGwzF,EAAGmyD,EAAGtwI,EAAGuwI,EAAMC,EAAWC,EAAOC,EACpCC,EAAS,EAEb,EAAG,CAMC,IALAxyD,EAAIy2B,EACJA,EAAO,KACP27B,EAAO,KACPC,EAAY,EAELryD,GAAG,CAIN,IAHAqyD,IACAF,EAAInyD,EACJsyD,EAAQ,EACH9lJ,EAAI,EAAGA,EAAIgmJ,IACZF,IACAH,EAAIA,EAAED,OAFc1lJ,KAOxB,IAFA+lJ,EAAQC,EAEDF,EAAQ,GAAMC,EAAQ,GAAKJ,GAEhB,IAAVG,IAA0B,IAAVC,IAAgBJ,GAAKnyD,EAAE/1D,GAAKkoH,EAAEloH,IAC9CpoB,EAAIm+E,EACJA,EAAIA,EAAEkyD,MACNI,MAEAzwI,EAAIswI,EACJA,EAAIA,EAAED,MACNK,KAGAH,EAAMA,EAAKF,MAAQrwI,EAClB40G,EAAO50G,EAEZA,EAAEowI,MAAQG,EACVA,EAAOvwI,EAGXm+E,EAAImyD,CACP,CAEDC,EAAKF,MAAQ,KACbM,GAAU,CAElB,OAAaH,EAAY,EAGzB,CAtDII,CAAWzyD,EACf,CApS0B0yD,CAAWX,EAAKhtI,EAAMC,EAAM8rI,GAMlD,IAJA,IACIx6I,EAAMy/G,EADNt/B,EAAOs7D,EAIJA,EAAIz7I,OAASy7I,EAAIh8B,MAIpB,GAHAz/G,EAAOy7I,EAAIz7I,KACXy/G,EAAOg8B,EAAIh8B,KAEP+6B,EAAU6B,GAAYZ,EAAKhtI,EAAMC,EAAM8rI,GAAW8B,GAAMb,GAExDZ,EAAU5gJ,KAAK+F,EAAK9J,EAAIqkJ,EAAM,GAC9BM,EAAU5gJ,KAAKwhJ,EAAIvlJ,EAAIqkJ,EAAM,GAC7BM,EAAU5gJ,KAAKwlH,EAAKvpH,EAAIqkJ,EAAM,GAE9B50I,GAAW81I,GAGXA,EAAMh8B,EAAKA,KACXt/B,EAAOs/B,EAAKA,UAQhB,IAHAg8B,EAAMh8B,KAGMt/B,EAAM,CAET31B,EAIe,IAATA,EAEP2wF,GADAM,EAAMc,GAAuBhB,GAAaE,GAAMZ,EAAWN,GACzCM,EAAWN,EAAK9rI,EAAMC,EAAM8rI,EAAS,GAGvC,IAAThwF,GACPgyF,GAAYf,EAAKZ,EAAWN,EAAK9rI,EAAMC,EAAM8rI,GAT7CW,GAAaI,GAAaE,GAAMZ,EAAWN,EAAK9rI,EAAMC,EAAM8rI,EAAS,GAYzE,KACH,CA/CY,CAiDrB,CAGA,SAAS8B,GAAMb,GACX,IAAI9lJ,EAAI8lJ,EAAIz7I,KACRpK,EAAI6lJ,EACJpwI,EAAIowI,EAAIh8B,KAEZ,GAAIjvG,GAAK7a,EAAGC,EAAGyV,IAAM,EAAG,OAAO,EAY/B,IATA,IAAIoxI,EAAK9mJ,EAAE+V,EAAGgxI,EAAK9mJ,EAAE8V,EAAGixI,EAAKtxI,EAAEK,EAAGkxI,EAAKjnJ,EAAEgW,EAAGkxI,EAAKjnJ,EAAE+V,EAAGmxI,EAAKzxI,EAAEM,EAGzDuF,EAAKurI,EAAKC,EAAMD,EAAKE,EAAKF,EAAKE,EAAOD,EAAKC,EAAKD,EAAKC,EACrDxrI,EAAKyrI,EAAKC,EAAMD,EAAKE,EAAKF,EAAKE,EAAOD,EAAKC,EAAKD,EAAKC,EACrD1rI,EAAKqrI,EAAKC,EAAMD,EAAKE,EAAKF,EAAKE,EAAOD,EAAKC,EAAKD,EAAKC,EACrDtrI,EAAKurI,EAAKC,EAAMD,EAAKE,EAAKF,EAAKE,EAAOD,EAAKC,EAAKD,EAAKC,EAErDpzD,EAAIr+E,EAAEo0G,KACH/1B,IAAM/zF,GAAG,CACZ,GAAI+zF,EAAEh+E,GAAKwF,GAAMw4E,EAAEh+E,GAAK0F,GAAMs4E,EAAE/9E,GAAKwF,GAAMu4E,EAAE/9E,GAAK0F,GAC9C0rI,GAAgBN,EAAIG,EAAIF,EAAIG,EAAIF,EAAIG,EAAIpzD,EAAEh+E,EAAGg+E,EAAE/9E,IAC/C6E,GAAKk5E,EAAE1pF,KAAM0pF,EAAGA,EAAE+1B,OAAS,EAAG,OAAO,EACzC/1B,EAAIA,EAAE+1B,IACT,CAED,OAAO,CACX,CAEA,SAAS48B,GAAYZ,EAAKhtI,EAAMC,EAAM8rI,GAClC,IAAI7kJ,EAAI8lJ,EAAIz7I,KACRpK,EAAI6lJ,EACJpwI,EAAIowI,EAAIh8B,KAEZ,GAAIjvG,GAAK7a,EAAGC,EAAGyV,IAAM,EAAG,OAAO,EAkB/B,IAhBA,IAAIoxI,EAAK9mJ,EAAE+V,EAAGgxI,EAAK9mJ,EAAE8V,EAAGixI,EAAKtxI,EAAEK,EAAGkxI,EAAKjnJ,EAAEgW,EAAGkxI,EAAKjnJ,EAAE+V,EAAGmxI,EAAKzxI,EAAEM,EAGzDuF,EAAKurI,EAAKC,EAAMD,EAAKE,EAAKF,EAAKE,EAAOD,EAAKC,EAAKD,EAAKC,EACrDxrI,EAAKyrI,EAAKC,EAAMD,EAAKE,EAAKF,EAAKE,EAAOD,EAAKC,EAAKD,EAAKC,EACrD1rI,EAAKqrI,EAAKC,EAAMD,EAAKE,EAAKF,EAAKE,EAAOD,EAAKC,EAAKD,EAAKC,EACrDtrI,EAAKurI,EAAKC,EAAMD,EAAKE,EAAKF,EAAKE,EAAOD,EAAKC,EAAKD,EAAKC,EAGrDE,EAAOtB,GAAOxqI,EAAIC,EAAI1C,EAAMC,EAAM8rI,GAClCyC,EAAOvB,GAAOtqI,EAAIC,EAAI5C,EAAMC,EAAM8rI,GAElC9wD,EAAI+xD,EAAIE,MACR1lJ,EAAIwlJ,EAAIG,MAGLlyD,GAAKA,EAAE/1D,GAAKqpH,GAAQ/mJ,GAAKA,EAAE09B,GAAKspH,GAAM,CACzC,GAAIvzD,EAAEh+E,GAAKwF,GAAMw4E,EAAEh+E,GAAK0F,GAAMs4E,EAAE/9E,GAAKwF,GAAMu4E,EAAE/9E,GAAK0F,GAAMq4E,IAAM/zF,GAAK+zF,IAAMr+E,GACrE0xI,GAAgBN,EAAIG,EAAIF,EAAIG,EAAIF,EAAIG,EAAIpzD,EAAEh+E,EAAGg+E,EAAE/9E,IAAM6E,GAAKk5E,EAAE1pF,KAAM0pF,EAAGA,EAAE+1B,OAAS,EAAG,OAAO,EAG9F,GAFA/1B,EAAIA,EAAEiyD,MAEF1lJ,EAAEyV,GAAKwF,GAAMjb,EAAEyV,GAAK0F,GAAMnb,EAAE0V,GAAKwF,GAAMlb,EAAE0V,GAAK0F,GAAMpb,IAAMN,GAAKM,IAAMoV,GACrE0xI,GAAgBN,EAAIG,EAAIF,EAAIG,EAAIF,EAAIG,EAAI7mJ,EAAEyV,EAAGzV,EAAE0V,IAAM6E,GAAKva,EAAE+J,KAAM/J,EAAGA,EAAEwpH,OAAS,EAAG,OAAO,EAC9FxpH,EAAIA,EAAE2lJ,KACT,CAGD,KAAOlyD,GAAKA,EAAE/1D,GAAKqpH,GAAM,CACrB,GAAItzD,EAAEh+E,GAAKwF,GAAMw4E,EAAEh+E,GAAK0F,GAAMs4E,EAAE/9E,GAAKwF,GAAMu4E,EAAE/9E,GAAK0F,GAAMq4E,IAAM/zF,GAAK+zF,IAAMr+E,GACrE0xI,GAAgBN,EAAIG,EAAIF,EAAIG,EAAIF,EAAIG,EAAIpzD,EAAEh+E,EAAGg+E,EAAE/9E,IAAM6E,GAAKk5E,EAAE1pF,KAAM0pF,EAAGA,EAAE+1B,OAAS,EAAG,OAAO,EAC9F/1B,EAAIA,EAAEiyD,KACT,CAGD,KAAO1lJ,GAAKA,EAAE09B,GAAKspH,GAAM,CACrB,GAAIhnJ,EAAEyV,GAAKwF,GAAMjb,EAAEyV,GAAK0F,GAAMnb,EAAE0V,GAAKwF,GAAMlb,EAAE0V,GAAK0F,GAAMpb,IAAMN,GAAKM,IAAMoV,GACrE0xI,GAAgBN,EAAIG,EAAIF,EAAIG,EAAIF,EAAIG,EAAI7mJ,EAAEyV,EAAGzV,EAAE0V,IAAM6E,GAAKva,EAAE+J,KAAM/J,EAAGA,EAAEwpH,OAAS,EAAG,OAAO,EAC9FxpH,EAAIA,EAAE2lJ,KACT,CAED,OAAO,CACX,CAGA,SAASW,GAAuBx6I,EAAO84I,EAAWN,GAC9C,IAAI7wD,EAAI3nF,EACR,EAAG,CACC,IAAIpM,EAAI+zF,EAAE1pF,KACNpK,EAAI8zF,EAAE+1B,KAAKA,MAEV5oH,GAAOlB,EAAGC,IAAMuc,GAAWxc,EAAG+zF,EAAGA,EAAE+1B,KAAM7pH,IAAMsnJ,GAAcvnJ,EAAGC,IAAMsnJ,GAActnJ,EAAGD,KAExFklJ,EAAU5gJ,KAAKtE,EAAEO,EAAIqkJ,EAAM,GAC3BM,EAAU5gJ,KAAKyvF,EAAExzF,EAAIqkJ,EAAM,GAC3BM,EAAU5gJ,KAAKrE,EAAEM,EAAIqkJ,EAAM,GAG3B50I,GAAW+jF,GACX/jF,GAAW+jF,EAAE+1B,MAEb/1B,EAAI3nF,EAAQnM,GAEhB8zF,EAAIA,EAAE+1B,IACd,OAAa/1B,IAAM3nF,GAEf,OAAOw5I,GAAa7xD,EACxB,CAGA,SAAS8yD,GAAYz6I,EAAO84I,EAAWN,EAAK9rI,EAAMC,EAAM8rI,GAEpD,IAAI7kJ,EAAIoM,EACR,EAAG,CAEC,IADA,IAAInM,EAAID,EAAE8pH,KAAKA,KACR7pH,IAAMD,EAAEqK,MAAM,CACjB,GAAIrK,EAAEO,IAAMN,EAAEM,GAAKinJ,GAAgBxnJ,EAAGC,GAAI,CAEtC,IAAIyV,EAAI+xI,GAAaznJ,EAAGC,GASxB,OANAD,EAAI4lJ,GAAa5lJ,EAAGA,EAAE8pH,MACtBp0G,EAAIkwI,GAAalwI,EAAGA,EAAEo0G,MAGtB07B,GAAaxlJ,EAAGklJ,EAAWN,EAAK9rI,EAAMC,EAAM8rI,EAAS,QACrDW,GAAa9vI,EAAGwvI,EAAWN,EAAK9rI,EAAMC,EAAM8rI,EAAS,EAExD,CACD5kJ,EAAIA,EAAE6pH,IACT,CACD9pH,EAAIA,EAAE8pH,IACd,OAAa9pH,IAAMoM,EACnB,CAyBA,SAASi5I,GAASrlJ,EAAGC,GACjB,OAAOD,EAAE+V,EAAI9V,EAAE8V,CACnB,CAGA,SAASuvI,GAAcoC,EAAM1C,GACzB,IAAI2C,EAaR,SAAwBD,EAAM1C,GAC1B,IAIIrmI,EAJAo1E,EAAIixD,EACJ4C,EAAKF,EAAK3xI,EACV8xI,EAAKH,EAAK1xI,EACV8xI,GAAM3uI,IAKV,EAAG,CACC,GAAI0uI,GAAM9zD,EAAE/9E,GAAK6xI,GAAM9zD,EAAE+1B,KAAK9zG,GAAK+9E,EAAE+1B,KAAK9zG,IAAM+9E,EAAE/9E,EAAG,CACjD,IAAID,EAAIg+E,EAAEh+E,GAAK8xI,EAAK9zD,EAAE/9E,IAAM+9E,EAAE+1B,KAAK/zG,EAAIg+E,EAAEh+E,IAAMg+E,EAAE+1B,KAAK9zG,EAAI+9E,EAAE/9E,GAC5D,GAAID,GAAK6xI,GAAM7xI,EAAI+xI,IACfA,EAAK/xI,EACL4I,EAAIo1E,EAAEh+E,EAAIg+E,EAAE+1B,KAAK/zG,EAAIg+E,EAAIA,EAAE+1B,KACvB/zG,IAAM6xI,GAAI,OAAOjpI,CAE5B,CACDo1E,EAAIA,EAAE+1B,IACd,OAAa/1B,IAAMixD,GAEf,IAAKrmI,EAAG,OAAO,KAMf,IAIIsC,EAJAupE,EAAO7rE,EACPopI,EAAKppI,EAAE5I,EACPiyI,EAAKrpI,EAAE3I,EACPiyI,EAAS9uI,IAGb46E,EAAIp1E,EAEJ,GACQipI,GAAM7zD,EAAEh+E,GAAKg+E,EAAEh+E,GAAKgyI,GAAMH,IAAO7zD,EAAEh+E,GAC/BqxI,GAAgBS,EAAKG,EAAKJ,EAAKE,EAAID,EAAIE,EAAIC,EAAIH,EAAKG,EAAKF,EAAKF,EAAIC,EAAI9zD,EAAEh+E,EAAGg+E,EAAE/9E,KAEjFiL,EAAMtW,KAAKmP,IAAI+tI,EAAK9zD,EAAE/9E,IAAM4xI,EAAK7zD,EAAEh+E,GAE/BwxI,GAAcxzD,EAAG2zD,KAChBzmI,EAAMgnI,GAAWhnI,IAAQgnI,IAAWl0D,EAAEh+E,EAAI4I,EAAE5I,GAAMg+E,EAAEh+E,IAAM4I,EAAE5I,GAAKmyI,GAAqBvpI,EAAGo1E,OAC1Fp1E,EAAIo1E,EACJk0D,EAAShnI,IAIjB8yE,EAAIA,EAAE+1B,WACD/1B,IAAMvJ,GAEf,OAAO7rE,CACX,CAjEiBwpI,CAAeT,EAAM1C,GAClC,IAAK2C,EACD,OAAO3C,EAGX,IAAIoD,EAAgBX,GAAaE,EAAQD,GAIzC,OADA9B,GAAawC,EAAeA,EAAct+B,MACnC87B,GAAa+B,EAAQA,EAAO79B,KACvC,CA0DA,SAASo+B,GAAqBvpI,EAAGo1E,GAC7B,OAAOl5E,GAAK8D,EAAEtU,KAAMsU,EAAGo1E,EAAE1pF,MAAQ,GAAKwQ,GAAKk5E,EAAE+1B,KAAMnrG,EAAGA,EAAEmrG,MAAQ,CACpE,CAwEA,SAASi8B,GAAOhwI,EAAGC,EAAG8C,EAAMC,EAAM8rI,GAe9B,OAPA9uI,EAAqB,aADrBA,EAAqB,YADrBA,EAAqB,YADrBA,EAAqB,WAHrBA,GAAKA,EAAI+C,GAAQ+rI,EAAU,GAGjB9uI,GAAK,IACLA,GAAK,IACLA,GAAK,IACLA,GAAK,KAKfC,EAAqB,aADrBA,EAAqB,YADrBA,EAAqB,YADrBA,EAAqB,WAPrBA,GAAKA,EAAI+C,GAAQ8rI,EAAU,GAOjB7uI,GAAK,IACLA,GAAK,IACLA,GAAK,IACLA,GAAK,KAEE,CACrB,CAGA,SAASovI,GAAYh5I,GACjB,IAAI2nF,EAAI3nF,EACJi8I,EAAWj8I,EACf,IACQ2nF,EAAEh+E,EAAIsyI,EAAStyI,GAAMg+E,EAAEh+E,IAAMsyI,EAAStyI,GAAKg+E,EAAE/9E,EAAIqyI,EAASryI,KAAIqyI,EAAWt0D,GAC7EA,EAAIA,EAAE+1B,WACD/1B,IAAM3nF,GAEf,OAAOi8I,CACX,CAGA,SAASjB,GAAgBN,EAAIG,EAAIF,EAAIG,EAAIF,EAAIG,EAAInvF,EAAIswF,GACjD,OAAQtB,EAAKhvF,IAAOivF,EAAKqB,KAAQxB,EAAK9uF,IAAOmvF,EAAKmB,KAC1CxB,EAAK9uF,IAAOkvF,EAAKoB,KAAQvB,EAAK/uF,IAAOivF,EAAKqB,KAC1CvB,EAAK/uF,IAAOmvF,EAAKmB,KAAQtB,EAAKhvF,IAAOkvF,EAAKoB,EACtD,CAGA,SAASd,GAAgBxnJ,EAAGC,GACxB,OAAOD,EAAE8pH,KAAKvpH,IAAMN,EAAEM,GAAKP,EAAEqK,KAAK9J,IAAMN,EAAEM,IA2C9C,SAA2BP,EAAGC,GAC1B,IAAI8zF,EAAI/zF,EACR,EAAG,CACC,GAAI+zF,EAAExzF,IAAMP,EAAEO,GAAKwzF,EAAE+1B,KAAKvpH,IAAMP,EAAEO,GAAKwzF,EAAExzF,IAAMN,EAAEM,GAAKwzF,EAAE+1B,KAAKvpH,IAAMN,EAAEM,GAC7Dic,GAAWu3E,EAAGA,EAAE+1B,KAAM9pH,EAAGC,GAAI,OAAO,EAC5C8zF,EAAIA,EAAE+1B,IACd,OAAa/1B,IAAM/zF,GAEf,OAAO,CACX,CApDoDuoJ,CAAkBvoJ,EAAGC,KAC7DsnJ,GAAcvnJ,EAAGC,IAAMsnJ,GAActnJ,EAAGD,IA6DpD,SAAsBA,EAAGC,GACrB,IAAI8zF,EAAI/zF,EACJwoJ,GAAS,EACTxwF,GAAMh4D,EAAE+V,EAAI9V,EAAE8V,GAAK,EACnBuyI,GAAMtoJ,EAAEgW,EAAI/V,EAAE+V,GAAK,EACvB,GACU+9E,EAAE/9E,EAAIsyI,GAASv0D,EAAE+1B,KAAK9zG,EAAIsyI,GAAQv0D,EAAE+1B,KAAK9zG,IAAM+9E,EAAE/9E,GAC9CgiD,GAAM+7B,EAAE+1B,KAAK/zG,EAAIg+E,EAAEh+E,IAAMuyI,EAAKv0D,EAAE/9E,IAAM+9E,EAAE+1B,KAAK9zG,EAAI+9E,EAAE/9E,GAAK+9E,EAAEh+E,IAC/DyyI,GAAUA,GACdz0D,EAAIA,EAAE+1B,WACD/1B,IAAM/zF,GAEf,OAAOwoJ,CACX,CA1E0DC,CAAazoJ,EAAGC,KAC7D4a,GAAK7a,EAAEqK,KAAMrK,EAAGC,EAAEoK,OAASwQ,GAAK7a,EAAGC,EAAEoK,KAAMpK,KAC5CiB,GAAOlB,EAAGC,IAAM4a,GAAK7a,EAAEqK,KAAMrK,EAAGA,EAAE8pH,MAAQ,GAAKjvG,GAAK5a,EAAEoK,KAAMpK,EAAGA,EAAE6pH,MAAQ,EACrF,CAGA,SAASjvG,GAAKk5E,EAAGmyD,EAAGrjI,GAChB,OAAQqjI,EAAElwI,EAAI+9E,EAAE/9E,IAAM6M,EAAE9M,EAAImwI,EAAEnwI,IAAMmwI,EAAEnwI,EAAIg+E,EAAEh+E,IAAM8M,EAAE7M,EAAIkwI,EAAElwI,EAC9D,CAGA,SAAS9U,GAAOmwH,EAAIC,GAChB,OAAOD,EAAGt7G,IAAMu7G,EAAGv7G,GAAKs7G,EAAGr7G,IAAMs7G,EAAGt7G,CACxC,CAGA,SAASwG,GAAW60G,EAAIq3B,EAAIp3B,EAAIq3B,GAC5B,IAAIC,EAAKC,GAAKhuI,GAAKw2G,EAAIq3B,EAAIp3B,IACvBw3B,EAAKD,GAAKhuI,GAAKw2G,EAAIq3B,EAAIC,IACvBI,EAAKF,GAAKhuI,GAAKy2G,EAAIq3B,EAAIt3B,IACvB23B,EAAKH,GAAKhuI,GAAKy2G,EAAIq3B,EAAID,IAE3B,OAAIE,IAAOE,GAAMC,IAAOC,MAEb,IAAPJ,IAAYK,GAAU53B,EAAIC,EAAIo3B,QACvB,IAAPI,IAAYG,GAAU53B,EAAIs3B,EAAID,QACvB,IAAPK,IAAYE,GAAU33B,EAAID,EAAIs3B,OACvB,IAAPK,IAAYC,GAAU33B,EAAIo3B,EAAIC,MAGtC,CAGA,SAASM,GAAUl1D,EAAGmyD,EAAGrjI,GACrB,OAAOqjI,EAAEnwI,GAAKpL,KAAKyP,IAAI25E,EAAEh+E,EAAG8M,EAAE9M,IAAMmwI,EAAEnwI,GAAKpL,KAAKwP,IAAI45E,EAAEh+E,EAAG8M,EAAE9M,IAAMmwI,EAAElwI,GAAKrL,KAAKyP,IAAI25E,EAAE/9E,EAAG6M,EAAE7M,IAAMkwI,EAAElwI,GAAKrL,KAAKwP,IAAI45E,EAAE/9E,EAAG6M,EAAE7M,EACzH,CAEA,SAAS6yI,GAAKK,GACV,OAAOA,EAAM,EAAI,EAAIA,EAAM,GAAK,EAAI,CACxC,CAeA,SAAS3B,GAAcvnJ,EAAGC,GACtB,OAAO4a,GAAK7a,EAAEqK,KAAMrK,EAAGA,EAAE8pH,MAAQ,EAC7BjvG,GAAK7a,EAAGC,EAAGD,EAAE8pH,OAAS,GAAKjvG,GAAK7a,EAAGA,EAAEqK,KAAMpK,IAAM,EACjD4a,GAAK7a,EAAGC,EAAGD,EAAEqK,MAAQ,GAAKwQ,GAAK7a,EAAGA,EAAE8pH,KAAM7pH,GAAK,CACvD,CAoBA,SAASwnJ,GAAaznJ,EAAGC,GACrB,IAAImV,EAAK,IAAIqnG,GAAKz8G,EAAEO,EAAGP,EAAE+V,EAAG/V,EAAEgW,GAC1BX,EAAK,IAAIonG,GAAKx8G,EAAEM,EAAGN,EAAE8V,EAAG9V,EAAE+V,GAC1BmzI,EAAKnpJ,EAAE8pH,KACPs/B,EAAKnpJ,EAAEoK,KAcX,OAZArK,EAAE8pH,KAAO7pH,EACTA,EAAEoK,KAAOrK,EAEToV,EAAG00G,KAAOq/B,EACVA,EAAG9+I,KAAO+K,EAEVC,EAAGy0G,KAAO10G,EACVA,EAAG/K,KAAOgL,EAEV+zI,EAAGt/B,KAAOz0G,EACVA,EAAGhL,KAAO++I,EAEH/zI,CACX,CAGA,SAASswI,GAAWplJ,EAAGwV,EAAGC,EAAGya,GACzB,IAAIsjE,EAAI,IAAI0oB,GAAKl8G,EAAGwV,EAAGC,GAYvB,OAVKya,GAKDsjE,EAAE+1B,KAAOr5F,EAAKq5F,KACd/1B,EAAE1pF,KAAOomB,EACTA,EAAKq5F,KAAKz/G,KAAO0pF,EACjBtjE,EAAKq5F,KAAO/1B,IAPZA,EAAE1pF,KAAO0pF,EACTA,EAAE+1B,KAAO/1B,GAQNA,CACX,CAEA,SAAS/jF,GAAW+jF,GAChBA,EAAE+1B,KAAKz/G,KAAO0pF,EAAE1pF,KAChB0pF,EAAE1pF,KAAKy/G,KAAO/1B,EAAE+1B,KAEZ/1B,EAAEiyD,QAAOjyD,EAAEiyD,MAAMC,MAAQlyD,EAAEkyD,OAC3BlyD,EAAEkyD,QAAOlyD,EAAEkyD,MAAMD,MAAQjyD,EAAEiyD,MACnC,CAEA,SAASvpC,GAAKl8G,EAAGwV,EAAGC,GAEhBrX,KAAK4B,EAAIA,EAGT5B,KAAKoX,EAAIA,EACTpX,KAAKqX,EAAIA,EAGTrX,KAAK0L,KAAO,KACZ1L,KAAKmrH,KAAO,KAGZnrH,KAAKq/B,EAAI,EAGTr/B,KAAKqnJ,MAAQ,KACbrnJ,KAAKsnJ,MAAQ,KAGbtnJ,KAAKwmJ,SAAU,CACnB,CA+BA,SAASO,GAAW5kJ,EAAMsL,EAAOzL,EAAKikJ,GAElC,IADA,IAAIyE,EAAM,EACD9oJ,EAAI6L,EAAO2W,EAAIpiB,EAAMikJ,EAAKrkJ,EAAII,EAAKJ,GAAKqkJ,EAC7CyE,IAAQvoJ,EAAKiiB,GAAKjiB,EAAKP,KAAOO,EAAKP,EAAI,GAAKO,EAAKiiB,EAAI,IACrDA,EAAIxiB,EAER,OAAO8oJ,CACX,CAppBAC,GAAcC,QAAG7E,GACK4E,GAAAC,QAAAC,QAAG9E,GAinBzBA,GAAO+E,UAAY,SAAU3oJ,EAAM6jJ,EAAaC,EAAKM,GACjD,IAAIJ,EAAWH,GAAeA,EAAY7kJ,OACtCilJ,EAAWD,EAAWH,EAAY,GAAKC,EAAM9jJ,EAAKhB,OAElD4pJ,EAAc/+I,KAAKmP,IAAI4rI,GAAW5kJ,EAAM,EAAGikJ,EAAUH,IACzD,GAAIE,EACA,IAAK,IAAIvkJ,EAAI,EAAGoG,EAAMg+I,EAAY7kJ,OAAQS,EAAIoG,EAAKpG,IAAK,CACpD,IAAI6L,EAAQu4I,EAAYpkJ,GAAKqkJ,EACzBjkJ,EAAMJ,EAAIoG,EAAM,EAAIg+I,EAAYpkJ,EAAI,GAAKqkJ,EAAM9jJ,EAAKhB,OACxD4pJ,GAAe/+I,KAAKmP,IAAI4rI,GAAW5kJ,EAAMsL,EAAOzL,EAAKikJ,GACxD,CAGL,IAAI+E,EAAgB,EACpB,IAAKppJ,EAAI,EAAGA,EAAI2kJ,EAAUplJ,OAAQS,GAAK,EAAG,CACtC,IAAIP,EAAIklJ,EAAU3kJ,GAAKqkJ,EACnB3kJ,EAAIilJ,EAAU3kJ,EAAI,GAAKqkJ,EACvBlvI,EAAIwvI,EAAU3kJ,EAAI,GAAKqkJ,EAC3B+E,GAAiBh/I,KAAKmP,KACjBhZ,EAAKd,GAAKc,EAAK4U,KAAO5U,EAAKb,EAAI,GAAKa,EAAKd,EAAI,KAC7Cc,EAAKd,GAAKc,EAAKb,KAAOa,EAAK4U,EAAI,GAAK5U,EAAKd,EAAI,IACrD,CAED,OAAuB,IAAhB0pJ,GAAuC,IAAlBC,EAAsB,EAC9Ch/I,KAAKmP,KAAK6vI,EAAgBD,GAAeA,EACjD,EAYAhF,GAAOkF,QAAU,SAAU9oJ,GAKvB,IAJA,IAAI8jJ,EAAM9jJ,EAAK,GAAG,GAAGhB,OACjBqvC,EAAS,CAACvmB,SAAU,GAAIihI,MAAO,GAAIhvC,WAAY+pC,GAC/CkF,EAAY,EAEPvpJ,EAAI,EAAGA,EAAIO,EAAKhB,OAAQS,IAAK,CAClC,IAAK,IAAIwiB,EAAI,EAAGA,EAAIjiB,EAAKP,GAAGT,OAAQijB,IAChC,IAAK,IAAIpN,EAAI,EAAGA,EAAIivI,EAAKjvI,IAAKw5B,EAAOvmB,SAAStkB,KAAKxD,EAAKP,GAAGwiB,GAAGpN,IAE9DpV,EAAI,IACJupJ,GAAahpJ,EAAKP,EAAI,GAAGT,OACzBqvC,EAAO06G,MAAMvlJ,KAAKwlJ,GAEzB,CACD,OAAO36G,CACX,EC9RO,SAAS46G,GAAc79I,EAAI9C,GAEhC,MAAM4gJ,EAAQ,IACRC,EAASD,IAKf,OAPA5gJ,EAAQA,GAAS,IAGX,GAAKuB,KAAKuT,MAAMhS,EAAK89I,EAAQA,EAAQA,GAASC,EACpD7gJ,EAAM,GAAMuB,KAAKuT,MAAMhS,EAAK89I,EAAQA,GAASA,EAASC,EACtD7gJ,EAAM,GAAMuB,KAAKuT,MAAMhS,EAAK89I,GAASA,EAASC,EAC9C7gJ,EAAM,GAAM8C,EAAK89I,EAASC,EACnB7gJ,CACT,CC8PA,IAAA8gJ,GAthBA,cAAuCjH,GAKrC,WAAAxkJ,CAAY4tC,EAAOhjC,GACjB,MAAMyvI,EAAWzvI,EAAQyvI,UAAY,GAC/BqR,E/N9FD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,G+N+FrBrR,EAASgE,IAAoCqN,EAE7CvmJ,MAAMyoC,EAAO,CACXysG,SAAUA,EACV8F,cAAev1I,EAAQu1I,gBAGzBjgJ,KAAKyrJ,iBAAmB,EAExBzrJ,KAAK0rJ,gBAAkB,IAAIC,GAAiB3U,GAAcE,IAC1Dl3I,KAAK4rJ,eAAiB,IAAID,GACxB1U,GACAC,IAMFl3I,KAAK6rJ,cAAgBnhJ,EAAQkuI,aAK7B54I,KAAK8rJ,gBAAkBphJ,EAAQuuI,eAM/Bj5I,KAAK+rJ,SAML/rJ,KAAKgsJ,qBAAuBthJ,EAAQuhJ,sBAAuB,EAE3D,MAAMC,EAAmBxhJ,EAAQ6xI,WAC7B7xI,EAAQ6xI,WAAW3xG,KAAI,SAAUuhH,GAC/B,MAAO,CACL12I,KAAM,UAAY02I,EAAU12I,KAC5BhC,KAAM,EACN1T,KAAMq+I,GAAcb,MAEhC,IACQ,GAOJv9I,KAAKu8I,WAAa,CAChB,CACE9mI,KAAM,aACNhC,KAAM,EACN1T,KAAMq+I,GAAcb,OAEtB,CACE9nI,KAAM,UACNhC,KAAM,EACN1T,KAAMq+I,GAAcb,QAIpBv9I,KAAKgsJ,uBACPhsJ,KAAKu8I,WAAW52I,KAAK,CACnB8P,KAAM,aACNhC,KAAM,EACN1T,KAAMq+I,GAAcb,QAEtBv9I,KAAKu8I,WAAW52I,KAAK,CACnB8P,KAAM,eACNhC,KAAM,EACN1T,KAAMq+I,GAAcb,SAGxBv9I,KAAKu8I,WAAW52I,QAAQumJ,GAExBlsJ,KAAKksJ,iBAAmBxhJ,EAAQ6xI,WAAa7xI,EAAQ6xI,WAAa,GAElEv8I,KAAKqgE,gB7NhBA,CAAC7lD,IAAUA,KAAU,KAAW,K6NyBrCxa,KAAKosJ,kBAAoBZ,EAOzBxrJ,KAAKqsJ,iB/NhMA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,G+NsMrBrsJ,KAAKssJ,uB/NtMA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,G+N4MrBtsJ,KAAKusJ,oBAAsB,IAAI95I,aAAa,GAM5CzS,KAAKwsJ,iBAOLxsJ,KAAKysJ,WAAa,EAKlBzsJ,KAAK0sJ,QCjQM,WACL,MAAMziJ,EAAS,+vUACf,OAAO,IAAIsqG,OAAuB,oBAATC,KACrB,sCAAwCC,OAAOjjD,KAAKvnD,EAAQ,UAAU0O,SAAS,UAC/Es2D,IAAIylC,gBAAgB,IAAIF,KAAK,CAACvqG,GAAS,CAAClK,KAAM,4BAC5D,CD4PmB4sJ,GAEf3sJ,KAAK0sJ,QAAQpnJ,iBACX,WAICO,IACC,MAAM+mJ,EAAW/mJ,EAAM1D,KACvB,GAAIyqJ,EAAS7sJ,OAAS+lJ,GAA+C,CACnE,MAAM+G,EAAsBD,EAASC,oBACrC7sJ,KAAK0rJ,gBAAgB9T,gBAAgBgV,EAASE,cAC9C9sJ,KAAKykJ,OAAO/D,gBAAgB1gJ,KAAK0rJ,iBACjC1rJ,KAAK4rJ,eAAehU,gBAAgBgV,EAASG,aAC7C/sJ,KAAKykJ,OAAO/D,gBAAgB1gJ,KAAK4rJ,gBAEjC5rJ,KAAKqsJ,iBAAmBQ,EACxBG,GACEhtJ,KAAKssJ,uBACLtsJ,KAAKqsJ,kBAEPrsJ,KAAKusJ,oBAAsB,IAAI95I,aAC7B5M,EAAM1D,KAAK8qJ,oBAETL,EAASr/I,KAAOvN,KAAKysJ,aACvBzsJ,KAAKikE,OAAQ,GAEfjkE,KAAK0sG,WAAW7kG,SACjB,KASL7H,KAAKktJ,cAAgB,GAOrBltJ,KAAKmtJ,cAAgB,EAErB,MAAMljJ,EAASjK,KAAK0sG,WAAWzvD,YAC/Bj9C,KAAKotJ,kBAAoB,CACvBrmJ,EACEkD,EACA6wF,GACA96F,KAAKqtJ,0BACLrtJ,MAEF+G,EACEkD,EACA6wF,GACA96F,KAAKstJ,4BACLttJ,MAEF+G,EACEkD,EACA6wF,GACA96F,KAAKutJ,2BACLvtJ,MAEF+G,EACEkD,EACA6wF,GACA96F,KAAKwtJ,0BACLxtJ,OAGJiK,EAAOozF,gBAAgB59C,IACrBz/C,KAAKktJ,cAAczkJ,EAAOg3C,IAAY,CACpCA,QAASA,EACT5qC,WAAY4qC,EAAQn2C,gBACpBqL,SAAU8qC,EAAQxqC,eAEpBjV,KAAKmtJ,eAAe,GAEvB,CAED,kBAAApI,GACE/kJ,KAAK+rJ,SAAW/rJ,KAAKykJ,OAAO5B,WAC1B7iJ,KAAK8rJ,gBACL9rJ,KAAK6rJ,eAGH7rJ,KAAKgsJ,uBACPhsJ,KAAKwsJ,iBAAmB,IAAIiB,GAAkBztJ,KAAKykJ,QAEtD,CAMD,yBAAA4I,CAA0BxnJ,GACxB,MAAM45C,EAAU55C,EAAM45C,QACtBz/C,KAAKktJ,cAAczkJ,EAAOg3C,IAAY,CACpCA,QAASA,EACT5qC,WAAY4qC,EAAQn2C,gBACpBqL,SAAU8qC,EAAQxqC,eAEpBjV,KAAKmtJ,eACN,CAMD,2BAAAG,CAA4BznJ,GAC1B,MAAM45C,EAAU55C,EAAM45C,QACtBz/C,KAAKktJ,cAAczkJ,EAAOg3C,IAAY,CACpCA,QAASA,EACT5qC,WAAY4qC,EAAQn2C,gBACpBqL,SAAU8qC,EAAQxqC,cAErB,CAMD,0BAAAs4I,CAA2B1nJ,GACzB,MAAM45C,EAAU55C,EAAM45C,eACfz/C,KAAKktJ,cAAczkJ,EAAOg3C,IACjCz/C,KAAKmtJ,eACN,CAKD,yBAAAK,GACExtJ,KAAKktJ,cAAgB,GACrBltJ,KAAKmtJ,cAAgB,CACtB,CAOD,WAAA9uG,CAAYb,GACV,MAAM06F,EAAKl4I,KAAKykJ,OAAOpK,QACvBr6I,KAAKkuG,UAAUgqC,EAAI16F,GACnB,MAAOg4F,EAAYjX,EAAUj/G,GE7Y1B,SAA4Bk+B,EAAY9P,GAC7C,MAAMxuB,EAAas+B,EAAWjE,UAAUr6B,WAGlC0yB,EADelE,EAAMuP,YACK+C,YAAc9gC,EAAWG,WACnDF,EAAmBD,EAAWE,YAE9B7F,EAASikC,EAAWjkC,OACpB+F,EAAasyB,EAAaz1B,GAASgD,GAAoB,KACvDo/G,EAAW3sF,EACb5lC,KAAKiZ,MAAM1L,EAAO,GAAK4F,EAAiB,IAAMG,GAAc,EAC5D,EAMJ,MAAO,CAJYsyB,EACf5lC,KAAKuT,OAAOhG,EAAO,GAAK4F,EAAiB,IAAMG,GAC/C,EAEgBi/G,EAAUj/G,EAChC,CF2X+CouI,CACzClwG,EACAx9C,KAAK0sG,YAIP1sG,KAAKo+H,aAAa5gF,GAAY,EAAOg4F,EAAYjX,EAAUj/G,GAC3Dtf,KAAKykJ,OAAOtC,aACV3kG,EACAx9C,KAAK2kJ,wBACL3kJ,KAAK4kJ,0BAGH5kJ,KAAKgsJ,uBAEPhsJ,KAAKo+H,aAAa5gF,GAAY,EAAMg4F,EAAYjX,EAAUj/G,GAC1Dtf,KAAKwsJ,iBAAiB9G,mBAGxB1lJ,KAAKmuG,WAAW+pC,EAAI16F,GAGpB,OADex9C,KAAKykJ,OAAOtD,WAE5B,CAOD,oBAAA6D,CAAqBxnG,GACnB,MAAM9P,EAAQ1tC,KAAK0sG,WACb4xB,EAAe5wF,EAAMuP,YACrB1D,EAAYiE,EAAWjE,UACvBo0G,GACHnwG,EAAWonB,UAAU51B,MACrBwO,EAAWonB,UAAU51B,IAClBmhE,GAAiB5tG,GAAOvC,KAAKqgE,gBAAiB7iB,EAAWjkC,QACzDq0I,EAAgB5tJ,KAAKyrJ,gBAAkBntB,EAAax2H,cAM1D,GAJI8lJ,IACF5tJ,KAAKyrJ,gBAAkBntB,EAAax2H,eAGlC6lJ,IAAkBx9C,GAAiBy9C,GAAgB,CACrD,MAAM1uI,EAAaq6B,EAAUr6B,WACvBxC,EAAa68B,EAAU78B,WAEvBs+G,EACJttF,aAAiBmgH,GAAangH,EAAM6xF,kBAAoB,EACpDhmH,EAASG,GAAO8jC,EAAWjkC,OAAQyhH,EAAet+G,GACxD4hH,EAAa7/B,aAAallF,EAAQmD,EAAYwC,GAE9Clf,KAAK8tJ,gBAAgBtwG,GACrBx9C,KAAKqgE,gBAAkB7iB,EAAWjkC,OAAOzV,OAC1C,CAUD,OARA9D,KAAKykJ,OAAOrH,WAAWp9I,KAAK+rJ,SAAUvuG,GACtCx9C,KAAKykJ,OAAOzD,YAAYxjG,GAGxBx9C,KAAKykJ,OAAOhL,WAAWz5I,KAAK0rJ,iBAC5B1rJ,KAAKykJ,OAAOhL,WAAWz5I,KAAK4rJ,gBAC5B5rJ,KAAKykJ,OAAOT,iBAAiBhkJ,KAAKu8I,aAE3B,CACR,CAOD,eAAAuR,CAAgBtwG,GAEd,MAAMqvG,E/N5bD,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,G+N6brB7sJ,KAAKykJ,OAAOhB,wBAAwBjmG,EAAYqvG,GAEhD,MAAMhhI,EAAiBE,KAGjBgiI,GADwB/tJ,KAAKgsJ,qBAAuB,EAAI,GAEpChsJ,KAAKksJ,iBAAiB/qJ,OAC1C6sJ,EAAYD,EAA0B/tJ,KAAKmtJ,cASjD,IAAIc,EAAct5I,EAPf3U,KAAKusJ,qBACNvsJ,KAAKusJ,oBAAoBprJ,SAAW6sJ,IAEpChuJ,KAAKusJ,oBAAsB,IAAI95I,aAAau7I,IAK9C,MAAME,EAAY,GACZC,EAAW,GACjB,IAAInyB,GAAO,EACX,IAAK,MAAMoyB,KAAcpuJ,KAAKktJ,cAK5B,GAJAe,EAAejuJ,KAAKktJ,cAAckB,GAClCz5I,EACEs5I,EACR,SACWt5I,GAAmC,UAAvBA,EAAS6Z,UAA1B,CAGA,GAAI3C,EAAgB,CAClB,MAAMwiI,EAAapiI,GACjBtX,EAAS0a,qBACTmuB,EAAWjE,UAAUr6B,YAEvBgvI,EAAU,GAAKG,EAAW,GAC1BH,EAAU,GAAKG,EAAW,EAClC,MACQH,EAAU,GAAKv5I,EAAS0a,qBAAqB,GAC7C6+H,EAAU,GAAKv5I,EAAS0a,qBAAqB,GAS/C,GAPA3Q,GAAemuI,EAAqBqB,GAEpCluJ,KAAKusJ,sBAAsBvwB,GAAOkyB,EAAU,GAC5CluJ,KAAKusJ,sBAAsBvwB,GAAOkyB,EAAU,GAIxCluJ,KAAKgsJ,qBAAsB,CAC7B,MAAMsC,EAAWlD,GAAcpvB,EAAM,EAAGmyB,GACxCnuJ,KAAKusJ,sBAAsBvwB,GAAOsyB,EAAS,GAC3CtuJ,KAAKusJ,sBAAsBvwB,GAAOsyB,EAAS,GAC3CtuJ,KAAKusJ,sBAAsBvwB,GAAOsyB,EAAS,GAC3CtuJ,KAAKusJ,sBAAsBvwB,GAAOsyB,EAAS,GAC3CtuJ,KAAKusJ,sBAAsBvwB,GAAO/xF,OAAOmkH,EAC1C,CAGD,IAAK,IAAIhqI,EAAI,EAAGA,EAAIpkB,KAAKksJ,iBAAiB/qJ,OAAQijB,IAAK,CACrD,MAAM/f,EAAQrE,KAAKksJ,iBAAiB9nI,GAAGzI,SACrCsyI,EAAaxuG,QACbwuG,EAAap5I,YAEf7U,KAAKusJ,sBAAsBvwB,GAAO33H,CACnC,CAnCA,CAuCH,MAAMwzB,EAAU,CACdtqB,KAAMvN,KAAKysJ,WACX1sJ,KAAM+lJ,GACNmH,mBAAoBjtJ,KAAKusJ,oBAAoB7yI,OAC7C60I,qBAAsBR,EAA0B,GAGlDl2H,EAA6B,oBAAIg1H,EACjC7sJ,KAAKikE,OAAQ,EACbjkE,KAAK0sJ,QAAQx3C,YAAYr9E,EAAS,CAAC73B,KAAKusJ,oBAAoB7yI,SAC5D1Z,KAAKusJ,oBAAsB,IAC5B,CAWD,0BAAAntG,CACEjoC,EACAqmC,EACA6B,EACA1jC,EACAmkC,GAMA,GAJA9rC,GACEhU,KAAKgsJ,qBACL,4JAEGhsJ,KAAKusJ,sBAAwBvsJ,KAAKgsJ,qBACrC,OAGF,MAAM3uG,EAAQ3+B,GACZ8+B,EAAW0B,2BACX/nC,EAAWrT,SAGP3B,EAAOnC,KAAKwsJ,iBAAiB3G,UAAUxoG,EAAM,GAAK,EAAGA,EAAM,GAAK,GAEhEp6C,EDpLH,SAAuB8mC,GAC5B,IAAIx8B,EAAK,EACT,MAAM89I,EAAQ,IACRmD,EAAOnD,IAKb,OAJA99I,GAAMvB,KAAKgZ,MAAM+kB,EAAM,GAAKshH,EAAQA,EAAQA,EAAQmD,GACpDjhJ,GAAMvB,KAAKgZ,MAAM+kB,EAAM,GAAKshH,EAAQA,EAAQmD,GAC5CjhJ,GAAMvB,KAAKgZ,MAAM+kB,EAAM,GAAKshH,EAAQmD,GACpCjhJ,GAAMvB,KAAKgZ,MAAM+kB,EAAM,GAAKykH,GACrBjhJ,CACT,CC2KkBkhJ,CADA,CAACtsJ,EAAK,GAAK,IAAKA,EAAK,GAAK,IAAKA,EAAK,GAAK,IAAKA,EAAK,GAAK,MAEhEyqC,EAAU5sC,KAAKusJ,oBAAoBtpJ,GACnCwpF,EAAMzgF,KAAKuT,MAAMqtB,GAASj0B,WAG1B8mC,EADSz/C,KAAK0sG,WAAWzvD,YACRihD,gBAAgBzR,GACvC,OAAIhtC,EACK9jC,EAAS8jC,EAASz/C,KAAK0sG,WAAY,WAD5C,CAID,CAUD,YAAA0xB,CAAa5gF,EAAYkxG,EAAiBlZ,EAAYjX,EAAUj/G,GAC9D,IAAIk/G,EAAQgX,EAEZx1I,KAAKykJ,OAAOrH,WAAWp9I,KAAK+rJ,SAAUvuG,GAElCkxG,IACF1uJ,KAAKwsJ,iBAAiBpgH,QAAQ,CAC5BpgC,KAAKuT,MAAMi+B,EAAW/pC,KAAK,GAAK,GAChCzH,KAAKuT,MAAMi+B,EAAW/pC,KAAK,GAAK,KAElCzT,KAAKykJ,OAAO/C,0BACVlkG,EACAx9C,KAAKwsJ,kBACL,IAIJxsJ,KAAKykJ,OAAOhL,WAAWz5I,KAAK0rJ,iBAC5B1rJ,KAAKykJ,OAAOhL,WAAWz5I,KAAK4rJ,gBAC5B5rJ,KAAKykJ,OAAOT,iBAAiBhkJ,KAAKu8I,YAElC,EAAG,CACDv8I,KAAKykJ,OAAOhB,wBAAwBjmG,EAAYx9C,KAAKosJ,mBACrDuC,GAAmB3uJ,KAAKosJ,kBAAmB5tB,EAAQl/G,EAAY,GAC/Do8D,GAAkB17E,KAAKosJ,kBAAmBpsJ,KAAKssJ,wBAC/CtsJ,KAAKykJ,OAAO9G,cAAcngG,GAC1Bx9C,KAAKykJ,OAAOlC,yBAAyBmM,GACrC,MAAME,EAAc5uJ,KAAK4rJ,eAAel4I,UACxC1T,KAAKykJ,OAAO1C,aAAa,EAAG6M,EAClC,SAAepwB,EAAQD,EACpB,CAKD,eAAA99H,GACET,KAAK0sJ,QAAQv3C,YACbn1G,KAAKqsG,OAAS,KACdrsG,KAAKotJ,kBAAkBliJ,SAAQ,SAAU3D,GACvCD,EAAcC,EACpB,IACIvH,KAAKotJ,kBAAoB,KACzBnoJ,MAAMxE,iBACP,GG7lBH,IAAAouJ,GA7CA,MAKE,WAAA/uJ,CAAY2V,EAAMtT,GAChBnC,KAAKyV,KAAOA,EACZzV,KAAKmC,KAAOA,EAMZnC,KAAKqlJ,SAAW,IACjB,CAMD,UAAAvD,CAAW5J,GACT,IAAKl4I,KAAKqlJ,SAAU,CAClB,MAAMrH,EAAU9F,EAAGI,gBACnBJ,EAAGgD,YAAYhD,EAAGiD,WAAY6C,GAC9B9F,EAAGmD,cAAcnD,EAAGiD,WAAYjD,EAAGsD,eAAgBtD,EAAGuD,eACtDvD,EAAGmD,cAAcnD,EAAGiD,WAAYjD,EAAGwD,eAAgBxD,EAAGuD,eACtDvD,EAAGmD,cAAcnD,EAAGiD,WAAYjD,EAAGoD,mBAAoBpD,EAAG4W,SAC1D5W,EAAGmD,cAAcnD,EAAGiD,WAAYjD,EAAG6W,mBAAoB7W,EAAG4W,SAC1D5W,EAAGkD,WACDlD,EAAGiD,WACH,EACAjD,EAAG8C,KACHh7I,KAAKmC,KAAKhB,OAAS,EACnB,EACA,EACA+2I,EAAG8C,KACH9C,EAAG+C,cACHj7I,KAAKmC,MAEPnC,KAAKqlJ,SAAWrH,CACjB,CACD,OAAOh+I,KAAKqlJ,QACb,GCtBI,MAAM2J,GAAW,CCItBC,eAAgB,kBAChBC,iBAAkB,oBAClBC,MAAO,UACPC,cAAe,iBACfC,eAAgB,kBAChBlgH,WAAY,eACZmgH,KAAM,SACNC,aAAc,gBACdC,kBAAmB,qBACnBC,uBAAwB,wBDXxBC,mBAAoB,iBACpBC,oBAAqB,sBACrBC,qBAAsB,uBACtBC,mBAAoB,sBACpBC,iBAAkB,mBAClBC,iBAAkB,oBEIb,SAASC,GAAanwH,GAC3B,MAAMgK,EAAIhK,EAAElnB,WACZ,OAAOkxB,EAAEnkC,SAAS,KAAOmkC,EAAIA,EAAI,IACnC,CAOO,SAASomH,GAAYxlJ,GAC1B,GAAIA,EAAMtJ,OAAS,GAAKsJ,EAAMtJ,OAAS,EACrC,MAAM,IAAIoH,MACR,kEAGJ,MAAO,MAAMkC,EAAMtJ,UAAUsJ,EAAMmgC,IAAIolH,IAAcn3I,KAAK,QAC5D,CASO,SAASq3I,GAAYnmH,GAC1B,MAAMt/B,EAAQihC,GAAQ3B,GAChBO,EAAQ7/B,EAAMtJ,OAAS,EAAIsJ,EAAM,GAAK,EAE5C,OAAOwlJ,GAAY,CAChBxlJ,EAAM,GAAK,IAAO6/B,EAClB7/B,EAAM,GAAK,IAAO6/B,EAClB7/B,EAAM,GAAK,IAAO6/B,EACnBA,GAEJ,CAGA,MAAM6lH,GAAmB,CAAA,EACzB,IAAIC,GAAuB,EAOpB,SAASC,GAA0BC,GAIxC,OAHMA,KAAUH,KACdA,GAAiBG,GAAUF,MAEtBD,GAAiBG,EAC1B,CASO,SAASC,GAAaD,GAC3B,OAAON,GAAaK,GAA0BC,GAChD,CAOO,SAASE,GAAuBC,GACrC,MAAO,SAAWA,CACpB,CAqDA,MAAMC,GAAsB,eAEfC,GAAwB,oBA0CrC,SAASC,GAAe7tI,GACtB,MAAO,CAAC7S,EAAS82H,EAAYjnI,KAC3B,MAAMoB,EAAS6lI,EAAWh+G,KAAK7nB,OACzB6nB,EAAO,IAAI3mB,MAAMlB,GACvB,IAAK,IAAIS,EAAI,EAAGA,EAAIT,IAAUS,EAC5BonB,EAAKpnB,GAAKivJ,GAAQ7pB,EAAWh+G,KAAKpnB,GAAI7B,EAAMmQ,GAE9C,OAAO6S,EAAOiG,EAAM9Y,EAAQ,CAEhC,CAKA,MAAM4gJ,GAAY,CAChB,CAAChuB,GAAIC,KAAM,CAAC7yH,EAAS82H,KACnB,MACM+pB,EAD6C/pB,EAAWh+G,KAAK,GACb,MACnC+nI,KAAY7gJ,EAAQ2E,aAErC3E,EAAQ2E,WAAWk8I,GAAY,CAC7Bt7I,KAAMs7I,EACNhxJ,KAAMinI,EAAWjnI,OAIrB,OADemQ,EAAQ8gJ,iBAAmB,UAAY,WACtCD,CAAQ,EAE1B,CAACjuB,GAAII,cAAe,CAAChzH,EAAS82H,EAAYjnI,KACxC,MAAMgxJ,EAAW,eACXE,EAAet8I,IACnB,MAAM5U,EAAO4U,EAAS6Z,UACtB,OAAQzuB,GACN,IAAK,QACL,IAAK,aACL,IAAK,UACH,OAAOA,EACT,IAAK,aACL,IAAK,kBACL,IAAK,eACH,OAAOA,EAAK61H,UAAU,GACxB,IAAK,SACH,MAAO,UACT,IAAK,qBACH,OAAOq7B,EAAYt8I,EAAS0mE,gBAAgB,IAE/C,EAEgB01E,KAAY7gJ,EAAQ2E,aAErC3E,EAAQ2E,WAAWk8I,GAAY,CAC7Bt7I,KAAMs7I,EACNhxJ,KAAMuhI,GACNgI,UAAY7pF,GACHwxG,EAAYxxG,EAAQxqC,iBAKjC,OADe/E,EAAQ8gJ,iBAAmB,UAAY,WACtCD,CAAQ,EAE1B,CAACjuB,GAAIE,KAAM,CAAC9yH,EAAS82H,KACnB,MACMrB,EAD6CqB,EAAWh+G,KAAK,GACd,MAQrD,OAPmB28G,KAAWz1H,EAAQwyH,YAEpCxyH,EAAQwyH,UAAUiD,GAAW,CAC3BlwH,KAAMkwH,EACN5lI,KAAMinI,EAAWjnI,OAGdywJ,GAAuB7qB,EAAQ,EAExC,CAAC7C,GAAIQ,YAAa,IAAM,eACxB,CAACR,GAAIhvE,MAAO,IAAM,SAClB,CAACgvE,GAAIS,MAAO,IAAM,SAClB,CAACT,GAAIK,KAAMytB,IAAgBM,GAAiB,IAAIA,EAAar4I,KAAK,aAClE,CAACiqH,GAAIM,KAAMwtB,IAAgBM,GAAiB,IAAIA,EAAar4I,KAAK,aAClE,CAACiqH,GAAIO,KAAMutB,IAAe,EAAEvsJ,KAAW,KAAKA,OAC5C,CAACy+H,GAAIU,OAAQotB,IACX,EAAEO,EAAYC,KAAiB,IAAID,QAAiBC,OAEtD,CAACtuB,GAAIW,UAAWmtB,IACd,EAAEO,EAAYC,KAAiB,IAAID,QAAiBC,OAEtD,CAACtuB,GAAIY,aAAcktB,IACjB,EAAEO,EAAYC,KAAiB,IAAID,OAAgBC,OAErD,CAACtuB,GAAIa,sBAAuBitB,IAC1B,EAAEO,EAAYC,KAAiB,IAAID,QAAiBC,OAEtD,CAACtuB,GAAIc,UAAWgtB,IACd,EAAEO,EAAYC,KAAiB,IAAID,OAAgBC,OAErD,CAACtuB,GAAIe,mBAAoB+sB,IACvB,EAAEO,EAAYC,KAAiB,IAAID,QAAiBC,OAEtD,CAACtuB,GAAIgB,UAAW8sB,IACbM,GAAiB,IAAIA,EAAar4I,KAAK,YAE1C,CAACiqH,GAAIiB,QAAS6sB,IACZ,EAAEO,EAAYC,KAAiB,IAAID,OAAgBC,OAErD,CAACtuB,GAAIkB,KAAM4sB,IAAgBM,GAAiB,IAAIA,EAAar4I,KAAK,YAClE,CAACiqH,GAAImB,UAAW2sB,IACd,EAAEO,EAAYC,KAAiB,IAAID,OAAgBC,OAErD,CAACtuB,GAAIoB,OAAQ0sB,IACX,EAAEvsJ,EAAOmX,EAAKC,KAAS,SAASpX,MAAUmX,MAAQC,OAEpD,CAACqnH,GAAIqB,KAAMysB,IAAe,EAAEvsJ,EAAOsgB,KAAY,OAAOtgB,MAAUsgB,OAChE,CAACm+G,GAAIsB,KAAMwsB,IAAe,EAAEvsJ,EAAOysC,KAAW,OAAOzsC,MAAUysC,OAC/D,CAACgyF,GAAIuB,KAAMusB,IAAe,EAAEvsJ,KAAW,OAAOA,OAC9C,CAACy+H,GAAIwB,OAAQssB,IAAe,EAAEvsJ,KAAW,SAASA,OAClD,CAACy+H,GAAIyB,MAAOqsB,IAAe,EAAEvsJ,KAAW,QAAQA,OAChD,CAACy+H,GAAI0B,OAAQosB,IAAe,EAAEvsJ,KAAW,SAASA,aAClD,CAACy+H,GAAI2B,KAAMmsB,IAAe,EAAEvsJ,KAAW,OAAOA,OAC9C,CAACy+H,GAAI4B,KAAMksB,IAAe,EAAEvsJ,KAAW,OAAOA,OAC9C,CAACy+H,GAAI6B,MAAOisB,IAAe,EAAEO,EAAYC,UAChB5qJ,IAAhB4qJ,EACH,QAAQD,MAAeC,KACvB,QAAQD,OAEd,CAACruB,GAAI8B,MAAOgsB,IAAe,EAAEvsJ,KAAW,QAAQA,OAChD,CAACy+H,GAAI+B,OAAQ+rB,IAAgBM,IAC3B,MAAMpuI,EAAQouI,EAAa,GACrB9qB,EAAW8qB,EAAaA,EAAa/vJ,OAAS,GACpD,IAAIqvC,EAAS,KACb,IAAK,IAAI5uC,EAAIsvJ,EAAa/vJ,OAAS,EAAGS,GAAK,EAAGA,GAAK,EAAG,CAGpD4uC,EAAS,IAAI1tB,QAFCouI,EAAatvJ,QACZsvJ,EAAatvJ,EAAI,QACgB4uC,GAAU41F,IAC3D,CACD,OAAO51F,CAAM,IAEf,CAACsyF,GAAIgC,SAAU8rB,IACb,EAAEvsJ,EAAOmX,EAAKC,KAAS,IAAIpX,QAAYmX,QAAUnX,QAAYoX,OAE/D,CAACqnH,GAAIiC,aAAc6rB,IAAe,EAAES,EAAUvuI,KAAUouI,MACtD,IAAI1gH,EAAS,GACb,IAAK,IAAI5uC,EAAI,EAAGA,EAAIsvJ,EAAa/vJ,OAAS,EAAGS,GAAK,EAAG,CACnD,MAAM0vJ,EAAQJ,EAAatvJ,GACrB+mI,EAAUn4F,GAAU0gH,EAAatvJ,EAAI,GACrC2vJ,EAAQL,EAAatvJ,EAAI,GACzBinI,EAAUqoB,EAAatvJ,EAAI,GACjC,IAAIouC,EAEFA,EADEqhH,IAAarB,GAAa,GACpB,IAAIltI,OAAWwuI,SAAaC,OAAWD,KAEvC,QAAQD,OAAcvuI,OAAWwuI,qBAAyBD,OAAcE,OAAWD,aAE7F9gH,EAAS,OAAOm4F,MAAYE,YAAkB74F,eAC/C,CACD,OAAOQ,CAAM,IAEf,CAACsyF,GAAIkC,MAAO4rB,IAAgBM,IAC1B,MAAM9qB,EAAW8qB,EAAaA,EAAa/vJ,OAAS,GACpD,IAAIqvC,EAAS,KACb,IAAK,IAAI5uC,EAAIsvJ,EAAa/vJ,OAAS,EAAGS,GAAK,EAAGA,GAAK,EAAG,CAGpD4uC,EAAS,IAFS0gH,EAAatvJ,QAChBsvJ,EAAatvJ,EAAI,QACQ4uC,GAAU41F,IACnD,CACD,OAAO51F,CAAM,IAEf,CAACsyF,GAAImC,IAAK2rB,IAAe,EAAEhwJ,KAAWD,GAAWuP,KAC/C,MAAMshJ,EAxVV,SAAqChvB,EAAUtyH,GAC7C,MAAO,YAAYsyH,KAAY97H,OAAOC,KAAKuJ,EAAQuhJ,WAAWtwJ,QAChE,CAsVqBuwJ,CAA4B,KAAMxhJ,GAC7CyhJ,EAAQ,GACd,IAAK,IAAI/vJ,EAAI,EAAGA,EAAIjB,EAASQ,OAAQS,GAAK,EACxC+vJ,EAAMhsJ,KAAK,uBAAuBhF,EAASiB,wBAM7C,OAJAsO,EAAQuhJ,UAAUD,GAAY,QAAQA,0BACxCG,EAAM94I,KAAK,4BAGF,GAAG24I,KAAY5wJ,IAAS,IAEjC,CAACkiI,GAAIzgI,OAAQuuJ,IACV5nI,GAAS,MAAMA,EAAK7nB,UAAU6nB,EAAKnQ,KAAK,WAE3C,CAACiqH,GAAIoC,OAAQ0rB,IAAgBM,IAC3B,MAAM/yH,EAAM+yH,EAAaptJ,MAAM,EAAG,GAAG8mC,KAAKb,GAAU,GAAGA,cACvD,GAA4B,IAAxBmnH,EAAa/vJ,OACf,MAAO,QAAQg9B,EAAItlB,KAAK,cAG1B,MAAO,IADOq4I,EAAa,aACA/yH,EAAItlB,KAAK,cAAc,IAEpD,CAACiqH,GAAIsC,MAAOwrB,IAAe,EAAEgB,EAAMC,EAASC,GAAU5hJ,KACpD,KAAMwgJ,MAAuBxgJ,EAAQuhJ,WAAY,CAC/C,IAAIM,EAAW,GACf,MAAM3wD,EAAYlxF,EAAQkxF,WAAa,EACvC,IAAK,IAAIx/F,EAAI,EAAGA,EAAIw/F,EAAWx/F,IAAK,CAClC,MAAMowJ,EAAahmJ,KAAKuT,MAAM3d,EAAI,GAClC,IAAIqwJ,EAAYrwJ,EAAI,EAChBA,IAAMw/F,EAAY,GAAmB,IAAd6wD,IAEzBA,EAAY,GAGdF,GAAY,iBAAiBnwJ,EAAI,gCADb,GAAGotJ,GAASU,sBAAsBsC,wCAEQC,YAG/D,CAED/hJ,EAAQuhJ,UACNf,IACE,0FACe1B,GAASW,gDACTX,GAASY,0BAChCmC,MAEG,CAED,MAAO,GAAGrB,MAAuBkB,MAASC,GAAW,UACnDC,GAAW,QACV,IAEL,CAAChvB,GAAIuC,SAAU,CAACn1H,EAAS82H,KACvB,MAAO/jI,KAAU0jI,GAAUK,EAAWh+G,KAChCkpI,EAAYvrB,EAAOxlI,OACnBgxJ,EAAU,IAAI5/I,WAAuB,EAAZ2/I,GAC/B,IAAK,IAAItwJ,EAAI,EAAGA,EAAI+kI,EAAOxlI,OAAQS,IAAK,CACtC,MAGMmoC,EAAQ2B,GAFsBi7F,EAAO/kI,GACjD,OAEYkZ,EAAa,EAAJlZ,EACfuwJ,EAAQr3I,GAAUivB,EAAM,GACxBooH,EAAQr3I,EAAS,GAAKivB,EAAM,GAC5BooH,EAAQr3I,EAAS,GAAKivB,EAAM,GAC5BooH,EAAQr3I,EAAS,GAAgB,IAAXivB,EAAM,EAC7B,CACI75B,EAAQkiJ,kBACXliJ,EAAQkiJ,gBAAkB,IAE5B,MAAMC,EAAc,GAAG1B,MAAyBzgJ,EAAQkiJ,gBAAgBjxJ,UAClEmxJ,EAAiB,IAAIC,GAAeF,EAAaF,GACvDjiJ,EAAQkiJ,gBAAgBzsJ,KAAK2sJ,GAE7B,MAAO,aAAaD,YADExB,GAAQ5tJ,EAAOo+H,GAAYnxH,eACmBgiJ,YAAoB,GAc5F,SAASrB,GAAQ7pB,EAAYI,EAAYl3H,GAEvC,GAAI82H,aAAsBzE,GAAgB,CACxC,MAAMiwB,EAAW1B,GAAU9pB,EAAWxE,UACtC,QAAiBh8H,IAAbgsJ,EACF,MAAM,IAAIjqJ,MACR,0CAA0C+kE,KAAKg5D,UAC7CU,EAAWxE,aAIjB,OAAOgwB,EAAStiJ,EAAS82H,EAAYI,EACtC,CAED,IAAKJ,EAAWjnI,KAAOshI,IAAc,EACnC,OAAO2uB,GAAoChpB,EAAgB,OAG7D,IAAKA,EAAWjnI,KAAOqhI,IAAe,EACpC,OAAO4F,EAAW3iI,MAAMsU,WAG1B,IAAKquH,EAAWjnI,KAAOuhI,IAAc,EACnC,OAAOivB,GAAavpB,EAAW3iI,MAAMsU,YAGvC,IAAKquH,EAAWjnI,KAAOwhI,IAAa,EAClC,OAAO2uB,GACkClpB,EAAgB,OAI3D,IAAKA,EAAWjnI,KAAOyhI,IAAmB,EACxC,OAAOyuB,GAA0CjpB,EAAgB,OAGnE,MAAM,IAAIz+H,MACR,yBAAyBy+H,EAAW3iI,wBAAwBu9H,GAC1DwF,MAGN,CC5eO,MAAMqrB,GAAgB,uxBA6BvBC,G1C6OG,CACL,aAAc,wBACd,eAAgB,UAChB,eAAgB,KAChB,gBAAiB,EACjB,oBAAqB,wBACrB,sBAAuB,KACvB,sBAAuB,W0C5NpB,MAAMC,GACX,WAAA7yJ,GAMEE,KAAKk6I,UAAY,GAOjBl6I,KAAK4yJ,YAAc,GAOnB5yJ,KAAK6yJ,UAAY,GAMjB7yJ,KAAK8yJ,YAAa,EAMlB9yJ,KAAK+yJ,sBAAwB,QAAQ/C,GACnC0C,GAAc,uBACT1C,GAAoD,GAAvC0C,GAAc,2BAMlC1yJ,KAAKgzJ,0BAA4B,MAMjChzJ,KAAKizJ,wBAA0B,YAM/BjzJ,KAAKkzJ,uBAAyBhD,GACLwC,GAAc,sBAOvC1yJ,KAAKmzJ,oBAAsB,2BAM3BnzJ,KAAKozJ,mBAAqB,QAM1BpzJ,KAAKqzJ,uBAAwB,EAM7BrzJ,KAAKszJ,YAAa,EAMlBtzJ,KAAKuzJ,uBAAyBvD,GAAa0C,GAAc,iBAMzD1yJ,KAAKwzJ,uBAAyBtD,GACLwC,GAAc,iBAMvC1yJ,KAAKyzJ,wBAA0B,KAK/BzzJ,KAAK0zJ,qBAAuBnD,GAAa,SAKzCvwJ,KAAK2zJ,sBAAwBpD,GAAa,SAK1CvwJ,KAAK4zJ,4BAA8B,MAKnC5zJ,KAAK6zJ,+BAAiC,SAMtC7zJ,KAAK8zJ,UAAW,EAMhB9zJ,KAAK+zJ,qBAAuB7D,GACHwC,GAAc,eAOvC1yJ,KAAKg0J,uBAAyB,GAM9Bh0J,KAAKi0J,yBAA2B,EACjC,CAQD,UAAAC,CAAWz+I,GAET,OADAzV,KAAKk6I,UAAUv0I,KAAK8P,GACbzV,IACR,CAQD,YAAAm0J,CAAa1+I,GAEX,OADAzV,KAAK4yJ,YAAYjtJ,KAAK8P,GACfzV,IACR,CAUD,UAAAo0J,CAAW3+I,EAAM1V,EAAMinI,GAMrB,OALAhnI,KAAK6yJ,UAAUltJ,KAAK,CAClB8P,KAAMA,EACN1V,KAAMA,EACNinI,WAAYA,IAEPhnI,IACR,CASD,uBAAAq0J,CAAwBrtB,GAGtB,OAFAhnI,KAAK8yJ,YAAa,EAClB9yJ,KAAK+yJ,sBAAwB/rB,EACtBhnI,IACR,CAKD,uBAAAs0J,GACE,OAAOt0J,KAAK+yJ,qBACb,CASD,2BAAAwB,CAA4BvtB,GAE1B,OADAhnI,KAAKgzJ,0BAA4BhsB,EAC1BhnI,IACR,CASD,yBAAAw0J,CAA0BxtB,GAExB,OADAhnI,KAAKizJ,wBAA0BjsB,EACxBhnI,IACR,CAKD,yBAAAy0J,GACE,OAAOz0J,KAAKizJ,uBACb,CASD,wBAAAyB,CAAyB1tB,GAGvB,OAFAhnI,KAAK8yJ,YAAa,EAClB9yJ,KAAKkzJ,uBAAyBlsB,EACvBhnI,IACR,CAKD,wBAAA20J,GACE,OAAO30J,KAAKkzJ,sBACb,CASD,8BAAA0B,CAA+B5tB,GAE7B,OADAhnI,KAAKmzJ,oBAAsBnsB,EACpBhnI,IACR,CAWD,4BAAA60J,CAA6B7tB,GAE3B,OADAhnI,KAAKozJ,mBAAqBpsB,EACnBhnI,IACR,CAKD,4BAAA80J,GACE,OAAO90J,KAAKozJ,kBACb,CAQD,uBAAA2B,CAAwB3zC,GAEtB,OADAphH,KAAKqzJ,sBAAwBjyC,EACtBphH,IACR,CAMD,wBAAAg1J,CAAyBhuB,GAGvB,OAFAhnI,KAAKszJ,YAAa,EAClBtzJ,KAAKuzJ,uBAAyBvsB,EACvBhnI,IACR,CAMD,wBAAAi1J,CAAyBjuB,GAGvB,OAFAhnI,KAAKszJ,YAAa,EAClBtzJ,KAAKwzJ,uBAAyBxsB,EACvBhnI,IACR,CAKD,wBAAAk1J,GACE,OAAOl1J,KAAKwzJ,sBACb,CAMD,yBAAA2B,CAA0BnuB,GAExB,OADAhnI,KAAKyzJ,wBAA0BzsB,EACxBhnI,IACR,CAMD,sBAAAo1J,CAAuBpuB,GAErB,OADAhnI,KAAK0zJ,qBAAuB1sB,EACrBhnI,IACR,CAMD,uBAAAq1J,CAAwBruB,GAEtB,OADAhnI,KAAK2zJ,sBAAwB3sB,EACtBhnI,IACR,CAMD,6BAAAs1J,CAA8BtuB,GAE5B,OADAhnI,KAAK4zJ,4BAA8B5sB,EAC5BhnI,IACR,CAOD,gCAAAu1J,CAAiCvuB,GAE/B,OADAhnI,KAAK6zJ,+BAAiC7sB,EAC/BhnI,IACR,CAMD,sBAAAw1J,CAAuBxuB,GAGrB,OAFAhnI,KAAK8zJ,UAAW,EAChB9zJ,KAAK+zJ,qBAAuB/sB,EACrBhnI,IACR,CAKD,sBAAAy1J,GACE,OAAOz1J,KAAK+zJ,oBACb,CAED,uBAAA2B,CAAwBv1I,GAClBngB,KAAKg0J,uBAAuBtuJ,SAASya,IAGzCngB,KAAKg0J,uBAAuBruJ,KAAKwa,EAClC,CACD,yBAAAw1I,CAA0Bx1I,GACpBngB,KAAKi0J,yBAAyBvuJ,SAASya,IAG3CngB,KAAKi0J,yBAAyBtuJ,KAAKwa,EACpC,CAMD,qBAAAy1I,GACE,OAAK51J,KAAK8yJ,WAIH,GAAGL,OACZzyJ,KAAKk6I,UACJtvG,KAAI,SAAUmzG,GACb,MAAO,WAAaA,EAAU,GAClC,IACGllI,KAAK,4FAIN7Y,KAAK4yJ,YACJhoH,KAAI,SAAUuhH,GACb,MAAO,aAAeA,EAAY,GACtC,IACGtzI,KAAK,uKAON7Y,KAAK6yJ,UACJjoH,KAAI,SAAUirH,GACb,MAAO,WAAaA,EAAQ91J,KAAO,IAAM81J,EAAQpgJ,KAAO,GAC5D,IACGoD,KAAK,UACN7Y,KAAKg0J,uBAAuBn7I,KAAK,2PAWhB7Y,KAAK+yJ,4FAEE/yJ,KAAKizJ,8UAWbjzJ,KAAKgzJ,iCACnBhzJ,KAAKqzJ,sBAAwB,uBAAyB,wSAMtCrzJ,KAAKmzJ,gdAUvBnzJ,KAAK6yJ,UACJjoH,KAAI,SAAUirH,GACb,MAAO,KAAOA,EAAQpgJ,KAAO,MAAQogJ,EAAQ7uB,WAAa,GAC9D,IACGnuH,KAAK,WAzEK,IA2EV,CAMD,uBAAAi9I,GACE,OAAK91J,KAAK8yJ,WAIH,GAAGL,OACZzyJ,KAAKk6I,UACJtvG,KAAI,SAAUmzG,GACb,MAAO,WAAaA,EAAU,GAClC,IACGllI,KAAK,4IAMN7Y,KAAK6yJ,UACJjoH,KAAI,SAAUirH,GACb,MAAO,WAAaA,EAAQ91J,KAAO,IAAM81J,EAAQpgJ,KAAO,GAC5D,IACGoD,KAAK,UACN7Y,KAAKi0J,yBAAyBp7I,KAAK,qCAG7B7Y,KAAKozJ,wRAKMpzJ,KAAKkzJ,6IA3BX,IAiCV,CAMD,qBAAA6C,GACE,OAAK/1J,KAAKszJ,WAIH,GAAGb,OACZzyJ,KAAKk6I,UACJtvG,KAAI,SAAUmzG,GACb,MAAO,WAAaA,EAAU,GAClC,IACGllI,KAAK,oPASN7Y,KAAK4yJ,YACJhoH,KAAI,SAAUuhH,GACb,MAAO,aAAeA,EAAY,GACtC,IACGtzI,KAAK,iNAQN7Y,KAAK6yJ,UACJjoH,KAAI,SAAUirH,GACb,MAAO,WAAaA,EAAQ91J,KAAO,IAAM81J,EAAQpgJ,KAAO,GAC5D,IACGoD,KAAK,UACN7Y,KAAKg0J,uBAAuBn7I,KAAK,q/CAwCb7Y,KAAKuzJ,mDACFvzJ,KAAKyzJ,o3CA8B5BzzJ,KAAK6yJ,UACJjoH,KAAI,SAAUirH,GACb,MAAO,KAAOA,EAAQpgJ,KAAO,MAAQogJ,EAAQ7uB,WAAa,GAC9D,IACGnuH,KAAK,WA7GK,IA+GV,CAOD,uBAAAm9I,GACE,OAAKh2J,KAAKszJ,WAIH,GAAGb,OACZzyJ,KAAKk6I,UACJtvG,KAAI,SAAUmzG,GACb,MAAO,WAAaA,EAAU,GAClC,IACGllI,KAAK,iNAQN7Y,KAAK6yJ,UACJjoH,KAAI,SAAUirH,GACb,MAAO,WAAaA,EAAQ91J,KAAO,IAAM81J,EAAQpgJ,KAAO,GAC5D,IACGoD,KAAK,UACN7Y,KAAKi0J,yBAAyBp7I,KAAK,49DAqDd7Y,KAAK4zJ,2QAQRrD,GAAa,4FAEPA,GAAa,iRAOnBA,GAAa,0GAENA,GAAa,y4BA4BhCvwJ,KAAKozJ,2jBASIpzJ,KAAKwzJ,8DACFxzJ,KAAK0zJ,6CACJ1zJ,KAAK2zJ,0fAOG3zJ,KAAK6zJ,8MA3IrB,IAkJV,CAOD,mBAAAoC,GACE,OAAKj2J,KAAK8zJ,SAIH,GAAGrB,OACZzyJ,KAAKk6I,UACJtvG,KAAI,SAAUmzG,GACb,MAAO,WAAaA,EAAU,GAClC,IACGllI,KAAK,kEAGN7Y,KAAK4yJ,YACJhoH,KAAI,SAAUuhH,GACb,MAAO,aAAeA,EAAY,GACtC,IACGtzI,KAAK,oCAEN7Y,KAAK6yJ,UACJjoH,KAAI,SAAUirH,GACb,MAAO,WAAaA,EAAQ91J,KAAO,IAAM81J,EAAQpgJ,KAAO,GAC5D,IACGoD,KAAK,UACN7Y,KAAKg0J,uBAAuBn7I,KAAK,+HAIjC7Y,KAAK6yJ,UACJjoH,KAAI,SAAUirH,GACb,MAAO,KAAOA,EAAQpgJ,KAAO,MAAQogJ,EAAQ7uB,WAAa,GAC9D,IACGnuH,KAAK,WA9BK,IAgCV,CAMD,qBAAAq9I,GACE,OAAKl2J,KAAK8zJ,SAIH,GAAGrB,OACZzyJ,KAAKk6I,UACJtvG,KAAI,SAAUmzG,GACb,MAAO,WAAaA,EAAU,GAClC,IACGllI,KAAK,oCAEN7Y,KAAK6yJ,UACJjoH,KAAI,SAAUirH,GACb,MAAO,WAAaA,EAAQ91J,KAAO,IAAM81J,EAAQpgJ,KAAO,GAC5D,IACGoD,KAAK,UACN7Y,KAAKi0J,yBAAyBp7I,KAAK,gyBA2B7B7Y,KAAKozJ,sDACMpzJ,KAAK+zJ,0JA3CX,IAiDV,ECp5BH,MAAM3pJ,GACE,OADFA,GAEM,WAFNA,GAGI,SAOJ+rJ,GAAmB,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,QAgN1D,IAAAC,GAnMA,cAAsBvI,GAIpB,WAAA/tJ,CAAY4K,GACVA,EAAUA,GAAoB,GAE9B,MAAM4xC,EAAc51C,OAAO6C,OAAO,CAAE,EAAEmB,UAE/B4xC,EAAY+5G,gBACZ/5G,EAAYx0B,cACZw0B,EAAYg6G,YACZh6G,EAAYgF,OACnBr8C,MAAMq3C,GAMNt8C,KAAKu2J,UAAY,KAEjBv2J,KAAK4J,kBAAkBQ,GAAmBpK,KAAKw2J,wBAE/Cx2J,KAAKy2J,YAAY/rJ,EAAQ2rJ,SAAW3rJ,EAAQ2rJ,SAAWF,IAEvDn2J,KAAK02J,aAAyBlwJ,IAAjBkE,EAAQ4rJ,KAAqB5rJ,EAAQ4rJ,KAAO,IAEzDt2J,KAAKm2F,eAA6B3vF,IAAnBkE,EAAQod,OAAuBpd,EAAQod,OAAS,GAE/D,MAAMw5B,EAAS52C,EAAQ42C,OAAS52C,EAAQ42C,OAAS,SAE/CthD,KAAK22J,gBADe,iBAAXr1G,EACc,SAAU7B,GAC/B,OAAOA,EAAQt2C,IAAIm4C,EAC3B,EAE6BA,EAKzBthD,KAAK4vI,eAAe,KACrB,CAQD,OAAAgnB,GACE,OAA8B52J,KAAKmJ,IAAIiB,GACxC,CAQD,WAAAysJ,GACE,OAAqC72J,KAAKmJ,IAAIiB,GAC/C,CAQD,SAAA6b,GACE,OAA8BjmB,KAAKmJ,IAAIiB,GACxC,CAKD,sBAAAosJ,GACEx2J,KAAKu2J,UAqGT,SAAwB5vB,GACtB,MAAMn3H,EAAQ,EACRC,EAAS,IACTS,EAAUX,GAAsBC,EAAOC,GAEvC4mJ,EAAWnmJ,EAAQ4mJ,qBAAqB,EAAG,EAAGtnJ,EAAOC,GACrD4uE,EAAO,GAAKsoD,EAAOxlI,OAAS,GAClC,IAAK,IAAIS,EAAI,EAAGuE,EAAKwgI,EAAOxlI,OAAQS,EAAIuE,IAAMvE,EAC5Cy0J,EAASU,aAAan1J,EAAIy8E,EAAMsoD,EAAO/kI,IAMzC,OAHAsO,EAAQ0sB,UAAYy5H,EACpBnmJ,EAAQ2sB,SAAS,EAAG,EAAGrtB,EAAOC,GAEvBS,EAAQN,MACjB,CApHqBonJ,CAAeh3J,KAAK62J,cACtC,CAQD,OAAAH,CAAQJ,GACNt2J,KAAK8J,IAAIM,GAAeksJ,EACzB,CAQD,WAAAG,CAAY9vB,GACV3mI,KAAK8J,IAAIM,GAAmBu8H,EAC7B,CAQD,SAAAxwC,CAAUruE,GACR9nB,KAAK8J,IAAIM,GAAiB0d,EAC3B,CAED,cAAA42B,GACE,MAAMu4G,GAAU,IAAItE,IACjBwB,aAAa,uBACbC,WAAW,gBAAiB,QAAS,iBACrCF,WAAW,gBACXA,WAAW,qBACXG,wBAAwB,gBACxBK,yBACC,uGAGJ,OAAO,IAAIwC,GAAyBl3J,KAAM,CACxCotC,UAAWptC,KAAKutC,eAChBgvG,WAAY,CACV,CACE9mI,KAAM,SACNkG,SAAW8jC,IACT,MAAM6B,EAASthD,KAAK22J,gBAAgBl3G,GACpC,YAAkBj5C,IAAX86C,EAAuB19B,GAAM09B,EAAQ,EAAG,GAAK,CAAC,IAI3D64F,SAAU,CACRgd,OAAQ,IACyD,GAAvDn3J,KAAKmJ,IAAIiB,IAAmBpK,KAAKmJ,IAAIiB,KAE/CgtJ,YAAa,IAETp3J,KAAKmJ,IAAIiB,IAAmB4B,KAAKyP,IAAI,EAAGzb,KAAKmJ,IAAIiB,MAIvD6hJ,qBAAqB,EACrBrT,aAAcqe,EAAQrB,wBACtB3c,eAAgBge,EAAQnB,0BACxB7V,cAAe,CACb,CACEhH,eAAgB,2fAehBkB,SAAU,CACRkd,kBAAmB,IAAMr3J,KAAKu2J,UAC9Be,UAAW,IAAMt3J,KAAK4tC,iBAK/B,CAED,eAAAkZ,GAAoB,GC/ItB,IAAAywG,GA/BA,cAA+BtnB,GAI7B,WAAAnwI,CAAY4K,GACVA,EAAUA,GAAoB,GAE9B,MAAM4xC,EAAc51C,OAAO6C,OAAO,CAAE,EAAEmB,UAC/B4xC,EAAYk7G,WACnBvyJ,MAAMq3C,GAMNt8C,KAAKy3J,iBACoBjxJ,IAAvBkE,EAAQ8sJ,WAA2B9sJ,EAAQ8sJ,WAAa,CAC3D,CAKD,aAAA92B,GACE,OAAO1gI,KAAKy3J,WACb,CAED,cAAA/4G,GACE,OAAO,IAAIg5G,GAA+B13J,KAC3C,GCsKH,IAAA23J,GA5OA,cAA+B7iG,GAI7B,WAAAh1D,CAAY83J,GACV,MAAMltJ,EAAUktJ,GAA4B,GAE5C3yJ,MACJ,GAGQyF,EAAQ+qD,WACVz1D,KAAKy1D,SAAW/qD,EAAQ+qD,UAO1Bz1D,KAAK63J,mBAAqBntJ,EAAQgD,MAAQhD,EAAQgD,MAAQ,IAM1D1N,KAAKyyD,eAAiCjsD,IAArBkE,EAAQuzB,SAAyBvzB,EAAQuzB,SAAW,IAMrEj+B,KAAK83J,yBAA0B,EAM/B93J,KAAK+3J,6BAA8B,EAMnC/3J,KAAKg4J,yBAAsBxxJ,EAM3BxG,KAAKi4J,iBAAmB,GAMxBj4J,KAAK21D,eAAiB,EACvB,CAUD,WAAAvvD,CAAYuuD,GACV,IAAKA,EAAgBpM,cACnB,OAAO,EAGT,IAAIyM,GAAY,EAEhB,GADAh1D,KAAK61D,uBAAuBlB,GACxB30D,KAAK83J,yBACP,GAAInjG,EAAgB50D,MAAQ+oD,GAAoBI,YAC9ClpD,KAAKs1D,gBAAgBX,GAErBA,EAAgBpM,cAAcnoD,sBACzB,GAAIu0D,EAAgB50D,MAAQ+oD,GAAoBO,UAAW,CAChE,MAAMyM,EAAY91D,KAAKw1D,cAAcb,GACrC30D,KAAK83J,wBAA0BhiG,CAChC,OAED,GAAInB,EAAgB50D,MAAQ+oD,GAAoBM,YAC9C,GAAIppD,KAAK+3J,4BAA6B,CACpC/3J,KAAK+3J,6BAA8B,EACnC,MAAMhiG,EAAU/1D,KAAKq1D,gBAAgBV,GACrC30D,KAAK83J,wBAA0B/hG,EAC/Bf,EAAYh1D,KAAKy1D,SAASM,EACpC,MACUf,EAAYh1D,KAAKy1D,UAAS,GAC1Bz1D,KAAKk4J,iBAIX,OAAQljG,CACT,CAMD,eAAAM,CAAgBX,GACd,IAAI4I,EAAa,EAEjB,MAAML,EAASl9D,KAAK21D,eAAe,GAC7BwH,EAASn9D,KAAKoqD,MAAM7B,cACpBjhC,EAAW41C,EAAOjR,QAAUkR,EAAOlR,aAEdzlD,IAAvBxG,KAAKq9D,gBACPE,EACE,GAAKv9D,KAAKq9D,cAAgB/1C,GAAYtnB,KAAK63J,oBAE/C73J,KAAKq9D,cAAgB/1C,EAEH,GAAdi2C,IACFv9D,KAAKs9D,gBAAkBC,GAIzB,MAAM3yB,EAAM+pB,EAAgB/pB,IACtB2S,EAAO3S,EAAI8S,UACjB9S,EAAIiS,SACJU,EAAKtC,yBAAyBsiB,EAC/B,CAOD,eAAAlI,CAAgBV,GACd,GAAkC,GAA9B30D,KAAK21D,eAAex0D,OAAa,CACnC,MAAMypC,EAAM+pB,EAAgB/pB,IAQ5B,OAPA5qC,KAAK48D,QAAU,KACf58D,KAAKq9D,mBAAgB72D,EACrBxG,KAAKs9D,gBAAkB,EACvBt9D,KAAKoqD,MAAQuK,EACR30D,KAAK83J,yBACRltH,EAAI8S,UAAU9B,oBAET,CACR,CACD,OAAO,CACR,CAOD,aAAA4Z,CAAcb,GACZ,GAAkC,GAA9B30D,KAAK21D,eAAex0D,OAAa,CACnC,MACMo8C,EADMoX,EAAgB/pB,IACX8S,UACXh8C,EAAY1B,KAAKs9D,gBAAkB,EAAI,GAAK,EAIlD,OAHA/f,EAAK1B,eAAe77C,KAAKyyD,UAAW/wD,GACpC1B,KAAK83J,yBAA0B,EAC/B93J,KAAK+3J,6BAA8B,GAC5B,CACR,CACD,OAAO,CACR,CAQD,QAAAtiG,CAASM,GACP,OAAOA,CACR,CAMD,sBAAAF,CAAuBlB,GACrB,GAgDJ,SAAgCA,GAC9B,MAAM50D,EAAO40D,EAAgB50D,KAC7B,OACEA,IAAS+oD,GAAoBM,aAC7BrpD,IAAS+oD,GAAoBI,aAC7BnpD,IAAS+oD,GAAoBO,SAEjC,CAvDQ8uG,CAAuBxjG,GAAkB,CAC3C,MAAM9uD,EAAQ8uD,EAAgBpM,cAExBh7C,EAAK1H,EAAMulD,UAAUzyC,WACvBg8C,EAAgB50D,MAAQ+oD,GAAoBO,iBACvCrpD,KAAKi4J,iBAAiB1qJ,IACpBonD,EAAgB50D,MAAQ+oD,GAAoBM,aAE5C77C,KAAMvN,KAAKi4J,oBADpBj4J,KAAKi4J,iBAAiB1qJ,GAAM1H,GAK9B7F,KAAK21D,eAAiBjvD,OAAOsC,OAAOhJ,KAAKi4J,iBAC1C,CACF,CAMD,cAAAC,QACmC1xJ,IAA7BxG,KAAKg4J,qBAEP9sG,aAAalrD,KAAKg4J,qBAClBh4J,KAAKg4J,yBAAsBxxJ,IAE3BxG,KAAK+3J,6BAA8B,EACnC/3J,KAAKg4J,oBAAsBxmH,WACzBxxC,KAAKi8D,gBAAgB/0D,KAAKlH,MAC1B,KAGL,CAKD,eAAAi8D,GACEj8D,KAAK+3J,6BAA8B,EACnC/3J,KAAKg4J,yBAAsBxxJ,CAC5B,GCpNH,MAAM4xJ,GAMU,cAQT,MAAMC,WAAyBtyJ,EAOpC,WAAAjG,CAAYC,EAAMu4J,EAAMr1F,EAAU/jD,GAChCja,MAAMlF,GAONC,KAAKijE,SAAWA,EAOhBjjE,KAAKs4J,KAAOA,EAOZt4J,KAAKkf,WAAaA,CACnB,EA2PH,IAAAq5I,GAtOA,cAA0BzjG,GAIxB,WAAAh1D,CAAY4K,GACVA,EAAUA,GAAoB,GAE9BzF,MAAM,CACJmB,YAAajD,IAMfnD,KAAK0H,GAKL1H,KAAKiH,KAKLjH,KAAK2H,GAML3H,KAAKw4J,eAAgB,EAMrBx4J,KAAKy4J,SAAW,GAChB,MAAMC,EAAqBhuJ,EAAQguJ,mBAC/BhuJ,EAAQguJ,mBACR,GACJ,IAAK,IAAI92J,EAAI,EAAGuE,EAAKuyJ,EAAmBv3J,OAAQS,EAAIuE,IAAMvE,EAAG,CAC3D,IAAIklB,EAAS4xI,EAAmB92J,GACV,mBAAXklB,IACTA,EAAS,IAAIA,GAEf9mB,KAAKy4J,SAAS9yJ,KAAKmhB,GACnB9mB,KAAKw4J,cACHx4J,KAAKw4J,eAAsC,gBAArB1xI,EAAO0H,SAChC,CAMDxuB,KAAK4zC,YAAclpC,EAAQwU,WACvBwP,GAAchkB,EAAQwU,YACtB,KAMJlf,KAAK24J,gBAAkB,KAMvB34J,KAAK44J,QAAUluJ,EAAQT,QAAU,KAMjCjK,KAAKG,OAASuK,EAAQvK,OAASuK,EAAQvK,OAAS,IACjD,CAOD,aAAA04J,CAAcP,EAAMzyJ,GAClB,MAAM2qC,EAAS3qC,EAAM1F,OAAOqwC,OACtB5F,EAAM5qC,KAAKogD,SACjB,IASIsC,EATAxjC,EAAalf,KAAK4zC,YACtB,IAAK10B,IACHA,EAAa6M,MACR7M,GAAY,CAEfA,EADa0rB,EAAI8S,UACChvB,eACnB,CAIH,MAAMoqI,EAAU94J,KAAKy4J,SACrB,IAAK,IAAI72J,EAAI,EAAGuE,EAAK2yJ,EAAQ33J,OAAQS,EAAIuE,IAAMvE,EAAG,CAChD,MAAMklB,EAASgyI,EAAQl3J,GACvB,IAAIkhB,EAAQ0tB,EACRxwC,KAAKw4J,eAAsC,gBAArB1xI,EAAO0H,iBAClBhoB,IAATk8C,IACFA,GAAO,IAAIq2G,aAAchqJ,OAAOyhC,IAElC1tB,EAAQ4/B,GAEV,MAAMugB,EAAWjjE,KAAKg5J,iBAAiBlyI,EAAQhE,EAAO,CACpD8qD,kBAAmB1uD,IAErB,GAAI+jD,GAAYA,EAAS9hE,OAAS,EAAG,CAC/BnB,KAAK44J,UACP54J,KAAK44J,QAAQj0J,QACb3E,KAAK44J,QAAQ3qF,YAAYhL,IAE3BjjE,KAAK4F,cACH,IAAIyyJ,GACFD,GACAE,EACAr1F,EACA/jD,IAGJ,KACD,CACF,CACF,CAKD,kBAAA+5I,GACE,MAAMruH,EAAM5qC,KAAKogD,SACjB,GAAIxV,EAAK,CACP,MAAMsuH,EAAWl5J,KAAKG,OAASH,KAAKG,OAASyqC,EAAIub,cACjDnmD,KAAK24J,gBAAkB,CACrB5xJ,EAAOmyJ,EAAUpyJ,EAAgB9G,KAAKm5J,WAAYn5J,MAClD+G,EAAOmyJ,EAAUpyJ,EAAqB9G,KAAKo5J,WAAYp5J,MACvD+G,EAAOmyJ,EAAUpyJ,EAAoB9G,KAAKo5J,WAAYp5J,MACtD+G,EAAOmyJ,EAAUpyJ,EAAgB9G,KAAKo5J,WAAYp5J,MAErD,CACF,CAQD,SAAAy0D,CAAUG,IACH50D,KAAK00D,aAAeE,GACvB50D,KAAKi5J,qBAEHj5J,KAAK00D,cAAgBE,GACvB50D,KAAKq5J,uBAEPp0J,MAAMwvD,UAAUG,EACjB,CAQD,MAAA9X,CAAOlS,GACL5qC,KAAKq5J,uBACLp0J,MAAM63C,OAAOlS,GACT5qC,KAAK00D,aACP10D,KAAKi5J,oBAER,CASD,gBAAAD,CAAiBlyI,EAAQ47B,EAAMh4C,GAC7B,IACE,OAEGoc,EAAO6mD,aAAajrB,EAAMh4C,EAE9B,CAAC,MAAOuM,GACP,OAAO,IACR,CACF,CAKD,oBAAAoiJ,GACMr5J,KAAK24J,kBACP34J,KAAK24J,gBAAgBztJ,QAAQ5D,GAC7BtH,KAAK24J,gBAAkB,KAE1B,CAKD,UAAAQ,CAAWtzJ,GACT,MAAMyzJ,EAAQzzJ,EAAM0zJ,aAAaD,MACjC,IAAK,IAAI13J,EAAI,EAAGuE,EAAKmzJ,EAAMn4J,OAAQS,EAAIuE,IAAMvE,EAAG,CAC9C,MAAM02J,EAAOgB,EAAMjuJ,KAAKzJ,GAClB43J,EAAS,IAAIC,WACnBD,EAAOl0J,iBACLwB,EACA9G,KAAK64J,cAAc3xJ,KAAKlH,KAAMs4J,IAE5Bt4J,KAAKw4J,cACPgB,EAAOE,kBAAkBpB,GAEzBkB,EAAOG,WAAWrB,EAErB,CACF,CAKD,UAAAc,CAAWvzJ,GACTA,EAAMlG,kBACNkG,EAAMzF,iBACNyF,EAAM0zJ,aAAaK,WAAa,MACjC,GCzLH,IAAAC,GA7GA,cAAgChiG,GAI9B,WAAA/3D,CAAY4K,GAGVzF,MAFAyF,EAAUA,GAAoB,IAQ9B1K,KAAKo4D,WAAa1tD,EAAQytD,UAAYztD,EAAQytD,UAAYf,GAM1Dp3D,KAAK64D,gBAAaryD,EAMlBxG,KAAK85J,oBAAiBtzJ,EAMtBxG,KAAKs9D,gBAAkB,EAMvBt9D,KAAKyyD,eAAiCjsD,IAArBkE,EAAQuzB,SAAyBvzB,EAAQuzB,SAAW,GACtE,CAMD,eAAAq3B,CAAgBX,GACd,IAAK6C,GAAU7C,GACb,OAGF,MAAM/pB,EAAM+pB,EAAgB/pB,IACtBn3B,EAAOm3B,EAAIl3B,UACXoH,EAAS65C,EAAgBtX,MACzBr/B,EAASlD,EAAO,GAAKrH,EAAK,GAAK,EAC/BwK,EAASxK,EAAK,GAAK,EAAIqH,EAAO,GAC9Bs2B,EAAQplC,KAAKmc,MAAMlK,EAAQD,GAC3B+7I,EAAY/tJ,KAAKka,KAAKlI,EAASA,EAASC,EAASA,GACjDs/B,EAAO3S,EAAI8S,UACjB,QAAwBl3C,IAApBxG,KAAK64D,WAA0B,CACjC,MAAMmhG,EAAah6J,KAAK64D,WAAaznB,EACrCmM,EAAKlC,uBAAuB2+G,EAC7B,CACDh6J,KAAK64D,WAAaznB,OACU5qC,IAAxBxG,KAAK85J,gBACPv8G,EAAKtC,yBAAyBj7C,KAAK85J,eAAiBC,QAE1BvzJ,IAAxBxG,KAAK85J,iBACP95J,KAAKs9D,gBAAkBt9D,KAAK85J,eAAiBC,GAE/C/5J,KAAK85J,eAAiBC,CACvB,CAOD,aAAAvkG,CAAcb,GACZ,IAAK6C,GAAU7C,GACb,OAAO,EAGT,MACMpX,EADMoX,EAAgB/pB,IACX8S,UACXh8C,EAAY1B,KAAKs9D,gBAAkB,EAAI,GAAK,EAGlD,OAFA/f,EAAK1B,eAAe77C,KAAKyyD,UAAW/wD,GACpC1B,KAAKs9D,gBAAkB,GAChB,CACR,CAOD,eAAAjI,CAAgBV,GACd,QAAK6C,GAAU7C,OAIX30D,KAAKo4D,WAAWzD,KAClBA,EAAgB/pB,IAAI8S,UAAU9B,mBAC9B57C,KAAK64D,gBAAaryD,EAClBxG,KAAK85J,oBAAiBtzJ,GACf,GAGV,GCoCH,MAAMyzJ,GAMO,YANPA,GAYK,UAZLA,GAkBO,YAQN,MAAMC,WAAkBn0J,EAK7B,WAAAjG,CAAYC,EAAM0/C,GAChBx6C,MAAMlF,GAONC,KAAKy/C,QAAUA,CAChB,EA4BH,SAAS06G,GAAmB94J,EAAGC,GAC7B,OAAOwiB,GAAgBziB,EAAE,GAAIA,EAAE,GAAIC,EAAE,GAAIA,EAAE,GAC7C,CAOA,SAAS84J,GAAc9gJ,EAAarW,GAClC,MAAM2qD,EAAQt0C,EAAYnY,OAC1B,OAAI8B,EAAQ,EACHqW,EAAYrW,EAAQ2qD,GAEzB3qD,GAAS2qD,EACJt0C,EAAYrW,EAAQ2qD,GAEtBt0C,EAAYrW,EACrB,CAWA,SAASo3J,GAA6B/gJ,EAAau0C,EAAYysG,GAC7D,IAAIC,EAAUC,EACV3sG,EAAaysG,GACfC,EAAW1sG,EACX2sG,EAAYF,IAEZC,EAAWD,EACXE,EAAY3sG,GAEd,MAAM4sG,EAAgBzuJ,KAAKiZ,KAAKs1I,GAC1BG,EAAiB1uJ,KAAKuT,MAAMi7I,GAElC,GAAIC,EAAgBC,EAAgB,CAIlC,OAAOP,GAFOQ,GAAsBrhJ,EAAaihJ,GACrCI,GAAsBrhJ,EAAakhJ,GAEhD,CAED,IAAIppE,EAAK,EAET,GAAImpE,EAAWE,EAAe,CAG5BrpE,GAAM+oE,GAFQQ,GAAsBrhJ,EAAaihJ,GACrCH,GAAc9gJ,EAAamhJ,GAExC,CAED,GAAIC,EAAiBF,EAAW,CAG9BppE,GAAM+oE,GAFQC,GAAc9gJ,EAAaohJ,GAC7BC,GAAsBrhJ,EAAakhJ,GAEhD,CAED,IAAK,IAAI54J,EAAI64J,EAAe74J,EAAI84J,EAAiB,IAAK94J,EAAG,CAGvDwvF,GAAM+oE,GAFQC,GAAc9gJ,EAAa1X,GAC7Bw4J,GAAc9gJ,EAAa1X,EAAI,GAE5C,CAED,OAAOwvF,CACT,CAOA,SAASwpE,GAA2BzjJ,EAAYxC,EAAUkmJ,GACxD,GAAIlmJ,aAAoBolE,GACtB+gF,GAAkB3jJ,EAAYxC,EAAS8a,kBAAkB,EAAOorI,QAGlE,GAAIlmJ,aAAoBwlE,GAAxB,CACE,MAAM7gE,EAAc3E,EAAS8a,iBAC7B,IAAK,IAAI7tB,EAAI,EAAGuE,EAAKmT,EAAYnY,OAAQS,EAAIuE,IAAMvE,EACjDk5J,GAAkB3jJ,EAAYmC,EAAY1X,IAAI,EAAOi5J,EAGxD,MACD,GAAIlmJ,aAAoBohB,GAAxB,CACE,MAAMzc,EAAc3E,EAAS8a,iBAC7B,IAAK,IAAI7tB,EAAI,EAAGuE,EAAKmT,EAAYnY,OAAQS,EAAIuE,IAAMvE,EACjDk5J,GAAkB3jJ,EAAYmC,EAAY1X,IAAI,EAAMi5J,EAGvD,MACD,GAAIlmJ,aAAoBylE,GAAxB,CACE,MAAM2gF,EAAQpmJ,EAAS8a,iBACvB,IAAK,IAAI7tB,EAAI,EAAGuE,EAAK40J,EAAM55J,OAAQS,EAAIuE,IAAMvE,EAAG,CAC9C,MAAM0X,EAAcyhJ,EAAMn5J,GAC1B,IAAK,IAAIwiB,EAAI,EAAG2G,EAAKzR,EAAYnY,OAAQijB,EAAI2G,IAAM3G,EACjD02I,GAAkB3jJ,EAAYmC,EAAY8K,IAAI,EAAMy2I,EAEvD,CAEF,MACD,GAAIlmJ,aAAoB0lE,GAAxB,CACE,MAAM3F,EAAa//D,EAAS0mE,gBAC5B,IAAK,IAAIz5E,EAAI,EAAGA,EAAI8yE,EAAWvzE,SAAUS,EACvCg5J,GAA2BzjJ,EAAYu9D,EAAW9yE,GAAIi5J,EAGzD,MAEH,CAWA,MAAMG,GAAmB,CAAC/3J,OAAQ,EAAGq3J,SAAUnsI,KA6H/C,SAAS2sI,GAAkB3jJ,EAAYmC,EAAa2hJ,EAAMJ,GACxD,MAAMzjJ,EAAID,EAAW,GACfE,EAAIF,EAAW,GACrB,IAAK,IAAIvV,EAAI,EAAGuE,EAAKmT,EAAYnY,OAAS,EAAGS,EAAIuE,IAAMvE,EAAG,CACxD,MAEMknG,EAAMoyD,GAA4B9jJ,EAAGC,EAF7BiC,EAAY1X,GACd0X,EAAY1X,EAAI,IAE5B,GAA4B,IAAxBknG,EAAIhlF,gBAAuB,CAC7B,MAAM7gB,EAAQrB,EAAIknG,EAAIziF,MAOtB,YANAw0I,EAAQl1J,KAAK,CACX2T,YAAaA,EACb2hJ,KAAMA,EACNptG,WAAY5qD,EACZq3J,SAAUr3J,GAGb,CACF,CACH,CAWA,MAAMk4J,GAAY,CAAC90I,MAAO,EAAGvC,gBAAiB,GAU9C,SAASo3I,GAA4B9jJ,EAAGC,EAAG5J,EAAOzL,GAChD,MAAM8a,EAAKrP,EAAM,GACXsP,EAAKtP,EAAM,GAGXoK,EAFK7V,EAAI,GAEC8a,EACVhF,EAFK9V,EAAI,GAEC+a,EAChB,IAAIsJ,EAAQ,EACRgzC,EAAKv8C,EACL6sI,EAAK5sI,EAST,OARW,IAAPlF,GAAmB,IAAPC,IACduO,EAAQzC,KAAQxM,EAAI0F,GAAMjF,GAAMR,EAAI0F,GAAMjF,IAAOD,EAAKA,EAAKC,EAAKA,GAAK,EAAG,GACxEuhD,GAAMxhD,EAAKwO,EACXsjI,GAAM7xI,EAAKuO,GAGb80I,GAAU90I,MAAQA,EAClB80I,GAAUr3I,gBAAkBe,GAAQf,GAAgB1M,EAAGC,EAAGgiD,EAAIswF,GAAK,IAC5DwR,EACT,CAOA,SAASR,GAAsBrhJ,EAAarW,GAC1C,MAAM2qD,EAAQt0C,EAAYnY,OAE1B,IAAI0sD,EAAa7hD,KAAKuT,MAAMtc,GAC5B,MAAMojB,EAAQpjB,EAAQ4qD,EAClBA,GAAcD,EAChBC,GAAcD,EACLC,EAAa,IACtBA,GAAcD,GAGhB,IAAI0sG,EAAWzsG,EAAa,EACxBysG,GAAY1sG,IACd0sG,GAAY1sG,GAGd,MAAMngD,EAAQ6L,EAAYu0C,GACpBjxC,EAAKnP,EAAM,GACXoP,EAAKpP,EAAM,GACXzL,EAAMsX,EAAYghJ,GAIxB,MAAO,CAAC19I,GAHG5a,EAAI,GAAK4a,GAGFyJ,EAAOxJ,GAFd7a,EAAI,GAAK6a,GAEewJ,EACrC,CA8vCA,SAAS+0I,KACP,MAAM1lJ,EAASuyG,KACf,OAAO,SAAUxoE,EAAS/iC,GACxB,OAAOhH,EAAO+pC,EAAQxqC,cAAcuZ,UACxC,CACA,CAgHA,IAAA6sI,GAh2CA,cAAmBxjG,GAIjB,WAAA/3D,CAAY4K,GACV,MAAMiyD,EAAc,EAGfA,EAAelH,WAClBkH,EAAelH,SAAWryD,GAG5B6B,MAAM03D,GAKN38D,KAAK0H,GAKL1H,KAAKiH,KAKLjH,KAAK2H,GAML3H,KAAKs7J,eAAgB,EAMrBt7J,KAAKu7J,QAAU,KAMfv7J,KAAKw7J,aAMLx7J,KAAKy7J,cAOLz7J,KAAK07J,aAML17J,KAAK27J,WAAY,EAOjB37J,KAAK44J,QAAUluJ,EAAQT,OAASS,EAAQT,OAAS,KAOjDjK,KAAK47J,UAAYlxJ,EAAQu4D,SAAWv4D,EAAQu4D,SAAW,KAOvDjjE,KAAK67J,eAAiBnxJ,EAAQoxJ,cAAgBpxJ,EAAQoxJ,cAAgB,GAOtE97J,KAAKm6F,MACHzvF,EACN,KAOI1K,KAAK67D,MAyuCT,SAAiB97D,GACf,OAAQA,GACN,IAAK,QACL,IAAK,aACH,MAAO,QACT,IAAK,aACL,IAAK,kBACH,MAAO,aACT,IAAK,UACL,IAAK,eACH,MAAO,UACT,IAAK,SACH,MAAO,SACT,QACE,MAAM,IAAIwI,MAAM,iBAAmBxI,GAEzC,CAzvCiBg8J,CAAQ/7J,KAAKm6F,OAQ1Bn6F,KAAKg8J,aAAetxJ,EAAQuxJ,UAS5Bj8J,KAAKk8J,WAAaxxJ,EAAQyxJ,UACtBzxJ,EAAQyxJ,UACO,YAAfn8J,KAAK67D,MACL,EACA,EAQJ77D,KAAKo8J,WACY,WAAfp8J,KAAK67D,MACD,EACAnxD,EAAQ2xJ,UACR3xJ,EAAQ2xJ,UACR7hJ,IAONxa,KAAKs8J,iBAAmB5xJ,EAAQ6xJ,gBAC5B7xJ,EAAQ6xJ,gBACRp5J,EAMJnD,KAAKw8J,gBAAkB9xJ,EAAQ+xJ,eAC3B/xJ,EAAQ+xJ,eACR,KAEJ,IAAIr9D,EAAmB10F,EAAQ00F,iBAC/B,IAAKA,EAAkB,CACrB,MAAMs9D,EAAO18J,KAAK67D,MAClB,GAAa,WAAT6gG,EAOFt9D,EAAmB,SAAU9lF,EAAa3E,EAAUuK,GAClD,MAAM8G,EAASrR,GAEX,IAAI6lE,GAAO,CAACrsD,IAAKA,MACf1R,EAASwP,GAAmB3S,EAAY,GAAI4F,GAC5Cy9I,EAAgBC,GACpBngJ,EACAwP,GAAmB3S,EAAYA,EAAYnY,OAAS,GAAI+d,IAE1D8G,EAAOiwE,mBACLx5E,EACAzQ,KAAKka,KAAKy2I,GACV38J,KAAKw8J,iBAEP,MAAM3wI,EAAiBE,KAIvB,OAHIF,GACF7F,EAAOjQ,UAAUmJ,EAAY2M,GAExB7F,CACjB,MACa,CACL,IAAI4uG,EACS,UAAT8nC,EACF9nC,EAActhG,GACI,eAATopI,EACT9nC,EAAc76C,GACI,YAAT2iF,IACT9nC,EAAc7+F,IAQhBqpE,EAAmB,SAAU9lF,EAAa3E,EAAUuK,GAkBlD,OAjBIvK,EACW,YAAT+nJ,EACEpjJ,EAAY,GAAGnY,OAEjBwT,EAASqb,eACP,CAAC1W,EAAY,GAAGy8E,OAAO,CAACz8E,EAAY,GAAG,MACvCtZ,KAAKw8J,iBAGP7nJ,EAASqb,eAAe,GAAIhwB,KAAKw8J,iBAGnC7nJ,EAASqb,eAAe1W,EAAatZ,KAAKw8J,iBAG5C7nJ,EAAW,IAAIigH,EAAYt7G,EAAatZ,KAAKw8J,iBAExC7nJ,CACjB,CACO,CACF,CAMD3U,KAAKunH,kBAAoBnoB,EAMzBp/F,KAAK68J,sBACyBr2J,IAA5BkE,EAAQoyJ,gBAAgCpyJ,EAAQoyJ,gBAAkB,IAQpE98J,KAAK+8J,kBAAoB,KAOzB/8J,KAAKg9J,eAAiB,KAOtBh9J,KAAKi9J,aAAe,KAOpBj9J,KAAKk9J,cAAgB,KAOrBl9J,KAAKm9J,YAAc,KAOnBn9J,KAAKo9J,kBAAoB,KASzBp9J,KAAKq9J,uBAAyB3yJ,EAAQ4yJ,eAClC5yJ,EAAQ4yJ,eAAiB5yJ,EAAQ4yJ,eACjC,GAOJt9J,KAAKu9J,SAAW,IAAInsB,GAAY,CAC9BnnI,OAAQ,IAAIi1F,GAAa,CACvB1D,iBAAiB,EACjBv8E,QAAOvU,EAAQuU,OAAQvU,EAAQuU,QAEjC3O,MAAO5F,EAAQ4F,MAAQ5F,EAAQ4F,MAAQ8qJ,KACvCl8B,wBAAwB,IAQ1Bl/H,KAAKsU,cAAgB5J,EAAQ8yJ,aAM7Bx9J,KAAKo4D,WAAa1tD,EAAQytD,UAAYztD,EAAQytD,UAAYjB,GAM1Dl3D,KAAKy9J,mBACD/yJ,EAAQgzJ,SACV19J,KAAKy9J,mBAAqB3mG,GAE1B92D,KAAKy9J,mBAAqB/yJ,EAAQizJ,kBAC9BjzJ,EAAQizJ,kBACRvmG,GAONp3D,KAAK49J,gBACL59J,KAAK69J,SAASnzJ,EAAQozJ,QAAS,GAM/B99J,KAAK+9J,YAAc,CAACnpG,QAAQ,GAM5B50D,KAAKg+J,aAAetzJ,EAAQuzJ,aAAevzJ,EAAQT,QAAU,KAE7DjK,KAAK4J,kBAAkByqD,GAA4Br0D,KAAKk+J,aACzD,CAQD,QAAAL,CAASC,GACP,IAAI3lG,EAIFA,EAHG2lG,GAEgB,IAAVA,EACGhnG,GAEAgnG,EAJA9mG,GAMdh3D,KAAK49J,gBAAkBzlG,CACxB,CAQD,MAAArb,CAAOlS,GACL3lC,MAAM63C,OAAOlS,GACb5qC,KAAKk+J,cACN,CAOD,UAAAC,GACE,OAAOn+J,KAAKu9J,QACb,CAQD,WAAAn3J,CAAYP,GACNA,EAAM0iD,cAAcxoD,OAAS+G,GAE/BjB,EAAM0iD,cAAcnoD,iBAEtBJ,KAAK27J,UAA2B,UAAf37J,KAAK67D,OAAqB77D,KAAKy9J,mBAAmB53J,GACnE,IAAIu4J,EAAOv4J,EAAM9F,OAAS+oD,GAAoBK,YAC1C+M,GAAO,EACX,IACGl2D,KAAK27J,WACN37J,KAAKy7J,eACL51J,EAAM9F,OAAS+oD,GAAoBI,YACnC,CACYrrB,KAAKC,MACP99B,KAAKy7J,eAAiBz7J,KAAK68J,kBACnC78J,KAAKu7J,QAAU11J,EAAMw3C,MACrBr9C,KAAKs7J,eAAiBt7J,KAAK27J,UAC3ByC,GAAO,GAEPp+J,KAAKy7J,mBAAgBj1J,EAEnBxG,KAAKs7J,oBAAuC90J,IAAtBxG,KAAKw7J,eAC7BtwG,aAAalrD,KAAKw7J,cAClBx7J,KAAKw7J,kBAAeh1J,EAEvB,CAgCD,OA9BExG,KAAK27J,WACL91J,EAAM9F,OAAS+oD,GAAoBI,aACX,OAAxBlpD,KAAKg9J,gBAELh9J,KAAKq+J,cAAcx4J,EAAMsR,YACzB++C,GAAO,GAEPl2D,KAAK27J,WACL91J,EAAM9F,OAAS+oD,GAAoBM,YAEnC8M,GAAO,EACEkoG,GAAQp+J,KAAK41D,kBAAoB,GAC1CM,EAAOrwD,EAAM9F,OAAS+oD,GAAoBK,YACtC+M,GAAQl2D,KAAK27J,WACf37J,KAAK4rD,mBAAmB/lD,GACpB7F,KAAKs7J,eAEPz1J,EAAM0iD,cAAcnoD,mBAGc,UAApCyF,EAAM0iD,cAAckP,aACnB5xD,EAAM9F,OAAS+oD,GAAoBI,kBACZ1iD,IAAtBxG,KAAKw7J,eAEPx7J,KAAK4rD,mBAAmB/lD,IAEjBA,EAAM9F,OAAS+oD,GAAoBG,WAC5CiN,GAAO,GAGFjxD,MAAMmB,YAAYP,IAAUqwD,CACpC,CAOD,eAAAb,CAAgBxvD,GAGd,OAFA7F,KAAKs7J,eAAiBt7J,KAAK27J,UAEvB37J,KAAK27J,WACP37J,KAAKu7J,QAAU11J,EAAMw3C,MAChBr9C,KAAK+8J,mBACR/8J,KAAKs+J,cAAcz4J,EAAMsR,aAEpB,GAGJnX,KAAKo4D,WAAWvyD,IAKrB7F,KAAKy7J,cAAgB59H,KAAKC,MAC1B99B,KAAKw7J,aAAehqH,YAAW,KAC7BxxC,KAAK4rD,mBACH,IAAIX,GACFnC,GAAoBK,YACpBtjD,EAAM+kC,IACN/kC,EAAM0iD,eACN,EACA1iD,EAAM23C,YAET,GACAx9C,KAAK68J,kBACR78J,KAAKu7J,QAAU11J,EAAMw3C,OACd,IAjBLr9C,KAAKy7J,mBAAgBj1J,GACd,EAiBV,CAKD,gBAAA+3J,GACEv+J,KAAK+9J,YAAc,CAACnpG,QAAQ,EAC7B,CAOD,iBAAA4pG,CAAkB34J,GAChB,IAAK7F,KAAKg+J,eAAiBh+J,KAAK49J,gBAAgB/3J,GAC9C,OAGF,GAAI7F,KAAK+9J,YAAYnpG,OAEnB,YADA50D,KAAKu+J,mBAIP,MAAM3zH,EAAM5qC,KAAKogD,SASX7mC,EAASF,GAAe,CARZuxB,EAAIie,uBAAuB,CAC3ChjD,EAAMw3C,MAAM,GAAKr9C,KAAK67J,eACtBh2J,EAAMw3C,MAAM,GAAKr9C,KAAK67J,iBAELjxH,EAAIie,uBAAuB,CAC5ChjD,EAAMw3C,MAAM,GAAKr9C,KAAK67J,eACtBh2J,EAAMw3C,MAAM,GAAKr9C,KAAK67J,mBAGlB54F,EAAWjjE,KAAKg+J,aAAargE,oBAAoBpkF,GACvD,GAAwB,IAApB0pD,EAAS9hE,OACX,OAGF,MAAM05J,EA14BV,SAAyB1jJ,EAAY8rD,GAInC,MAAM43F,EAAU,GAEhB,IAAK,IAAIj5J,EAAI,EAAGA,EAAIqhE,EAAS9hE,SAAUS,EAGrCg5J,GAA2BzjJ,EAFX8rD,EAASrhE,GACAqT,cACwB4lJ,GAGnD,OAAOA,CACT,CA63BoB4D,CAAgB54J,EAAMsR,WAAY8rD,GAC9C43F,EAAQ15J,SACVnB,KAAK+9J,YAAc,CACjBnpG,QAAQ,EACR8pG,QAAS74J,EAAMw3C,MAAMv5C,QACrB+2J,QAASA,EACT8D,aAAc,GAGnB,CAOD,6BAAAC,CAA8Bz+J,EAAQm6J,GAKpC,MAAMuE,EAAoB1+J,EAAO0tD,YAAc1tD,EAAOm6J,SAElDuE,IADqB1+J,EAAO0tD,YAAcysG,EAIzCuE,GAAqBvE,EAAWn6J,EAAOm6J,WACtCuE,GAAqBvE,EAAWn6J,EAAOm6J,SAGzCt6J,KAAK8+J,sBAAsB3+J,EAAQA,EAAOm6J,SAAUA,IAEnDuE,GAAqBvE,EAAWn6J,EAAOm6J,WACtCuE,GAAqBvE,EAAWn6J,EAAOm6J,WAGzCt6J,KAAK++J,yBAAyBzE,EAAUn6J,EAAOm6J,WAIjDt6J,KAAK++J,yBAAyB5+J,EAAO0tD,WAAY1tD,EAAOm6J,UACxDt6J,KAAK8+J,sBAAsB3+J,EAAQA,EAAO0tD,WAAYysG,GAEzD,CAOD,wBAAAyE,CAAyBC,EAAWC,GAClC,GAAID,IAAcC,EAChB,OAGF,IAAIxzJ,EAAS,EACb,GAAIuzJ,EAAYC,EAAS,CACvB,MAAMxxJ,EAAQzB,KAAKiZ,KAAK+5I,GACxB,IAAIh9J,EAAMgK,KAAKuT,MAAM0/I,GACjBj9J,IAAQi9J,IACVj9J,GAAO,GAETyJ,EAASzJ,EAAMyL,EAAQ,CAC7B,KAAW,CACL,MAAMA,EAAQzB,KAAKuT,MAAMy/I,GACzB,IAAIh9J,EAAMgK,KAAKiZ,KAAKg6I,GAChBj9J,IAAQi9J,IACVj9J,GAAO,GAETyJ,EAASgC,EAAQzL,EAAM,CACxB,CAEGyJ,EAAS,GACXzL,KAAKk/J,kBAAkBzzJ,EAE1B,CAQD,qBAAAqzJ,CAAsB3+J,EAAQ6+J,EAAWC,GACvC,GAAID,IAAcC,EAChB,OAGF,MAAM3lJ,EAAc,GACpB,GAAI0lJ,EAAYC,EAAS,CAEvB,MAAMxxJ,EAAQzB,KAAKiZ,KAAK+5I,GACxB,IAAIh9J,EAAMgK,KAAKuT,MAAM0/I,GACjBj9J,IAAQi9J,IAEVj9J,GAAO,GAET,IAAK,IAAIJ,EAAI6L,EAAO7L,GAAKI,IAAOJ,EAC9B0X,EAAY3T,KAAKy0J,GAAcj6J,EAAOmZ,YAAa1X,GAE3D,KAAW,CAEL,MAAM6L,EAAQzB,KAAKuT,MAAMy/I,GACzB,IAAIh9J,EAAMgK,KAAKiZ,KAAKg6I,GAChBj9J,IAAQi9J,IACVj9J,GAAO,GAET,IAAK,IAAIJ,EAAI6L,EAAO7L,GAAKI,IAAOJ,EAC9B0X,EAAY3T,KAAKy0J,GAAcj6J,EAAOmZ,YAAa1X,GAEtD,CACG0X,EAAYnY,QACdnB,KAAKm/J,kBAAkB7lJ,EAE1B,CAOD,YAAA8lJ,CAAav5J,GACX,MAAMw5J,EAAar/J,KAAK+9J,YACxB,IAAKsB,EAAWzqG,OACd,OAGF,IAAgC,IAA5ByqG,EAAWV,aAETr3I,GAAS+3I,EAAWX,QAAS74J,EAAMw3C,OAASr9C,KAAK67J,eACnD,OAIJ,MAAMyD,EAt3BV,SAA8BnoJ,EAAYkoJ,EAAYz0H,EAAKkxH,GACzD,MAAM1kJ,EAAID,EAAW,GACfE,EAAIF,EAAW,GAErB,IAAIooJ,EAAwB/kJ,IAExBglJ,GAAkB,EAClBC,EAActxI,IAElB,IACE,IAAIwwI,EAAc,EAClBA,EAAcU,EAAWxE,QAAQ15J,SAC/Bw9J,EACF,CACA,MAAMx+J,EAASk/J,EAAWxE,QAAQ8D,GAC5BrlJ,EAAcnZ,EAAOmZ,YAE3B,IACIghJ,EADAoF,EAAqBllJ,IAEzB,IACE,IAAImlJ,EAAkB,EACtBA,EAAkBrmJ,EAAYnY,OAAS,IACrCw+J,EACF,CACA,MAEM72D,EAAMoyD,GAA4B9jJ,EAAGC,EAF7BiC,EAAYqmJ,GACdrmJ,EAAYqmJ,EAAkB,IAEtC72D,EAAIhlF,gBAAkB47I,IACxBA,EAAqB52D,EAAIhlF,gBACzBw2I,EAAWqF,EAAkB72D,EAAIziF,MAEpC,CAEGq5I,EAAqBH,IACvBA,EAAwBG,EACpBv/J,EAAO86J,MAAQoE,EAAWV,cAAgBA,IAExCx+J,EAAOm6J,SAAWn6J,EAAO0tD,WAEvBysG,EAAWn6J,EAAO0tD,aACpBysG,GAAYhhJ,EAAYnY,QAEjBhB,EAAOm6J,SAAWn6J,EAAO0tD,YAE9BysG,EAAWn6J,EAAO0tD,aACpBysG,GAAYhhJ,EAAYnY,SAI9Bs+J,EAAcnF,EACdkF,EAAiBb,EAEpB,CAED,MAAMiB,EAAYP,EAAWxE,QAAQ2E,GACrC,IAAIK,EAAyBD,EAAU3E,KACvC,GAAIoE,EAAWV,cAAgBa,GAAkBK,EAAwB,CAEvE,MAAMC,EAAgBnF,GACpBiF,EAAUtmJ,YACVmmJ,GAGEn4I,GADUsjB,EAAIu5B,uBAAuB27F,GACrBT,EAAWX,SAAW5C,IACxC+D,GAAyB,EAE5B,CAED,GAAIA,EAAwB,CAC1B,MAAMvmJ,EAAcsmJ,EAAUtmJ,YACxBs0C,EAAQt0C,EAAYnY,OACpB0sD,EAAa+xG,EAAU/xG,WACvBysG,EAAWmF,EACjB,GAAI5xG,EAAaysG,EAAU,CACzB,MAAMyF,EAAkB1F,GACtB/gJ,EACAu0C,EACAysG,GAEsBD,GACtB/gJ,EACAu0C,EACAysG,EAAW1sG,GAESmyG,IACpBN,GAAe7xG,EAEvB,KAAW,CACL,MAAMoyG,EAAkB3F,GACtB/gJ,EACAu0C,EACAysG,GAEsBD,GACtB/gJ,EACAu0C,EACAysG,EAAW1sG,GAESoyG,IACpBP,GAAe7xG,EAElB,CACF,CAID,OAFAotG,GAAiB/3J,MAAQu8J,EACzBxE,GAAiBV,SAAWmF,EACrBzE,EACT,CA2wB+BiF,CACzBp6J,EAAMsR,WACNkoJ,EACAr/J,KAAKogD,SACLpgD,KAAK67J,gBAGP,GAAIwD,EAAWV,cAAgBW,EAAmBr8J,MAAO,CAEvD,IAAgC,IAA5Bo8J,EAAWV,YAAoB,CAEjC,MAAMuB,EAAYb,EAAWxE,QAAQwE,EAAWV,aAChD3+J,KAAK++J,yBAAyBmB,EAAUryG,WAAYqyG,EAAU5F,SAC/D,CAED,MAAMsF,EAAYP,EAAWxE,QAAQyE,EAAmBr8J,OACxDjD,KAAK8+J,sBACHc,EACAA,EAAU/xG,WACVyxG,EAAmBhF,SAE3B,KAAW,CAEL,MAAMn6J,EAASk/J,EAAWxE,QAAQwE,EAAWV,aAC7C3+J,KAAK4+J,8BAA8Bz+J,EAAQm/J,EAAmBhF,SAC/D,CAGD+E,EAAWV,YAAcW,EAAmBr8J,MAC5C,MAAM9C,EAASk/J,EAAWxE,QAAQwE,EAAWV,aAC7Cx+J,EAAOm6J,SAAWgF,EAAmBhF,SAGrC,MAAMnjJ,EAAawjJ,GACjBx6J,EAAOmZ,YACPnZ,EAAOm6J,UAEHj9G,EAAQr9C,KAAKogD,SAAS+jB,uBAAuBhtD,GACnDtR,EAAMsR,WAAaA,EACnBtR,EAAMw3C,MAAQ,CAACrxC,KAAKgZ,MAAMq4B,EAAM,IAAKrxC,KAAKgZ,MAAMq4B,EAAM,IACvD,CAOD,aAAAmY,CAAc3vD,GACZ,IAAIqwD,GAAO,EAEX,GAA+B,IAA3Bl2D,KAAK41D,kBAAyB,CAC5B51D,KAAKw7J,eACPtwG,aAAalrD,KAAKw7J,cAClBx7J,KAAKw7J,kBAAeh1J,GAGtBxG,KAAK4rD,mBAAmB/lD,GACxB,MAAMs6J,EAAUngK,KAAK+9J,YAAYnpG,OAGjC,GAFA50D,KAAKw+J,kBAAkB34J,GAEnB7F,KAAKs7J,cAAe,CACtB,MAAM8E,GAAkBpgK,KAAK+8J,kBACzBqD,GACFpgK,KAAKs+J,cAAcz4J,EAAMsR,aAEtBipJ,GAAkBpgK,KAAK27J,UAC1B37J,KAAKqgK,gBAEJrgK,KAAK27J,WACJyE,GAAiC,UAAfpgK,KAAK67D,QAErB77D,KAAKsgK,UAAUz6J,EAAMw3C,MAAO8iH,GAC1BngK,KAAKs8J,iBAAiBz2J,IACxB7F,KAAKqgK,gBAGPrgK,KAAKq+J,cAAcx4J,EAAMsR,aAG7B++C,GAAO,CACf,MAAiBl2D,KAAK27J,WACd37J,KAAKugK,cAER,CAKD,OAHKrqG,GAAQl2D,KAAKg8J,YAChBn2J,EAAMzF,iBAED81D,CACR,CAOD,kBAAAtK,CAAmB/lD,GAEjB,GADA7F,KAAK07J,aAAe71J,EAAM0iD,cAAckP,YAEtCz3D,KAAKu7J,WACFv7J,KAAK27J,WAAa37J,KAAKs7J,eACvBt7J,KAAK27J,YAAc37J,KAAKs7J,eAC3B,CACA,MAAMkF,EAASxgK,KAAKu7J,QACdkF,EAAU56J,EAAMw3C,MAChBxlC,EAAK2oJ,EAAO,GAAKC,EAAQ,GACzB3oJ,EAAK0oJ,EAAO,GAAKC,EAAQ,GACzB38I,EAAkBjM,EAAKA,EAAKC,EAAKA,EAIvC,GAHA9X,KAAKs7J,cAAgBt7J,KAAK27J,UACtB73I,EAAkB9jB,KAAKq9J,uBACvBv5I,GAAmB9jB,KAAKq9J,wBACvBr9J,KAAKs7J,cACR,MAEH,CAEIt7J,KAAK+8J,mBAKV/8J,KAAKo/J,aAAav5J,GAClB7F,KAAK0gK,eAAe76J,EAAMsR,aALxBnX,KAAK2gK,2BAA2B96J,EAAMsR,WAAWrT,QAMpD,CASD,SAAAw8J,CAAUjjH,EAAO8iH,GACf,IAAIS,GAAK,EACT,GAAI5gK,KAAKg9J,eAAgB,CACvB,IAAI6D,GAAkB,EAClBC,EAA+B,CAAC9gK,KAAK+8J,mBACzC,MAAML,EAAO18J,KAAK67D,MAClB,GAAa,UAAT6gG,EACFkE,GAAK,OACA,GAAa,WAATlE,EACTkE,EAAmC,IAA9B5gK,KAAKk9J,cAAc/7J,YACnB,GAAa,eAATu7J,EACTmE,GACGV,GAAWngK,KAAKk9J,cAAc/7J,OAASnB,KAAKk8J,gBAC1C,GAAa,YAATQ,EAAoB,CAC7B,MAAMqE,EAA6C/gK,KAAkB,cACrE6gK,EAAkBE,EAAa,GAAG5/J,OAASnB,KAAKk8J,WAChD4E,EAA+B,CAC7BC,EAAa,GAAG,GAChBA,EAAa,GAAGA,EAAa,GAAG5/J,OAAS,IAGzC2/J,EADEX,EAC6B,CAACY,EAAa,GAAG,IAEjB,CAC7BA,EAAa,GAAG,GAChBA,EAAa,GAAGA,EAAa,GAAG5/J,OAAS,GAG9C,CACD,GAAI0/J,EAAiB,CACnB,MAAMj2H,EAAM5qC,KAAKogD,SACjB,IAAK,IAAIx+C,EAAI,EAAGuE,EAAK26J,EAA6B3/J,OAAQS,EAAIuE,EAAIvE,IAAK,CACrE,MAAMo/J,EAAmBF,EAA6Bl/J,GAChDq/J,EAAcr2H,EAAIu5B,uBAAuB68F,GACzCnpJ,EAAKwlC,EAAM,GAAK4jH,EAAY,GAC5BnpJ,EAAKulC,EAAM,GAAK4jH,EAAY,GAC5BnF,EAAgB97J,KAAK27J,UAAY,EAAI37J,KAAK67J,eAEhD,GADA+E,EAAK50J,KAAKka,KAAKrO,EAAKA,EAAKC,EAAKA,IAAOgkJ,EACjC8E,EAAI,CACN5gK,KAAK+8J,kBAAoBiE,EACzB,KACD,CACF,CACF,CACF,CACD,OAAOJ,CACR,CAMD,0BAAAD,CAA2BrnJ,GACzB,GAAKtZ,KAAKi9J,aAGH,CACmBj9J,KAAKi9J,aAAahoJ,cAC1B+a,eAAe1W,EAChC,MALCtZ,KAAKi9J,aAAe,IAAI9oJ,GAAQ,IAAImf,GAAMha,IAC1CtZ,KAAKkhK,uBAKR,CAMD,+BAAAC,CAAgCxsJ,GACzB3U,KAAKm9J,cACRn9J,KAAKm9J,YAAc,IAAIhpJ,IAEzB,MAAM8mJ,EAAOtmJ,EAASmiB,cAAc,GACpC,IAAIsqI,EAAiBphK,KAAKm9J,YAAYloJ,cACjCmsJ,GAOHA,EAAerxI,mBACbkrI,EAAKrrI,YACLqrI,EAAK5rI,sBAEP+xI,EAAev5J,YAVfu5J,EAAiB,IAAIrnF,GACnBkhF,EAAK5rI,qBACL4rI,EAAKrrI,aAEP5vB,KAAKm9J,YAAYvoJ,YAAYwsJ,GAQhC,CAOD,aAAA9C,CAAc7wJ,GACZ,MAAMyR,EAAalf,KAAKogD,SAAS1C,UAAUhvB,gBACrC3T,EAASmU,GAAmBlvB,KAAKw8J,iBACvC,KAAO/uJ,EAAMtM,OAAS4Z,GACpBtN,EAAM9H,KAAK,GAEb3F,KAAK+8J,kBAAoBtvJ,EACN,UAAfzN,KAAK67D,MACP77D,KAAKk9J,cAAgBzvJ,EAAM3J,QACH,YAAf9D,KAAK67D,OACd77D,KAAKk9J,cAAgB,CAAC,CAACzvJ,EAAM3J,QAAS2J,EAAM3J,UAC5C9D,KAAKo9J,kBAAoBp9J,KAAKk9J,cAAc,IAE5Cl9J,KAAKk9J,cAAgB,CAACzvJ,EAAM3J,QAAS2J,EAAM3J,SAEzC9D,KAAKo9J,oBACPp9J,KAAKm9J,YAAc,IAAIhpJ,GAAQ,IAAI4lE,GAAW/5E,KAAKo9J,qBAErD,MAAMzoJ,EAAW3U,KAAKunH,kBACpBvnH,KAAKk9J,mBACL12J,EACA0Y,GAEFlf,KAAKg9J,eAAiB,IAAI7oJ,GACtBnU,KAAKsU,eACPtU,KAAKg9J,eAAejoJ,gBAAgB/U,KAAKsU,eAE3CtU,KAAKg9J,eAAepoJ,YAAYD,GAChC3U,KAAKkhK,wBACLlhK,KAAK4F,cACH,IAAIs0J,GAAUD,GAAyBj6J,KAAKg9J,gBAE/C,CAOD,cAAA0D,CAAevpJ,GACb,MAAMyzB,EAAM5qC,KAAKogD,SACXzrC,EAAW3U,KAAKg9J,eAAe/nJ,cAC/BiK,EAAa0rB,EAAI8S,UAAUhvB,gBAC3B3T,EAASmU,GAAmBlvB,KAAKw8J,iBACvC,IAAIljJ,EAAawY,EACjB,KAAO3a,EAAWhW,OAAS4Z,GACzB5D,EAAWxR,KAAK,GAsBlB,GApBmB,UAAf3F,KAAK67D,MACP/pC,EAAO9xB,KAAKk9J,cACY,YAAfl9J,KAAK67D,OACdviD,EAA4CtZ,KAAkB,cAAE,GAChE8xB,EAAOxY,EAAYA,EAAYnY,OAAS,GACpCnB,KAAKsgK,UAAU11H,EAAIu5B,uBAAuBhtD,MAE5CA,EAAanX,KAAK+8J,kBAAkBj5J,WAGtCwV,EAActZ,KAAKk9J,cACnBprI,EAAOxY,EAAYA,EAAYnY,OAAS,IAE1C2wB,EAAK,GAAK3a,EAAW,GACrB2a,EAAK,GAAK3a,EAAW,GACrBnX,KAAKunH,kBAC4BvnH,KAAkB,cACjD2U,EACAuK,GAEElf,KAAKi9J,aAAc,CACGj9J,KAAKi9J,aAAahoJ,cAC1B+a,eAAe7Y,EAChC,CACD,GAA2B,YAAvBxC,EAAS6Z,WAA0C,YAAfxuB,KAAK67D,MAC3C77D,KAAKmhK,gCAAwD,QACxD,GAAInhK,KAAKo9J,kBAAmB,CACVp9J,KAAKm9J,YAAYloJ,cACzB+a,eAAehwB,KAAKo9J,kBACpC,CACDp9J,KAAKkhK,uBACN,CAOD,aAAA7C,CAAclnJ,GACZ,MAAMxC,EAAW3U,KAAKg9J,eAAe/nJ,cAC/BiK,EAAalf,KAAKogD,SAAS1C,UAAUhvB,gBAC3C,IAAI20B,EACA/pC,EACJ,MAAMojJ,EAAO18J,KAAK67D,MACL,eAAT6gG,GAAkC,WAATA,GAC3B18J,KAAK+8J,kBAAoB5lJ,EAAWrT,QACpCwV,EAA4CtZ,KAAkB,cAC1DsZ,EAAYnY,QAAUnB,KAAKo8J,aACzBp8J,KAAK27J,UACPriJ,EAAYrO,MAEZo4C,GAAO,GAGX/pC,EAAY3T,KAAKwR,EAAWrT,SAC5B9D,KAAKunH,kBAAkBjuG,EAAa3E,EAAUuK,IAC5B,YAATw9I,IACTpjJ,EAA4CtZ,KAAkB,cAAE,GAC5DsZ,EAAYnY,QAAUnB,KAAKo8J,aACzBp8J,KAAK27J,UACPriJ,EAAYrO,MAEZo4C,GAAO,GAGX/pC,EAAY3T,KAAKwR,EAAWrT,SACxBu/C,IACFrjD,KAAK+8J,kBAAoBzjJ,EAAY,IAEvCtZ,KAAKunH,kBAAkBvnH,KAAKk9J,cAAevoJ,EAAUuK,IAEvDlf,KAAK2gK,2BAA2BxpJ,EAAWrT,SAC3C9D,KAAKkhK,wBACD79G,GACFrjD,KAAKqgK,eAER,CAKD,iBAAAnB,CAAkBv9J,GAChB,IAAK3B,KAAKg9J,eACR,OAEF,MAAMroJ,EAAW3U,KAAKg9J,eAAe/nJ,cAC/BiK,EAAalf,KAAKogD,SAAS1C,UAAUhvB,gBACrCguI,EAAO18J,KAAK67D,MAClB,IAAK,IAAIj6D,EAAI,EAAGA,EAAID,IAAKC,EAAG,CAC1B,IAAI0X,EACJ,GAAa,eAATojJ,GAAkC,WAATA,EAAmB,CAG9C,GAFApjJ,EAA4CtZ,KAAkB,cAC9DsZ,EAAYzS,QAAQ,EAAG,GACnByS,EAAYnY,QAAU,EAAG,CAC3BnB,KAAK+8J,kBAAoBzjJ,EAAYA,EAAYnY,OAAS,GAAG2C,QAC7D,MAAMk9J,EAAmBhhK,KAAK+8J,kBAAkBj5J,QAChDwV,EAAYA,EAAYnY,OAAS,GAAK6/J,EACtChhK,KAAK2gK,2BAA2BK,EACjC,CACDhhK,KAAKunH,kBAAkBjuG,EAAa3E,EAAUuK,GACnB,YAAvBvK,EAAS6Z,WAA2BxuB,KAAKm9J,aAC3Cn9J,KAAKmhK,gCACf,EAGA,MAAa,GAAa,YAATzE,EAAoB,CAC7BpjJ,EAA4CtZ,KAAkB,cAAE,GAChEsZ,EAAYzS,QAAQ,EAAG,GACvB,MAAMu6J,EAAiBphK,KAAKm9J,YAAYloJ,cACxC,GAAIqE,EAAYnY,QAAU,EAAG,CAC3B,MAAM6/J,EAAmB1nJ,EAAYA,EAAYnY,OAAS,GAAG2C,QAC7DwV,EAAYA,EAAYnY,OAAS,GAAK6/J,EACtChhK,KAAK2gK,2BAA2BK,EACjC,CACDI,EAAepxI,eAAe1W,GAC9BtZ,KAAKunH,kBAAkBvnH,KAAKk9J,cAAevoJ,EAAUuK,EACtD,CAED,GAA2B,IAAvB5F,EAAYnY,OAAc,CAC5BnB,KAAKugK,eACL,KACD,CACF,CAEDvgK,KAAKkhK,uBACN,CAOD,eAAAG,GACErhK,KAAKk/J,kBAAkB,EACxB,CAQD,aAAAmB,GACE,MAAMiB,EAAgBthK,KAAKuhK,gBAC3B,IAAKD,EACH,OAEF,IAAIhoJ,EAActZ,KAAKk9J,cACvB,MAAMvoJ,EAAW2sJ,EAAcrsJ,cACzBiK,EAAalf,KAAKogD,SAAS1C,UAAUhvB,gBACxB,eAAf1uB,KAAK67D,OAEPviD,EAAYrO,MACZjL,KAAKunH,kBAAkBjuG,EAAa3E,EAAUuK,IACtB,YAAflf,KAAK67D,QAEe,EAAc,GAAG5wD,MAC9CjL,KAAKunH,kBAAkBjuG,EAAa3E,EAAUuK,GAC9C5F,EAAc3E,EAAS8a,kBAIN,eAAfzvB,KAAKm6F,MACPmnE,EAAc1sJ,YACZ,IAAIslE,GAAW,CAAgC,KAEzB,oBAAfl6E,KAAKm6F,MACdmnE,EAAc1sJ,YACZ,IAAIulE,GAAgB,CAA+B,KAE7B,iBAAfn6E,KAAKm6F,OACdmnE,EAAc1sJ,YACZ,IAAIwlE,GAAa,CAA+B,KAKpDp6E,KAAK4F,cAAc,IAAIs0J,GAAUD,GAAuBqH,IAGpDthK,KAAK47J,WACP57J,KAAK47J,UAAUj2J,KAAK27J,GAElBthK,KAAK44J,SACP54J,KAAK44J,QAAQx8D,WAAWklE,EAE3B,CAOD,aAAAC,GACEvhK,KAAK+8J,kBAAoB,KACzB,MAAMuE,EAAgBthK,KAAKg9J,eAM3B,OALAh9J,KAAKg9J,eAAiB,KACtBh9J,KAAKi9J,aAAe,KACpBj9J,KAAKm9J,YAAc,KACnBn9J,KAAKu9J,SAAStgH,YAAYt4C,OAAM,GAChC3E,KAAKu+J,mBACE+C,CACR,CAMD,YAAAf,GACE,MAAMe,EAAgBthK,KAAKuhK,gBACvBD,GACFthK,KAAK4F,cAAc,IAAIs0J,GAAUD,GAAyBqH,GAE7D,CAWD,iBAAAnC,CAAkB7lJ,GAChB,MAAMojJ,EAAO18J,KAAK67D,MACZ2lG,GAAcxhK,KAAKg9J,eAKzB,IAAI+D,EACJ,GALIS,GACFxhK,KAAKs+J,cAAchlJ,EAAY,IAIpB,eAATojJ,GAAkC,WAATA,EAC3BqE,EAA6C/gK,KAAkB,kBAC1D,IAAa,YAAT08J,EAMT,OALAqE,EACE/gK,KAAKk9J,eAAiBl9J,KAAKk9J,cAAc/7J,OACPnB,KAAkB,cAAE,GAClD,EAGP,CAEGwhK,GACFT,EAAalxJ,QAIfkxJ,EAAa91J,MAGb,IAAK,IAAIrJ,EAAI,EAAGA,EAAI0X,EAAYnY,OAAQS,IACtC5B,KAAKq+J,cAAc/kJ,EAAY1X,IAGjC,MAAM6/J,EAASnoJ,EAAYA,EAAYnY,OAAS,GAEhDnB,KAAKq+J,cAAcoD,GACnBzhK,KAAK0gK,eAAee,EACrB,CAcD,MAAAv/J,CAAOu9C,GACL,MACMu4C,EADWv4C,EAAQxqC,cAEzBjV,KAAKg9J,eAAiBv9G,EACtBz/C,KAAKk9J,cAAgBllE,EAAWvoE,iBAChC,MAAMqC,EAAO9xB,KAAKk9J,cAAcl9J,KAAKk9J,cAAc/7J,OAAS,GAC5DnB,KAAK+8J,kBAAoBjrI,EAAKhuB,QAC9B9D,KAAKk9J,cAAcv3J,KAAKmsB,EAAKhuB,SAC7B9D,KAAKi9J,aAAe,IAAI9oJ,GAAQ,IAAImf,GAAMxB,IAC1C9xB,KAAKkhK,wBACLlhK,KAAK4F,cACH,IAAIs0J,GAAUD,GAAyBj6J,KAAKg9J,gBAE/C,CAMD,qBAAAkE,GACE,MAAMQ,EAAiB,GACnB1hK,KAAKg9J,gBACP0E,EAAe/7J,KAAK3F,KAAKg9J,gBAEvBh9J,KAAKm9J,aACPuE,EAAe/7J,KAAK3F,KAAKm9J,aAEvBn9J,KAAKi9J,cACPyE,EAAe/7J,KAAK3F,KAAKi9J,cAE3B,MAAM0E,EAAgB3hK,KAAKu9J,SAAStgH,YACpC0kH,EAAch9J,OAAM,GACpBg9J,EAAc1zF,YAAYyzF,EAC3B,CAKD,YAAAxD,GACE,MAAMtzH,EAAM5qC,KAAKogD,SACXwU,EAAS50D,KAAK00D,YACf9pB,GAAQgqB,GACX50D,KAAKugK,eAEPvgK,KAAKu9J,SAASzgH,OAAO8X,EAAShqB,EAAM,KACrC,GCzwDH,MAAMg3H,GAMW,gBAQV,MAAMC,WAAoB97J,EAI/B,WAAAjG,CAAYyZ,GACVtU,MAAM28J,IAON5hK,KAAKuZ,OAASA,CACf,EAoZH,SAASuoJ,KACP,MAAMxxJ,EAAQ23G,KACd,OAAO,SAAUxoE,EAAS/iC,GACxB,OAAOpM,EAAe,OAC1B,CACA,CAOA,SAASyxJ,KACP,MAAMzxJ,EAAQ23G,KACd,OAAO,SAAUxoE,EAAS/iC,GACxB,OAAOpM,EAAa,KACxB,CACA,CAMA,SAAS0xJ,GAAgBC,GACvB,OAAO,SAAUv/I,GACf,OAAOrJ,GAAe,CAAC4oJ,EAAYv/I,GACvC,CACA,CAOA,SAASw/I,GAAeC,EAASC,GAC/B,OAAID,EAAQ,IAAMC,EAAQ,GACjB,SAAU1/I,GACf,OAAOrJ,GAAe,CAAC8oJ,EAAS,CAACz/I,EAAM,GAAI0/I,EAAQ,KACzD,EAEMD,EAAQ,IAAMC,EAAQ,GACjB,SAAU1/I,GACf,OAAOrJ,GAAe,CAAC8oJ,EAAS,CAACC,EAAQ,GAAI1/I,EAAM,KACzD,EAES,IACT,CA2BA,IAAA2/I,GAvcA,cAAqBxqG,GAInB,WAAA/3D,CAAY4K,GAGVzF,MAFAyF,EAAUA,GAAW,IAOrB1K,KAAK0H,GAKL1H,KAAKiH,KAKLjH,KAAK2H,GAOL3H,KAAKo4D,WAAa1tD,EAAQytD,UAAYztD,EAAQytD,UAAYrB,GAO1D92D,KAAKqgB,QAAU,KAOfrgB,KAAKsiK,gBAAkB,KAOvBtiK,KAAKuiK,qBACwB/7J,IAA3BkE,EAAQ83J,eAA+B93J,EAAQ83J,eAAiB,GAOlExiK,KAAKyiK,kBAAmB,EAOxBziK,KAAK0iK,eAAiB,KAOtB1iK,KAAK2iK,eAAiB,KAEjBj4J,IACHA,EAAU,CAAA,GAQZ1K,KAAK4iK,eAAiB,IAAIxxB,GAAY,CACpCnnI,OAAQ,IAAIi1F,GAAa,CACvB1D,iBAAiB,EACjBv8E,QAASvU,EAAQuU,QAEnB3O,MAAO5F,EAAQm4J,SACXn4J,EAAQm4J,SACRf,KACJ9iC,sBAAsB,EACtBE,wBAAwB,IAQ1Bl/H,KAAK8iK,eAAiB,IAAI1xB,GAAY,CACpCnnI,OAAQ,IAAIi1F,GAAa,CACvB1D,iBAAiB,EACjBv8E,QAASvU,EAAQuU,QAEnB3O,MAAO5F,EAAQq4J,aACXr4J,EAAQq4J,aACRhB,KACJ/iC,sBAAsB,EACtBE,wBAAwB,IAGtBx0H,EAAQ6O,QACVvZ,KAAK4hB,UAAUlX,EAAQ6O,OAE1B,CAQD,aAAAypJ,CAAc3lH,EAAOzS,GACnB,MAAMq4H,EAAkBr4H,EAAI+tB,+BAA+Btb,GACrD6lH,EAAiB,SAAU7hK,EAAGC,GAClC,OACEimB,GAAyB07I,EAAiB5hK,GAC1CkmB,GAAyB07I,EAAiB3hK,EAElD,EACUiY,EAASvZ,KAAKmjK,oBACpB,GAAI5pJ,EAAQ,CAEV,MAAM6pJ,EA4SZ,SAAqB7pJ,GACnB,MAAO,CACL,CACE,CAACA,EAAO,GAAIA,EAAO,IACnB,CAACA,EAAO,GAAIA,EAAO,KAErB,CACE,CAACA,EAAO,GAAIA,EAAO,IACnB,CAACA,EAAO,GAAIA,EAAO,KAErB,CACE,CAACA,EAAO,GAAIA,EAAO,IACnB,CAACA,EAAO,GAAIA,EAAO,KAErB,CACE,CAACA,EAAO,GAAIA,EAAO,IACnB,CAACA,EAAO,GAAIA,EAAO,KAGzB,CA/TuB8pJ,CAAY9pJ,GAC7B6pJ,EAAShvI,KAAK8uI,GACd,MAAMI,EAAiBF,EAAS,GAEhC,IAAIG,EAASp9I,GAAiB88I,EAAiBK,GAC/C,MAAME,EAAc54H,EAAI8tB,+BAA+B6qG,GAGvD,GAAIE,GAAmBpmH,EAAOmmH,IAAgBxjK,KAAKuiK,gBAAiB,CAElE,MAAMmB,EAAS94H,EAAI8tB,+BAA+B4qG,EAAe,IAC3DK,EAAS/4H,EAAI8tB,+BAA+B4qG,EAAe,IAC3DM,EAAehH,GAA0B4G,EAAaE,GACtDG,EAAejH,GAA0B4G,EAAaG,GACtDG,EAAO93J,KAAKka,KAAKla,KAAKwP,IAAIooJ,EAAcC,IAM9C,OALA7jK,KAAKyiK,iBAAmBqB,GAAQ9jK,KAAKuiK,gBACjCviK,KAAKyiK,mBACPc,EACEK,EAAeC,EAAeP,EAAe,GAAKA,EAAe,IAE9DC,CACR,CACF,CACD,OAAO,IACR,CAMD,kBAAA33G,CAAmB+I,GACjB,MAAMtX,EAAQsX,EAAgBtX,MACxBzS,EAAM+pB,EAAgB/pB,IAE5B,IAAI24H,EAASvjK,KAAKgjK,cAAc3lH,EAAOzS,GAClC24H,IACHA,EAAS34H,EAAI+tB,+BAA+Btb,IAE9Cr9C,KAAK+jK,8BAA8BR,EACpC,CAOD,4BAAAS,CAA6BzqJ,GAC3B,IAAI0qJ,EAAgBjkK,KAAK0iK,eAiBzB,OAfKuB,EASE1qJ,EAGH0qJ,EAAcrvJ,YAAYglC,GAAkBrgC,IAF5C0qJ,EAAcrvJ,iBAAYpO,IAN1By9J,EAAgB,IAAI9vJ,GAHjBoF,EAGyBqgC,GAAkBrgC,GAFlB,CAAA,GAI9BvZ,KAAK0iK,eAAiBuB,EACtBjkK,KAAK4iK,eAAe3lH,YAAYm/C,WAAW6nE,IAQtCA,CACR,CAOD,6BAAAF,CAA8BR,GAC5B,IAAIW,EAAgBlkK,KAAK2iK,eACzB,GAAKuB,EAIE,CACYA,EAAcjvJ,cACtB+a,eAAeuzI,EACzB,MANCW,EAAgB,IAAI/vJ,GAAQ,IAAImf,GAAMiwI,IACtCvjK,KAAK2iK,eAAiBuB,EACtBlkK,KAAK8iK,eAAe7lH,YAAYm/C,WAAW8nE,GAK7C,OAAOA,CACR,CAMD,WAAA99J,CAAYuuD,GACV,OAAKA,EAAgBpM,gBAAkBvoD,KAAKo4D,WAAWzD,KAKrDA,EAAgB50D,MAAQ+oD,GAAoBK,aAC3CnpD,KAAK01D,wBAEN11D,KAAK4rD,mBAAmB+I,GAG1B1vD,MAAMmB,YAAYuuD,IAEX,EACR,CAOD,eAAAU,CAAgBV,GACd,MAAMtX,EAAQsX,EAAgBtX,MACxBzS,EAAM+pB,EAAgB/pB,IAEtBrxB,EAASvZ,KAAKmjK,oBACpB,IAAII,EAASvjK,KAAKgjK,cAAc3lH,EAAOzS,GAGvC,MAAMu5H,EAAmB,SAAUzhJ,GACjC,IAAI0hJ,EAAK,KACLC,EAAK,KAWT,OAVI3hJ,EAAM,IAAMnJ,EAAO,GACrB6qJ,EAAK7qJ,EAAO,GACHmJ,EAAM,IAAMnJ,EAAO,KAC5B6qJ,EAAK7qJ,EAAO,IAEVmJ,EAAM,IAAMnJ,EAAO,GACrB8qJ,EAAK9qJ,EAAO,GACHmJ,EAAM,IAAMnJ,EAAO,KAC5B8qJ,EAAK9qJ,EAAO,IAEH,OAAP6qJ,GAAsB,OAAPC,EACV,CAACD,EAAIC,GAEP,IACb,EACI,GAAId,GAAUhqJ,EAAQ,CACpB,MAAMnC,EACJmsJ,EAAO,IAAMhqJ,EAAO,IAAMgqJ,EAAO,IAAMhqJ,EAAO,GAAKgqJ,EAAO,GAAK,KAC3DlsJ,EACJksJ,EAAO,IAAMhqJ,EAAO,IAAMgqJ,EAAO,IAAMhqJ,EAAO,GAAKgqJ,EAAO,GAAK,KAGvD,OAANnsJ,GAAoB,OAANC,EAChBrX,KAAKsiK,gBAAkBN,GAAgBmC,EAAiBZ,IAEzC,OAANnsJ,EACTpX,KAAKsiK,gBAAkBJ,GACrBiC,EAAiB,CAAC/sJ,EAAGmC,EAAO,KAC5B4qJ,EAAiB,CAAC/sJ,EAAGmC,EAAO,MAEf,OAANlC,IACTrX,KAAKsiK,gBAAkBJ,GACrBiC,EAAiB,CAAC5qJ,EAAO,GAAIlC,IAC7B8sJ,EAAiB,CAAC5qJ,EAAO,GAAIlC,KAIvC,MACMksJ,EAAS34H,EAAI+tB,+BAA+Btb,GAC5Cr9C,KAAK4hB,UAAU,CAAC2hJ,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,KACxDvjK,KAAKsiK,gBAAkBN,GAAgBuB,GAEzC,OAAO,CACR,CAMD,eAAAjuG,CAAgBX,GACd,GAAI30D,KAAKsiK,gBAAiB,CACxB,MAAMW,EAAkBtuG,EAAgBx9C,WACxCnX,KAAK4hB,UAAU5hB,KAAKsiK,gBAAgBW,IACpCjjK,KAAK+jK,8BAA8Bd,EACpC,CACF,CAOD,aAAAztG,CAAcb,GACZ30D,KAAKsiK,gBAAkB,KAEvB,MAAM/oJ,EAASvZ,KAAKmjK,oBAIpB,OAHK5pJ,GAA8B,IAApB0C,GAAQ1C,IACrBvZ,KAAK4hB,UAAU,OAEV,CACR,CAQD,MAAAk7B,CAAOlS,GACL5qC,KAAK4iK,eAAe9lH,OAAOlS,GAC3B5qC,KAAK8iK,eAAehmH,OAAOlS,GAC3B3lC,MAAM63C,OAAOlS,EACd,CAQD,SAAAxrB,GACE,OAAO+M,GACLnsB,KAAKmjK,oBACLnjK,KAAKogD,SAAS1C,UAAUhvB,gBAE3B,CAQD,iBAAAy0I,GACE,OAAOnjK,KAAKqgB,OACb,CAQD,SAAAuB,CAAUrI,GAERvZ,KAAKqgB,QAAU9G,GAAkB,KACjCvZ,KAAKgkK,6BAA6BzqJ,GAClCvZ,KAAK4F,cAAc,IAAIi8J,GAAY7hK,KAAKqgB,SACzC,GC/bH,SAASikJ,GAAWhU,GAClB,OAAOzlH,WAAWylH,EACpB,CAMA,SAASiU,GAAYp/I,GACnB,OAjBF,SAAaA,GACX,OAAON,GAAQM,EAAQ,EACzB,CAeSq/I,CAAIr/I,GAAQxM,UACrB,CAOA,SAAS8rJ,GAAgBpjK,EAAGC,GAC1B,OAAIgtB,MAAMjtB,IAGHA,IAAMijK,GAAWC,GAAYjjK,GACtC,CAkaA,IAAAojK,GA/XA,cAAmB5vG,GAIjB,WAAAh1D,CAAY4K,GAaV,IAAIi6J,EAZJ1/J,QAcE0/J,GADsB,KAXxBj6J,EAAUhE,OAAO6C,OACf,CACEusC,SAAS,EACTy6C,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,KAC7BjtE,SAAS,EACTqnH,OAAQ,IAEVjgI,GAAW,CAAE,IAIHorC,QACS,CAAC7X,SAAU,KACpBvzB,EAAQorC,QAGCprC,EAAQorC,QAFR,KASrB91C,KAAK4kK,kBAAoBD,EAMzB3kK,KAAK2lG,QAAUj7F,EAAQ6lF,OAAO/rC,QAAO,CAAC00B,EAAK70E,KACzC60E,EAAI70E,IAAS,EACN60E,IACN,CAAE,GAMLl5E,KAAK6kK,SAAWn6J,EAAQ4Y,QAMxBtjB,KAAK8kK,QAAUp6J,EAAQigI,OAMvB3qI,KAAKknD,cAAgB,GAMrBlnD,KAAK+kK,UAAW,EAEhB/kK,KAAKk+J,aAAel+J,KAAKk+J,aAAah3J,KAAKlH,MAO3CA,KAAKglK,kBAAoB,GAOzBhlK,KAAKilK,eAAiB,EACvB,CAOD,aAAAC,CAAczvJ,GACZ,OAAKzV,KAAK8kK,QAGH9kK,KAAK8kK,QAAUrvJ,EAFbA,CAGV,CAQD,IAAA0vJ,CAAK50E,EAAQ96E,GACX,OAAO86E,EAAOpnF,IAAInJ,KAAKklK,cAAczvJ,GACtC,CAQD,IAAA2vJ,CAAK70E,EAAQ96E,EAAMpR,GACXoR,KAAQzV,KAAK2lG,SAGnBpV,EAAOzmF,IAAI9J,KAAKklK,cAAczvJ,GAAOpR,EACtC,CAOD,OAAAghK,CAAQ90E,EAAQ96E,GACRA,KAAQzV,KAAK2lG,SAGnBpV,EAAOE,OAAOzwF,KAAKklK,cAAczvJ,GAClC,CAKD,MAAAqnC,CAAOlS,GACL,MAAM06H,EAAStlK,KAAKogD,SACpBn7C,MAAM63C,OAAOlS,GACTA,IAAQ06H,IAGRA,GACFtlK,KAAKq5J,qBAAqBiM,GAExB16H,IACF5qC,KAAK+kK,UAAW,EAChB/kK,KAAKk+J,eACLl+J,KAAKi5J,mBAAmBruH,IAE3B,CAMD,kBAAAquH,CAAmBruH,GACjB5qC,KAAKknD,cAAcvhD,KACjBoB,EAAO6jC,EAAKshB,GAAsBlsD,KAAKulK,WAAYvlK,MACnD+G,EAAO6jC,EAAIiT,gBAAiB/2C,EAAkB9G,KAAKulK,WAAYvlK,MAC/D+G,EAAO6jC,EAAK,oBAAqB5qC,KAAKwlK,wBAAyBxlK,OAG5DA,KAAK6kK,UACRv/J,iBAAiB,WAAYtF,KAAKk+J,aAErC,CAMD,oBAAA7E,CAAqBzuH,GACnB,IAAK,IAAIhpC,EAAI,EAAGuE,EAAKnG,KAAKknD,cAAc/lD,OAAQS,EAAIuE,IAAMvE,EACxD0F,EAActH,KAAKknD,cAActlD,IAEnC5B,KAAKknD,cAAc/lD,OAAS,EAEvBnB,KAAK6kK,UACRv+J,oBAAoB,WAAYtG,KAAKk+J,cAGvC,MAAMrxF,EAAM,IAAIoC,IAAI5/D,OAAO+qI,SAASlrE,MAC9BqhB,EAAS1jB,EAAI2jB,aACnBxwF,KAAKqlK,QAAQ90E,EAAQ,KACrBvwF,KAAKqlK,QAAQ90E,EAAQ,KACrBvwF,KAAKqlK,QAAQ90E,EAAQ,KACrBvwF,KAAKqlK,QAAQ90E,EAAQ,KACrBvwF,KAAKqlK,QAAQ90E,EAAQ,KACrBlhF,OAAOo2J,QAAQC,aAAa,KAAM,GAAI74F,EACvC,CAKD,uBAAA24F,GACE,MAAM56H,EAAM5qC,KAAKogD,SACZxV,IAGL5qC,KAAKq5J,qBAAqBzuH,GAC1B5qC,KAAKi5J,mBAAmBruH,GACxB5qC,KAAK+kK,UAAW,EAChB/kK,KAAKulK,aACN,CAKD,YAAArH,GACE,MACM3tE,EADM,IAAIthB,IAAI5/D,OAAO+qI,SAASlrE,MACjBshB,aACnB,IAAK,MAAMjpF,KAAOvH,KAAKglK,kBAAmB,CACxC,MAAM3gK,EAAQksF,EAAOpnF,IAAI5B,GACrBA,KAAOvH,KAAKglK,mBAAqB3gK,IAAUrE,KAAKilK,eAAe19J,KACjEvH,KAAKilK,eAAe19J,GAAOlD,EAC3BrE,KAAKglK,kBAAkBz9J,GAAKlD,GAE/B,CAED,MAAMumC,EAAM5qC,KAAKogD,SACjB,IAAKxV,EACH,OAEF,MAAM2S,EAAO3S,EAAI8S,UACjB,IAAKH,EACH,OAGF,IAAIooH,GAAa,EAKjB,MAAMC,EAAiB,CAAA,EAEjBzwH,EAAOmvH,GAAWtkK,KAAKmlK,KAAK50E,EAAQ,MACtC,MAAOvwF,KAAK2lG,SAAW8+D,GAAgBtvH,EAAMoI,EAAK3H,aACpD+vH,GAAa,EACbC,EAAezwH,KAAOA,GAGxB,MAAMx4B,EAAW2nJ,GAAWtkK,KAAKmlK,KAAK50E,EAAQ,MAC1C,MAAOvwF,KAAK2lG,SAAW8+D,GAAgB9nJ,EAAU4gC,EAAK1H,iBACxD8vH,GAAa,EACbC,EAAejpJ,SAAWA,GAG5B,MAAMF,EAAS,CACb6nJ,GAAWtkK,KAAKmlK,KAAK50E,EAAQ,MAC7B+zE,GAAWtkK,KAAKmlK,KAAK50E,EAAQ,OAlRnC,IAAwBlvF,EAAGC,GAqRpB,MAAOtB,KAAK2lG,SAAW,MAAO3lG,KAAK2lG,WArRlBtkG,EAsRHob,EAtRMnb,EAsREi8C,EAAKlhC,YArRzBooJ,GAAgBpjK,EAAE,GAAIC,EAAE,KAAOmjK,GAAgBpjK,EAAE,GAAIC,EAAE,OAuR1DqkK,GAAa,EACbC,EAAenpJ,OAASA,GAGtBkpJ,KACG3lK,KAAK+kK,UAAY/kK,KAAK4kK,kBACzBrnH,EAAKzH,QAAQpvC,OAAO6C,OAAOq8J,EAAgB5lK,KAAK4kK,qBAE5CgB,EAAenpJ,QACjB8gC,EAAKzC,UAAU8qH,EAAenpJ,QAE5B,SAAUmpJ,GACZroH,EAAKnI,QAAQwwH,EAAezwH,MAE1B,aAAcywH,GAChBroH,EAAKtI,YAAY2wH,EAAejpJ,YAKtC,MAAMkqC,EAASjc,EAAI8mB,eACbm0G,EAAc7lK,KAAKmlK,KAAK50E,EAAQ,KACtC,GACE,MAAOvwF,KAAK2lG,SACZkgE,GACAA,EAAY1kK,SAAW0lD,EAAO1lD,OAE9B,IAAK,IAAIS,EAAI,EAAGuE,EAAK0gD,EAAO1lD,OAAQS,EAAIuE,IAAMvE,EAAG,CAC/C,MAAMyC,EAAQmM,SAASq1J,EAAYjkK,IACnC,IAAK0sB,MAAMjqB,GAAQ,CACjB,MAAMwoC,EAAU4K,QAAQpzC,GAClBqpC,EAAQmZ,EAAOjlD,GACjB8rC,EAAMG,eAAiBhB,GACzBa,EAAMkB,WAAW/B,EAEpB,CACF,CAEJ,CAWD,KAAAi5H,CAAMv+J,EAAKoU,GACT3b,KAAKglK,kBAAkBz9J,GAAOoU,EAC9B,MAEMtX,EAFM,IAAI4qE,IAAI5/D,OAAO+qI,SAASlrE,MACjBshB,aACErnF,IAAI5B,GAEzB,OADAvH,KAAKilK,eAAe19J,GAAOlD,EACpBA,CACR,CAUD,MAAAu5B,CAAOr2B,EAAKlD,GACV,MAAMwoE,EAAM,IAAIoC,IAAI5/D,OAAO+qI,SAASlrE,MAC9BqhB,EAAS1jB,EAAI2jB,aACL,OAAVnsF,EACFksF,EAAOE,OAAOlpF,GAEdgpF,EAAOzmF,IAAIvC,EAAKlD,GAEdkD,KAAOvH,KAAKilK,iBACdjlK,KAAKilK,eAAe19J,GAAOlD,GAE7BrE,KAAK+lK,eAAel5F,EACrB,CAKD,UAAA04F,GACE,MAAM36H,EAAM5qC,KAAKogD,SACjB,IAAKxV,EACH,OAEF,MAAM2S,EAAO3S,EAAI8S,UACjB,IAAKH,EACH,OAGF,MAAM9gC,EAAS8gC,EAAKlhC,YACd84B,EAAOoI,EAAK3H,UACZj5B,EAAW4gC,EAAK1H,cAEhBgR,EAASjc,EAAI8mB,eACbs0G,EAAe,IAAI3jK,MAAMwkD,EAAO1lD,QACtC,IAAK,IAAIS,EAAI,EAAGuE,EAAK0gD,EAAO1lD,OAAQS,EAAIuE,IAAMvE,EAC5CokK,EAAapkK,GAAKilD,EAAOjlD,GAAGisC,aAAe,IAAM,IAGnD,MAAMg/B,EAAM,IAAIoC,IAAI5/D,OAAO+qI,SAASlrE,MAC9BqhB,EAAS1jB,EAAI2jB,aAEnBxwF,KAAKolK,KAAK70E,EAAQ,IAAKg0E,GAAY9nJ,EAAO,KAC1Czc,KAAKolK,KAAK70E,EAAQ,IAAKg0E,GAAY9nJ,EAAO,KAC1Czc,KAAKolK,KAAK70E,EAAQ,IAAKg0E,GAAYpvH,IACnCn1C,KAAKolK,KAAK70E,EAAQ,IAAKg0E,GAAY5nJ,IACnC3c,KAAKolK,KAAK70E,EAAQ,IAAKy1E,EAAantJ,KAAK,KAEzC7Y,KAAK+lK,eAAel5F,GACpB7sE,KAAK+kK,UAAW,CACjB,CAMD,cAAAgB,CAAel5F,GACTA,EAAIqC,OAAS7/D,OAAO+qI,SAASlrE,OAC3BlvE,KAAK+kK,UAAY/kK,KAAK6kK,SACxBx1J,OAAOo2J,QAAQC,aAAaD,QAAQl5J,MAAO,GAAIsgE,GAE/Cx9D,OAAOo2J,QAAQQ,UAAU,KAAM,GAAIp5F,GAGxC,GCxZH,MASM6Y,GAAa,CAAC,EAAG,EAAG,EAAG,GACvBwgF,GAAc,GAKdC,GAMS,cANTA,GAYO,YA6DN,MAAMC,WAAoBrgK,EAQ/B,WAAAjG,CAAYC,EAAMkjE,EAAUtO,GAC1B1vD,MAAMlF,GAONC,KAAKijE,SAAWA,EAOhBjjE,KAAK20D,gBAAkBA,CACxB,EAq3CH,SAAS0xG,GAAehlK,EAAGC,GACzB,OAAOD,EAAE4B,MAAQ3B,EAAE2B,KACrB,CAYA,SAASqjK,GACPC,EACAC,EACAtnJ,GAEA,MAAMvK,EAAW6xJ,EAAY7xJ,SAE7B,GAA2B,WAAvBA,EAAS6Z,UAAwB,CACnC,IAAIghD,EAAc,EAIlB,GAx/C+B,IAw/C3Bg3F,EAAYvjK,MAAsC,CACpD,MAAM4oB,EAAiBE,KACnBF,IACF2jD,EACEA,EAAe16D,QAAQiB,UAAU8V,EAAgB3M,IAGrD,MAAMunJ,EAA0B7J,GAC9BptF,EAAenzD,YACf4P,GAAmBs6I,EAAkBrnJ,IAEjCwnJ,EACJ16J,KAAKka,KAAKugJ,GAA2Bj3F,EAAevpD,YACtD,OAAOygJ,EAA0BA,CAClC,CACF,CAED,MAAMvvJ,EAAa8U,GAAmBs6I,EAAkBrnJ,GAGxD,OAFAgnJ,GAAY,GAAKj6I,GAAmBu6I,EAAYpgJ,QAAQ,GAAIlH,GAC5DgnJ,GAAY,GAAKj6I,GAAmBu6I,EAAYpgJ,QAAQ,GAAIlH,GACrDqI,GAAyBpQ,EAAY+uJ,GAC9C,CAYA,SAASS,GAAqBJ,EAAkBC,EAAatnJ,GAC3D,MAAMvK,EAAW6xJ,EAAY7xJ,SAE7B,GACyB,WAAvBA,EAAS6Z,WA7hDsB,IA8hD/Bg4I,EAAYvjK,MACZ,CACA,IAAIusE,EAAc,EAGlB,MAAM3jD,EAAiBE,KAMvB,OALIF,IACF2jD,EACEA,EAAe16D,QAAQiB,UAAU8V,EAAgB3M,IAG9C8M,GACLwjD,EAAethD,gBACbjC,GAAmBs6I,EAAkBrnJ,IAEvCA,EAEH,CACD,MAAM/H,EAAa8U,GAAmBs6I,EAAkBrnJ,GAGxD,OAFAgnJ,GAAY,GAAKj6I,GAAmBu6I,EAAYpgJ,QAAQ,GAAIlH,GAC5DgnJ,GAAY,GAAKj6I,GAAmBu6I,EAAYpgJ,QAAQ,GAAIlH,GACrD8M,GACL7F,GAAiBhP,EAAY+uJ,IAC7BhnJ,EAEJ,CAKA,SAASk8I,KACP,MAAM9qJ,EAAQ23G,KACd,OAAO,SAAUxoE,EAAS/iC,GACxB,OAAOpM,EAAa,KACxB,CACA,CAEA,IAAAs2J,GAx7CA,cAAqB/uG,GAInB,WAAA/3D,CAAY4K,GAoKV,IAAIu4D,EAeJ,GAlLAh+D,MAAK,GAKLjF,KAAK0H,GAKL1H,KAAKiH,KAKLjH,KAAK2H,GAGL3H,KAAK6mK,0BAA4B7mK,KAAKy8F,qBAAqBv1F,KAAKlH,MAMhEA,KAAKo4D,WAAa1tD,EAAQytD,UAAYztD,EAAQytD,UAAYT,GAO1D13D,KAAK8mK,wBAA0B,SAAUnyG,GACvC,OAAOwB,GAAWxB,IAAoBsC,GAAYtC,EACxD,EAMI30D,KAAK+mK,iBAAmBr8J,EAAQs8J,gBAC5Bt8J,EAAQs8J,gBACRhnK,KAAK8mK,wBAMT9mK,KAAKinK,uBAAyBv8J,EAAQw8J,sBAClCx8J,EAAQw8J,sBACRpwG,GAOJ92D,KAAK2iK,eAAiB,KAOtB3iK,KAAKmnK,gBAAkB,KAMvBnnK,KAAKonK,WAAa,CAAC,EAAG,GAQtBpnK,KAAKqnK,wBAAyB,EAM9BrnK,KAAKsnK,uBAAyB,KAO9BtnK,KAAKunK,OAAS,IAAI7rE,GAMlB17F,KAAKuiK,qBACwB/7J,IAA3BkE,EAAQ83J,eAA+B93J,EAAQ83J,eAAiB,GAMlExiK,KAAKyiK,kBAAmB,EAQxBziK,KAAKwnK,kBAAmB,EAMxBxnK,KAAKynK,cAAgB,GAOrBznK,KAAKu9J,SAAW,IAAInsB,GAAY,CAC9BnnI,OAAQ,IAAIi1F,GAAa,CACvB1D,iBAAiB,EACjBv8E,QAASvU,EAAQuU,QAEnB3O,MAAO5F,EAAQ4F,MAAQ5F,EAAQ4F,MAAQ8qJ,KACvCp8B,sBAAsB,EACtBE,wBAAwB,IAQ1Bl/H,KAAK0nK,iBAAmB,CACtBp0I,MAAStzB,KAAK2nK,oBAAoBzgK,KAAKlH,MACvC+5E,WAAc/5E,KAAK4nK,yBAAyB1gK,KAAKlH,MACjDgzB,WAAchzB,KAAK4nK,yBAAyB1gK,KAAKlH,MACjD+1B,QAAW/1B,KAAK6nK,sBAAsB3gK,KAAKlH,MAC3Ck6E,WAAcl6E,KAAK8nK,yBAAyB5gK,KAAKlH,MACjDm6E,gBAAmBn6E,KAAK+nK,8BAA8B7gK,KAAKlH,MAC3Do6E,aAAgBp6E,KAAKgoK,2BAA2B9gK,KAAKlH,MACrDw6E,OAAUx6E,KAAKioK,qBAAqB/gK,KAAKlH,MACzCq6E,mBAAsBr6E,KAAKkoK,iCAAiChhK,KAAKlH,OAOnEA,KAAK44J,QAAU,KAKf54J,KAAKmoK,cAAgB,KAIjBz9J,EAAQu4D,SACVA,EAAWv4D,EAAQu4D,SACVv4D,EAAQT,SACjBjK,KAAK44J,QAAUluJ,EAAQT,OACvBg5D,EAAW,IAAI14D,EAAWvK,KAAK44J,QAAQx7G,eACvCp9C,KAAK44J,QAAQtzJ,iBACXw1F,GACA96F,KAAKooK,iBAAiBlhK,KAAKlH,OAE7BA,KAAK44J,QAAQtzJ,iBACXw1F,GACA96F,KAAKqoK,oBAAoBnhK,KAAKlH,SAG7BijE,EACH,MAAM,IAAI16D,MACR,iEAGAmC,EAAQ49J,eACVtoK,KAAKmoK,cAAgBz9J,EAAQ49J,cAO/BtoK,KAAK47J,UAAY34F,EAEjBjjE,KAAK47J,UAAU1wJ,QAAQlL,KAAKuoK,YAAYrhK,KAAKlH,OAC7CA,KAAK47J,UAAUt2J,iBACb6E,EACAnK,KAAKwoK,kBAAkBthK,KAAKlH,OAE9BA,KAAK47J,UAAUt2J,iBACb6E,EACAnK,KAAKyoK,qBAAqBvhK,KAAKlH,OAOjCA,KAAK0oK,kBAAoB,KAMzB1oK,KAAK+0D,OAAS,CAAC,EAAG,GAKlB/0D,KAAK2oK,oBACuBniK,IAA1BkE,EAAQk+J,eACH5oK,KAAKmoK,cACNz9J,EAAQk+J,aACf,CAMD,WAAAL,CAAY9oH,GACV,MAAM9qC,EAAW8qC,EAAQxqC,cACzB,GAAIN,EAAU,CACZ,MAAMk0J,EAAS7oK,KAAK0nK,iBAAiB/yJ,EAAS6Z,WAC1Cq6I,GACFA,EAAOppH,EAAS9qC,EAEnB,CACD,MAAMi2B,EAAM5qC,KAAKogD,SACbxV,GAAOA,EAAI26B,cAAgBvlE,KAAK00D,aAClC10D,KAAK8oK,sBAAsB9oK,KAAKonK,WAAYx8H,GAE9C6U,EAAQn6C,iBAAiBwB,EAAkB9G,KAAK6mK,0BACjD,CAOD,mBAAAkC,CAAoBnpK,EAAKwjK,GACvB,IAAKpjK,KAAKsnK,uBAAwB,CAChCtnK,KAAKsnK,uBAAyB,IAAI/8J,EAClC,MAAM04D,EAAWjjE,KAAKsnK,uBAAuBl8J,WAC7C,IAAK,IAAIxJ,EAAI,EAAGuE,EAAKi9J,EAASjiK,OAAQS,EAAIuE,IAAMvE,EAAG,CACjD,MAAMwkB,EAAUg9I,EAASxhK,GACzB,IAAK,IAAIioC,EAAI,EAAGm/H,EAAK5iJ,EAAQjlB,OAAQ0oC,EAAIm/H,IAAMn/H,EAAG,CAChD,MAAM4V,EAAUr5B,EAAQyjB,GAAG4V,QACvBA,IAAYwjB,EAASv9D,SAAS+5C,IAChCz/C,KAAKsnK,uBAAuB3hK,KAAK85C,EAEpC,CACF,CAC+C,IAA5Cz/C,KAAKsnK,uBAAuBt8J,YAC9BhL,KAAKsnK,uBAAyB,KAE9BtnK,KAAK4F,cACH,IAAIwgK,GACFD,GACAnmK,KAAKsnK,uBACL1nK,GAIP,CACF,CAMD,cAAAqpK,CAAexpH,GACbz/C,KAAKkpK,0BAA0BzpH,GAE3Bz/C,KAAK2iK,gBAAiD,IAA/B3iK,KAAK47J,UAAU5wJ,cACxChL,KAAKu9J,SAAStgH,YAAY8/C,cAAc/8F,KAAK2iK,gBAC7C3iK,KAAK2iK,eAAiB,MAExBljH,EAAQn5C,oBACNQ,EACA9G,KAAK6mK,0BAER,CAMD,yBAAAqC,CAA0BzpH,GACxB,MAAM0pH,EAAQnpK,KAAKunK,OAEb6B,EAAgB,GACtBD,EAAMj+J,SAIJ,SAAUoG,GACJmuC,IAAYnuC,EAAKmuC,SACnB2pH,EAAczjK,KAAK2L,EAEtB,IAEH,IAAK,IAAI1P,EAAIwnK,EAAcjoK,OAAS,EAAGS,GAAK,IAAKA,EAAG,CAClD,MAAMynK,EAAeD,EAAcxnK,GACnC,IAAK,IAAIwiB,EAAIpkB,KAAKynK,cAActmK,OAAS,EAAGijB,GAAK,IAAKA,EAChDpkB,KAAKynK,cAAcrjJ,GAAG,KAAOilJ,GAC/BrpK,KAAKynK,cAAc5gK,OAAOud,EAAG,GAGjC+kJ,EAAM19J,OAAO49J,EACd,CACF,CAQD,SAAA50G,CAAUG,GACJ50D,KAAK2iK,iBAAmB/tG,IAC1B50D,KAAKu9J,SAAStgH,YAAY8/C,cAAc/8F,KAAK2iK,gBAC7C3iK,KAAK2iK,eAAiB,MAExB19J,MAAMwvD,UAAUG,EACjB,CAQD,MAAA9X,CAAOlS,GACL5qC,KAAKu9J,SAASzgH,OAAOlS,GACrB3lC,MAAM63C,OAAOlS,EACd,CAOD,UAAAuzH,GACE,OAAOn+J,KAAKu9J,QACb,CAMD,gBAAA6K,CAAiBviK,GACXA,EAAM45C,SACRz/C,KAAK47J,UAAUj2J,KAAKE,EAAM45C,QAE7B,CAMD,mBAAA4oH,CAAoBxiK,GACdA,EAAM45C,SACRz/C,KAAK47J,UAAUnwJ,OAAO5F,EAAM45C,QAE/B,CAMD,iBAAA+oH,CAAkB5oK,GAChBI,KAAKuoK,YAAY3oK,EAAI0K,QACtB,CAMD,oBAAAmyF,CAAqB78F,GACnB,IAAKI,KAAKwnK,iBAAkB,CAC1B,MAAM/nH,EAAkC7/C,EAAU,OAClDI,KAAKipK,eAAexpH,GACpBz/C,KAAKuoK,YAAY9oH,EAClB,CACF,CAMD,oBAAAgpH,CAAqB7oK,GACnBI,KAAKipK,eAAerpK,EAAI0K,QACzB,CAOD,mBAAAq9J,CAAoBloH,EAAS9qC,GAC3B,MAAM2E,EAAc3E,EAAS8a,iBAGvB+2I,EAAc,CAClB/mH,QAASA,EACT9qC,SAAUA,EACVyR,QAAS,CAAC9M,EAAaA,IAGzBtZ,KAAKunK,OAAOr1E,OAAOv9E,EAASyK,YAAaonJ,EAC1C,CAOD,wBAAAsB,CAAyBroH,EAAS9qC,GAChC,MAAMokF,EAASpkF,EAAS8a,iBACxB,IAAK,IAAI7tB,EAAI,EAAGuE,EAAK4yF,EAAO53F,OAAQS,EAAIuE,IAAMvE,EAAG,CAC/C,MAAM0X,EAAcy/E,EAAOn3F,GAGrB4kK,EAAc,CAClB/mH,QAASA,EACT9qC,SAAUA,EACV20J,MAAO,CAAC1nK,GACRqB,MAAOrB,EACPwkB,QAAS,CAAC9M,EAAaA,IAGzBtZ,KAAKunK,OAAOr1E,OAAOv9E,EAASyK,YAAaonJ,EAC1C,CACF,CAOD,wBAAAoB,CAAyBnoH,EAAS9qC,GAChC,MAAM2E,EAAc3E,EAAS8a,iBAC7B,IAAK,IAAI7tB,EAAI,EAAGuE,EAAKmT,EAAYnY,OAAS,EAAGS,EAAIuE,IAAMvE,EAAG,CACxD,MAAMwkB,EAAU9M,EAAYxV,MAAMlC,EAAGA,EAAI,GAGnC4kK,EAAc,CAClB/mH,QAASA,EACT9qC,SAAUA,EACV1R,MAAOrB,EACPwkB,QAASA,GAGXpmB,KAAKunK,OAAOr1E,OAAO74E,GAAe+M,GAAUogJ,EAC7C,CACF,CAOD,6BAAAuB,CAA8BtoH,EAAS9qC,GACrC,MAAMy/F,EAAQz/F,EAAS8a,iBACvB,IAAK,IAAIrL,EAAI,EAAG2G,EAAKqpF,EAAMjzG,OAAQijB,EAAI2G,IAAM3G,EAAG,CAC9C,MAAM9K,EAAc86F,EAAMhwF,GAC1B,IAAK,IAAIxiB,EAAI,EAAGuE,EAAKmT,EAAYnY,OAAS,EAAGS,EAAIuE,IAAMvE,EAAG,CACxD,MAAMwkB,EAAU9M,EAAYxV,MAAMlC,EAAGA,EAAI,GAGnC4kK,EAAc,CAClB/mH,QAASA,EACT9qC,SAAUA,EACV20J,MAAO,CAACllJ,GACRnhB,MAAOrB,EACPwkB,QAASA,GAGXpmB,KAAKunK,OAAOr1E,OAAO74E,GAAe+M,GAAUogJ,EAC7C,CACF,CACF,CAOD,qBAAAqB,CAAsBpoH,EAAS9qC,GAC7B,MAAM4G,EAAQ5G,EAAS8a,iBACvB,IAAK,IAAIrL,EAAI,EAAG2G,EAAKxP,EAAMpa,OAAQijB,EAAI2G,IAAM3G,EAAG,CAC9C,MAAM9K,EAAciC,EAAM6I,GAC1B,IAAK,IAAIxiB,EAAI,EAAGuE,EAAKmT,EAAYnY,OAAS,EAAGS,EAAIuE,IAAMvE,EAAG,CACxD,MAAMwkB,EAAU9M,EAAYxV,MAAMlC,EAAGA,EAAI,GAGnC4kK,EAAc,CAClB/mH,QAASA,EACT9qC,SAAUA,EACV20J,MAAO,CAACllJ,GACRnhB,MAAOrB,EACPwkB,QAASA,GAGXpmB,KAAKunK,OAAOr1E,OAAO74E,GAAe+M,GAAUogJ,EAC7C,CACF,CACF,CAOD,0BAAAwB,CAA2BvoH,EAAS9qC,GAClC,MAAMykF,EAAWzkF,EAAS8a,iBAC1B,IAAK,IAAInL,EAAI,EAAG04G,EAAK5jC,EAASj4F,OAAQmjB,EAAI04G,IAAM14G,EAAG,CACjD,MAAM/I,EAAQ69E,EAAS90E,GACvB,IAAK,IAAIF,EAAI,EAAG2G,EAAKxP,EAAMpa,OAAQijB,EAAI2G,IAAM3G,EAAG,CAC9C,MAAM9K,EAAciC,EAAM6I,GAC1B,IAAK,IAAIxiB,EAAI,EAAGuE,EAAKmT,EAAYnY,OAAS,EAAGS,EAAIuE,IAAMvE,EAAG,CACxD,MAAMwkB,EAAU9M,EAAYxV,MAAMlC,EAAGA,EAAI,GAGnC4kK,EAAc,CAClB/mH,QAASA,EACT9qC,SAAUA,EACV20J,MAAO,CAACllJ,EAAGE,GACXrhB,MAAOrB,EACPwkB,QAASA,GAGXpmB,KAAKunK,OAAOr1E,OAAO74E,GAAe+M,GAAUogJ,EAC7C,CACF,CACF,CACF,CAaD,oBAAAyB,CAAqBxoH,EAAS9qC,GAC5B,MAAM2E,EAAc3E,EAAS0H,YAGvBktJ,EAAoB,CACxB9pH,QAASA,EACT9qC,SAAUA,EACV1R,MA5sBsB,EA6sBtBmjB,QAAS,CAAC9M,EAAaA,IAInBkwJ,EAA2B,CAC/B/pH,QAASA,EACT9qC,SAAUA,EACV1R,MA7sB6B,EA8sB7BmjB,QAAS,CAAC9M,EAAaA,IAGnBmwJ,EAAkB,CAACF,EAAmBC,GAC5CD,EAAkBE,gBAAkBA,EACpCD,EAAyBC,gBAAkBA,EAC3CzpK,KAAKunK,OAAOr1E,OAAO3iD,GAAaj2B,GAAciwJ,GAC9C,IAAI/5F,EAAc,EAGlB,MAAM3jD,EAAiBE,KACvB,GAAIF,GAAkB7rB,KAAKogD,SAAU,CACnC,MAAMlhC,EAAalf,KAAKogD,SAAS1C,UAAUhvB,gBAC3C8gD,EAAiBA,EACd16D,QACAiB,UAAU8V,EAAgB3M,GAC7BswD,EAAiBn4C,GACvB,GACQthB,UAAUmJ,EAAY2M,EACzB,CACD7rB,KAAKunK,OAAOr1E,OAAO1iB,EAAepwD,YAAaoqJ,EAChD,CAOD,gCAAAtB,CAAiCzoH,EAAS9qC,GACxC,MAAM+/D,EAAa//D,EAASggE,qBAC5B,IAAK,IAAI/yE,EAAI,EAAGA,EAAI8yE,EAAWvzE,SAAUS,EAAG,CAC1C,MAAM+S,EAAW+/D,EAAW9yE,IAE5BinK,EADe7oK,KAAK0nK,iBAAiB/yJ,EAAS6Z,YACvCixB,EAAS9qC,EACjB,CACF,CASD,4BAAA+0J,CAA6BpwJ,EAAa2pD,EAAUyR,GAClD,IAAIwvF,EAAgBlkK,KAAK2iK,eACzB,GAAKuB,EAIE,CACYA,EAAcjvJ,cACtB+a,eAAe1W,EACzB,MANC4qJ,EAAgB,IAAI/vJ,GAAQ,IAAImf,GAAMha,IACtCtZ,KAAK2iK,eAAiBuB,EACtBlkK,KAAKu9J,SAAStgH,YAAYm/C,WAAW8nE,GAOvC,OAFAA,EAAcp6J,IAAI,WAAYm5D,GAC9BihG,EAAcp6J,IAAI,aAAc4qE,GACzBwvF,CACR,CAOD,WAAA99J,CAAYuuD,GACV,IAAKA,EAAgBpM,cACnB,OAAO,EAIT,IAAIwN,EAuBJ,OAzBA/1D,KAAK0oK,kBAAoB/zG,EAItBA,EAAgB/pB,IAAI8S,UAAUhH,kBAC/Bie,EAAgB50D,MAAQ+oD,GAAoBK,aAC3CnpD,KAAK01D,wBAEN11D,KAAK4rD,mBAAmB+I,GAEtB30D,KAAK2iK,gBAAkB3iK,KAAK+mK,iBAAiBpyG,KAO7CoB,IALApB,EAAgB50D,MAAQ+oD,GAAoBC,cAC3C/oD,KAAKqnK,yBAEIrnK,KAAK2pK,eAMfh1G,EAAgB50D,MAAQ+oD,GAAoBC,cAC9C/oD,KAAKqnK,wBAAyB,GAGzBpiK,MAAMmB,YAAYuuD,KAAqBoB,CAC/C,CAMD,eAAAT,CAAgB11D,GACdI,KAAKqnK,wBAAyB,EAC9BrnK,KAAK+oK,oBAAoBnpK,EAAKI,KAAKynK,eAEnC,MAAMlE,EAAS,CACb3jK,EAAIuX,WAAW,GAAKnX,KAAK+0D,OAAO,GAChCn1D,EAAIuX,WAAW,GAAKnX,KAAK+0D,OAAO,IAE5BkO,EAAW,GACXyR,EAAa,GACnB,IAAK,IAAI9yE,EAAI,EAAGuE,EAAKnG,KAAKynK,cAActmK,OAAQS,EAAIuE,IAAMvE,EAAG,CAC3D,MAAMgoK,EAAc5pK,KAAKynK,cAAc7lK,GACjC4kK,EAAcoD,EAAY,GAC1BnqH,EAAU+mH,EAAY/mH,QACvBwjB,EAASv9D,SAAS+5C,IACrBwjB,EAASt9D,KAAK85C,GAEhB,MAAM9qC,EAAW6xJ,EAAY7xJ,SACxB+/D,EAAWhvE,SAASiP,IACvB+/D,EAAW/uE,KAAKgP,GAElB,MAAM20J,EAAQ9C,EAAY8C,MAC1B,IAAIhwJ,EACJ,MAAM8M,EAAUogJ,EAAYpgJ,QACtBnjB,EAAQ2mK,EAAY,GAE1B,KAAOrG,EAAOpiK,OAASwT,EAAS2a,aAC9Bi0I,EAAO59J,KAAKygB,EAAQnjB,GAAOsgK,EAAOpiK,SAGpC,OAAQwT,EAAS6Z,WACf,IAAK,QACHlV,EAAciqJ,EACdn9I,EAAQ,GAAKm9I,EACbn9I,EAAQ,GAAKm9I,EACb,MACF,IAAK,aACHjqJ,EAAc3E,EAAS8a,iBACvBnW,EAAYktJ,EAAYvjK,OAASsgK,EACjCn9I,EAAQ,GAAKm9I,EACbn9I,EAAQ,GAAKm9I,EACb,MACF,IAAK,aACHjqJ,EAAc3E,EAAS8a,iBACvBnW,EAAYktJ,EAAYvjK,MAAQA,GAASsgK,EACzCn9I,EAAQnjB,GAASsgK,EACjB,MACF,IAAK,kBAKL,IAAK,UACHjqJ,EAAc3E,EAAS8a,iBACvBnW,EAAYgwJ,EAAM,IAAI9C,EAAYvjK,MAAQA,GAASsgK,EACnDn9I,EAAQnjB,GAASsgK,EACjB,MACF,IAAK,eACHjqJ,EAAc3E,EAAS8a,iBACvBnW,EAAYgwJ,EAAM,IAAIA,EAAM,IAAI9C,EAAYvjK,MAAQA,GAASsgK,EAC7Dn9I,EAAQnjB,GAASsgK,EACjB,MACF,IAAK,SAGH,GAFAn9I,EAAQ,GAAKm9I,EACbn9I,EAAQ,GAAKm9I,EAz3BK,IA03BdiD,EAAYvjK,MACdjD,KAAKwnK,kBAAmB,EACxB7yJ,EAASmmC,UAAUyoH,GACnBvjK,KAAKwnK,kBAAmB,MACnB,CAELxnK,KAAKwnK,kBAAmB,EACxB,MAAMtoJ,EAAatf,EAAIgrC,IAAI8S,UAAUhvB,gBACrC,IAAI5G,EAAS27I,GACXx3I,GAAmBtX,EAAS0H,YAAa6C,GACzC+M,GAAmBs3I,EAAQrkJ,IAE7B,MAAM2M,EAAiBE,KACvB,GAAIF,EAAgB,CAClB,MAAM2jD,EAAiB76D,EACpBG,QACAiB,UAAU8V,EAAgB3M,GAC7BswD,EAAe2mB,UAAUruE,GACzBA,EAAS0nD,EACNz5D,UAAUmJ,EAAY2M,GACtB5F,WACJ,CACDtR,EAASwhF,UAAUruE,GACnB9nB,KAAKwnK,kBAAmB,CACzB,EAMDluJ,GACFtZ,KAAK6pK,wBAAwBl1J,EAAU2E,EAE1C,CACDtZ,KAAK0pK,6BAA6BnG,EAAQtgG,EAAUyR,EACrD,CAOD,eAAArf,CAAgBz1D,GACd,IAAKI,KAAKo4D,WAAWx4D,GACnB,OAAO,EAET,MAAMqjK,EAAkBrjK,EAAIuX,WAC5BnX,KAAK8oK,sBAAsBlpK,EAAIy9C,MAAOz9C,EAAIgrC,IAAKq4H,GAC/CjjK,KAAKynK,cAActmK,OAAS,EAC5BnB,KAAKsnK,uBAAyB,KAC9B,MAAMpD,EAAgBlkK,KAAK2iK,eAC3B,GAAIuB,EAAe,CACjB,MAAMhlJ,EAAatf,EAAIgrC,IAAI8S,UAAUhvB,gBAC/Bo7I,EAAiB,GACjBvG,EAASW,EAAcjvJ,cAAcwa,iBACrCs6I,EAAe1wJ,GAAe,CAACkqJ,IAC/ByG,EAAqBhqK,KAAKunK,OAAO3xE,YAAYm0E,GAC7CE,EAAoB,CAAA,EAC1BD,EAAmB51I,KAAKiyI,IACxB,IAAK,IAAIzkK,EAAI,EAAGuE,EAAK6jK,EAAmB7oK,OAAQS,EAAIuE,IAAMvE,EAAG,CAC3D,MAAMsoK,EAAmBF,EAAmBpoK,GACtCwkB,EAAU8jJ,EAAiB9jJ,QACjC,IAAIqmE,EAAMhkF,EAAOyhK,EAAiBv1J,UAClC,MAAM20J,EAAQY,EAAiBZ,MAQ/B,GAPIA,IACF78E,GAAO,IAAM68E,EAAMzwJ,KAAK,MAErBoxJ,EAAkBx9E,KACrBw9E,EAAkBx9E,GAAO,IAAIpqF,MAAM,IAIK,WAAxC6nK,EAAiBv1J,SAAS6Z,WA37BD,IA47BzB07I,EAAiBjnK,MAiBnB,IACE+vC,GAAiB5sB,EAAQ,GAAIm9I,IAC5B0G,EAAkBx9E,GAAK,GAO1B,IACEz5C,GAAiB5sB,EAAQ,GAAIm9I,IAC5B0G,EAAkBx9E,GAAK,GAoCxBhkF,EAAO2d,KAAYpmB,KAAKmnK,kBACvB8C,EAAkBx9E,GAAK,KACvBw9E,EAAkBx9E,GAAK,IACxBzsF,KAAKinK,uBAAuBrnK,IAE5BkqK,EAAenkK,KAAKukK,OA3CtB,CAIE,GACED,EAAkBx9E,GAAK,IACa,IAApCw9E,EAAkBx9E,GAAK,GAAGxpF,MAC1B,CACA,IAAIqW,EAAc4wJ,EAAiBv1J,SAAS8a,iBAC5C,OAAQy6I,EAAiBv1J,SAAS6Z,WAEhC,IAAK,aACL,IAAK,kBACH,SAGF,IAAK,eACHlV,EAAcA,EAAYgwJ,EAAM,IAElC,IAAK,UACH,GACEY,EAAiBjnK,QACjBqW,EAAYgwJ,EAAM,IAAInoK,OAAS,EAE/B,SAMP,CAEDnB,KAAKynK,cAAc9hK,KAAK,CAACukK,EAAkB,IAC3CD,EAAkBx9E,GAAK,GAAKy9E,CAE7B,MAxCClqK,KAAKynK,cAAc9hK,KAAK,CAACukK,EAAkB,IAC3CD,EAAkBx9E,GAAK,GAAKy9E,MAxB9B,CAUIl3H,GANoB2zH,GACpB1D,EACAiH,EACAhrJ,GAGgCqkJ,KAC/B0G,EAAkBx9E,GAAK,KAExBzsF,KAAKynK,cAAc9hK,KAAK,CAACukK,EAAkB,IAC3CD,EAAkBx9E,GAAK,GAAKy9E,EAG/B,CAwDF,CAEGJ,EAAe3oK,QACjBnB,KAAK+oK,oBAAoBnpK,EAAK,CAACkqK,IAGjC,IAAK,IAAI1lJ,EAAI0lJ,EAAe3oK,OAAS,EAAGijB,GAAK,IAAKA,EAChDpkB,KAAKmqK,cAAcL,EAAe1lJ,GAAIm/I,EAEzC,CACD,QAASvjK,KAAK2iK,cACf,CAOD,aAAAntG,CAAc51D,GACZ,IAAK,IAAIgC,EAAI5B,KAAKynK,cAActmK,OAAS,EAAGS,GAAK,IAAKA,EAAG,CACvD,MAAM4kK,EAAcxmK,KAAKynK,cAAc7lK,GAAG,GACpC+S,EAAW6xJ,EAAY7xJ,SAC7B,GAA2B,WAAvBA,EAAS6Z,UAAwB,CAEnC,MAAMlV,EAAc3E,EAAS0H,YACvBktJ,EAAoB/C,EAAYiD,gBAAgB,GAChDD,EAA2BhD,EAAYiD,gBAAgB,GAC7DF,EAAkBnjJ,QAAQ,GAAK9M,EAC/BiwJ,EAAkBnjJ,QAAQ,GAAK9M,EAC/BkwJ,EAAyBpjJ,QAAQ,GAAK9M,EACtCkwJ,EAAyBpjJ,QAAQ,GAAK9M,EACtCtZ,KAAKunK,OAAO3pI,OAAO2R,GAAaj2B,GAAciwJ,GAC9C,IAAI/5F,EAAiB76D,EACrB,MAAMkX,EAAiBE,KACvB,GAAIF,EAAgB,CAClB,MAAM3M,EAAatf,EAAIgrC,IAAI8S,UAAUhvB,gBACrC8gD,EAAiBA,EACd16D,QACAiB,UAAU8V,EAAgB3M,GAC7BswD,EAAiBn4C,GAAWm4C,GAAgBz5D,UAC1CmJ,EACA2M,EAEH,CACD7rB,KAAKunK,OAAO3pI,OACV4xC,EAAepwD,YACfoqJ,EAEV,MACQxpK,KAAKunK,OAAO3pI,OAAOvkB,GAAemtJ,EAAYpgJ,SAAUogJ,EAE3D,CAWD,OAVIxmK,KAAKsnK,yBACPtnK,KAAK4F,cACH,IAAIwgK,GACFD,GACAnmK,KAAKsnK,uBACL1nK,IAGJI,KAAKsnK,uBAAyB,OAEzB,CACR,CAMD,kBAAA17G,CAAmBhsD,GACjBI,KAAKonK,WAAaxnK,EAAIy9C,MACtBr9C,KAAK8oK,sBAAsBlpK,EAAIy9C,MAAOz9C,EAAIgrC,IAAKhrC,EAAIuX,WACpD,CAQD,qBAAA2xJ,CAAsBzrH,EAAOzS,EAAKzzB,GAChC,MAAM8rJ,EAAkB9rJ,GAAcyzB,EAAIie,uBAAuBxL,GAC3Dn+B,EAAa0rB,EAAI8S,UAAUhvB,gBAC3Bw0I,EAAiB,SAAU7hK,EAAGC,GAClC,OACEglK,GAAsCrD,EAAiB5hK,EAAG6d,GAC1DonJ,GAAsCrD,EAAiB3hK,EAAG4d,EAElE,EAGI,IAAIkrJ,EAEAC,EACJ,GAAIrqK,KAAKmoK,cAAe,CACtB,MAAM5oH,EAC0B,iBAAvBv/C,KAAKmoK,cACPz6H,GAAUA,IAAU1tC,KAAKmoK,mBAC1B3hK,EACNokC,EAAIm4B,sBACF1lB,GACA,CAACoC,EAAS/R,EAAO/4B,KACXA,GAAmC,UAAvBA,EAAS6Z,YACvB7Z,EAAW,IAAI2e,GACbtH,GAAiBrX,EAAS8a,iBAAkBvQ,KAGhD,MAAM61H,EAAOpgI,GAAY8qC,EAAQxqC,cACjC,GACEwqC,aAAmBtrC,IACnBnU,KAAK47J,UAAUxwJ,WAAW1F,SAAS+5C,GACnC,CACA4qH,EAAgB,EAChB,MAAMlzJ,EAAmCsoC,EAAQxqC,cAC9Coa,qBACAvrB,MAAM,EAAG,GACZsmK,EAAQ,CACN,CACE3qH,UACA9qC,SAAU01J,EACVjkJ,QAAS,CAACjP,EAAYA,IAG3B,CACD,OAAO,CAAI,GAEb,CAACooC,eAEJ,CACD,IAAK6qH,EAAO,CACV,MAKMxhG,EAAMz8C,GACVm+I,GANiBl+I,GACjBmjB,GAAa0zH,EAAiBv9E,IAC9BxmE,GAEa0rB,EAAI8S,UAAUliB,gBAAkBx7B,KAAKuiK,gBAEjB78E,IACjCxmE,GAEFkrJ,EAAQpqK,KAAKunK,OAAO3xE,YAAYhtB,EACjC,CAED,GAAIwhG,GAASA,EAAMjpK,OAAS,EAAG,CAC7B,MAAMmQ,EAAO84J,EAAMh2I,KAAK8uI,GAAgB,GAClCI,EAAiBhyJ,EAAK8U,QAC5B,IAAIm9I,EAASoD,GAAqB1D,EAAiB3xJ,EAAM4N,GACzD,MAAMskJ,EAAc54H,EAAIu5B,uBAAuBo/F,GAC/C,IAAIO,EAAOL,GAAmBpmH,EAAOmmH,GACrC,GAAI6G,GAAoBvG,GAAQ9jK,KAAKuiK,gBAAiB,CAEpD,MAAMgI,EAAiB,CAAA,EAOvB,GANAA,EAAe9hK,EAAO66J,KAAmB,EAEpCtjK,KAAK2oK,iBACR3oK,KAAK+0D,OAAO,GAAKwuG,EAAO,GAAKN,EAAgB,GAC7CjjK,KAAK+0D,OAAO,GAAKwuG,EAAO,GAAKN,EAAgB,IAGjB,WAA5B3xJ,EAAKqD,SAAS6Z,WAjqCW,IAkqCzBld,EAAKrO,MAELjD,KAAKyiK,kBAAmB,EACxBziK,KAAK0pK,6BACHnG,EACA,CAACjyJ,EAAKmuC,SACN,CAACnuC,EAAKqD,eAEH,CACL,MAAM+uJ,EAAS94H,EAAIu5B,uBAAuBm/F,EAAe,IACnDK,EAAS/4H,EAAIu5B,uBAAuBm/F,EAAe,IACnDM,EAAehH,GAA0B4G,EAAaE,GACtDG,EAAejH,GAA0B4G,EAAaG,GAC5DG,EAAO93J,KAAKka,KAAKla,KAAKwP,IAAIooJ,EAAcC,IACxC7jK,KAAKyiK,iBAAmBqB,GAAQ9jK,KAAKuiK,gBACjCviK,KAAKyiK,mBACPc,EACEK,EAAeC,EACXP,EAAe,GACfA,EAAe,IAEvBtjK,KAAK0pK,6BACHnG,EACA,CAACjyJ,EAAKmuC,SACN,CAACnuC,EAAKqD,WAER,MAAM+/D,EAAa,CAAA,EACnBA,EAAWjsE,EAAO6I,EAAKqD,YAAa,EACpC,IAAK,IAAI/S,EAAI,EAAGuE,EAAKikK,EAAMjpK,OAAQS,EAAIuE,IAAMvE,EAAG,CAC9C,MAAMwkB,EAAUgkJ,EAAMxoK,GAAGwkB,QACzB,KACG4sB,GAAiBswH,EAAe,GAAIl9I,EAAQ,KAC3C4sB,GAAiBswH,EAAe,GAAIl9I,EAAQ,KAC7C4sB,GAAiBswH,EAAe,GAAIl9I,EAAQ,KAC3C4sB,GAAiBswH,EAAe,GAAIl9I,EAAQ,KAQ9C,MAPA,CACA,MAAMokJ,EAAc/hK,EAAO2hK,EAAMxoK,GAAG+S,UAC9B61J,KAAe91F,IACnBA,EAAW81F,IAAe,EAC1BD,EAAe9hK,EAAO2d,KAAY,EAElD,CAGW,CACF,CAGD,YADApmB,KAAKmnK,gBAAkBoD,EAExB,CACF,CACGvqK,KAAK2iK,iBACP3iK,KAAKu9J,SAAStgH,YAAY8/C,cAAc/8F,KAAK2iK,gBAC7C3iK,KAAK2iK,eAAiB,KAEzB,CAOD,aAAAwH,CAAc3D,EAAajD,GACzB,MAAMn9I,EAAUogJ,EAAYpgJ,QACtBq5B,EAAU+mH,EAAY/mH,QACtB9qC,EAAW6xJ,EAAY7xJ,SACvB20J,EAAQ9C,EAAY8C,MACpBrmK,EAAQujK,EAAYvjK,MAC1B,IAAIqW,EAEJ,KAAOiqJ,EAAOpiK,OAASwT,EAAS2a,aAC9Bi0I,EAAO59J,KAAK,GAGd,OAAQgP,EAAS6Z,WACf,IAAK,kBAIL,IAAK,UACHlV,EAAc3E,EAAS8a,iBACvBnW,EAAYgwJ,EAAM,IAAIziK,OAAO5D,EAAQ,EAAG,EAAGsgK,GAC3C,MACF,IAAK,eACHjqJ,EAAc3E,EAAS8a,iBACvBnW,EAAYgwJ,EAAM,IAAIA,EAAM,IAAIziK,OAAO5D,EAAQ,EAAG,EAAGsgK,GACrD,MACF,IAAK,aACHjqJ,EAAc3E,EAAS8a,iBACvBnW,EAAYzS,OAAO5D,EAAQ,EAAG,EAAGsgK,GACjC,MACF,QACE,OAGJvjK,KAAK6pK,wBAAwBl1J,EAAU2E,GACvC,MAAMmxJ,EAAQzqK,KAAKunK,OACnBkD,EAAMh/J,OAAO+6J,GACbxmK,KAAK0qK,sBAAsB/1J,EAAU1R,EAAOqmK,EAAO,GAGnD,MAAMqB,EAAiB,CACrBvkJ,QAAS,CAACA,EAAQ,GAAIm9I,GACtB9jH,QAASA,EACT9qC,SAAUA,EACV20J,MAAOA,EACPrmK,MAAOA,GAGTwnK,EAAMv4E,OAAO74E,GAAesxJ,EAAevkJ,SAAUukJ,GACrD3qK,KAAKynK,cAAc9hK,KAAK,CAACglK,EAAgB,IAGzC,MAAMC,EAAkB,CACtBxkJ,QAAS,CAACm9I,EAAQn9I,EAAQ,IAC1Bq5B,QAASA,EACT9qC,SAAUA,EACV20J,MAAOA,EACPrmK,MAAOA,EAAQ,GAGjBwnK,EAAMv4E,OAAO74E,GAAeuxJ,EAAgBxkJ,SAAUwkJ,GACtD5qK,KAAKynK,cAAc9hK,KAAK,CAACilK,EAAiB,IAC1C5qK,KAAKqnK,wBAAyB,CAC/B,CAOD,WAAAsC,GACE,GACE3pK,KAAK0oK,mBACL1oK,KAAK0oK,kBAAkB3oK,MAAQ+oD,GAAoBI,YACnD,CACA,MAAMtpD,EAAMI,KAAK0oK,kBACjB1oK,KAAK+oK,oBAAoBnpK,EAAKI,KAAKynK,eACnC,MAAM1oE,EAAU/+F,KAAK6qK,gBAYrB,OAXI7qK,KAAKsnK,wBACPtnK,KAAK4F,cACH,IAAIwgK,GACFD,GACAnmK,KAAKsnK,uBACL1nK,IAKNI,KAAKsnK,uBAAyB,KACvBvoE,CACR,CACD,OAAO,CACR,CAOD,aAAA8rE,GACE,MAAMC,EAAe9qK,KAAKynK,cACpBsD,EAAoB,CAAA,EAC1B,IACIC,EAAW1xJ,EAAaswJ,EAAaj1J,EAAU/S,EAAGqB,EAAOohD,EACzD4mH,EAAU51I,EAAOmxI,EAAa/5E,EAF9By+E,GAAU,EAGd,IAAKtpK,EAAIkpK,EAAa3pK,OAAS,EAAGS,GAAK,IAAKA,EAC1CgoK,EAAckB,EAAalpK,GAC3B4kK,EAAcoD,EAAY,GAC1Bn9E,EAAMhkF,EAAO+9J,EAAY/mH,SACrB+mH,EAAY8C,QAEd78E,GAAO,IAAM+5E,EAAY8C,MAAMzwJ,KAAK,MAEhC4zE,KAAOs+E,IACXA,EAAkBt+E,GAAO,IAEJ,IAAnBm9E,EAAY,IACdmB,EAAkBt+E,GAAKp3D,MAAQmxI,EAC/BuE,EAAkBt+E,GAAKxpF,MAAQujK,EAAYvjK,OAChB,GAAlB2mK,EAAY,KACrBmB,EAAkBt+E,GAAKpoC,KAAOmiH,EAC9BuE,EAAkBt+E,GAAKxpF,MAAQujK,EAAYvjK,MAAQ,GAGvD,IAAKwpF,KAAOs+E,EAAmB,CAiB7B,OAhBA11I,EAAQ01I,EAAkBt+E,GAAKp3D,MAC/BgvB,EAAO0mH,EAAkBt+E,GAAKpoC,KAC9BphD,EAAQ8nK,EAAkBt+E,GAAKxpF,MAC/BgoK,EAAWhoK,EAAQ,EAEjBujK,OADWhgK,IAAT69C,EACYA,EAEAhvB,EAEZ41I,EAAW,IACbA,EAAW,GAEbt2J,EAAW6xJ,EAAY7xJ,SACvB2E,EAAc3E,EAAS8a,iBACvBu7I,EAAY1xJ,EACZ4xJ,GAAU,EACFv2J,EAAS6Z,WACf,IAAK,kBACClV,EAAYktJ,EAAY8C,MAAM,IAAInoK,OAAS,IAC7CmY,EAAYktJ,EAAY8C,MAAM,IAAIziK,OAAO5D,EAAO,GAChDioK,GAAU,GAEZ,MACF,IAAK,aACC5xJ,EAAYnY,OAAS,IACvBmY,EAAYzS,OAAO5D,EAAO,GAC1BioK,GAAU,GAEZ,MACF,IAAK,eACHF,EAAYA,EAAUxE,EAAY8C,MAAM,IAE1C,IAAK,UACH0B,EAAYA,EAAUxE,EAAY8C,MAAM,IACpC0B,EAAU7pK,OAAS,IACjB8B,GAAS+nK,EAAU7pK,OAAS,IAC9B8B,EAAQ,GAEV+nK,EAAUnkK,OAAO5D,EAAO,GACxBioK,GAAU,EACI,IAAVjoK,IAEF+nK,EAAU//J,MACV+/J,EAAUrlK,KAAKqlK,EAAU,IACzBC,EAAWD,EAAU7pK,OAAS,IAQtC,GAAI+pK,EAAS,CACXlrK,KAAK6pK,wBAAwBl1J,EAAU2E,GACvC,MAAM8pJ,EAAW,GASjB,QARa58J,IAAT69C,IACFrkD,KAAKunK,OAAO97J,OAAO44C,GACnB++G,EAASz9J,KAAK0+C,EAAKj+B,QAAQ,UAEf5f,IAAV6uB,IACFr1B,KAAKunK,OAAO97J,OAAO4pB,GACnB+tI,EAASz9J,KAAK0vB,EAAMjP,QAAQ,UAEjB5f,IAAT69C,QAAgC79C,IAAV6uB,EAAqB,CAE7C,MAAMs1I,EAAiB,CACrBrB,MAAO9C,EAAY8C,MACnB7pH,QAAS+mH,EAAY/mH,QACrB9qC,SAAU6xJ,EAAY7xJ,SACtB1R,MAAOgoK,EACP7kJ,QAASg9I,GAGXpjK,KAAKunK,OAAOr1E,OACV74E,GAAesxJ,EAAevkJ,SAC9BukJ,EAEH,CACD3qK,KAAK0qK,sBAAsB/1J,EAAU1R,EAAOujK,EAAY8C,OAAQ,GAC5DtpK,KAAK2iK,iBACP3iK,KAAKu9J,SAAStgH,YAAY8/C,cAAc/8F,KAAK2iK,gBAC7C3iK,KAAK2iK,eAAiB,MAExBmI,EAAa3pK,OAAS,CACvB,CACF,CACD,OAAO+pK,CACR,CAOD,uBAAArB,CAAwBl1J,EAAU2E,GAChCtZ,KAAKwnK,kBAAmB,EACxB7yJ,EAASqb,eAAe1W,GACxBtZ,KAAKwnK,kBAAmB,CACzB,CASD,qBAAAkD,CAAsB/1J,EAAU1R,EAAOqmK,EAAO57J,GAC5C1N,KAAKunK,OAAOzxE,gBACVnhF,EAASyK,aACT,SAAU8qJ,GAENA,EAAiBv1J,WAAaA,SACnBnO,IAAV8iK,QAC4B9iK,IAA3B0jK,EAAiBZ,OACjB/mK,EAAO2nK,EAAiBZ,MAAOA,KACjCY,EAAiBjnK,MAAQA,IAEzBinK,EAAiBjnK,OAASyK,EAE7B,GAEJ,GC5/CH,MAAMy9J,GAMI,SAsEH,MAAMC,WAAoBrlK,EAQ/B,WAAAjG,CAAYC,EAAMsrK,EAAUC,EAAY32G,GACtC1vD,MAAMlF,GAONC,KAAKqrK,SAAWA,EAOhBrrK,KAAKsrK,WAAaA,EAOlBtrK,KAAK20D,gBAAkBA,CACxB,EAOH,MAAM42G,GAAwB,CAAA,EAyB9B,MAAMC,WAAe12G,GAInB,WAAAh1D,CAAY4K,GA0FV,IAAI60C,EACJ,GA1FAt6C,QAKAjF,KAAK0H,GAKL1H,KAAKiH,KAKLjH,KAAK2H,GAEL+C,EAAUA,GAAoB,GAK9B1K,KAAKyrK,iBAAmBzrK,KAAKuoK,YAAYrhK,KAAKlH,MAK9CA,KAAK0rK,oBAAsB1rK,KAAKipK,eAAe/hK,KAAKlH,MAMpDA,KAAKo4D,WAAa1tD,EAAQytD,UAAYztD,EAAQytD,UAAYlB,GAM1Dj3D,KAAK2rK,cAAgBjhK,EAAQkhK,aAAelhK,EAAQkhK,aAAe50G,GAMnEh3D,KAAK6rK,iBAAmBnhK,EAAQohK,gBAC5BphK,EAAQohK,gBACR90G,GAMJh3D,KAAK+rK,iBAAmBrhK,EAAQshK,gBAC5BthK,EAAQshK,gBACR50G,GAMJp3D,KAAKisK,SAASvhK,EAAQwhK,OAAQxhK,EAAQwhK,MAMtClsK,KAAKmsK,QAAUzhK,EAAQ8sC,OAAS9sC,EAAQ8sC,OAASr0C,EAMjDnD,KAAKosK,cAAgB1hK,EAAQ20C,aAAe30C,EAAQ20C,aAAe,EAMnEr/C,KAAKuU,YACe/N,IAAlBkE,EAAQ4F,MAAsB5F,EAAQ4F,MA6U5C,WACE,MAAMoF,EAASuyG,KAIf,OAHA/lH,EAAOwT,EAAgB,QAAGA,EAAmB,YAC7CxT,EAAOwT,EAA2B,mBAAGA,EAAmB,YAEjD,SAAU+pC,GACf,OAAKA,EAAQxqC,cAGNS,EAAO+pC,EAAQxqC,cAAcuZ,WAF3B,IAGb,CACA,CAxVoD4sI,GAMhDp7J,KAAK47J,UAAYlxJ,EAAQu4D,UAAY,IAAI14D,EAIrCG,EAAQm8C,OACV,GAA8B,mBAAnBn8C,EAAQm8C,OACjBtH,EAAc70C,EAAQm8C,WACjB,CACL,MAAMA,EAASn8C,EAAQm8C,OACvBtH,EAAc,SAAU7R,GACtB,OAAOmZ,EAAOnhD,SAASgoC,EACjC,CACO,MAED6R,EAAcp8C,EAOhBnD,KAAKqsK,aAAe9sH,EAQpBv/C,KAAKssK,yBAA2B,EACjC,CAOD,2BAAAC,CAA4B9sH,EAAS/R,GACnC1tC,KAAKssK,yBAAyB7jK,EAAOg3C,IAAY/R,CAClD,CAOD,WAAA0P,GACE,OAAOp9C,KAAK47J,SACb,CAOD,eAAA4Q,GACE,OAAOxsK,KAAKosK,aACb,CASD,QAAA1/D,CAASjtD,GACP,OACEz/C,KAAKssK,yBAAyB7jK,EAAOg3C,GAExC,CAQD,eAAAgtH,CAAgBptH,GACdr/C,KAAKosK,cAAgB/sH,CACtB,CAQD,MAAAvC,CAAOlS,GACc5qC,KAAKogD,UACNpgD,KAAKuU,QACrBvU,KAAK47J,UAAU1wJ,QAAQlL,KAAK0sK,sBAAsBxlK,KAAKlH,OAEzDiF,MAAM63C,OAAOlS,GACTA,GACF5qC,KAAK47J,UAAUt2J,iBACb6E,EACAnK,KAAKyrK,kBAEPzrK,KAAK47J,UAAUt2J,iBACb6E,EACAnK,KAAK0rK,qBAGH1rK,KAAKuU,QACPvU,KAAK47J,UAAU1wJ,QAAQlL,KAAK2sK,oBAAoBzlK,KAAKlH,SAGvDA,KAAK47J,UAAUt1J,oBACb6D,EACAnK,KAAKyrK,kBAEPzrK,KAAK47J,UAAUt1J,oBACb6D,EACAnK,KAAK0rK,qBAGV,CAMD,WAAAnD,CAAY3oK,GACV,MAAM6/C,EAAU7/C,EAAI0K,QAIpB,GAHItK,KAAKuU,QACPvU,KAAK2sK,oBAAoBltH,IAEtBz/C,KAAK0sG,SAASjtD,GAAU,CAC3B,MAAM/R,EACJ1tC,KAAKogD,SACFsR,eACA5T,MAAK,SAAUpQ,GACd,GACEA,aAAiB0jG,IACjB1jG,EAAMuP,aACNvP,EAAMuP,YAAYuhD,WAAW/+C,GAE7B,OAAO/R,CAErB,IAEUA,GACF1tC,KAAKusK,4BAA4B9sH,EAAS/R,EAE7C,CACF,CAMD,cAAAu7H,CAAerpK,GACTI,KAAKuU,QACPvU,KAAK0sK,sBAAsB9sK,EAAI0K,QAElC,CAKD,QAAA4K,GACE,OAAOlV,KAAKuU,MACb,CAMD,mBAAAo4J,CAAoBltH,GAClB,MAAMl4C,EAAMkB,EAAOg3C,GACbl4C,KAAOgkK,KACXA,GAAsBhkK,GAAOk4C,EAAQvqC,YAEvCuqC,EAAQtqC,SAASnV,KAAKuU,OACvB,CAMD,qBAAAm4J,CAAsBjtH,GACpB,MAAM+d,EAAex9D,KAAKogD,SAASoiB,kBAAkBp3D,WACrD,IAAK,IAAIxJ,EAAI47D,EAAar8D,OAAS,EAAGS,GAAK,IAAKA,EAAG,CACjD,MAAMwgE,EAAc5E,EAAa57D,GACjC,GACEwgE,IAAgBpiE,MAChBoiE,aAAuBopG,IACvBppG,EAAYltD,aACmD,IAA/DktD,EAAYhlB,cAAchyC,WAAWyzH,YAAYp/E,GAGjD,YADAA,EAAQtqC,SAASitD,EAAYltD,WAGhC,CAED,MAAM3N,EAAMkB,EAAOg3C,GACnBA,EAAQtqC,SAASo2J,GAAsBhkK,WAChCgkK,GAAsBhkK,EAC9B,CAMD,8BAAAqlK,CAA+BntH,UACtBz/C,KAAKssK,yBAAyB7jK,EAAOg3C,GAC7C,CAQD,WAAAr5C,CAAYuuD,GACV,IAAK30D,KAAKo4D,WAAWzD,GACnB,OAAO,EAET,MAAMpxC,EAAMvjB,KAAK2rK,cAAch3G,GACzBlpD,EAASzL,KAAK6rK,iBAAiBl3G,GAC/B1C,EAASjyD,KAAK+rK,iBAAiBp3G,GAC/B7qD,GAAOyZ,IAAQ9X,IAAWwmD,EAC1BrnB,EAAM+pB,EAAgB/pB,IACtBq4B,EAAWjjE,KAAKo9C,cAKhBkuH,EAAa,GAKbD,EAAW,GAEjB,GAAIvhK,EAAK,CAIPnF,EAAM3E,KAAKssK,0BACX1hI,EAAIm4B,sBACFpO,EAAgBtX,OAMhB,CAACoC,EAAS/R,KACR,GAAM+R,aAAmBtrC,IAAanU,KAAKmsK,QAAQ1sH,EAAS/R,GAK5D,OAFA1tC,KAAKusK,4BAA4B9sH,EAAS/R,GAC1C29H,EAAS1lK,KAAK85C,IACNz/C,KAAKisK,MAAM,GAErB,CACE1sH,YAAav/C,KAAKqsK,aAClBhtH,aAAcr/C,KAAKosK,gBAGvB,IAAK,IAAIxqK,EAAIqhE,EAASj4D,YAAc,EAAGpJ,GAAK,IAAKA,EAAG,CAClD,MAAM69C,EAAUwjB,EAAS53D,KAAKzJ,GACxBqB,EAAQooK,EAASzkK,QAAQ64C,GAC3Bx8C,GAAS,EAEXooK,EAASxkK,OAAO5D,EAAO,IAEvBggE,EAASx3D,OAAOg0C,GAChB6rH,EAAW3lK,KAAK85C,GAEnB,CACuB,IAApB4rH,EAASlqK,QACX8hE,EAAS/gE,OAAOmpK,EAExB,KAAW,CAELzgI,EAAIm4B,sBACFpO,EAAgBtX,OAMhB,CAACoC,EAAS/R,KACR,GAAM+R,aAAmBtrC,IAAanU,KAAKmsK,QAAQ1sH,EAAS/R,GAa5D,OAVKnqB,IAAO0uC,GAAYgR,EAAS73D,WAAW1F,SAAS+5C,IAIlDh0C,GAAUwmD,IACXgR,EAAS73D,WAAW1F,SAAS+5C,KAE7B6rH,EAAW3lK,KAAK85C,GAChBz/C,KAAK4sK,+BAA+BntH,KAPpCz/C,KAAKusK,4BAA4B9sH,EAAS/R,GAC1C29H,EAAS1lK,KAAK85C,KAQRz/C,KAAKisK,MAAM,GAErB,CACE1sH,YAAav/C,KAAKqsK,aAClBhtH,aAAcr/C,KAAKosK,gBAGvB,IAAK,IAAIhoJ,EAAIknJ,EAAWnqK,OAAS,EAAGijB,GAAK,IAAKA,EAC5C6+C,EAASx3D,OAAO6/J,EAAWlnJ,IAE7B6+C,EAAS/gE,OAAOmpK,EACjB,CAWD,OAVIA,EAASlqK,OAAS,GAAKmqK,EAAWnqK,OAAS,IAC7CnB,KAAK4F,cACH,IAAIwlK,GACFD,GACAE,EACAC,EACA32G,KAIC,CACR,EAmBH,IAAAk4G,GAAerB,GCrkBR,MAAMsB,GAML,OAOD,MAAMC,WAAkBhnK,EAS7B,WAAAjG,CAAYC,EAAM2K,GAChBzF,MAAMlF,GAMNC,KAAKujK,OAAS74J,EAAQ64J,OAMtBvjK,KAAKwjK,YAAc94J,EAAQ84J,YAM3BxjK,KAAKy/C,QAAU/0C,EAAQ+0C,QAMvBz/C,KAAKomB,QAAU1b,EAAQ0b,OACxB,ECFH,SAAS4mJ,GAAoBptK,GAC3B,OACiE,EAAM6/C,QAEC,EACnEA,QAGwF,EAEzFn1C,QAEgG,EAEhGA,QAEG,IACT,CAEA,MAAM47J,GAAc,GAknBpB,IAAA+G,GA9kBA,cAAmBp1G,GAIjB,WAAA/3D,CAAY4K,GAGV,MAAMiyD,EAFNjyD,EAAUA,GAAoB,GAMzBiyD,EAAetH,kBAClBsH,EAAetH,gBAAkBlyD,GAG9Bw5D,EAAelH,WAClBkH,EAAelH,SAAWryD,GAG5B6B,MAAM03D,GAKN38D,KAAK0H,GAKL1H,KAAKiH,KAKLjH,KAAK2H,GAML3H,KAAK44J,QAAUluJ,EAAQT,OAASS,EAAQT,OAAS,KAMjDjK,KAAKktK,aAA6B1mK,IAAnBkE,EAAQ64J,QAAuB74J,EAAQ64J,OAMtDvjK,KAAKmtK,WAAyB3mK,IAAjBkE,EAAQyqB,MAAqBzqB,EAAQyqB,KAMlDn1B,KAAK47J,UAAYlxJ,EAAQu4D,SAAWv4D,EAAQu4D,SAAW,KAMvDjjE,KAAKotK,sBAAwB,GAM7BptK,KAAKqtK,2BAA6B,GAQlCrtK,KAAKstK,wBAA0B,GAS/BttK,KAAKutK,iBAAmB,GAMxBvtK,KAAKuiK,qBACwB/7J,IAA3BkE,EAAQ83J,eAA+B93J,EAAQ83J,eAAiB,GAOlExiK,KAAKunK,OAAS,IAAI7rE,GAOlB17F,KAAKwtK,qBAAuB,CAC1Bl6I,MAAStzB,KAAKytK,sBAAsBvmK,KAAKlH,MACzC+5E,WAAc/5E,KAAK0tK,2BAA2BxmK,KAAKlH,MACnDgzB,WAAchzB,KAAK0tK,2BAA2BxmK,KAAKlH,MACnD+1B,QAAW/1B,KAAK2tK,wBAAwBzmK,KAAKlH,MAC7Ck6E,WAAcl6E,KAAK4tK,2BAA2B1mK,KAAKlH,MACnDm6E,gBAAmBn6E,KAAK6tK,gCAAgC3mK,KAAKlH,MAC7Do6E,aAAgBp6E,KAAK8tK,6BAA6B5mK,KAAKlH,MACvDq6E,mBAAsBr6E,KAAK+tK,mCAAmC7mK,KAAKlH,MACnEw6E,OAAUx6E,KAAKguK,uBAAuB9mK,KAAKlH,MAE9C,CASD,UAAAo8F,CAAW38C,EAASgvF,GAClBA,OAAwBjoI,IAAbioI,GAAyBA,EACpC,MAAMw/B,EAAcxlK,EAAOg3C,GACrB9qC,EAAW8qC,EAAQxqC,cACzB,GAAIN,EAAU,CACZ,MAAMu5J,EAAYluK,KAAKwtK,qBAAqB74J,EAAS6Z,WACrD,GAAI0/I,EAAW,CACbluK,KAAKstK,wBAAwBW,GAAet5J,EAASyK,UhPhDpD,CAAC5E,IAAUA,KAAU,KAAW,MgPmDjC,MAAM4oJ,EACgE,GAEtE,GADA8K,EAAU9K,EAAUzuJ,GACI,IAApByuJ,EAASjiK,OACXnB,KAAKunK,OAAOr1E,OAAO74E,GAAe+pJ,EAAS,IAAK,CAC9C3jH,QAASA,EACTr5B,QAASg9I,EAAS,UAEf,GAAIA,EAASjiK,OAAS,EAAG,CAC9B,MAAMu0F,EAAU0tE,EAASx4H,KAAKf,GAAMxwB,GAAewwB,KAC7CskI,EAAe/K,EAASx4H,KAAKxkB,IAAa,CAC9Cq5B,QAASA,EACTr5B,QAASA,MAEXpmB,KAAKunK,OAAOl6J,KAAKqoF,EAASy4E,EAC3B,CACF,CACF,CAEG1/B,IACFzuI,KAAKqtK,2BAA2BY,GAAelnK,EAC7C04C,EACA34C,EACA9G,KAAKy8F,qBACLz8F,MAGL,CAMD,YAAAouK,GAEE,IAAInrG,EAMJ,OALIjjE,KAAK47J,UACP34F,EAAWjjE,KAAK47J,UACP57J,KAAK44J,UACd31F,EAAWjjE,KAAK44J,QAAQx7G,eAEnB6lB,CACR,CAOD,WAAA78D,CAAYxG,GACV,MAAM4wC,EAASxwC,KAAKquK,OAAOzuK,EAAIy9C,MAAOz9C,EAAIuX,WAAYvX,EAAIgrC,KAa1D,OAZI4F,IACF5wC,EAAIuX,WAAaq5B,EAAO+yH,OAAOz/J,MAAM,EAAG,GACxClE,EAAIy9C,MAAQ7M,EAAOgzH,YACnBxjK,KAAK4F,cACH,IAAImnK,GAAUD,GAAoB,CAChCvJ,OAAQ3jK,EAAIuX,WACZqsJ,YAAa5jK,EAAIy9C,MACjBoC,QAASjP,EAAOiP,QAChBr5B,QAASoqB,EAAOpqB,YAIfnhB,MAAMmB,YAAYxG,EAC1B,CAMD,iBAAA4oK,CAAkB5oK,GAChB,MAAM6/C,EAAUutH,GAAoBptK,GAChC6/C,GACFz/C,KAAKo8F,WAAW38C,EAEnB,CAMD,oBAAAgpH,CAAqB7oK,GACnB,MAAM6/C,EAAUutH,GAAoBptK,GAChC6/C,GACFz/C,KAAK+8F,cAAct9C,EAEtB,CAMD,oBAAAg9C,CAAqB78F,GACnB,MAAM6/C,EAA0D7/C,EAAU,OAC1E,GAAII,KAAK01D,uBAAwB,CAC/B,MAAM+2B,EAAMhkF,EAAOg3C,GACbgtC,KAAOzsF,KAAKutK,mBAChBvtK,KAAKutK,iBAAiB9gF,GAAOhtC,EAErC,MACMz/C,KAAKsuK,eAAe7uH,EAEvB,CAOD,aAAA+V,CAAc51D,GACZ,MAAM2uK,EAAmB7nK,OAAOsC,OAAOhJ,KAAKutK,kBAK5C,OAJIgB,EAAiBptK,SACnBotK,EAAiBrjK,QAAQlL,KAAKsuK,eAAepnK,KAAKlH,OAClDA,KAAKutK,iBAAmB,KAEnB,CACR,CASD,aAAAxwE,CAAct9C,EAAS5kB,GACrB,MAAM2zI,OAA0BhoK,IAAbq0B,GAAyBA,EACtCozI,EAAcxlK,EAAOg3C,GACrBlmC,EAASvZ,KAAKstK,wBAAwBW,GAC5C,GAAI10J,EAAQ,CACV,MAAM4vJ,EAAQnpK,KAAKunK,OACb6B,EAAgB,GACtBD,EAAMrzE,gBAAgBv8E,GAAQ,SAAUjI,GAClCmuC,IAAYnuC,EAAKmuC,SACnB2pH,EAAczjK,KAAK2L,EAE7B,IACM,IAAK,IAAI1P,EAAIwnK,EAAcjoK,OAAS,EAAGS,GAAK,IAAKA,EAC/CunK,EAAM19J,OAAO29J,EAAcxnK,GAE9B,CAEG4sK,IACFlnK,EAActH,KAAKqtK,2BAA2BY,WACvCjuK,KAAKqtK,2BAA2BY,GAE1C,CAQD,MAAAnxH,CAAOlS,GACL,MAAM6jI,EAAazuK,KAAKogD,SAClBz5C,EAAO3G,KAAKotK,sBACZnqG,EACJjjE,KAAKouK,eAGHK,IACF9nK,EAAKuE,QAAQ5D,GACbX,EAAKxF,OAAS,EACdnB,KAAKunK,OAAO5iK,QACZ+B,OAAOsC,OAAOhJ,KAAKqtK,4BAA4BniK,QAAQ5D,GACvDtH,KAAKqtK,2BAA6B,IAEpCpoK,MAAM63C,OAAOlS,GAETA,IACE5qC,KAAK47J,UACPj1J,EAAKhB,KACHoB,EACE/G,KAAK47J,UACLzxJ,EACAnK,KAAKwoK,kBACLxoK,MAEF+G,EACE/G,KAAK47J,UACLzxJ,EACAnK,KAAKyoK,qBACLzoK,OAGKA,KAAK44J,SACdjyJ,EAAKhB,KACHoB,EACE/G,KAAK44J,QACL99D,GACA96F,KAAKwoK,kBACLxoK,MAEF+G,EACE/G,KAAK44J,QACL99D,GACA96F,KAAKyoK,qBACLzoK,OAINijE,EAAS/3D,SAASu0C,GAAYz/C,KAAKo8F,WAAW38C,KAEjD,CAQD,MAAA4uH,CAAOhxH,EAAO4lH,EAAiBr4H,GAC7B,MAAM1rB,EAAa0rB,EAAI8S,UAAUhvB,gBAC3BggJ,EAAsBziJ,GAAmBg3I,EAAiB/jJ,GAE1D0pD,EAAMz8C,GACVzS,GACEL,GAAe,CAACq1J,IAChB9jI,EAAI8S,UAAUliB,gBAAkBx7B,KAAKuiK,iBAEvCrjJ,GAGIkkJ,EAAWpjK,KAAKunK,OAAO3xE,YAAYhtB,GACnC+lG,EAAiBvL,EAASjiK,OAChC,GAAuB,IAAnBwtK,EACF,OAAO,KAGT,IAAIC,EAEA9wE,EADA7vE,EAAqBzT,IAErB8oJ,EAAiB,KAErB,MAAMuL,EAAwB7uK,KAAKuiK,gBAAkBviK,KAAKuiK,gBACpDuM,EAAY,KAChB,GAAIF,EAAe,CACjB,MAAMpL,EAAc54H,EAAIu5B,uBAAuByqG,GAE/C,GAD6B9qJ,GAAgBu5B,EAAOmmH,IACxBqL,EAC1B,MAAO,CACLtL,OAAQqL,EACRpL,YAAa,CACXx3J,KAAKgZ,MAAMw+I,EAAY,IACvBx3J,KAAKgZ,MAAMw+I,EAAY,KAEzB/jH,QAASq+C,EACT13E,QAASk9I,EAGd,CACD,OAAO,IAAI,EAGb,GAAItjK,KAAKktK,QAAS,CAChB,IAAK,IAAItrK,EAAI,EAAGA,EAAI+sK,IAAkB/sK,EAAG,CACvC,MAAM4kK,EAAcpD,EAASxhK,GACuB,WAAhD4kK,EAAY/mH,QAAQxqC,cAAcuZ,WACpCg4I,EAAYpgJ,QAAQlb,SAASq4J,IAC3B,MAAMwL,EAAkB9iJ,GAAmBs3I,EAAQrkJ,GAC7CxR,EAAQoW,GAAgB4qJ,EAAqBK,GAC/CrhK,EAAQugB,IACV2gJ,EAAgBrL,EAChBt1I,EAAqBvgB,EACrBowF,EAAiB0oE,EAAY/mH,QAC9B,GAGN,CACD,MAAMjP,EAASs+H,IACf,GAAIt+H,EACF,OAAOA,CAEV,CAED,GAAIxwC,KAAKmtK,MAAO,CACd,IAAK,IAAIvrK,EAAI,EAAGA,EAAI+sK,IAAkB/sK,EAAG,CACvC,IAAI2hK,EAAS,KACb,MAAMiD,EAAcpD,EAASxhK,GAC7B,GAAoD,WAAhD4kK,EAAY/mH,QAAQxqC,cAAcuZ,UAAwB,CAC5D,IAAIghD,EAAiBg3F,EAAY/mH,QAAQxqC,cACzC,MAAM4W,EAAiBE,KACnBF,IACF2jD,EAAiBA,EACd16D,QACAiB,UAAU8V,EAAgB3M,IAE/BqkJ,EAASx9I,GACP2oJ,EACZ,EAEA,KAAe,CACL,MAAOM,EAAcC,GAAczI,EAAYpgJ,QAE3C6oJ,IACF/I,GAAY,GAAKj6I,GAAmB+iJ,EAAc9vJ,GAClDgnJ,GAAY,GAAKj6I,GAAmBgjJ,EAAY/vJ,GAChDqkJ,EAASp9I,GAAiBuoJ,EAAqBxI,IAElD,CACD,GAAI3C,EAAQ,CACV,MAAM71J,EAAQoW,GAAgB4qJ,EAAqBnL,GAC/C71J,EAAQugB,IACV2gJ,EAAgB5iJ,GAAiBu3I,EAAQrkJ,GACzCokJ,EACkD,WAAhDkD,EAAY/mH,QAAQxqC,cAAcuZ,UAC9B,KACAg4I,EAAYpgJ,QAClB6H,EAAqBvgB,EAExB,CACF,CAED,MAAM8iC,EAASs+H,IACf,GAAIt+H,EACF,OAAOA,CAEV,CAED,OAAO,IACR,CAMD,cAAA89H,CAAe7uH,GACbz/C,KAAK+8F,cAAct9C,GAAS,GAC5Bz/C,KAAKo8F,WAAW38C,GAAS,EAC1B,CAOD,sBAAAuuH,CAAuB5K,EAAUzuJ,GAC/B,MAAMuK,EAAalf,KAAKogD,SAAS1C,UAAUhvB,gBAC3C,IAAI8gD,EAAiB76D,EACrB,MAAMkX,EAAiBE,KACnBF,IACF2jD,EACEA,EAAe16D,QAAQiB,UAAU8V,EAAgB3M,IAGrD,MAAMoX,EAAUe,GAAWm4C,GACvB3jD,GACFyK,EAAQvgB,UAAUmJ,EAAY2M,GAEhC,MAAMvS,EAAcgd,EAAQ7G,iBAAiB,GAC7C,IAAK,IAAI7tB,EAAI,EAAGuE,EAAKmT,EAAYnY,OAAS,EAAGS,EAAIuE,IAAMvE,EACrDwhK,EAASz9J,KAAK2T,EAAYxV,MAAMlC,EAAGA,EAAI,GAE1C,CAOD,kCAAAmsK,CAAmC3K,EAAUzuJ,GAC3C,MAAM+/D,EAAa//D,EAASggE,qBAC5B,IAAK,IAAI/yE,EAAI,EAAGA,EAAI8yE,EAAWvzE,SAAUS,EAAG,CAC1C,MAAMssK,EAAYluK,KAAKwtK,qBAAqB94F,EAAW9yE,GAAG4sB,WACtD0/I,GACFA,EAAU9K,EAAU1uF,EAAW9yE,GAElC,CACF,CAOD,0BAAA8rK,CAA2BtK,EAAUzuJ,GACnC,MAAM2E,EAAc3E,EAAS8a,iBAC7B,IAAK,IAAI7tB,EAAI,EAAGuE,EAAKmT,EAAYnY,OAAS,EAAGS,EAAIuE,IAAMvE,EACrDwhK,EAASz9J,KAAK2T,EAAYxV,MAAMlC,EAAGA,EAAI,GAE1C,CAOD,+BAAAisK,CAAgCzK,EAAUzuJ,GACxC,MAAMy/F,EAAQz/F,EAAS8a,iBACvB,IAAK,IAAIrL,EAAI,EAAG2G,EAAKqpF,EAAMjzG,OAAQijB,EAAI2G,IAAM3G,EAAG,CAC9C,MAAM9K,EAAc86F,EAAMhwF,GAC1B,IAAK,IAAIxiB,EAAI,EAAGuE,EAAKmT,EAAYnY,OAAS,EAAGS,EAAIuE,IAAMvE,EACrDwhK,EAASz9J,KAAK2T,EAAYxV,MAAMlC,EAAGA,EAAI,GAE1C,CACF,CAOD,0BAAAgsK,CAA2BxK,EAAUzuJ,GACnCA,EAAS8a,iBAAiBvkB,SAASwX,IACjC0gJ,EAASz9J,KAAK,CAAC+c,GAAO,GAEzB,CAOD,4BAAAorJ,CAA6B1K,EAAUzuJ,GACrC,MAAMykF,EAAWzkF,EAAS8a,iBAC1B,IAAK,IAAInL,EAAI,EAAG04G,EAAK5jC,EAASj4F,OAAQmjB,EAAI04G,IAAM14G,EAAG,CACjD,MAAM/I,EAAQ69E,EAAS90E,GACvB,IAAK,IAAIF,EAAI,EAAG2G,EAAKxP,EAAMpa,OAAQijB,EAAI2G,IAAM3G,EAAG,CAC9C,MAAM9K,EAAciC,EAAM6I,GAC1B,IAAK,IAAIxiB,EAAI,EAAGuE,EAAKmT,EAAYnY,OAAS,EAAGS,EAAIuE,IAAMvE,EACrDwhK,EAASz9J,KAAK2T,EAAYxV,MAAMlC,EAAGA,EAAI,GAE1C,CACF,CACF,CAOD,qBAAA6rK,CAAsBrK,EAAUzuJ,GAC9ByuJ,EAASz9J,KAAK,CAACgP,EAAS8a,kBACzB,CAOD,uBAAAk+I,CAAwBvK,EAAUzuJ,GAChC,MAAM4G,EAAQ5G,EAAS8a,iBACvB,IAAK,IAAIrL,EAAI,EAAG2G,EAAKxP,EAAMpa,OAAQijB,EAAI2G,IAAM3G,EAAG,CAC9C,MAAM9K,EAAciC,EAAM6I,GAC1B,IAAK,IAAIxiB,EAAI,EAAGuE,EAAKmT,EAAYnY,OAAS,EAAGS,EAAIuE,IAAMvE,EACrDwhK,EAASz9J,KAAK2T,EAAYxV,MAAMlC,EAAGA,EAAI,GAE1C,CACF,GCzqBH,MAAMstK,GAMY,iBANZA,GAYS,cAZTA,GAkBU,eAqCT,MAAMC,WAAuBppK,EAQlC,WAAAjG,CAAYC,EAAMkjE,EAAU9rD,EAAYi4J,EAAiBz6G,GACvD1vD,MAAMlF,GAONC,KAAKijE,SAAWA,EAQhBjjE,KAAKmX,WAAaA,EAQlBnX,KAAKovK,gBAAkBA,EAOvBpvK,KAAK20D,gBAAkBA,CACxB,EAmUH,IAAA06G,GA5SA,cAAwBx3G,GAItB,WAAA/3D,CAAY4K,GAyCV,IAAI60C,EACJ,GAvCAt6C,MAFAyF,EAAUA,GAAoB,IAO9B1K,KAAK0H,GAKL1H,KAAKiH,KAKLjH,KAAK2H,GAOL3H,KAAKsvK,gBAAkB,KAOvBtvK,KAAKuvK,iBAAmB,KAMxBvvK,KAAK47J,eAAiCp1J,IAArBkE,EAAQu4D,SAAyBv4D,EAAQu4D,SAAW,KAIjEv4D,EAAQm8C,SAAW7mD,KAAK47J,UAC1B,GAA8B,mBAAnBlxJ,EAAQm8C,OACjBtH,EAAc70C,EAAQm8C,WACjB,CACL,MAAMA,EAASn8C,EAAQm8C,OACvBtH,EAAc,SAAU7R,GACtB,OAAOmZ,EAAOnhD,SAASgoC,EACjC,CACO,MAED6R,EAAcp8C,EAOhBnD,KAAKqsK,aAAe9sH,EAMpBv/C,KAAKmsK,QAAUzhK,EAAQ8sC,SAAWx3C,KAAK47J,UAAYlxJ,EAAQ8sC,OAASr0C,EAMpEnD,KAAKosK,cAAgB1hK,EAAQ20C,aAAe30C,EAAQ20C,aAAe,EAMnEr/C,KAAKo4D,WAAa1tD,EAAQytD,UAAYztD,EAAQytD,UAAYrB,GAM1D92D,KAAKwvK,aAAe,KAEpBxvK,KAAK4J,kBACHyqD,GACAr0D,KAAKyvK,qBAER,CAOD,eAAAp6G,CAAgBxvD,GACd,IAAKA,EAAM0iD,gBAAkBvoD,KAAKo4D,WAAWvyD,GAC3C,OAAO,EAGT,GADA7F,KAAKwvK,aAAexvK,KAAK0vK,iBAAiB7pK,EAAMw3C,MAAOx3C,EAAM+kC,MACxD5qC,KAAKsvK,iBAAmBtvK,KAAKwvK,aAAc,CAC9CxvK,KAAKuvK,iBAAmB1pK,EAAMsR,WAC9BnX,KAAKsvK,gBAAkBzpK,EAAMsR,WAC7BnX,KAAKu1D,gBAAgB1vD,GAErB,MAAMo9D,EAAWjjE,KAAK47J,WAAa,IAAIrxJ,EAAW,CAACvK,KAAKwvK,eAWxD,OATAxvK,KAAK4F,cACH,IAAIupK,GACFD,GACAjsG,EACAp9D,EAAMsR,WACNnX,KAAKuvK,iBACL1pK,KAGG,CACR,CACD,OAAO,CACR,CAOD,aAAA2vD,CAAc3vD,GACZ,GAAI7F,KAAKsvK,gBAAiB,CACxBtvK,KAAKsvK,gBAAkB,KACvBtvK,KAAKu1D,gBAAgB1vD,GAErB,MAAMo9D,EAAWjjE,KAAK47J,WAAa,IAAIrxJ,EAAW,CAACvK,KAAKwvK,eAaxD,OAXAxvK,KAAK4F,cACH,IAAIupK,GACFD,GACAjsG,EACAp9D,EAAMsR,WACNnX,KAAKuvK,iBACL1pK,IAIJ7F,KAAKuvK,iBAAmB,MACjB,CACR,CACD,OAAO,CACR,CAMD,eAAAj6G,CAAgBzvD,GACd,GAAI7F,KAAKsvK,gBAAiB,CACxB,MAAMxP,EAAgBj6J,EAAMsR,WACtB+H,EAAarZ,EAAM+kC,IAAI8S,UAAUhvB,gBAEjCihJ,EAAoB1jJ,GAAmB6zI,EAAe5gJ,GACtD0wJ,EAAqB3jJ,GACzBjsB,KAAKsvK,gBACLpwJ,GAEIlB,EAAS2xJ,EAAkB,GAAKC,EAAmB,GACnD3xJ,EAAS0xJ,EAAkB,GAAKC,EAAmB,GAEnD3sG,EAAWjjE,KAAK47J,WAAa,IAAIrxJ,EAAW,CAACvK,KAAKwvK,eAClD3jJ,EAAiBE,KAEvBk3C,EAAS/3D,SAAQ,SAAUu0C,GACzB,MAAMs1F,EAAOt1F,EAAQxqC,cACjB4W,GACFkpH,EAAKh/H,UAAU8V,EAAgB3M,GAC/B61H,EAAKn9H,UAAUoG,EAAQC,GACvB82H,EAAKh/H,UAAUmJ,EAAY2M,IAE3BkpH,EAAKn9H,UAAUoG,EAAQC,GAEzBwhC,EAAQ7qC,YAAYmgI,EAC5B,IAEM/0I,KAAKsvK,gBAAkBxP,EAEvB9/J,KAAK4F,cACH,IAAIupK,GACFD,GACAjsG,EACA68F,EACA9/J,KAAKuvK,iBACL1pK,GAGL,CACF,CAMD,eAAA0vD,CAAgB1vD,GACd,MAAM0F,EAAO1F,EAAM+kC,IAAIub,cAInBnmD,KAAK0vK,iBAAiB7pK,EAAMw3C,MAAOx3C,EAAM+kC,MAC3Cr/B,EAAKymD,UAAUvmD,OAAOzL,KAAKsvK,gBAAkB,UAAY,eACzD/jK,EAAKymD,UAAUzuC,IAAIvjB,KAAKsvK,gBAAkB,cAAgB,YAE1D/jK,EAAKymD,UAAUvmD,OAAO,UAAW,cAEpC,CAWD,gBAAAikK,CAAiBryH,EAAOzS,GACtB,OAAOA,EAAIm4B,sBACT1lB,GACA,CAACoC,EAAS/R,KACR,GAAM+R,aAAmBtrC,IAAanU,KAAKmsK,QAAQ1sH,EAAS/R,MAGxD1tC,KAAK47J,WAAc57J,KAAK47J,UAAUxwJ,WAAW1F,SAAS+5C,IAG1D,OAAOA,CAAO,GAEhB,CACEF,YAAav/C,KAAKqsK,aAClBhtH,aAAcr/C,KAAKosK,eAGxB,CAOD,eAAAI,GACE,OAAOxsK,KAAKosK,aACb,CAQD,eAAAK,CAAgBptH,GACdr/C,KAAKosK,cAAgB/sH,CACtB,CAQD,MAAAvC,CAAOlS,GACL,MAAM06H,EAAStlK,KAAKogD,SACpBn7C,MAAM63C,OAAOlS,GACb5qC,KAAKk+J,aAAaoH,EACnB,CAKD,oBAAAmK,GACEzvK,KAAKk+J,aAAa,KACnB,CAMD,YAAAA,CAAaoH,GACX,IAAI16H,EAAM5qC,KAAKogD,SACf,MAAMwU,EAAS50D,KAAK00D,YACpB,KAAK9pB,IAAQgqB,KACXhqB,EAAMA,GAAO06H,EACT16H,GAAK,CACMA,EAAIub,cACZ6L,UAAUvmD,OAAO,UAAW,cAClC,CAEJ,GCjaI,SAASokK,GAAOh1J,EAAiBC,EAAQ9Y,EAAK+Y,EAAQpB,EAAMm2J,QACpDtpK,IAATmT,EAEFm2J,OAA4BtpK,IAAfspK,EAA2BA,EAAa,GAErDn2J,EAAO,GACPm2J,EAAa,GAEf,IAAI1rJ,EAAItJ,EACR,KAAOsJ,EAAIpiB,GAAK,CACd,MAAMoV,EAAIyD,EAAgBuJ,KAC1BzK,EAAKm2J,KAAgBj1J,EAAgBuJ,KACrCzK,EAAKm2J,KAAgB14J,EACrB,IAAK,IAAIkN,EAAI,EAAGA,EAAIvJ,IAAUuJ,EAC5B3K,EAAKm2J,KAAgBj1J,EAAgBuJ,IAExC,CAED,OADAzK,EAAKxY,OAAS2uK,EACPn2J,CACT,CCmPA,IAAAo2J,GAvKA,MACE,WAAAjwK,GAKEE,KAAKguE,oBAAiBxnE,EAMtBxG,KAAKgwK,8BAA2BxpK,EAMhCxG,KAAKiwK,aAAe97J,GAMpBnU,KAAKipG,oBAAsB,IAC5B,CASD,cAAAinE,CAAejmK,EAAQS,GACrB,GAAIA,EAAS,CACX,IAAIsjE,EAAiBtjE,EAAQsjE,eACzBt/C,GAAchkB,EAAQsjE,gBACtBhuE,KAAK6tE,eAAe5jE,GAEtBS,EAAQ6O,QACRy0D,GAC8B,gBAA9BA,EAAe7sD,aAEf6sD,EAAiBt/C,GAAcs/C,GAC/BA,EAAensD,eAAenX,EAAQ6O,SAExC7O,EAAU,CACRsjE,eAAgBA,EAChBJ,kBAAmBljE,EAAQkjE,kBAE9B,CACD,OAAO5tE,KAAKmwK,aAAazlK,EAC1B,CAWD,YAAAylK,CAAazlK,GACX,OAAOhE,OAAO6C,OACZ,CACEykE,eAAgBhuE,KAAKguE,eACrBJ,kBAAmB5tE,KAAKgwK,yBACxBC,aAAcjwK,KAAKiwK,cAErBvlK,EAEH,CAMD,OAAA8jB,GACE,OAAOlmB,GACR,CAUD,WAAA8nK,CAAYnmK,EAAQS,GAClB,OAAOpC,GACR,CAUD,YAAAqlE,CAAa1jE,EAAQS,GACnB,OAAOpC,GACR,CAUD,YAAA+nK,CAAapmK,EAAQS,GACnB,OAAOpC,GACR,CASD,cAAAulE,CAAe5jE,GACb,OAAO3B,GACR,CAUD,YAAAgoK,CAAa7wH,EAAS/0C,GACpB,OAAOpC,GACR,CAUD,aAAAioK,CAActtG,EAAUv4D,GACtB,OAAOpC,GACR,CAUD,aAAAkoK,CAAc77J,EAAUjK,GACtB,OAAOpC,GACR,GAYI,SAASmoK,GAA6B97J,EAAU+7J,EAAOhmK,GAC5D,MAAMkjE,EAAoBljE,EACtBgkB,GAAchkB,EAAQkjE,mBACtB,KACEI,EAAiBtjE,EAAUgkB,GAAchkB,EAAQsjE,gBAAkB,KAEzE,IAAIphD,EAAcjY,EAClB,GACEi5D,GACAI,IACCsmE,GAAqB1mE,EAAmBI,GACzC,CACI0iG,IACF9jJ,EAAgCjY,EAASG,SAE3C,MAAM67J,EAAiBD,EAAQ9iG,EAAoBI,EAC7C4iG,EAAeF,EAAQ1iG,EAAiBJ,EACZ,gBAA9B+iG,EAAexvJ,WACjByL,EAAY7W,UAAU46J,EAAgBC,GAEtChkJ,EAAYlO,eAAeiN,GAAaglJ,EAAgBC,GAE3D,CACD,GACEF,GACAhmK,QACmDlE,IAAvB,EAAUse,SACtC,CACA,MAAMgsB,EAAQ9kC,KAAKC,IAAI,GAAgC,EAAU6Y,UAM3D/O,EAAY,SAAUuD,GAC1B,IAAK,IAAI1X,EAAI,EAAGuE,EAAKmT,EAAYnY,OAAQS,EAAIuE,IAAMvE,EACjD0X,EAAY1X,GAAKoK,KAAKgZ,MAAM1L,EAAY1X,GAAKkvC,GAASA,EAExD,OAAOx3B,CACb,EACQsT,IAAgBjY,IAClBiY,EAAgCjY,EAASG,SAE3C8X,EAAYlO,eAAe3I,EAC5B,CACD,OAAO6W,CACT,CAOO,SAASikJ,GAA2Bt3J,EAAQ7O,GACjD,MAAMkjE,EAAoBljE,EACtBgkB,GAAchkB,EAAQkjE,mBACtB,KACEI,EAAiBtjE,EAAUgkB,GAAchkB,EAAQsjE,gBAAkB,KAEzE,OACEJ,GACAI,IACCsmE,GAAqB1mE,EAAmBI,GAElCpiD,GAAgBrS,EAAQy0D,EAAgBJ,GAE1Cr0D,CACT,CAEA,MAAMu3J,GAAsB,CAC1Bx9I,MAAOA,GACPymD,WAAYA,GACZhkD,QAASA,GACTmkD,WAAYA,GACZC,gBAAiBA,GACjBC,aAAcA,IAwBT,SAAS22F,GAAoBnsK,EAAQ8F,GAC1C,MAAMiK,EAAW/P,EAAO+P,SACxB,IAAKA,EACH,MAAO,GAET,GAAItS,MAAMC,QAAQqS,GAChB,OAAOA,EACJi2B,KAAKj2B,GAAao8J,GAAoB,IAAInsK,EAAQ+P,eAClD2gH,OAGL,MAAM16B,EACc,iBAAlBjmF,EAAS5U,KAA0B,UAAY4U,EAAS5U,KAC1D,GAAqB,uBAAjB66F,GAA0D,WAAjBA,EAC3C,MAAM,IAAIryF,MAAM,8BAAgCqyF,GAGlD,MAAM7/E,EAASpG,EAASsa,OAAO9tB,OAC/B,OAAOsvK,GACL,IAAIx2E,GACFW,EACiB,YAAjBA,EA1CN,SAA+B//E,EAAiB6V,EAAM3V,GACpD,OAAI1Y,MAAMC,QAAQouB,EAAK,KAEhB6E,GAAwB1a,EAAiB,EAAG6V,EAAM3V,IAErD2a,GADA7a,EAAkBA,EAAgB/W,QACM,EAAG4sB,EAAM3V,GAE5CF,IAEJua,GAAuBva,EAAiB,EAAG6V,EAAM3V,IAEpDya,GADA3a,EAAkBA,EAAgB/W,QACC,EAAG4sB,EAAM3V,GAEvCF,EACT,CA6BUm2J,CAAsBr8J,EAASkG,gBAAiBlG,EAAS+b,KAAM3V,GAC/DpG,EAASkG,gBACblG,EAAS+b,MAAM4kG,OACfv6G,EACAnW,EAAOiQ,YAAc,CAAE,EACvBjQ,EAAO2I,IACPmtF,6BACF,EACAhwF,EAEJ,CAOO,SAASumK,GAAersK,EAAQ8F,GACrC,IAAK9F,EACH,OAAO,KAET,GAAIvC,MAAMC,QAAQsC,GAAS,CACzB,MAAM8vE,EAAa9vE,EAAOgmC,KAAKj2B,GAC7Bs8J,GAAet8J,EAAUjK,KAE3B,OAAO,IAAI2vE,GAAmB3F,EAC/B,CAED,OAAO+7F,GACL,IAAIjhJ,EAFWshJ,GAAoBlsK,EAAO7E,OAE7B6E,EAAOiW,gBAAiBjW,EAAOqqB,OAAQrqB,EAAO8rB,OAC3D,EACAhmB,EAEJ,CCxJA,IAAAwmK,GA9QA,cAAyBC,GACvB,WAAArxK,GACEmF,QAMAjF,KAAKygH,eAAiBE,IACvB,CAKD,OAAAnyF,GACE,MAAO,KACR,CAUD,WAAA4hJ,CAAYnmK,EAAQS,GAClB,IAAKT,EACH,OAAO,KAET,GAAsB,iBAAXA,EAAqB,CAC9B,MAAMyhD,EAAM1gB,GAAM/gC,GAClB,OAAOjK,KAAKoxK,wBAAwB1lH,EAAKhhD,EAC1C,CACD,OAAIyzG,GAAWl0G,GACNjK,KAAKoxK,wBAClB,EACQ1mK,GAGG1K,KAAKqxK,sBAAqD3mK,EAClE,CAOD,uBAAA0mK,CAAwB1lH,EAAKhhD,GAC3B,MAAMu4D,EAAWjjE,KAAKsxK,yBAAyB5lH,EAAKhhD,GACpD,OAAIu4D,EAAS9hE,OAAS,EACb8hE,EAAS,GAEX,IACR,CAOD,mBAAAouG,CAAoB//J,EAAM5G,GACxB,OAAO,IACR,CAUD,YAAAijE,CAAa1jE,EAAQS,GACnB,IAAKT,EACH,MAAO,GAET,GAAsB,iBAAXA,EAAqB,CAC9B,MAAMyhD,EAAM1gB,GAAM/gC,GAClB,OAAOjK,KAAKsxK,yBAAyB5lH,EAAKhhD,EAC3C,CACD,OAAIyzG,GAAWl0G,GACNjK,KAAKsxK,yBAClB,EACQ5mK,GAGG1K,KAAKuxK,uBAAsD7mK,EACnE,CAQD,wBAAA4mK,CAAyB5lH,EAAKhhD,GAE5B,MAAMu4D,EAAW,GACjB,IAAK,IAAIthE,EAAI+pD,EAAItF,WAAYzkD,EAAGA,EAAIA,EAAEu8G,YAChCv8G,EAAEk8G,UAAYC,KAAK0zD,cACrBtvK,EACE+gE,EACAjjE,KAAKuxK,uBAAiD7mK,IAI5D,OAAOu4D,CACR,CASD,oBAAAsuG,CAAqBjgK,EAAM5G,GACzB,OAAOpC,GACR,CASD,YAAA+nK,CAAapmK,EAAQS,GACnB,IAAKT,EACH,OAAO,KAET,GAAsB,iBAAXA,EAAqB,CAC9B,MAAMyhD,EAAM1gB,GAAM/gC,GAClB,OAAOjK,KAAKyxK,yBAAyB/lH,EAAKhhD,EAC3C,CACD,OAAIyzG,GAAWl0G,GACNjK,KAAKyxK,yBAClB,EACQ/mK,GAGG1K,KAAK0xK,uBAAsDhnK,EACnE,CAQD,wBAAA+mK,CAAyB/lH,EAAKhhD,GAC5B,OAAO,IACR,CAQD,oBAAAgnK,CAAqBpgK,EAAM5G,GACzB,OAAO,IACR,CASD,cAAAmjE,CAAe5jE,GACb,IAAKA,EACH,OAAO,KAET,GAAsB,iBAAXA,EAAqB,CAC9B,MAAMyhD,EAAM1gB,GAAM/gC,GAClB,OAAOjK,KAAK2xK,2BAA2BjmH,EACxC,CACD,OAAIyyD,GAAWl0G,GACNjK,KAAK2xK,2BAAoD,GAE3D3xK,KAAK4xK,uBAA+C,EAC5D,CAOD,0BAAAD,CAA2BjmH,GACzB,OAAO1rD,KAAKguE,cACb,CAOD,sBAAA4jG,CAAuBtgK,GACrB,OAAOtR,KAAKguE,cACb,CASD,YAAAsiG,CAAa7wH,EAAS/0C,GACpB,MAAM4G,EAAOtR,KAAK6xK,iBAAiBpyH,EAAS/0C,GAC5C,OAAO1K,KAAKygH,eAAeqxD,kBAAkBxgK,EAC9C,CAQD,gBAAAugK,CAAiBpyH,EAAS/0C,GACxB,OAAO,IACR,CAUD,aAAA6lK,CAActtG,EAAUv4D,GACtB,MAAM4G,EAAOtR,KAAK+xK,kBAAkB9uG,EAAUv4D,GAC9C,OAAO1K,KAAKygH,eAAeqxD,kBAAkBxgK,EAC9C,CAOD,iBAAAygK,CAAkB9uG,EAAUv4D,GAC1B,OAAO,IACR,CASD,aAAA8lK,CAAc77J,EAAUjK,GACtB,MAAM4G,EAAOtR,KAAKgyK,kBAAkBr9J,EAAUjK,GAC9C,OAAO1K,KAAKygH,eAAeqxD,kBAAkBxgK,EAC9C,CAOD,iBAAA0gK,CAAkBr9J,EAAUjK,GAC1B,OAAO,IACR,GCjRI,SAASunK,GAAY3gK,GAE1B,OAAO4gK,GADGz0D,GAAkBnsG,GAAM,GAEpC,CAMO,SAAS4gK,GAAkB5hB,GAChC,MAAMtwI,EAAI,6BAA6ByqB,KAAK6lH,GAC5C,GAAItwI,EACF,YAAgBxZ,IAATwZ,EAAE,KAAoB,CAGjC,CAMO,SAASmyJ,GAAa7gK,GAC3B,MAAMu4B,EAAI4zE,GAAkBnsG,GAAM,GAC5B8gK,EAAWv0I,KAAKmN,MAAMnB,GAC5B,OAAOvb,MAAM8jJ,QAAY5rK,EAAY4rK,EAAW,GAClD,CAMO,SAASC,GAAY/gK,GAE1B,OAAOghK,GADG70D,GAAkBnsG,GAAM,GAEpC,CAMO,SAASghK,GAAkBhiB,GAEhC,MAAMtwI,EAAI,4CAA4CyqB,KAAK6lH,GAC3D,GAAItwI,EACF,OAAO6qB,WAAW7qB,EAAE,GAGxB,CAMO,SAASuyJ,GAAoBjhK,GAElC,OAAOkhK,GADG/0D,GAAkBnsG,GAAM,GAEpC,CAMO,SAASkhK,GAA6BliB,GAC3C,MAAMtwI,EAAI,gBAAgByqB,KAAK6lH,GAC/B,GAAItwI,EACF,OAAOxP,SAASwP,EAAE,GAAI,GAG1B,CAMO,SAASyyJ,GAAWnhK,GACzB,OAAOmsG,GAAkBnsG,GAAM,GAAOq5B,MACxC,CAMO,SAAS+nI,GAAqBphK,EAAMqhK,GACzCC,GAAoBthK,EAAMqhK,EAAO,IAAM,IACzC,CAMO,SAASE,GAAkBvhK,EAAMg/I,GACtCh/I,EAAKW,YAAYurG,KAAcs1D,mBAAmBxiB,GACpD,CAMO,SAASyiB,GAAsBzhK,EAAM8gK,GAC1C,MAAMY,EAAO,IAAIn1I,KAAgB,IAAXu0I,GAChB9hB,EACJ0iB,EAAKC,iBACL,IACA/tJ,GAAU8tJ,EAAKE,cAAgB,EAAG,GAClC,IACAhuJ,GAAU8tJ,EAAKG,aAAc,GAC7B,IACAjuJ,GAAU8tJ,EAAKI,cAAe,GAC9B,IACAluJ,GAAU8tJ,EAAKK,gBAAiB,GAChC,IACAnuJ,GAAU8tJ,EAAKM,gBAAiB,GAChC,IACFhiK,EAAKW,YAAYurG,KAAcjqD,eAAe+8F,GAChD,CAMO,SAASijB,GAAqBjiK,EAAMgU,GACzC,MAAMgrI,EAAShrI,EAAQkuJ,cACvBliK,EAAKW,YAAYurG,KAAcjqD,eAAe+8F,GAChD,CAMO,SAASmjB,GAAgCniK,EAAMoiK,GACpD,MAAMpjB,EAASojB,EAAmB/6J,WAClCrH,EAAKW,YAAYurG,KAAcjqD,eAAe+8F,GAChD,CAMO,SAASsiB,GAAoBthK,EAAMg/I,GACxCh/I,EAAKW,YAAYurG,KAAcjqD,eAAe+8F,GAChD,CC9GA,MAAMqjB,GAAiB,CACrB,KACA,oCACA,qCAeIC,GAAiB,CACrBC,IAAOC,GACPC,IAAOC,GACPC,IAAOC,IAQHC,GAAcr0D,GAAgB6zD,GAAgB,CAClDE,IAAOp1D,GAAgBq1D,IACvBC,IAAOt1D,GAAgBu1D,IACvBC,IAAOx1D,GAAgBy1D,MAQnBE,GAAet0D,GAAgB6zD,GAAgB,CACnDjxH,KAAQm8D,GAAyB4zD,GAAY,YAC7C1yK,KAAQ8+G,GAAyB4zD,GAAY,cAQzC4B,GAAkBv0D,GAAgB6zD,GAAgB,CACtDE,IAAO/0D,IA0uBT,SAAkBxtG,EAAMmuC,EAAS++D,GAC/B,MAAM9zG,EACJ8zG,EAAY,GAER3pG,EAAa4qC,EAAQn2C,gBACrB4G,EAAU,CAACoB,KAAMA,GACvBpB,EAAoB,WAAI2E,EACxB,MAAMF,EAAW8qC,EAAQxqC,cACzB,GAA0B,cAAtBN,EAAS6Z,UAA2B,CACtC,MAAMwpE,EACJy4E,GAA6B97J,GAAU,EAAMjK,GAE/CwF,EAAwB,eAAI8nF,EAAWpoE,YACvC/a,EAAkB,MAAImjF,EAAWvoE,gBAClC,CACD,MAAMte,EAAaqtG,EAAYA,EAAYr9G,OAAS,GAAGmQ,KACjDsuG,EAAc00D,GAAanjK,EAAWmsG,cACtCt0G,EAAS22G,GAAa9qG,EAAY+qG,GACxCY,GACEtwG,EACAqkK,GACA70D,GACA12G,EACAw1G,EACAoB,EAEJ,IAnwBEm0D,IAAOj1D,IA0wBT,SAAkBxtG,EAAMmuC,EAAS++D,GAC/B,MAAM9zG,EACJ8zG,EAAY,GAER3pG,EAAa4qC,EAAQn2C,gBAErB4G,EAAU,CAACoB,KAAMA,GACvBpB,EAAoB,WAAI2E,EACxB,MAAMF,EAAW8qC,EAAQxqC,cACzB,GAA0B,mBAAtBN,EAAS6Z,UAAgC,CAC3C,MAAM8pE,EACJm4E,GAA6B97J,GAAU,EAAMjK,GAE/CmK,EAAmB,OAAIyjF,EAAgBE,gBACxC,CACD,MAAMrnF,EAAaqtG,EAAYA,EAAYr9G,OAAS,GAAGmQ,KACjDsuG,EAAc40D,GAAarjK,EAAWmsG,cACtCt0G,EAAS22G,GAAa9qG,EAAY+qG,GACxCY,GACEtwG,EACAukK,GACA/0D,GACA12G,EACAw1G,EACAoB,EAEJ,IAnyBEq0D,IAAOn1D,IA6zBT,SAAkBxtG,EAAMmuC,EAAS++D,GAC/B,MAAM9zG,EACJ8zG,EAAY,GAERtuG,EAAUsuG,EAAYA,EAAYr9G,OAAS,GACjD+O,EAAoB,WAAIuvC,EAAQn2C,gBAChC,MAAMqL,EAAW8qC,EAAQxqC,cACzB,GAA0B,SAAtBN,EAAS6Z,UAAsB,CACjC,MAAM9L,EACJ+tJ,GAA6B97J,GAAU,EAAMjK,GAE/CwF,EAAwB,eAAIwS,EAAMkN,YAClC8kJ,GAAapjK,EAAMoR,EAAM+M,iBAAkB+uF,EAC5C,CACH,MA5qBA,MAAMm2D,GAAc70D,GAAgB6zD,GAAgB,CAClDl+J,KAAQopG,GAAyB4zD,IACjCmC,IAAO/1D,GAAyB4zD,IAChCoC,KAAQh2D,GAAyB4zD,IACjC93I,IAAOkkF,GAAyB4zD,IAChC5pE,KAAQisE,GACR3vJ,OAAU05F,GAAyB0zD,IACnCwC,WAAcC,GACdj1K,KAAQ8+G,GAAyB4zD,IACjCwC,MAoWF,SAAoB3jK,EAAMktG,GACxB,MAAMx1G,EAASu3G,GAAgB,CAAA,EAAI20D,GAAe5jK,EAAMktG,GACxD,GAAIx1G,EAAQ,CACV,MAAMmsK,EACJ32D,EAAYA,EAAYr9G,OAAS,GAQnC42F,GALEo9E,EACN,gBAEMA,EACN,cACqD7jK,EAAMtI,EACxD,CACH,IA1WMksK,GAAgBp1D,GAAgB6zD,GAAgB,CACpDyB,IAAOv2D,GAAyBwzD,IAChC7kK,KAAQqxG,GAAyBszD,MAQ7BkD,GAAcv1D,GAAgB6zD,GAAgB,CAClDl+J,KAAQopG,GAAyB4zD,IACjCmC,IAAO/1D,GAAyB4zD,IAChCoC,KAAQh2D,GAAyB4zD,IACjC93I,IAAOkkF,GAAyB4zD,IAChC5pE,KAAQisE,GACR3vJ,OAAU05F,GAAyB0zD,IACnCxyK,KAAQ8+G,GAAyB4zD,IACjCsC,WAAcC,GACdM,OAiXF,SAAqBhkK,EAAMktG,GACzB,MAAMx1G,EAAgCw1G,EAAYA,EAAYr9G,OAAS,GACvE++G,GAAUq1D,GAAgBjkK,EAAMktG,GAChC,MAAM3jG,EAEH7R,EAAyB,gBACeA,EAAc,KACpDrD,KAAKkV,EAAgB1Z,OAC5B,IAjXMo0K,GAAiBz1D,GAAgB6zD,GAAgB,CACrD6B,MAoVF,SAAoBlkK,EAAMktG,GACxB,MAAMx1G,EAASu3G,GAAgB,CAAA,EAAIk1D,GAAenkK,EAAMktG,GACxD,GAAIx1G,EAAQ,CACV,MAAM0sK,EACJl3D,EAAYA,EAAYr9G,OAAS,GAQnC42F,GALE29E,EACN,gBAEMA,EACN,cACqDpkK,EAAMtI,EACxD,CACH,IA1VMysK,GAAgB31D,GAAgB6zD,GAAgB,CACpDyB,IAAOv2D,GAAyBwzD,IAChC7kK,KAAQqxG,GAAyBszD,MAQ7BwD,GAAc71D,GAAgB6zD,GAAgB,CAClDyB,IAAOv2D,GAAyBwzD,IAChC7kK,KAAQqxG,GAAyBszD,IACjCyD,OAAU/2D,GAAyBwzD,IACnCwD,YAAeh3D,GAAyBwzD,IACxC58J,KAAQopG,GAAyB4zD,IACjCmC,IAAO/1D,GAAyB4zD,IAChCoC,KAAQh2D,GAAyB4zD,IACjC93I,IAAOkkF,GAAyB4zD,IAChC5pE,KAAQisE,GACRgB,IAAOj3D,GAAyB4zD,IAChC1yK,KAAQ8+G,GAAyB4zD,IACjCsD,IAAOl3D,GAAyB4zD,IAChCuD,IAAOn3D,GAAyB0zD,IAChC0D,KAAQp3D,GAAyBwzD,IACjC6D,KAAQr3D,GAAyBwzD,IACjC8D,KAAQt3D,GAAyBwzD,IACjC+D,cAAiBv3D,GAAyBwzD,IAC1CgE,OAAUx3D,GAAyB0zD,IACnCwC,WAAcC,KAOVsB,GAAgB,CAAC,OAAQ,QAOzBC,GAAmBz2D,GAAgB6zD,GAAgB,CACvDjxH,KAAQo8D,GAAkB8zD,IAC1B7yK,KAAQ++G,GAAkB8zD,MAQtB0B,GAAex0D,GAAgB6zD,GAAgB,CACnD,OACA,MACA,OACA,MACA,OACA,SACA,OACA,UAQIY,GAAkBz0D,GAAgB6zD,GAAgB,CACtDl+J,KAAQqpG,GAAkB8zD,IAC1BgC,IAAO91D,GAAkB8zD,IACzBiC,KAAQ/1D,GAAkB8zD,IAC1Bj4I,IAAOmkF,GAAkB8zD,IACzB/pE,KAAQiW,GAAkB03D,IAC1BrxJ,OAAU25F,GAAkB20D,IAC5B1zK,KAAQ++G,GAAkB8zD,IAC1BqC,MAASj2D,GAAoBF,GAAkB41D,OAQ3C+B,GAAsB32D,GAAgB6zD,GAAgB,CAAC,MAAO,SAO9Da,GAAe10D,GAAgB6zD,GAAgB,CACnD,OACA,MACA,OACA,MACA,OACA,SACA,OACA,WAQIc,GAAkB30D,GAAgB6zD,GAAgB,CACtDl+J,KAAQqpG,GAAkB8zD,IAC1BgC,IAAO91D,GAAkB8zD,IACzBiC,KAAQ/1D,GAAkB8zD,IAC1Bj4I,IAAOmkF,GAAkB8zD,IACzB/pE,KAAQiW,GAAkB03D,IAC1BrxJ,OAAU25F,GAAkB20D,IAC5B1zK,KAAQ++G,GAAkB8zD,IAC1B0C,OAAUt2D,GAAoBF,IAkehC,SAAqBxtG,EAAM0mF,EAAYwmB,GAErC,MAAMtuG,EAAU,CAACoB,KAAMA,GACvBpB,EAAwB,eAAI8nF,EAAWpoE,YACvC1f,EAAoB,WAAI,GACxBswG,GACEtwG,EACAwmK,GACAC,GACA3+E,EAAWvoE,iBACX+uF,EAEJ,OAveMm4D,GAAsBv3D,GAAsB,SAO5Cs3D,GAAqB52D,GAAgB6zD,GAAgB,CACzD6B,MAAS12D,GAAkB41D,MAQvBkC,GAAoB92D,GAAgB6zD,GAAgB,CACxD,MACA,OACA,SACA,cACA,OACA,MACA,OACA,MACA,OACA,MACA,OACA,MACA,MACA,OACA,OACA,OACA,gBACA,WAQIkD,GAAuB/2D,GAAgB6zD,GAAgB,CAC3DyB,IAAOt2D,GAAkBy0D,IACzB/lK,KAAQsxG,GAAkBi0D,IAC1B6C,OAAU92D,GAAkBy0D,IAC5BsC,YAAe/2D,GAAkBy0D,IACjC99J,KAAQqpG,GAAkB8zD,IAC1BgC,IAAO91D,GAAkB8zD,IACzBiC,KAAQ/1D,GAAkB8zD,IAC1Bj4I,IAAOmkF,GAAkB8zD,IACzB/pE,KAAQiW,GAAkB03D,IAC1BV,IAAOh3D,GAAkB8zD,IACzB7yK,KAAQ++G,GAAkB8zD,IAC1BmD,IAAOj3D,GAAkB8zD,IACzBoD,IAAOl3D,GAAkB20D,IACzBwC,KAAQn3D,GAAkBy0D,IAC1B2C,KAAQp3D,GAAkBy0D,IAC1B4C,KAAQr3D,GAAkBy0D,IAC1B6C,cAAiBt3D,GAAkBy0D,IACnC8C,OAAUv3D,GAAkB20D,MAOxBqD,GAA4B,CAChCxjJ,MAAS,MACTymD,WAAc,MACdI,gBAAmB,OASrB,SAAS48F,GAAiB1yK,EAAOm6G,EAAaiB,GAC5C,MAAM9qG,EAAkC,EAAQM,cAChD,GAAIN,EAAU,CACZ,MAAM8qG,EAAWq3D,GAA0BniK,EAAS6Z,WACpD,GAAIixF,EAAU,CAEZ,OAAOpC,GADYmB,EAAYA,EAAYr9G,OAAS,GAAGmQ,KACrBgsG,aAAcmC,EACjD,CACF,CACH,CASA,SAAS1nB,GAAiBl9E,EAAiBm8J,EAAe1lK,EAAMtI,GAmB9D,OAlBA6R,EAAgBlV,KACdklC,WAAWv5B,EAAK2lK,aAAa,QAC7BpsI,WAAWv5B,EAAK2lK,aAAa,SAE3B,QAASjuK,GACX6R,EAAgBlV,KAA4BqD,EAAa,YAClDA,EAAY,IACnBguK,EAAcE,MAAO,GAErBr8J,EAAgBlV,KAAK,GAEnB,SAAUqD,GACZ6R,EAAgBlV,KAA4BqD,EAAc,aACnDA,EAAa,KACpBguK,EAAcG,MAAO,GAErBt8J,EAAgBlV,KAAK,GAEhBkV,CACT,CAWA,SAASu8J,GAAmBJ,EAAen8J,EAAiB6V,GAE1D,IAAIzB,EAAS,KACTlU,EAAS,EAWb,GAVIi8J,EAAcE,MAAQF,EAAcG,MACtCloJ,EAAS,OACTlU,EAAS,GACAi8J,EAAcE,MACvBjoJ,EAAS,MACTlU,EAAS,GACAi8J,EAAcG,OACvBloJ,EAAS,MACTlU,EAAS,GAEI,IAAXA,EAAc,CAChB,IAAK,IAAInZ,EAAI,EAAGuE,EAAK0U,EAAgB1Z,OAAS,EAAGS,EAAIuE,EAAIvE,IACvDiZ,EAAgBjZ,EAAImZ,GAAUF,EAAoB,EAAJjZ,GAC9CiZ,EAAgBjZ,EAAImZ,EAAS,GAAKF,EAAoB,EAAJjZ,EAAQ,GACtDo1K,EAAcE,OAChBr8J,EAAgBjZ,EAAImZ,EAAS,GAAKF,EAAoB,EAAJjZ,EAAQ,IAExDo1K,EAAcG,OAChBt8J,EAAgBjZ,EAAImZ,EAAS,GAAKF,EAAoB,EAAJjZ,EAAQ,IAI9D,GADAiZ,EAAgB1Z,OAAU0Z,EAAgB1Z,OAAS,EAAK4Z,EACpD2V,EACF,IAAK,IAAI9uB,EAAI,EAAGuE,EAAKuqB,EAAKvvB,OAAQS,EAAIuE,EAAIvE,IACxC8uB,EAAK9uB,GAAM8uB,EAAK9uB,GAAK,EAAKmZ,CAG/B,CACD,OAAOkU,CACT,CAMA,SAAS6lJ,GAAUxjK,EAAMktG,GACvB,MAAMx1G,EAAgCw1G,EAAYA,EAAYr9G,OAAS,GACjE+tE,EAAO59D,EAAK2lK,aAAa,QAClB,OAAT/nG,IACFlmE,EAAa,KAAIkmE,GAEnBgxC,GAAUk0D,GAAc9iK,EAAMktG,EAChC,CAMA,SAASw2D,GAAgB1jK,EAAMktG,GACSA,EAAYA,EAAYr9G,OAAS,GAC/C,gBAAImQ,CAC9B,CA6DA,SAASwiK,GAAQxiK,EAAMktG,GACrB,MAAM9zG,EACJ8zG,EAAY,GAERx1G,EAASu3G,GACb,CACE1lG,gBAAmB,GACnBm8J,cAAiB,CAAE,GAErBrC,GACArjK,EACAktG,GAEF,IAAKx1G,EACH,OAEF,MAAM6R,EAEH7R,EAAyB,uBACrBA,EAAwB,gBAC/B,MAAMguK,EAA8ChuK,EAAuB,qBACpEA,EAAsB,cAC7B,MAAMimB,EAASmoJ,GAAmBJ,EAAen8J,GAC3ClG,EAAW,IAAIolE,GAAWl/D,EAAiBoU,GACjDwhJ,GAA6B97J,GAAU,EAAOjK,GAC9C,MAAM+0C,EAAU,IAAItrC,GAAQQ,GAE5B,OADA8qC,EAAQv2C,cAAcF,GAAQ,GACvBy2C,CACT,CAOA,SAASu0H,GAAQ1iK,EAAMktG,GACrB,MAAM9zG,EACJ8zG,EAAY,GAERx1G,EAASu3G,GACb,CACE1lG,gBAAmB,GACnB6V,KAAQ,GACRsmJ,cAAiB,CAAE,GAErB3B,GACA/jK,EACAktG,GAEF,IAAKx1G,EACH,OAEF,MAAM6R,EAEH7R,EAAyB,uBACrBA,EAAwB,gBAC/B,MAAM0nB,EAAqC1nB,EAAc,YAClDA,EAAa,KACpB,MAAMguK,EAA8ChuK,EAAuB,qBACpEA,EAAsB,cAC7B,MAAMimB,EAASmoJ,GAAmBJ,EAAen8J,EAAiB6V,GAC5D/b,EAAW,IAAIwlE,GAAgBt/D,EAAiBoU,EAAQyB,GAC9D+/I,GAA6B97J,GAAU,EAAOjK,GAC9C,MAAM+0C,EAAU,IAAItrC,GAAQQ,GAE5B,OADA8qC,EAAQv2C,cAAcF,GAAQ,GACvBy2C,CACT,CAOA,SAASy0H,GAAQ5iK,EAAMktG,GACrB,MAAM9zG,EACJ8zG,EAAY,GAERx1G,EAASu3G,GAAgB,CAAA,EAAIo1D,GAAarkK,EAAMktG,GACtD,IAAKx1G,EACH,OAEF,MAAMguK,EAA8C,CAAE,EAChD19J,EAAcy+E,GAAiB,GAAIi/E,EAAe1lK,EAAMtI,GACxDimB,EAASmoJ,GAAmBJ,EAAe19J,GAC3C3E,EAAW,IAAI2e,GAAMha,EAAa2V,GACxCwhJ,GAA6B97J,GAAU,EAAOjK,GAC9C,MAAM+0C,EAAU,IAAItrC,GAAQQ,GAE5B,OADA8qC,EAAQv2C,cAAcF,GAAQ,GACvBy2C,CACT,CAOA,SAAS+2H,GAAUllK,EAAMjN,EAAOm6G,GAC9BltG,EAAK2/C,aAAa,OAAQ5sD,GAC1B,MACMwQ,EADU2pG,EAAYA,EAAYr9G,OAAS,GACV,WACjC0nG,EAAO,CAACh0F,EAAqB,SAAGA,EAAqB,UAC3D2rG,GACF,CAAuDlvG,KAAMA,GACzDilK,GACA72D,GACA7W,EACA2V,EACA83D,GAEJ,CAOA,SAAS5B,GAAapjK,EAAM6F,EAAYqnG,GACtC,MAAMtuG,EAAUsuG,EAAYA,EAAYr9G,OAAS,GAE3Cm8G,EADaptG,EAAQoB,KACKgsG,aAC1BzoG,EAAa3E,EAAoB,WAEvCoB,EAAK+lK,eAAe,KAAM,MAAOzuK,OAAOuO,EAAW,KACnD7F,EAAK+lK,eAAe,KAAM,MAAOzuK,OAAOuO,EAAW,KAEnD,OADuBjH,EAAwB,gBAE7C,IAAK,OACmB,IAAlBiH,EAAW,KACbtC,EAAiB,KAAIsC,EAAW,IAGpC,IAAK,MACmB,IAAlBA,EAAW,KACbtC,EAAgB,IAAIsC,EAAW,IAEjC,MACF,IAAK,MACmB,IAAlBA,EAAW,KACbtC,EAAiB,KAAIsC,EAAW,IAMtC,MAAMyoG,EACa,SAAjBtuG,EAAKmuG,SACDg3D,GAAoBn5D,GACpBs5D,GAAkBt5D,GAClBt0G,EAAS22G,GAAa9qG,EAAY+qG,GACxCY,GAEG,CAAClvG,KAAMA,EAAMuD,WAAcA,GAC5BgiK,GACAn3D,GACA12G,EACAw1G,EACAoB,EAEJ,CA4GA,IAAA03D,GA1yBA,cAAkBC,GAIhB,WAAAz3K,CAAY4K,GACVzF,QAEAyF,EAAUA,GAAoB,GAK9B1K,KAAKguE,eAAiBt/C,GAAc,aAMpC1uB,KAAKw3K,gBAAkB9sK,EAAQ+sK,cAChC,CAMD,qBAAAC,CAAsBz0G,GACfA,IACHA,EAAW,IAEb,IAAK,IAAIrhE,EAAI,EAAGuE,EAAK88D,EAAS9hE,OAAQS,EAAIuE,IAAMvE,EAAG,CACjD,MAAM69C,EAAUwjB,EAASrhE,GACzB,GAAI5B,KAAKw3K,gBAAiB,CACxB,MAAMG,EAAiBl4H,EAAQt2C,IAAI,oBAAsB,KACzDnJ,KAAKw3K,gBAAgB/3H,EAASk4H,EAC/B,CACDl4H,EAAQ31C,IAAI,uBAAmBtD,EAChC,CACF,CAOD,mBAAA6qK,CAAoB//J,EAAM5G,GACxB,IAAKipK,GAAejuK,SAAS4L,EAAKgsG,cAChC,OAAO,KAET,MAAMs6D,EAAgBhE,GAAetiK,EAAKstG,WAC1C,IAAKg5D,EACH,OAAO,KAET,MAAMn4H,EAAUm4H,EAActmK,EAAM,CAACtR,KAAKkwK,eAAe5+J,EAAM5G,KAC/D,OAAK+0C,GAGLz/C,KAAK03K,sBAAsB,CAACj4H,IACrBA,GAHE,IAIV,CAOD,oBAAA8xH,CAAqBjgK,EAAM5G,GACzB,IAAKipK,GAAejuK,SAAS4L,EAAKgsG,cAChC,MAAO,GAET,GAAsB,OAAlBhsG,EAAKstG,UAAoB,CAE3B,MAAM37C,EAAWs9C,GAAgB,GAAI4zD,GAAa7iK,EAAM,CACtDtR,KAAKkwK,eAAe5+J,EAAM5G,KAE5B,OAAIu4D,GACFjjE,KAAK03K,sBAAsBz0G,GACpBA,GAEF,EACR,CACD,MAAO,EACR,CAYD,iBAAA8uG,CAAkB9uG,EAAUv4D,GAC1BA,EAAU1K,KAAKmwK,aAAazlK,GAE5B,MAAMmtK,EAAMx6D,GAAgB,oCAAqC,OAmBjE,OAjBAw6D,EAAIR,eADa,gCACY,YAAaj6D,IAC1Cy6D,EAAIR,eACFj6D,GACA,qBAlLJ,+EAqLEy6D,EAAI5mH,aAAa,UAAW,OAC5B4mH,EAAI5mH,aAAa,UAAW,cAE5BuvD,GAEJ,CAAQlvG,KAAMumK,GACRxD,GACA0C,GACA9zG,EACA,CAACv4D,IAEImtK,CACR,GC9CH,SAASC,GAAU7tK,GACjB,GAAsB,iBAAXA,EAAqB,CAC9B,MAAMrF,EAAS0oE,KAAKtiC,MAAM/gC,GAC1B,OAAOrF,GAA0C,IAClD,CACD,OAAe,OAAXqF,EACKA,EAEF,IACT,CAEA,IAAA8tK,GAnMA,cAA0B5G,GACxB,WAAArxK,GACEmF,OACD,CAKD,OAAAupB,GACE,MAAO,MACR,CAWD,WAAA4hJ,CAAYnmK,EAAQS,GAClB,OAAO1K,KAAKg4K,sBACVF,GAAU7tK,GACVjK,KAAKkwK,eAAejmK,EAAQS,GAE/B,CAWD,YAAAijE,CAAa1jE,EAAQS,GACnB,OAAO1K,KAAKi4K,uBACVH,GAAU7tK,GACVjK,KAAKkwK,eAAejmK,EAAQS,GAE/B,CASD,qBAAAstK,CAAsBpzK,EAAQ8F,GAC5B,OAAOpC,GACR,CASD,sBAAA2vK,CAAuBrzK,EAAQ8F,GAC7B,OAAOpC,GACR,CAUD,YAAA+nK,CAAapmK,EAAQS,GACnB,OAAO1K,KAAKk4K,uBACVJ,GAAU7tK,GACVjK,KAAKkwK,eAAejmK,EAAQS,GAE/B,CASD,sBAAAwtK,CAAuBtzK,EAAQ8F,GAC7B,OAAOpC,GACR,CASD,cAAAulE,CAAe5jE,GACb,OAAOjK,KAAKm4K,yBAAyBL,GAAU7tK,GAChD,CAQD,wBAAAkuK,CAAyBvzK,GACvB,OAAO0D,GACR,CAUD,YAAAgoK,CAAa7wH,EAAS/0C,GACpB,OAAO4iE,KAAKg5D,UAAUtmI,KAAKo4K,mBAAmB34H,EAAS/0C,GACxD,CAQD,kBAAA0tK,CAAmB34H,EAAS/0C,GAC1B,OAAOpC,GACR,CAUD,aAAAioK,CAActtG,EAAUv4D,GACtB,OAAO4iE,KAAKg5D,UAAUtmI,KAAKq4K,oBAAoBp1G,EAAUv4D,GAC1D,CAQD,mBAAA2tK,CAAoBp1G,EAAUv4D,GAC5B,OAAOpC,GACR,CAUD,aAAAkoK,CAAc77J,EAAUjK,GACtB,OAAO4iE,KAAKg5D,UAAUtmI,KAAKs4K,oBAAoB3jK,EAAUjK,GAC1D,CAQD,mBAAA4tK,CAAoB3jK,EAAUjK,GAC5B,OAAOpC,GACR,GC8GH,SAASiwK,GAAqB3zK,EAAQ8F,GACpC,IAAK9F,EACH,OAAO,KAIT,IAAI+P,EACJ,OAAQ/P,EAAa,MACnB,IAAK,QACH+P,EA4EN,SAA2B/P,GACzB,MAAMiW,EAAkBjW,EAAoB,YAC5C,MAAO,CACL7E,KAAM,QACN8a,kBACAoU,OAAQD,GAAmBnU,EAAgB1Z,QAE/C,CAnFiBq3K,CAA+C,GAC1D,MAEF,IAAK,aACH7jK,EAqFN,SAAgC/P,GAC9B,MAAM0U,EAAc1U,EAAoB,YAClCiW,EAAkBvB,EAAYg8G,OACpC,MAAO,CACLv1H,KAAM,aACN8a,kBACA6V,KAAM,CAAC7V,EAAgB1Z,QACvB8tB,OAAQD,GAAmB1V,EAAY,GAAGnY,QAE9C,CA9FiBs3K,CACjB,GAEM,MAEF,IAAK,UACH9jK,EAkJN,SAA6B/P,GAC3B,MAAM0U,EAAc1U,EAAoB,YAClCiW,EAAkB,GAClBE,EAASzB,EAAY,GAAG,GAAGnY,OAC3BuvB,EAAOW,GAAwBxW,EAAiB,EAAGvB,EAAayB,GACtE,MAAO,CACLhb,KAAM,UACN8a,kBACA6V,OACAzB,OAAQD,GAAmBjU,GAE/B,CA7JiB29J,CAAmD,GAC9D,MAEF,IAAK,aACH/jK,EA2GN,SAAgC/P,GAC9B,MAAM0U,EAAc1U,EAAoB,YACxC,MAAO,CACL7E,KAAM,aACN8a,gBAAiBvB,EAAYg8G,OAC7BrmG,OAAQD,GAAmB1V,EAAY,GAAGnY,QAE9C,CAlHiBw3K,CACjB,GAEM,MAEF,IAAK,kBACHhkK,EAoFN,SAAqC/P,GACnC,MAAM0U,EAAc1U,EAAoB,YAClCmW,EAASzB,EAAY,GAAG,GAAGnY,OAC3B0Z,EAAkB,GAClB6V,EAAOW,GAAwBxW,EAAiB,EAAGvB,EAAayB,GACtE,MAAO,CACLhb,KAAM,kBACN8a,kBACA6V,OACAzB,OAAQD,GAAmBjU,GAE/B,CA/FiB69J,CACjB,GAEM,MAEF,IAAK,eACHjkK,EA4GN,SAAkC/P,GAChC,MAAM0U,EAAc1U,EAAoB,YAClCiW,EAAkB,GAClBE,EAASzB,EAAY,GAAG,GAAG,GAAGnY,OAC9ByvB,EAAQW,GACZ1W,EACA,EACAvB,EACAyB,GAEF,MAAO,CACLhb,KAAM,eACN8a,kBACA6V,KAAME,EACN3B,OAAQD,GAAmBjU,GAE/B,CA5HiB89J,CACjB,GAEM,MAEF,IAAK,qBACHlkK,EA2BN,SAAwC/P,EAAQ8F,GAC9C,MAAMgqE,EAAa9vE,EAAmB,WAAEgmC,KAKtC,SAAUj2B,GACR,OAAO4jK,GAAqB5jK,EAC7B,IAEH,OAAO+/D,CACT,CAtCiBokG,CACjB,GAEM,MAEF,QACE,MAAM,IAAIvwK,MAAM,6BAA+B3D,EAAa,MAGhE,OAAO+P,CACT,CAoIA,SAAS67J,GAAc77J,EAAUjK,GAG/B,MAAM3K,GAFN4U,EAAW87J,GAA6B97J,GAAU,EAAMjK,IAElC8jB,UAGtB,IAAIuqJ,EACJ,OAAQh5K,GACN,IAAK,QACHg5K,EA0IN,SAA4BpkK,EAAUjK,GACpC,MAAO,CACL3K,KAAM,QACNuZ,YAAa3E,EAAS8a,iBAE1B,CA/IgBupJ,CAC2C,GAGrD,MAEF,IAAK,aACHD,EA+EN,SAAiCpkK,EAAUjK,GACzC,MAAO,CACL3K,KAAM,aACNuZ,YAAa3E,EAAS8a,iBAE1B,CApFgBwpJ,CACgD,GAG1D,MAEF,IAAK,UACHF,EAwIN,SAA8BpkK,EAAUjK,GACtC,IAAI2qB,EACA3qB,IACF2qB,EAAQ3qB,EAAQwuK,aAElB,MAAO,CACLn5K,KAAM,UACNuZ,YAAa3E,EAAS8a,eAAe4F,GAEzC,CAjJgB8jJ,CAChB,EACQzuK,GAEF,MAEF,IAAK,aACHquK,EAyFN,SAAiCpkK,EAAUjK,GACzC,MAAO,CACL3K,KAAM,aACNuZ,YAAa3E,EAAS8a,iBAE1B,CA9FgB2pJ,CACgD,GAG1D,MAEF,IAAK,kBACHL,EAsEN,SAAsCpkK,EAAUjK,GAC9C,MAAO,CACL3K,KAAM,kBACNuZ,YAAa3E,EAAS8a,iBAE1B,CA3EgB4pJ,CACqD,GAG/D,MAEF,IAAK,eACHN,EAuFN,SAAmCpkK,EAAUjK,GAC3C,IAAI2qB,EACA3qB,IACF2qB,EAAQ3qB,EAAQwuK,aAElB,MAAO,CACLn5K,KAAM,eACNuZ,YAAa3E,EAAS8a,eAAe4F,GAEzC,CAhGgBikJ,CAChB,EACQ5uK,GAEF,MAEF,IAAK,qBACHquK,EA2BN,SAAyCpkK,EAAUjK,GACjDA,EAAUhE,OAAO6C,OAAO,CAAE,EAAEmB,UACrBA,EAAQkjE,kBACf,MAAM8G,EAAa//D,EAASggE,qBAAqB/pC,KAAI,SAAUj2B,GAC7D,OAAO67J,GAAc77J,EAAUjK,EACnC,IACE,MAAO,CACL3K,KAAM,qBACN20E,WAAYA,EAEhB,CArCgB6kG,CAChB,EAGQ7uK,GAEF,MAEF,IAAK,SACHquK,EAAU,CACRh5K,KAAM,qBACN20E,WAAY,IAEd,MAEF,QACE,MAAM,IAAInsE,MAAM,8BAAgCxI,GAGpD,OAAOg5K,CACT,CAmGA,IAAAS,GAtlBA,cAAsBC,GAIpB,WAAA35K,CAAY4K,GACVA,EAAUA,GAAoB,GAE9BzF,QAKAjF,KAAKguE,eAAiBt/C,GACpBhkB,EAAQsjE,eAAiBtjE,EAAQsjE,eAAiB,aAGhDtjE,EAAQkjE,oBAIV5tE,KAAKgwK,yBAA2BthJ,GAAchkB,EAAQkjE,oBAGpDljE,EAAQulK,eACVjwK,KAAKiwK,aAAevlK,EAAQulK,cAQ9BjwK,KAAKsU,cAAgB5J,EAAQ8yJ,aAO7Bx9J,KAAK05K,qBAAuBhvK,EAAQivK,oBAEpC35K,KAAKipG,oBAAsB,CACzB,uBACA,2BAEH,CAQD,qBAAA+uE,CAAsBpzK,EAAQ8F,GAI5B,IAAIkvK,EAAiB,KAEnBA,EADqB,YAAnBh1K,EAAa,KACD,EAEG,CACf7E,KAAQ,UACR4U,SAA4C,EAC5CE,WAAc,MAIlB,MAAMF,EAAW4jK,GAAqBqB,EAAyB,UAC/D,GAAI55K,KAAKiwK,eAAiBh2E,GACxB,OAAO82E,GACL,CACEp8J,WACApH,GAAIqsK,EAAmB,GACvB/kK,WAAY+kK,EAA2B,YAEzClvK,GAIJ,MAAM+0C,EAAU,IAAItrC,GAkBpB,OAjBInU,KAAKsU,cACPmrC,EAAQ1qC,gBAAgB/U,KAAKsU,eAE7BtU,KAAK05K,sBACL,kBAAmBE,SAAmBpzK,GAEtCi5C,EAAQ1qC,gBAAgB6kK,EAA8B,eAExDn6H,EAAQ7qC,YAAYq8J,GAAet8J,EAAUjK,IAEzC,OAAQkvK,GACVn6H,EAAQjqC,MAAMokK,EAAmB,IAG/BA,EAA2B,YAC7Bn6H,EAAQv2C,cAAc0wK,EAA2B,YAAG,GAE/Cn6H,CACR,CAQD,sBAAAw4H,CAAuBrzK,EAAQ8F,GAG7B,IAAIu4D,EAAW,KACf,GAA8B,sBAHsB,EAG5B,KAA2B,CAIjDA,EAAW,GACX,MAAM42G,EAJwB,EAI6B,SAC3D,IAAK,IAAIj4K,EAAI,EAAGuE,EAAK0zK,EAAgB14K,OAAQS,EAAIuE,IAAMvE,EAAG,CACxD,MAAMk4K,EAAgB95K,KAAKg4K,sBACzB6B,EAAgBj4K,GAChB8I,GAEGovK,GAGL72G,EAASt9D,KAAKm0K,EACf,CACP,MACM72G,EAAW,CAACjjE,KAAKg4K,sBAAsBpzK,EAAQ8F,IAEjD,OAAOu4D,EAASqyD,MACjB,CAQD,sBAAA4iD,CAAuBtzK,EAAQ8F,GAC7B,OAmKJ,SAAsB9F,EAAQ8F,GAC5B,MAAMqvK,EAAiBxB,GAAqB3zK,GAC5C,OAAOqsK,GAAe8I,EAAgBrvK,EACxC,CAtKW2lK,CAAazrK,EAAQ8F,EAC7B,CAOD,wBAAAytK,CAAyBvzK,GACvB,MAAM4kG,EAAM5kG,EAAY,IACxB,IAAIsa,EACJ,GAAIsqF,EACF,GAAmB,QAAfA,EAAU,KACZtqF,EAAawP,GAAc86E,EAAgB,WAAQ,UAC9C,IAAoB,SAAhBA,EAAU,KAGnB,MAAM,IAAIjhG,MAAM,oBAFhB2W,EAAawP,GAAc,QAAU86E,EAAgB,WAAQ,KAG9D,MAEDtqF,EAAalf,KAAKguE,eAEpB,OAAA,CACD,CAUD,kBAAAoqG,CAAmB34H,EAAS/0C,GAC1BA,EAAU1K,KAAKmwK,aAAazlK,GAG5B,MAAM9F,EAAS,CACb7E,KAAQ,UACR4U,SAAU,KACVE,WAAY,MAGRtH,EAAKkyC,EAAQrqC,QAKnB,QAJW5O,IAAP+G,IACF3I,EAAO2I,GAAKA,IAGTkyC,EAAQh2C,gBACX,OAAO7E,EAGT,MAAMiQ,EAAa4qC,EAAQn2C,gBACrBqL,EAAW8qC,EAAQxqC,cAWzB,OAVIN,IACF/P,EAAO+P,SAAW67J,GAAc77J,EAAUjK,UAEnCmK,EAAW4qC,EAAQzqC,oBAGvBlQ,EAAQ+P,KACXjQ,EAAOiQ,WAAaA,GAGfjQ,CACR,CAUD,mBAAAyzK,CAAoBp1G,EAAUv4D,GAC5BA,EAAU1K,KAAKmwK,aAAazlK,GAC5B,MAAMsvK,EAAU,GAChB,IAAK,IAAIp4K,EAAI,EAAGuE,EAAK88D,EAAS9hE,OAAQS,EAAIuE,IAAMvE,EAC9Co4K,EAAQr0K,KAAK3F,KAAKo4K,mBAAmBn1G,EAASrhE,GAAI8I,IAEpD,MAAO,CACL3K,KAAM,oBACNkjE,SAAU+2G,EAEb,CAUD,mBAAA1B,CAAoB3jK,EAAUjK,GAC5B,OAAO8lK,GAAc77J,EAAU3U,KAAKmwK,aAAazlK,GAClD,GC/FH,SAAS6pE,GAAQtqE,GACf,MAAsB,iBAAXA,EACFA,EAEF,EACT,CAEA,IAAAgwK,GA/LA,cAA0B9I,GACxB,WAAArxK,GACEmF,OACD,CAKD,OAAAupB,GACE,MAAO,MACR,CAUD,WAAA4hJ,CAAYnmK,EAAQS,GAClB,OAAO1K,KAAKk6K,oBACV3lG,GAAQtqE,GACRjK,KAAKmwK,aAAazlK,GAErB,CASD,mBAAAwvK,CAAoBx3H,EAAMh4C,GACxB,OAAOpC,GACR,CAUD,YAAAqlE,CAAa1jE,EAAQS,GACnB,OAAO1K,KAAKm6K,qBACV5lG,GAAQtqE,GACRjK,KAAKmwK,aAAazlK,GAErB,CASD,oBAAAyvK,CAAqBz3H,EAAMh4C,GACzB,OAAOpC,GACR,CAUD,YAAA+nK,CAAapmK,EAAQS,GACnB,OAAO1K,KAAKo6K,qBACV7lG,GAAQtqE,GACRjK,KAAKmwK,aAAazlK,GAErB,CASD,oBAAA0vK,CAAqB13H,EAAMh4C,GACzB,OAAOpC,GACR,CASD,cAAAulE,CAAe5jE,GACb,OAAOjK,KAAKq6K,uBAAuB9lG,GAAQtqE,GAC5C,CAOD,sBAAAowK,CAAuB33H,GACrB,OAAO1iD,KAAKguE,cACb,CAUD,YAAAsiG,CAAa7wH,EAAS/0C,GACpB,OAAO1K,KAAKs6K,iBAAiB76H,EAASz/C,KAAKmwK,aAAazlK,GACzD,CASD,gBAAA4vK,CAAiB76H,EAAS/0C,GACxB,OAAOpC,GACR,CAUD,aAAAioK,CAActtG,EAAUv4D,GACtB,OAAO1K,KAAKu6K,kBAAkBt3G,EAAUjjE,KAAKmwK,aAAazlK,GAC3D,CASD,iBAAA6vK,CAAkBt3G,EAAUv4D,GAC1B,OAAOpC,GACR,CAUD,aAAAkoK,CAAc77J,EAAUjK,GACtB,OAAO1K,KAAKw6K,kBAAkB7lK,EAAU3U,KAAKmwK,aAAazlK,GAC3D,CASD,iBAAA8vK,CAAkB7lK,EAAUjK,GAC1B,OAAOpC,GACR,GC7KH,MAAMmyK,GACJ,sFAMIC,GAAc,wBAMdC,GAAkB,8BAQlBC,GAAa,aAsInB,IAAAC,GApHA,cAAkBC,GAIhB,WAAAh7K,CAAY4K,GACVzF,QAEAyF,EAAUA,GAAoB,GAK9B1K,KAAKguE,eAAiBt/C,GAAc,aAMpC1uB,KAAK+6K,cAAgBrwK,EAAQswK,aAAetwK,EAAQswK,aAAe,MACpE,CAQD,mBAAAd,CAAoBx3H,EAAMh4C,GACxB,MAAMswK,EAAeh7K,KAAK+6K,cACpB3mE,EAAQ1xD,EAAK/8B,MAAMi1J,IAEnB/lK,EAAa,CAAA,EACbgG,EAAkB,GACxB,IAIIjZ,EAAGuE,EAJH80K,EAAO,IACPC,EAAQ,EACRC,EAAM,EACNC,GAAgB,EAEpB,IAAKx5K,EAAI,EAAGuE,EAAKiuG,EAAMjzG,OAAQS,EAAIuE,IAAMvE,EAAG,CAC1C,MAAMy0H,EAAOjiB,EAAMxyG,GACnB,IAAIoe,EACJ,GAAsB,KAAlBq2G,EAAKxvG,OAAO,IAEd,GADA7G,EAAIy6J,GAAYhwI,KAAK4rF,GACjBr2G,EAAG,CACL,MAAMq7J,EAAO7qK,SAASwP,EAAE,GAAI,IACtBs7J,EAAS9qK,SAASwP,EAAE,GAAI,IACxBu7J,EAAS/qK,SAASwP,EAAE,GAAI,IAC9B,IAAI3I,EAAI7G,SAASwP,EAAE,GAAI,IAAMxP,SAASwP,EAAE,GAAI,IAAM,IACtC,KAARA,EAAE,KACJ3I,GAAKA,GAEP,IAAID,EAAI5G,SAASwP,EAAE,GAAI,IAAMxP,SAASwP,EAAE,GAAI,IAAM,IAKlD,GAJY,KAARA,EAAE,KACJ5I,GAAKA,GAEPyD,EAAgBlV,KAAKyR,EAAGC,GACJ,QAAhB2jK,EAAwB,CAC1B,IAAI37I,EAEFA,EADkB,OAAhB27I,EACExqK,SAASwP,EAAE,IAAK,IACK,cAAhBg7J,EACLxqK,SAASwP,EAAE,IAAK,IAEhB,EAENnF,EAAgBlV,KAAK05B,EACtB,CACD,IAAI+yI,EAAWv0I,KAAK29I,IAAIP,EAAMC,EAAOC,EAAKE,EAAMC,EAAQC,GAEpDnJ,EAAWgJ,IACbhJ,EAAWv0I,KAAK29I,IAAIP,EAAMC,EAAOC,EAAM,EAAGE,EAAMC,EAAQC,IAE1D1gK,EAAgBlV,KAAKysK,EAAW,KAChCgJ,EAAehJ,CAChB,MAC0B,KAAlB/7C,EAAKxvG,OAAO,KACrB7G,EAAI26J,GAAgBlwI,KAAK4rF,GACrBr2G,GACFm7J,EAAM3qK,SAASwP,EAAE,GAAI,IACrBk7J,EAAQ1qK,SAASwP,EAAE,GAAI,IAAM,EAC7Bi7J,EAAO,IAAOzqK,SAASwP,EAAE,GAAI,MAE7BA,EAAI06J,GAAYjwI,KAAK4rF,GACjBr2G,IACFnL,EAAWmL,EAAE,IAAMA,EAAE,GAAG2qB,SAI/B,CACD,GAA+B,IAA3B9vB,EAAgB1Z,OAClB,OAAO,KAET,MACM62F,EAAa,IAAIje,GAAWl/D,EADH,QAAhBmgK,EAAyB,MAAQ,QAE1Cv7H,EAAU,IAAItrC,GAClBs8J,GAA6Bz4E,GAAY,EAAOttF,IAGlD,OADA+0C,EAAQv2C,cAAc2L,GAAY,GAC3B4qC,CACR,CAQD,oBAAA06H,CAAqBz3H,EAAMh4C,GACzB,MAAM+0C,EAAUz/C,KAAKk6K,oBAAoBx3H,EAAMh4C,GAC/C,OAAI+0C,EACK,CAACA,GAEH,EACR,GCnGH,MAAMg8H,GAAoB,CAAC,qCAMrB9H,GAAiB,CACrB,KACA,kCACA,kCACA,kCACA,kCAcI+H,GAAwB,CAC5B1kI,SAAY,WACZg9D,OAAU,SACV2nE,YAAe,UAQXC,GAAoB97D,GACxB6zD,GACA,CACEkI,aAAgBC,GAChBC,OAAUC,GACVC,cAAiBp9D,GAAyBq9D,GAAmB,YAC7DniG,WAAc8kC,GAAyBs9D,GAAgB,YACvDnpJ,WAAc6rF,GAAyBu9D,GAAgB,YACvD9oJ,MAASurF,GAAyBw9D,GAAW,YAC7CtmJ,QAAW8oF,GAAyBy9D,GAAa,YACjDh1D,MAASzI,GAAyB09D,IAClCC,SA2hEJ,SAAiClrK,EAAMktG,GACrC,MAAMi+D,EAAgBC,GAAkB34K,KAAK/D,KAAMsR,EAAMktG,GACzD,IAAKi+D,EACH,OAEF,MAAME,EAAkBn+D,EAAYA,EAAYr9G,OAAS,GACzD,GAAIkB,MAAMC,QAAQm6K,GAChBE,EAAuB,MAAIF,MACtB,IAA6B,iBAAlBA,EAGhB,MAAM,IAAIl0K,MAAM,uCAFhBo0K,EAA0B,SAAIF,CAG/B,CACH,EAviEIG,QAAW/9D,GAAyB4zD,IACpCoK,YAAeh+D,GAAyB4zD,IACxCh9J,KAAQopG,GAAyB4zD,IACjCvlG,KAAQ2xC,GAAyBozD,IACjC6K,YAAej+D,GAAyB4zD,IACxCsK,SAAYl+D,GAAyBm+D,IACrCC,WAAcp+D,GAAyBozD,KAEzCnyD,GAAgB27D,GAAmB,CACjCyB,WAAcr+D,IA+8ClB,SAA0BvtG,EAAMktG,GAC9B,MAAMpmB,EAAcmoB,GAClB,GACA48D,GACA7rK,EACAktG,GAEF,IAAKpmB,EACH,OAEF,OAAO,IAAIje,GAAgBie,EAC7B,GA19C6D,YACzDglF,MAASv+D,GAAyBw+D,GAAa,eAS7CC,GAAuBx9D,GAAgB6zD,GAAgB,CAC3DkI,aAAgBC,GAChBC,OAAUC,GACVuB,KA0rEF,SAAoBjsK,EAAMktG,GACxB0B,GAAUk0D,GAAc9iK,EAAMktG,EAChC,EA3rEEo+D,QAAW/9D,GAAyB4zD,IACpCoK,YAAeh+D,GAAyB4zD,IACxCh9J,KAAQopG,GAAyB4zD,IACjCvlG,KAAQ2xC,GAAyBozD,IACjC6K,YAAej+D,GAAyB4zD,IACxCwK,WAAcp+D,GAAyBozD,MAQnCmC,GAAet0D,GAAgB6zD,GAAgB,CACnDzkG,KAAQ2vC,GAAyB2+D,MAQ7BC,GAAiB39D,GAAgB6zD,GAAgB,CACrD+J,SAAU7+D,GAAyBwzD,IACnCsL,UAAW9+D,GAAyBwzD,IACpCuL,SAAU/+D,GAAyBwzD,IACnCwL,KAAMh/D,GAAyBwzD,IAC/ByL,aAAcj/D,GAAyB4zD,IACvCsL,QAASl/D,GAAyBwzD,IAClC2L,KAAMn/D,GAAyBwzD,MAQ3B4L,GAAiBn+D,GAAgB6zD,GAAgB,CACrDuK,aA+hEF,SAA4B5sK,EAAMktG,GAChC,MAAM55G,EAAS27G,GACb,CAAE,EACF49D,GACA7sK,EACAktG,GAEF,IAAK55G,EACH,OAEF,MAAMw5K,EACJ5/D,EAAYA,EAAYr9G,OAAS,GAE7BoY,EAAS,CACbsxB,WAAWjmC,EAAa,MACxBimC,WAAWjmC,EAAc,OACzBimC,WAAWjmC,EAAa,MACxBimC,WAAWjmC,EAAc,QAE3Bw5K,EAAqB,OAAI7kK,EACzB6kK,EAA2B,aAAIx5K,EAAqB,aACpDw5K,EAA0B,YAAIvzI,WAAWjmC,EAAoB,aAC7Dw5K,EAA0B,YAAIvzI,WAAWjmC,EAAoB,YAC/D,EArjEEy5K,IAukEF,SAAmB/sK,EAAMktG,GACvB,MAAM55G,EAAS27G,GAAgB,CAAA,EAAI+9D,GAAahtK,EAAMktG,GACtD,IAAK55G,EACH,OAEF,MAAM25K,EAAmC//D,EAAYA,EAAYr9G,OAAS,GAC1Eo9K,EAAwB,aAAI1zI,WAAWjmC,EAAqB,cAC5D25K,EAAwB,aAAI1zI,WAAWjmC,EAAqB,cAC5D25K,EAAyB,cAAI1zI,WAAWjmC,EAAsB,eAC9D25K,EAAyB,cAAI1zI,WAAWjmC,EAAsB,cAChE,IAzkEM45K,GAAe1+D,GAAgB6zD,GAAgB,CAAC,WAAY,cAO5D8K,GAAkB3+D,GAAgB6zD,GAAgB,CACtD+K,SAAY5/D,IA2yEd,SAAuBxtG,EAAM2xD,EAAUu7C,GACrC,MAAuDtuG,EAAU,CAACoB,KAAMA,GACxEkvG,GACEtwG,EACAyuK,GACAC,GACA37G,EACAu7C,OACAh4G,EACAxG,KAEJ,IArzEE6+K,UAAa//D,GAAkBggE,MAMjC,IAAIC,GAkBAC,GAKAC,GAKAC,GAKAC,GAKAC,GAjCAC,GAAqB,KAsCzB,IAaIC,GAbAC,GAAsB,KAkB1B,IAaIC,GAbAvuC,GAAuB,KAkB3B,IAAIwuC,GAAqB,KAazB,IAAI/sB,GAAgB,KAapB,IAkFIgtB,GAlFAC,GAAsB,KAe1B,SAASC,GAAansK,GACpB,OAAO,GAAKzH,KAAKwP,IAAI/H,EAAK,GAAIA,EAAK,GACrC,CAiFA,SAASosK,GAAuB3wG,GAC9B,OAAOA,CACT,CA0uBA,SAAS4wG,GAAUC,EAAYC,EAAcC,GAC3C,OAAI59K,MAAMC,QAAQy9K,GACTA,EAEiB,iBAAfA,EACFD,GAAUG,EAAaF,GAAaC,EAAcC,GAEpDD,CACT,CAMA,SAASE,GAAU5uK,GACjB,MAAMu4B,EAAI4zE,GAAkBnsG,GAAM,GAG5B0O,EAAI,gCAAgCyqB,KAAKZ,GAC/C,GAAI7pB,EAAG,CACL,MAAMmgK,EAAWngK,EAAE,GACnB,MAAO,CACLxP,SAAS2vK,EAASr4F,OAAO,EAAG,GAAI,IAChCt3E,SAAS2vK,EAASr4F,OAAO,EAAG,GAAI,IAChCt3E,SAAS2vK,EAASr4F,OAAO,EAAG,GAAI,IAChCt3E,SAAS2vK,EAASr4F,OAAO,EAAG,GAAI,IAAM,IAEzC,CAEH,CAMO,SAASs4F,GAAoB9uK,GAClC,IAAIu4B,EAAI4zE,GAAkBnsG,GAAM,GAChC,MAAMuJ,EAAkB,GAGxBgvB,EAAIA,EAAEvmB,QAAQ,WAAY,KAC1B,MAAM+8J,EACJ,qIACF,IAAIrgK,EACJ,KAAQA,EAAIqgK,EAAG51I,KAAKZ,IAAK,CACvB,MAAMzyB,EAAIyzB,WAAW7qB,EAAE,IACjB3I,EAAIwzB,WAAW7qB,EAAE,IACjBqf,EAAIrf,EAAE,GAAK6qB,WAAW7qB,EAAE,IAAM,EACpCnF,EAAgBlV,KAAKyR,EAAGC,EAAGgoB,GAC3BwK,EAAIA,EAAEi+C,OAAO9nE,EAAE,GAAG7e,OACnB,CACD,GAAU,KAAN0oC,EAGJ,OAAOhvB,CACT,CAMA,SAAS2iK,GAAQlsK,GACf,MAAMu4B,EAAI4zE,GAAkBnsG,GAAM,GAAOq5B,OACzC,IAAI21I,EAAUhvK,EAAKgvK,QAInB,GAHKA,GAAsB,eAAXA,IACdA,EAAUjxK,OAAO+qI,SAASlrE,MAExBoxG,EAAS,CAEX,OADY,IAAIrxG,IAAIplC,EAAGy2I,GACZpxG,IACZ,CACD,OAAOrlC,CACT,CAMA,SAASmzI,GAAa1rK,GAGpB,MAAMu4B,EAAI4zE,GAAkBnsG,GAAM,GAC/Bq5B,OACArnB,QAAQ,WAAY,KACvB,IAAIg9J,EAAUhvK,EAAKgvK,QAInB,GAHKA,GAAsB,eAAXA,IACdA,EAAUjxK,OAAO+qI,SAASlrE,MAExBoxG,EAAS,CAEX,OADY,IAAIrxG,IAAIplC,EAAGy2I,GACZpxG,IACZ,CACD,OAAOrlC,CACT,CAqCA,SAAS02I,GAAUjvK,GACjB,OAAO+gK,GAAY/gK,EACrB,CAOA,MAAMkvK,GAAoB1gE,GAAgB6zD,GAAgB,CACxD8M,KA22BF,SAAwBnvK,EAAMktG,GAC5B,MAAMkiE,EAAangE,GAAgB,CAAE,EAAEogE,GAAcrvK,EAAMktG,EAAax+G,MACxE,IAAK0gL,EACH,OAEF,MAAMn5K,EAAuCm5K,EAAiB,IAC9D,GAAIn5K,GAAc,UAAPA,EAAiB,CAC1B,MAAMw1K,EAA4C2D,EAAsB,SACpE3D,IACFv+D,EAAYA,EAAYr9G,OAAS,GAAK47K,GAExC,MAAMzsK,EAA8BowK,EAAmB,MACnDpwK,IACFkuG,EAAYA,EAAYr9G,OAAS,GAAKmP,EAEzC,CACH,IAl3BA,SAASosK,GAAkBprK,EAAMktG,GAC/B,OAAO+B,QAAgB/5G,EAAWg6K,GAAmBlvK,EAAMktG,EAAax+G,KAC1E,CAOA,MAAM4gL,GAAqB9gE,GAAgB6zD,GAAgB,CACzDnuD,KAAQ3G,IAsYV,SAAkBvtG,EAAMktG,GACtB,MAAMqiE,EAAatgE,GAAgB,CAAA,EAAIugE,GAAcxvK,EAAMktG,GAC3D,GAAIqiE,EACF,OAAOA,EAET,OAAO,IACT,IA3YE92I,MAAS80E,GAAyBqhE,IAClC7mJ,QAAWwlF,GAAyBwzD,IACpC0O,QAAWliE,IA/Db,SAAkBvtG,GAChB,MAAM0vK,EAAS1vK,EAAK2lK,aAAa,UAC3BgK,EAAS3vK,EAAK2lK,aAAa,UAEjC,IAAItyF,EAcJ,OAXIA,EAFW,gBAAXq8F,EACa,gBAAXC,EACO,cAEA,WAGI,gBAAXA,EACO,eAEA,YAGN,CACL7pK,EAAGyzB,WAAWv5B,EAAK2lK,aAAa,MAChC+J,OAAQtF,GAAsBsF,GAC9B3pK,EAAGwzB,WAAWv5B,EAAK2lK,aAAa,MAChCgK,OAAQvF,GAAsBuF,GAC9Bt8F,OAAQA,EAEZ,IAuCEjtE,MAASmnG,GAAyB0hE,MA+IpC,MAAMW,GAAsBphE,GAAgB6zD,GAAgB,CAC1D5pI,MAAS80E,GAAyBqhE,IAClCxoK,MAASmnG,GAAyB0hE,MA8BpC,MAAMY,GAAqBrhE,GAAgB6zD,GAAgB,CACzD5pI,MAAS80E,GAAyBqhE,IAClC1wK,MAASqvG,GAAyBwzD,MAgCpC,MAAM+O,GAAqBthE,GAAgB6zD,GAAgB,CACzD5pI,MAAS80E,GAAyBqhE,IAClC/rG,KAAQ0qC,GAAyBozD,IACjCoP,QAAWxiE,GAAyBozD,MAmCtC,MAAMqP,GAA2BxhE,GAAgB6zD,GAAgB,CAC/Dr6J,YAAeolG,GAAa0hE,MAQ9B,SAASmB,GAAmBjwK,EAAMktG,GAChC,OAAO+B,GAAgB,KAAM+gE,GAA0BhwK,EAAMktG,EAC/D,CA8BA,MAAM2+D,GAAiCr9D,GAAgB27D,GAAmB,CACxE2B,MAAS3+D,GAAgB4+D,MA0B3B,MAAMmE,GAAmB1hE,GACvB6zD,GACA,CACE8N,KA2uBJ,SAAoBnwK,EAAMktG,GACxB,MAGMkjE,EADHljE,EAAYA,EAAYr9G,OAAS,GACRugL,MACtB73I,EAAI4zE,GAAkBnsG,GAAM,GAC5BmwK,EAAO5jJ,KAAKmN,MAAMnB,GACxB63I,EAAM/7K,KAAK2oB,MAAMmzJ,GAAQ,EAAIA,EAC/B,GAjvBE3hE,GAAgB27D,GAAmB,CACjC9uJ,MAzDJ,SAAuBrb,EAAMktG,GAC3B,MAGMllG,EADHklG,EAAYA,EAAYr9G,OAAS,GACFmY,YAC5BuwB,EAAI4zE,GAAkBnsG,GAAM,GAG5B0O,EADJ,8HACWyqB,KAAKZ,GAClB,GAAI7pB,EAAG,CACL,MAAM5I,EAAIyzB,WAAW7qB,EAAE,IACjB3I,EAAIwzB,WAAW7qB,EAAE,IACjBqf,EAAIwL,WAAW7qB,EAAE,IACvB1G,EAAY3T,KAAK,CAACyR,EAAGC,EAAGgoB,GAC5B,MACI/lB,EAAY3T,KAAK,GAErB,KAiDA,SAAS03K,GAAY/rK,EAAMktG,GACzB,MAAMmjE,EAAgBphE,GACU,CAC5BjnG,YAAa,GACbooK,MAAO,IAETF,GACAlwK,EACAktG,GAEF,IAAKmjE,EACH,OAEF,MAAM9mK,EAAkB,GAClBvB,EAAcqoK,EAAcroK,YAC5BooK,EAAQC,EAAcD,MAC5B,IACE,IAAI9/K,EAAI,EAAGuE,EAAK6F,KAAKwP,IAAIlC,EAAYnY,OAAQugL,EAAMvgL,QACnDS,EAAIuE,IACFvE,EAE2B,GAAzB0X,EAAY1X,GAAGT,QACjB0Z,EAAgBlV,KACd2T,EAAY1X,GAAG,GACf0X,EAAY1X,GAAG,GACf0X,EAAY1X,GAAG,GACf8/K,EAAM9/K,IAIZ,OAAO,IAAIm4E,GAAWl/D,EAAiB,OACzC,CAOA,MAAMimK,GAAehhE,GACnB6zD,GACA,CACEzkG,KAAQ2vC,GAAyB2+D,KAEnC19D,GAAgB27D,GAAmB,CACjCrkK,EAAKynG,GAAyBwzD,IAC9Bh7J,EAAKwnG,GAAyBwzD,IAC9Bt6H,EAAK8mE,GAAyBwzD,IAC9BhyI,EAAKw+E,GAAyBwzD,OAsBlC,MAAMuP,GAAoC9hE,GAAgB6zD,GAAgB,CACxEr6J,YAAeolG,GAAa0hE,MAQ9B,SAASyB,GAA4BvwK,EAAMktG,GACzC,OAAO+B,GACL,KACAqhE,GACAtwK,EACAktG,EAEJ,CAOA,MAAMsjE,GAAoChiE,GAAgB6zD,GAAgB,CACxEoO,QAAWljE,GAAyBozD,IACpC+P,WAAcnjE,GAAyBozD,IACvC+I,aAAgBn8D,GAAyB4zD,MAQ3C,SAAS0J,GAAe7qK,EAAMktG,GAC5B,MAAM3pG,EAAa0rG,GACjB,CAAE,EACFuhE,GACAxwK,EACAktG,GAEI3jG,EAAkBgnK,GAA4BvwK,EAAMktG,GAC1D,GAAI3jG,EAAiB,CACnB,MAAMm9E,EAAa,IAAIje,GAAWl/D,EAAiB,OAEnD,OADAm9E,EAAW9uF,cAAc2L,GAAY,GAC9BmjF,CACR,CAEH,CAOA,SAASokF,GAAe9qK,EAAMktG,GAC5B,MAAM3pG,EAAa0rG,GACjB,CAAE,EACFuhE,GACAxwK,EACAktG,GAEI3jG,EAAkBgnK,GAA4BvwK,EAAMktG,GAC1D,GAAI3jG,EAAiB,CACnB,MAAMyb,EAAU,IAAIP,GAAQlb,EAAiB,MAAO,CAClDA,EAAgB1Z,SAGlB,OADAm1B,EAAQptB,cAAc2L,GAAY,GAC3ByhB,CACR,CAEH,CAOA,MAAM2rJ,GAAyBniE,GAAgB6zD,GAAgB,CAC7D55F,WAAc0kC,GAAgB09D,IAC9BnpJ,WAAcyrF,GAAgB29D,IAC9BH,cAAiBx9D,GAAgBy9D,IACjC5oJ,MAASmrF,GAAgB49D,IACzBtmJ,QAAW0oF,GAAgB69D,MAQ7B,SAASJ,GAAkB5qK,EAAMktG,GAC/B,MAAM9pC,EAAa6rC,GACjB,GACA0hE,GACA3wK,EACAktG,GAEF,IAAK9pC,EACH,OAAO,KAET,GAA0B,IAAtBA,EAAWvzE,OACb,OAAO,IAAIk5E,GAAmB3F,GAEhC,IAAIwtG,EACAC,GAAc,EAClB,MAAMpiL,EAAO20E,EAAW,GAAGlmD,UAC3B,IAAI7Z,EACJ,IAAK,IAAI/S,EAAI,EAAGuE,EAAKuuE,EAAWvzE,OAAQS,EAAIuE,IAAMvE,EAEhD,GADA+S,EAAW+/D,EAAW9yE,GAClB+S,EAAS6Z,WAAazuB,EAAM,CAC9BoiL,GAAc,EACd,KACD,CAEH,GAAIA,EAAa,CACf,IAAIlzJ,EACApU,EACJ,GAAY,SAAR9a,EAAiB,CACnB,MAAM2iB,EAAQgyD,EAAW,GACzBzlD,EAASvM,EAAMkN,YACf/U,EAAkB6H,EAAM2M,qBACxB,IAAK,IAAIztB,EAAI,EAAGuE,EAAKuuE,EAAWvzE,OAAQS,EAAIuE,IAAMvE,EAChD+S,EAAW+/D,EAAW9yE,GACtBM,EAAO2Y,EAAiBlG,EAAS0a,sBAEnC6yJ,EAAgB,IAAIhoG,GAAWr/D,EAAiBoU,GAChDmzJ,GAA4BF,EAAextG,EACjD,MAAW,GAAY,cAAR30E,EACTmiL,EAAgB,IAAI/nG,GAAgBzF,GACpC0tG,GAA4BF,EAAextG,QACtC,GAAY,WAAR30E,EACTmiL,EAAgB,IAAI9nG,GAAa1F,GACjC0tG,GAA4BF,EAAextG,OACtC,IAAY,sBAAR30E,EAGT,MAAM,IAAIwI,MAAM,+BAFhB25K,EAAgB,IAAI7nG,GAAmB3F,EAGxC,CACL,MACIwtG,EAAgB,IAAI7nG,GAAmB3F,GAEzC,OAAA,CACF,CAOA,SAAS2nG,GAAU/qK,EAAMktG,GACvB,MAAM3pG,EAAa0rG,GACjB,CAAE,EACFuhE,GACAxwK,EACAktG,GAEI3jG,EAAkBgnK,GAA4BvwK,EAAMktG,GAC1D,GAAI3jG,EAAiB,CACnB,MAAM6H,EAAQ,IAAI4Q,GAAMzY,EAAiB,OAEzC,OADA6H,EAAMxZ,cAAc2L,GAAY,GACzB6N,CACR,CAEH,CAOA,MAAM2/J,GAA4BviE,GAAgB6zD,GAAgB,CAChE2O,gBAsbF,SAA+BhxK,EAAMktG,GACnC,MAAM+jE,EAA+BhiE,GACvC,GACIiiE,GACAlxK,EACAktG,GAEF,GAAI+jE,EAA6BphL,OAAS,EAAG,CAGxCq9G,EAAYA,EAAYr9G,OAAS,GACpBwE,QAAQ48K,EACzB,CACH,EAlcEE,gBAidF,SAA+BnxK,EAAMktG,GAEnC,MAAMkkE,EAAiBniE,QACrB/5G,EACAm8K,GACArxK,EACAktG,GAEF,GAAIkkE,EAAgB,CAGflkE,EAAYA,EAAYr9G,OAAS,GACpB,GAAKuhL,CACtB,CACH,IAvdA,SAASpG,GAAYhrK,EAAMktG,GACzB,MAAM3pG,EAAa0rG,GACrB,CAAuC,EACnCuhE,GACAxwK,EACAktG,GAEIokE,EAAkBriE,GACtB,CAAC,MACD8hE,GACA/wK,EACAktG,GAEF,GAAIokE,GAAmBA,EAAgB,GAAI,CACzC,MAAM/nK,EAAkB+nK,EAAgB,GAClClyJ,EAAO,CAAC7V,EAAgB1Z,QAC9B,IAAK,IAAIS,EAAI,EAAGuE,EAAKy8K,EAAgBzhL,OAAQS,EAAIuE,IAAMvE,EACrDM,EAAO2Y,EAAiB+nK,EAAgBhhL,IACxC8uB,EAAK/qB,KAAKkV,EAAgB1Z,QAE5B,MAAMm1B,EAAU,IAAIP,GAAQlb,EAAiB,MAAO6V,GAEpD,OADA4F,EAAQptB,cAAc2L,GAAY,GAC3ByhB,CACR,CAEH,CAOA,MAAMusJ,GAAgB/iE,GAAgB6zD,GAAgB,CACpDmP,UA7lBF,SAAyBxxK,EAAMktG,GAO7B,MAAM55G,EAAS27G,GAAgB,CAAA,EAAIqgE,GAAoBtvK,EAAMktG,GAC7D,IAAK55G,EACH,OAEF,MAAMm+K,EACJvkE,EAAYA,EAAYr9G,OAAS,GAE7B6hL,EAAa,SAAUp+K,EAASA,EAAa,KAAI,GACjDq+K,IAAa,SAAUr+K,IAAW8B,OAAOC,KAAKq8K,GAAY7hL,OAAS,EACzE,IAAIw5B,EACJ,MAAMu0C,EAAwC8zG,EAAkB,KAMhE,IAAI91J,EAAQ24F,EAAcE,EALtB72C,EACFv0C,EAAMu0C,EACG+zG,IACTtoJ,EAAMykJ,IAIR,IAAIz5D,EAAe,cACnB,MAAMo7D,EAAyCn8K,EAAiB,QAuBhE,IAAIkW,EAtBAimK,GACF7zJ,EAAS,CAAC6zJ,EAAQ3pK,EAAG2pK,EAAQ1pK,GAC7BwuG,EAAek7D,EAAQC,OACvBj7D,EAAeg7D,EAAQE,OACvBt7D,EAAeo7D,EAAQp8F,QACd,8CAA8Cv2E,KAAKusB,KAExDA,EAAIj1B,SAAS,YACfwnB,EAAS8xJ,GACTn5D,EAAeo5D,GACfl5D,EAAem5D,IACNvkJ,EAAIj1B,SAAS,kBACtBwnB,EAAS,CAAC,GAAI,IACd24F,EAAeo5D,GACfl5D,EAAem5D,IACNvkJ,EAAIj1B,SAAS,YACtBwnB,EAAS,CAAC,GAAI,GACd24F,EAAeo5D,GACfl5D,EAAem5D,KAKnB,MAAM9nK,EAAqC4rK,EAAe,EACpD3rK,EAAqC2rK,EAAe,EAK1D,IAAIvvK,OAJMjN,IAAN4Q,QAAyB5Q,IAAN6Q,IACrByD,EAAS,CAAC1D,EAAGC,IAIf,MAAM0gC,EAAqCirI,EAAe,EACpD3iJ,EAAqC2iJ,EAAe,EAK1D,IAAIrmK,OAJMnW,IAANuxC,QAAyBvxC,IAAN65B,IACrB5sB,EAAO,CAACskC,EAAG1X,IAIb,MAAMhH,EAAiCz0B,EAAiB,aACxC4B,IAAZ6yB,IACF1c,EAAW8H,GAAU4U,IAGvB,MAAM3hB,EAAyC9S,EAAe,MAExDmlC,EAAgDnlC,EAAe,MAErE,GAAIq+K,EAAU,CACRtoJ,GAAOykJ,KACT3rK,EAAO0rK,IAGT,MAAMvuG,EAAa,IAAI40C,GAAK,CAC1Bt4F,OAAQA,EACRy4F,aAAcA,EACdE,aAAcA,EACdE,aAAcA,EACd5pF,YAAan8B,KAAKq8B,aAClBvhB,OAAQA,EACRsrG,aAAc,cACdzpG,SAAUA,EACVjF,MAAOA,EACPjE,KAAMA,EACNknB,IAAK36B,KAAKkjL,iBAAiBvoJ,GAC3BoP,MAAOA,IAGHytC,EAAa5G,EAAW6G,gBAAgB,GACxCR,EAAYrG,EAAWl9D,UAC7B,GAAkB,OAAdujE,EAAoB,CACtB,MAAM+D,EAAapK,EAAW2I,gBAC9B,GAAIyB,IAAe9gD,IAAmB8gD,IAAe9gD,GAAoB,CACvE,MAAM30B,EAAW,WACf,MAAMy1E,EAAapK,EAAW2I,gBAC9B,GAEIyB,IAAe9gD,IACf8gD,IAAe9gD,GAEjB,CACA,MAAM+8C,EAAYrG,EAAWl9D,UAC7B,GAAIujE,GAAiC,GAApBA,EAAU91E,OAAa,CACtC,MAAMgiL,EAAcvD,GAAa3oG,GACjCrG,EAAWoxC,SAASxqC,EAAa2rG,EAClC,CACDvyG,EAAWqK,oBAAoB11E,EAChC,CACX,EACQqrE,EAAWsK,kBAAkB31E,GACzBy1E,IAAe9gD,IACjB02C,EAAWvjE,MAEd,CACP,MAAW,GAAwB,GAApB4pE,EAAU91E,OAAa,CAChC,MAAMgiL,EAAcvD,GAAa3oG,GACjCrG,EAAWoxC,SAASxqC,EAAa2rG,EAClC,CACDJ,EAAwB,WAAInyG,CAChC,MAEImyG,EAAwB,WAAIzD,EAEhC,EA8dE8D,WA9cF,SAA0B9xK,EAAMktG,GAE9B,MAAM55G,EAAS27G,GAAgB,CAAA,EAAI2gE,GAAqB5vK,EAAMktG,GAC9D,IAAK55G,EACH,OAEF,MAAMm+K,EAAcvkE,EAAYA,EAAYr9G,OAAS,GAC/C4vE,EAAY,IAAIo3C,GAAK,CACzBh0C,KAAM,IAAIkwC,GAAK,CACbt6E,MAEG,UAAWnlC,EAASA,EAAc,MAAIm6K,KAE3CrnK,MAAwC9S,EAAe,QAEzDm+K,EAAuB,UAAIhyG,CAC7B,EA+bEsyG,UA/aF,SAAyB/xK,EAAMktG,GAM7B,MAAM55G,EAAS27G,GAAgB,CAAA,EAAI4gE,GAAoB7vK,EAAMktG,GAC7D,IAAK55G,EACH,OAEF,MAAMm+K,EAAcvkE,EAAYA,EAAYr9G,OAAS,GAC/CuvE,EAAc,IAAI+1C,GAAO,CAC7B18E,MAEG,UAAWnlC,EAASA,EAAc,MAAIm6K,GACzCvvK,MAA8B,UAAW5K,EAASA,EAAc,MAAI,IAEtEm+K,EAAyB,YAAIryG,CAC/B,EA8ZE4yG,UA7YF,SAAyBhyK,EAAMktG,GAE7B,MAAM55G,EAAS27G,GAAgB,CAAA,EAAI6gE,GAAoB9vK,EAAMktG,GAC7D,IAAK55G,EACH,OAEF,MAAMm+K,EAAcvkE,EAAYA,EAAYr9G,OAAS,GAC/Cy7B,EAAY,IAAIynF,GAAK,CACzBt6E,MAEG,UAAWnlC,EAASA,EAAc,MAAIm6K,KAE3CgE,EAAuB,UAAInmJ,EAC3B,MAAMu3C,EAAyCvvE,EAAc,UAChD4B,IAAT2tE,IACF4uG,EAAkB,KAAI5uG,GAExB,MAAMktG,EAA4Cz8K,EAAiB,aACnD4B,IAAZ66K,IACF0B,EAAqB,QAAI1B,EAE7B,IAiYA,SAAS9E,GAAUjrK,EAAMktG,GACvB,MAAMukE,EAAcxiE,GAClB,CAAE,EACFsiE,GACAvxK,EACAktG,EACAx+G,MAEF,IAAK+iL,EACH,OAAO,KAET,IAAInmJ,EAGA,cAAemmJ,EAAcA,EAAuB,UAAI1D,GAE5D,MAAMlrG,EAAyC4uG,EAAmB,KAIlE,IAAInyG,OAHSpqE,IAAT2tE,GAAuBA,IACzBv3C,EAAY,MAGV,eAAgBmmJ,EACdA,EAAwB,YAAKzD,KAC/B1uG,EACEmyG,EACR,YAGInyG,EAAa2uG,GAEf,MAAMxuG,EAGF,cAAegyG,EAAcA,EAAuB,UAAItD,GAEtD/uG,EAGF,gBAAiBqyG,EACbA,EAAyB,YACzB9xC,GAEFowC,EAA4C0B,EAAsB,QACxE,YAAgBv8K,IAAZ66K,GAA0BA,EA6DvB,CACL,IAAI/5D,GAAM,CACRnzC,KAAMv3C,EACN/pB,MAAO+9D,EACPwD,OAAQ1D,EACRhuB,KAAMquB,EACNjkC,YAAQtmC,KA/DH,CACL,IAAI8gH,GAAM,CACR3yG,SAAU,SAAU8qC,GAClB,MAAM9qC,EAAW8qC,EAAQxqC,cACnBlV,EAAO4U,EAAS6Z,UACtB,GAAa,uBAATzuB,EAA+B,CAKjC,OAAO,IAAIs6E,GAHvB,EAKiBuc,8BACAp/C,QAAO,SAAU7iC,GAChB,MAAM5U,EAAO4U,EAAS6Z,UACtB,MAAgB,YAATzuB,GAA+B,iBAATA,CAC/C,IAEW,CACD,GAAa,YAATA,GAA+B,iBAATA,EACxB,OAAO4U,CAEV,EACDw/D,KAAMv3C,EACN/pB,MAAO+9D,EACPwD,OAAQ1D,EACRhuB,KAAMquB,EACNjkC,YAAQtmC,IAEV,IAAI8gH,GAAM,CACR3yG,SAAU,SAAU8qC,GAClB,MAAM9qC,EAAW8qC,EAAQxqC,cACnBlV,EAAO4U,EAAS6Z,UACtB,GAAa,uBAATzuB,EAA+B,CAKjC,OAAO,IAAIs6E,GAHvB,EAKiBuc,8BACAp/C,QAAO,SAAU7iC,GAChB,MAAM5U,EAAO4U,EAAS6Z,UACtB,MAAgB,YAATzuB,GAA+B,iBAATA,CAC/C,IAEW,CACD,GAAa,YAATA,GAA+B,iBAATA,EACxB,OAAO4U,CAEV,EACDw/D,KAAMv3C,EACNw3C,OAAQ,KACRtnC,YAAQtmC,IAahB,CAQA,SAAS47K,GAA4BF,EAAextG,GAClD,MAAMvuE,EAAKuuE,EAAWvzE,OAChBoiL,EAAW,IAAIlhL,MAAMqyE,EAAWvzE,QAChCqiL,EAAc,IAAInhL,MAAMqyE,EAAWvzE,QACnCsiL,EAAgB,IAAIphL,MAAMqyE,EAAWvzE,QAC3C,IAAIuiL,EAAYC,EAAeC,EAC/BF,GAAa,EACbC,GAAgB,EAChBC,GAAkB,EAClB,IAAK,IAAIhiL,EAAI,EAAGA,EAAIuE,IAAMvE,EAAG,CAC3B,MAAM+S,EAAW+/D,EAAW9yE,GAC5B2hL,EAAS3hL,GAAK+S,EAASxL,IAAI,WAC3Bq6K,EAAY5hL,GAAK+S,EAASxL,IAAI,cAC9Bs6K,EAAc7hL,GAAK+S,EAASxL,IAAI,gBAChCu6K,EAAaA,QAA8Bl9K,IAAhB+8K,EAAS3hL,GACpC+hL,EAAgBA,QAAoCn9K,IAAnBg9K,EAAY5hL,GAC7CgiL,EAAkBA,GAAmBH,EAAc7hL,EACpD,CACG8hL,GACFxB,EAAcp4K,IAAI,UAAWy5K,GAE3BI,GACFzB,EAAcp4K,IAAI,aAAc05K,GAE9BI,GACF1B,EAAcp4K,IAAI,eAAgB25K,EAEtC,CAOA,MAAMI,GAAe/jE,GAAgB6zD,GAAgB,CACnDmQ,YAAejlE,GAAyB4zD,IACxCpuK,MAASw6G,GAAyB4zD,MAkCpC,MAAMsR,GAAwBjkE,GAAgB6zD,GAAgB,CAC5DqQ,KA5BF,SAAoB1yK,EAAMktG,GACxB,MAAM/oG,EAAOnE,EAAK2lK,aAAa,QAC/B/2D,GAAU2jE,GAAcvyK,EAAMktG,GAC9B,MAAMs7D,EACJt7D,EAAYA,EAAYr9G,OAAS,GAE/BsU,GAAQqkK,EAAcgK,YACxBhK,EAAcrkK,GAAQ,CACpBpR,MAAOy1K,EAAcz1K,MACrBy/K,YAAahK,EAAcgK,YAC3BnrK,SAAU,WACR,OAAOmhK,EAAcz1K,KACtB,GAEe,OAAToR,EACTqkK,EAAcrkK,GAAQqkK,EAAcz1K,MACG,OAA9By1K,EAAcgK,cACvBhK,EAAcA,EAAcgK,aAAehK,EAAcz1K,cAEpDy1K,EAAqB,KAC9B,EASEmK,WAqFF,SAA0B3yK,EAAMktG,GAC9B0B,GAAUgkE,GAAqB5yK,EAAMktG,EACvC,IAhFA,SAASs9D,GAAmBxqK,EAAMktG,GAChC0B,GAAU6jE,GAAuBzyK,EAAMktG,EACzC,CAMA,SAASw9D,GAAa1qK,EAAMktG,GAC1B0B,GAAU+9D,GAAgB3sK,EAAMktG,EAClC,CAOA,MAAMmiE,GAAe7gE,GAAgB6zD,GAAgB,CACnDrsD,MAASzI,GAAyB09D,IAClCh1K,IAAOs3G,GAAyB4zD,IAChCsK,SAAYl+D,GAAyBm+D,MAkDvC,MAAMkH,GAAsBpkE,GAAgB6zD,GAAgB,CAC1DwQ,WAeF,SAA0B7yK,EAAMktG,GAC9B,MAAM/oG,EAAOnE,EAAK2lK,aAAa,QAC/B,GAAa,OAATxhK,EAAe,CACjB,MAAMtT,EAAOswK,GAAWnhK,GAEtBktG,EAAYA,EAAYr9G,OAAS,GAErBsU,GAAQtT,CACvB,CACH,IAOA,MAAMg8K,GAA0Br+D,GAAgB6zD,GAAgB,CAC9DqH,aAAgBn8D,GAAyB4zD,IACzC2R,YAAevlE,GAAyBwzD,IACxCgS,YAAexlE,GAAyBwzD,IACxCiS,MAASzlE,GAAyBwzD,IAClCkS,MAAS1lE,GAAyBwzD,IAClCmS,KAAQ3lE,GAAyBwzD,IACjCoS,KAAQ5lE,GAAyBwzD,MAqCnC,MAAMiM,GAAcx+D,GAAgB6zD,GAAgB,CAClD+Q,aAAgB7lE,GAAyBwzD,IACzCsS,aAAgB9lE,GAAyBwzD,IACzCuS,cAAiB/lE,GAAyBwzD,IAC1CwS,cAAiBhmE,GAAyBwzD,MAwB5C,MAAMmQ,GAA4B1iE,GAAgB6zD,GAAgB,CAGhE3gJ,WAAcyrF,GAAgB8iE,MA2BhC,MAAMoB,GAA4B7iE,GAAgB6zD,GAAgB,CAChE3gJ,WAAc0rF,GAAa6iE,MAiD7B,SAASuD,GAAmBxzK,EAAMy4B,GAChC,MAAMD,EAAO4B,GAAQ3B,GAGfg7I,EAAO,CAAW,KAFO,GAAfj7I,EAAK3oC,OAAc2oC,EAAK,GAAK,GAEhBA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACpD,IAAK,IAAIloC,EAAI,EAAGA,EAAI,IAAKA,EAAG,CAC1B,MAAMojL,EAAMh5K,KAAKuT,MAA6BwlK,EAAKnjL,IAAK+W,SAAS,IACjEosK,EAAKnjL,GAAmB,GAAdojL,EAAI7jL,OAAc,IAAM6jL,EAAMA,CACzC,CACDpS,GAAoBthK,EAAMyzK,EAAKlsK,KAAK,IACtC,CA4CA,MAAMosK,GAAgCnlE,GAAgB6zD,GAAgB,CACpEqQ,KAAQllE,IAUV,SAAuBxtG,EAAM4zK,EAAM1mE,GACjCltG,EAAK2/C,aAAa,OAAQi0H,EAAKzvK,MAC/B,MAAuDvF,EAAU,CAACoB,KAAMA,GAClEjN,EAAQ6gL,EAAK7gL,MAEC,iBAATA,GACK,OAAVA,GAAkBA,EAAMy/K,aAC1BtjE,GACEtwG,EACA+0K,GACAvlE,GACA,CAACr7G,EAAMy/K,aACPtlE,EACA,CAAC,gBAIS,OAAVn6G,GAAkBA,EAAMA,OAC1Bm8G,GACEtwG,EACA+0K,GACAvlE,GACA,CAACr7G,EAAMA,OACPm6G,EACA,CAAC,WAILgC,GACEtwG,EACA+0K,GACAvlE,GACA,CAACr7G,GACDm6G,EACA,CAAC,SAGP,IA9CEn6G,MAASy6G,IA4DX,SAA4BxtG,EAAMjN,GAChCuuK,GAAoBthK,EAAMjN,EAC5B,IA7DEy/K,YAAehlE,IAmDjB,SAA2BxtG,EAAMmE,GAC/Bo9J,GAAkBvhK,EAAMmE,EAC1B,MAeA,MAAMkpK,GAAuB7+D,GAAgB6zD,GAAgB,CAC3DkL,UAAa//D,GAAkBggE,MAU3BF,GAAwB,SAAUv6K,EAAOm6G,EAAaiB,GAE1D,OAAOpC,GADYmB,EAAYA,EAAYr9G,OAAS,GAAGmQ,KACrBgsG,aAAc,YAClD,EA0BA,MAAM6nE,GAAoB/lE,GAAsB,QA6BhD,MAAMgmE,GAAgBtlE,GACpB6zD,GACA,CAAC,QACD7zD,GAAgB27D,GAAmB,CAAC,IAAK,IAAK,IAAK,OAQ/C4J,GAAmBvlE,GACvB6zD,GACA,CACEzkG,KAAQ4vC,GAAkB8zD,KAE5B9yD,GAAgB27D,GAAmB,CACjCrkK,EAAK0nG,GAAkBy0D,IACvBl8J,EAAKynG,GAAkBy0D,IACvBx7H,EAAK+mE,GAAkBy0D,IACvBlzI,EAAKy+E,GAAkBy0D,OAWrB+R,GAAkB,SAAUjhL,EAAOm6G,EAAaiB,GACpD,OAAOpC,GAAgBo+D,GAAkB,GAAI,MAAQh8D,EACvD,EAqCA,MAAM8lE,GAAsBzlE,GAAgB6zD,GAAgB,CAC1D,QACA,UACA,OACA,QACA,YAQI6R,GAAyB1lE,GAAgB6zD,GAAgB,CAC7DnuD,KAAQ1G,IA5CV,SAAmBxtG,EAAM87H,EAAM5uB,GAC7B,MAAuDtuG,EAAU,CAACoB,KAAMA,GAClEH,EAAaqtG,EAAYA,EAAYr9G,OAAS,GAAGmQ,KACvD,IAAIsuG,EAAcwlE,GAAcj0K,EAAWmsG,cACvCt0G,EAAS22G,GAAaytB,EAAMxtB,GAChCY,GACEtwG,EACAm1K,GACA3lE,GACA12G,EACAw1G,EACAoB,GAEFA,EAAcwlE,GAAc3J,GAAkB,IAC9CzyK,EAAS22G,GAAaytB,EAAMxtB,GAC5BY,GACEtwG,EACAm1K,GACAC,GACAt8K,EACAw1G,EACAoB,EAEJ,IAsBE71E,MAAS+0E,GAAkBgmE,IAC3BzrJ,QAAWylF,GAAkBy0D,IAC7BwN,QAAWjiE,IA2vBb,SAAmBxtG,EAAMm0K,GACvBn0K,EAAK2/C,aAAa,IAAKroD,OAAO68K,EAAKruK,IACnC9F,EAAK2/C,aAAa,IAAKroD,OAAO68K,EAAKpuK,IACnC/F,EAAK2/C,aAAa,SAAUw0H,EAAKzE,QACjC1vK,EAAK2/C,aAAa,SAAUw0H,EAAKxE,OACnC,IA/vBEvpK,MAASonG,GAAkB4mE,MAmF7B,MAAMC,GAAuB7lE,GAAgB6zD,GAAgB,CAC3D,QACA,UAQIiS,GAA0B9lE,GAAgB6zD,GAAgB,CAC9D5pI,MAAS+0E,GAAkBgmE,IAC3BptK,MAASonG,GAAkB4mE,MAqC7B,MAAMG,GAAsB/lE,GAAgB6zD,GAAgB,CAAC,QAAS,UAOhEmS,GAAyBhmE,GAAgB6zD,GAAgB,CAC7D5pI,MAAS+0E,GAAkBgmE,IAC3Bt1K,MAASsvG,GAAkBy0D,MA+B7B,MAAMuD,GAA4B,CAChCxjJ,MAAS,QACTymD,WAAc,aACd/mD,WAAc,aACd+C,QAAW,UACXmkD,WAAc,gBACdC,gBAAmB,gBACnBC,aAAgB,gBAChBC,mBAAsB,iBAUlB0rG,GAAwB,SAAU1hL,EAAOm6G,EAAaiB,GAC1D,GAAIp7G,EAAO,CAET,OAAOg5G,GADYmB,EAAYA,EAAYr9G,OAAS,GAAGmQ,KAE1CgsG,aACXw5D,GACuD,EAAQtoJ,WAGlE,CACH,EAOMw3J,GAAqB5mE,GAAsB,SAO3C6mE,GAA2B7mE,GAAsB,cAOjD8mE,GAA2B9mE,GAAsB,cAOjD+mE,GAAuB/mE,GAAsB,WAO7CgnE,GAA6BtmE,GAAgB6zD,GAAgB,CACjE55F,WAAc+kC,GAAkBunE,IAChC/yJ,MAASwrF,GAAkBunE,IAC3BtwJ,QAAW+oF,GAAkBwnE,IAC7BjsG,mBAAsBykC,GAAkBynE,MAQ1C,SAASA,GAAmBj1K,EAAMqD,EAAU6pG,GAE1C,MAAMtuG,EAAU,CAACoB,KAAMA,GACjBvR,EAAO4U,EAAS6Z,UAEtB,IAEIg4J,EAFA9xG,EAAa,GAGjB,GAAa,uBAAT30E,EACgC,EAC/B62F,8BACA1rF,SAAQ,SAAUyJ,GACjB,MAAM5U,EAAO4U,EAAS6Z,UACtB,GAAa,eAATzuB,EACF20E,EAAaA,EAAWqhB,OACI,EAAW+C,kBAElC,GAAa,oBAAT/4F,EACT20E,EAAaA,EAAWqhB,OACS,EAAWyC,uBAEvC,GAAa,iBAATz4F,EACT20E,EAAaA,EAAWqhB,OACM,EAAW+D,mBAEpC,IACI,UAAT/5F,GACS,eAATA,GACS,YAATA,EAIA,MAAM,IAAIwI,MAAM,yBAFhBmsE,EAAW/uE,KAAKgP,EAGjB,CACT,IACI6xK,EAAUT,QACL,GAAa,eAAThmL,EACT20E,EAAuC,EAAWokB,YAClD0tF,EAAUR,QACL,GAAa,oBAATjmL,EACT20E,EAA4C,EAAW8jB,iBACvDguF,EAAUP,OACL,IAAa,iBAATlmL,EAIT,MAAM,IAAIwI,MAAM,yBAHhBmsE,EAAyC,EAAWolB,cACpD0sF,EAAUL,EAGX,CACD3lE,GACEtwG,EACAk2K,GACAI,EACA9xG,EACA8pC,EAEJ,CAOA,MAAMioE,GAA0B3mE,GAAgB6zD,GAAgB,CAC9D3gJ,WAAc8rF,GAAkBunE,MAQlC,SAASK,GAAgBp1K,EAAMshB,EAAY4rF,GAEzCgC,GADiE,CAAClvG,KAAMA,GAGtEm1K,GACAP,GACA,CAACtzJ,GACD4rF,EAEJ,CAOA,MAAMmoE,GAAwB7mE,GAAgB6zD,GAAgB,CAC5DkI,aAAgB/8D,IA7blB,SAA2BxtG,EAAMs1K,EAAgBpoE,GAC/C,MAAuDtuG,EAAU,CAACoB,KAAMA,GAClEi5B,EAAQq8I,EAAer8I,MACvBvhC,EAAS49K,EAAe59K,OACxB7H,EAASopC,EAAMppC,OAErB,IAAK,IAAIS,EAAI,EAAGA,EAAIT,EAAQS,IAC1B4+G,GACEtwG,EACA+0K,GACAE,GACA,CAAC,CAAC1vK,KAAM80B,EAAM3oC,GAAIyC,MAAO2E,EAAOpH,KAChC48G,EAGN,IA+aEy9D,cAAiBn9D,GAAkBynE,IACnCxsG,WAAc+kC,GAAkBunE,IAChCrzJ,WAAc8rF,GAAkBunE,IAChC/yJ,MAASwrF,GAAkBunE,IAC3BtwJ,QAAW+oF,GAAkBwnE,IAC7Bh/D,MAASxI,IAuXX,SAAoBxtG,EAAMoE,EAAQ8oG,GAChC,MAAuDtuG,EAAU,CAACoB,KAAMA,GAClEuD,EAAa,CAAA,EACnB,GAAIa,EAAOmxK,YAAY1lL,OAAQ,CAC7B,MAAM4vE,EAAYr7D,EAAOmxK,YAAY,GAAGtyG,UACpCxD,IACFl8D,EAAuB,WAAIk8D,GAE7B,MAAMH,EAAal7D,EAAOmxK,YAAY,GAAGvrJ,WAEvCs1C,GACkD,mBAAzB,EAAmB,SAE5C/7D,EAAsB,UAAI+7D,EAE7B,CACD,GAAIl7D,EAAOoxK,WAAW3lL,OAAQ,CAC5B,MAAMuvE,EAAch7D,EAAOoxK,WAAW,GAAGxyG,YACrC5D,IACF77D,EAAsB,UAAI67D,EAE7B,CACD,GAAIh7D,EAAOqxK,WAAW5lL,OAAQ,CAC5B,MAAMuvE,EAAch7D,EAAOqxK,WAAW,GAAGzyG,YACrC5D,IAAgB77D,EAAsB,YACxCA,EAAsB,UAAI67D,GAE5B77D,EAAsB,UAAIa,EAAOqxK,WAAW,EAC7C,CACD,MAAM51K,EAAaqtG,EAAYA,EAAYr9G,OAAS,GAAGmQ,KACjDsuG,EAAconE,GAAe71K,EAAWmsG,cACxCt0G,EAAS22G,GAAa9qG,EAAY+qG,GACxCY,GACEtwG,EACA+2K,GACAvnE,GACA12G,EACAw1G,EACAoB,EAEJ,IA9ZEg9D,QAAW99D,GAAkB8zD,IAC7BiK,YAAe/9D,GAAkB8zD,IACjCn9J,KAAQqpG,GAAkB8zD,IAC1B1lG,KAAQ4xC,GAAkB4zD,IAC1BoK,YAAeh+D,GAAkB8zD,IACjCmK,SAAYj+D,GAAkB8zD,IAC9BqK,WAAcn+D,GAAkB4zD,MAQ5BwU,GAAqBpnE,GAAgB6zD,GAAgB,CACzD,OACA,OACA,aACA,UACA,cACA,cACA,WACA,UAQIwT,GAA4B/nE,GAAsB,gBAUxD,SAAS0/D,GAAextK,EAAMmuC,EAAS++D,GACrC,MAAuDtuG,EAAU,CAACoB,KAAMA,GAGpEmuC,EAAQrqC,SACV9D,EAAK2/C,aAAa,KAA6BxR,EAAQrqC,SAIzD,MAAMP,EAAa4qC,EAAQn2C,gBAGrBkuC,EAAS,CACbolI,QAAW,EACXC,YAAe,EACfpnK,KAAQ,EACRy3D,KAAQ,EACR4vG,YAAe,EACfC,SAAY,EACZE,WAAc,GAEhBzlI,EAAOiI,EAAQzqC,mBAAqB,EACpC,MAAMrO,EAAOD,OAAOC,KAAKkO,GAAc,CAAA,GACpCuf,OACAojB,QAAO,SAAU3X,GAChB,OAAQ2X,EAAO3X,EACrB,IAEQq6D,EAAgBz6C,EAAQpqC,mBAC9B,GAAI6kF,EAAe,CAGjB,MAAMxkF,EAASwkF,EAAcz6C,EAAS,GACtC,GAAI/pC,EAAQ,CACV,MAAM0xK,EAAa/kL,MAAMC,QAAQoT,GAAUA,EAAS,CAACA,GACrD,IAAImxK,EAAcO,EAmBlB,GAlBI3nI,EAAQxqC,gBACV4xK,EAAcO,EAAW5vI,QAAO,SAAUlnC,GACxC,MAAMqE,EAAWrE,EAAMmkE,qBAANnkE,CAA4BmvC,GAC7C,GAAI9qC,EAAU,CACZ,MAAM5U,EAAO4U,EAAS6Z,UACtB,MAAa,uBAATzuB,EACuC,EACtC62F,8BACAp/C,QAAO,SAAU7iC,GAChB,MAAM5U,EAAO4U,EAAS6Z,UACtB,MAAgB,UAATzuB,GAA6B,eAATA,CAC5B,IAAEoB,OAES,UAATpB,GAA6B,eAATA,CAC5B,CACX,KAGUC,KAAKqnL,aAAc,CACrB,IAAIP,EAAaM,EACbL,EAAaK,EACb3nI,EAAQxqC,gBACV6xK,EAAaM,EAAW5vI,QAAO,SAAUlnC,GACvC,MAAMqE,EAAWrE,EAAMmkE,qBAANnkE,CAA4BmvC,GAC7C,GAAI9qC,EAAU,CACZ,MAAM5U,EAAO4U,EAAS6Z,UACtB,MAAa,uBAATzuB,EACuC,EACtC62F,8BACAp/C,QAAO,SAAU7iC,GAChB,MAAM5U,EAAO4U,EAAS6Z,UACtB,MAAgB,eAATzuB,GAAkC,oBAATA,CACjC,IAAEoB,OAES,eAATpB,GAAkC,oBAATA,CACjC,CACb,IACUgnL,EAAaK,EAAW5vI,QAAO,SAAUlnC,GACvC,MAAMqE,EAAWrE,EAAMmkE,qBAANnkE,CAA4BmvC,GAC7C,GAAI9qC,EAAU,CACZ,MAAM5U,EAAO4U,EAAS6Z,UACtB,MAAa,uBAATzuB,EACuC,EACtC62F,8BACAp/C,QAAO,SAAU7iC,GAChB,MAAM5U,EAAO4U,EAAS6Z,UACtB,MAAgB,YAATzuB,GAA+B,iBAATA,CAC9B,IAAEoB,OAES,YAATpB,GAA+B,iBAATA,CAC9B,CACb,KAEQ8U,EAAkB,MAAI,CACpBgyK,YAAaA,EACbC,WAAYA,EACZC,WAAYA,EAEf,CACD,GAAIF,EAAY1lL,aAAiCqF,IAAvBqO,EAAiB,KAAiB,CAC1D,MAAMk8D,EAAY81G,EAAY,GAAGtyG,UAC7BxD,IACFl8D,EAAiB,KAAIk8D,EAAUwD,UAElC,CACF,CACF,CACD,MAAMpjE,EAAaqtG,EAAYA,EAAYr9G,OAAS,GAAGmQ,KACjDsuG,EAAcsnE,GAAmB/1K,EAAWmsG,cAC5Ct0G,EAAS22G,GAAa9qG,EAAY+qG,GAUxC,GATAY,GACEtwG,EACAy2K,GACAjnE,GACA12G,EACAw1G,EACAoB,GAGEj5G,EAAKxF,OAAS,EAAG,CACnB,MAAM0+G,EAAWF,GAAa9qG,EAAYlO,GAE1C65G,GACEtwG,EACAy2K,GACAQ,GACA,CALqB,CAAC58I,MAAO5jC,EAAMqC,OAAQ62G,IAM3CrB,EAEH,CAGD,MAAM9zG,EACJ8zG,EAAY,GAEd,IAAI7pG,EAAW8qC,EAAQxqC,cACnBN,IACFA,EAAW87J,GAA6B97J,GAAU,EAAMjK,IAE1D81G,GACEtwG,EACAy2K,GACAZ,GACA,CAACpxK,GACD6pG,EAEJ,CAOA,MAAM8oE,GAA8BxnE,GAAgB6zD,GAAgB,CAClE,UACA,aACA,eACA,gBAQI4T,GAAiCznE,GAAgB6zD,GAAgB,CACrEoO,QAAWjjE,GAAkB4zD,IAC7BsP,WAAcljE,GAAkB4zD,IAChCsI,aAAgBl8D,GAAkB8zD,IAClCt5J,YAAewlG,IA5yBjB,SAAkCxtG,EAAMgI,EAAaklG,GACnD,MAAMtuG,EAAUsuG,EAAYA,EAAYr9G,OAAS,GAE3C8tB,EAAS/e,EAAgB,OACzB6K,EAAS7K,EAAgB,OAE/B,IAAI8S,EACJ,GAAc,MAAViM,GAA4B,OAAVA,EACpBjM,EAAY,MACP,IAAc,OAAViM,GAA6B,QAAVA,EAG5B,MAAM,IAAI1mB,MAAM,2BAFhBya,EAAY,CAGb,CAED,MAAM7c,EAAKmT,EAAYnY,OACvB,IAAIuhD,EAAO,GACX,GAAIv8C,EAAK,EAAG,CACVu8C,GAAQppC,EAAY,GACpB,IAAK,IAAItC,EAAI,EAAGA,EAAIgM,IAAahM,EAC/B0rC,GAAQ,IAAMppC,EAAYtC,GAE5B,IAAK,IAAIpV,EAAImZ,EAAQnZ,EAAIuE,EAAIvE,GAAKmZ,EAAQ,CACxC2nC,GAAQ,IAAMppC,EAAY1X,GAC1B,IAAK,IAAIoV,EAAI,EAAGA,EAAIgM,IAAahM,EAC/B0rC,GAAQ,IAAMppC,EAAY1X,EAAIoV,EAEjC,CACF,CACD47J,GAAoBthK,EAAMoxC,EAC5B,MAsxBA,SAAS2jI,GAAuB/0K,EAAMqD,EAAU6pG,GAC9C,MAAM3jG,EAAkBlG,EAAS0a,qBACsBnf,EAAU,CAACoB,KAAMA,GACxEpB,EAAgB,OAAIyE,EAASib,YAC7B1f,EAAgB,OAAIyE,EAAS2a,YAG7B,MAAMza,EAAaF,EAASrL,gBAC5BuL,EAAWyE,YAAcuB,EAEzB,MAAM1J,EAAaqtG,EAAYA,EAAYr9G,OAAS,GAAGmQ,KACjDsuG,EAAc0nE,GAA4Bn2K,EAAWmsG,cACrDt0G,EAAS22G,GAAa9qG,EAAY+qG,GACxCY,GACEtwG,EACAq3K,GACA7nE,GACA12G,EACAw1G,EACAoB,EAEJ,CAOA,MAAM4nE,GAAsB1nE,GAAgB6zD,GAAgB,CAC1D,QACA,OACA,YAQI8T,GAAsB3nE,GAAgB6zD,GAAgB,CAC1D8O,gBAAmB3jE,GAAkB4nE,IACrCpE,gBAAmBxjE,GAAkB4nE,MAQjCgB,GAA8BtoE,GAAsB,mBAOpDuoE,GAA8BvoE,GAAsB,mBAO1D,SAASknE,GAAah1K,EAAMglB,EAASkoF,GACnC,MAAM1rF,EAAcwD,EAAQS,iBACtB6wJ,EAAY90J,EAAYjjB,QACyBK,EAAU,CAACoB,KAAMA,GAExEkvG,GACEtwG,EACAu3K,GACAC,GACA50J,EACA0rF,GAGFgC,GACEtwG,EACAu3K,GACAE,GACA,CAACC,GACDppE,EAEJ,CAOA,MAAMqpE,GAAyB/nE,GAAgB6zD,GAAgB,CAC7D5pI,MAAS+0E,GAAkBgmE,IAC3B3wG,KAAQ2qC,GAAkB4zD,IAC1B2O,QAAWviE,GAAkB4zD,MAkC/B,SAASgT,GAAmBp0K,EAAMoG,GAEhC67J,GAAqBjiK,EAAMtF,KAAKgZ,MAAc,IAARtN,GAAe,IACvD,CAOA,MAAMsvK,GAAiBlnE,GAAgB6zD,GAAgB,CACrD,YACA,aACA,YACA,cAQIsT,GAAoBnnE,GAAgB6zD,GAAgB,CACxDmP,UAAahkE,IAzrBf,SAAwBxtG,EAAMhB,EAAOkuG,GACnC,MAAuDtuG,EAAU,CAACoB,KAAMA,GAC/BuD,EAAa,CAAA,EAChD8lB,EAAMrqB,EAAM40G,SACZzxG,EAAOnD,EAAMoD,UACb6yG,EAAgBj2G,EAAMuxG,eACtBimE,EAAiB,CACrB54G,KAAQv0C,GAGV,GAAIlnB,EAAM,CACRq0K,EAAkB,EAAIr0K,EAAK,GAC3Bq0K,EAAkB,EAAIr0K,EAAK,GAC3B,MAAMyZ,EAAS5c,EAAM8mE,YACfuN,EAASr0E,EAAMgnE,YAOrB,GALIqN,GAAU4hC,GAA+B,IAAd5hC,EAAO,IAAYA,EAAO,KAAOlxE,EAAK,KACnEq0K,EAAkB,EAAInjG,EAAO,GAC7BmjG,EAAkB,EAAIvhE,EAAc,IAAM5hC,EAAO,GAAKlxE,EAAK,KAGzDyZ,IAAWA,EAAO,KAAOzZ,EAAK,GAAK,GAAKyZ,EAAO,KAAOzZ,EAAK,GAAK,GAAI,CACtE,MAA0BstK,EAAU,CAChC3pK,EAAG8V,EAAO,GACV8zJ,OAAQ,SACR3pK,EAAG5D,EAAK,GAAKyZ,EAAO,GACpB+zJ,OAAQ,UAEZpsK,EAAoB,QAAIksK,CACzB,CACF,CAEDlsK,EAAiB,KAAIizK,EAErB,IAAIpwK,EAAQpH,EAAMmnE,gBAAgB,GAC9BR,EAAYxjE,EAIhB,GAHkB,OAAdwjE,IACFA,EAAYkoG,IAEU,GAApBloG,EAAU91E,OAAa,CAEzBuW,GADoBkoK,GAAa3oG,EAElC,CACa,IAAVv/D,IACF7C,EAAkB,MAAI6C,GAGxB,MAAMiF,EAAWrM,EAAMulC,cACN,IAAbl5B,IACF9H,EAAoB,QAAI8H,GAG1B,MAAMotB,EAAQz5B,EAAM8lE,WAChBrsC,IACFl1B,EAAkB,MAAIk1B,GAGxB,MAAM54B,EAAaqtG,EAAYA,EAAYr9G,OAAS,GAAGmQ,KACjDsuG,EAAc2lE,GAAoBp0K,EAAWmsG,cAC7Ct0G,EAAS22G,GAAa9qG,EAAY+qG,GACxCY,GACEtwG,EACAs1K,GACA9lE,GACA12G,EACAw1G,EACAoB,EAEJ,IAsnBEwjE,WAActkE,IA3lBhB,SAAyBxtG,EAAMhB,EAAOkuG,GACpC,MAAuDtuG,EAAU,CAACoB,KAAMA,GAClEuD,EAAa,CAAA,EACbs/D,EAAO7jE,EAAM+jE,UACfF,IACFt/D,EAAkB,MAAIs/D,EAAKiC,YAE7B,MAAM1+D,EAAQpH,EAAMoxG,WAChBhqG,GAAmB,IAAVA,IACX7C,EAAkB,MAAI6C,GAExB,MAAMvG,EAAaqtG,EAAYA,EAAYr9G,OAAS,GAAGmQ,KACjDsuG,EAAc+lE,GAAqBx0K,EAAWmsG,cAC9Ct0G,EAAS22G,GAAa9qG,EAAY+qG,GACxCY,GACEtwG,EACA01K,GACAlmE,GACA12G,EACAw1G,EACAoB,EAEJ,IAskBEyjE,UAAavkE,IA9iBf,SAAwBxtG,EAAMhB,EAAOkuG,GACnC,MAAuDtuG,EAAU,CAACoB,KAAMA,GAClEuD,EAAa,CACjBk1B,MAASz5B,EAAM8lE,WACf5mE,MAASy6B,OAAO35B,EAAM6L,aAAe,GAEjChL,EAAaqtG,EAAYA,EAAYr9G,OAAS,GAAGmQ,KACjDsuG,EAAcimE,GAAoB10K,EAAWmsG,cAC7Ct0G,EAAS22G,GAAa9qG,EAAY+qG,GACxCY,GACEtwG,EACA41K,GACApmE,GACA12G,EACAw1G,EACAoB,EAEJ,IA8hBE0jE,UAAaxkE,IApDf,SAAwBxtG,EAAMhB,EAAOkuG,GACnC,MAAuDtuG,EAAU,CAACoB,KAAMA,GAClE6iE,EAAO7jE,EAAM+jE,UACbD,EAAS9jE,EAAMgkE,YACfz/D,EAAa,CACjBk1B,MAASoqC,EAAOA,EAAKiC,gBAAa5vE,EAClC2tE,OAAQA,QAAO3tE,EACf66K,UAAWjtG,QAAS5tE,GAEhB2K,EAAaqtG,EAAYA,EAAYr9G,OAAS,GAAGmQ,KACjDsuG,EAAc4nE,GAAoBr2K,EAAWmsG,cAC7Ct0G,EAAS22G,GAAa9qG,EAAY+qG,GACxCY,GACEtwG,EACA23K,GACAnoE,GACA12G,EACAw1G,EACAoB,EAEJ,MA6FA,IAAAmoE,GAn8FA,cAAkBxQ,GAIhB,WAAAz3K,CAAY4K,GACVzF,QAEAyF,EAAUA,GAAoB,GAEzBi1K,KArHPZ,GAAgB,CAAC,IAAK,IAAK,IAAK,GAEhCM,GAAqB,IAAIh7D,GAAK,CAC5Bt6E,MAAOg1I,KAGTC,GAA6B,CAAC,GAAI,GAElCC,GAAqC,SAErCC,GAAqC,SAErCC,GAA2B,CAAC,GAAI,IAEhCC,GACE,+DAEFG,GAAsB,IAAI/5D,GAAK,CAC7Bt4F,OAAQ8xJ,GACRr5D,aAAc,cACdE,aAAco5D,GACdl5D,aAAcm5D,GACd/iJ,YAAa,YACbxf,SAAU,EACVjF,MAAOkoK,GAAaT,IACpB1rK,KAAM0rK,GACNxkJ,IAAKykJ,KAGPE,GAAyB,WAEzBruC,GAAuB,IAAIxqB,GAAO,CAChC18E,MAAOg1I,GACPvvK,MAAO,IAGTgwK,GAA4B,IAAI/4D,GAAO,CACrC18E,MAAO,CAAC,GAAI,GAAI,GAAI,GACpBv6B,MAAO,IAGTiwK,GAAqB,IAAIt3D,GAAK,CAC5B5kE,KAAM,sBACN4wB,KAAMkrG,GACNjrG,OAAQorG,GACR9nK,MAAO,KAGTg7I,GAAgB,IAAIprC,GAAM,CACxBnzC,KAAMkrG,GACNxsK,MAAO0sK,GACP78H,KAAM+8H,GACNrrG,OAAQ68D,GACRnkG,OAAQ,IAGV6yI,GAAsB,CAACjtB,KAoErB1yJ,KAAKguE,eAAiBt/C,GAAc,aAMpC1uB,KAAKgoL,cAAgBt9K,EAAQs1K,aACzBt1K,EAAQs1K,aACRL,GAMJ3/K,KAAKioL,oBACuBzhL,IAA1BkE,EAAQw9K,eAA8Bx9K,EAAQw9K,cAKhDloL,KAAKqnL,kBACqB7gL,IAAxBkE,EAAQy9K,aAA4Bz9K,EAAQy9K,YAM9CnoL,KAAKooL,cAAgB,GAMrBpoL,KAAKqoL,qBACwB7hL,IAA3BkE,EAAQ49K,gBAA+B59K,EAAQ49K,eAKjDtoL,KAAKq8B,kBACqB71B,IAAxBkE,EAAQyxB,YAA4BzxB,EAAQyxB,YAAc,YAK5Dn8B,KAAKkjL,iBAAmBx4K,EAAQ69K,gBAC5B79K,EAAQ69K,gBACR1I,GAEJ7/K,KAAKipG,oBAAsB,CAAC,uCAC7B,CAQD,qBAAAu/E,CAAsBl3K,EAAMktG,GAE1B,MASMv7C,EAAWs9C,GAAgB,GATfT,GAAgB6zD,GAAgB,CAChD+K,SAAYpgE,GAAkBt+G,KAAKwoL,sBAAuBxoL,MAC1DyoL,OAAUnqE,GAAkBt+G,KAAKwoL,sBAAuBxoL,MACxD6+K,UAAapgE,GAAgBz+G,KAAK0oL,eAAgB1oL,MAClDsnH,MAAStnH,KAAK2oL,iBAAiBzhL,KAAKlH,MACpCw8K,SAAYx8K,KAAK4oL,oBAAoB1hL,KAAKlH,QAIIsR,EAAMktG,EAAax+G,MACnE,GAAIijE,EACF,OAAOA,CAGV,CAQD,cAAAylH,CAAep3K,EAAMktG,GACnB,MAAM55G,EAAS27G,GACb,CAAC5rG,SAAY,MACbinK,GACAtqK,EACAktG,EACAx+G,MAEF,IAAK4E,EACH,OAEF,MAAM66C,EAAU,IAAItrC,GACd5G,EAAK+D,EAAK2lK,aAAa,MAClB,OAAP1pK,GACFkyC,EAAQjqC,MAAMjI,GAEhB,MAAM7C,EACJ8zG,EAAY,GAGR7pG,EAAW/P,EAAiB,SAOlC,GANI+P,GACF87J,GAA6B97J,GAAU,EAAOjK,GAEhD+0C,EAAQ7qC,YAAYD,UACb/P,EAAiB,SAEpB5E,KAAKioL,eAAgB,CACvB,MAEM/tF,EA0fZ,SACE5pF,EACAysK,EACAiD,EACAC,EACAqI,GAEA,OAAA,SAMY7oI,EAAS/iC,GACjB,IAAImsK,EAAWP,EACX7yK,EAAO,GACPqzK,EAAsB,GAC1B,GAAID,EAAU,CACZ,MAAMl0K,EAAW8qC,EAAQxqC,cACzB,GAAIN,EACF,GAAIA,aAAoB0lE,GACtByuG,EAAsBn0K,EACnBiiF,8BACAp/C,QAAO,SAAU7iC,GAChB,MAAM5U,EAAO4U,EAAS6Z,UACtB,MAAgB,UAATzuB,GAA6B,eAATA,CAC3C,IACY8oL,EAAWC,EAAoB3nL,OAAS,MACnC,CACL,MAAMpB,EAAO4U,EAAS6Z,UACtBq6J,EAAoB,UAAT9oL,GAA6B,eAATA,CAChC,CAEJ,CAEG8oL,IACFpzK,EAA8BgqC,EAAQt2C,IAAI,QAC1C0/K,EAAWA,KAAcpzK,EAErBozK,GAAY,UAAUz6K,KAAKqH,KACxBiqK,KACHA,GAAW5vK,SAASC,cAAc,aAEpC2vK,GAAS17H,UAAYvuC,EACrBA,EAAOiqK,GAASr7K,QAIpB,IAAI0kL,EAAe/I,EAMnB,GALI1vK,EACFy4K,EAAez4K,EACNysK,IACTgM,EAAejJ,GAAU/C,EAAUiD,EAAcC,IAE/C4I,EAAU,CACZ,MAAMG,EAxGd,SAAiCC,EAAYxzK,GAC3C,MAAMyzK,EAAa,CAAC,EAAG,GAEvB,IAAIjzG,EAAY,QAChB,MAAMrF,EAAaq4G,EAAW3tJ,WAC9B,GAAIs1C,EAAY,CACd,MAAMqG,EAAYrG,EAAWl9D,UAC7B,GAAIujE,GAAiC,GAApBA,EAAU91E,OAAa,CACtC,MAAMq2E,EAAa5G,EAAW6G,gBACxBvqD,EAAS0jD,EAAWwG,YAG1B8xG,EAAW,GAAK1xG,EAAW,IAAMP,EAAU,GAAK/pD,EAAO,IACvDg8J,EAAW,GAAK1xG,EAAW,IAAMP,EAAU,GAAK,EAAI/pD,EAAO,IAC3D+oD,EAAY,MACb,CACF,CACD,IAAIlF,EAAYk4G,EAAW10G,UACvBxD,GAGFA,EAAYA,EAAUj8D,QACtBi8D,EAAUg5C,QAAQh5C,EAAUsH,WAAaonG,GAAmBpnG,WAC5DtH,EAAUixC,SAASjxC,EAAU2wC,YAAc+9D,GAAmB/9D,YAC9D3wC,EAAU8xC,QAAQ9xC,EAAUsD,WAAaorG,GAAmBprG,WAC5DtD,EAAUkyC,UAAUlyC,EAAUuD,aAAekrG,KAE7CzuG,EAAY0uG,GAAmB3qK,QAEjCi8D,EAAU82C,QAAQpyG,GAClBs7D,EAAUk5C,WAAWi/D,EAAW,IAChCn4G,EAAUm5C,WAAWg/D,EAAW,IAChCn4G,EAAUs5C,aAAap0C,GAEvB,MAAM+yG,EAAY,IAAI1hE,GAAM,CAC1Bz0G,MAAO+9D,EACPluB,KAAMquB,IAER,OAAOi4G,CACT,CAiE0BG,CAAwBJ,EAAa,GAAItzK,GAC3D,GAAIqzK,EAAoB3nL,OAAS,EAAG,CAIlC6nL,EAAUp0K,YAAY,IAAIylE,GAAmByuG,IAQ7C,MAAO,CAACE,EAPU,IAAI1hE,GAAM,CAC1B3yG,SAAUo0K,EAAa,GAAG9zK,cAC1BpC,MAAO,KACPshE,KAAM40G,EAAa,GAAG10G,UACtBD,OAAQ20G,EAAa,GAAGz0G,YACxB5xB,KAAM,QAEsBqzC,OAAOgzF,EAAajlL,MAAM,GACzD,CACD,OAAOklL,CACR,CACD,OAAOD,CAET,CACJ,CArkB4BK,CAFRxkL,EAAc,MACXA,EAAiB,SAIhC5E,KAAKgoL,cACLhoL,KAAKooL,cACLpoL,KAAKqoL,iBAEP5oI,EAAQtqC,SAAS+kF,EAClB,CAOD,cANOt1F,EAAc,MAIrB66C,EAAQv2C,cAActE,GAAQ,GAEvB66C,CACR,CAOD,gBAAAkpI,CAAiBr3K,EAAMktG,GACrB,MAAMjxG,EAAK+D,EAAK2lK,aAAa,MAC7B,GAAW,OAAP1pK,EAAa,CACf,MAAM+C,EAAQisK,GAAUx4K,KAAK/D,KAAMsR,EAAMktG,GACzC,GAAIluG,EAAO,CACT,IAAI+4K,EACA/I,EAAUhvK,EAAKgvK,QAInB,GAHKA,GAAsB,eAAXA,IACdA,EAAUjxK,OAAO+qI,SAASlrE,MAExBoxG,EAAS,CAEX+I,EADY,IAAIp6G,IAAI,IAAM1hE,EAAI+yK,GACfpxG,IACzB,MACUm6G,EAAW,IAAM97K,EAEnBvN,KAAKooL,cAAciB,GAAY/4K,CAChC,CACF,CACF,CAOD,mBAAAs4K,CAAoBt3K,EAAMktG,GACxB,MAAMjxG,EAAK+D,EAAK2lK,aAAa,MAC7B,GAAW,OAAP1pK,EACF,OAEF,MAAMkvK,EAAgBC,GAAkB34K,KAAK/D,KAAMsR,EAAMktG,GACzD,IAAKi+D,EACH,OAEF,IAAI4M,EACA/I,EAAUhvK,EAAKgvK,QAInB,GAHKA,GAAsB,eAAXA,IACdA,EAAUjxK,OAAO+qI,SAASlrE,MAExBoxG,EAAS,CAEX+I,EADY,IAAIp6G,IAAI,IAAM1hE,EAAI+yK,GACfpxG,IACrB,MACMm6G,EAAW,IAAM97K,EAEnBvN,KAAKooL,cAAciB,GAAY5M,CAChC,CAOD,mBAAApL,CAAoB//J,EAAM5G,GACxB,IAAKipK,GAAejuK,SAAS4L,EAAKgsG,cAChC,OAAO,KAET,MAAM79D,EAAUz/C,KAAK0oL,eAAep3K,EAAM,CACxCtR,KAAKkwK,eAAe5+J,EAAM5G,KAE5B,OAAI+0C,GAGG,IACR,CAQD,oBAAA8xH,CAAqBjgK,EAAM5G,GACzB,IAAKipK,GAAejuK,SAAS4L,EAAKgsG,cAChC,MAAO,GAET,IAAIr6C,EACJ,MAAM27C,EAAYttG,EAAKstG,UACvB,GAAiB,YAAbA,GAAwC,UAAbA,EAI7B,OAHA37C,EAAWjjE,KAAKwoL,sBAAsBl3K,EAAM,CAC1CtR,KAAKkwK,eAAe5+J,EAAM5G,KAExBu4D,GAGG,GAET,GAAiB,aAAb27C,EAA0B,CAC5B,MAAMn/D,EAAUz/C,KAAK0oL,eAAep3K,EAAM,CACxCtR,KAAKkwK,eAAe5+J,EAAM5G,KAE5B,OAAI+0C,EACK,CAACA,GAEH,EACR,CACD,GAAiB,OAAbm/D,EAAoB,CACtB37C,EAAW,GACX,IAAK,IAAIthE,EAAI2P,EAAKm8F,kBAAmB9rG,EAAGA,EAAIA,EAAEy+G,mBAAoB,CAChE,MAAMkpE,EAAKtpL,KAAKuxK,qBAAqB5vK,EAAG+I,GACpC4+K,GACFpnL,EAAO+gE,EAAUqmH,EAEpB,CACD,OAAOrmH,CACR,CACD,MAAO,EACR,CASD,QAAAsmH,CAASt/K,GACP,GAAKA,EAAL,CAGA,GAAsB,iBAAXA,EAAqB,CAC9B,MAAMyhD,EAAM1gB,GAAM/gC,GAClB,OAAOjK,KAAKwpL,qBAAqB99H,EAClC,CACD,OAAIyyD,GAAWl0G,GACNjK,KAAKwpL,qBAA8C,GAErDxpL,KAAKypL,iBAAyC,EARpD,CASF,CAMD,oBAAAD,CAAqB99H,GACnB,IAAK,IAAI/pD,EAAyB+pD,EAAc,WAAG/pD,EAAGA,EAAIA,EAAEu8G,YAC1D,GAAIv8G,EAAEk8G,UAAYC,KAAK0zD,aAAc,CACnC,MAAM/7J,EAAOzV,KAAKypL,iBAAgB,GAClC,GAAIh0K,EACF,OAAOA,CAEV,CAGJ,CAMD,gBAAAg0K,CAAiBn4K,GACf,IAAK,IAAI3P,EAAI2P,EAAKm8F,kBAAmB9rG,EAAGA,EAAIA,EAAEy+G,mBAC5C,GAAIuzD,GAAejuK,SAAS/D,EAAE27G,eAAgC,QAAf37G,EAAEi9G,UAC/C,OAAO6zD,GAAW9wK,GAGtB,IAAK,IAAIA,EAAI2P,EAAKm8F,kBAAmB9rG,EAAGA,EAAIA,EAAEy+G,mBAAoB,CAChE,MAAMxB,EAAYj9G,EAAEi9G,UACpB,GACE+0D,GAAejuK,SAAS/D,EAAE27G,gBACZ,YAAbsB,GACc,UAAbA,GACa,aAAbA,GACa,OAAbA,GACF,CACA,MAAMnpG,EAAOzV,KAAKypL,iBAAiB9nL,GACnC,GAAI8T,EACF,OAAOA,CAEV,CACF,CAEF,CASD,gBAAAi0K,CAAiBz/K,GACf,MAAM0/K,EAAe,GACrB,GAAsB,iBAAX1/K,EAAqB,CAC9B,MAAMyhD,EAAM1gB,GAAM/gC,GAClB/H,EAAOynL,EAAc3pL,KAAK4pL,6BAA6Bl+H,GAC7D,MAAeyyD,GAAWl0G,GACpB/H,EACEynL,EACA3pL,KAAK4pL,6BAA4B,IAGnC1nL,EACEynL,EACA3pL,KAAK6pL,yBAAwB,IAGjC,OAAOF,CACR,CAMD,4BAAAC,CAA6Bl+H,GAC3B,MAAMi+H,EAAe,GACrB,IAAK,IAAIhoL,EAAyB+pD,EAAc,WAAG/pD,EAAGA,EAAIA,EAAEu8G,YACtDv8G,EAAEk8G,UAAYC,KAAK0zD,cACrBtvK,EACEynL,EACA3pL,KAAK6pL,yBAAwB,IAInC,OAAOF,CACR,CAMD,wBAAAE,CAAyBv4K,GACvB,MAAMq4K,EAAe,GACrB,IAAK,IAAIhoL,EAAI2P,EAAKm8F,kBAAmB9rG,EAAGA,EAAIA,EAAEy+G,mBAC5C,GACEuzD,GAAejuK,SAAS/D,EAAE27G,eACX,eAAf37G,EAAEi9G,UACF,CACA,MAAMl2G,EAAM63G,GAAgB,CAAA,EAAI+8D,GAAsB37K,EAAG,IACzDgoL,EAAahkL,KAAK+C,EACnB,CAEH,IAAK,IAAI/G,EAAI2P,EAAKm8F,kBAAmB9rG,EAAGA,EAAIA,EAAEy+G,mBAAoB,CAChE,MAAMxB,EAAYj9G,EAAEi9G,WAElB+0D,GAAejuK,SAAS/D,EAAE27G,eACZ,YAAbsB,GAAwC,UAAbA,GAAsC,OAAbA,GAErD18G,EAAOynL,EAAc3pL,KAAK6pL,yBAAyBloL,GAEtD,CACD,OAAOgoL,CACR,CASD,UAAAG,CAAW7/K,GACT,MAAM8/K,EAAU,GAChB,GAAsB,iBAAX9/K,EAAqB,CAC9B,MAAMyhD,EAAM1gB,GAAM/gC,GAClB/H,EAAO6nL,EAAS/pL,KAAKgqL,uBAAuBt+H,GAClD,MAAeyyD,GAAWl0G,GACpB/H,EACE6nL,EACA/pL,KAAKgqL,uBAAsB,IAG7B9nL,EAAO6nL,EAAS/pL,KAAKiqL,mBAA2C,IAElE,OAAOF,CACR,CAMD,sBAAAC,CAAuBt+H,GACrB,MAAMq+H,EAAU,GAChB,IAAK,IAAIpoL,EAAyB+pD,EAAc,WAAG/pD,EAAGA,EAAIA,EAAEu8G,YACtDv8G,EAAEk8G,UAAYC,KAAK0zD,cACrBtvK,EAAO6nL,EAAS/pL,KAAKiqL,mBAA2C,IAGpE,OAAOF,CACR,CAOD,kBAAAE,CAAmB34K,GACjB,MAAMy4K,EAAU,GAChB,IAAK,IAAIpoL,EAAI2P,EAAKm8F,kBAAmB9rG,EAAGA,EAAIA,EAAEy+G,mBAC5C,GAAIuzD,GAAejuK,SAAS/D,EAAE27G,eAAgC,UAAf37G,EAAEi9G,UAAuB,CACtE,MAAMl2G,EAAM63G,GAAgB,CAAA,EAAI09D,GAAgBt8K,EAAG,IACnDooL,EAAQpkL,KAAK+C,EACd,CAEH,IAAK,IAAI/G,EAAI2P,EAAKm8F,kBAAmB9rG,EAAGA,EAAIA,EAAEy+G,mBAAoB,CAChE,MAAMxB,EAAYj9G,EAAEi9G,WAElB+0D,GAAejuK,SAAS/D,EAAE27G,eACZ,YAAbsB,GAAwC,UAAbA,GAAsC,OAAbA,GAErD18G,EAAO6nL,EAAS/pL,KAAKiqL,mBAAmBtoL,GAE3C,CACD,OAAOooL,CACR,CAoBD,UAAAG,CAAWjgL,GACT,MAAMkgL,EAAU,GAChB,GAAsB,iBAAXlgL,EAAqB,CAC9B,MAAMyhD,EAAM1gB,GAAM/gC,GAClB/H,EAAOioL,EAASnqL,KAAKoqL,uBAAuB1+H,GAClD,MAAeyyD,GAAWl0G,GACpB/H,EACEioL,EACAnqL,KAAKoqL,uBAAsB,IAG7BloL,EAAOioL,EAASnqL,KAAKqqL,mBAA2C,IAElE,OAAOF,CACR,CAMD,sBAAAC,CAAuB1+H,GACrB,MAAMy+H,EAAU,GAChB,IAAK,IAAIxoL,EAAyB+pD,EAAc,WAAG/pD,EAAGA,EAAIA,EAAEu8G,YACtDv8G,EAAEk8G,WAAaC,KAAK0zD,cACtBtvK,EAAOioL,EAASnqL,KAAKqqL,mBAA2C,IAGpE,OAAOF,CACR,CAOD,kBAAAE,CAAmB/4K,GACjB,MAAM64K,EAAU,GAChB,IAAK,IAAIxoL,EAAI2P,EAAKm8F,kBAAmB9rG,EAAGA,EAAIA,EAAEy+G,mBAC5C,GAAIuzD,GAAejuK,SAAS/D,EAAE27G,eAAiC,WAAhB37G,EAAEi9G,UAAwB,CACvE,MAAMl2G,EAAM63G,GAAgB,CAAA,EAAIk9D,GAAgB97K,EAAG,IACnDwoL,EAAQxkL,KAAK+C,EACd,CAEH,IAAK,IAAI/G,EAAI2P,EAAKm8F,kBAAmB9rG,EAAGA,EAAIA,EAAEy+G,mBAAoB,CAChE,MAAMxB,EAAYj9G,EAAEi9G,WAElB+0D,GAAejuK,SAAS/D,EAAE27G,eACX,aAAdsB,GACe,WAAdA,GACc,cAAdA,GACc,QAAdA,GAEF18G,EAAOioL,EAASnqL,KAAKqqL,mBAAmB1oL,GAE3C,CACD,OAAOwoL,CACR,CAWD,iBAAApY,CAAkB9uG,EAAUv4D,GAC1BA,EAAU1K,KAAKmwK,aAAazlK,GAC5B,MAAM4/K,EAAMjtE,GAAgBs2D,GAAe,GAAI,OACzC4W,EAAW,gCACjBD,EAAIjT,eAAekT,EAAU,WAAY9O,GAAkB,IAC3D6O,EAAIjT,eAAekT,EAAU,YAAantE,IAC1CktE,EAAIjT,eACFj6D,GACA,qBAl4BJ,uFAs4BE,MAAuDltG,EAAU,CAC7DoB,KAAMg5K,GAGJz1K,EAAa,CAAA,EACfouD,EAAS9hE,OAAS,EACpB0T,EAAqB,SAAIouD,EACG,GAAnBA,EAAS9hE,SAClB0T,EAAsB,UAAIouD,EAAS,IAErC,MAAM28C,EAAc4+D,GAAa8L,EAAIhtE,cAC/Bt0G,EAAS22G,GAAa9qG,EAAY+qG,GAUxC,OATAY,GACEtwG,EACAuuK,GACA/+D,GACA12G,EACA,CAAC0B,GACDk1G,EACA5/G,MAEKsqL,CACR;;ACr/BSE,KAAG,SAAU9wK,EAAQoB,EAAQ2vK,EAAMC,EAAMC,GACnD,IAAI1zK,EAAG+I,EACH4qK,EAAiB,EAATD,EAAcD,EAAO,EAC7BG,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBE,GAAS,EACTnpL,EAAI6oL,EAAQE,EAAS,EAAK,EAC1B3zK,EAAIyzK,GAAQ,EAAI,EAChB5gJ,EAAInwB,EAAOoB,EAASlZ,GAOxB,IALAA,GAAKoV,EAELC,EAAI4yB,GAAM,IAAOkhJ,GAAU,EAC3BlhJ,KAAQkhJ,EACRA,GAASH,EACFG,EAAQ,EAAG9zK,EAAS,IAAJA,EAAWyC,EAAOoB,EAASlZ,GAAIA,GAAKoV,EAAG+zK,GAAS,GAKvE,IAHA/qK,EAAI/I,GAAM,IAAO8zK,GAAU,EAC3B9zK,KAAQ8zK,EACRA,GAASL,EACFK,EAAQ,EAAG/qK,EAAS,IAAJA,EAAWtG,EAAOoB,EAASlZ,GAAIA,GAAKoV,EAAG+zK,GAAS,GAEvE,GAAU,IAAN9zK,EACFA,EAAI,EAAI6zK,MACH,IAAI7zK,IAAM4zK,EACf,OAAO7qK,EAAImO,IAAsB3T,KAAdqvB,GAAK,EAAI,GAE5B7pB,GAAQhU,KAAKC,IAAI,EAAGy+K,GACpBzzK,GAAQ6zK,CACT,CACD,OAAQjhJ,GAAK,EAAI,GAAK7pB,EAAIhU,KAAKC,IAAI,EAAGgL,EAAIyzK,EAC5C,EAEAF,MAAgB,SAAU9wK,EAAQrV,EAAOyW,EAAQ2vK,EAAMC,EAAMC,GAC3D,IAAI1zK,EAAG+I,EAAGjJ,EACN6zK,EAAiB,EAATD,EAAcD,EAAO,EAC7BG,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBG,EAAe,KAATN,EAAc1+K,KAAKC,IAAI,GAAI,IAAMD,KAAKC,IAAI,GAAI,IAAM,EAC1DrK,EAAI6oL,EAAO,EAAKE,EAAS,EACzB3zK,EAAIyzK,EAAO,GAAK,EAChB5gJ,EAAIxlC,EAAQ,GAAgB,IAAVA,GAAe,EAAIA,EAAQ,EAAK,EAAI,EAmC1D,IAjCAA,EAAQ2H,KAAKmP,IAAI9W,GAEbiqB,MAAMjqB,IAAUA,IAAUmW,KAC5BwF,EAAIsO,MAAMjqB,GAAS,EAAI,EACvB4S,EAAI4zK,IAEJ5zK,EAAIjL,KAAKuT,MAAMvT,KAAKqW,IAAIhe,GAAS2H,KAAKi/K,KAClC5mL,GAAS0S,EAAI/K,KAAKC,IAAI,GAAIgL,IAAM,IAClCA,IACAF,GAAK,IAGL1S,GADE4S,EAAI6zK,GAAS,EACNE,EAAKj0K,EAELi0K,EAAKh/K,KAAKC,IAAI,EAAG,EAAI6+K,IAEpB/zK,GAAK,IACfE,IACAF,GAAK,GAGHE,EAAI6zK,GAASD,GACf7qK,EAAI,EACJ/I,EAAI4zK,GACK5zK,EAAI6zK,GAAS,GACtB9qK,GAAM3b,EAAQ0S,EAAK,GAAK/K,KAAKC,IAAI,EAAGy+K,GACpCzzK,GAAQ6zK,IAER9qK,EAAI3b,EAAQ2H,KAAKC,IAAI,EAAG6+K,EAAQ,GAAK9+K,KAAKC,IAAI,EAAGy+K,GACjDzzK,EAAI,IAIDyzK,GAAQ,EAAGhxK,EAAOoB,EAASlZ,GAAS,IAAJoe,EAAUpe,GAAKoV,EAAGgJ,GAAK,IAAK0qK,GAAQ,GAI3E,IAFAzzK,EAAKA,GAAKyzK,EAAQ1qK,EAClB4qK,GAAQF,EACDE,EAAO,EAAGlxK,EAAOoB,EAASlZ,GAAS,IAAJqV,EAAUrV,GAAKoV,EAAGC,GAAK,IAAK2zK,GAAQ,GAE1ElxK,EAAOoB,EAASlZ,EAAIoV,IAAU,IAAJ6yB,CAC5B,GClFAqhJ,GAAiBC,GAEbX,GAAUY,GAEd,SAASD,GAAIvqC,GACT5gJ,KAAK4gJ,IAAMyqC,YAAYC,QAAUD,YAAYC,OAAO1qC,GAAOA,EAAM,IAAIruI,WAAWquI,GAAO,GACvF5gJ,KAAKgoD,IAAM,EACXhoD,KAAKD,KAAO,EACZC,KAAKmB,OAASnB,KAAK4gJ,IAAIz/I,MAC3B,CAEAgqL,GAAII,OAAU,EACdJ,GAAIK,QAAU,EACdL,GAAIM,MAAU,EACdN,GAAIO,QAAU,EAEd,IAAIC,GAAgB,WAChBC,GAAiB,EAAID,GAKrBE,GAAyC,oBAAhB9yB,YAA8B,KAAO,IAAIA,YAAY,QAwYlF,SAAS+yB,GAAcZ,GACnB,OAAOA,EAAInrL,OAASorL,GAAIM,MACpBP,EAAIa,aAAeb,EAAIljI,IAAMkjI,EAAIljI,IAAM,CAC/C,CAEA,SAASgkI,GAAM/qL,EAAKC,EAAM+qL,GACtB,OAAIA,EACc,WAAP/qL,GAAsBD,IAAQ,GAGlB,YAAdC,IAAS,IAAqBD,IAAQ,EACnD,CAiDA,SAASirL,GAAuBC,EAAUnkL,EAAKkjL,GAC3C,IAAIkB,EACApkL,GAAO,MAAS,EAChBA,GAAO,QAAW,EAClBA,GAAO,UAAY,EAAIgE,KAAKuT,MAAMvT,KAAKqW,IAAIra,IAAmB,EAAXgE,KAAKi/K,MAG5DC,EAAImB,QAAQD,GACZ,IAAK,IAAIxqL,EAAIspL,EAAIljI,IAAM,EAAGpmD,GAAKuqL,EAAUvqL,IAAKspL,EAAItqC,IAAIh/I,EAAIwqL,GAAYlB,EAAItqC,IAAIh/I,EAClF,CAEA,SAAS0qL,GAAkB7qL,EAAKypL,GAAS,IAAK,IAAItpL,EAAI,EAAGA,EAAIH,EAAIN,OAAQS,IAAKspL,EAAIqB,YAAY9qL,EAAIG,GAAQ,CAC1G,SAAS4qL,GAAmB/qL,EAAKypL,GAAQ,IAAK,IAAItpL,EAAI,EAAGA,EAAIH,EAAIN,OAAQS,IAAKspL,EAAIuB,aAAahrL,EAAIG,GAAO,CAC1G,SAAS8qL,GAAiBjrL,EAAKypL,GAAU,IAAK,IAAItpL,EAAI,EAAGA,EAAIH,EAAIN,OAAQS,IAAKspL,EAAIyB,WAAWlrL,EAAIG,GAAS,CAC1G,SAASgrL,GAAkBnrL,EAAKypL,GAAS,IAAK,IAAItpL,EAAI,EAAGA,EAAIH,EAAIN,OAAQS,IAAKspL,EAAI2B,YAAYprL,EAAIG,GAAQ,CAC1G,SAASkrL,GAAmBrrL,EAAKypL,GAAQ,IAAK,IAAItpL,EAAI,EAAGA,EAAIH,EAAIN,OAAQS,IAAKspL,EAAI6B,aAAatrL,EAAIG,GAAO,CAC1G,SAASorL,GAAmBvrL,EAAKypL,GAAQ,IAAK,IAAItpL,EAAI,EAAGA,EAAIH,EAAIN,OAAQS,IAAKspL,EAAI+B,aAAaxrL,EAAIG,GAAO,CAC1G,SAASsrL,GAAoBzrL,EAAKypL,GAAO,IAAK,IAAItpL,EAAI,EAAGA,EAAIH,EAAIN,OAAQS,IAAKspL,EAAIiC,cAAc1rL,EAAIG,GAAM,CAC1G,SAASwrL,GAAmB3rL,EAAKypL,GAAQ,IAAK,IAAItpL,EAAI,EAAGA,EAAIH,EAAIN,OAAQS,IAAKspL,EAAImC,aAAa5rL,EAAIG,GAAO,CAC1G,SAAS0rL,GAAoB7rL,EAAKypL,GAAO,IAAK,IAAItpL,EAAI,EAAGA,EAAIH,EAAIN,OAAQS,IAAKspL,EAAIqC,cAAc9rL,EAAIG,GAAM,CAI1G,SAAS4rL,GAAW5sC,EAAK54F,GACrB,OAAS44F,EAAI54F,GACR44F,EAAI54F,EAAM,IAAM,EAChB44F,EAAI54F,EAAM,IAAM,IACD,SAAf44F,EAAI54F,EAAM,EACnB,CAEA,SAASylI,GAAW7sC,EAAKhlI,EAAKosC,GAC1B44F,EAAI54F,GAAOpsC,EACXglI,EAAI54F,EAAM,GAAMpsC,IAAQ,EACxBglI,EAAI54F,EAAM,GAAMpsC,IAAQ,GACxBglI,EAAI54F,EAAM,GAAMpsC,IAAQ,EAC5B,CAEA,SAAS8xK,GAAU9sC,EAAK54F,GACpB,OAAS44F,EAAI54F,GACR44F,EAAI54F,EAAM,IAAM,EAChB44F,EAAI54F,EAAM,IAAM,KAChB44F,EAAI54F,EAAM,IAAM,GACzB,CA5eAmjI,GAAItnL,UAAY,CAEZ8pL,QAAS,WACL3tL,KAAK4gJ,IAAM,IACd,EAIDgtC,WAAY,SAASC,EAAWr9I,EAAQxuC,GAGpC,IAFAA,EAAMA,GAAOhC,KAAKmB,OAEXnB,KAAKgoD,IAAMhmD,GAAK,CACnB,IAAI4Z,EAAM5b,KAAK+rL,aACX+B,EAAMlyK,GAAO,EACbuwK,EAAWnsL,KAAKgoD,IAEpBhoD,KAAKD,KAAa,EAAN6b,EACZiyK,EAAUC,EAAKt9I,EAAQxwC,MAEnBA,KAAKgoD,MAAQmkI,GAAUnsL,KAAK+tL,KAAKnyK,EACxC,CACD,OAAO40B,CACV,EAEDw9I,YAAa,SAASH,EAAWr9I,GAC7B,OAAOxwC,KAAK4tL,WAAWC,EAAWr9I,EAAQxwC,KAAK+rL,aAAe/rL,KAAKgoD,IACtE,EAEDimI,YAAa,WACT,IAAIryK,EAAM4xK,GAAWxtL,KAAK4gJ,IAAK5gJ,KAAKgoD,KAEpC,OADAhoD,KAAKgoD,KAAO,EACLpsC,CACV,EAEDsyK,aAAc,WACV,IAAItyK,EAAM8xK,GAAU1tL,KAAK4gJ,IAAK5gJ,KAAKgoD,KAEnC,OADAhoD,KAAKgoD,KAAO,EACLpsC,CACV,EAIDuyK,YAAa,WACT,IAAIvyK,EAAM4xK,GAAWxtL,KAAK4gJ,IAAK5gJ,KAAKgoD,KAAOwlI,GAAWxtL,KAAK4gJ,IAAK5gJ,KAAKgoD,IAAM,GAAK2jI,GAEhF,OADA3rL,KAAKgoD,KAAO,EACLpsC,CACV,EAEDwyK,aAAc,WACV,IAAIxyK,EAAM4xK,GAAWxtL,KAAK4gJ,IAAK5gJ,KAAKgoD,KAAO0lI,GAAU1tL,KAAK4gJ,IAAK5gJ,KAAKgoD,IAAM,GAAK2jI,GAE/E,OADA3rL,KAAKgoD,KAAO,EACLpsC,CACV,EAEDyyK,UAAW,WACP,IAAIzyK,EAAM4uK,GAAQ8D,KAAKtuL,KAAK4gJ,IAAK5gJ,KAAKgoD,KAAK,EAAM,GAAI,GAErD,OADAhoD,KAAKgoD,KAAO,EACLpsC,CACV,EAED2yK,WAAY,WACR,IAAI3yK,EAAM4uK,GAAQ8D,KAAKtuL,KAAK4gJ,IAAK5gJ,KAAKgoD,KAAK,EAAM,GAAI,GAErD,OADAhoD,KAAKgoD,KAAO,EACLpsC,CACV,EAEDmwK,WAAY,SAASE,GACjB,IACIrwK,EAAKta,EADLs/I,EAAM5gJ,KAAK4gJ,IAG+B,OAAzBhlI,EAAY,KAAjCta,EAAIs/I,EAAI5gJ,KAAKgoD,QAAqC1mD,EAAI,IAAasa,GAC9CA,IAAY,KAAjCta,EAAIs/I,EAAI5gJ,KAAKgoD,UAA6B,EAAQ1mD,EAAI,IAAasa,GAC9CA,IAAY,KAAjCta,EAAIs/I,EAAI5gJ,KAAKgoD,UAA6B,GAAQ1mD,EAAI,IAAasa,GAC9CA,IAAY,KAAjCta,EAAIs/I,EAAI5gJ,KAAKgoD,UAA6B,GAAQ1mD,EAAI,IAAasa,EA+S3E,SAA6BmD,EAAG8qB,EAAGurD,GAC/B,IACI/0D,EAAG/+B,EADHs/I,EAAMxrD,EAAEwrD,IAG6B,GAAzCt/I,EAAIs/I,EAAIxrD,EAAEptC,OAAQ3nB,GAAU,IAAJ/+B,IAAa,EAAQA,EAAI,IAAM,OAAO0qL,GAAMjtK,EAAGshB,EAAGwJ,GACjC,GAAzCvoC,EAAIs/I,EAAIxrD,EAAEptC,OAAQ3nB,IAAU,IAAJ/+B,IAAa,EAAQA,EAAI,IAAM,OAAO0qL,GAAMjtK,EAAGshB,EAAGwJ,GACjC,GAAzCvoC,EAAIs/I,EAAIxrD,EAAEptC,OAAQ3nB,IAAU,IAAJ/+B,IAAa,GAAQA,EAAI,IAAM,OAAO0qL,GAAMjtK,EAAGshB,EAAGwJ,GACjC,GAAzCvoC,EAAIs/I,EAAIxrD,EAAEptC,OAAQ3nB,IAAU,IAAJ/+B,IAAa,GAAQA,EAAI,IAAM,OAAO0qL,GAAMjtK,EAAGshB,EAAGwJ,GACjC,GAAzCvoC,EAAIs/I,EAAIxrD,EAAEptC,OAAQ3nB,IAAU,IAAJ/+B,IAAa,GAAQA,EAAI,IAAM,OAAO0qL,GAAMjtK,EAAGshB,EAAGwJ,GACjC,GAAzCvoC,EAAIs/I,EAAIxrD,EAAEptC,OAAQ3nB,IAAU,EAAJ/+B,IAAa,GAAQA,EAAI,IAAM,OAAO0qL,GAAMjtK,EAAGshB,EAAGwJ,GAE1E,MAAM,IAAIthC,MAAM,yCACpB,CAxTeimL,CAFc5yK,IAAY,IAAjCta,EAAIs/I,EAAI5gJ,KAAKgoD,QAA6B,GAEVikI,EAAUjsL,QAC7C,EAEDyuL,aAAc,WACV,OAAOzuL,KAAK+rL,YAAW,EAC1B,EAED2C,YAAa,WACT,IAAInkC,EAAMvqJ,KAAK+rL,aACf,OAAOxhC,EAAM,GAAM,GAAKA,EAAM,IAAM,EAAIA,EAAM,CACjD,EAED0nB,YAAa,WACT,OAAOx6H,QAAQz3C,KAAK+rL,aACvB,EAEDtZ,WAAY,WACR,IAAIzwK,EAAMhC,KAAK+rL,aAAe/rL,KAAKgoD,IAC/BA,EAAMhoD,KAAKgoD,IAGf,OAFAhoD,KAAKgoD,IAAMhmD,EAEPA,EAAMgmD,GApGY,IAoGsB6jI,GA+cpD,SAA6BjrC,EAAK54F,EAAKhmD,GACnC,OAAO6pL,GAAgB98K,OAAO6xI,EAAI+tC,SAAS3mI,EAAKhmD,GACpD,CA/cmB4sL,CAAoB5uL,KAAK4gJ,IAAK54F,EAAKhmD,GA2YtD,SAAkB4+I,EAAK54F,EAAKhmD,GACxB,IAAI6sL,EAAM,GACNjtL,EAAIomD,EAER,KAAOpmD,EAAII,GAAK,CACZ,IASIoU,EAAIM,EAAIo4K,EATRC,EAAKnuC,EAAIh/I,GACTmV,EAAI,KACJi4K,EACAD,EAAK,IAAO,EACZA,EAAK,IAAO,EACZA,EAAK,IAAO,EAAI,EAEpB,GAAIntL,EAAIotL,EAAmBhtL,EAAK,MAIP,IAArBgtL,EACID,EAAK,MACLh4K,EAAIg4K,GAEoB,IAArBC,EAEa,MAAV,KADV54K,EAAKwqI,EAAIh/I,EAAI,OAETmV,GAAU,GAALg4K,IAAc,EAAY,GAAL34K,IACjB,MACLW,EAAI,MAGgB,IAArBi4K,GACP54K,EAAKwqI,EAAIh/I,EAAI,GACb8U,EAAKkqI,EAAIh/I,EAAI,GACO,MAAV,IAALwU,IAAuC,MAAV,IAALM,MACzBK,GAAU,GAALg4K,IAAa,IAAY,GAAL34K,IAAc,EAAY,GAALM,IACrC,MAAUK,GAAK,OAAUA,GAAK,SACnCA,EAAI,OAGgB,IAArBi4K,IACP54K,EAAKwqI,EAAIh/I,EAAI,GACb8U,EAAKkqI,EAAIh/I,EAAI,GACbktL,EAAKluC,EAAIh/I,EAAI,GACO,MAAV,IAALwU,IAAuC,MAAV,IAALM,IAAuC,MAAV,IAALo4K,MACjD/3K,GAAU,GAALg4K,IAAa,IAAa,GAAL34K,IAAc,IAAY,GAALM,IAAc,EAAY,GAALo4K,IAC3D,OAAU/3K,GAAK,WACpBA,EAAI,OAKN,OAANA,GACAA,EAAI,MACJi4K,EAAmB,GAEZj4K,EAAI,QACXA,GAAK,MACL83K,GAAOjmL,OAAOgjF,aAAa70E,IAAM,GAAK,KAAQ,OAC9CA,EAAI,MAAa,KAAJA,GAGjB83K,GAAOjmL,OAAOgjF,aAAa70E,GAC3BnV,GAAKotL,CACR,CAED,OAAOH,CACX,CAxceI,CAASjvL,KAAK4gJ,IAAK54F,EAAKhmD,EAClC,EAEDktL,UAAW,WACP,IAAIltL,EAAMhC,KAAK+rL,aAAe/rL,KAAKgoD,IAC/BtuC,EAAS1Z,KAAK4gJ,IAAI+tC,SAAS3uL,KAAKgoD,IAAKhmD,GAEzC,OADAhC,KAAKgoD,IAAMhmD,EACJ0X,CACV,EAIDy1K,iBAAkB,SAAS1tL,EAAKwqL,GAC5B,GAAIjsL,KAAKD,OAASorL,GAAIM,MAAO,OAAOhqL,EAAIkE,KAAK3F,KAAK+rL,WAAWE,IAC7D,IAAIjqL,EAAM8pL,GAAc9rL,MAExB,IADAyB,EAAMA,GAAO,GACNzB,KAAKgoD,IAAMhmD,GAAKP,EAAIkE,KAAK3F,KAAK+rL,WAAWE,IAChD,OAAOxqL,CACV,EACD2tL,kBAAmB,SAAS3tL,GACxB,GAAIzB,KAAKD,OAASorL,GAAIM,MAAO,OAAOhqL,EAAIkE,KAAK3F,KAAK0uL,eAClD,IAAI1sL,EAAM8pL,GAAc9rL,MAExB,IADAyB,EAAMA,GAAO,GACNzB,KAAKgoD,IAAMhmD,GAAKP,EAAIkE,KAAK3F,KAAK0uL,eACrC,OAAOjtL,CACV,EACD4tL,kBAAmB,SAAS5tL,GACxB,GAAIzB,KAAKD,OAASorL,GAAIM,MAAO,OAAOhqL,EAAIkE,KAAK3F,KAAKiyK,eAClD,IAAIjwK,EAAM8pL,GAAc9rL,MAExB,IADAyB,EAAMA,GAAO,GACNzB,KAAKgoD,IAAMhmD,GAAKP,EAAIkE,KAAK3F,KAAKiyK,eACrC,OAAOxwK,CACV,EACD6tL,gBAAiB,SAAS7tL,GACtB,GAAIzB,KAAKD,OAASorL,GAAIM,MAAO,OAAOhqL,EAAIkE,KAAK3F,KAAKquL,aAClD,IAAIrsL,EAAM8pL,GAAc9rL,MAExB,IADAyB,EAAMA,GAAO,GACNzB,KAAKgoD,IAAMhmD,GAAKP,EAAIkE,KAAK3F,KAAKquL,aACrC,OAAO5sL,CACV,EACD8tL,iBAAkB,SAAS9tL,GACvB,GAAIzB,KAAKD,OAASorL,GAAIM,MAAO,OAAOhqL,EAAIkE,KAAK3F,KAAKuuL,cAClD,IAAIvsL,EAAM8pL,GAAc9rL,MAExB,IADAyB,EAAMA,GAAO,GACNzB,KAAKgoD,IAAMhmD,GAAKP,EAAIkE,KAAK3F,KAAKuuL,cACrC,OAAO9sL,CACV,EACD+tL,kBAAmB,SAAS/tL,GACxB,GAAIzB,KAAKD,OAASorL,GAAIM,MAAO,OAAOhqL,EAAIkE,KAAK3F,KAAKiuL,eAClD,IAAIjsL,EAAM8pL,GAAc9rL,MAExB,IADAyB,EAAMA,GAAO,GACNzB,KAAKgoD,IAAMhmD,GAAKP,EAAIkE,KAAK3F,KAAKiuL,eACrC,OAAOxsL,CACV,EACDguL,mBAAoB,SAAShuL,GACzB,GAAIzB,KAAKD,OAASorL,GAAIM,MAAO,OAAOhqL,EAAIkE,KAAK3F,KAAKkuL,gBAClD,IAAIlsL,EAAM8pL,GAAc9rL,MAExB,IADAyB,EAAMA,GAAO,GACNzB,KAAKgoD,IAAMhmD,GAAKP,EAAIkE,KAAK3F,KAAKkuL,gBACrC,OAAOzsL,CACV,EACDiuL,kBAAmB,SAASjuL,GACxB,GAAIzB,KAAKD,OAASorL,GAAIM,MAAO,OAAOhqL,EAAIkE,KAAK3F,KAAKmuL,eAClD,IAAInsL,EAAM8pL,GAAc9rL,MAExB,IADAyB,EAAMA,GAAO,GACNzB,KAAKgoD,IAAMhmD,GAAKP,EAAIkE,KAAK3F,KAAKmuL,eACrC,OAAO1sL,CACV,EACDkuL,mBAAoB,SAASluL,GACzB,GAAIzB,KAAKD,OAASorL,GAAIM,MAAO,OAAOhqL,EAAIkE,KAAK3F,KAAKouL,gBAClD,IAAIpsL,EAAM8pL,GAAc9rL,MAExB,IADAyB,EAAMA,GAAO,GACNzB,KAAKgoD,IAAMhmD,GAAKP,EAAIkE,KAAK3F,KAAKouL,gBACrC,OAAO3sL,CACV,EAEDssL,KAAM,SAASnyK,GACX,IAAI7b,EAAa,EAAN6b,EACX,GAAI7b,IAASorL,GAAII,OAAQ,KAAOvrL,KAAK4gJ,IAAI5gJ,KAAKgoD,OAAS,WAClD,GAAIjoD,IAASorL,GAAIM,MAAOzrL,KAAKgoD,IAAMhoD,KAAK+rL,aAAe/rL,KAAKgoD,SAC5D,GAAIjoD,IAASorL,GAAIO,QAAS1rL,KAAKgoD,KAAO,MACtC,IAAIjoD,IAASorL,GAAIK,QACjB,MAAM,IAAIjjL,MAAM,uBAAyBxI,GADfC,KAAKgoD,KAAO,CACQ,CACtD,EAID4nI,SAAU,SAAS9B,EAAK/tL,GACpBC,KAAKusL,YAAauB,GAAO,EAAK/tL,EACjC,EAEDssL,QAAS,SAAS7wK,GAGd,IAFA,IAAIra,EAASnB,KAAKmB,QAAU,GAErBA,EAASnB,KAAKgoD,IAAMxsC,GAAKra,GAAU,EAE1C,GAAIA,IAAWnB,KAAKmB,OAAQ,CACxB,IAAIy/I,EAAM,IAAIruI,WAAWpR,GACzBy/I,EAAI92I,IAAI9J,KAAK4gJ,KACb5gJ,KAAK4gJ,IAAMA,EACX5gJ,KAAKmB,OAASA,CACjB,CACJ,EAEDgtH,OAAQ,WAGJ,OAFAnuH,KAAKmB,OAASnB,KAAKgoD,IACnBhoD,KAAKgoD,IAAM,EACJhoD,KAAK4gJ,IAAI+tC,SAAS,EAAG3uL,KAAKmB,OACpC,EAED8rL,aAAc,SAASrxK,GACnB5b,KAAKqsL,QAAQ,GACboB,GAAWztL,KAAK4gJ,IAAKhlI,EAAK5b,KAAKgoD,KAC/BhoD,KAAKgoD,KAAO,CACf,EAEDmlI,cAAe,SAASvxK,GACpB5b,KAAKqsL,QAAQ,GACboB,GAAWztL,KAAK4gJ,IAAKhlI,EAAK5b,KAAKgoD,KAC/BhoD,KAAKgoD,KAAO,CACf,EAEDqlI,aAAc,SAASzxK,GACnB5b,KAAKqsL,QAAQ,GACboB,GAAWztL,KAAK4gJ,KAAY,EAAPhlI,EAAU5b,KAAKgoD,KACpCylI,GAAWztL,KAAK4gJ,IAAK50I,KAAKuT,MAAM3D,EAAMgwK,IAAiB5rL,KAAKgoD,IAAM,GAClEhoD,KAAKgoD,KAAO,CACf,EAEDulI,cAAe,SAAS3xK,GACpB5b,KAAKqsL,QAAQ,GACboB,GAAWztL,KAAK4gJ,KAAY,EAAPhlI,EAAU5b,KAAKgoD,KACpCylI,GAAWztL,KAAK4gJ,IAAK50I,KAAKuT,MAAM3D,EAAMgwK,IAAiB5rL,KAAKgoD,IAAM,GAClEhoD,KAAKgoD,KAAO,CACf,EAEDukI,YAAa,SAAS3wK,IAClBA,GAAOA,GAAO,GAEJ,WAAaA,EAAM,EAkKrC,SAAwBA,EAAKsvK,GACzB,IAAIjqL,EAAKC,EAEL0a,GAAO,GACP3a,EAAQ2a,EAAM,WAAe,EAC7B1a,EAAQ0a,EAAM,WAAe,IAG7B1a,KAAU0a,EAAM,YAEN,YAHV3a,KAAU2a,EAAM,aAIZ3a,EAAOA,EAAM,EAAK,GAElBA,EAAM,EACNC,EAAQA,EAAO,EAAK,IAI5B,GAAI0a,GAAO,qBAAuBA,GAAO,oBACrC,MAAM,IAAIrT,MAAM,0CAGpB2iL,EAAImB,QAAQ,IAMhB,SAA2BprL,EAAKC,EAAMgqL,GAClCA,EAAItqC,IAAIsqC,EAAIljI,OAAe,IAAN/mD,EAAa,IAAMA,KAAS,EACjDiqL,EAAItqC,IAAIsqC,EAAIljI,OAAe,IAAN/mD,EAAa,IAAMA,KAAS,EACjDiqL,EAAItqC,IAAIsqC,EAAIljI,OAAe,IAAN/mD,EAAa,IAAMA,KAAS,EACjDiqL,EAAItqC,IAAIsqC,EAAIljI,OAAe,IAAN/mD,EAAa,IAAMA,KAAS,EACjDiqL,EAAItqC,IAAIsqC,EAAIljI,KAAe,IAAN/mD,CACzB,CAVI4uL,CAAkB5uL,EAAKC,EAAMgqL,GAYjC,SAA4BhqL,EAAMgqL,GAC9B,IAAI4E,GAAc,EAAP5uL,IAAgB,EAEqC,GAAhEgqL,EAAItqC,IAAIsqC,EAAIljI,QAAU8nI,IAAgB5uL,KAAU,GAAK,IAAO,IAASA,EAAM,OACX,GAAhEgqL,EAAItqC,IAAIsqC,EAAIljI,OAAiB,IAAP9mD,IAAgBA,KAAU,GAAK,IAAO,IAASA,EAAM,OACX,GAAhEgqL,EAAItqC,IAAIsqC,EAAIljI,OAAiB,IAAP9mD,IAAgBA,KAAU,GAAK,IAAO,IAASA,EAAM,OACX,GAAhEgqL,EAAItqC,IAAIsqC,EAAIljI,OAAiB,IAAP9mD,IAAgBA,KAAU,GAAK,IAAO,IAASA,EAAM,OACX,GAAhEgqL,EAAItqC,IAAIsqC,EAAIljI,OAAiB,IAAP9mD,IAAgBA,KAAU,GAAK,IAAO,IAASA,EAAM,OAC3EgqL,EAAItqC,IAAIsqC,EAAIljI,OAAiB,IAAP9mD,CAC1B,CApBI6uL,CAAmB7uL,EAAMgqL,EAC7B,CA3LY8E,CAAep0K,EAAK5b,OAIxBA,KAAKqsL,QAAQ,GAEbrsL,KAAK4gJ,IAAI5gJ,KAAKgoD,OAAyB,IAANpsC,GAAeA,EAAM,IAAO,IAAO,GAAQA,GAAO,MACnF5b,KAAK4gJ,IAAI5gJ,KAAKgoD,OAAyB,KAAdpsC,KAAS,IAAcA,EAAM,IAAO,IAAO,GAAQA,GAAO,MACnF5b,KAAK4gJ,IAAI5gJ,KAAKgoD,OAAyB,KAAdpsC,KAAS,IAAcA,EAAM,IAAO,IAAO,GAAQA,GAAO,MACnF5b,KAAK4gJ,IAAI5gJ,KAAKgoD,OAAYpsC,IAAQ,EAAK,OAC1C,EAED6wK,aAAc,SAAS7wK,GACnB5b,KAAKusL,YAAY3wK,EAAM,EAAW,GAANA,EAAU,EAAU,EAANA,EAC7C,EAEDmxK,aAAc,SAASnxK,GACnB5b,KAAKusL,YAAY90I,QAAQ77B,GAC5B,EAEDq0K,YAAa,SAASpB,GAClBA,EAAMjmL,OAAOimL,GACb7uL,KAAKqsL,QAAqB,EAAbwC,EAAI1tL,QAEjBnB,KAAKgoD,MAEL,IAAImkI,EAAWnsL,KAAKgoD,IAEpBhoD,KAAKgoD,IAsSb,SAAmB44F,EAAKiuC,EAAK7mI,GACzB,IAAK,IAAWjxC,EAAGm5K,EAAVtuL,EAAI,EAAYA,EAAIitL,EAAI1tL,OAAQS,IAAK,CAG1C,IAFAmV,EAAI83K,EAAIpjG,WAAW7pF,IAEX,OAAUmV,EAAI,MAAQ,CAC1B,IAAIm5K,EAWG,CACCn5K,EAAI,OAAWnV,EAAI,IAAMitL,EAAI1tL,QAC7By/I,EAAI54F,KAAS,IACb44F,EAAI54F,KAAS,IACb44F,EAAI54F,KAAS,KAEbkoI,EAAOn5K,EAEX,QACH,CAnBG,GAAIA,EAAI,MAAQ,CACZ6pI,EAAI54F,KAAS,IACb44F,EAAI54F,KAAS,IACb44F,EAAI54F,KAAS,IACbkoI,EAAOn5K,EACP,QACpB,CACoBA,EAAIm5K,EAAO,OAAU,GAAKn5K,EAAI,MAAS,MACvCm5K,EAAO,IAYlB,MAAUA,IACPtvC,EAAI54F,KAAS,IACb44F,EAAI54F,KAAS,IACb44F,EAAI54F,KAAS,IACbkoI,EAAO,MAGPn5K,EAAI,IACJ6pI,EAAI54F,KAASjxC,GAETA,EAAI,KACJ6pI,EAAI54F,KAASjxC,GAAK,EAAM,KAEpBA,EAAI,MACJ6pI,EAAI54F,KAASjxC,GAAK,GAAM,KAExB6pI,EAAI54F,KAASjxC,GAAK,GAAO,IACzB6pI,EAAI54F,KAASjxC,GAAK,GAAM,GAAO,KAEnC6pI,EAAI54F,KAASjxC,GAAK,EAAM,GAAO,KAEnC6pI,EAAI54F,KAAa,GAAJjxC,EAAW,IAE/B,CACD,OAAOixC,CACX,CAzVmBmoI,CAAUnwL,KAAK4gJ,IAAKiuC,EAAK7uL,KAAKgoD,KACzC,IAAIhgD,EAAMhI,KAAKgoD,IAAMmkI,EAEjBnkL,GAAO,KAAMkkL,GAAuBC,EAAUnkL,EAAKhI,MAGvDA,KAAKgoD,IAAMmkI,EAAW,EACtBnsL,KAAKusL,YAAYvkL,GACjBhI,KAAKgoD,KAAOhgD,CACf,EAED2kL,WAAY,SAAS/wK,GACjB5b,KAAKqsL,QAAQ,GACb7B,GAAQ9Z,MAAM1wK,KAAK4gJ,IAAKhlI,EAAK5b,KAAKgoD,KAAK,EAAM,GAAI,GACjDhoD,KAAKgoD,KAAO,CACf,EAED6kI,YAAa,SAASjxK,GAClB5b,KAAKqsL,QAAQ,GACb7B,GAAQ9Z,MAAM1wK,KAAK4gJ,IAAKhlI,EAAK5b,KAAKgoD,KAAK,EAAM,GAAI,GACjDhoD,KAAKgoD,KAAO,CACf,EAEDooI,WAAY,SAAS12K,GACjB,IAAI1R,EAAM0R,EAAOvY,OACjBnB,KAAKusL,YAAYvkL,GACjBhI,KAAKqsL,QAAQrkL,GACb,IAAK,IAAIpG,EAAI,EAAGA,EAAIoG,EAAKpG,IAAK5B,KAAK4gJ,IAAI5gJ,KAAKgoD,OAAStuC,EAAO9X,EAC/D,EAEDyuL,gBAAiB,SAAS9sL,EAAImF,GAC1B1I,KAAKgoD,MAGL,IAAImkI,EAAWnsL,KAAKgoD,IACpBzkD,EAAGmF,EAAK1I,MACR,IAAIgI,EAAMhI,KAAKgoD,IAAMmkI,EAEjBnkL,GAAO,KAAMkkL,GAAuBC,EAAUnkL,EAAKhI,MAGvDA,KAAKgoD,IAAMmkI,EAAW,EACtBnsL,KAAKusL,YAAYvkL,GACjBhI,KAAKgoD,KAAOhgD,CACf,EAEDsoL,aAAc,SAASxC,EAAKvqL,EAAImF,GAC5B1I,KAAK4vL,SAAS9B,EAAK3C,GAAIM,OACvBzrL,KAAKqwL,gBAAgB9sL,EAAImF,EAC5B,EAED4jL,kBAAqB,SAASwB,EAAKrsL,GAAWA,EAAIN,QAAQnB,KAAKswL,aAAaxC,EAAKxB,GAAmB7qL,EAAS,EAC7G+qL,mBAAqB,SAASsB,EAAKrsL,GAAWA,EAAIN,QAAQnB,KAAKswL,aAAaxC,EAAKtB,GAAoB/qL,EAAQ,EAC7GqrL,mBAAqB,SAASgB,EAAKrsL,GAAWA,EAAIN,QAAQnB,KAAKswL,aAAaxC,EAAKhB,GAAoBrrL,EAAQ,EAC7GirL,iBAAqB,SAASoB,EAAKrsL,GAAWA,EAAIN,QAAQnB,KAAKswL,aAAaxC,EAAKpB,GAAkBjrL,EAAU,EAC7GmrL,kBAAqB,SAASkB,EAAKrsL,GAAWA,EAAIN,QAAQnB,KAAKswL,aAAaxC,EAAKlB,GAAmBnrL,EAAS,EAC7GurL,mBAAqB,SAASc,EAAKrsL,GAAWA,EAAIN,QAAQnB,KAAKswL,aAAaxC,EAAKd,GAAoBvrL,EAAQ,EAC7GyrL,oBAAqB,SAASY,EAAKrsL,GAAWA,EAAIN,QAAQnB,KAAKswL,aAAaxC,EAAKZ,GAAqBzrL,EAAO,EAC7G2rL,mBAAqB,SAASU,EAAKrsL,GAAWA,EAAIN,QAAQnB,KAAKswL,aAAaxC,EAAKV,GAAoB3rL,EAAQ,EAC7G6rL,oBAAqB,SAASQ,EAAKrsL,GAAWA,EAAIN,QAAQnB,KAAKswL,aAAaxC,EAAKR,GAAqB7rL,EAAO,EAE7G8uL,gBAAiB,SAASzC,EAAKp0K,GAC3B1Z,KAAK4vL,SAAS9B,EAAK3C,GAAIM,OACvBzrL,KAAKowL,WAAW12K,EACnB,EACD82K,kBAAmB,SAAS1C,EAAKlyK,GAC7B5b,KAAK4vL,SAAS9B,EAAK3C,GAAIO,SACvB1rL,KAAKitL,aAAarxK,EACrB,EACD60K,mBAAoB,SAAS3C,EAAKlyK,GAC9B5b,KAAK4vL,SAAS9B,EAAK3C,GAAIO,SACvB1rL,KAAKmtL,cAAcvxK,EACtB,EACD80K,kBAAmB,SAAS5C,EAAKlyK,GAC7B5b,KAAK4vL,SAAS9B,EAAK3C,GAAIK,SACvBxrL,KAAKqtL,aAAazxK,EACrB,EACD+0K,mBAAoB,SAAS7C,EAAKlyK,GAC9B5b,KAAK4vL,SAAS9B,EAAK3C,GAAIK,SACvBxrL,KAAKutL,cAAc3xK,EACtB,EACDg1K,iBAAkB,SAAS9C,EAAKlyK,GAC5B5b,KAAK4vL,SAAS9B,EAAK3C,GAAII,QACvBvrL,KAAKusL,YAAY3wK,EACpB,EACDi1K,kBAAmB,SAAS/C,EAAKlyK,GAC7B5b,KAAK4vL,SAAS9B,EAAK3C,GAAII,QACvBvrL,KAAKysL,aAAa7wK,EACrB,EACDk1K,iBAAkB,SAAShD,EAAKe,GAC5B7uL,KAAK4vL,SAAS9B,EAAK3C,GAAIM,OACvBzrL,KAAKiwL,YAAYpB,EACpB,EACDkC,gBAAiB,SAASjD,EAAKlyK,GAC3B5b,KAAK4vL,SAAS9B,EAAK3C,GAAIO,SACvB1rL,KAAK2sL,WAAW/wK,EACnB,EACDo1K,iBAAkB,SAASlD,EAAKlyK,GAC5B5b,KAAK4vL,SAAS9B,EAAK3C,GAAIK,SACvBxrL,KAAK6sL,YAAYjxK,EACpB,EACDq1K,kBAAmB,SAASnD,EAAKlyK,GAC7B5b,KAAK4wL,iBAAiB9C,EAAKr2I,QAAQ77B,GACtC,iBC1FL,SAASs1K,GAAgBpD,EAAKjnI,EAAQqkI,GACpC,GAAY,IAAR4C,EAAW,CACb,MAAMpgJ,EAAQ,CACZ/mC,KAAM,GACNqC,OAAQ,GACRi6D,SAAU,IAENjhE,EAAMkpL,EAAIa,aAAeb,EAAIljI,IACnCkjI,EAAI0C,WAAWuD,GAAgBzjJ,EAAO1rC,GACtC0rC,EAAMvsC,OAASusC,EAAMu1B,SAAS9hE,OAC1BusC,EAAMvsC,SACR0lD,EAAOnZ,EAAMj4B,MAAQi4B,EAExB,CACH,CAQA,SAASyjJ,GAAerD,EAAKpgJ,EAAOw9I,GAClC,GAAY,KAAR4C,EACFpgJ,EAAMmtE,QAAUqwE,EAAIa,kBACf,GAAY,IAAR+B,EACTpgJ,EAAMj4B,KAAOy1K,EAAIzY,kBACZ,GAAY,IAARqb,EACTpgJ,EAAMn0B,OAAS2xK,EAAIa,kBACd,GAAY,IAAR+B,EACTpgJ,EAAMu1B,SAASt9D,KAAKulL,EAAIljI,UACnB,GAAY,IAAR8lI,EACTpgJ,EAAM/mC,KAAKhB,KAAKulL,EAAIzY,mBACf,GAAY,IAARqb,EAAW,CACpB,IAAIzpL,EAAQ,KACZ,MAAMrC,EAAMkpL,EAAIa,aAAeb,EAAIljI,IACnC,KAAOkjI,EAAIljI,IAAMhmD,GAEfqC,EACU,KAFVypL,EAAM5C,EAAIa,cAAgB,GAGpBb,EAAIzY,aACI,IAARqb,EACA5C,EAAImD,YACI,IAARP,EACA5C,EAAIqD,aACI,IAART,EACA5C,EAAIuD,eACI,IAARX,EACA5C,EAAIa,aACI,IAAR+B,EACA5C,EAAIwD,cACI,IAARZ,EACA5C,EAAIjZ,cACJ,KAERvkI,EAAM1kC,OAAOrD,KAAKtB,EACnB,CACH,CAQA,SAAS+sL,GAAiBtD,EAAKruI,EAASyrI,GACtC,GAAW,GAAP4C,EACFruI,EAAQlyC,GAAK29K,EAAIa,kBACZ,GAAW,GAAP+B,EAAU,CACnB,MAAM9rL,EAAMkpL,EAAIa,aAAeb,EAAIljI,IACnC,KAAOkjI,EAAIljI,IAAMhmD,GAAK,CACpB,MAAMuF,EAAMk4C,EAAQ/R,MAAM/mC,KAAKukL,EAAIa,cAC7B1nL,EAAQo7C,EAAQ/R,MAAM1kC,OAAOkiL,EAAIa,cACvCtsI,EAAQ5qC,WAAWtN,GAAOlD,CAC3B,CACL,MAAoB,GAAPypL,EACTruI,EAAQ1/C,KAAOmrL,EAAIa,aACH,GAAP+B,IACTruI,EAAQ9qC,SAAWu2K,EAAIljI,IAE3B,CASA,SAASqpI,GAAenG,EAAKx9I,EAAO9rC,GAClCspL,EAAIljI,IAAMta,EAAMu1B,SAASrhE,GACzB,MAAMI,EAAMkpL,EAAIa,aAAeb,EAAIljI,IAE7BvI,EAAU,CACd/R,MAAOA,EACP3tC,KAAM,EACN8U,WAAY,CAAE,GAGhB,OADAq2K,EAAI0C,WAAWwD,GAAkB3xI,EAASz9C,GACnCy9C,CACT,CAuBA,IAAA6xI,GA1YA,cAAkBngB,GAIhB,WAAArxK,CAAY4K,GACVzF,QAEAyF,EAAUA,GAAoB,GAK9B1K,KAAKguE,eAAiB,IAAIxrD,GAAW,CACnCrC,KAAM,GACNsC,MAAO,gBAOTziB,KAAKuxL,cAAgB7mL,EAAQulK,aACzBvlK,EAAQulK,aACRh2E,GAMJj6F,KAAKsU,cAAgB5J,EAAQ8yJ,aAM7Bx9J,KAAKwxL,WAAa9mL,EAAQ+mL,UAAY/mL,EAAQ+mL,UAAY,QAM1DzxL,KAAK02G,QAAUhsG,EAAQm8C,OAASn8C,EAAQm8C,OAAS,KAMjD7mD,KAAK0xL,YAAchnL,EAAQinL,WAE3B3xL,KAAKipG,oBAAsB,CACzB,qCACA,yBAEH,CAWD,gBAAA2oF,CAAiB1G,EAAKzrI,EAAS5kC,EAAiB6V,GAC9Cw6J,EAAIljI,IAAMvI,EAAQ9qC,SAElB,MAAM3S,EAAMkpL,EAAIa,aAAeb,EAAIljI,IACnC,IAAI6pI,EAAM,EACN1wL,EAAS,EACTiW,EAAI,EACJC,EAAI,EACJy6K,EAAY,EACZC,EAAa,EAEjB,KAAO7G,EAAIljI,IAAMhmD,GAAK,CACpB,IAAKb,EAAQ,CACX,MAAM6wL,EAAS9G,EAAIa,aACnB8F,EAAe,EAATG,EACN7wL,EAAS6wL,GAAU,CACpB,CAID,GAFA7wL,IAEY,IAAR0wL,GAAqB,IAARA,EACfz6K,GAAK8zK,EAAIwD,cACTr3K,GAAK6zK,EAAIwD,cAEG,IAARmD,GAEEC,EAAYC,IACdrhK,EAAK/qB,KAAKmsL,GACVC,EAAaD,GAIjBj3K,EAAgBlV,KAAKyR,EAAGC,GACxBy6K,GAAa,MACR,IAAY,IAARD,EAUT,MAAM,IAAItpL,MAAM,oCATZupL,EAAYC,IAEdl3K,EAAgBlV,KACdkV,EAAgBk3K,GAChBl3K,EAAgBk3K,EAAa,IAE/BD,GAAa,EAIhB,CACF,CAEGA,EAAYC,IACdrhK,EAAK/qB,KAAKmsL,GACVC,EAAaD,EAEhB,CASD,cAAAG,CAAe/G,EAAKgH,EAAYxnL,GAC9B,MAAM3K,EAAOmyL,EAAWnyL,KACxB,GAAa,IAATA,EACF,OAAO,KAGT,IAAI0/C,EACJ,MAAMz2C,EAASkpL,EAAWr9K,WAE1B,IAAItH,EACCvN,KAAK0xL,aAGRnkL,EAAKvE,EAAOhJ,KAAK0xL,oBACV1oL,EAAOhJ,KAAK0xL,cAHnBnkL,EAAK2kL,EAAW3kL,GAMlBvE,EAAOhJ,KAAKwxL,YAAcU,EAAWxkJ,MAAMj4B,KAE3C,MAAMoF,EAAgD,GAChD6V,EAAqC,GAC3C1wB,KAAK4xL,iBAAiB1G,EAAKgH,EAAYr3K,EAAiB6V,GAExD,MAAMkqE,EAuOV,SAAyB76F,EAAMswH,GAE7B,IAAIz1B,EACS,IAAT76F,EACF66F,EAA2B,IAAZy1B,EAAgB,QAAU,aACvB,IAATtwH,EACT66F,EAA2B,IAAZy1B,EAAgB,aAAe,kBAC5B,IAATtwH,IACT66F,EAAe,WAIjB,OAAOA,CACT,CApPyBu3F,CAAgBpyL,EAAM2wB,EAAKvvB,QAEhD,GAAInB,KAAKuxL,gBAAkBt3F,GACzBx6C,EAAU,IAAIz/C,KAAKuxL,cACjB32F,EACA//E,EACA6V,EACA,EACA1nB,EACAuE,GAEFkyC,EAAQ1pC,UAAUrL,EAAQsjE,oBACrB,CACL,IAAI+mE,EACJ,GAAoB,WAAhBn6C,EAA2B,CAC7B,MAAMhqE,EAAQ+E,GAAY9a,EAAiB6V,GAC3CqkH,EACEnkH,EAAMzvB,OAAS,EACX,IAAIi5E,GAAav/D,EAAiB,KAAM+V,GACxC,IAAImF,GAAQlb,EAAiB,KAAM6V,EACjD,MACQqkH,EACmB,UAAjBn6C,EACI,IAAItnE,GAAMzY,EAAiB,MACV,eAAjB+/E,EACA,IAAI7gB,GAAWl/D,EAAiB,MACf,eAAjB+/E,EACA,IAAI1gB,GAAWr/D,EAAiB,MACf,oBAAjB+/E,EACA,IAAIzgB,GAAgBt/D,EAAiB,KAAM6V,GAC3C,KAKR+uB,EAAU,IAAI2yI,EAFZpyL,KACR,eAEUA,KAAKsU,eACPmrC,EAAQ1qC,gBAAgB/U,KAAKsU,eAE/B,MAAMK,EAAW87J,GAA6B17B,GAAM,EAAOrqI,GAC3D+0C,EAAQ7qC,YAAYD,QACTnO,IAAP+G,GACFkyC,EAAQjqC,MAAMjI,GAEhBkyC,EAAQv2C,cAAcF,GAAQ,EAC/B,CAED,OAAOy2C,CACR,CAKD,OAAAjxB,GACE,MAAO,aACR,CAUD,YAAAm/C,CAAa1jE,EAAQS,GACnB,MAAMm8C,EAAS7mD,KAAK02G,QAEd1oC,EAAiB7kE,IADvBuB,EAAU1K,KAAKmwK,aAAazlK,IACOsjE,gBACnCA,EAAensD,eAAenX,EAAQ6O,QACtC7O,EAAQsjE,eAAiBA,EAEzB,MAAMk9G,EAAM,IAAImH,GAAgC,GAC1CC,EAAYpH,EAAI0C,WAAWsD,GAAiB,CAAE,GAC9CjuH,EAAW,GACjB,IAAK,MAAMxtD,KAAQ68K,EAAW,CAC5B,GAAIzrI,IAAWA,EAAOnhD,SAAS+P,GAC7B,SAEF,MAAM88K,EAAWD,EAAU78K,GAErB8D,EAASg5K,EAAW,CAAC,EAAG,EAAGA,EAASh5K,OAAQg5K,EAASh5K,QAAU,KACrEy0D,EAAepsD,UAAUrI,GAEzB,IAAK,IAAI3X,EAAI,EAAGuE,EAAKosL,EAASpxL,OAAQS,EAAIuE,IAAMvE,EAAG,CACjD,MAAMswL,EAAab,GAAenG,EAAKqH,EAAU3wL,GAC3C69C,EAAUz/C,KAAKiyL,eAAe/G,EAAKgH,EAAYxnL,GACrC,OAAZ+0C,GACFwjB,EAASt9D,KAAK85C,EAEjB,CACF,CAED,OAAOwjB,CACR,CASD,cAAA4K,CAAe5jE,GACb,OAAOjK,KAAKguE,cACb,CAOD,SAAA5mB,CAAUP,GACR7mD,KAAK02G,QAAU7vD,CAChB,GCzRH,MAAM8sH,GAAiB,CAAC,MAOlB6e,GAAc1yE,GAAgB6zD,GAAgB,CAClD8e,GA6JF,SAAgBnhL,EAAMktG,GACpB,MAAMx1G,EAAgCw1G,EAAYA,EAAYr9G,OAAS,GACvE6H,EAAO0pL,OAAO/sL,KAAK2L,EAAK2lK,aAAa,QACjC3lK,EAAKulD,aAAa,QAAUvlD,EAAKulD,aAAa,SAChD7tD,EAAO6R,gBAAgBlV,KAAKklC,WAAWv5B,EAAK2lK,aAAa,SACzDjuK,EAAO6R,gBAAgBlV,KAAKklC,WAAWv5B,EAAK2lK,aAAa,SAE7D,EAnKE6W,IAAO6E,KAQHC,GAAU9yE,GAAgB6zD,GAAgB,CAC9CriK,KAyFF,SAAkBA,EAAMktG,GACtB,MAAM9zG,EACJ8zG,EAAY,GAERjyG,EAA+BiyG,EAAYA,EAAYr9G,OAAS,GAChEoM,EAAK+D,EAAK2lK,aAAa,MAEvB39J,EAAc,CAClBuxB,WAAWv5B,EAAK2lK,aAAa,QAC7BpsI,WAAWv5B,EAAK2lK,aAAa,SAE/B1qK,EAAM69J,MAAM78J,GAAM+L,EAElB,MAAMtQ,EAASu3G,GACb,CACEsyE,KAAM,CAAE,GAEVC,GACAxhL,EACAktG,GAEF,IAAK15G,EAAQkE,EAAO6pL,MAAO,CACzB,MAAMl+K,EAAW,IAAI2e,GAAMha,GAC3Bm3J,GAA6B97J,GAAU,EAAOjK,GAC9C,MAAM+0C,EAAU,IAAItrC,GAAQQ,QACjBnO,IAAP+G,GACFkyC,EAAQjqC,MAAMjI,GAEhBkyC,EAAQv2C,cAAcF,EAAO6pL,MAAM,GACnCtmL,EAAM02D,SAASt9D,KAAK85C,EACrB,CACH,EAvHEszI,IA6HF,SAAiBzhL,EAAMktG,GACrB,MACMx1G,EAASu3G,GACb,CACEhzG,GAHO+D,EAAK2lK,aAAa,MAIzByb,OAAQ,GACR73K,gBAAiB,GACjBg4K,KAAM,CAAE,GAEVL,GACAlhL,EACAktG,GAEmCA,EAAYA,EAAYr9G,OAAS,GAChE6xL,KAAKrtL,KAAKqD,EAClB,IA5DA,MAAM8pL,GAAehzE,GAAgB6zD,GAAgB,CACnDma,IAAO6E,KA8ET,SAASA,GAAQrhL,EAAMktG,GACiBA,EAAYA,EAAYr9G,OAAS,GAChE0xL,KAAKvhL,EAAK2lK,aAAa,MAAQ3lK,EAAK2lK,aAAa,IAC1D,CAEA,IAAAgc,GA1JA,cAAqB1b,GACnB,WAAAz3K,GACEmF,QAKAjF,KAAKguE,eAAiBt/C,GAAc,YACrC,CAQD,oBAAA6iJ,CAAqBjgK,EAAM5G,GAEzB,GADAA,EAAU1K,KAAKkwK,eAAe5+J,EAAM5G,GACd,OAAlB4G,EAAKstG,UAAoB,CAC3B,MAAMryG,EAAQg0G,GACZ,CACE6pD,MAAO,CAAE,EACT4oB,KAAM,GACN/vH,SAAU,IAEZ2vH,GACAthL,EACA,CAAC5G,IAGH,IAAK,IAAI0Z,EAAI,EAAGA,EAAI7X,EAAMymL,KAAK7xL,OAAQijB,IAAK,CAC1C,MAAMpb,EAAgCuD,EAAMymL,KAAK5uK,GAE3CvJ,EAAkB7R,EAAO6R,gBAC/B,IAAKA,EAAgB1Z,OACnB,IAAK,IAAIS,EAAI,EAAGuE,EAAK6C,EAAO0pL,OAAOvxL,OAAQS,EAAIuE,EAAIvE,IAAK,CAEtDM,EAAO2Y,EADOtO,EAAM69J,MAAMphK,EAAO0pL,OAAO9wL,IAEzC,CAEH,IAAI+S,EAGFA,EAFE3L,EAAO0pL,OAAO,IAAM1pL,EAAO0pL,OAAO1pL,EAAO0pL,OAAOvxL,OAAS,GAEhD,IAAI40B,GAAQlb,EAAiB,KAAM,CAC5CA,EAAgB1Z,SAGP,IAAI44E,GAAWl/D,EAAiB,MAE7C41J,GAA6B97J,GAAU,EAAOjK,GAC9C,MAAM+0C,EAAU,IAAItrC,GAAQQ,QACVnO,IAAdwC,EAAOuE,IACTkyC,EAAQjqC,MAAMxM,EAAOuE,IAEvBkyC,EAAQv2C,cAAcF,EAAO6pL,MAAM,GACnCtmL,EAAM02D,SAASt9D,KAAK85C,EACrB,CACD,GAAIlzC,EAAM02D,SACR,OAAO12D,EAAM02D,QAEhB,CACD,MAAO,EACR,GCrDH,IAAAiwH,GA7CA,MAQE,IAAA5E,CAAKrkL,GACH,IAAKA,EACH,OAAO,KAET,GAAsB,iBAAXA,EAAqB,CAC9B,MAAMyhD,EAAM1gB,GAAM/gC,GAClB,OAAOjK,KAAKmzL,iBAAiBznI,EAC9B,CACD,OAAIyyD,GAAWl0G,GACNjK,KAAKmzL,iBAA0C,GAEjDnzL,KAAKozL,aAAqC,EAClD,CAMD,gBAAAD,CAAiBznI,GACf,IAAK,IAAI/pD,EAAI+pD,EAAItF,WAAYzkD,EAAGA,EAAIA,EAAEu8G,YACpC,GAAIv8G,EAAEk8G,UAAYC,KAAK0zD,aACrB,OAAOxxK,KAAKozL,aAAqC,GAGrD,OAAO,IACR,CAOD,YAAAA,CAAa9hL,GACXhJ,GACD,GC9CH,MAAM+qL,GAAgB,+BAMf,SAASC,GAAShiL,GACvB,OAAOA,EAAK8sG,eAAei1E,GAAe,OAC5C,CCCA,MAAM1f,GAAiB,CAAC,KAAM,kCAOxBif,GAAU9yE,GAAgB6zD,GAAgB,CAC9C4f,sBAAyB10E,IA4Q3B,SAAmCvtG,EAAMktG,GACvC,OAAO+B,GAAgB,CAAE,EAAEizE,GAAgCliL,EAAMktG,EACnE,IA7QEi1E,gBAAmB50E,IA6RrB,SAA6BvtG,EAAMktG,GACjC,OAAO+B,GAAgB,CAAE,EAAEmzE,GAA0BpiL,EAAMktG,EAC7D,IA9REm1E,mBAAsB90E,IAwPxB,SAAgCvtG,EAAMktG,GACpC,OAAO+B,GAAgB,CAAE,EAAEqzE,GAA6BtiL,EAAMktG,EAChE,MAnOA,MAAMq1E,GAAkB/zE,GAAgB6zD,GAAgB,CACtDmgB,cAAiBj1E,GAAyB4zD,IAC1CshB,KAAQl1E,GAAyB4zD,IACjCuhB,mBAAsBn1E,GAAyB4zD,IAC/CwhB,WAAcp1E,GAAyB4zD,IACvCyhB,QAAWr1E,GAAyB4zD,IACpC0hB,sBAAyBt1E,GAAyB4zD,MAQ9C2hB,GAAyBt0E,GAAgB6zD,GAAgB,CAC7D0gB,MAAS11E,IA+PX,SAAmBrtG,EAAMktG,GACvB,OAAOi0D,GAAWnhK,EACpB,MAzPMgjL,GAAqBx0E,GAAgB6zD,GAAgB,CACzD4gB,cAAiB11E,IAuHnB,SAA2BvtG,EAAMktG,GAC/B,OAAO+B,GAAgB,CAAE,EAAE6zE,GAAwB9iL,EAAMktG,EAC3D,MAjHMg2E,GAAuB10E,GAAgB6zD,GAAgB,CAC3D8gB,MAAS51E,IAyMX,SAAmBvtG,EAAMktG,GACvB,OAAO+B,GAAgB,CAAE,EAAEm0E,GAAepjL,EAAMktG,EAClD,IA1MEm2E,QAAW91E,IAoGb,SAAqBvtG,EAAMktG,GACzB,OAAO+B,GAAgB,CAAE,EAAEszE,GAAiBviL,EAAMktG,EACpD,MA9FMo2E,GAAc90E,GAAgB6zD,GAAgB,CAClDkhB,KAAQh2E,IA8JV,SAAkBvtG,EAAMktG,GACtB,OAAO+B,GAAgB,CAAE,EAAEu0E,GAAcxjL,EAAMktG,EACjD,MAxJMs2E,GAAeh1E,GAAgB6zD,GAAgB,CACnD5wC,IAAOpkB,IAmIT,SAAiBrtG,EAAMktG,GACrB,MAAMtvC,EAAOokH,GAAShiL,GACtB,IAAK49D,EACH,OAEF,OAAOqxC,GACL,CAACrxC,KAAQA,GACT6lH,GACAzjL,EACAktG,EAEJ,IA7IEw2E,UAAQxuL,IAQJyuL,GAAoBn1E,GAAgB6zD,GAAgB,CACxDuhB,IAAOr2E,IAgHT,SAAiBvtG,EAAMktG,GACrB,OAAO+B,GAAgB,CAAE,EAAEq0E,GAAatjL,EAAMktG,EAChD,MA1GMo1E,GAA8B9zE,GAAgB6zD,GAAgB,CAClEwhB,UA2IF,SAAuB7jL,EAAMktG,GAC3B,MAAM/oG,EAAOnE,EAAK2lK,aAAa,QACzB5yK,EAAQk8G,GAAgB,CAAA,EAAI00E,GAAmB3jL,EAAMktG,GAC3D,IAAKn6G,EACH,OAEoCm6G,EAAYA,EAAYr9G,OAAS,GAChEsU,GAAQpR,CACjB,IA3IMqwL,GAAgB50E,GAAgB6zD,GAAgB,CACpDyhB,MAASv2E,GAAyB4zD,IAClC4iB,UAAax2E,GAAyB4zD,MAQlCsiB,GAAyBj1E,GAAgB6zD,GAAgB,CAC7D2hB,WAAc32E,IA8DhB,SAAwBrtG,EAAMktG,GAC5B,MAAM/oG,EAAOnE,EAAK2lK,aAAa,QAC/B,IAAKxhK,EACH,OAEF,OAAO8qG,GAAgB,CAAC9qG,KAAQA,GAAO6+K,GAAoBhjL,EAAMktG,EACnE,MA5DM+2E,GAA0Bz1E,GAAgB6zD,GAAgB,CAC9D6hB,eAAkB32E,GAAyB4zD,IAC3CgjB,aAAgB52E,GAAyB4zD,IACzCijB,YAAe72E,IAgEjB,SAAyBvtG,EAAMktG,GAC7B,OAAO+B,GAAgB,CAAE,EAAEi0E,GAAsBljL,EAAMktG,EACzD,MA1DMg1E,GAAiC1zE,GAAgB6zD,GAAgB,CACrEgiB,SAAY92E,GAAyB4zD,IACrCmjB,kBAAqB/2E,GAAyB4zD,IAC9CojB,KAAQh3E,GAAyB4zD,IACjCqjB,MAASj3E,GAAyB4zD,IAClCsjB,mBAAsBl3E,GAAyB4zD,IAC/CujB,YAAen3E,GAAyB4zD,MAQpCihB,GAA2B5zE,GAAgB6zD,GAAgB,CAC/DsiB,aAAgBp3E,GAAyB4zD,IACzCyjB,aAAgBr3E,GAAyBy0E,IACzC6C,eAAkBt3E,IA8HpB,SAA4BvtG,EAAMktG,GAChC,OAAO+B,GAAgB,CAAE,EAAEg1E,GAAyBjkL,EAAMktG,EAC5D,MAoBA,IAAA43E,GAtSA,cAAkBC,GAChB,WAAAv2L,GACEmF,OACD,CAMD,YAAAmuL,CAAa9hL,GACX,MAAMglL,EAAY/1E,GAAgB,CAAA,EAAIqyE,GAASthL,EAAM,IACrD,OAAOglL,GAAwB,IAChC,GC2HI,SAASC,GAAaC,EAASz7K,EAAQgK,GAE5C,IAAI/N,EADJ+N,EAASA,GAAkB,IAG3B,MAAM0xK,EAAc,IAAIp0L,MAAM0Y,GAC9B,IAAK/D,EAAI,EAAGA,EAAI+D,IAAU/D,EACxBy/K,EAAYz/K,GAAK,EAGnB,IAAK,IAAIpV,EAAI,EAAGuE,EAAKqwL,EAAQr1L,OAAQS,EAAIuE,GACvC,IAAK6Q,EAAI,EAAGA,EAAI+D,IAAU/D,IAAKpV,EAAG,CAChC,MAAM2oJ,EAAMisC,EAAQ50L,GACd8L,EAAQ68I,EAAMksC,EAAYz/K,GAChCy/K,EAAYz/K,GAAKuzI,EAEjBisC,EAAQ50L,GAAK8L,CACd,CAGH,OAAOgpL,GAAaF,EAASzxK,EAC/B,CAaO,SAAS4xK,GAAah0D,EAAS5nH,EAAQgK,GAE5C,IAAI/N,EADJ+N,EAASA,GAAkB,IAI3B,MAAM0xK,EAAc,IAAIp0L,MAAM0Y,GAC9B,IAAK/D,EAAI,EAAGA,EAAI+D,IAAU/D,EACxBy/K,EAAYz/K,GAAK,EAGnB,MAAMw/K,EAAUI,GAAaj0D,EAAS59G,GAEtC,IAAK,IAAInjB,EAAI,EAAGuE,EAAKqwL,EAAQr1L,OAAQS,EAAIuE,GACvC,IAAK6Q,EAAI,EAAGA,EAAI+D,IAAU/D,IAAKpV,EAC7B60L,EAAYz/K,IAAMw/K,EAAQ50L,GAE1B40L,EAAQ50L,GAAK60L,EAAYz/K,GAI7B,OAAOw/K,CACT,CAcO,SAASE,GAAaF,EAASzxK,GACpCA,EAASA,GAAkB,IAC3B,IAAK,IAAInjB,EAAI,EAAGuE,EAAKqwL,EAAQr1L,OAAQS,EAAIuE,IAAMvE,EAC7C40L,EAAQ50L,GAAKoK,KAAKgZ,MAAMwxK,EAAQ50L,GAAKmjB,GAGvC,OAAO8xK,GAAqBL,EAC9B,CAWO,SAASI,GAAaj0D,EAAS59G,GACpCA,EAASA,GAAkB,IAC3B,MAAMyxK,EAAUM,GAAqBn0D,GACrC,IAAK,IAAI/gI,EAAI,EAAGuE,EAAKqwL,EAAQr1L,OAAQS,EAAIuE,IAAMvE,EAC7C40L,EAAQ50L,IAAMmjB,EAEhB,OAAOyxK,CACT,CAUO,SAASK,GAAqBL,GACnC,IAAK,IAAI50L,EAAI,EAAGuE,EAAKqwL,EAAQr1L,OAAQS,EAAIuE,IAAMvE,EAAG,CAChD,MAAM2oJ,EAAMisC,EAAQ50L,GACpB40L,EAAQ50L,GAAK2oJ,EAAM,IAAMA,GAAO,GAAKA,GAAO,CAC7C,CACD,OAAOwsC,GAAuBP,EAChC,CAQO,SAASM,GAAqBn0D,GACnC,MAAM6zD,EAAUQ,GAAuBr0D,GACvC,IAAK,IAAI/gI,EAAI,EAAGuE,EAAKqwL,EAAQr1L,OAAQS,EAAIuE,IAAMvE,EAAG,CAChD,MAAM2oJ,EAAMisC,EAAQ50L,GACpB40L,EAAQ50L,GAAW,EAAN2oJ,IAAYA,GAAO,GAAKA,GAAO,CAC7C,CACD,OAAOisC,CACT,CAQO,SAASO,GAAuBP,GACrC,IAAI7zD,EAAU,GACd,IAAK,IAAI/gI,EAAI,EAAGuE,EAAKqwL,EAAQr1L,OAAQS,EAAIuE,IAAMvE,EAC7C+gI,GAAWs0D,GAAsBT,EAAQ50L,IAE3C,OAAO+gI,CACT,CAQO,SAASq0D,GAAuBr0D,GACrC,MAAM6zD,EAAU,GAChB,IAAIU,EAAU,EACVrnL,EAAQ,EACZ,IAAK,IAAIjO,EAAI,EAAGuE,EAAKw8H,EAAQxhI,OAAQS,EAAIuE,IAAMvE,EAAG,CAChD,MAAMN,EAAIqhI,EAAQl3C,WAAW7pF,GAAK,GAClCs1L,IAAgB,GAAJ51L,IAAauO,EACrBvO,EAAI,IACNk1L,EAAQ7wL,KAAKuxL,GACbA,EAAU,EACVrnL,EAAQ,GAERA,GAAS,CAEZ,CACD,OAAO2mL,CACT,CAQO,SAASS,GAAsB1sC,GACpC,IAAIlmJ,EACFs+H,EAAU,GACZ,KAAO4nB,GAAO,IACZlmJ,EAAgC,IAAvB,GAAc,GAANkmJ,GACjB5nB,GAAW/5H,OAAOgjF,aAAavnF,GAC/BkmJ,IAAQ,EAIV,OAFAlmJ,EAAQkmJ,EAAM,GACd5nB,GAAW/5H,OAAOgjF,aAAavnF,GACxBs+H,CACT,CAEA,IAAAw0D,GA3TA,cAAuBrc,GAIrB,WAAAh7K,CAAY4K,GACVzF,QAEAyF,EAAUA,GAAoB,GAK9B1K,KAAKguE,eAAiBt/C,GAAc,aAMpC1uB,KAAKo3L,QAAU1sL,EAAQqa,OAASra,EAAQqa,OAAS,IAMjD/kB,KAAKw8J,gBAAkB9xJ,EAAQ+xJ,eAC3B/xJ,EAAQ+xJ,eACR,IACL,CAQD,mBAAAyd,CAAoBx3H,EAAMh4C,GACxB,MAAMiK,EAAW3U,KAAKo6K,qBAAqB13H,EAAMh4C,GACjD,OAAO,IAAIyJ,GAAQQ,EACpB,CAQD,oBAAAwlK,CAAqBz3H,EAAMh4C,GAEzB,MAAO,CADS1K,KAAKk6K,oBAAoBx3H,EAAMh4C,GAEhD,CAQD,oBAAA0vK,CAAqB13H,EAAMh4C,GACzB,MAAMqQ,EAASmU,GAAmBlvB,KAAKw8J,iBACjC3hJ,EAAkB87K,GAAaj0I,EAAM3nC,EAAQ/a,KAAKo3L,SACxDvnB,GAAOh1J,EAAiB,EAAGA,EAAgB1Z,OAAQ4Z,EAAQF,GAC3D,MAAMvB,EAAcmZ,GAClB5X,EACA,EACAA,EAAgB1Z,OAChB4Z,GAIF,OAAO01J,GAFY,IAAI12F,GAAWzgE,EAAatZ,KAAKw8J,kBAIlD,EACAx8J,KAAKmwK,aAAazlK,GAErB,CAQD,gBAAA4vK,CAAiB76H,EAAS/0C,GACxB,MAAMiK,EAAW8qC,EAAQxqC,cACzB,GAAIN,EACF,OAAO3U,KAAKw6K,kBAAkB7lK,EAAUjK,GAE1C,MAAM,IAAInC,MAAM,wCACjB,CAQD,iBAAAgyK,CAAkBt3G,EAAUv4D,GAC1B,OAAO1K,KAAKs6K,iBAAiBr3G,EAAS,GAAIv4D,EAC3C,CAQD,iBAAA8vK,CAAkB7lK,EAAUjK,GAM1B,MAAMmQ,GALNlG,EAGI87J,GAA6B97J,GAAU,EAAM3U,KAAKmwK,aAAazlK,KAElC2kB,qBAC3BtU,EAASpG,EAAS2a,YAExB,OADAugJ,GAAOh1J,EAAiB,EAAGA,EAAgB1Z,OAAQ4Z,EAAQF,GACpD07K,GAAa17K,EAAiBE,EAAQ/a,KAAKo3L,QACnD,GCkBH,MAAMC,GAAmB,CACvB/jK,MAmDF,SAA2B1uB,EAAQ8S,EAAOE,GACxC,MAAM0B,EAAc1U,EAAoB,YACpC8S,GAASE,GACX0/K,GAAgBh+K,EAAa5B,EAAOE,GAEtC,OAAO,IAAI0b,GAAMha,EACnB,EAxDEygE,WAmFF,SAAgCn1E,EAAQ2yL,GACtC,MAAMj+K,EAAck+K,GAAgB5yL,EAAa,KAAG2yL,GACpD,OAAO,IAAIx9G,GAAWzgE,EACxB,EArFEyc,QA6GF,SAA6BnxB,EAAQ2yL,GACnC,MAAMj+K,EAAc,GACpB,IAAK,IAAI1X,EAAI,EAAGuE,EAAKvB,EAAa,KAAEzD,OAAQS,EAAIuE,IAAMvE,EACpD0X,EAAY1X,GAAK41L,GAAgB5yL,EAAa,KAAEhD,GAAI21L,GAEtD,OAAO,IAAIxhK,GAAQzc,EACrB,EAlHE4gE,WAgEF,SAAgCt1E,EAAQ8S,EAAOE,GAC7C,MAAM0B,EAAc1U,EAAoB,YACxC,GAAI8S,GAASE,EACX,IAAK,IAAIhW,EAAI,EAAGuE,EAAKmT,EAAYnY,OAAQS,EAAIuE,IAAMvE,EACjD01L,GAAgBh+K,EAAY1X,GAAI8V,EAAOE,GAG3C,OAAO,IAAIsiE,GAAW5gE,EACxB,EAvEE6gE,gBA4FF,SAAqCv1E,EAAQ2yL,GAC3C,MAAMj+K,EAAc,GACpB,IAAK,IAAI1X,EAAI,EAAGuE,EAAKvB,EAAa,KAAEzD,OAAQS,EAAIuE,IAAMvE,EACpD0X,EAAY1X,GAAK41L,GAAgB5yL,EAAa,KAAEhD,GAAI21L,GAEtD,OAAO,IAAIp9G,GAAgB7gE,EAC7B,EAjGE8gE,aAyHF,SAAkCx1E,EAAQ2yL,GACxC,MAAMj+K,EAAc,GACpB,IAAK,IAAI1X,EAAI,EAAGuE,EAAKvB,EAAa,KAAEzD,OAAQS,EAAIuE,IAAMvE,EAAG,CAEvD,MAAM61L,EAAY7yL,EAAa,KAAEhD,GAC3B81L,EAAa,GACnB,IAAK,IAAItzK,EAAI,EAAG2G,EAAK0sK,EAAUt2L,OAAQijB,EAAI2G,IAAM3G,EAE/CszK,EAAWtzK,GAAKozK,GAAgBC,EAAUrzK,GAAImzK,GAEhDj+K,EAAY1X,GAAK81L,CAClB,CACD,OAAO,IAAIt9G,GAAa9gE,EAC1B,GA3HA,SAASk+K,GAAgBG,EAASJ,GAEhC,MAAMj+K,EAAc,GACpB,IAAIrW,EACJ,IAAK,IAAIrB,EAAI,EAAGuE,EAAKwxL,EAAQx2L,OAAQS,EAAIuE,IAAMvE,EAM7C,GALAqB,EAAQ00L,EAAQ/1L,GACZA,EAAI,GAEN0X,EAAYrO,MAEVhI,GAAS,EAAG,CAEd,MAAMixE,EAAMqjH,EAAKt0L,GACjB,IAAK,IAAImhB,EAAI,EAAG2G,EAAKmpD,EAAI/yE,OAAQijB,EAAI2G,IAAM3G,EACzC9K,EAAY3T,KAAKuuE,EAAI9vD,GAAGtgB,MAAM,GAEtC,KAAW,CAEL,MAAMowE,EAAMqjH,GAAMt0L,GAClB,IAAK,IAAImhB,EAAI8vD,EAAI/yE,OAAS,EAAGijB,GAAK,IAAKA,EACrC9K,EAAY3T,KAAKuuE,EAAI9vD,GAAGtgB,MAAM,GAEjC,CAEH,OAAOwV,CACT,CAkHA,SAASs+K,GACP9vI,EACAyvI,EACA7/K,EACAE,EACA/S,EACA4Q,EACA/K,GAEA,MAAMgqE,EAAa5sB,EAAuB,WACpCmb,EAAW,GACjB,IAAK,IAAIrhE,EAAI,EAAGuE,EAAKuuE,EAAWvzE,OAAQS,EAAIuE,IAAMvE,EAChDqhE,EAASrhE,GAAKi2L,GACZnjH,EAAW9yE,GACX21L,EACA7/K,EACAE,EACA/S,EACA4Q,EACA/K,GAGJ,OAAOu4D,CACT,CAeA,SAAS40H,GACPjzL,EACA2yL,EACA7/K,EACAE,EACA/S,EACA4Q,EACA/K,GAEA,IAAIiK,EAAW,KACf,MAAM5U,EAAO6E,EAAO7E,KACpB,GAAIA,EAAM,CACR,MAAM+3L,EAAiBT,GAAiBt3L,GAEtC4U,EADW,UAAT5U,GAA6B,eAATA,EACX+3L,EAAelzL,EAAQ8S,EAAOE,GAE9BkgL,EAAelzL,EAAQ2yL,GAEpC5iL,EAAW87J,GAA6B97J,GAAU,EAAOjK,EAC1D,CACD,MAAM+0C,EAAU,IAAItrC,GAAQ,CAACQ,SAAUA,SACrBnO,IAAd5B,EAAO2I,IACTkyC,EAAQjqC,MAAM5Q,EAAO2I,IAEvB,IAAIsH,EAAajQ,EAAOiQ,WAUxB,OATIhQ,IACGgQ,IACHA,EAAa,CAAA,GAEfA,EAAWhQ,GAAY4Q,GAErBZ,GACF4qC,EAAQv2C,cAAc2L,GAAY,GAE7B4qC,CACT,CAuBA,SAASs4I,GAAa7jH,EAAKx8D,EAAOE,GAChC,IAAIR,EAAI,EACJC,EAAI,EACR,IAAK,IAAIzV,EAAI,EAAGuE,EAAK+tE,EAAI/yE,OAAQS,EAAIuE,IAAMvE,EAAG,CAC5C,MAAM2hK,EAASrvF,EAAItyE,GACnBwV,GAAKmsJ,EAAO,GACZlsJ,GAAKksJ,EAAO,GACZA,EAAO,GAAKnsJ,EACZmsJ,EAAO,GAAKlsJ,EACZigL,GAAgB/zB,EAAQ7rJ,EAAOE,EAChC,CACH,CAUA,SAAS0/K,GAAgB/zB,EAAQ7rJ,EAAOE,GACtC2rJ,EAAO,GAAKA,EAAO,GAAK7rJ,EAAM,GAAKE,EAAU,GAC7C2rJ,EAAO,GAAKA,EAAO,GAAK7rJ,EAAM,GAAKE,EAAU,EAC/C,CAEA,IAAAogL,GArYA,cAAuBve,GAIrB,WAAA35K,CAAY4K,GACVzF,QAEAyF,EAAUA,GAAoB,GAM9B1K,KAAKwxL,WAAa9mL,EAAQ+mL,UAM1BzxL,KAAK02G,QAAUhsG,EAAQm8C,OAASn8C,EAAQm8C,OAAS,KAKjD7mD,KAAKguE,eAAiBt/C,GACpBhkB,EAAQsjE,eAAiBtjE,EAAQsjE,eAAiB,YAErD,CAQD,sBAAAiqG,CAAuBrzK,EAAQ8F,GAC7B,GAAmB,YAAf9F,EAAO7E,KAAoB,CAC7B,MAAMk4L,EAAoD,EAC1D,IAAIliL,EACF2B,EAAQ,KACRE,EAAY,KACVqgL,EAA4B,YAC9BliL,EAAYkiL,EAA4B,UACxCvgL,EAAQ3B,EAAiB,MACzB6B,EAAY7B,EAAqB,WAEnC,MAAMwhL,EAAOU,EAAuB,KAChCliL,GA+SV,SAAuBwhL,EAAM7/K,EAAOE,GAClC,IAAK,IAAIhW,EAAI,EAAGuE,EAAKoxL,EAAKp2L,OAAQS,EAAIuE,IAAMvE,EAC1Cm2L,GAAaR,EAAK31L,GAAI8V,EAAOE,EAEjC,CAlTQsgL,CAAcX,EAAM7/K,EAAOE,GAG7B,MAAMqrD,EAAW,GACXk1H,EAAmBF,EAA0B,QAC7CpzL,EAAW7E,KAAKwxL,WACtB,IAAI/xI,EACJ,IAAK,MAAM24I,KAAcD,EACnBn4L,KAAK02G,UAAY12G,KAAK02G,QAAQhxG,SAAS0yL,KAGD,uBAAtCD,EAAiBC,GAAYr4L,MAC/B0/C,EACE04I,EAAiBC,GAEnBn1H,EAASt9D,KAAKzB,MACZ++D,EACA20H,GACEn4I,EACA83I,EACA7/K,EACAE,EACA/S,EACAuzL,EACA1tL,MAIJ+0C,EACE04I,EAAiBC,GAEnBn1H,EAASt9D,KACPkyL,GACEp4I,EACA83I,EACA7/K,EACAE,EACA/S,EACAuzL,EACA1tL,MAKR,OAAOu4D,CACR,CACD,MAAO,EACR,CAOD,wBAAAk1G,CAAyBvzK,GACvB,OAAO5E,KAAKguE,cACb,GC7HI,MAAMqqH,GAAQ,6BASfC,GAAqB,QA6C3B,MAAMC,WAAgBhhB,GAIpB,WAAAz3K,CAAY4K,GACVzF,QAEAyF,EAAUA,GAAoB,GAM9B1K,KAAKw4L,YAAc9tL,EAAQ8tL,YAM3Bx4L,KAAKy4L,UAAY/tL,EAAQ+tL,UAMzBz4L,KAAK04L,QAAUhuL,EAAQguL,QAMvB14L,KAAK24L,eAAiB,GAKtB34L,KAAK44L,2BAA6B,GAClC54L,KAAK44L,2BAA2B54L,KAAK64L,WAAa,CAChDC,cAAiBr6E,GAAgBz+G,KAAK+4L,sBACtCC,eAAkBt6E,GAAa1+G,KAAK+4L,uBAGtC/4L,KAAKipG,oBAAsB,CAAC,sBAC7B,CAOD,oBAAA8vF,CAAqBznL,EAAMktG,GACzB,MAAMI,EAAYttG,EAAKstG,UACvB,IAAI37C,EAAW,KACf,GAAiB,qBAAb27C,EACF37C,EAAWs9C,GACT,GACAvgH,KAAK44L,2BACLtnL,EACAktG,EACAx+G,WAEG,GACQ,kBAAb4+G,GACa,iBAAbA,GACa,UAAbA,EACA,CACA,MAAM1uG,EAAUsuG,EAAY,GAC5B,IAAIg6E,EAActoL,EAAqB,YACnCuoL,EAAYvoL,EAAmB,UACnC,MAAMy6H,EAAS,IACTsuD,EAAgB,KACtB,IAAKT,GAAelnL,EAAKO,WAAY,CAClC2mL,EAAc,GAAMC,EAAY,CAAE,EACnC,IAAK,IAAI72L,EAAI,EAAGuE,EAAKmL,EAAKO,WAAW1Q,OAAQS,EAAIuE,IAAMvE,EAAG,CACxD,MAAMkwF,EAAgCxgF,EAAKO,WAAWjQ,GACtD,GAAuB,IAAnBkwF,EAAM+rB,SAAgB,CACxB,MAAM99F,EAAK+xE,EAAM2tB,SAAS95F,MAAM,KAAK1a,MACrC,IAAKutL,EAAY9yL,SAASqa,GAAK,CAC7B,IAAIxY,EAAM,GACNqmD,EAAQ,EACZ,MAAM+2C,EAAM7S,EAAMwrB,aAClB,IAAK,MAAMz7G,KAAa42L,EAAW,CACjC,GAAIA,EAAU52L,KAAe8iG,EAAK,CAChCp9F,EAAM1F,EACN,KACD,GACC+rD,CACH,CACIrmD,IACHA,EAAMojI,EAAS/8E,EACf6qI,EAAUlxL,GAAOo9F,GAEnB6zF,EAAY7yL,KAAK4B,EAAM,IAAMwY,EAC9B,CACF,CACF,CACgB,iBAAb6+F,IAEF1uG,EAAqB,YAAIsoL,EACzBtoL,EAAmB,UAAIuoL,EAE1B,CACD,GAAyB,iBAAdA,EAAwB,CACjC,MAAMS,EAAKT,EACXA,EAAY,CAAA,EACZA,EAAUQ,GAAiBC,CAC5B,CAED,MAAM/4E,EAAY,CAAA,EACZg5E,EAAe92L,MAAMC,QAAQk2L,GAC/BA,EACA,CAACA,GACL,IAAK,MAAMpjG,KAAKqjG,EAAW,CAEzB,MAAMp4E,EAAU,CAAA,EAChB,IAAK,IAAIz+G,EAAI,EAAGuE,EAAKgzL,EAAah4L,OAAQS,EAAIuE,IAAMvE,EAAG,EAC/Bu3L,EAAav3L,GAAG8D,SAAS,KAC3CyzL,EAAav3L,GAAG+jB,MAAM,KAAK,GAC3BszK,KACkB7jG,IACpBirB,EAAQ84E,EAAav3L,GAAG+jB,MAAM,KAAK1a,OACpB,kBAAb2zG,EACIH,GAAgBz+G,KAAKo5L,mBAAoBp5L,MACzC0+G,GAAa1+G,KAAKo5L,mBAAoBp5L,MAE/C,CACDmgH,EAAUs4E,EAAUrjG,IAAMirB,CAC3B,CAECp9C,EAAWs9C,GADI,iBAAb3B,GAA6C,UAAbA,OACPp4G,EAEA,GAFW25G,EAAW7uG,EAAMktG,EAI1D,CAID,OAHiB,OAAbv7C,IACFA,EAAW,IAENA,CACR,CAOD,oBAAAo2H,CAAqB/nL,EAAMktG,GACzB,MAAMtuG,EAAiCsuG,EAAY,GAInD,OAHAtuG,EAAiB,QAAIoB,EAAKm8F,kBAAkBwpE,aAAa,WACzD/mK,EAAsB,aACpBoB,EAAKm8F,kBAAkBwpE,aAAa,gBAC/B12D,GACL,KACAvgH,KAAKs5L,iBACLhoL,EACAktG,EACAx+G,KAEH,CAOD,iBAAAu5L,CAAkBjoL,EAAMktG,GACtB,MAAMtuG,EAAiCsuG,EAAY,GAC7CjlG,EACJvZ,KAAKq5L,qBAAqB/nL,EAAMktG,GAElC,OAAOjlG,EAASs3J,GAA2Bt3J,EAAQrJ,QAAW1J,CAC/D,CAOD,mBAAAgzL,CAAoBloL,EAAMktG,GACxB,MAAMtuG,EAAiCsuG,EAAY,GAC7C7pG,EACJ3U,KAAKq5L,qBAAqB/nL,EAAMktG,GAElC,OAAO7pG,EACH87J,GAA6B97J,GAAU,EAAOzE,QAC9C1J,CACL,CAQD,0BAAAizL,CAA2BnoL,EAAMktG,EAAak7E,GAC5C,IAAIl8B,EACJ,MAAMx0J,EAAS,CAAA,EACf,IAAK,IAAIrH,EAAI2P,EAAKm8F,kBAAmB9rG,EAAGA,EAAIA,EAAEy+G,mBAAoB,CAChE,IAAI/7G,EACJ,MAAMu6G,EAAYj9G,EAAEi9G,UAGM,IAAxBj9G,EAAEkQ,WAAW1Q,QACY,IAAxBQ,EAAEkQ,WAAW1Q,SACe,IAA1BQ,EAAEykD,WAAWy3D,UAA4C,IAA1Bl8G,EAAEykD,WAAWy3D,WAE/Cx5G,EAAQo5G,GAAkB97G,GAAG,GACzB22L,GAAmBlqL,KAAK/J,KAC1BA,OAAQmC,KAGNkzL,IAEFr1L,EACgB,cAAdu6G,EACI5+G,KAAKu5L,kBAAkB53L,EAAG68G,GAC1Bx+G,KAAKw5L,oBAAoB73L,EAAG68G,IAE/Bn6G,EAGoB,cAAdu6G,IAET4+C,EAAe5+C,GAHfv6G,EAAQrE,KAAKy5L,2BAA2B93L,EAAG68G,GAAa,IAO5D,MAAMx2G,EAAMrG,EAAE46I,WAAWp7I,OACzB,GAAI6G,EAAM,KAAO3D,aAAiBmrB,IAAW,CAC3CnrB,EAAQ,CAACs1L,UAAWt1L,GACpB,IAAK,IAAIzC,EAAI,EAAGA,EAAIoG,EAAKpG,IAAK,CAE5ByC,EADgB1C,EAAE46I,WAAW36I,GAAG6T,MACf9T,EAAE46I,WAAW36I,GAAGyC,KAClC,CACF,CAEG2E,EAAO41G,IACH51G,EAAO41G,aAAsBv8G,QACjC2G,EAAO41G,GAAa,CAAC51G,EAAO41G,KAE9B51G,EAAO41G,GAAWj5G,KAAKtB,IAEvB2E,EAAO41G,GAAav6G,CAEvB,CACD,IAAKq1L,EACH,OAAO1wL,EAET,MAAMy2C,EAAU,IAAItrC,GAAQnL,GACxBw0J,GACF/9G,EAAQ1qC,gBAAgByoJ,GAE1B,MAAMo8B,EACJtoL,EAAK2lK,aAAa,QAAU74D,GAAe9sG,EAAMtR,KAAK64L,UAAW,MAInE,OAHIe,GACFn6I,EAAQjqC,MAAMokL,GAETn6I,CACR,CAOD,kBAAA25I,CAAmB9nL,EAAMktG,GACvB,OAAOx+G,KAAKy5L,2BAA2BnoL,EAAMktG,GAAa,EAC3D,CAOD,SAAA69D,CAAU/qK,EAAMktG,GACd,MAAM3jG,EAAkB7a,KAAK6hL,4BAA4BvwK,EAAMktG,GAC/D,GAAI3jG,EACF,OAAO,IAAIyY,GAAMzY,EAAiB,MAErC,CAOD,cAAAg/K,CAAevoL,EAAMktG,GAEnB,MAAMllG,EAAcinG,GAClB,GACAvgH,KAAK85L,mBACLxoL,EACAktG,EACAx+G,MAEF,GAAIsZ,EACF,OAAO,IAAI4gE,GAAW5gE,EAGzB,CAOD,mBAAAygL,CAAoBzoL,EAAMktG,GAExB,MAAMpmB,EAAcmoB,GAClB,GACAvgH,KAAKg6L,wBACL1oL,EACAktG,EACAx+G,MAEF,GAAIo4F,EACF,OAAO,IAAIje,GAAgBie,EAE9B,CAOD,gBAAA6hG,CAAiB3oL,EAAMktG,GAErB,MAAMplB,EAAWmnB,GACf,GACAvgH,KAAKk6L,qBACL5oL,EACAktG,EACAx+G,MAEF,GAAIo5F,EACF,OAAO,IAAIhf,GAAagf,EAE3B,CAMD,iBAAA+gG,CAAkB7oL,EAAMktG,GACtB0B,GAAUlgH,KAAKo6L,oBAAqB9oL,EAAMktG,EAAax+G,KACxD,CAMD,sBAAAq6L,CAAuB/oL,EAAMktG,GAC3B0B,GAAUlgH,KAAKs6L,yBAA0BhpL,EAAMktG,EAAax+G,KAC7D,CAMD,mBAAAu6L,CAAoBjpL,EAAMktG,GACxB0B,GAAUlgH,KAAKw6L,sBAAuBlpL,EAAMktG,EAAax+G,KAC1D,CAOD,cAAAm8K,CAAe7qK,EAAMktG,GACnB,MAAM3jG,EAAkB7a,KAAK6hL,4BAA4BvwK,EAAMktG,GAC/D,GAAI3jG,EAAiB,CAEnB,OADmB,IAAIk/D,GAAWl/D,EAAiB,MAEpD,CAEF,CAOD,kBAAA0mK,CAAmBjwK,EAAMktG,GACvB,MAAMy8C,EAAO16C,GACX,KACAvgH,KAAK4hL,kCACLtwK,EACAktG,EACAx+G,MAEF,GAAIi7J,EACF,OAAOA,CAGV,CAOD,cAAAmhB,CAAe9qK,EAAMktG,GACnB,MAAM3jG,EAAkB7a,KAAK6hL,4BAA4BvwK,EAAMktG,GAC/D,GAAI3jG,EACF,OAAO,IAAImY,GAAWnY,EAAiB,MAE1C,CAOD,WAAAyhK,CAAYhrK,EAAMktG,GAEhB,MAAMokE,EAAkBriE,GACtB,CAAC,MACDvgH,KAAKqiL,0BACL/wK,EACAktG,EACAx+G,MAEF,GAAI4iL,GAAmBA,EAAgB,GAAI,CACzC,MAAM/nK,EAAkB+nK,EAAgB,GAClClyJ,EAAO,CAAC7V,EAAgB1Z,QAC9B,IAAIS,EAAGuE,EACP,IAAKvE,EAAI,EAAGuE,EAAKy8K,EAAgBzhL,OAAQS,EAAIuE,IAAMvE,EACjDM,EAAO2Y,EAAiB+nK,EAAgBhhL,IACxC8uB,EAAK/qB,KAAKkV,EAAgB1Z,QAE5B,OAAO,IAAI40B,GAAQlb,EAAiB,MAAO6V,EAC5C,CAEF,CAOD,2BAAAmxJ,CAA4BvwK,EAAMktG,GAChC,OAAO+B,GACL,KACAvgH,KAAK4hL,kCACLtwK,EACAktG,EACAx+G,KAEH,CAQD,oBAAA0xK,CAAqBpgK,EAAM5G,GACzB,MAAMiK,EAAW3U,KAAKw5L,oBAAoBloL,EAAM,CAC9CtR,KAAKkwK,eAAe5+J,EAAM5G,GAAoB,CAAA,KAEhD,OAAOiK,GAAsB,IAC9B,CAOD,oBAAA48J,CAAqBjgK,EAAM5G,GACzB,MAAM+vL,EAAkB,CACtBjC,YAAax4L,KAAKw4L,YAClBC,UAAWz4L,KAAKy4L,WAEdgC,GACF/zL,OAAO6C,OAAOkxL,EAAiBz6L,KAAKkwK,eAAe5+J,EAAM5G,IAG3D,OADiB1K,KAAK+4L,qBAAqBznL,EAAM,CAACmpL,KAC/B,EACpB,CAMD,sBAAA7oB,CAAuBtgK,GACrB,OAAOod,GACL1uB,KAAK04L,QACD14L,KAAK04L,QACLpnL,EAAKm8F,kBAAkBwpE,aAAa,WAE3C,EAGHshB,GAAQ10L,UAAUg1L,UAAYR,GAM9BE,GAAQ10L,UAAUw+K,0BAA4B,CAC5C,6BAA8B,CAAE,GAOlCkW,GAAQ10L,UAAU+9K,kCAAoC,CACpD,6BAA8B,CAAE,GAOlC2W,GAAQ10L,UAAUy1L,iBAAmB,CACnC,6BAA8B,CAAE,GAOlCf,GAAQ10L,UAAUi2L,mBAAqB,CACrC,6BAA8B,CAC5BY,YAAej8E,GAAgB85E,GAAQ10L,UAAUs2L,mBACjDQ,aAAgBl8E,GAAgB85E,GAAQ10L,UAAUs2L,qBAQtD5B,GAAQ10L,UAAUm2L,wBAA0B,CAC1C,6BAA8B,CAC5BY,iBAAoBn8E,GAClB85E,GAAQ10L,UAAUw2L,wBAEpBQ,kBAAqBp8E,GACnB85E,GAAQ10L,UAAUw2L,0BASxB9B,GAAQ10L,UAAUq2L,qBAAuB,CACvC,6BAA8B,CAC5BY,cAAiBr8E,GAAgB85E,GAAQ10L,UAAU02L,qBACnDQ,eAAkBt8E,GAAgB85E,GAAQ10L,UAAU02L,uBAQxDhC,GAAQ10L,UAAUu2L,oBAAsB,CACtC,6BAA8B,CAC5B9mK,MAASmrF,GAAgB85E,GAAQ10L,UAAUg+K,+BAQ/C0W,GAAQ10L,UAAUy2L,yBAA2B,CAC3C,6BAA8B,CAC5BvgH,WAAc0kC,GAAgB85E,GAAQ10L,UAAUs4K,kBAQpDoc,GAAQ10L,UAAU22L,sBAAwB,CACxC,6BAA8B,CAC5BzkK,QAAW0oF,GAAgB85E,GAAQ10L,UAAUy4K,eAQjDic,GAAQ10L,UAAUm3L,aAAe,CAC/B,6BAA8B,CAC5BhoK,WAAc0rF,GAAa65E,GAAQ10L,UAAU09K,sBAIjD,IAAA0Z,GAAe1C,GCjpBf,MAAMI,GACJN,GAAQ,oDAMJ6C,GAAmC,CACvC/gH,gBAAmB,mBACnBghH,WAAc,cACd/gH,aAAgB,gBAChBghH,aAAgB,iBAUlB,MAAMC,WAAa9C,GAIjB,WAAAz4L,CAAY4K,GAGVzF,MAFAyF,EAAUA,GAAoB,IAI9B1K,KAAK44L,2BAA2BP,IAAsB,cAAI55E,GACxDz+G,KAAK+4L,sBAMP/4L,KAAK24L,eAAiBjuL,EAAQiuL,eAC1BjuL,EAAQiuL,eACRA,EACL,CAOD,mBAAAvY,CAAoB9uK,EAAMktG,GACxB,MAAM30E,EAAI4zE,GAAkBnsG,GAAM,GAAOgS,QAAQ,aAAc,IAIzDg4K,EAFJ98E,EAAY,GAEwB,QACtC,IAAI/9F,EAAkB,MACtB,GAAI66K,EAAc,CAChB,MAAMltG,EAAO1/D,GAAc4sK,GACvBltG,IACF3tE,EAAkB2tE,EAAK9sE,qBAE1B,CACD,MAAMi6K,EAAe1xJ,EAAEc,OAAOhlB,MAAM,OAC9B9K,EAAkB,GACxB,IAAK,IAAIjZ,EAAI,EAAGuE,EAAKo1L,EAAap6L,OAAQS,EAAIuE,EAAIvE,IAAK,CACrD,MAAMq3B,EAASsiK,EAAa35L,GAAG+jB,MAAM,MAC/BvO,EAAIyzB,WAAW5R,EAAO,IACtB5hB,EAAIwzB,WAAW5R,EAAO,IACtBoG,EAAsB,IAAlBpG,EAAO93B,OAAe0pC,WAAW5R,EAAO,IAAM,EACnB,OAAjCxY,EAAgBqnE,OAAO,EAAG,GAC5BjtE,EAAgBlV,KAAKyR,EAAGC,EAAGgoB,GAE3BxkB,EAAgBlV,KAAK0R,EAAGD,EAAGioB,EAE9B,CACD,OAAOxkB,CACR,CAOD,OAAA2gL,CAAQlqL,EAAMktG,GAEZ,MAAM3jG,EAAkB0lG,GACtB,CAAC,MACDvgH,KAAKy7L,aACLnqL,EACAktG,EACAx+G,MAEF,OAAOya,GACLI,EAAgB,GAAG,GACnBA,EAAgB,GAAG,GACnBA,EAAgB,GAAG,GACnBA,EAAgB,GAAG,GAEtB,CAMD,qBAAA6gL,CAAsBpqL,EAAMktG,GAE1B,MAAMkkE,EAAiBniE,QACrB/5G,EACAxG,KAAKg7L,aACL1pL,EACAktG,EACAx+G,MAEF,GAAI0iL,EAAgB,CAGflkE,EAAYA,EAAYr9G,OAAS,GACpBwE,KAAK+8K,EACtB,CACF,CAMD,qBAAAiZ,CAAsBrqL,EAAMktG,GAE1B,MAAMkkE,EAAiBniE,QACrB/5G,EACAxG,KAAKg7L,aACL1pL,EACAktG,EACAx+G,MAEF,GAAI0iL,EAAgB,CAGflkE,EAAYA,EAAYr9G,OAAS,GACpB,GAAKuhL,CACtB,CACF,CAUD,sBAAAkZ,CAAuBv3L,EAAOm6G,EAAaiB,GACzC,MAAMvvG,EAAUsuG,EAAYA,EAAYr9G,OAAS,GAC3C06L,EAAe3rL,EAAsB,aACrC4rL,EAAU5rL,EAAiB,QAC3B6rL,EAAa7rL,EAAoB,WAevC,OAdK7N,MAAMC,QAAQ+B,GAYjBo7G,EAAW,WARM,kBAHjBA,EAAgE,EAE9DjxF,aACkD,IAAjBqtK,EACjCp8E,EAAW,eACW,YAAbA,IAAsC,IAAZq8E,EACnCr8E,EAAW,UACW,oBAAbA,IAAiD,IAAfs8E,IAC3Ct8E,EAAW,cAKRpC,GAAgB,6BAA8BoC,EACtD,CAOD,mBAAAu8E,CAAoB1qL,EAAMmuC,EAAS++D,GACjC,MAAMo7E,EAAMn6I,EAAQrqC,QAChBwkL,GACFtoL,EAAK2/C,aAAa,MAA8B,GAElD,MAAM/gD,EAAiCsuG,EAAYA,EAAYr9G,OAAS,GAClEs3L,EAAYvoL,EAAmB,UAC/BstJ,EAAe/9G,EAAQzqC,kBACxB9E,EAAQivG,cACXjvG,EAAQivG,YAAc,GACtBjvG,EAAQivG,YAAYs5E,GAAa,IAEnC,MAAM9xL,EAAO,GACPqC,EAAS,GACf,GAAIy2C,EAAQh2C,gBAAiB,CAC3B,MAAMoL,EAAa4qC,EAAQn2C,gBAC3B,IAAK,MAAM/B,KAAOsN,EAAY,CAC5B,MAAMxQ,EAAQwQ,EAAWtN,GACX,OAAVlD,IACFsC,EAAKhB,KAAK4B,GACVyB,EAAOrD,KAAKtB,GAEVkD,GAAOi2J,GAEL,mBADuB,EAA6B,sBAGhDj2J,KAAO2I,EAAQivG,YAAYs5E,KAC/BvoL,EAAQivG,YAAYs5E,GAAWlxL,GAAOu3G,GACpC9+G,KAAKi8L,qBACLj8L,OAIEuH,KAAO2I,EAAQivG,YAAYs5E,KAC/BvoL,EAAQivG,YAAYs5E,GAAWlxL,GAC7Bu3G,GAAkB8zD,KAI3B,CACF,CACD,MAAMvnK,EAAO3E,OAAO6C,OAAO,CAAE,EAAE2G,GAC/B7E,EAAKiG,KAAOA,EACZkvG,GAEJ,EACMtwG,EAAQivG,YACRC,QAAsB54G,EAAWiyL,GACjCzvL,EACAw1G,EACA73G,EAEH,CAOD,sBAAAu1L,CAAuB5qL,EAAMqD,EAAU6pG,GACrC,MACMk6E,EADUl6E,EAAYA,EAAYr9G,OAAS,GAChB,QAIjC,GAHsB,sBAAlBmQ,EAAKmuG,UAAoCi5E,GAC3CpnL,EAAK2/C,aAAa,UAAWynI,GAGX,eAAlBpnL,EAAKmuG,UACa,sBAAlBnuG,EAAKmuG,SACL,CACA,MAAMnmG,EAActZ,KAAKm8L,uBAAuB7qL,EAAKgsG,cACrDhsG,EAAKW,YAAYqH,GACjBtZ,KAAKo8L,kBAAkB9iL,EAAa3E,EAAU6pG,EACpD,MAAW,GAAsB,UAAlBltG,EAAKmuG,SAAsB,CACpC,MAAM2jD,EAAW/lD,GAAgB/rG,EAAKgsG,aAAc,YACpDhsG,EAAKW,YAAYmxJ,GACjBpjK,KAAKq8L,oBAAoBj5B,EAAUzuJ,EAAU6pG,EAC9C,CACF,CAOD,4BAAA89E,CAA6BhrL,EAAM+kH,EAAM7X,GACvC,MAAM1sB,EAAQ9xF,KAAK47L,uBAAuBvlE,EAAM7X,GAC5C1sB,IACFxgF,EAAKW,YAAY6/E,GACjB9xF,KAAKk8L,uBAAuBpqG,EAAOukC,EAAM7X,GAE5C,CAOD,2BAAA+9E,CAA4BjrL,EAAMqD,EAAU6pG,GAC1C,MAAMtuG,EAAUsuG,EAAYA,EAAYr9G,OAAS,GAC3C+1K,EAAOhnK,EAAc,KACrBwoL,EAAUxoL,EAAiB,QAC3BssL,EAAQtsL,EAAe,MACzBwoL,GACFpnL,EAAK2/C,aAAa,UAAWynI,GAE/B,MAAMtkF,EAAQz/F,EAAS6jF,iBACvBgoB,GACE,CAAClvG,KAAMA,EAAM4lK,KAAMA,EAAMwhB,QAASA,EAAS8D,MAAOA,GAClDx8L,KAAKy8L,oCACLz8L,KAAK08L,mCACLtoF,EACAoK,OACAh4G,EACAxG,KAEH,CAOD,oBAAAi8L,CAAqB3qL,EAAMqD,EAAU6pG,GACnC,MAAMtuG,EACJsuG,EAAYA,EAAYr9G,OAAS,GAE7BkK,EAAO3E,OAAO6C,OAAO,CAAE,EAAE2G,GAE/B,IAAI7L,EADJgH,EAAW,KAAIiG,EAGbjN,EADEhC,MAAMC,QAAQqS,GACRk8J,GACd,EACQ3gK,GAGMugK,GACd,GACQ,EACAvgK,GAGJswG,GAEJ,EACMxgH,KAAK28L,qBACL38L,KAAK47L,uBACL,CAACv3L,GACDm6G,OACAh4G,EACAxG,KAEH,CAOD,sBAAAm8L,CAAuB7+E,GACrB,MAAMhkG,EAAc+jG,GAAgBC,EAAc,eAKlD,OAJAhkG,EAAY23C,aAAa,UAAW,KACpC33C,EAAY23C,aAAa,KAAM,KAC/B33C,EAAY23C,aAAa,KAAM,KAExB33C,CACR,CAQD,iBAAA8iL,CAAkB9qL,EAAMjN,EAAOm6G,GAC7B,MAAMtuG,EAAUsuG,EAAYA,EAAYr9G,OAAS,GAC3C+1K,EAAOhnK,EAAc,KACrBwoL,EAAUxoL,EAAiB,QAE3B6oF,EAAS10F,EAAMorB,iBACfznB,EAAM+wF,EAAO53F,OACbkpC,EAAQ,IAAIhoC,MAAM2F,GACxB,IAAK,IAAIpG,EAAI,EAAGA,EAAIoG,IAAOpG,EAAG,CAC5B,MAAM8gB,EAAQq2E,EAAOn3F,GACrByoC,EAAMzoC,GAAK5B,KAAK48L,WAAWl6K,EAAOg2K,EAASxhB,EAC5C,CACDtE,GAAoBthK,EAAM+4B,EAAMxxB,KAAK,KACtC,CAQD,mBAAAwjL,CAAoB/qL,EAAM+kH,EAAM7X,GAC9B,MAAM1sB,EAAQurB,GAAgB/rG,EAAKgsG,aAAc,qBACjDhsG,EAAKW,YAAY6/E,GACjB9xF,KAAKk8L,uBAAuBpqG,EAAOukC,EAAM7X,EAC1C,CAOD,qBAAAq+E,CAAsBvrL,EAAMqD,EAAU6pG,GACpC,MAAMtuG,EAAUsuG,EAAYA,EAAYr9G,OAAS,GAC3C+1K,EAAOhnK,EAAc,KACrBwoL,EAAUxoL,EAAiB,QAIjC,GAHsB,iBAAlBoB,EAAKmuG,UAA+Bi5E,GACtCpnL,EAAK2/C,aAAa,UAAWynI,GAET,YAAlBpnL,EAAKmuG,UAA4C,iBAAlBnuG,EAAKmuG,SAA6B,CACnE,MAAMlkG,EAAQ5G,EAASoiB,iBACvBypF,GACE,CAAClvG,KAAMA,EAAM4lK,KAAMA,EAAMwhB,QAASA,GAClC14L,KAAK88L,iBACL98L,KAAK+8L,mBACLxhL,EACAijG,OACAh4G,EACAxG,KAER,MAAW,GAAsB,YAAlBsR,EAAKmuG,SAAwB,CACtC,MAAMu9E,EAAU3/E,GAAgB/rG,EAAKgsG,aAAc,WACnDhsG,EAAKW,YAAY+qL,GACjBh9L,KAAKi9L,qBAAqBD,EAASroL,EAAU6pG,EAC9C,CACF,CASD,kBAAAu+E,CAAmB14L,EAAOm6G,EAAaiB,GACrC,MAAMvvG,EAAUsuG,EAAYA,EAAYr9G,OAAS,GAC3CgQ,EAAajB,EAAQoB,KACrB4rL,EAAkBhtL,EAAyB,gBAIjD,YAHwB1J,IAApB02L,IACFhtL,EAAyB,iBAAI,GAExBmtG,GACLlsG,EAAWmsG,kBACS92G,IAApB02L,EAAgC,kBAAoB,kBAEvD,CAQD,oBAAAD,CAAqB3rL,EAAMglB,EAASkoF,GAClC,MAAM1sB,EAAQurB,GAAgB/rG,EAAKgsG,aAAc,gBACjDhsG,EAAKW,YAAY6/E,GACjB9xF,KAAK68L,sBAAsB/qG,EAAOx7D,EAASkoF,EAC5C,CAOD,SAAA2+E,CAAU7rL,EAAM2pJ,EAAMz8C,GACpB,MAAM5rF,EAAayqF,GAAgB/rG,EAAKgsG,aAAc,cACtDhsG,EAAKW,YAAY2gB,GACjB5yB,KAAKo9L,gBAAgBxqK,EAAYqoI,EAAMz8C,EACxC,CASD,UAAAo+E,CAAWl6K,EAAOg2K,EAASxhB,GACzB,IAAIz2J,EAAkB,MAClBi4K,IACFj4K,EAAkBiO,GAAcgqK,GAASp3K,sBAE3C,IAAI2X,EAC+B,OAAjCxY,EAAgBqnE,OAAO,EAAG,GACtBplE,EAAM,GAAK,IAAMA,EAAM,GACvBA,EAAM,GAAK,IAAMA,EAAM,GAC7B,GAAIw0J,EAAM,CAGRj+I,GAAU,KADAvW,EAAM,IAAM,EAEvB,CAED,OAAOuW,CACR,CAOD,UAAAokK,CAAW/rL,EAAMqD,EAAU6pG,GACzB,MAAMtuG,EAAUsuG,EAAYA,EAAYr9G,OAAS,GAC3C+1K,EAAOhnK,EAAc,KACrBwoL,EAAUxoL,EAAiB,QAC7BwoL,GACFpnL,EAAK2/C,aAAa,UAAWynI,GAE/B,MAAMp/K,EAActZ,KAAKm8L,uBAAuB7qL,EAAKgsG,cACrDhsG,EAAKW,YAAYqH,GACjB,MAAMoJ,EAAQ/N,EAAS8a,iBAEvBmjJ,GAAoBt5J,EADNtZ,KAAK48L,WAAWl6K,EAAOg2K,EAASxhB,GAE/C,CAOD,eAAAomB,CAAgBhsL,EAAMqD,EAAU6pG,GAC9B,MAAMtuG,EAAUsuG,EAAYA,EAAYr9G,OAAS,GAC3C+1K,EAAOhnK,EAAc,KACrBwoL,EAAUxoL,EAAiB,QAC7BwoL,GACFpnL,EAAK2/C,aAAa,UAAWynI,GAE/B,MAAM3/F,EAASpkF,EAASmkF,YACxB0nB,GACE,CAAClvG,KAAMA,EAAM4lK,KAAMA,EAAMwhB,QAASA,GAClC14L,KAAKu9L,wBACLn+E,GAAsB,eACtBrmB,EACAylB,OACAh4G,EACAxG,KAEH,CAOD,gBAAAw9L,CAAiBlsL,EAAMoR,EAAO87F,GAC5B,MAAM1sB,EAAQurB,GAAgB/rG,EAAKgsG,aAAc,SACjDhsG,EAAKW,YAAY6/E,GACjB9xF,KAAKq9L,WAAWvrG,EAAOpvE,EAAO87F,EAC/B,CAOD,eAAA4+E,CAAgB9rL,EAAMqD,EAAU6pG,GAC9B,MACMk6E,EADUl6E,EAAYA,EAAYr9G,OAAS,GAChB,QAC7Bu3L,GACFpnL,EAAK2/C,aAAa,UAAWynI,GAE/B,MAAMp/K,EAActZ,KAAKm8L,uBAAuB7qL,EAAKgsG,cACrDhsG,EAAKW,YAAYqH,GACjBtZ,KAAKo8L,kBAAkB9iL,EAAa3E,EAAU6pG,EAC/C,CAOD,0BAAAi/E,CAA2BnsL,EAAMqD,EAAU6pG,GACzC,MAAMtuG,EAAUsuG,EAAYA,EAAYr9G,OAAS,GAC3C+1K,EAAOhnK,EAAc,KACrBwoL,EAAUxoL,EAAiB,QAC3B4rL,EAAU5rL,EAAiB,QAC7BwoL,GACFpnL,EAAK2/C,aAAa,UAAWynI,GAE/B,MAAMt/F,EAAWzkF,EAASmlF,cAC1B0mB,GACE,CAAClvG,KAAMA,EAAM4lK,KAAMA,EAAMwhB,QAASA,EAASoD,QAASA,GACpD97L,KAAK09L,mCACL19L,KAAK08L,mCACLtjG,EACAolB,OACAh4G,EACAxG,KAEH,CAOD,2BAAA29L,CAA4BrsL,EAAMglB,EAASkoF,GACzC,MAAM1sB,EAAQ9xF,KAAK47L,uBAAuBtlK,EAASkoF,GAC/C1sB,IACFxgF,EAAKW,YAAY6/E,GACjB9xF,KAAK68L,sBAAsB/qG,EAAOx7D,EAASkoF,GAE9C,CAOD,aAAAo/E,CAActsL,EAAMiI,EAAQilG,GAC1B,MACMk6E,EADUl6E,EAAYA,EAAYr9G,OAAS,GAChB,QAC7Bu3L,GACFpnL,EAAK2/C,aAAa,UAAWynI,GAE/B,MACM1vL,EAAS,CAACuQ,EAAO,GAAK,IAAMA,EAAO,GAAIA,EAAO,GAAK,IAAMA,EAAO,IACtEinG,GAEJ,CAAQlvG,KAAMA,GACRtR,KAAK69L,qBACLn+E,GACA12G,EACAw1G,EARW,CAAC,cAAe,eAU3Bx+G,KAEH,CAUD,kCAAA08L,CAAmCr4L,EAAOm6G,EAAaiB,GACrD,MAAMtuG,EAAaqtG,EAAYA,EAAYr9G,OAAS,GAAGmQ,KACvD,OAAO+rG,GACL,6BACA69E,GAAiC/pL,EAAWsuG,UAE/C,EAOH47E,GAAKx3L,UAAU+9K,kCAAoC,CACjD,6BAA8B,CAC5BtoK,YAAeolG,GAAa28E,GAAKx3L,UAAUu8K,uBAQ/Cib,GAAKx3L,UAAUw+K,0BAA4B,CACzC,6BAA8B,CAC5BC,gBAAmB+Y,GAAKx3L,UAAU63L,sBAClCjZ,gBAAmB4Y,GAAKx3L,UAAU83L,wBAQtCN,GAAKx3L,UAAU43L,aAAe,CAC5B,6BAA8B,CAC5BniL,YAAemlG,GAAgB48E,GAAKx3L,UAAUu8K,uBAQlDib,GAAKx3L,UAAUy1L,iBAAmB,CAChC,6BAA8B,CAC5BhmK,MAASorF,GAAa65E,GAAQ10L,UAAUw4K,WACxCniG,WAAcwkC,GAAa65E,GAAQ10L,UAAUg2L,gBAC7C9/G,WAAc2kC,GAAa65E,GAAQ10L,UAAUs4K,gBAC7ChiG,gBAAmBukC,GAAa65E,GAAQ10L,UAAUk2L,qBAClD/mK,WAAc0rF,GAAa65E,GAAQ10L,UAAUu4K,gBAC7CrmJ,QAAW2oF,GAAa65E,GAAQ10L,UAAUy4K,aAC1CliG,aAAgBskC,GAAa65E,GAAQ10L,UAAUo2L,kBAC/C6D,IAAOp/E,GAAa28E,GAAKx3L,UAAU23L,WAQvCH,GAAKx3L,UAAU84L,qBAAuB,CACpC,6BAA8B,CAC5BoB,MAASj/E,GAAkBu8E,GAAKx3L,UAAUq4L,wBAC1Cf,WAAcr8E,GAAkBu8E,GAAKx3L,UAAU04L,6BAC/CjpK,MAASwrF,GAAkBu8E,GAAKx3L,UAAUw5L,YAC1CnjH,WAAc4kC,GAAkBu8E,GAAKx3L,UAAUy5L,iBAC/CvjH,WAAc+kC,GAAkBu8E,GAAKx3L,UAAUq4L,wBAC/C/hH,gBAAmB2kC,GACjBu8E,GAAKx3L,UAAU04L,6BAEjBvpK,WAAc8rF,GAAkBu8E,GAAKx3L,UAAUu5L,iBAC/CrnK,QAAW+oF,GAAkBu8E,GAAKx3L,UAAUg5L,uBAC5CziH,aAAgB0kC,GACdu8E,GAAKx3L,UAAU45L,4BAEjBO,QAAWl/E,GAAkBu8E,GAAKx3L,UAAUg5L,uBAC5CzB,aAAgBt8E,GACdu8E,GAAKx3L,UAAU45L,4BAEjBQ,SAAYn/E,GAAkBu8E,GAAKx3L,UAAU+5L,iBAOjDvC,GAAKx3L,UAAU44L,oCAAsC,CACnD,6BAA8B,CAC5B7B,iBAAoB97E,GAClBu8E,GAAKx3L,UAAUy4L,8BAEjB4B,YAAep/E,GACbu8E,GAAKx3L,UAAUy4L,gCAQrBjB,GAAKx3L,UAAUi5L,iBAAmB,CAChC,6BAA8B,CAC5Bra,gBAAmB3jE,GAAkBu8E,GAAKx3L,UAAUs5L,WACpD7a,gBAAmBxjE,GAAkBu8E,GAAKx3L,UAAUs5L,aAOxD9B,GAAKx3L,UAAU05L,wBAA0B,CACvC,6BAA8B,CAC5B7C,YAAe57E,GAAkBu8E,GAAKx3L,UAAU25L,oBAQpDnC,GAAKx3L,UAAU65L,mCAAqC,CAClD,6BAA8B,CAC5BS,cAAiBr/E,GACfu8E,GAAKx3L,UAAU85L,6BAEjB7C,cAAiBh8E,GACfu8E,GAAKx3L,UAAU85L,+BAQrBtC,GAAKx3L,UAAUg6L,qBAAuB,CACpC,6BAA8B,CAC5BO,YAAet/E,GAAkB8zD,IACjCyrB,YAAev/E,GAAkB8zD,MAIrC,IAAA0rB,GAAejD,GC1uBf,MAAM1C,GACJN,iFAQI6C,GAAmC,CACvC/gH,gBAAmB,mBACnBghH,WAAc,cACd/gH,aAAgB,gBAChBghH,aAAgB,iBAWlB,MAAMmD,WAAahG,GAIjB,WAAAz4L,CAAY4K,GAGVzF,MAFAyF,EAAUA,GAAoB,IAQ9B1K,KAAKw+L,cAA+Bh4L,IAApBkE,EAAQoxL,SAAwBpxL,EAAQoxL,QAMxD97L,KAAKy+L,YAA2Bj4L,IAAlBkE,EAAQ8xL,OAAsB9xL,EAAQ8xL,MAMpDx8L,KAAK0+L,iBACoBl4L,IAAvBkE,EAAQqxL,YAA2BrxL,EAAQqxL,WAM7C/7L,KAAK2+L,mBACsBn4L,IAAzBkE,EAAQmxL,cAA6BnxL,EAAQmxL,aAK/C77L,KAAK24L,eAAiBjuL,EAAQiuL,eAC1BjuL,EAAQiuL,eACRA,GAMJ34L,KAAKk3K,UAAwB1wK,IAAjBkE,EAAQwsK,MAAqBxsK,EAAQwsK,IAClD,CAOD,cAAA0nB,CAAettL,EAAMktG,GAEnB,MAAMpmB,EAAcmoB,GAClB,GACAvgH,KAAK6+L,mBACLvtL,EACAktG,EACAx+G,MAEF,GAAIo4F,EAAa,CAEf,OADwB,IAAIje,GAAgBie,EAE7C,CAEF,CAOD,iBAAA0mG,CAAkBxtL,EAAMktG,GAEtB,MAAMpmB,EAAcmoB,GAClB,GACAvgH,KAAK6+L,mBACLvtL,EACAktG,EACAx+G,MAEI6a,EAAkB,GACxB,IAAK,IAAIjZ,EAAI,EAAGuE,EAAKiyF,EAAYj3F,OAAQS,EAAIuE,IAAMvE,EACjDM,EAAO2Y,EAAiBu9E,EAAYx2F,GAAGytB,sBAEzC,OAAOxU,CACR,CAOD,gBAAAkkL,CAAiBztL,EAAMktG,GAErB,MAAMplB,EAAWmnB,GACf,GACAvgH,KAAKg/L,qBACL1tL,EACAktG,EACAx+G,MAEF,GAAIo5F,EACF,OAAO,IAAIhf,GAAagf,EAE3B,CAMD,iBAAA6lG,CAAkB3tL,EAAMktG,GACtB0B,GAAUlgH,KAAKk/L,oBAAqB5tL,EAAMktG,EAAax+G,KACxD,CAMD,mBAAAm/L,CAAoB7tL,EAAMktG,GACxB0B,GAAUlgH,KAAKo/L,sBAAuB9tL,EAAMktG,EAAax+G,KAC1D,CAOD,SAAAq/L,CAAU/tL,EAAMktG,GACd,OAAO+B,GACL,CAAC,MACDvgH,KAAKs/L,gBACLhuL,EACAktG,EACAx+G,KAEH,CAOD,WAAAu/L,CAAYjuL,EAAMktG,GAChB,OAAO+B,GAAgB,GAAIvgH,KAAKw/L,iBAAkBluL,EAAMktG,EAAax+G,KACtE,CAOD,gBAAAy/L,CAAiBnuL,EAAMktG,GACrB,OAAO+B,GACL,CAAC,MACDvgH,KAAKqiL,0BACL/wK,EACAktG,EACAx+G,KAEH,CAOD,qBAAA0/L,CAAsBpuL,EAAMktG,GAC1B,OAAO+B,GACL,CAAC,MACDvgH,KAAK4hL,kCACLtwK,EACAktG,EACAx+G,KAEH,CAMD,cAAA2/L,CAAeruL,EAAMktG,GAEnB,MAAMkkE,EAAiBniE,QACrB/5G,EACAxG,KAAKg7L,aACL1pL,EACAktG,EACAx+G,MAEF,GAAI0iL,EAAgB,CAGflkE,EAAYA,EAAYr9G,OAAS,GACpBwE,KAAK+8K,EACtB,CACF,CAMD,cAAAkd,CAAetuL,EAAMktG,GAEnB,MAAMkkE,EAAiBniE,QACrB/5G,EACAxG,KAAKg7L,aACL1pL,EACAktG,EACAx+G,MAEF,GAAI0iL,EAAgB,CAGflkE,EAAYA,EAAYr9G,OAAS,GACpB,GAAKuhL,CACtB,CACF,CAOD,WAAAmd,CAAYvuL,EAAMktG,GAEhB,MAAMokE,EAAkBriE,GACtB,CAAC,MACDvgH,KAAK8/L,gBACLxuL,EACAktG,EACAx+G,MAEF,GAAI4iL,GAAmBA,EAAgB,GAAI,CACzC,MAAM/nK,EAAkB+nK,EAAgB,GAClClyJ,EAAO,CAAC7V,EAAgB1Z,QAC9B,IAAIS,EAAGuE,EACP,IAAKvE,EAAI,EAAGuE,EAAKy8K,EAAgBzhL,OAAQS,EAAIuE,IAAMvE,EACjDM,EAAO2Y,EAAiB+nK,EAAgBhhL,IACxC8uB,EAAK/qB,KAAKkV,EAAgB1Z,QAE5B,OAAO,IAAI40B,GAAQlb,EAAiB,MAAO6V,EAC5C,CAEF,CAOD,SAAAqvK,CAAUzuL,EAAMktG,GAEd,MAAM3jG,EAAkB0lG,GACtB,CAAC,MACDvgH,KAAKggM,cACL1uL,EACAktG,EACAx+G,MAEF,GAAI6a,EAAiB,CAEnB,OADmB,IAAIk/D,GAAWl/D,EAAiB,MAEpD,CAEF,CAOD,YAAAolL,CAAa3uL,EAAMktG,GAEjB,MAAM3jG,EAAkB0lG,GACtB,CAAC,MACDvgH,KAAKkgM,iBACL5uL,EACAktG,EACAx+G,MAEF,OAAOya,GACLI,EAAgB,GAAG,GACnBA,EAAgB,GAAG,GACnBA,EAAgB,GAAG,GACnBA,EAAgB,GAAG,GAEtB,CAOD,WAAAslL,CAAY7uL,EAAMktG,GAChB,IAAI30E,EAAI4zE,GAAkBnsG,GAAM,GAChC,MAAM+uK,EAAK,6CAELxlK,EAAkB,GACxB,IAAImF,EACJ,KAAQA,EAAIqgK,EAAG51I,KAAKZ,IAClBhvB,EAAgBlV,KAAKklC,WAAW7qB,EAAE,KAClC6pB,EAAIA,EAAEi+C,OAAO9nE,EAAE,GAAG7e,QAEpB,GAAU,KAAN0oC,EACF,OAEF,MACMyxJ,EADU98E,EAAY,GACU,QACtC,IAAI/9F,EAAkB,MACtB,GAAI66K,EAAc,CAEhB76K,EADaiO,GAAc4sK,GACJh6K,oBACxB,CACD,GAAwB,QAApBb,EAA2B,CAC7B,IAAI7e,EAAGuE,EACP,IAAKvE,EAAI,EAAGuE,EAAK0U,EAAgB1Z,OAAQS,EAAIuE,EAAIvE,GAAK,EAAG,CACvD,MAAMyV,EAAIwD,EAAgBjZ,GACpBwV,EAAIyD,EAAgBjZ,EAAI,GAC9BiZ,EAAgBjZ,GAAKwV,EACrByD,EAAgBjZ,EAAI,GAAKyV,CAC1B,CACF,CACD,MAAMrP,EAAM6S,EAAgB1Z,OAI5B,OAHW,GAAP6G,GACF6S,EAAgBlV,KAAK,GAEX,IAARqC,EAGG6S,OAHP,CAID,CAOD,eAAAulL,CAAgB9uL,EAAMktG,GACpB,MAAM30E,EAAI4zE,GAAkBnsG,GAAM,GAAOgS,QAAQ,aAAc,IACzDpT,EAAUsuG,EAAY,GACtB88E,EAAeprL,EAAiB,QAChCmwL,EAAmBnwL,EAAsB,aAC/C,IAAIuQ,EAAkB,MACtB,GAAI66K,EAAc,CAEhB76K,EADaiO,GAAc4sK,GACJh6K,oBACxB,CACD,MAAM2X,EAAS4Q,EAAElkB,MAAM,OAEvB,IAcIvO,EAAGC,EAAGgoB,EAdN4mH,EAAM,EACN30I,EAAK2lK,aAAa,gBACpBhxB,EAAMusB,GAA6BlhK,EAAK2lK,aAAa,iBAC5C3lK,EAAK2lK,aAAa,aAC3BhxB,EAAMusB,GAA6BlhK,EAAK2lK,aAAa,cAE7B3lK,EAAe,WAAE2lK,aAAa,gBAEtDhxB,EAAMusB,GACoBlhK,EAAe,WAAE2lK,aAAa,iBAE/CopB,IACTp6C,EAAMusB,GAA6B6tB,IAGrC,MAAMxlL,EAAkB,GACxB,IAAK,IAAIjZ,EAAI,EAAGuE,EAAK8yB,EAAO93B,OAAQS,EAAIuE,EAAIvE,GAAKqkJ,EAC/C7uI,EAAIyzB,WAAW5R,EAAOr3B,IACtByV,EAAIwzB,WAAW5R,EAAOr3B,EAAI,IAC1By9B,EAAY,IAAR4mH,EAAYp7G,WAAW5R,EAAOr3B,EAAI,IAAM,EACP,OAAjC6e,EAAgBqnE,OAAO,EAAG,GAC5BjtE,EAAgBlV,KAAKyR,EAAGC,EAAGgoB,GAE3BxkB,EAAgBlV,KAAK0R,EAAGD,EAAGioB,GAG/B,OAAOxkB,CACR,CAQD,SAAAylL,CAAUhvL,EAAMjN,EAAOm6G,GACrB,MAAMtuG,EAAUsuG,EAAYA,EAAYr9G,OAAS,GAC3C+1K,EAAOhnK,EAAc,KACrBqwL,EAAerpB,EAAO,IAAM,IAClC5lK,EAAK2/C,aAAa,eAAgBsvI,GAClC,MAAM7H,EAAUxoL,EAAiB,QACjC,IAAIuQ,EAAkB,MAClBi4K,IACFj4K,EAAkBiO,GAAcgqK,GAASp3K,sBAE3C,MAAMoB,EAAQre,EAAMorB,iBACpB,IAAIwJ,EAOJ,GAJEA,EADmC,OAAjCxY,EAAgBqnE,OAAO,EAAG,GACnBplE,EAAM,GAAK,IAAMA,EAAM,GAEvBA,EAAM,GAAK,IAAMA,EAAM,GAE9Bw0J,EAAM,CAGRj+I,GAAU,KADAvW,EAAM,IAAM,EAEvB,CACDkwJ,GAAoBthK,EAAM2nB,EAC3B,CASD,UAAA2jK,CAAWl6K,EAAOg2K,EAASxhB,GACzB,IAAIz2J,EAAkB,MAClBi4K,IACFj4K,EAAkBiO,GAAcgqK,GAASp3K,sBAE3C,IAAI2X,EAC+B,OAAjCxY,EAAgBqnE,OAAO,EAAG,GACtBplE,EAAM,GAAK,IAAMA,EAAM,GACvBA,EAAM,GAAK,IAAMA,EAAM,GAC7B,GAAIw0J,EAAM,CAGRj+I,GAAU,KADAvW,EAAM,IAAM,EAEvB,CAED,OAAOuW,CACR,CAQD,aAAAunK,CAAclvL,EAAMjN,EAAOm6G,GACzB,MAAMtuG,EAAUsuG,EAAYA,EAAYr9G,OAAS,GAC3C+1K,EAAOhnK,EAAc,KACrBqwL,EAAerpB,EAAO,IAAM,IAClC5lK,EAAK2/C,aAAa,eAAgBsvI,GAClC,MAAM7H,EAAUxoL,EAAiB,QAE3B6oF,EAAS10F,EAAMorB,iBACfznB,EAAM+wF,EAAO53F,OACbkpC,EAAQ,IAAIhoC,MAAM2F,GACxB,IAAI0a,EACJ,IAAK,IAAI9gB,EAAI,EAAGA,EAAIoG,IAAOpG,EACzB8gB,EAAQq2E,EAAOn3F,GACfyoC,EAAMzoC,GAAK5B,KAAK48L,WAAWl6K,EAAOg2K,EAASxhB,GAE7CtE,GAAoBthK,EAAM+4B,EAAMxxB,KAAK,KACtC,CAOD,UAAAwkL,CAAW/rL,EAAMqD,EAAU6pG,GACzB,MACMk6E,EADUl6E,EAAYA,EAAYr9G,OAAS,GAChB,QAC7Bu3L,GACFpnL,EAAK2/C,aAAa,UAAWynI,GAE/B,MAAM1wI,EAAMq1D,GAAgB/rG,EAAKgsG,aAAc,OAC/ChsG,EAAKW,YAAY+1C,GACjBhoD,KAAKsgM,UAAUt4I,EAAKrzC,EAAU6pG,EAC/B,CAOD,aAAAo/E,CAActsL,EAAMiI,EAAQilG,GAC1B,MACMk6E,EADUl6E,EAAYA,EAAYr9G,OAAS,GAChB,QAC7Bu3L,GACFpnL,EAAK2/C,aAAa,UAAWynI,GAE/B,MACM1vL,EAAS,CAACuQ,EAAO,GAAK,IAAMA,EAAO,GAAIA,EAAO,GAAK,IAAMA,EAAO,IACtEinG,GAEJ,CAAQlvG,KAAMA,GACRtR,KAAK69L,qBACLn+E,GACA12G,EACAw1G,EARW,CAAC,cAAe,eAU3Bx+G,KAEH,CAOD,eAAAo9L,CAAgB9rL,EAAMqD,EAAU6pG,GAC9B,MACMk6E,EADUl6E,EAAYA,EAAYr9G,OAAS,GAChB,QAC7Bu3L,GACFpnL,EAAK2/C,aAAa,UAAWynI,GAE/B,MAAM+H,EAAUpjF,GAAgB/rG,EAAKgsG,aAAc,WACnDhsG,EAAKW,YAAYwuL,GACjBzgM,KAAKwgM,cAAcC,EAAS9rL,EAAU6pG,EACvC,CASD,kBAAAu+E,CAAmB14L,EAAOm6G,EAAaiB,GACrC,MAAMvvG,EAAUsuG,EAAYA,EAAYr9G,OAAS,GAC3CgQ,EAAajB,EAAQoB,KACrB4rL,EAAkBhtL,EAAyB,gBAIjD,YAHwB1J,IAApB02L,IACFhtL,EAAyB,iBAAI,GAExBmtG,GACLlsG,EAAWmsG,kBACS92G,IAApB02L,EAAgC,WAAa,WAEhD,CAOD,qBAAAL,CAAsBvrL,EAAMqD,EAAU6pG,GACpC,MAAMtuG,EAAUsuG,EAAYA,EAAYr9G,OAAS,GAC3C+1K,EAAOhnK,EAAc,KACrBwoL,EAAUxoL,EAAiB,QAIjC,GAHsB,iBAAlBoB,EAAKmuG,UAA+Bi5E,GACtCpnL,EAAK2/C,aAAa,UAAWynI,GAET,YAAlBpnL,EAAKmuG,UAA4C,iBAAlBnuG,EAAKmuG,SAA6B,CACnE,MAAMlkG,EAAQ5G,EAASoiB,iBACvBypF,GACE,CAAClvG,KAAMA,EAAM4lK,KAAMA,EAAMwhB,QAASA,GAClC14L,KAAK88L,iBACL98L,KAAK+8L,mBACLxhL,EACAijG,OACAh4G,EACAxG,KAER,MAAW,GAAsB,YAAlBsR,EAAKmuG,SAAwB,CACtC,MAAMu9E,EAAU3/E,GAAgB/rG,EAAKgsG,aAAc,WACnDhsG,EAAKW,YAAY+qL,GACjBh9L,KAAKi9L,qBAAqBD,EAASroL,EAAU6pG,EAC9C,CACF,CAOD,sBAAA09E,CAAuB5qL,EAAMqD,EAAU6pG,GACrC,MACMk6E,EADUl6E,EAAYA,EAAYr9G,OAAS,GAChB,QAIjC,GAHsB,sBAAlBmQ,EAAKmuG,UAAoCi5E,GAC3CpnL,EAAK2/C,aAAa,UAAWynI,GAGX,eAAlBpnL,EAAKmuG,UACa,sBAAlBnuG,EAAKmuG,SACL,CACA,MAAMghF,EAAUpjF,GAAgB/rG,EAAKgsG,aAAc,WACnDhsG,EAAKW,YAAYwuL,GACjBzgM,KAAKwgM,cAAcC,EAAS9rL,EAAU6pG,EAC5C,MAAW,GAAsB,UAAlBltG,EAAKmuG,SAAsB,CACpC,MAAM2jD,EAAW/lD,GAAgB/rG,EAAKgsG,aAAc,YACpDhsG,EAAKW,YAAYmxJ,GACjBpjK,KAAKq8L,oBAAoBj5B,EAAUzuJ,EAAU6pG,EAC9C,CACF,CAOD,0BAAAi/E,CAA2BnsL,EAAMqD,EAAU6pG,GACzC,MAAMtuG,EAAUsuG,EAAYA,EAAYr9G,OAAS,GAC3C+1K,EAAOhnK,EAAc,KACrBwoL,EAAUxoL,EAAiB,QAC3B4rL,EAAU5rL,EAAiB,QAC7BwoL,GACFpnL,EAAK2/C,aAAa,UAAWynI,GAE/B,MAAMt/F,EAAWzkF,EAASmlF,cAC1B0mB,GACE,CAAClvG,KAAMA,EAAM4lK,KAAMA,EAAMwhB,QAASA,EAASoD,QAASA,GACpD97L,KAAK09L,mCACL19L,KAAK08L,mCACLtjG,EACAolB,OACAh4G,EACAxG,KAEH,CAOD,eAAAs9L,CAAgBhsL,EAAMqD,EAAU6pG,GAC9B,MAAMtuG,EAAUsuG,EAAYA,EAAYr9G,OAAS,GAC3Cu3L,EAAUxoL,EAAiB,QAC3BgnK,EAAOhnK,EAAc,KACvBwoL,GACFpnL,EAAK2/C,aAAa,UAAWynI,GAE/B,MAAM3/F,EAASpkF,EAASmkF,YACxB0nB,GACE,CAAClvG,KAAMA,EAAM4lK,KAAMA,EAAMwhB,QAASA,GAClC14L,KAAKu9L,wBACLn+E,GAAsB,eACtBrmB,EACAylB,OACAh4G,EACAxG,KAEH,CAOD,2BAAAu8L,CAA4BjrL,EAAMqD,EAAU6pG,GAC1C,MAAMtuG,EAAUsuG,EAAYA,EAAYr9G,OAAS,GAC3C+1K,EAAOhnK,EAAc,KACrBwoL,EAAUxoL,EAAiB,QAC3BssL,EAAQtsL,EAAe,MACzBwoL,GACFpnL,EAAK2/C,aAAa,UAAWynI,GAE/B,MAAMtkF,EAAQz/F,EAAS6jF,iBACvBgoB,GACE,CAAClvG,KAAMA,EAAM4lK,KAAMA,EAAMwhB,QAASA,EAAS8D,MAAOA,GAClDx8L,KAAKy8L,oCACLz8L,KAAK08L,mCACLtoF,EACAoK,OACAh4G,EACAxG,KAEH,CAOD,SAAAm9L,CAAU7rL,EAAM2pJ,EAAMz8C,GACpB,MAAM5rF,EAAayqF,GAAgB/rG,EAAKgsG,aAAc,cACtDhsG,EAAKW,YAAY2gB,GACjB5yB,KAAKo9L,gBAAgBxqK,EAAYqoI,EAAMz8C,EACxC,CAOD,2BAAAm/E,CAA4BrsL,EAAMglB,EAASkoF,GACzC,MAAM1sB,EAAQ9xF,KAAK47L,uBAAuBtlK,EAASkoF,GAC/C1sB,IACFxgF,EAAKW,YAAY6/E,GACjB9xF,KAAK68L,sBAAsB/qG,EAAOx7D,EAASkoF,GAE9C,CAOD,gBAAAg/E,CAAiBlsL,EAAMoR,EAAO87F,GAC5B,MAAM1sB,EAAQurB,GAAgB/rG,EAAKgsG,aAAc,SACjDhsG,EAAKW,YAAY6/E,GACjB9xF,KAAKq9L,WAAWvrG,EAAOpvE,EAAO87F,EAC/B,CAOD,4BAAA89E,CAA6BhrL,EAAM+kH,EAAM7X,GACvC,MAAM1sB,EAAQ9xF,KAAK47L,uBAAuBvlE,EAAM7X,GAC5C1sB,IACFxgF,EAAKW,YAAY6/E,GACjB9xF,KAAKk8L,uBAAuBpqG,EAAOukC,EAAM7X,GAE5C,CAQD,oBAAAy+E,CAAqB3rL,EAAMglB,EAASkoF,GAClC,MAAM1sB,EAAQurB,GAAgB/rG,EAAKgsG,aAAc,gBACjDhsG,EAAKW,YAAY6/E,GACjB9xF,KAAK68L,sBAAsB/qG,EAAOx7D,EAASkoF,EAC5C,CAQD,mBAAA69E,CAAoB/qL,EAAM+kH,EAAM7X,GAC9B,MAAM1sB,EAAQurB,GAAgB/rG,EAAKgsG,aAAc,qBACjDhsG,EAAKW,YAAY6/E,GACjB9xF,KAAKk8L,uBAAuBpqG,EAAOukC,EAAM7X,EAC1C,CAOD,oBAAAy9E,CAAqB3qL,EAAMqD,EAAU6pG,GACnC,MAAMtuG,EACJsuG,EAAYA,EAAYr9G,OAAS,GAE7BkK,EAAO3E,OAAO6C,OAAO,CAAE,EAAE2G,GAE/B,IAAI7L,EADJgH,EAAW,KAAIiG,EAGbjN,EADEhC,MAAMC,QAAQqS,GACRk8J,GACd,EACQ3gK,GAGMugK,GACd,GACQ,EACAvgK,GAGJswG,GAEJ,EACMxgH,KAAK28L,qBACL38L,KAAK47L,uBACL,CAACv3L,GACDm6G,OACAh4G,EACAxG,KAEH,CAOD,mBAAAg8L,CAAoB1qL,EAAMmuC,EAAS++D,GACjC,MAAMo7E,EAAMn6I,EAAQrqC,QAChBwkL,GACFtoL,EAAK2/C,aAAa,MAA8B,GAElD,MAAM/gD,EAAiCsuG,EAAYA,EAAYr9G,OAAS,GAClEs3L,EAAYvoL,EAAmB,UAC/BstJ,EAAe/9G,EAAQzqC,kBACxB9E,EAAQivG,cACXjvG,EAAQivG,YAAc,GACtBjvG,EAAQivG,YAAYs5E,GAAa,IAEnC,MAAM9xL,EAAO,GACPqC,EAAS,GACf,GAAIy2C,EAAQh2C,gBAAiB,CAC3B,MAAMoL,EAAa4qC,EAAQn2C,gBAC3B,IAAK,MAAM/B,KAAOsN,EAAY,CAC5B,MAAMxQ,EAAQwQ,EAAWtN,GACX,OAAVlD,IACFsC,EAAKhB,KAAK4B,GACVyB,EAAOrD,KAAKtB,GAEVkD,GAAOi2J,GAEL,mBADuB,EAA6B,sBAGhDj2J,KAAO2I,EAAQivG,YAAYs5E,KAC/BvoL,EAAQivG,YAAYs5E,GAAWlxL,GAAOu3G,GACpC9+G,KAAKi8L,qBACLj8L,OAIEuH,KAAO2I,EAAQivG,YAAYs5E,KAC/BvoL,EAAQivG,YAAYs5E,GAAWlxL,GAC7Bu3G,GAAkB8zD,KAI3B,CACF,CACD,MAAMvnK,EAAO3E,OAAO6C,OAAO,CAAE,EAAE2G,GAC/B7E,EAAKiG,KAAOA,EACZkvG,GAEJ,EACMtwG,EAAQivG,YACRC,QAAsB54G,EAAWiyL,GACjCzvL,EACAw1G,EACA73G,EAEH,CAQD,oBAAA+5L,CAAqBpvL,EAAM2xD,EAAUu7C,GACnC,MAAMtuG,EAAiCsuG,EAAYA,EAAYr9G,OAAS,GAClEq3L,EAActoL,EAAqB,YACnCuoL,EAAYvoL,EAAmB,UAE/BivG,EAAc,CAAA,EACpBA,EAAYs5E,GAAa,GACzBt5E,EAAYs5E,GAAWD,GAAe15E,GACpC9+G,KAAKg8L,oBACLh8L,MAEF,MAAMqL,EAAO3E,OAAO6C,OAAO,CAAE,EAAE2G,GAC/B7E,EAAKiG,KAAOA,EACZkvG,GAEJ,EACMrB,EACAC,GAAsBo5E,EAAaC,GACnCx1H,EACAu7C,EAEH,CAUD,kCAAAk+E,CAAmCr4L,EAAOm6G,EAAaiB,GACrD,MAAMtuG,EAAaqtG,EAAYA,EAAYr9G,OAAS,GAAGmQ,KACvD,OAAO+rG,GACLr9G,KAAK64L,UACLqC,GAAiC/pL,EAAWsuG,UAE/C,CAUD,sBAAAm8E,CAAuBv3L,EAAOm6G,EAAaiB,GACzC,MAAMvvG,EAAUsuG,EAAYA,EAAYr9G,OAAS,GAC3C06L,EAAe3rL,EAAsB,aACrC4rL,EAAU5rL,EAAiB,QAC3BssL,EAAQtsL,EAAe,MACvB6rL,EAAa7rL,EAAoB,WAiBvC,OAhBK7N,MAAMC,QAAQ+B,GAcjBo7G,EAAW,WAVM,kBAHjBA,EAAgE,EAE9DjxF,aACkD,IAAjBqtK,EACjCp8E,EAAW,eACW,YAAbA,IAAsC,IAAZq8E,EACnCr8E,EAAW,UACW,eAAbA,IAAuC,IAAV+8E,EACtC/8E,EAAW,QACW,oBAAbA,IAAiD,IAAfs8E,IAC3Ct8E,EAAW,cAKRpC,GAAgBr9G,KAAK64L,UAAWp5E,EACxC,CAUD,iBAAAuyD,CAAkBr9J,EAAUjK,GAC1BA,EAAU1K,KAAKmwK,aAAazlK,GAC5B,MAAMqqI,EAAO13B,GAAgBr9G,KAAK64L,UAAW,QACvC3oL,EAAU,CACdoB,KAAMyjI,EACNmiC,KAAMl3K,KAAKk3K,KACXwhB,QAAS14L,KAAK04L,QACd8D,MAAOx8L,KAAKy+L,OACZ3C,QAAS97L,KAAKw+L,SACd3C,aAAc77L,KAAK2+L,cACnB5C,WAAY/7L,KAAK0+L,aAMnB,OAJIh0L,GACFhE,OAAO6C,OAAO2G,EAASxF,GAEzB1K,KAAKi8L,qBAAqBlnD,EAAMpgI,EAAU,CAACzE,IACpC6kI,CACR,CAUD,iBAAAg9B,CAAkB9uG,EAAUv4D,GAC1BA,EAAU1K,KAAKmwK,aAAazlK,GAC5B,MAAM4G,EAAO+rG,GAAgBr9G,KAAK64L,UAAW,kBAC7CvnL,EAAK+lK,eACHj6D,GACA,qBACAp9G,KAAK24L,gBAEP,MAAMzoL,EAAU,CACdwoL,QAAS14L,KAAK04L,QACdxhB,KAAMl3K,KAAKk3K,KACXslB,MAAOx8L,KAAKy+L,OACZ3C,QAAS97L,KAAKw+L,SACd3C,aAAc77L,KAAK2+L,cACnB5C,WAAY/7L,KAAK0+L,YACjBjG,UAAWz4L,KAAKy4L,UAChBD,YAAax4L,KAAKw4L,aAMpB,OAJI9tL,GACFhE,OAAO6C,OAAO2G,EAASxF,GAEzB1K,KAAK0gM,qBAAqBpvL,EAAM2xD,EAAU,CAAC/yD,IACpCoB,CACR,EAOHitL,GAAK16L,UAAU+9K,kCAAoC,CACjD,6BAA8B,CAC5B55H,IAAO02D,GAAa6/E,GAAK16L,UAAUs8L,aACnCM,QAAW/hF,GAAa6/E,GAAK16L,UAAUu8L,iBACvC9mL,YAAeolG,GAAa28E,GAAKx3L,UAAUu8K,uBAQ/Cme,GAAK16L,UAAUw+K,0BAA4B,CACzC,6BAA8B,CAC5Bse,SAAYpC,GAAK16L,UAAU87L,eAC3BiB,SAAYrC,GAAK16L,UAAU+7L,iBAQ/BrB,GAAK16L,UAAUy1L,iBAAmB,CAChC,6BAA8B,CAC5BhmK,MAASorF,GAAa65E,GAAQ10L,UAAUw4K,WACxCniG,WAAcwkC,GAAa65E,GAAQ10L,UAAUg2L,gBAC7C9/G,WAAc2kC,GAAa65E,GAAQ10L,UAAUs4K,gBAC7ChiG,gBAAmBukC,GAAa65E,GAAQ10L,UAAUk2L,qBAClD/mK,WAAc0rF,GAAa65E,GAAQ10L,UAAUu4K,gBAC7CrmJ,QAAW2oF,GAAa65E,GAAQ10L,UAAUy4K,aAC1CliG,aAAgBskC,GAAa65E,GAAQ10L,UAAUo2L,kBAC/C+D,QAAWt/E,GAAa6/E,GAAK16L,UAAUg8L,aACvCzE,aAAgB18E,GAAa6/E,GAAK16L,UAAUk7L,kBAC5ChB,MAASr/E,GAAa6/E,GAAK16L,UAAUk8L,WACrC5E,WAAcz8E,GAAa6/E,GAAK16L,UAAU+6L,gBAC1CX,SAAYv/E,GAAa6/E,GAAK16L,UAAUo8L,gBAQ5C1B,GAAK16L,UAAUg7L,mBAAqB,CAClC,6BAA8B,CAC5BX,YAAez/E,GAAgB8/E,GAAK16L,UAAUo7L,mBAC9C4B,aAAgBpiF,GAAgB8/E,GAAK16L,UAAUo7L,qBAQnDV,GAAK16L,UAAUm7L,qBAAuB,CACpC,6BAA8B,CAC5Bb,cAAiB1/E,GAAgB8/E,GAAK16L,UAAUs7L,qBAChD2B,eAAkBriF,GAAgB8/E,GAAK16L,UAAUs7L,uBAQrDZ,GAAK16L,UAAUq7L,oBAAsB,CACnC,6BAA8B,CAC5BnlH,WAAc0kC,GAAgB85E,GAAQ10L,UAAUs4K,gBAChD4hB,MAASt/E,GAAgB8/E,GAAK16L,UAAUk8L,aAQ5CxB,GAAK16L,UAAUu7L,sBAAwB,CACrC,6BAA8B,CAC5BrpK,QAAW0oF,GAAgB85E,GAAQ10L,UAAUy4K,aAC7C0hB,QAAWv/E,GAAgB8/E,GAAK16L,UAAUg8L,eAQ9CtB,GAAK16L,UAAUi8L,gBAAkB,CAC/B,6BAA8B,CAC5B9C,QAAWt+E,GAAa6/E,GAAK16L,UAAUw7L,aAQ3Cd,GAAK16L,UAAUm8L,cAAgB,CAC7B,6BAA8B,CAC5B58B,SAAY1kD,GAAa6/E,GAAK16L,UAAU07L,eAQ5ChB,GAAK16L,UAAUq8L,iBAAmB,CAChC,6BAA8B,CAC5B9B,YAAe3/E,GAAgB8/E,GAAK16L,UAAUu8L,iBAC9C/B,YAAe5/E,GAAgB8/E,GAAK16L,UAAUu8L,mBAQlD7B,GAAK16L,UAAUy7L,gBAAkB,CAC/B,6BAA8B,CAC5ByB,aAAgBriF,GAAa6/E,GAAK16L,UAAU47L,oBAQhDlB,GAAK16L,UAAU27L,iBAAmB,CAChC,6BAA8B,CAC5BwB,kBAAqB1iF,GACnBigF,GAAK16L,UAAU67L,yBASrBnH,GAAQ10L,UAAUm3L,aAAe,CAC/B,6BAA8B,CAC5BhoK,WAAc0rF,GAAa65E,GAAQ10L,UAAU09K,oBAC7C0f,KAAQviF,GAAa6/E,GAAK16L,UAAUi7L,qBAaxCP,GAAK16L,UAAU0sK,cAKfguB,GAAK16L,UAAUi5L,iBAAmB,CAChC,6BAA8B,CAC5B8D,SAAY9hF,GAAkBy/E,GAAK16L,UAAUs5L,WAC7CwD,SAAY7hF,GAAkBy/E,GAAK16L,UAAUs5L,aAOjDoB,GAAK16L,UAAUg6L,qBAAuB,CACpC,6BAA8B,CAC5BO,YAAet/E,GAAkB8zD,IACjCyrB,YAAev/E,GAAkB8zD,MAOrC2rB,GAAK16L,UAAU65L,mCAAqC,CAClD,6BAA8B,CAC5BS,cAAiBr/E,GACfy/E,GAAK16L,UAAU85L,6BAEjB7C,cAAiBh8E,GACfy/E,GAAK16L,UAAU85L,+BAQrBY,GAAK16L,UAAU05L,wBAA0B,CACvC,6BAA8B,CAC5B7C,YAAe57E,GAAkBy/E,GAAK16L,UAAU25L,oBAOpDe,GAAK16L,UAAU44L,oCAAsC,CACnD,6BAA8B,CAC5B7B,iBAAoB97E,GAClBy/E,GAAK16L,UAAUy4L,8BAEjB4B,YAAep/E,GACby/E,GAAK16L,UAAUy4L,gCAQrBiC,GAAK16L,UAAU84L,qBAAuB,CACpC,6BAA8B,CAC5BoB,MAASj/E,GAAkBy/E,GAAK16L,UAAUq4L,wBAC1Cf,WAAcr8E,GAAkBy/E,GAAK16L,UAAU04L,6BAC/CjpK,MAASwrF,GAAkBy/E,GAAK16L,UAAUw5L,YAC1CnjH,WAAc4kC,GAAkBy/E,GAAK16L,UAAUy5L,iBAC/CvjH,WAAc+kC,GAAkBy/E,GAAK16L,UAAUq4L,wBAC/C/hH,gBAAmB2kC,GACjBy/E,GAAK16L,UAAU04L,6BAEjBvpK,WAAc8rF,GAAkBy/E,GAAK16L,UAAUu5L,iBAC/CrnK,QAAW+oF,GAAkBy/E,GAAK16L,UAAUg5L,uBAC5CziH,aAAgB0kC,GACdy/E,GAAK16L,UAAU45L,4BAEjBO,QAAWl/E,GAAkBy/E,GAAK16L,UAAUg5L,uBAC5CzB,aAAgBt8E,GACdy/E,GAAK16L,UAAU45L,4BAEjBQ,SAAYn/E,GAAkBy/E,GAAK16L,UAAU+5L,iBAIjD,IAAAsD,GAAe3C,GC/uCf,MAAM4C,WAAc5C,GAIlB,WAAAz+L,CAAY4K,GAGVzF,MAFAyF,EAAUA,GAAoB,IAO9B1K,KAAK24L,eAAiBjuL,EAAQiuL,eAC1BjuL,EAAQiuL,eACR34L,KAAK64L,UAAY,+CACtB,CAOD,oBAAAoD,CAAqB3qL,EAAMqD,EAAU6pG,GACnC,MAAMtuG,EAAUsuG,EAAYA,EAAYr9G,OAAS,GACjDq9G,EAAYA,EAAYr9G,OAAS,GAAKuF,OAAO6C,OAC3C,CAACwyL,YAAY,EAAMF,cAAc,GACjC3rL,GAEFjL,MAAMg3L,qBAAqB3qL,EAAMqD,EAAU6pG,EAC5C,EAGH2iF,GAAMt9L,UAAUg1L,UAAY,iCAM5BsI,GAAMt9L,UAAU+9K,kCAAoC,CAClD,iCAAkC,CAChC55H,IAAO02D,GAAa6/E,GAAK16L,UAAUs8L,aACnCM,QAAW/hF,GAAa6/E,GAAK16L,UAAUu8L,iBACvC9mL,YAAeolG,GAAa28E,GAAKx3L,UAAUu8K,uBAQ/C+gB,GAAMt9L,UAAUw+K,0BAA4B,CAC1C,iCAAkC,CAChCse,SAAYpC,GAAK16L,UAAU87L,eAC3BiB,SAAYrC,GAAK16L,UAAU+7L,iBAQ/BuB,GAAMt9L,UAAUy1L,iBAAmB,CACjC,iCAAkC,CAChChmK,MAASorF,GAAa65E,GAAQ10L,UAAUw4K,WACxCniG,WAAcwkC,GAAa65E,GAAQ10L,UAAUg2L,gBAC7C9/G,WAAc2kC,GAAa65E,GAAQ10L,UAAUs4K,gBAC7ChiG,gBAAmBukC,GAAa65E,GAAQ10L,UAAUk2L,qBAClD/mK,WAAc0rF,GAAa65E,GAAQ10L,UAAUu4K,gBAC7CrmJ,QAAW2oF,GAAa65E,GAAQ10L,UAAUy4K,aAC1CliG,aAAgBskC,GAAa65E,GAAQ10L,UAAUo2L,kBAC/C+D,QAAWt/E,GAAayiF,GAAMt9L,UAAUg8L,aACxCzE,aAAgB18E,GAAa6/E,GAAK16L,UAAUk7L,kBAC5ChB,MAASr/E,GAAayiF,GAAMt9L,UAAUk8L,WACtC5E,WAAcz8E,GAAa6/E,GAAK16L,UAAU+6L,gBAC1CX,SAAYv/E,GAAayiF,GAAMt9L,UAAUo8L,gBAQ7CkB,GAAMt9L,UAAUg7L,mBAAqB,CACnC,iCAAkC,CAChCX,YAAez/E,GAAgB8/E,GAAK16L,UAAUo7L,mBAC9C4B,aAAgBpiF,GAAgB8/E,GAAK16L,UAAUo7L,qBAQnDkC,GAAMt9L,UAAUm7L,qBAAuB,CACrC,iCAAkC,CAChCb,cAAiB1/E,GAAgB8/E,GAAK16L,UAAUs7L,qBAChD2B,eAAkBriF,GAAgB8/E,GAAK16L,UAAUs7L,uBAQrDgC,GAAMt9L,UAAUq7L,oBAAsB,CACpC,iCAAkC,CAChCnlH,WAAc0kC,GAAgB85E,GAAQ10L,UAAUs4K,gBAChD4hB,MAASt/E,GAAgB8/E,GAAK16L,UAAUk8L,aAQ5CoB,GAAMt9L,UAAUu7L,sBAAwB,CACtC,iCAAkC,CAChCrpK,QAAW0oF,GAAgB85E,GAAQ10L,UAAUy4K,aAC7C0hB,QAAWv/E,GAAgB8/E,GAAK16L,UAAUg8L,eAQ9CsB,GAAMt9L,UAAUi8L,gBAAkB,CAChC,iCAAkC,CAChC9C,QAAWt+E,GAAa6/E,GAAK16L,UAAUw7L,aAQ3C8B,GAAMt9L,UAAUm8L,cAAgB,CAC9B,iCAAkC,CAChC58B,SAAY1kD,GAAa6/E,GAAK16L,UAAU07L,eAQ5C4B,GAAMt9L,UAAUq8L,iBAAmB,CACjC,iCAAkC,CAChC9B,YAAe3/E,GAAgB8/E,GAAK16L,UAAUu8L,iBAC9C/B,YAAe5/E,GAAgB8/E,GAAK16L,UAAUu8L,mBAQlDe,GAAMt9L,UAAUy7L,gBAAkB,CAChC,iCAAkC,CAChCyB,aAAgBriF,GAAa6/E,GAAK16L,UAAU47L,oBAQhD0B,GAAMt9L,UAAU27L,iBAAmB,CACjC,iCAAkC,CAChCwB,kBAAqB1iF,GACnBigF,GAAK16L,UAAU67L,yBASrByB,GAAMt9L,UAAUi2L,mBAAqB,CACnC,iCAAkC,CAChCY,YAAej8E,GAAgB85E,GAAQ10L,UAAUs2L,mBACjDQ,aAAgBl8E,GAAgB85E,GAAQ10L,UAAUs2L,qBAQtDgH,GAAMt9L,UAAUm2L,wBAA0B,CACxC,iCAAkC,CAChCY,iBAAoBn8E,GAClB85E,GAAQ10L,UAAUw2L,wBAEpBQ,kBAAqBp8E,GACnB85E,GAAQ10L,UAAUw2L,0BASxB8G,GAAMt9L,UAAUq2L,qBAAuB,CACrC,iCAAkC,CAChCY,cAAiBr8E,GAAgB85E,GAAQ10L,UAAU02L,qBACnDQ,eAAkBt8E,GAAgB85E,GAAQ10L,UAAU02L,uBAQxD4G,GAAMt9L,UAAUu2L,oBAAsB,CACpC,iCAAkC,CAChC9mK,MAASmrF,GAAgB85E,GAAQ10L,UAAUg+K,+BAQ/Csf,GAAMt9L,UAAUy2L,yBAA2B,CACzC,iCAAkC,CAChCvgH,WAAc0kC,GAAgB85E,GAAQ10L,UAAUs4K,kBAQpDglB,GAAMt9L,UAAU22L,sBAAwB,CACtC,iCAAkC,CAChCzkK,QAAW0oF,GAAgB85E,GAAQ10L,UAAUy4K,eAQjD6kB,GAAMt9L,UAAUm3L,aAAe,CAC7B,iCAAkC,CAChChoK,WAAc0rF,GAAa65E,GAAQ10L,UAAU09K,oBAC7C0f,KAAQviF,GAAayiF,GAAMt9L,UAAUi7L,qBAOzCqC,GAAMt9L,UAAUi5L,iBAAmB,CACjC,iCAAkC,CAChC8D,SAAY9hF,GAAkBy/E,GAAK16L,UAAUs5L,WAC7CwD,SAAY7hF,GAAkBy/E,GAAK16L,UAAUs5L,aAOjDgE,GAAMt9L,UAAUg6L,qBAAuB,CACrC,iCAAkC,CAChCO,YAAet/E,GAAkB8zD,IACjCyrB,YAAev/E,GAAkB8zD,MAOrCuuB,GAAMt9L,UAAU65L,mCAAqC,CACnD,iCAAkC,CAChCS,cAAiBr/E,GACfy/E,GAAK16L,UAAU85L,6BAEjB7C,cAAiBh8E,GACfy/E,GAAK16L,UAAU85L,+BAQrBwD,GAAMt9L,UAAU05L,wBAA0B,CACxC,iCAAkC,CAChC7C,YAAe57E,GAAkBy/E,GAAK16L,UAAU25L,oBAOpD2D,GAAMt9L,UAAU44L,oCAAsC,CACpD,iCAAkC,CAChC7B,iBAAoB97E,GAClBy/E,GAAK16L,UAAUy4L,8BAEjB4B,YAAep/E,GACby/E,GAAK16L,UAAUy4L,gCAQrB6E,GAAMt9L,UAAU84L,qBAAuB,CACrC,iCAAkC,CAChCoB,MAASj/E,GAAkBy/E,GAAK16L,UAAUq4L,wBAC1Cf,WAAcr8E,GAAkBy/E,GAAK16L,UAAU04L,6BAC/CjpK,MAASwrF,GAAkBqiF,GAAMt9L,UAAUw5L,YAC3CnjH,WAAc4kC,GAAkBy/E,GAAK16L,UAAUy5L,iBAC/CvjH,WAAc+kC,GAAkBy/E,GAAK16L,UAAUq4L,wBAC/C/hH,gBAAmB2kC,GACjBy/E,GAAK16L,UAAU04L,6BAEjBvpK,WAAc8rF,GAAkBy/E,GAAK16L,UAAUu5L,iBAC/CrnK,QAAW+oF,GAAkBy/E,GAAK16L,UAAUg5L,uBAC5CziH,aAAgB0kC,GACdy/E,GAAK16L,UAAU45L,4BAEjBO,QAAWl/E,GAAkBy/E,GAAK16L,UAAUg5L,uBAC5CzB,aAAgBt8E,GACdy/E,GAAK16L,UAAU45L,4BAEjBQ,SAAYn/E,GAAkBy/E,GAAK16L,UAAU+5L,iBAIjD,IAAAwD,GAAeD,GCnUf,IAAAE,GArBA,MAIE,WAAAvhM,CAAYw3D,GAKVt3D,KAAKshM,SAAWhqI,CACjB,CAMD,UAAAiqI,GACE,OAAOvhM,KAAKshM,QACb,GCAH,IAAAE,GAhBA,cAA0BC,GAKxB,WAAA3hM,CAAYw3D,EAASrB,GACnBhxD,MAAMqyD,GAKNt3D,KAAKi2D,WAAaA,EAClBjiD,GAAOhU,KAAKi2D,WAAW90D,QAAU,EAAG,qCACrC,GCNH,IAAAugM,GATA,cAAkBC,GAIhB,WAAA7hM,CAAYm2D,GACVhxD,MAAM,MAAO5C,MAAMwB,UAAUC,MAAMC,KAAKC,WACzC,GC2BH,IAAA49L,GAhCA,cAAmBH,GAOjB,WAAA3hM,CAAY09J,EAAcjkJ,EAAQm/K,GAYhC,GAXAzzL,MAAM,QAKNjF,KAAKw9J,aAAeA,EAKpBx9J,KAAKuZ,OAASA,EACQ,IAAlBA,EAAOpY,OACT,MAAM,IAAIoH,MACR,kEAOJvI,KAAK04L,QAAUA,CAChB,GCPH,MAAME,GAA6B,CACjC,6BAA8B,CAC5BiJ,UAAahjF,GACX05E,GAAQ10L,UAAU01L,kBAClB,WAGJ,iCAAkC,CAChCuI,OAAUrjF,GAAgB85E,GAAQ10L,UAAUk1L,wBAQ1CgJ,GAA8B,CAClC,6BAA8B,CAC5BC,cAAiBnjF,GAAyB0zD,IAC1C0vB,aAAgBpjF,GAAyB0zD,IACzC2vB,aAAgBrjF,GAAyB0zD,KAE3C,iCAAkC,CAChCyvB,cAAiBnjF,GAAyB0zD,IAC1C0vB,aAAgBpjF,GAAyB0zD,IACzC2vB,aAAgBrjF,GAAyB0zD,MAQvC4vB,GAA+B,CACnC,6BAA8B,CAC5BC,mBAAsBvjF,GACpBwjF,GACA,sBAEFC,cAAiBzjF,GAAyB0jF,GAAmB,cAE/D,iCAAkC,CAChCH,mBAAsBvjF,GACpBwjF,GACA,sBAEFC,cAAiBzjF,GAAyB0jF,GAAmB,eAO3DC,GAAoB,CACxB,6BAA8B,CAC5BC,aAAgB3jF,GAAkB8zD,KAEpC,iCAAkC,CAChC6vB,aAAgB3jF,GAAkB8zD,MAOhC8vB,GAA0B,CAC9B,6BAA8B,CAC5BC,OAAU7jF,GAAkBwxD,IAC5BsyB,OAAU9jF,GAAkB+jF,IAC5BC,OAAUhkF,GAAkBikF,IAC5B34L,SAAY00G,GAAkBkkF,IAC9BC,OAAUnkF,GAAkBokF,KAE9B,iCAAkC,CAChCP,OAAU7jF,GAAkBwxD,IAC5BsyB,OAAU9jF,GAAkB+jF,IAC5BC,OAAUhkF,GAAkBikF,IAC5B34L,SAAY00G,GAAkBkkF,IAC9BC,OAAUnkF,GAAkBokF,MAmF1BC,GAAiB,UAKjBC,GAAQ,gCAKRC,GAAQ,CACZ,QAAS,iCACT,QAAS,6BACT,QAAS,8BAMLC,GAAQ,CACZ,QAAS,iCACT,QAAS,6BACT,QAAS,8BAMLC,GAAQ,CACZ,QAAS,iCACT,QAAS,6BACT,QAAS,8BAMLC,GAAmB,CACvB,QACE,4EACF,QACE,0EACF,QACE,2EAMEC,GAAc,CAClB,QAAStC,GACT,QAAS5C,GACT,QAASlD,IAsdX,SAASqI,GAA4B3jM,EAAMkjE,EAAUu7C,EAAajX,GAChEiZ,GACEjZ,EACAm7F,GACAtjF,GAAsBr/G,GACtBkjE,EACAu7C,EAEJ,CAOA,SAAS6jF,GAAuB/wL,EAAMktG,GACpC,OAAO+B,GAAgB,CAAE,EAAEwhF,GAA6BzwL,EAAMktG,EAChE,CAMA,MAAMmlF,GAAkB,CACtB,6BAA8B,CAC5BC,UAAanlF,IAAgB,SAAUntG,EAAMktG,GAC3C,OAAOltG,EAAK2lK,aAAa,MAC/B,KAEE,iCAAkC,CAChC2sB,UAAanlF,IAAgB,SAAUntG,EAAMktG,GAC3C,OAAOltG,EAAK2lK,aAAa,MAC/B,MAQA,SAAS4sB,GAAUvyL,EAAMktG,GACvB0B,GAAUyjF,GAAiBryL,EAAMktG,EACnC,CAMA,MAAMslF,GAAyB,CAC7B,6BAA8B,CAC5B3vL,QAAW0vL,IAEb,iCAAkC,CAChC1vL,QAAW0vL,KASf,SAAStB,GAAkBjxL,EAAMktG,GAC/B,OAAO+B,GAAgB,GAAIujF,GAAwBxyL,EAAMktG,EAC3D,CAOA,SAAS8xD,GAAah/J,EAAMmuC,EAAS++D,GACnC,MAAMtuG,EAAUsuG,EAAYA,EAAYr9G,OAAS,GAC3Cq3L,EAActoL,EAAqB,YACnCuoL,EAAYvoL,EAAmB,UAC/B6zL,EAAa7zL,EAAoB,WACjC4hF,EAAQurB,GAAgBo7E,EAAWD,GACzClnL,EAAKW,YAAY6/E,GACE,IAAfiyG,EACF1I,GAAKx3L,UAAUm4L,oBAAoBlqG,EAAOryC,EAAS++D,GAC3B,IAAfulF,EACTxF,GAAK16L,UAAUm4L,oBAAoBlqG,EAAOryC,EAAS++D,GAEnD2iF,GAAMt9L,UAAUm4L,oBAAoBlqG,EAAOryC,EAAS++D,EAExD,CAOA,SAASwlF,GAAkB1yL,EAAMsoL,EAAKp7E,GACpC,MACM3D,EADU2D,EAAYA,EAAYr9G,OAAS,GAChB,QAC3B+3L,EAAKmK,GAAMxoF,GACXrjE,EAAS6lE,GAAgB67E,EAAI,UAC7BpnG,EAAQurB,GAAgB67E,EAAI,aAClC1hJ,EAAOvlC,YAAY6/E,GACnBA,EAAM7gC,aAAa,MAA8B,GACjD3/C,EAAKW,YAAYulC,EACnB,CAOA,SAASysJ,GAAYC,EAAe1L,GAElC,MAAM7tD,GADNu5D,EAAgBA,GAAgCf,IACjB,IAE/B,OAAI3K,EAAYzvF,WAAW4hC,GAClB6tD,EAEF7tD,EAAS6tD,CAClB,CAOA,SAASuK,GAAYzxL,EAAMmuC,EAAS++D,GAClC,MAAMtuG,EAAUsuG,EAAYA,EAAYr9G,OAAS,GACjD6S,QAA2BxN,IAApBi5C,EAAQrqC,QAAuB,gCACtC,MAAMojL,EAActoL,EAAqB,YACnCg0L,EAAgBh0L,EAAuB,cACvCuoL,EAAYvoL,EAAmB,UAC/B0xH,EAAWqiE,GAAYC,EAAe1L,GAC5ClnL,EAAK2/C,aAAa,WAAY2wE,GAC9BtwH,EAAK+lK,eAAe+rB,GAAO,SAAWc,EAAezL,GACrD,MAAMmB,EAAMn6I,EAAQrqC,aACR5O,IAARozL,GACFoK,GAAkB1yL,EAAMsoL,EAAKp7E,EAEjC,CAOA,SAASqkF,GAAYvxL,EAAMmuC,EAAS++D,GAClC,MAAMtuG,EAAUsuG,EAAYA,EAAYr9G,OAAS,GACjD6S,QAA2BxN,IAApBi5C,EAAQrqC,QAAuB,gCACtC,MAAMylG,EAAU3qG,EAAiB,QAC3BsoL,EAActoL,EAAqB,YACnCg0L,EAAgBh0L,EAAuB,cACvCuoL,EAAYvoL,EAAmB,UAC/B0xH,EAAWqiE,GAAYC,EAAe1L,GACtCh7B,EAAe/9G,EAAQzqC,kBAC7B1D,EAAK2/C,aAAa,WAAY2wE,GAC9BtwH,EAAK+lK,eAAe+rB,GAAO,SAAWc,EAAezL,GACrD,MAAMmB,EAAMn6I,EAAQrqC,QACpB,QAAY5O,IAARozL,EAAmB,CACrB,MAAMjzL,EAAO84C,EAAQp2C,UACfL,EAAS,GACf,IAAK,IAAIpH,EAAI,EAAGuE,EAAKQ,EAAKxF,OAAQS,EAAIuE,EAAIvE,IAAK,CAC7C,MAAMyC,EAAQo7C,EAAQt2C,IAAIxC,EAAK/E,IAC/B,QAAc4E,IAAVnC,EAAqB,CACvB,IAAIoR,EAAO9O,EAAK/E,GAEdyC,GAC4D,mBAAnC,EAA6B,wBAEtDoR,EAAO+nJ,GAETx0J,EAAOrD,KAAK,CAAC8P,KAAMA,EAAMpR,MAAOA,GACjC,CACF,CACDm8G,GACoD,CAChD3F,UACAkpF,WAAc7zL,EAAoB,WAClCoB,OACA4lK,KAAQhnK,EAAc,KACtBwoL,QAAWxoL,EAAiB,SAE9BwyL,GACAtjF,GAAsB,YACtBp2G,EACAw1G,GAEFwlF,GAAkB1yL,EAAMsoL,EAAKp7E,EAC9B,CACH,CAOA,SAASwkF,GAAc1xL,EAAM4zK,EAAM1mE,GACjC,MAAMtuG,EAAUsuG,EAAYA,EAAYr9G,OAAS,GAC3C05G,EAAU3qG,EAAiB,QAC3BgpL,EAAKoK,GAAMzoF,GAEXplG,EAAO4nG,GAAgB67E,EADD,UAAZr+E,EAAsB,iBAAmB,QAEnDkpF,EAAa7zL,EAAoB,WAGvC,GAFAoB,EAAKW,YAAYwD,GACjBm9J,GAAoBn9J,EAAMyvK,EAAKzvK,WACZjP,IAAf0+K,EAAK7gL,OAAsC,OAAf6gL,EAAK7gL,MAAgB,CACnD,MAAMA,EAAQg5G,GAAgB67E,EAAI,SAClC5nL,EAAKW,YAAY5N,GAEf6gL,EAAK7gL,OAEH,mBADwB6gL,EAAU,MAAuB,sBAGxC,IAAf6e,EACF1I,GAAKx3L,UAAUo4L,qBAAqB53L,EAAO6gL,EAAK7gL,MAAOm6G,GAC/B,IAAfulF,EACTxF,GAAK16L,UAAUo4L,qBAAqB53L,EAAO6gL,EAAK7gL,MAAOm6G,GAEvD2iF,GAAMt9L,UAAUo4L,qBAAqB53L,EAAO6gL,EAAK7gL,MAAOm6G,GAG1Do0D,GAAoBvuK,EAAO6gL,EAAK7gL,MAEnC,CACH,CAOA,SAAS6+L,GAAY5xL,EAAM6yL,EAAe3lF,GACpC2lF,EAAcC,UAChB9yL,EAAK2/C,aAAa,WAAYkzI,EAAcC,eAEX59L,IAA/B29L,EAAcE,cAChB/yL,EAAK2/C,aAAa,eAAgBroD,OAAOu7L,EAAcE,oBAE7B79L,IAAxB29L,EAAc9/L,OAChBuuK,GAAoBthK,EAAM6yL,EAAc9/L,MAE5C,CAKA,MAAMigM,GAAyB,CAC7B,6BAA8B,CAC5BC,MAASzlF,GAAkB0lF,KAE7B,iCAAkC,CAChCD,MAASzlF,GAAkB0lF,KAE7B,6BAA8B,CAC5BC,OAAU3lF,GAAkB4lF,IAC5BC,IAAO7lF,GAAkB8lF,IACzBC,GAAM/lF,GAAkB8lF,IACxBvhE,IAAOvkB,GAAkBgmF,IACzBC,KAAQjmF,GAAkBkmF,IAC1BC,SAAYnmF,GAAkBomF,IAC9BC,WAAcrmF,GAAkBomF,IAChCE,OAAUtmF,GAAkBomF,IAC5BG,QAAWvmF,GAAkBwmF,IAC7BC,kBAAqBzmF,GAAkB0mF,IACvCC,qBAAwB3mF,GAAkB0mF,IAC1CE,mBAAsB5mF,GAAkB0mF,IACxCG,4BAA+B7mF,GAAkB0mF,IACjDI,sBAAyB9mF,GAAkB0mF,IAC3CK,+BAAkC/mF,GAAkB0mF,IACpDM,eAAkBhnF,GAAkBinF,IACpCC,kBAAqBlnF,GAAkBmnF,IACvCC,eAAkBpnF,GAAkBqnF,KAEtC,iCAAkC,CAChC1B,OAAU3lF,GAAkB4lF,IAC5BC,IAAO7lF,GAAkB8lF,IACzBC,GAAM/lF,GAAkB8lF,IACxBvhE,IAAOvkB,GAAkBgmF,IACzBC,KAAQjmF,GAAkBkmF,IAC1BC,SAAYnmF,GAAkBomF,IAC9BkB,SAAYtnF,GAAkBomF,IAC9BC,WAAcrmF,GAAkBomF,IAChCmB,WAAcvnF,IA0GlB,SAA+BxtG,EAAMkmC,EAAQgnE,GAC3CltG,EAAK2/C,aAAa,MAA8BzZ,EAAU,IAC5D,IA3GI4tJ,OAAUtmF,GAAkBomF,IAC5BG,QAAWvmF,GAAkBwmF,IAC7BC,kBAAqBzmF,GAAkB0mF,IACvCC,qBAAwB3mF,GAAkB0mF,IAC1CE,mBAAsB5mF,GAAkB0mF,IACxCG,4BAA+B7mF,GAAkB0mF,IACjDI,sBAAyB9mF,GAAkB0mF,IAC3CK,+BAAkC/mF,GAAkB0mF,IACpDM,eAAkBhnF,GAAkBinF,IACpCC,kBAAqBlnF,GAAkBmnF,IACvCC,eAAkBpnF,GAAkBqnF,MASxC,SAAS3B,GAAWlzL,EAAMknL,EAAah6E,GACrC,MAAMtuG,EAAiCsuG,EAAYA,EAAYr9G,OAAS,GAClE05G,EAAU3qG,EAAiB,QAC3Bg0L,EAAgBh0L,EAAuB,cACvCuoL,EAAYvoL,EAAmB,UAC/Bo2L,EAAgBp2L,EAAuB,cACvCwoL,EAAUxoL,EAAiB,QACjC,IAAI0xH,EAOA2kE,EAJF3kE,EADEsiE,EACSD,GAAYC,EAAe1L,GAE3BA,EAIX+N,EADc,UAAZ1rF,EACa,YAEA,WAEjBvpG,EAAK2/C,aAAas1I,EAAc3kE,GAC5B82D,GACFpnL,EAAK2/C,aAAa,UAAWynI,GAE3BD,GACFnnL,EAAK+lK,eAAe+rB,GAAO,SAAWc,EAAezL,GAEvD,MAAMptL,EACJ3E,OAAO6C,OAAO,CAAE,EAAE2G,GAEpB7E,EAAKiG,KAAOA,EACZkvG,GACEn1G,EACAm3L,GACApjF,GAAsB,gBACtBknF,EACA9nF,GAEF,MAAMhnE,EAAStnC,EAAgB,OAC/B,GAAIsnC,EAAQ,CACV,MAAMs6C,EAAQurB,GAAgBmpF,GAAY3rF,GAAU,UACpDvpG,EAAKW,YAAY6/E,GACjB20G,GAAqB30G,EAAOt6C,EAAQgnE,EACrC,CACH,CAOA,SAASioF,GAAqBn1L,EAAMkmC,EAAQgnE,GAC1C,MAAMtuG,EAAiCsuG,EAAYA,EAAYr9G,OAAS,GAElEkK,EAAO,CAACiG,QACd5K,OAAO6C,OAAO8B,EAAM,CAAC6E,YACrBswG,GACEn1G,EACAi5L,GACAllF,GAAsB5nE,EAAO+pJ,cAC7B,CAAC/pJ,GACDgnE,EAEJ,CAOA,SAASwmF,GAAgB1zL,EAAMkmC,EAAQgnE,GACrC,MAAMttG,EAAgCstG,EAAYA,EAAYr9G,OAAS,GAEjE05G,EADU3pG,EAAgB,QACC,QACjCA,EAAgB,QAAIsmC,EAAOkhJ,QAC3B,MAAM5xK,EAAS28K,GAAY5oF,GAE3B6rF,GAAkB7rF,EAASvpG,EAAMkmC,EAAOgmH,cACxC12I,EAAOjjB,UAAUo4L,qBAAqB3qL,EAAMkmC,EAAOj+B,OAAQilG,EAC7D,CAgBA,SAAS0mF,GAAmB5zL,EAAMkmC,EAAQgnE,GACxC,MAAMttG,EAAgCstG,EAAYA,EAAYr9G,OAAS,GAEjE05G,EADU3pG,EAAgB,QACC,QACjCA,EAAgB,QAAIsmC,EAAOkhJ,QAC3B,MAAM5xK,EAAS28K,GAAY5oF,GAE3B6rF,GAAkB7rF,EAASvpG,EAAMkmC,EAAOgmH,cACxC12I,EAAOjjB,UAAUo4L,qBAAqB3qL,EAAMkmC,EAAO7iC,SAAU6pG,EAC/D,CAOA,SAAS8mF,GAAmBh0L,EAAMkmC,EAAQgnE,GACxC,MAEM3D,EAFgC2D,EAAYA,EAAYr9G,OAAS,GACvC,QACC,QACjC+jM,GAAmB5zL,EAAMkmC,EAAQgnE,GACjC,MAAMl3F,EAAW+1F,GAAgBmpF,GAAY3rF,GAAU,YACvD+3D,GAAoBtrJ,EAAUkwB,EAAOlwB,SAAS3O,YAC9B,UAAZkiG,EACFvzF,EAAS2pC,aAAa,MAAOzZ,EAAOmvJ,MAEpCr/K,EAAS2pC,aAAa,QAASzZ,EAAOmvJ,MAExCr1L,EAAKW,YAAYqV,EACnB,CAOA,SAASo9K,GAAkBpzL,EAAMkmC,EAAQgnE,GACvC,MAEM3D,EAFgC2D,EAAYA,EAAYr9G,OAAS,GACvC,QACC,QAEjCylM,GAAgBrD,GAAM1oF,GAAU,iBAAkBvpG,EAAMkmC,EAAOqvJ,cAC/D,MAAMC,EAAazpF,GAAgBg7E,GAAO,cAE1C/mL,EAAKW,YAAY60L,GAEjB,MAAM/kM,EAAQs7G,GAAgBg7E,GAAO,SACrCyO,EAAW70L,YAAYlQ,GACvBglM,GAAiBhlM,EAAOy1C,EAAOz1C,OAE/B,MAAMC,EAAMq7G,GAAgBg7E,GAAO,OACnCyO,EAAW70L,YAAYjQ,GACvB+kM,GAAiB/kM,EAAKw1C,EAAOx1C,IAC/B,CAOA,SAAS4iM,GAAmBtzL,EAAMkmC,EAAQgnE,GACxC,MACMtuG,EADgCsuG,EAAYA,EAAYr9G,OAAS,GACvC,QAE1BkK,EAAO,CAACiG,QACd5K,OAAO6C,OAAO8B,EAAM,CAAC6E,YACrB,MAAM+lD,EAAaze,EAAOye,WAC1B,IAAK,IAAIr0D,EAAI,EAAGuE,EAAK8vD,EAAW90D,OAAQS,EAAIuE,IAAMvE,EAAG,CACnD,MAAMu2D,EAAYlC,EAAWr0D,GAC7B4+G,GACEn1G,EACAi5L,GACAllF,GAAsBjnD,EAAUopI,cAChC,CAACppI,GACDqmD,EAEH,CACH,CAOA,SAASsmF,GAAexzL,EAAMkmC,EAAQgnE,GACpC,MACMtuG,EADgCsuG,EAAYA,EAAYr9G,OAAS,GACvC,QAE1BkK,EAAO,CAACiG,QACd5K,OAAO6C,OAAO8B,EAAM,CAAC6E,YACrB,MAAMioD,EAAY3gB,EAAO2gB,UACzBqoD,GACEn1G,EACAi5L,GACAllF,GAAsBjnD,EAAUopI,cAChC,CAACppI,GACDqmD,EAEJ,CAOA,SAASgnF,GAAsBl0L,EAAMkmC,EAAQgnE,GAC3C,MAEM3D,EAFgC2D,EAAYA,EAAYr9G,OAAS,GACvC,QACC,aACRqF,IAArBgxC,EAAOwvJ,WACT11L,EAAK2/C,aAAa,YAAazZ,EAAOwvJ,UAAUruL,YAElD+tL,GAAkB7rF,EAASvpG,EAAMkmC,EAAOqvJ,cACxCI,GAAapsF,EAASvpG,EAAM,GAAKkmC,EAAOwvF,WAC1C,CAOA,SAAS++D,GAAkBz0L,EAAMkmC,EAAQgnE,GAIvCkoF,GAHsCloF,EAAYA,EAAYr9G,OAAS,GACvC,QACC,QACNmQ,EAAMkmC,EAAOqvJ,aAC1C,CAOA,SAASZ,GAAqB30L,EAAMkmC,EAAQgnE,GAC1C,MAEM3D,EAFgC2D,EAAYA,EAAYr9G,OAAS,GACvC,QACC,QAC3B+3L,EAAKsN,GAAY3rF,GAEvB6rF,GAAkB7rF,EAASvpG,EAAMkmC,EAAOqvJ,cAExC,MAAMK,EAAgB7pF,GAAgB67E,EAAI,iBAC1C5nL,EAAKW,YAAYi1L,GACjBD,GAAapsF,EAASqsF,EAAe,GAAK1vJ,EAAO0vJ,eAEjD,MAAMC,EAAgB9pF,GAAgB67E,EAAI,iBAC1C5nL,EAAKW,YAAYk1L,GACjBF,GAAapsF,EAASssF,EAAe,GAAK3vJ,EAAO2vJ,cACnD,CAOA,SAAShB,GAAkB70L,EAAMkmC,EAAQgnE,GACvC,MAEM3D,EAFgC2D,EAAYA,EAAYr9G,OAAS,GACvC,QACC,QACjCmQ,EAAK2/C,aAAa,WAAYzZ,EAAO4vJ,UACrC91L,EAAK2/C,aAAa,aAAczZ,EAAO6vJ,YACvC/1L,EAAK2/C,aAAa,aAAczZ,EAAO8vJ,iBACd9gM,IAArBgxC,EAAOwvJ,WACT11L,EAAK2/C,aAAa,YAAazZ,EAAOwvJ,UAAUruL,YAElD+tL,GAAkB7rF,EAASvpG,EAAMkmC,EAAOqvJ,cACxCI,GAAapsF,EAASvpG,EAAM,GAAKkmC,EAAO+vJ,QAC1C,CAQA,SAASX,GAAgB1N,EAAI5hI,EAAShmD,EAAMjN,GAC1C,MAAMQ,EAAWw4G,GAAgB67E,EAAI5hI,GACrCs7G,GAAoB/tK,EAAUR,GAC9BiN,EAAKW,YAAYpN,EACnB,CAOA,SAASoiM,GAAapsF,EAASvpG,EAAMjN,GACnCuiM,GAAgBJ,GAAY3rF,GAAU,UAAWvpG,EAAMjN,EACzD,CAOA,SAASqiM,GAAkB7rF,EAASvpG,EAAMjN,GACxB,UAAZw2G,EACF+rF,GAAgBrD,GAAM1oF,GAAU,iBAAkBvpG,EAAMjN,GAExDuiM,GAAgBvD,GAAMxoF,GAAU,eAAgBvpG,EAAMjN,EAE1D,CAMA,SAAS0iM,GAAiBz1L,EAAM9D,GAC9B,MAAMg6L,EAAcnqF,GAAgBg7E,GAAO,eAC3C/mL,EAAKW,YAAYu1L,GAEjB,MAAMC,EAAepqF,GAAgBg7E,GAAO,gBAC5CmP,EAAYv1L,YAAYw1L,GACxB70B,GAAoB60B,EAAcj6L,EACpC,CA6BA,SAASk6L,GAAgBp2L,EAAM6nL,EAAc36E,GAC3C,MAAMtuG,EAAiCsuG,EAAYA,EAAYr9G,OAAS,GAClEkK,EACJ3E,OAAO6C,OAAO,CAAE,EAAE2G,GAEpB7E,EAAKiG,KAAOA,EACZkvG,GACEn1G,EACAi5L,GACAllF,GAAsB,SACtB+5E,EACA36E,EAEJ,CAEA,SAASgoF,GAAY3rF,GACnB,IAAIq+E,EAMJ,OAJEA,EADc,UAAZr+E,EACG0oF,GAAM1oF,GAENwoF,GAAMxoF,GAENq+E,CACT,CAEA,IAAAyO,GA1lCA,cAAkBpwB,GAIhB,WAAAz3K,CAAY4K,GACVzF,QAEAyF,EAAUA,GAAoB,GAM9B1K,KAAKg8G,SAAWtxG,EAAQmwG,QAAUnwG,EAAQmwG,QAxBtB,QA8BpB76G,KAAK4nM,aAAel9L,EAAQ8tL,YAM5Bx4L,KAAK6nM,WAAan9L,EAAQ+tL,UAM1Bz4L,KAAK8nM,WAAap9L,EAAQq9L,UACtBr9L,EAAQq9L,UACR,IAAItE,GAAYzjM,KAAKg8G,UAMzBh8G,KAAKgoM,gBAAkBt9L,EAAQiuL,eAC3BjuL,EAAQiuL,eACR6K,GAAiBxjM,KAAKg8G,SAC3B,CAKD,cAAAisF,GACE,OAAOjoM,KAAK4nM,YACb,CAKD,cAAAM,CAAe1P,GACbx4L,KAAK4nM,aAAepP,CACrB,CAQD,oBAAAjnB,CAAqBjgK,EAAM5G,GAEzB,MAAMwF,EAAU,CACdoB,QAEF5K,OAAO6C,OAAO2G,EAAS,CACrBsoL,YAAex4L,KAAK4nM,aACpBnP,UAAaz4L,KAAK6nM,aAGpBnhM,OAAO6C,OAAO2G,EAASlQ,KAAKkwK,eAAe5+J,EAAM5G,GAAoB,CAAE,IACvE,MAAM8zG,EAAc,CAACtuG,GACrB,IAAIi4L,EAEFA,EADoB,UAAlBnoM,KAAKg8G,SACM48E,GAEA54L,KAAK8nM,WAAWlP,2BAE/B,IAAI31H,EAAWs9C,GACb,GACA4nF,EACA72L,EACAktG,EACAx+G,KAAK8nM,YAKP,OAHK7kI,IACHA,EAAW,IAENA,CACR,CASD,uBAAAmlI,CAAwBn+L,GACtB,GAAKA,EAAL,CAGA,GAAsB,iBAAXA,EAAqB,CAC9B,MAAMyhD,EAAM1gB,GAAM/gC,GAClB,OAAOjK,KAAKqoM,oCAAoC38I,EACjD,CACD,OAAIyyD,GAAWl0G,GACNjK,KAAKqoM,oCAClB,GAGWroM,KAAKsoM,gCAChB,EAXK,CAaF,CAUD,6BAAAC,CAA8Bt+L,GAC5B,GAAKA,EAAL,CAGA,GAAsB,iBAAXA,EAAqB,CAC9B,MAAMyhD,EAAM1gB,GAAM/gC,GAClB,OAAOjK,KAAKwoM,0CAA0C98I,EACvD,CACD,OAAIyyD,GAAWl0G,GACNjK,KAAKwoM,0CAClB,GAGWxoM,KAAKyoM,sCAChB,EAXK,CAaF,CAOD,yCAAAD,CAA0C98I,GACxC,IAAK,IAAI/pD,EAAyB+pD,EAAc,WAAG/pD,EAAGA,EAAIA,EAAEu8G,YAC1D,GAAIv8G,EAAEk8G,UAAYC,KAAK0zD,aACrB,OAAOxxK,KAAKyoM,sCACpB,EAKG,CAOD,qCAAAA,CAAsCn3L,GACpC,MAAMk/B,EAAS,CAAA,EACTnsC,EAAQmuK,GACZlhK,EAAK2lK,aAAa,qBAGpB,OADAzmI,EAAyB,iBAAInsC,EACtBk8G,GACX,EACMq4E,GACAtnL,EACA,GACAtR,KAAK8nM,WAER,CAMD,mCAAAO,CAAoC38I,GAClC,IAAK,IAAI/pD,EAAyB+pD,EAAc,WAAG/pD,EAAGA,EAAIA,EAAEu8G,YAC1D,GAAIv8G,EAAEk8G,UAAYC,KAAK0zD,aACrB,OAAOxxK,KAAKsoM,gCAAwD,EAIzE,CAMD,+BAAAA,CAAgCh3L,GAC9B,OAAOivG,GACX,CAA4C,EACtC4hF,GACA7wL,EACA,GAEH,CASD,eAAAo2L,CAAgBh9L,GACd,MAAM4G,EAAO+rG,GAAgBimF,GAAMtjM,KAAKg8G,UAAW,cACnD1qG,EAAK2/C,aAAa,UAAW,OAC7B3/C,EAAK2/C,aAAa,UAAWjxD,KAAKg8G,UAC9BtxG,EAAQg+L,QACVp3L,EAAK2/C,aAAa,SAAUvmD,EAAQg+L,QAElCh+L,EAAQi+L,cACVr3L,EAAK2/C,aAAa,eAAgBvmD,EAAQi+L,mBAEhBniM,IAAxBkE,EAAQk+L,aACVt3L,EAAK2/C,aAAa,cAAeroD,OAAO8B,EAAQk+L,cAE9Cl+L,EAAQm+L,YACVv3L,EAAK2/C,aAAa,aAAcvmD,EAAQm+L,iBAEfriM,IAAvBkE,EAAQmjD,YACVv8C,EAAK2/C,aAAa,aAAcroD,OAAO8B,EAAQmjD,kBAE3BrnD,IAAlBkE,EAAQkjD,OACVt8C,EAAK2/C,aAAa,QAASroD,OAAO8B,EAAQkjD,aAEjBpnD,IAAvBkE,EAAQo+L,YACVx3L,EAAK2/C,aAAa,aAAcvmD,EAAQo+L,YAE1Cx3L,EAAK+lK,eACHj6D,GACA,qBACAp9G,KAAKgoM,iBAGP,MAAM93L,EAAU,CACdoB,QAaF,GAXA5K,OAAO6C,OAAO2G,EAAS,CACrB2qG,QAAW76G,KAAKg8G,SAChB08E,QAAWhuL,EAAQguL,QACnBD,UAAa/tL,EAAQ+tL,UAAY/tL,EAAQ+tL,UAAYz4L,KAAK6nM,WAC1D3D,cAAiBx5L,EAAQw5L,cACzBoC,cAAiB57L,EAAQ47L,cAAgB57L,EAAQ47L,cAAgB,KAEnEtyL,GACE3R,MAAMC,QAAQoI,EAAQyuL,cACtB,2CAEqC,iBAA5BzuL,EAAQyuL,aAAa,GAAiB,CAC/C,IAAI3hJ,EAAS9sC,EAAQ8sC,OACjB9sC,EAAQqmF,OACV/8E,GACEtJ,EAAQ8yJ,aACR,2EAEFhmH,EAASx3C,KAAK+oM,qBACZr+L,EAAQ8yJ,aACR9yJ,EAAQqmF,KACRrmF,EAAQguL,QACRlhJ,IAGJ9wC,OAAO6C,OAAO2G,EAAS,CACrBstJ,aAAgB9yJ,EAAQ8yJ,aACxBhmH,OAAUA,IAEZkwJ,GACEp2L,EAC+B5G,EAAoB,aACnD,CAACwF,GAET,MAEMxF,EAAQyuL,aAAajuL,SAAoCstL,IACvD,MAAMwQ,EAAiBhpM,KAAK+oM,qBAC1BvQ,EAAYh7B,aACZg7B,EAAYznG,KACZrmF,EAAQguL,QACRhuL,EAAQ8sC,QAEV9wC,OAAO6C,OAAO2G,EAAS,CACrBstJ,aAAgBg7B,EAAYh7B,aAC5BhmH,OAAUwxJ,IAEZtB,GAAgBp2L,EAAM,CAACknL,EAAY/iL,MAAO,CAACvF,GAAS,IAGxD,OAAOoB,CACR,CAYD,oBAAAy3L,CAAqBvrC,EAAcjkJ,EAAQm/K,EAASlhJ,GAClD,MAAMyxJ,EC5fH,SAAczrC,EAAcjkJ,EAAQm/K,GACzC,OAAO,IAAIwQ,GAAK1rC,EAAcjkJ,EAAQm/K,EACxC,CD0fuByQ,CAAa3rC,EAAcjkJ,EAAQm/K,GACtD,OAAIlhJ,ECpiBD,SAAaye,GAClB,MAAMs6B,EAAS,CAAC,MAAMwF,OAAO1zF,MAAMwB,UAAUC,MAAMC,KAAKC,YACxD,OAAO,IAAKolM,SAASvlM,UAAUqD,KAAKhD,MAAMygM,GAAKp0G,GACjD,CDmiBa84G,CAAY7xJ,EAAQyxJ,GAEtBA,CACR,CAYD,gBAAAK,CAAiBC,EAASC,EAASC,EAAS/+L,GAC1C,MAAM8zG,EAAc,GACd3D,EAAUnwG,EAAQmwG,QAAUnwG,EAAQmwG,QAAU76G,KAAKg8G,SACnD1qG,EAAO+rG,GAAgBimF,GAAMzoF,GAAU,eAI7C,IAAI6uF,EAFJp4L,EAAK2/C,aAAa,UAAW,OAC7B3/C,EAAK2/C,aAAa,UAAW4pD,GAGzBnwG,IACFg/L,EAAUh/L,EAAQi/L,WAAaj/L,EAAQi/L,WAAa,CAAA,EAChDj/L,EAAQg+L,QACVp3L,EAAK2/C,aAAa,SAAUvmD,EAAQg+L,SAGxCp3L,EAAK+lK,eACHj6D,GACA,qBACAomF,GAAiB3oF,IAGnB,MAAMtT,EAkEV,SAAkCj2F,EAAMo4L,EAAS7uF,EAASnwG,GACxD,MAAMw5L,EAAgBx5L,EAAQw5L,cAC1Bx5L,EAAQw5L,cACRf,GACJ,IAAIY,EACY,UAAZlpF,EACFkpF,EAAa,EACQ,UAAZlpF,EACTkpF,EAAa,EACQ,UAAZlpF,IACTkpF,EAAa,KAEf,MAAMr7L,EAAMhC,OAAO6C,OACjB,CAAC+H,QACD,CACEupG,UACA49E,UAAa/tL,EAAQ+tL,UACrBD,YAAe9tL,EAAQ8tL,YACvB0L,cAAiBA,EACjBH,WAAcA,EACd7sB,KAAQxsK,EAAQwsK,KAChBwhB,QAAWhuL,EAAQguL,SAErBgR,GAEF,OAAOhhM,CACT,CA5FoBkhM,CAAyBt4L,EAAMo4L,EAAS7uF,EAASnwG,GAkBjE,OAjBI6+L,GACF7F,GAA4B,SAAU6F,EAAS/qF,EAAajX,GAE1DiiG,GACF9F,GAA4B,SAAU8F,EAAShrF,EAAajX,GAE1DkiG,GACF/F,GAA4B,SAAU+F,EAASjrF,EAAajX,GAE1D78F,EAAQm/L,gBACVnG,GACE,SACAh5L,EAAQm/L,eACRrrF,EACAjX,GAGGj2F,CACR,CAMD,0BAAAqgK,CAA2BjmH,GACzB,IAAK,IAAI/pD,EAAI+pD,EAAItF,WAAYzkD,EAAGA,EAAIA,EAAEu8G,YACpC,GAAIv8G,EAAEk8G,UAAYC,KAAK0zD,aACrB,OAAOxxK,KAAK4xK,uBAA+C,GAG/D,OAAO,IACR,CAMD,sBAAAA,CAAuBtgK,GACrB,GAAIA,EAAKm8F,mBAAqBn8F,EAAKm8F,kBAAkBA,kBAEnD,IAAK,IAAI9rG,GADT2P,EAAOA,EAAKm8F,kBAAkBA,mBACZA,kBAAmB9rG,EAAGA,EAAIA,EAAEy+G,mBAC5C,GAE4B,IAAxBz+G,EAAEkQ,WAAW1Q,SACY,IAAxBQ,EAAEkQ,WAAW1Q,QAA0C,IAA1BQ,EAAEykD,WAAWy3D,UAE7C,CACA,MAAMW,EAAc,CAAC,CAAA,GAErB,OADAx+G,KAAK8nM,WAAWtO,oBAAoB73L,EAAG68G,GAChC9vF,GAAc8vF,EAAYvzG,MAAMytL,QACxC,CAIL,OAAO,IACR,GE7fH,IAAAoR,GApIA,cAAgCvyB,GAI9B,WAAAz3K,CAAY4K,GACVzF,QAEAyF,EAAUA,GAAoB,GAM9B1K,KAAK6nM,WAAa,yCAMlB7nM,KAAK8nM,WAAa,IAAIzM,GAMtBr7L,KAAK02G,QAAUhsG,EAAQm8C,OAASn8C,EAAQm8C,OAAS,IAClD,CAKD,SAAAS,GACE,OAAOtnD,KAAK02G,OACb,CAKD,SAAAtvD,CAAUP,GACR7mD,KAAK02G,QAAU7vD,CAChB,CAQD,aAAAkjJ,CAAcz4L,EAAMktG,GAClBltG,EAAK2/C,aAAa,eAAgBjxD,KAAK6nM,YACvC,MAAMjpF,EAAYttG,EAAKstG,UAEvB,IAAI37C,EAAW,GACf,GAA+B,IAA3B3xD,EAAKO,WAAW1Q,OAClB,OAAO8hE,EAET,GAAiB,eAAb27C,EACF,IAAK,IAAIh9G,EAAI,EAAGuE,EAAKmL,EAAKO,WAAW1Q,OAAQS,EAAIuE,EAAIvE,IAAK,CACxD,MAAM8rC,EAAQp8B,EAAKO,WAAWjQ,GAC9B,GAAI8rC,EAAMmwE,WAAaC,KAAK0zD,aAC1B,SAGF,MAAMw4B,EAAuC,EACvC95L,EAAUsuG,EAAY,GAEtByrF,EA3EU,SA4EVxY,EAAYuY,EAAaprF,UAAUt7F,QAAQ2mL,EAAU,IAE3D,GAAIjqM,KAAK02G,UAAY12G,KAAK02G,QAAQhxG,SAAS+rL,GACzC,SAGF,MAAM+G,EAAc/G,EAxFF,WA0FlBvhL,EAAqB,YAAIsoL,EACzBtoL,EAAmB,UAAIlQ,KAAK6nM,WAG5B,MAAMxnF,EAAU,CAAA,EAChBA,EAAQm4E,GAAe/5E,GACrBz+G,KAAK8nM,WAAW1O,mBAChBp5L,KAAK8nM,YAEP,MAAM3nF,EAAYL,GAChB,CAAC5vG,EAAmB,UAAG,MACvBmwG,GAEF2pF,EAAa/4I,aAAa,eAAgBjxD,KAAK6nM,YAC/C,MAAMqC,EAAgB3pF,GACpB,GAEAJ,EACA6pF,EACAxrF,EACAx+G,KAAK8nM,YAEHoC,GACFhoM,EAAO+gE,EAAUinI,EAEpB,CAEH,GAAiB,qBAAbtrF,EAAkC,CACpC,MAAMurF,EAAc5pF,GAClB,GACAvgH,KAAK8nM,WAAWlP,2BAChBtnL,EACA,CAAC,IACDtR,KAAK8nM,YAEHqC,IACFlnI,EAAWknI,EAEd,CACD,OAAOlnI,CACR,CAQD,oBAAAsuG,CAAqBjgK,EAAM5G,GACzB,MAAM+vL,EAAkB,CAAA,EAIxB,OAHI/vL,GACFhE,OAAO6C,OAAOkxL,EAAiBz6L,KAAKkwK,eAAe5+J,EAAM5G,IAEpD1K,KAAK+pM,cAAcz4L,EAAM,CAACmpL,GAClC,GC7IH,MAAM9mB,GAAiB,CAAC,KAAM,mCAMxBy2B,GAAqB,CAAC,KAAM,kCAO5BxX,GAAU9yE,GAAgB6zD,GAAgB,CAC9C02B,SAAYxrF,IAiMd,SAAsBvtG,EAAMktG,GAC1B,OAAO+B,GAAgB,CAAE,EAAE+pF,GAAkBh5L,EAAMktG,EACrD,MAlJA,MAAM8rF,GAAmBxqF,GAAgB6zD,GAAgB,CACvD30G,MAAS2/C,IAwJX,SAAmBrtG,EAAMktG,GACvB,OAAO+B,GAAgB,CAAE,EAAEgqF,GAAej5L,EAAMktG,EAClD,IAzJEgsF,cAAiB7rF,IAgKnB,SAA2BrtG,EAAMktG,GAC/B,OAAO+B,GAAgB,CAAE,EAAEkqF,GAAan5L,EAAMktG,EAChD,MA1JM+rF,GAAgBzqF,GACpB6zD,GACA,CACErsD,MAAS3I,IA8Jb,SAAmBrtG,EAAMktG,GACvB,MAAMluG,EAAQiwG,GAAgB,CAAA,EAAIsiE,GAAevxK,EAAMktG,GACvD,IAAKluG,EACH,OAEF,MAAMo6L,EAA+C,SAAnCp5L,EAAK2lK,aAAa,aAEpC,OADA3mK,EAAiB,UAAIo6L,EACdp6L,CACT,IArKI0sG,OAAU2B,GAAyB8zD,IACnCk4B,kBAAqBhsF,IA2KzB,SAA+BrtG,EAAMktG,GACnC,OAAO+B,GAAgB,CAAE,EAAEqqF,GAAmBt5L,EAAMktG,EACtD,IA5KIqsF,UAAalsF,IAmLjB,SAAwBrtG,EAAMktG,GAC5B,OAAO+B,GAAgB,CAAE,EAAEuqF,GAAmBx5L,EAAMktG,EACtD,IApLIusF,YAAepsF,IA2LnB,SAAyBrtG,EAAMktG,GAC7B,MAAM13F,EAASxV,EAAK2lK,aAAa,UAC3BlwJ,EAAWzV,EAAK2lK,aAAa,YAC7B+zB,EAAe15L,EAAK2lK,aAAa,gBACjCnnF,EAAW,CAAA,EACbhpE,IACFgpE,EAAiB,OAAIhpE,GAEnBC,IACF+oE,EAAmB,SAAI/oE,GAErBikL,IACFl7G,EAAuB,aAAIk7G,GAE7B,OAAOl7G,CACT,KAxMEgwB,GAAgBsqF,GAAoB,CAClCtU,MAASj3E,GAAyB4zD,IAClCkjB,SAAY92E,GAAyB4zD,IACrCw4B,iBAAoBpsF,GAAyBqsF,IAC7CC,WAActsF,GAAyB4zD,OASrCoQ,GAAgB/iE,GACpB6zD,GACA,CACEy3B,UAAazsF,IAiNjB,SAAuBrtG,EAAMktG,GAC3B,MAAM6sF,EAAS,CAAA,EAGf,OAFAA,EAAe,OAAI/5L,EAAK2lK,aAAa,UACrCo0B,EAAa,KAAI/X,GAAShiL,GACnB+5L,CACT,KApNEvrF,GAAgBsqF,GAAoB,CAClCtU,MAASj3E,GAAyB4zD,IAClC04B,WAActsF,GAAyB4zD,OASrCm4B,GAAoB9qF,GAAgB6zD,GAAgB,CACxD62B,cAAiB3rF,GAAyB4zD,IAC1C64B,oBAAuBzsF,IAyOzB,SAAkCvtG,EAAMktG,GACtC,OAAO+B,GAAgB,GAAIgrF,GAAyBj6L,EAAMktG,EAC5D,MAnOM+sF,GAA0BzrF,GAAgB6zD,GAAgB,CAC9D63B,iBAAoB/sF,IAyOtB,SAA8BntG,EAAMktG,GAClC,OAAO+B,GAAgB,CAAE,EAAEkrF,GAAoBn6L,EAAMktG,EACvD,MAnOMitF,GAAqB3rF,GAAgB6zD,GAAgB,CACzD12D,WAAc4B,GAAyB4zD,IACvCi5B,WAAc7sF,GAAyB0zD,IACvCo5B,WAAc9sF,GAAyB0zD,IACvCq5B,WAAc/sF,GAAyB0zD,IACvCs5B,WAAchtF,GAAyB0zD,MAQnCu4B,GAAoBhrF,GACxB6zD,GACA,CACElgD,QAAW5U,GAAyB4zD,IACpC4hB,MAAS11E,GAAyB8zD,KAEpC3yD,GAAgBsqF,GAAoB,CAClCe,WAActsF,GAAyB4zD,OASrCq5B,GAAqBhsF,GAAgBsqF,GAAoB,CAC7D2B,YAAettF,GAAgButF,IAC/BC,YAAextF,GAAgButF,MAQ3BvB,GAAc3qF,GAClB6zD,GACA,CACEu4B,kBAAqBrtF,GAAyB4zD,IAC9Cx1D,WAAc0B,IAoKlB,SAAwBrtG,EAAMktG,GAC5B,OAAO+B,GAAgB,CAAE,EAAE4rF,GAAY76L,EAAMktG,EAC/C,KApKEsB,GAAgBsqF,GAAoB,CAClCgC,aAAgBvtF,GAAyB4zD,IACzC04B,WAActsF,GAAyB4zD,IACvC45B,YAAextF,GAAyBqsF,OAStCiB,GAAarsF,GACjB6zD,GACA,CACE24B,cAAiBztF,GAAyBmtF,IAC1CO,iBAAoB1tF,GAAyBwzD,IAC7Cm6B,UAAa3tF,GAAyB0zD,IACtCk6B,WAAc5tF,GAAyB0zD,IACvCm6B,YAAe7tF,GAAyB0zD,IACxCo6B,aAAgB9tF,GAAyB0zD,KAE3CzyD,GAAgBsqF,GAAoB,CAClCe,WAActsF,GAAyB4zD,OA2F3C,SAASy4B,GAAgB55L,EAAMktG,GAC7B,MAAMllG,EAAcinG,GAClB,GACAurF,GACAx6L,EACAktG,GAEF,GAA0B,GAAtBllG,EAAYnY,OAGhB,OAAOkY,GAAeC,EACxB,CAmBA,SAAS0yL,GAAgB16L,EAAMktG,GAC7B,MAAMllG,EAAcm5J,GAAWnhK,GAAMqU,MAAM,OAC3C,IAAKrM,GAAqC,GAAtBA,EAAYnY,OAC9B,OAEF,MAAMiW,GAAKkC,EAAY,GACjBjC,GAAKiC,EAAY,GACvB,OAAIgV,MAAMlX,IAAMkX,MAAMjX,QAAtB,EAGO,CAACD,EAAGC,EACb,CA6BA,IAAAu1L,GAhVA,cAA+BvW,GAC7B,WAAAv2L,GACEmF,QAMAjF,KAAK6sM,WAAa,IAAIC,EACvB,CAMD,YAAA1Z,CAAa9hL,GACX,IAAIupG,EAAUvpG,EAAK2lK,aAAa,WAC5Bp8D,IACFA,EAAUA,EAAQlwE,QAEpB,IAAIoiK,EAAuB/sM,KAAK6sM,WAAWzZ,aAAa9hL,GACxD,OAAKy7L,GAGLA,EAA8B,QAAIlyF,EAClCkyF,EAAuBxsF,GACrBwsF,EACAna,GACAthL,EACA,IAEKy7L,GAA8C,MAT5C,IAUV,GCjEH,MAAMC,GAAS,CACb,mBACA,yBACA,sBAMIC,GAMa,kBANbA,GAaa,kBAuTnB,SAASC,GAAsBxhJ,GAC7B,MAAMpH,EAAOoH,EAAIpH,KACjB,SACEA,EAA8B,yBAC7BA,EAAK6oJ,mBAAqBzhJ,EAAI0hJ,kBAEnC,CAMA,SAASC,GAAa3hJ,GACpB,SAAUA,EAAwB,qBAAKA,EAAI4hJ,kBAC7C,CAMA,SAASC,GAAkBjjM,GACrBA,EAAQ6iM,kBACV7iM,EAAQ6iM,oBACC7iM,EAAiC,yBAC1CA,EAAiC,yBAErC,CA0BA,IAAAkjM,GA3TA,cAAyBx9I,GAIvB,WAAAlwD,CAAY4K,GACVA,EAAUA,GAAoB,GAE9BzF,MAAM,CACJqF,QAASwF,SAASC,cAAc,OAChC5P,OAAQuK,EAAQvK,SAMlBH,KAAK0H,GAKL1H,KAAKiH,KAKLjH,KAAK2H,GAML3H,KAAKk7G,WAAyB10G,IAAjBkE,EAAQ/D,MAAqB+D,EAAQ/D,KAMlD3G,KAAK44J,QAAUluJ,EAAQT,OAMvBjK,KAAKytM,iBAAkB,EAKvBztM,KAAK0tM,4BAA8B1tM,KAAK2tM,uBAAuBzmM,KAAKlH,MAMpEA,KAAK4tM,mBACmBpnM,IAAtBkE,EAAQ0iC,UAA0B1iC,EAAQ0iC,UAAY,iBAMxDptC,KAAK6tM,mBAAqB,GAM1B7tM,KAAK8tM,sBACyBtnM,IAA5BkE,EAAQqjM,gBACJrjM,EAAQqjM,gBAAgBpoL,MAAM,KAC9B,CAAC3lB,KAAK4tM,cAAgB,SAM5B5tM,KAAKguM,wBAC2BxnM,IAA9BkE,EAAQujM,kBACJvjM,EAAQujM,kBAAkBtoL,MAAM,KAChC,CAAC3lB,KAAK4tM,cAAgB,UAE5B,MAAMloJ,OAA0Bl/C,IAAlBkE,EAAQg7C,MAAsBh7C,EAAQg7C,MAAQ,IAM5D1lD,KAAKkuM,WACc,iBAAVxoJ,EAAqB51C,SAASyjD,eAAe7N,GAASA,EAE/D,MAAMyoJ,OACoB3nM,IAAxBkE,EAAQyjM,YAA4BzjM,EAAQyjM,YAAc,IAM5DnuM,KAAKouM,iBACoB,iBAAhBD,EACHr+L,SAASyjD,eAAe46I,GACxBA,EAEN,MAAM39I,EAAW9lD,EAAQ8lD,SAAW9lD,EAAQ8lD,SAAW,qBAMvDxwD,KAAKquM,QAAUv+L,SAASC,cAAc,UACtC/P,KAAKquM,QAAQn9I,MAAQV,EACrBxwD,KAAKquM,QAAQp9I,aAAa,OAAQ,UAClCjxD,KAAKquM,QAAQp8L,YAAYjS,KAAKkuM,YAC9BluM,KAAKquM,QAAQ/oM,iBACXwB,EACA9G,KAAKmxD,aAAajqD,KAAKlH,OACvB,GAEFA,KAAKsuM,cAActuM,KAAKquM,QAASruM,KAAKytM,iBAEtCztM,KAAKsK,QAAQ8iC,UAAY,GAAGptC,KAAK4tM,iBAAiBhtJ,MAAsBE,KACxE9gD,KAAKsK,QAAQ2H,YAAYjS,KAAKquM,QAC/B,CAMD,YAAAl9I,CAAatrD,GACXA,EAAMzF,iBACNJ,KAAKuuM,mBACN,CAKD,iBAAAA,GACE,MAAM3jK,EAAM5qC,KAAKogD,SACjB,IAAKxV,EACH,OAEF,MAAM8gB,EAAM9gB,EAAI+gB,mBAChB,GAAKuhJ,GAAsBxhJ,GAG3B,GAAI2hJ,GAAa3hJ,IAmKrB,SAAwBA,GAClBA,EAAI8iJ,eACN9iJ,EAAI8iJ,iBACK9iJ,EAA0B,sBACnCA,EAA0B,sBAE9B,CAxKM+iJ,CAAe/iJ,OACV,CACL,IAAIphD,EAEFA,EADEtK,KAAK44J,QAEmB,iBAAjB54J,KAAK44J,QACRltG,EAAIoE,eAAe9vD,KAAK44J,SACxB54J,KAAK44J,QAEDhuH,EAAI8rB,mBAEZ12D,KAAKk7G,MA2If,SAAmC5wG,GAC7BA,EAAiC,wBACnCA,EAAiC,0BAEjCijM,GAAkBjjM,EAEtB,CAhJQokM,CAA0BpkM,GAE1BijM,GAAkBjjM,EAErB,CACF,CAKD,uBAAAqkM,GACE,MAAM/jK,EAAM5qC,KAAKogD,SACjB,IAAKxV,EACH,OAEF,MAAMgkK,EAAkB5uM,KAAKytM,gBAC7BztM,KAAKytM,gBAAkBJ,GAAaziK,EAAI+gB,oBACpCijJ,IAAoB5uM,KAAKytM,kBAC3BztM,KAAKsuM,cAActuM,KAAKquM,QAASruM,KAAKytM,iBAClCztM,KAAKytM,iBACP18L,GAAY/Q,KAAKouM,iBAAkBpuM,KAAKkuM,YACxCluM,KAAK4F,cAAcqnM,MAEnBl8L,GAAY/Q,KAAKkuM,WAAYluM,KAAKouM,kBAClCpuM,KAAK4F,cAAcqnM,KAErBriK,EAAIu2B,aAEP,CAOD,aAAAmtI,CAAchkM,EAASukM,GACjBA,GACFvkM,EAAQ0nD,UAAUvmD,UAAUzL,KAAKguM,oBACjC1jM,EAAQ0nD,UAAUzuC,OAAOvjB,KAAK8tM,oBAE9BxjM,EAAQ0nD,UAAUvmD,UAAUzL,KAAK8tM,kBACjCxjM,EAAQ0nD,UAAUzuC,OAAOvjB,KAAKguM,oBAEjC,CAUD,MAAAlxJ,CAAOlS,GACL,MAAM06H,EAAStlK,KAAKogD,SAChBklH,GACFA,EAAOz7J,qBACLsiD,GACAnsD,KAAK0tM,6BAITzoM,MAAM63C,OAAOlS,GAEb5qC,KAAK2tM,yBACD/iK,GACFA,EAAIhhC,kBACFuiD,GACAnsD,KAAK0tM,4BAGV,CAKD,sBAAAC,GACE,MAAMnoM,EAAYxF,KAAK6tM,mBACvB,IAAK,IAAIjsM,EAAI,EAAGuE,EAAKX,EAAUrE,OAAQS,EAAIuE,IAAMvE,EAC/C0F,EAAc9B,EAAU5D,IAE1B4D,EAAUrE,OAAS,EAEnB,MAAMypC,EAAM5qC,KAAKogD,SACjB,GAAIxV,EAAK,CACP,MAAM8gB,EAAM9gB,EAAI+gB,mBACZuhJ,GAAsBxhJ,GACxB1rD,KAAKsK,QAAQ0nD,UAAUvmD,OAAOo1C,IAE9B7gD,KAAKsK,QAAQ0nD,UAAUzuC,IAAIs9B,IAG7B,IAAK,IAAIj/C,EAAI,EAAGuE,EAAK6mM,GAAO7rM,OAAQS,EAAIuE,IAAMvE,EAC5C4D,EAAUG,KACRoB,EAAO2kD,EAAKshJ,GAAOprM,GAAI5B,KAAK2uM,wBAAyB3uM,OAGzDA,KAAK2uM,yBACN,CACF,GC9TH,MAAMG,GAAa,aAKbC,GAAoB,mBA4R1B,IAAAC,GAlPA,cAA4Bh/I,GAI1B,WAAAlwD,CAAY4K,GACVA,EAAUA,GAAoB,GAE9B,MAAMJ,EAAUwF,SAASC,cAAc,OACvCzF,EAAQ8iC,eACgB5mC,IAAtBkE,EAAQ0iC,UAA0B1iC,EAAQ0iC,UAAY,oBAExDnoC,MAAM,CACJqF,QAASA,EACTuyC,OAAQnyC,EAAQmyC,OAChB18C,OAAQuK,EAAQvK,SAMlBH,KAAK0H,GAKL1H,KAAKiH,KAKLjH,KAAK2H,GAEL3H,KAAK4J,kBAAkBklM,GAAY9uM,KAAKk4B,0BAEpCxtB,EAAQukM,kBACVjvM,KAAKkvM,oBAAoBxkM,EAAQukM,kBAE/BvkM,EAAQwU,YACVlf,KAAKo4B,cAAc1tB,EAAQwU,YAO7Blf,KAAKmvM,uBAA4C3oM,IAAxBkE,EAAQ0kM,YAMjCpvM,KAAKqvM,aAAervM,KAAKmvM,kBAAoBzkM,EAAQ0kM,YAAc,SAMnEpvM,KAAKsvM,cAAgBhlM,EAAQ05C,UAM7BhkD,KAAKuvM,eAAiB,KAMtBvvM,KAAKg4B,WAAa,KAMlBh4B,KAAK+jF,QAA2B,IAAlBr5E,EAAQuU,KACvB,CAKD,wBAAAiZ,GACEl4B,KAAKg4B,WAAa,IACnB,CAUD,mBAAAw3K,GACE,OACExvM,KAAKmJ,IAAI4lM,GAEZ,CASD,aAAArgL,GACE,OACE1uB,KAAKmJ,IAAI2lM,GAEZ,CAMD,eAAAW,CAAgB5pM,GACd,MAAM+kC,EAAM5qC,KAAKogD,SACjBpgD,KAAK0vM,YAAY9kK,EAAIge,cAAc/iD,GACpC,CAMD,cAAA8pM,CAAe9pM,GACb7F,KAAK0vM,YAAY,KAClB,CAUD,MAAA5yJ,CAAOlS,GAEL,GADA3lC,MAAM63C,OAAOlS,GACTA,EAAK,CACP,MAAMi8C,EAAWj8C,EAAIub,cACrBnmD,KAAK06B,aAAa/0B,KAChBoB,EAAO8/E,EAAU//E,GAAuB9G,KAAKyvM,gBAAiBzvM,OAE5DA,KAAKmvM,mBACPnvM,KAAK06B,aAAa/0B,KAChBoB,EAAO8/E,EAAU//E,GAAsB9G,KAAK2vM,eAAgB3vM,OAGhEA,KAAK0vM,YAAY,KAClB,CACF,CASD,mBAAAR,CAAoBpoL,GAClB9mB,KAAK8J,IAAIilM,GAAmBjoL,EAC7B,CASD,aAAAsR,CAAclZ,GACZlf,KAAK8J,IAAIglM,GAAYpgL,GAAcxP,GACpC,CAMD,WAAAwwL,CAAYryJ,GACV,IAAIuyJ,EAAO5vM,KAAKqvM,aAChB,GAAIhyJ,GAASr9C,KAAKuvM,eAAgB,CAChC,IAAKvvM,KAAKg4B,WAAY,CACpB,MAAM9Y,EAAalf,KAAK0uB,gBAEtB1uB,KAAKg4B,WADH9Y,EACgB8K,GAChBhqB,KAAKuvM,eACLrwL,GAGgBoK,EAErB,CACD,MACMnS,EADMnX,KAAKogD,SACMuY,+BAA+Btb,GACtD,GAAIlmC,EAAY,CACd,MAAM0U,EAAiBE,KAQvB,GAPIF,IACF7rB,KAAKg4B,WAAahO,GAChBhqB,KAAKuvM,eACL1jL,IAGJ7rB,KAAKg4B,WAAW7gB,EAAYA,GACxBnX,KAAK+jF,OAAQ,CAGf9kE,GAAM9H,EADJ0U,GAAkB7rB,KAAK0uB,iBAAmB1uB,KAAKuvM,eAElD,CACD,MAAMN,EAAmBjvM,KAAKwvM,sBAE5BI,EADEX,EACKA,EAAiB93L,GAEjBA,EAAWwB,UAErB,CACF,CACI3Y,KAAKsvM,eAAiBM,IAAS5vM,KAAKsvM,gBACvCtvM,KAAKsK,QAAQ05C,UAAY4rJ,EACzB5vM,KAAKsvM,cAAgBM,EAExB,CAQD,MAAA/yJ,CAAOgT,GACL,MAAMrS,EAAaqS,EAASrS,WACvBA,EAGCx9C,KAAKuvM,gBAAkB/xJ,EAAWjE,UAAUr6B,aAC9Clf,KAAKuvM,eAAiB/xJ,EAAWjE,UAAUr6B,WAC3Clf,KAAKg4B,WAAa,MAJpBh4B,KAAKuvM,eAAiB,IAOzB,GClRH,MAAMM,GAAY,IAOZC,GAAY,GAioBlB,IAAAC,GApmBA,cAA0B//I,GAIxB,WAAAlwD,CAAY4K,GACVA,EAAUA,GAAoB,GAE9BzF,MAAM,CACJqF,QAASwF,SAASC,cAAc,OAChC8sC,OAAQnyC,EAAQmyC,OAChB18C,OAAQuK,EAAQvK,SAMlBH,KAAKgwM,4BAA8BhwM,KAAKiwM,uBAAuB/oM,KAAKlH,MAMpEA,KAAKkwD,gBACmB1pD,IAAtBkE,EAAQylD,WAA0BzlD,EAAQylD,UAM5CnwD,KAAKuwD,kBACqB/pD,IAAxBkE,EAAQ4lD,aAA4B5lD,EAAQ4lD,YAEzCtwD,KAAKuwD,eACRvwD,KAAKkwD,YAAa,GAOpBlwD,KAAKmhH,qBACwB36G,IAA3BkE,EAAQ02G,gBAA+B12G,EAAQ02G,eAMjDphH,KAAKkwM,iBAAc1pM,EAEnB,MAAM4mC,OACkB5mC,IAAtBkE,EAAQ0iC,UAA0B1iC,EAAQ0iC,UAAY,iBAElDojB,OACiBhqD,IAArBkE,EAAQ8lD,SAAyB9lD,EAAQ8lD,SAAW,eAEhDE,OACsBlqD,IAA1BkE,EAAQgmD,cAA8BhmD,EAAQgmD,cAAgB,IAEnC,iBAAlBA,GAKT1wD,KAAK4wD,eAAiB9gD,SAASC,cAAc,QAC7C/P,KAAK4wD,eAAeC,YAAcH,GAElC1wD,KAAK4wD,eAAiBF,EAGxB,MAAMhL,OAA0Bl/C,IAAlBkE,EAAQg7C,MAAsBh7C,EAAQg7C,MAAQ,IAEvC,iBAAVA,GAKT1lD,KAAK8wD,OAAShhD,SAASC,cAAc,QACrC/P,KAAK8wD,OAAOD,YAAcnL,GAE1B1lD,KAAK8wD,OAASpL,EAGhB,MAAMqL,EACJ/wD,KAAKuwD,eAAiBvwD,KAAKkwD,WAAalwD,KAAK4wD,eAAiB5wD,KAAK8wD,OAC/DvF,EAASz7C,SAASC,cAAc,UACtCw7C,EAAO0F,aAAa,OAAQ,UAC5B1F,EAAO2F,MAAQV,EACfjF,EAAOt5C,YAAY8+C,GAEnBxF,EAAOjmD,iBACLwB,EACA9G,KAAKmxD,aAAajqD,KAAKlH,OACvB,GAOFA,KAAKmwM,UAAYrgM,SAASC,cAAc,OACxC/P,KAAKmwM,UAAU/iK,UAAY,qBAO3BptC,KAAKowM,MAAQ1lM,EAAQ6yC,KAErB,MAAM8yJ,EAAQ,IAAIC,GAAI,CACpB/yJ,KAAM7yC,EAAQ6yC,KACdsW,SAAU,IAAItpD,EACdizD,aAAc,IAAIjzD,IAOpBvK,KAAKuwM,OAASF,EAEV3lM,EAAQm8C,QACVn8C,EAAQm8C,OAAO37C,SAAQ,SAAUwiC,GAC/B2iK,EAAM5tI,SAAS/0B,EACvB,IAGI,MAAMk7B,EAAM94D,SAASC,cAAc,OACnC64D,EAAIx7B,UAAY,qBAChBw7B,EAAIt4D,MAAMkgM,UAAY,aAMtBxwM,KAAKywM,YAAc,IAAIC,GAAQ,CAC7B13K,SAAU,CAAC,EAAG,GACduuC,YAAa,gBACbj9D,QAASs+D,IAEX5oE,KAAKuwM,OAAO5tI,WAAW3iE,KAAKywM,aAE5B,MAAMr/I,EACJhkB,EACA,IACAwT,GACA,IACAE,IACC9gD,KAAKkwD,YAAclwD,KAAKuwD,aAAe,IAAMxP,GAAkB,KAC/D/gD,KAAKuwD,aAAe,GAAK,qBACtBjmD,EAAUtK,KAAKsK,QACrBA,EAAQ8iC,UAAYgkB,EACpB9mD,EAAQ2H,YAAYjS,KAAKmwM,WACzB7lM,EAAQ2H,YAAYs5C,GAIpB,MAAMolJ,EAAQ3wM,KAER4iE,EAAU5iE,KAAKywM,YACfG,EAAa5wM,KAAKywM,YAAYhpI,aAW9B22F,EAAO,SAAUv4J,GACrB,MAAMmzB,EAPC,CACLgzB,SAF0C6kJ,EAQmBhrM,GANtCmmD,QACvBC,QAAS4kJ,EAAc5kJ,SAHS,IAAU4kJ,EAS5C,MAAMv3L,EAAc+2L,EAAMhtI,2BAChC,GAGMT,EAAQ4E,YAAYluD,EAC1B,EAEUw3L,EAAY,SAAUjrM,GAC1B,MAAMyT,EAAc+2L,EAAMhtI,2BAA2Bx9D,GAErD8qM,EAAMvwJ,SAAS1C,UAAUxI,kBAAkB57B,GAE3CjK,OAAO/I,oBAAoB,YAAa83J,GACxC/uJ,OAAO/I,oBAAoB,UAAWwqM,EAC5C,EAIIF,EAAWtrM,iBAAiB,aAAa,WACvC+J,OAAO/J,iBAAiB,YAAa84J,GACrC/uJ,OAAO/J,iBAAiB,UAAWwrM,EACzC,GACG,CAUD,MAAAh0J,CAAOlS,GACL,MAAM06H,EAAStlK,KAAKogD,SACpB,GAAIxV,IAAQ06H,EAAZ,CAGA,GAAIA,EAAQ,CACV,MAAMyrC,EAAUzrC,EAAO5nH,UACnBqzJ,GACF/wM,KAAKgxM,YAAYD,GAEnB/wM,KAAKuwM,OAAO5gJ,UAAU,KACvB,CAGD,GAFA1qD,MAAM63C,OAAOlS,GAETA,EAAK,CACP5qC,KAAKuwM,OAAO5gJ,UAAU3vD,KAAKmwM,WAC3BnwM,KAAK06B,aAAa/0B,KAChBoB,EACE6jC,EACAvqC,EACAL,KAAKixM,yBACLjxM,OAIJ,MAAMu9C,EAAO3S,EAAI8S,UACbH,IACFv9C,KAAKkxM,UAAU3zJ,GACXA,EAAKvH,UACPh2C,KAAKuwM,OAAOpvI,aACZnhE,KAAKmxM,iBAIJnxM,KAAKuwM,OAAOhrI,cACfvlE,KAAKoxM,gCAER,CAjCA,CAkCF,CAOD,wBAAAH,CAAyBprM,GACvB,GAAIA,EAAM0B,MAAQ4kD,GAAkB,CAClC,MAAM4kJ,EACJlrM,EACR,SACUkrM,GACF/wM,KAAKgxM,YAAYD,GAEnB,MAAMM,EAAUrxM,KAAKogD,SAAS1C,UAC9B19C,KAAKkxM,UAAUG,EACrB,MACOrxM,KAAKuwM,OAAOhrI,cACZ1/D,EAAM0B,MAAQ4kD,IAAsBtmD,EAAM0B,MAAQ4kD,IAEnDnsD,KAAKuwM,OAAOpvI,YAEf,CAOD,SAAA+vI,CAAU3zJ,GACR,IAAKv9C,KAAKowM,MAAO,CAEf,MAAMiB,EAAU,IAAI1zJ,GAAK,CACvBz+B,WAAYq+B,EAAK7uB,kBAEnB1uB,KAAKuwM,OAAOtuI,QAAQovI,EACrB,CAED9zJ,EAAK3zC,kBACHqlC,GAAaG,SACbpvC,KAAKgwM,6BAGPhwM,KAAKiwM,wBACN,CAOD,WAAAe,CAAYzzJ,GACVA,EAAK1zC,qBACHolC,GAAaG,SACbpvC,KAAKgwM,4BAER,CAMD,sBAAAC,GACMjwM,KAAKmhH,iBACPnhH,KAAKuwM,OAAO7yJ,UAAUzI,YAAYj1C,KAAKogD,SAAS1C,UAAU7H,cAE7D,CAaD,eAAAy7J,GACE,MAAM1mK,EAAM5qC,KAAKogD,SACXiwJ,EAAQrwM,KAAKuwM,OAEnB,IAAK3lK,EAAI26B,eAAiB8qI,EAAM9qI,aAC9B,OAGF,MAAMwD,EAAoDn+B,EAAIl3B,UAGxD6F,EADOqxB,EAAI8S,UACGpF,wBAAwBywB,GAE5C,GAAI/oE,KAAKkwM,aAAe7pI,GAAa9sD,EAAQvZ,KAAKkwM,aAEhD,OAEFlwM,KAAKkwM,YAAc32L,EAEnB,MAAMg4L,EACJlB,EAAM38L,UAIF89L,EADSnB,EAAM3yJ,UACGpF,wBAAwBi5J,GAE1CE,EAAepB,EAAM33I,+BACzB18C,GAAWzC,IAEPm4L,EAAmBrB,EAAM33I,+BAC7B58C,GAAevC,IAGXo4L,EAAW3lM,KAAKmP,IAAIs2L,EAAa,GAAKC,EAAiB,IACvDE,EAAY5lM,KAAKmP,IAAIs2L,EAAa,GAAKC,EAAiB,IAExDG,EAAaN,EAAU,GACvBO,EAAcP,EAAU,GAG5BI,EAAWE,EAAa/B,IACxB8B,EAAYE,EAAchC,IAC1B6B,EAAWE,EAAahC,IACxB+B,EAAYE,EAAcjC,GAE1B7vM,KAAKmxM,eACKp3L,GAAey3L,EAAUj4L,IACnCvZ,KAAK+xM,WAER,CAOD,YAAAZ,GAKE,MAAMvmK,EAAM5qC,KAAKogD,SACXiwJ,EAAQrwM,KAAKuwM,OAEbxnI,EAAoDn+B,EAAIl3B,UAGxD6F,EADOqxB,EAAI8S,UACGpF,wBAAwBywB,GAEtCipI,EAAS3B,EAAM3yJ,UAKfwgC,EAAQlyE,KAAKqW,IAAIwtL,KAAyB7jM,KAAKi/K,IAErDltK,GAAgBxE,EADF,GAAKvN,KAAKC,IAAI,EAAGiyE,EAAQ,GAAK4xH,KAE5CkC,EAAOn4J,YAAYD,GAAkBrgC,GACtC,CAOD,SAAAw4L,GACE,MAAMnnK,EAAM5qC,KAAKogD,SACXiwJ,EAAQrwM,KAAKuwM,OAEbhzJ,EAAO3S,EAAI8S,UAEF2yJ,EAAM3yJ,UAEdxI,kBAAkBqI,EAAKjI,oBAC/B,CAMD,UAAA28J,GACE,MAAMrnK,EAAM5qC,KAAKogD,SACXiwJ,EAAQrwM,KAAKuwM,OAEnB,IAAK3lK,EAAI26B,eAAiB8qI,EAAM9qI,aAC9B,OAGF,MAAMwD,EAAoDn+B,EAAIl3B,UAExD6pC,EAAO3S,EAAI8S,UAEXs0J,EAAS3B,EAAM3yJ,UAEf/gC,EAAW3c,KAAKmhH,gBAAkB,GAAK5jE,EAAK1H,cAE5C+sB,EAAU5iE,KAAKywM,YACf7nI,EAAM5oE,KAAKywM,YAAYhpI,aACvBhrD,EAAS8gC,EAAKjI,oBACd54B,EAAa6gC,EAAK/hB,gBAClB02K,EAAeF,EAAOx2K,gBACtBhsB,EAASu5D,EAAQ,GAAKrsD,EAAcw1L,EACpCziM,EAAUs5D,EAAQ,GAAKrsD,EAAcw1L,EAM3C,GAHAtvI,EAAQ4E,YAAY/qD,GAGhBmsD,EAAK,CACPA,EAAIt4D,MAAMd,MAAQA,EAAQ,KAC1Bo5D,EAAIt4D,MAAMb,OAASA,EAAS,KAC5B,MAAMsG,EAAY,UAAY4G,EAAW,OACzCisD,EAAIt4D,MAAMyF,UAAYA,CACvB,CACF,CAKD,8BAAAq7L,GACMpxM,KAAKmyM,sBAGTnyM,KAAKmyM,oBAAsB9qM,EACzBrH,KAAKuwM,OACLrkJ,IACA,SAAUrmD,UACD7F,KAAKmyM,oBACZnyM,KAAKiyM,YACN,GACDjyM,MAEH,CAMD,YAAAmxD,CAAatrD,GACXA,EAAMzF,iBACNJ,KAAK+xD,eACN,CAKD,aAAAA,GACE/xD,KAAKsK,QAAQ0nD,UAAUC,OAAOlR,IAC1B/gD,KAAKkwD,WACPn/C,GAAY/Q,KAAK4wD,eAAgB5wD,KAAK8wD,QAEtC//C,GAAY/Q,KAAK8wD,OAAQ9wD,KAAK4wD,gBAEhC5wD,KAAKkwD,YAAclwD,KAAKkwD,WAIxB,MAAMmgJ,EAAQrwM,KAAKuwM,OACnB,IAAKvwM,KAAKkwD,WAAY,CACpB,GAAImgJ,EAAM9qI,aAGR,OAFAvlE,KAAKkwM,iBAAc1pM,OACnB6pM,EAAMxzJ,SAGRwzJ,EAAMlvI,aACNnhE,KAAKmxM,eACLnxM,KAAKoxM,gCACN,CACF,CAOD,cAAAl/I,GACE,OAAOlyD,KAAKuwD,YACb,CAOD,cAAAsB,CAAevB,GACTtwD,KAAKuwD,eAAiBD,IAG1BtwD,KAAKuwD,aAAeD,EACpBtwD,KAAKsK,QAAQ0nD,UAAUC,OAAO,qBACzB3B,GAAetwD,KAAKkwD,YACvBlwD,KAAK+xD,gBAER,CASD,YAAAI,CAAahC,GACNnwD,KAAKuwD,cAAgBvwD,KAAKkwD,aAAeC,GAG9CnwD,KAAK+xD,eACN,CAOD,YAAAK,GACE,OAAOpyD,KAAKkwD,UACb,CAOD,iBAAAqnB,GACE,OAAOv3E,KAAKmhH,eACb,CAOD,iBAAAY,CAAkBX,GACZphH,KAAKmhH,kBAAoBC,IAG7BphH,KAAKmhH,gBAAkBC,EACuB,IAA1CphH,KAAKogD,SAAS1C,UAAU7H,gBACtB71C,KAAKmhH,gBACPnhH,KAAKiwM,yBAELjwM,KAAKuwM,OAAO7yJ,UAAUzI,YAAY,GAEpCj1C,KAAKkwM,iBAAc1pM,EACnBxG,KAAKsxM,kBACLtxM,KAAKiyM,cAER,CAOD,cAAAG,GACE,OAAOpyM,KAAKuwM,MACb,CAOD,MAAA1zJ,CAAOgT,GACL7vD,KAAKsxM,kBACLtxM,KAAKiyM,YACN,GCzpBH,MAAMI,GAAa,QAWbC,GAAiB,CAAC,EAAG,EAAG,GAMxBC,GAAc,KAAO,IAqc3B,IAAAC,GAtZA,cAAwBxiJ,GAItB,WAAAlwD,CAAY4K,GACVA,EAAUA,GAAoB,GAE9B,MAAMJ,EAAUwF,SAASC,cAAc,OACvCzF,EAAQgG,MAAMm/C,cAAgB,OAE9BxqD,MAAM,CACJqF,QAASA,EACTuyC,OAAQnyC,EAAQmyC,OAChB18C,OAAQuK,EAAQvK,SAMlBH,KAAK0H,GAKL1H,KAAKiH,KAKLjH,KAAK2H,GAEL,MAAMylC,OACkB5mC,IAAtBkE,EAAQ0iC,UACJ1iC,EAAQ0iC,UACR1iC,EAAQ+nM,IACR,eACA,gBAMNzyM,KAAK0yM,cAAgB5iM,SAASC,cAAc,OAC5C/P,KAAK0yM,cAActlK,UAAYA,EAAY,SAE3CptC,KAAKsK,QAAQ8iC,UAAYA,EAAY,IAAMwT,GAC3C5gD,KAAKsK,QAAQ2H,YAAYjS,KAAK0yM,eAM9B1yM,KAAK2yM,WAAa,KAMlB3yM,KAAK4yM,eAAiCpsM,IAArBkE,EAAQmoM,SAAyBnoM,EAAQmoM,SAAW,GAMrE7yM,KAAK8yM,UAAYpoM,EAAQqoM,SAMzB/yM,KAAKsmD,kBAAmB,EAMxBtmD,KAAKgzM,oBAAiBxsM,EAMtBxG,KAAKsvM,cAAgB,GAErBtvM,KAAK4J,kBAAkByoM,GAAYryM,KAAKizM,qBAExCjzM,KAAKkzM,SAASxoM,EAAQ+X,OAAS,UAM/BziB,KAAKmzM,UAAYzoM,EAAQ+nM,MAAO,EAMhCzyM,KAAKozM,eAAiB1oM,EAAQwzE,OAAS,EAMvCl+E,KAAKqzM,cAAgB3oM,EAAQg4C,OAAQ,EAMrC1iD,KAAKszM,KAAO5oM,EAAQ28F,UAAO7gG,CAC5B,CASD,QAAA2a,GACE,OAAOnhB,KAAKmJ,IAAIkpM,GACjB,CAKD,mBAAAY,GACEjzM,KAAK8xD,gBACN,CAQD,QAAAohJ,CAASzwL,GACPziB,KAAK8J,IAAIuoM,GAAY5vL,EACtB,CAOD,MAAA8wL,CAAOlsG,GACLrnG,KAAKszM,KAAOjsG,CACb,CAKD,cAAAv1C,GACE,MAAMvY,EAAYv5C,KAAK2yM,WAEvB,IAAKp5J,EAKH,YAJIv5C,KAAKsmD,mBACPtmD,KAAKsK,QAAQgG,MAAM8zC,QAAU,OAC7BpkD,KAAKsmD,kBAAmB,IAK5B,MAAM7pC,EAAS88B,EAAU98B,OACnByC,EAAaq6B,EAAUr6B,WACvBuD,EAAQziB,KAAKmhB,WACbqyL,EAAgC,WAAT/wL,EAAqB,UAAY,IAC9D,IAAIqH,EAAkBhJ,GACpB5B,EACAq6B,EAAU78B,WACVD,EACA+2L,GAGF,MAAMX,EACH7yM,KAAK4yM,WAAa5yM,KAAKszM,MAAQf,IAAgBA,GAE5CQ,OACevsM,IAAnBxG,KAAK8yM,UACA9yM,KAAK8yM,WAAa9yM,KAAKszM,MAAQf,IAAgBA,QAChD/rM,EAEN,IAAIitM,EAAeZ,EAAW/oL,EAC1B4pL,EAAS,GACb,GAAa,WAATjxL,EAAoB,CACtB,MAAMkxL,EAAkBh0L,GAAgBG,QACxC2zL,GAAgBE,EACZF,EAAeE,EAAkB,IACnCD,EAAS,IACT5pL,GAAmB,MACV2pL,EAAeE,GACxBD,EAAS,IACT5pL,GAAmB,IAEnB4pL,EAAS,GAEjB,MAAW,GAAa,YAATjxL,EACLgxL,EAAe,OACjBC,EAAS,KACT5pL,GAAmB,OACV2pL,EAAe,UACxBC,EAAS,KACT5pL,GAAmB,QAEnB4pL,EAAS,KACT5pL,GAAmB,eAEhB,GAAa,YAATrH,EACTqH,GAAmB,KACnB4pL,EAAS,UACJ,GAAa,UAATjxL,EACLgxL,EAAe,MACjBC,EAAS,KACT5pL,GAAmB,KACV2pL,EAAe,GACxBC,EAAS,KACT5pL,GAAmB,KACV2pL,EAAe,IACxBC,EAAS,KAETA,EAAS,KACT5pL,GAAmB,SAEhB,IAAa,MAATrH,EAYT,MAAM,IAAIla,MAAM,iBAXZkrM,EAAe,OACjBC,EAAS,KACT5pL,GAAmB,OACV2pL,EAAe,UACxBC,EAAS,KACT5pL,GAAmB,YAEnB4pL,EAAS,KACT5pL,GAAmB,UAItB,CAED,IACI8jC,EAAOp+C,EAAOokM,EACdC,EAAeC,EAAeC,EAF9BnyM,EAAI,EAAIoK,KAAKuT,MAAMvT,KAAKqW,IAAIwwL,EAAW/oL,GAAmB9d,KAAKqW,IAAI,KAGvE,OAAa,CACXuxL,EAAe5nM,KAAKuT,MAAM3d,EAAI,GAC9B,MAAM0jB,EAAUtZ,KAAKC,IAAI,GAAI2nM,GAG7B,GAFAhmJ,EAAQ0kJ,IAAiB1wM,EAAI,EAAK,GAAK,GAAK0jB,EAC5C9V,EAAQxD,KAAKgZ,MAAM4oC,EAAQ9jC,GACvBwE,MAAM9e,GAGR,OAFAxP,KAAKsK,QAAQgG,MAAM8zC,QAAU,YAC7BpkD,KAAKsmD,kBAAmB,GAG1B,QAAiB9/C,IAAbusM,GAA0BvjM,GAASujM,EAAU,CAC/CnlJ,EAAQimJ,EACRrkM,EAAQskM,EACRF,EAAeG,EACf,KACR,CAAa,GAAIvkM,GAASqjM,EAClB,MAEFgB,EAAgBjmJ,EAChBkmJ,EAAgBtkM,EAChBukM,EAAuBH,IACrBhyM,CACH,CACD,MAAMguM,EAAO5vM,KAAKmzM,UACdnzM,KAAKg0M,eAAexkM,EAAOo+C,EAAO8lJ,GAClC9lJ,EAAM/oC,QAAQ+uL,EAAe,GAAKA,EAAe,GAAK,IAAMF,EAE5D1zM,KAAKsvM,eAAiBM,IACxB5vM,KAAK0yM,cAAc1uJ,UAAY4rJ,EAC/B5vM,KAAKsvM,cAAgBM,GAGnB5vM,KAAKgzM,gBAAkBxjM,IACzBxP,KAAK0yM,cAAcpiM,MAAMd,MAAQA,EAAQ,KACzCxP,KAAKgzM,eAAiBxjM,GAGnBxP,KAAKsmD,mBACRtmD,KAAKsK,QAAQgG,MAAM8zC,QAAU,GAC7BpkD,KAAKsmD,kBAAmB,EAE3B,CASD,cAAA0tJ,CAAexkM,EAAOkI,EAAOg8L,GAC3B,MAAMO,EAAkBj0M,KAAKk0M,wBACvBC,EACJF,EAAkB,EACdjoM,KAAKgZ,MAAM,EAAIivL,GAAiBG,iBAAmB,OACnD,OAASpoM,KAAKgZ,MAAMivL,GAAiBG,iBACrCl2H,EAAQl+E,KAAKozM,eACbiB,EAAY7kM,EAAQ0uE,EACpBo2H,EAAa,CAACt0M,KAAKu0M,aAAa,aACtC,IAAK,IAAI3yM,EAAI,EAAGA,EAAIs8E,IAASt8E,EAAG,CAC9B,MAAM4yM,EACJ5yM,EAAI,GAAM,EAAI,yBAA2B,0BAC3C0yM,EAAW3uM,KAGP,uCAA6B6uM,oBACZH,eAGjBr0M,KAAKu0M,aAAa,aAEjB3yM,EAAI,GAAM,GAAe,IAAVs8E,EACZl+E,KAAKy0M,eAAe7yM,EAAG4N,GAAO,EAAOkI,EAAOg8L,GAC5C,IACJ,SAEL,CAEDY,EAAW3uM,KAAK3F,KAAKy0M,eAAev2H,EAAO1uE,GAAO,EAAMkI,EAAOg8L,IAO/D,OALqB1zM,KAAKqzM,cACtB,4CAA4C7jM,SAC5C2kM,EACA,SACA,IACkBG,EAAWz7L,KAAK,GACvC,CAOD,YAAA07L,CAAav7K,GAEX,MAGE,sDAAoBA,WAJG,aAAbA,EAA0B,GAAK,eAO5C,CAWD,cAAAy7K,CAAe7yM,EAAG4N,EAAOklM,EAAQh9L,EAAOg8L,GACtC,MAEMiB,GADE,IAAN/yM,EAAU,EAAIoK,KAAKgZ,MAAOtN,EAAQ1X,KAAKozM,eAAkBxxM,EAAI,KAAO,MACjC,IAANA,EAAU,GAAK,IAAM8xM,GAGpD,MAIE,uDANmB,IAAN9xM,GAAW,EAAK4N,EAAQxP,KAAKozM,gBAAmB,mBAOxC,IAANxxM,EAAU,OAAS,uBANb,IAANA,EAAU,EAAK4N,EAAQxP,KAAKozM,eAAkB,aAQpDsB,EAASllM,EAAQ,KAAO,aAEjCmlM,EACA,QAEH,CAMD,qBAAAT,GASE,OARmBpzL,GACjB9gB,KAAK2yM,WAAWzzL,WAChBlf,KAAK2yM,WAAWj2L,WAChB1c,KAAK2yM,WAAWl2L,OAChB,MAGqB,IAAO,OADlBzc,KAAKszM,MAAQf,GAG1B,CAOD,MAAA11J,CAAOgT,GACL,MAAMrS,EAAaqS,EAASrS,WAI1Bx9C,KAAK2yM,WAHFn1J,EAGeA,EAAWjE,UAFX,KAIpBv5C,KAAK8xD,gBACN,GC3cH,MAAM8iJ,GACM,EADNA,GAEQ,EAkXd,IAAAC,GA3VA,cAAyB7kJ,GAIvB,WAAAlwD,CAAY4K,GAGVzF,MAAM,CACJ9E,QAHFuK,EAAUA,GAAoB,IAGZvK,OAChBmK,QAASwF,SAASC,cAAc,OAChC8sC,OAAQnyC,EAAQmyC,SAOlB78C,KAAKkqD,kBAAoB,GAQzBlqD,KAAK80M,wBAAqBtuM,EAS1BxG,KAAK+0M,WAAaH,GAMlB50M,KAAKiqD,UAMLjqD,KAAKg1M,aAAe,EAMpBh1M,KAAKi1M,YAAc,EAMnBj1M,KAAKk1M,QAMLl1M,KAAKm1M,QAQLn1M,KAAKo1M,WAAa,KAOlBp1M,KAAKq1M,oBAAqB,EAM1Br1M,KAAKyyD,eAAiCjsD,IAArBkE,EAAQuzB,SAAyBvzB,EAAQuzB,SAAW,IAErE,MAAMmP,OACkB5mC,IAAtBkE,EAAQ0iC,UAA0B1iC,EAAQ0iC,UAAY,gBAClDkoK,EAAexlM,SAASC,cAAc,UAC5CulM,EAAarkJ,aAAa,OAAQ,UAClCqkJ,EAAaloK,UAAYA,EAAY,UAAYwT,GACjD,MAAM20J,EAAmBv1M,KAAKsK,QAC9BirM,EAAiBnoK,UACfA,EAAY,IAAMwT,GAAqB,IAAME,GAC/Cy0J,EAAiBtjM,YAAYqjM,GAE7BC,EAAiBjwM,iBACfqkD,GACA3pD,KAAKw1M,oBAAoBtuM,KAAKlH,OAC9B,GAEFu1M,EAAiBjwM,iBACfqkD,GACA3pD,KAAKy1M,mBAAmBvuM,KAAKlH,OAC7B,GAEFu1M,EAAiBjwM,iBACfqkD,GACA3pD,KAAK01M,kBAAkBxuM,KAAKlH,OAC5B,GAGFu1M,EAAiBjwM,iBACfwB,EACA9G,KAAK21M,sBAAsBzuM,KAAKlH,OAChC,GAEFs1M,EAAahwM,iBAAiBwB,EAAiBnH,GAAiB,EACjE,CAUD,MAAAm9C,CAAOlS,GACL3lC,MAAM63C,OAAOlS,GACTA,GACFA,EAAIiS,QAEP,CAUD,WAAA+4J,GACE,MAAM1vJ,EAAYlmD,KAAKsK,QACvB,IAAIurM,EAAiB3vJ,EAAU71C,YAC3BylM,EAAkB5vJ,EAAUt1C,aAChC,GAAuB,IAAnBilM,GAA4C,IAApBC,EAC1B,OAAQ91M,KAAKq1M,oBAAqB,EAGpC,MAAMU,EAAiBxlM,iBAAiB21C,GACxC2vJ,GACEhrK,WAAWkrK,EAA6B,cACxClrK,WAAWkrK,EAA4B,aACzCD,GACEjrK,WAAWkrK,EAA2B,YACtClrK,WAAWkrK,EAA8B,eAC3C,MAAMC,EAAoC9vJ,EAA2B,kBAC/D+vJ,EAAa1lM,iBAAiBylM,GAC9BE,EACJF,EAAM3lM,YACNw6B,WAAWorK,EAAwB,aACnCprK,WAAWorK,EAAuB,YAC9BE,EACJH,EAAMplM,aACNi6B,WAAWorK,EAAsB,WACjCprK,WAAWorK,EAAyB,cAUtC,OATAj2M,KAAKo1M,WAAa,CAACc,EAAYC,GAE3BN,EAAiBC,GACnB91M,KAAK+0M,WAAaH,GAClB50M,KAAKi1M,YAAcY,EAAiBK,IAEpCl2M,KAAK+0M,WAAaH,GAClB50M,KAAKg1M,aAAec,EAAkBK,GAEhCn2M,KAAKq1M,oBAAqB,CACnC,CAMD,qBAAAM,CAAsB9vM,GACpB,MAAM03C,EAAOv9C,KAAKogD,SAAS1C,UAErB04J,EAAmBp2M,KAAKq2M,qBAC5BxwM,EAAM2vC,QAAUx1C,KAAKo1M,WAAW,GAAK,EACrCvvM,EAAM4vC,QAAUz1C,KAAKo1M,WAAW,GAAK,GAGjC14L,EAAa1c,KAAKs2M,0BAA0BF,GAC5CjhK,EAAOoI,EAAKxB,mBAAmBwB,EAAK/E,qBAAqB97B,IAE/D6gC,EAAKpH,gBAAgB,CACnBhB,KAAMA,EACNlX,SAAUj+B,KAAKyyD,UACfnc,OAAQpqC,IAEX,CAOD,mBAAAspM,CAAoB3vM,GAClB,IAAK7F,KAAKiqD,WAAapkD,EAAM1F,SAAWH,KAAKsK,QAAQmjG,kBAAmB,CACtE,MAAMnjG,EACJtK,KAAKsK,QACb,kBAMM,GALAtK,KAAKogD,SAAS1C,UAAU9B,mBACxB57C,KAAKk1M,QAAUrvM,EAAMmmD,QAAUnhB,WAAWvgC,EAAQgG,MAAM+zC,MACxDrkD,KAAKm1M,QAAUtvM,EAAMomD,QAAUphB,WAAWvgC,EAAQgG,MAAMgpD,KACxDt5D,KAAKiqD,WAAY,EAEqB,IAAlCjqD,KAAKkqD,kBAAkB/oD,OAAc,CACvC,MAAMo1M,EAAOv2M,KAAKy1M,mBACZzzM,EAAMhC,KAAK01M,kBACXhqJ,EAAM1rD,KAAKogD,SAASuL,mBAC1B3rD,KAAKkqD,kBAAkBvkD,KACrBoB,EAAO2kD,EAAK/B,GAA8B4sJ,EAAMv2M,MAChD+G,EAAO2kD,EAAK/B,GAA4B3nD,EAAKhC,MAEhD,CACF,CACF,CAQD,kBAAAy1M,CAAmB5vM,GACjB,GAAI7F,KAAKiqD,UAAW,CAClB,MAAMjsC,EAASnY,EAAMmmD,QAAUhsD,KAAKk1M,QAC9Bj3L,EAASpY,EAAMomD,QAAUjsD,KAAKm1M,QAC9BiB,EAAmBp2M,KAAKq2M,qBAAqBr4L,EAAQC,GAC3Dje,KAAK80M,mBACH90M,KAAKs2M,0BAA0BF,GACjCp2M,KAAKogD,SAAS1C,UAAU7hB,cAAc77B,KAAK80M,mBAC5C,CACF,CAOD,iBAAAY,CAAkB7vM,GAChB,GAAI7F,KAAKiqD,UAAW,CACLjqD,KAAKogD,SAAS1C,UACtB7B,iBAEL77C,KAAKiqD,WAAY,EACjBjqD,KAAKk1M,aAAU1uM,EACfxG,KAAKm1M,aAAU3uM,EACfxG,KAAKkqD,kBAAkBh/C,QAAQ5D,GAC/BtH,KAAKkqD,kBAAkB/oD,OAAS,CACjC,CACF,CAQD,iBAAAq1M,CAAkBtzM,GAChB,MAAM81B,EAAWh5B,KAAKy2M,0BAA0BvzM,GAC1C8yM,EAAoCh2M,KAAKsK,QAAyB,kBAEpEtK,KAAK+0M,YAAcH,GACrBoB,EAAM1lM,MAAM+zC,KAAOrkD,KAAKi1M,YAAcj8K,EAAW,KAEjDg9K,EAAM1lM,MAAMgpD,IAAMt5D,KAAKg1M,aAAeh8K,EAAW,IAEpD,CAYD,oBAAAq9K,CAAqBj/L,EAAGC,GACtB,IAAIq/L,EAMJ,OAJEA,EADE12M,KAAK+0M,aAAeH,GACbx9L,EAAIpX,KAAKi1M,YAET59L,EAAIrX,KAAKg1M,aAEbpxL,GAAM8yL,EAAQ,EAAG,EACzB,CAUD,yBAAAJ,CAA0Bt9K,GAExB,OADWh5B,KAAKogD,SAAS1C,UAAU5E,+BAC5Bv1C,CAAG,EAAIy1B,EACf,CAWD,yBAAAy9K,CAA0BvzM,GAExB,OAAO0gB,GAAM,EADF5jB,KAAKogD,SAAS1C,UAAU1E,+BAClBz1C,CAAGL,GAAM,EAAG,EAC9B,CAOD,MAAA25C,CAAOgT,GACL,IAAKA,EAASrS,WACZ,OAEF,IAAKx9C,KAAKq1M,qBAAuBr1M,KAAK41M,cACpC,OAEF,MAAM1yM,EAAM2sD,EAASrS,WAAWjE,UAAU78B,WAC1C1c,KAAK80M,mBAAqB5xM,EAC1BlD,KAAKw2M,kBAAkBtzM,EACxB,GCtSH,IAAAyzM,GAlEA,cAA2B3mJ,GAIzB,WAAAlwD,CAAY4K,GACVA,EAAUA,GAAoB,GAE9BzF,MAAM,CACJqF,QAASwF,SAASC,cAAc,OAChC5P,OAAQuK,EAAQvK,SAOlBH,KAAKuZ,OAAS7O,EAAQ6O,OAAS7O,EAAQ6O,OAAS,KAEhD,MAAM6zB,OACkB5mC,IAAtBkE,EAAQ0iC,UAA0B1iC,EAAQ0iC,UAAY,iBAElDsY,OAA0Bl/C,IAAlBkE,EAAQg7C,MAAsBh7C,EAAQg7C,MAAQ,IACtD8K,OACiBhqD,IAArBkE,EAAQ8lD,SAAyB9lD,EAAQ8lD,SAAW,gBAChDjF,EAASz7C,SAASC,cAAc,UACtCw7C,EAAO0F,aAAa,OAAQ,UAC5B1F,EAAO2F,MAAQV,EACfjF,EAAOt5C,YACY,iBAAVyzC,EAAqB51C,SAASyjD,eAAe7N,GAASA,GAG/D6F,EAAOjmD,iBACLwB,EACA9G,KAAKmxD,aAAajqD,KAAKlH,OACvB,GAGF,MAAMoxD,EACJhkB,EAAY,IAAMwT,GAAqB,IAAME,GACzCx2C,EAAUtK,KAAKsK,QACrBA,EAAQ8iC,UAAYgkB,EACpB9mD,EAAQ2H,YAAYs5C,EACrB,CAMD,YAAA4F,CAAatrD,GACXA,EAAMzF,iBACNJ,KAAK42M,oBACN,CAKD,kBAAAA,GACE,MACMr5J,EADMv9C,KAAKogD,SACA1C,UACXnkC,EAAUvZ,KAAKuZ,OAEjBvZ,KAAKuZ,OADLgkC,EAAK7uB,gBAAgBtP,YAEzBm+B,EAAK1D,YAAYD,GAAkBrgC,GACpC,GCyoBCs9L,GAAK,CAAG,SACZA,GAAGtsM,WAAausM,EAChBD,GAAGtsM,WAAWF,gBAAkB0sM,EAChCF,GAAG12G,SAAWjtF,GACd2jM,GAAG12G,SAAS7tF,YAAc0kM,GAC1BH,GAAG12G,SAASjuF,YAAc+kM,GAC1BJ,GAAG12G,SAASvtF,QAAUskM,GACtBL,GAAG7xM,WAAa1E,EAChBu2M,GAAG1iM,QAAUwB,GACbkhM,GAAG1iM,QAAQoB,oBAAsB4hM,GACjCN,GAAGO,YAAct/K,GACjB++K,GAAGO,YAAYz/K,iBAAmB0/K,GAClCR,GAAG/nM,MAAQmsB,GACX47K,GAAG/nM,MAAMC,OAASuoM,GAClBT,GAAG/nM,MAAMisB,eAAiBw8K,GAC1BV,GAAG/nM,MAAMqrB,YAAcq9K,GACvBX,GAAG/nM,MAAMzB,KAAOoqM,GAChBZ,GAAGrwG,YAAc1qE,GACjB+6K,GAAG3pH,UAAYhxD,GACf26K,GAAGp5I,QAAUvgC,GACb25K,GAAGvG,IAAMpxI,GACT23I,GAAG5rJ,gBAAkB5C,GACrBwuJ,GAAG3xI,uBAAyBtb,GAC5BitJ,GAAGvuJ,SAAWF,GACdyuJ,GAAGnwM,OAASqC,EACZ8tM,GAAGnwM,OAAOmC,YAAc6uM,EACxBb,GAAGrvM,WAAaa,EAChBwuM,GAAGrvM,WAAWY,QAAUuvM,EACxBd,GAAGnG,QAAU/pI,GACbkwI,GAAG1jM,KAAO9G,GACVwqM,GAAGxtH,UAAYxe,GACfgsI,GAAGn1I,UAAYvT,GACf0oJ,GAAGn1I,UAAUvS,gBAAkByoJ,GAC/Bf,GAAG7rI,UAAYE,GACf2rI,GAAG7rI,UAAUvwD,eAAiBo9L,GAC9BhB,GAAGiB,iBAAmB3sI,GACtB0rI,GAAGl5J,KAAOnK,GACVqjK,GAAGl5J,KAAKlM,uBAAyBsmK,GACjClB,GAAGl5J,KAAK7L,2BAA6BkmK,GACrCnB,GAAGl5J,KAAKnL,yBAA2BylK,GACnCpB,GAAGl5J,KAAK/K,gBAAkBslK,GAC1BrB,GAAGpsM,MAAQ,CAAA,EACXosM,GAAGpsM,MAAMzJ,UAAYm3M,EACrBtB,GAAGpsM,MAAM/J,aAAe03M,EACxBvB,GAAGpsM,MAAMlJ,WAAa82M,EACtBxB,GAAGpsM,MAAMlI,OAAS+1M,EAClBzB,GAAGpsM,MAAMvI,OAASq2M,EAClB1B,GAAGpsM,MAAM9H,SAAW61M,EACpB3B,GAAGpsM,MAAMjJ,kBAAoBi3M,EAC7B5B,GAAGpsM,MAAMgB,O5SnmBF,SAAgBhK,EAAKiH,GAC1B,MAAM9G,EAAIH,EAAImF,QAAQ8B,GAChBtH,EAAQQ,GAAK,EAInB,OAHIR,GACFK,EAAIoF,OAAOjF,EAAG,GAETR,CACT,E4S6lBAy1M,GAAGpsM,MAAM3I,gBAAkB42M,EAC3B7B,GAAGpsM,MAAMkuM,W5SnkBF,SAAoBl3M,EAAKm3M,GAC9B,MAAMz3M,EAASM,EAAIN,OACbc,EAAMI,MAAMZ,EAAIN,QACtB,IAAIS,EACJ,IAAKA,EAAI,EAAGA,EAAIT,EAAQS,IACtBK,EAAIL,GAAK,CAACqB,MAAOrB,EAAGyC,MAAO5C,EAAIG,IAKjC,IAHAK,EAAImyB,MAAK,SAAU/yB,EAAGC,GACpB,OAAOs3M,EAAWv3M,EAAEgD,MAAO/C,EAAE+C,QAAUhD,EAAE4B,MAAQ3B,EAAE2B,KACvD,IACOrB,EAAI,EAAGA,EAAIH,EAAIN,OAAQS,IAC1BH,EAAIG,GAAKK,EAAIL,GAAGyC,KAEpB,E4SujBAwyM,GAAGgC,QAAU,CAAA,EACbhC,GAAGgC,QAAQ7kM,OAAS8kM,GACpBjC,GAAGkC,iBAAmB,CAAA,EACtBlC,GAAGkC,iBAAiBxpK,aAAeypK,GACnCnC,GAAGkC,iBAAiBjwL,KAAOmwL,GAC3BpC,GAAG9sK,MAAQ,CAAA,EACX8sK,GAAG9sK,MAAM2B,QAAUwtK,GACnBrC,GAAG9sK,MAAMkB,SAAWkuK,GACpBtC,GAAG9sK,MAAMwB,WAAa6tK,GACtBvC,GAAG9sK,MAAM4B,cAAgB0tK,GACzBxC,GAAG9sK,MAAMuB,WAAaguK,GACtBzC,GAAG9sK,MAAM0B,UAAY8tK,GACrB1C,GAAG9sK,MAAMsB,WAAamuK,GACtB3C,GAAG9sK,MAAMpxB,SAAW8gM,GACpB5C,GAAG9sK,MAAMqB,UAAYsuK,GACrB7C,GAAG8C,UAAY,CAAA,EACf9C,GAAG8C,UAAUltI,YAAcmtI,GAC3B/C,GAAG5tL,QAAU,CAAA,EACb4tL,GAAG5tL,QAAQ3Z,MAAQuqM,GACnBhD,GAAG5tL,QAAQ5G,I5QrwBJ,YAAgB2G,GACjBD,GAAQJ,GAAOC,MAGnBK,QAAQ5G,OAAO2G,EACjB,E4QiwBA6tL,GAAG5tL,QAAQ6wL,S5Q7wBJ,SAAkB/6L,GACvBgK,GAAQJ,GAAO5J,EACjB,E4Q4wBA83L,GAAG5tL,QAAQJ,KAAOkxL,GAClBlD,GAAG10I,QAAU,CAAA,EACb00I,GAAG10I,QAAQhO,YAAcpE,GACzB8mJ,GAAG10I,QAAQnS,QAAUR,GACrBqnJ,GAAG10I,QAAQ63I,WAAaxM,GACxBqJ,GAAG10I,QAAQ83I,cAAgBjL,GAC3B6H,GAAG10I,QAAQ+3I,YAAcnK,GACzB8G,GAAG10I,QAAQnO,OAAS3B,GACpBwkJ,GAAG10I,QAAQg4I,UAAY3H,GACvBqE,GAAG10I,QAAQrO,KAAOf,GAClB8jJ,GAAG10I,QAAQi4I,WAAavF,GACxBgC,GAAG10I,QAAQk4I,aAAe1D,GAC1BE,GAAG10I,QAAQvO,SAAW,GACtBijJ,GAAG10I,QAAQvO,SAASA,SAAW0mJ,GAC/BzD,GAAG1/L,WAAa,CAAA,EAChB0/L,GAAG1/L,WAAWoM,IAAMg3L,GACpB1D,GAAG1/L,WAAW4O,gBAAkBy0L,GAChC3D,GAAG1/L,WAAWgP,iBAAmBs0L,GACjC5D,GAAG1/L,WAAWujM,e9Q/qBP,SAAwBl0L,GAC7B,OAAA,SAKYrP,GACR,OAAOqQ,GAAWrQ,EAAYqP,EAEhC,CACJ,E8QsqBAqwL,GAAG1/L,WAAWmP,oBAAsBq0L,GACpC9D,GAAG1/L,WAAWmQ,SAAWszL,GACzB/D,GAAG1/L,WAAW5U,OAASs4M,GACvBhE,GAAG1/L,WAAW2P,OAASg0L,GACvBjE,GAAG1/L,WAAWuQ,cAAgBqzL,GAC9BlE,GAAG1/L,WAAWG,OAAS0jM,GACvBnE,GAAG1/L,WAAWO,MAAQujM,GACtBpE,GAAG1/L,WAAW2M,gBAAkBo3L,GAChCrE,GAAG1/L,WAAWoQ,yBAA2B4zL,GACzCtE,GAAG1/L,WAAWikM,a9QheP,SAAsBjkM,EAAYqP,GACvC,OAAIrP,EAEAmP,GAAoB,KAAMnP,EAAW,GAAIqP,GACzC,IACAF,GAAoB,KAAMnP,EAAW,GAAIqP,GAGtC,EACT,E8QwdAqwL,GAAG1/L,WAAWqQ,WAAa6zL,GAC3BxE,GAAG1/L,WAAW8H,MAAQq8L,GACtBzE,GAAG0E,IAAM,CAAA,EACT1E,GAAG0E,IAAIx6J,gBAAkBy6J,GACzB3E,GAAG0E,IAAIz6J,cAAgB26J,GACvB5E,GAAG0E,IAAI76J,aAAeg7J,GACtB7E,GAAG0E,IAAI56J,iBAAmBg7J,GAC1B9E,GAAG0E,IAAI36J,mBAAqBg7J,GAC5B/E,GAAG0E,IAAI16J,kBAAoBg7J,GAC3BhF,GAAG0E,IAAIp6J,kBAAoB26J,GAC3BjF,GAAGkF,IAAM,CAAA,EACTlF,GAAGkF,IAAIxsM,sBAAwBysM,GAC/BnF,GAAGkF,IAAIprM,YAAcsrM,GACrBpF,GAAGkF,IAAI3rM,WAAa8rM,GACpBrF,GAAGkF,IAAI9rM,cAAgBksM,GACvBtF,GAAGkF,IAAIvqM,eAAiB4qM,GACxBvF,GAAGkF,IAAI1qM,WAAagrM,GACpBxF,GAAGkF,IAAIrqM,gBAAkB4qM,GACzBzF,GAAGkF,IAAIhrM,YAAcwrM,GACrB1F,GAAGvgK,OAAS,CAAA,EACZugK,GAAGvgK,OAAOxqC,OAAS0wM,GACnB3F,GAAGvgK,OAAOpqC,QAAUuwM,GACpB5F,GAAGvgK,OAAOnqC,SAAWuwM,GACrB7F,GAAGvgK,OAAOlqC,OAASuwM,GACnB9F,GAAGvgK,OAAOsmK,UhS7yBH,SAAmB7wM,GACxB,OAAIA,EAAI,GACCI,GAAS,EAAIJ,GAEf,EAAII,GAAS,GAAKJ,EAAI,IAC/B,EgSyyBA8qM,GAAG7J,OAAS,CAAA,EACZ6J,GAAG7J,OAAOjnM,MAAQlG,EAClBg3M,GAAG7J,OAAOjnM,MAAM3F,e/S5xBT,SAAwBR,GAC7BA,EAAIQ,gBACN,E+S2xBAy2M,GAAG7J,OAAOjnM,MAAMpG,gBAAkBk9M,EAClChG,GAAG7J,OAAOjgC,UAAY,GACtB8pC,GAAG7J,OAAOjgC,UAAUA,UAAY+vC,GAChCjG,GAAG7J,OAAOnjJ,OAAS9kD,EACnB8xM,GAAG7J,OAAO70I,UAAY,GACtB0+I,GAAG7J,OAAO70I,UAAUnC,IAAM+mJ,GAC1BlG,GAAG7J,OAAO70I,UAAUhC,WAAa6mJ,GACjCnG,GAAG7J,OAAO70I,UAAU5B,iBAAmB0mJ,GACvCpG,GAAG7J,OAAO70I,UAAUrB,OAASomJ,GAC7BrG,GAAG7J,OAAO70I,UAAUglJ,MtMxvBC,SAAUxoJ,GAC7B,OAAOA,EAAgB50D,MAAQ+oD,GAAoBE,KACrD,EsMuvBA6tJ,GAAG7J,OAAO70I,UAAUilJ,YtM9rBO,SAAUzoJ,GACnC,OAAOA,EAAgB50D,MAAQ+oD,GAAoBG,QACrD,EsM6rBA4tJ,GAAG7J,OAAO70I,UAAU3B,MAAQ6mJ,GAC5BxG,GAAG7J,OAAO70I,UAAUvB,kBAAoB0mJ,GACxCzG,GAAG7J,OAAO70I,UAAUpB,kBAAoBwmJ,GACxC1G,GAAG7J,OAAO70I,UAAUX,UAAYgmJ,GAChC3G,GAAG7J,OAAO70I,UAAUnB,MAAQymJ,GAC5B5G,GAAG7J,OAAO70I,UAAUjB,eAAiBwmJ,GACrC7G,GAAG7J,OAAO70I,UAAUwlJ,QtMljBG,SAAUhpJ,GAC/B,MAAMipJ,EAAiE,EAErEr1J,cAMF,OALAv0C,QACiBxN,IAAfo3M,EACA,uDAGgC,QAA3BA,EAAWnmJ,WACpB,EsMyiBAo/I,GAAG7J,OAAO70I,UAAUhB,oBAAsB0mJ,GAC1ChH,GAAG7J,OAAO70I,UAAU2lJ,wBtMvqBmB,SAAUnpJ,GAC/C,MAAMpM,EACJoM,EACJ,cACE,OACGpM,EAAc6N,SACd9nD,GAAMi6C,EAAc8N,QAAU9N,EAAc+N,WAC5C/N,EAAc2M,QAEnB,EsM+pBA2hJ,GAAG7J,OAAO70I,UAAU4lJ,YtM9tBO,SAAUppJ,GACnC,MAA+B,eAAxBA,EAAgB50D,IACzB,EsM6tBA82M,GAAG7J,OAAO70I,UAAUT,cAAgBsmJ,GACpCnH,GAAG7J,OAAO70I,UAAUf,aAAe6mJ,GACnCpH,GAAG7J,OAAO70I,UAAUlB,YAAcinJ,GAClCrH,GAAG7J,OAAO70I,UAAUd,kBAAoB8mJ,GACxCtH,GAAG7J,OAAO70I,UAAUimJ,UtM7kBK,SAAUzpJ,GACjC,MAAMipJ,EAAiE,EAErEr1J,cAMF,OALAv0C,QACiBxN,IAAfo3M,EACA,uDAGgC,UAA3BA,EAAWnmJ,WACpB,EsMokBAo/I,GAAG7J,OAAOjmM,OAASs3M,EACnBxH,GAAG7J,OAAO3lM,WAAai3M,EACvBzH,GAAG7J,OAAO1lM,cAAgBi3M,EAC1B1H,GAAG2H,KAAO,CAAA,EACV3H,GAAG2H,KAAKC,IAAM,GACd5H,GAAG2H,KAAKC,IAAIj3E,gBAAkBk3E,GAC9B7H,GAAG2H,KAAKC,IAAIl3E,qBAAuBo3E,GACnC9H,GAAG2H,KAAKx3E,WAAa,GACrB6vE,GAAG2H,KAAKx3E,WAAWvF,QAAUm9E,GAC7B/H,GAAG2H,KAAKx3E,WAAW5F,YAAcy9E,GACjChI,GAAG2H,KAAKx3E,WAAWzE,eAAiBu8E,GACpCjI,GAAG2H,KAAKx3E,WAAWzF,UAAYw9E,GAC/BlI,GAAG2H,KAAKx3E,WAAW1E,kBAAoB08E,GACvCnI,GAAG2H,KAAKx3E,WAAW7F,SAAW89E,GAC9BpI,GAAG2H,KAAKx3E,WAAWxF,gBAAkB09E,GACrCrI,GAAG2H,KAAKx3E,WAAW3F,WAAa89E,GAChCtI,GAAG2H,KAAKx3E,WAAWlE,IAAMs8E,GACzBvI,GAAG2H,KAAKx3E,WAAW1F,WAAa+9E,GAChCxI,GAAG2H,KAAKx3E,WAAWlF,aAAew9E,GAClCzI,GAAG2H,KAAKx3E,WAAW5E,OAASm9E,GAC5B1I,GAAG2H,KAAKx3E,WAAWvE,kBAAoB+8E,GACvC3I,GAAG2H,KAAKx3E,WAAW/E,aAAew9E,GAClC5I,GAAG2H,KAAKx3E,WAAWh8F,MAAQ00K,GAC3B7I,GAAG2H,KAAKx3E,WAAWpF,SAAW+9E,GAC9B9I,GAAG2H,KAAKoB,IAAM,GACd/I,GAAG2H,KAAKoB,IAAIjvD,sBAAwBkvD,GACpChJ,GAAG2H,KAAKoB,IAAI3vD,YAAc6vD,GAC1BjJ,GAAG2H,KAAKoB,IAAIp4E,gBpDtuBL,SACL7E,EACA5iI,EACAspI,EACA02E,GAEA,MAAM/4E,EAAah8F,GAAM23F,EAAS0G,EAAgBtpI,GAClD,GAAIqiI,GAAO4E,EAAWjnI,KAAMohI,IAC1B,MAAM,IAAI54H,MAAM,8BAElB,IAAK05H,GAAaliI,EAAMinI,EAAWjnI,MAAO,CACxC,MAAMsiI,EAAWT,GAAS7hI,GACpB0nI,EAAS7F,GAASoF,EAAWjnI,MACnC,MAAM,IAAIwI,MACR,qCAAqC85H,UAAiBoF,IAEzD,CACD,OAAOopB,GAAQ7pB,EAAYjnI,EAAMggN,EACnC,EoDqtBAlJ,GAAG2H,KAAKoB,IAAI1vD,YAAc8vD,GAC1BnJ,GAAG2H,KAAKoB,IAAIvvD,0BAA4B4vD,GACxCpJ,GAAG2H,KAAKoB,IAAIM,sBpDxwBL,WACL,MAAO,CACLlvD,kBAAkB,EAClBtuB,UAAW,CAAE,EACb7tH,WAAY,CAAE,EACd48I,UAAW,CAAE,EACbrwD,UAAW,EACX9wF,MAAO,CAAE,EAEb,EoDgwBAumM,GAAG2H,KAAKoB,IAAI5vD,aAAemwD,GAC3BtJ,GAAG2H,KAAKoB,IAAIrvD,aAAe6vD,GAC3BvJ,GAAG2H,KAAKoB,IAAIpvD,uBAAyB6vD,GACrCxJ,GAAGt9L,OAAS,CAAA,EACZs9L,GAAGt9L,OAAOmF,eAAiB4hM,GAC3BzJ,GAAGt9L,OAAO0B,oBAAsBslM,GAChC1J,GAAGt9L,OAAOF,eAAiBmnM,GAC3B3J,GAAGt9L,OAAOG,OAAS+mM,GACnB5J,GAAGt9L,OAAOzE,MAAQ4rM,GAClB7J,GAAGt9L,OAAOK,yBAA2B+mM,GACrC9J,GAAGt9L,OAAOM,mBAAqB+mM,GAC/B/J,GAAGt9L,OAAOQ,eAAiB8mM,GAC3BhK,GAAGt9L,OAAOO,WAAagnM,GACvBjK,GAAGt9L,OAAOW,uBAAyB6mM,GACnClK,GAAGt9L,OAAOC,YAAcwnM,GACxBnK,GAAGt9L,OAAOkB,eAAiBwmM,GAC3BpK,GAAGt9L,OAAOmB,oBAAsBwmM,GAChCrK,GAAGt9L,OAAOoB,6BAA+BwmM,GACzCtK,GAAGt9L,OAAO6nM,8BvR5rBH,SAAuC9nM,EAAaK,GAEzD,OAAOyB,GADQV,GAAoBf,GACFL,EACnC,EuR0rBAu9L,GAAGt9L,OAAOqB,kCAAoCymM,GAC9CxK,GAAGt9L,OAAO+nM,wBvRjqBH,SAAiC/lM,EAAO5B,GAE7C,OAAO2B,GADQZ,GAAoBf,GACR4B,EAC7B,EuR+pBAs7L,GAAGt9L,OAAOhX,OAASg/M,GACnB1K,GAAGt9L,OAAOrX,OAASs/M,GACnB3K,GAAGt9L,OAAOE,iBAAmBgoM,GAC7B5K,GAAGt9L,OAAO6B,kBAAoBsmM,GAC9B7K,GAAGt9L,OAAOyB,sBAAwB2mM,GAClC9K,GAAGt9L,OAAO+B,YAAcsmM,GACxB/K,GAAGt9L,OAAO8B,SAAWwmM,GACrBhL,GAAGt9L,OAAOmC,cAAgBomM,GAC1BjL,GAAGt9L,OAAO0C,QAAU8lM,GACpBlL,GAAGt9L,OAAOsC,cAAgBmmM,GAC1BnL,GAAGt9L,OAAOuC,eAAiBmmM,GAC3BpL,GAAGt9L,OAAO8C,UAAY6lM,GACtBrL,GAAGt9L,OAAO+C,UAAY6lM,GACtBtL,GAAGt9L,OAAO6oM,gBvRlcH,SAAyBpoM,EAASC,GACvC,MAAME,EAAOnO,KAAKwP,IAAIxB,EAAQ,GAAIC,EAAQ,IACpCG,EAAOpO,KAAKwP,IAAIxB,EAAQ,GAAIC,EAAQ,IAG1C,OAFajO,KAAKyP,IAAIzB,EAAQ,GAAIC,EAAQ,IAE3BE,IADFnO,KAAKyP,IAAIzB,EAAQ,GAAIC,EAAQ,IACXG,EACjC,EuR6bAy8L,GAAGt9L,OAAOiD,kBAAoB6lM,GAC9BxL,GAAGt9L,OAAO6C,UAAYkmM,GACtBzL,GAAGt9L,OAAOoE,gBAAkB4kM,GAC5B1L,GAAGt9L,OAAOipM,oBvRvXH,SAA6BxoM,EAASC,GAE3C,OAAOgC,GADc0B,GAAgB3D,EAASC,GAEhD,EuRqXA48L,GAAGt9L,OAAOkpM,UvR1UH,SAAmBlpM,GACxB,OAAO4C,GAAS5C,GAAU6C,GAAU7C,EACtC,EuRyUAs9L,GAAGt9L,OAAO6D,mBAAqBslM,GAC/B7L,GAAGt9L,OAAO7F,QvRlUH,SAAiB6F,GACtB,MAAO,CAACA,EAAO,GAAKA,EAAO,GAAIA,EAAO,GAAKA,EAAO,GACpD,EuRiUAs9L,GAAGt9L,OAAOyC,WAAa2mM,GACvB9L,GAAGt9L,OAAOwC,YAAc6mM,GACxB/L,GAAGt9L,OAAO4C,SAAW0mM,GACrBhM,GAAGt9L,OAAOsE,WAAailM,GACvBjM,GAAGt9L,OAAO2E,kBAAoB6kM,GAC9BlM,GAAGt9L,OAAOzU,QAAUk+M,GACpBnM,GAAGt9L,OAAOuE,eAAiBmlM,GAC3BpM,GAAGt9L,OAAOwE,gBAAkBmlM,GAC5BrM,GAAGt9L,OAAOiG,cAAgB2jM,GAC1BtM,GAAGt9L,OAAO0F,MAAQmkM,GAClBvM,GAAGwM,cAAgB,CAAA,EACnBxM,GAAGwM,cAAcz2I,gBAAkB02I,GACnCzM,GAAGwM,cAAcE,mBhLnyBV,SAA4BC,GACjC72I,GAAkB62I,CACpB,EgLkyBA3M,GAAGwM,cAAcr2I,IAAMy2I,GACvB5M,GAAG/vL,OAAS,CAAA,EACZ+vL,GAAG/vL,OAAO3S,QAAU47J,GACpB8mC,GAAG/vL,OAAO3S,QAAQ88J,eAAiByyC,GACnC7M,GAAG/vL,OAAO3S,QAAQ48J,oBAAsB4yC,GACxC9M,GAAG/vL,OAAO3S,QAAQ08J,2BAA6B+yC,GAC/C/M,GAAG/vL,OAAO3S,QAAQs8J,6BAA+BozC,GACjDhN,GAAG/vL,OAAOg9L,IAAMxsC,GAChBu/B,GAAG/vL,OAAOi9L,QAAUvqC,GACpBq9B,GAAG/vL,OAAOk9L,IAAMnpC,GAChBg8B,GAAG/vL,OAAO2yJ,YAAc1B,GACxB8+B,GAAG/vL,OAAOm9L,IAAMl8B,GAChB8uB,GAAG/vL,OAAOm9L,IAAIC,oB5B1wBP,WACL,OAAO7kC,EACT,E4BywBAw3B,GAAG/vL,OAAOm9L,IAAIE,qB5BruBP,WACL,OAAO5kC,EACT,E4BouBAs3B,GAAG/vL,OAAOm9L,IAAIG,sB5BptBP,WACL,OAAOnzE,EACT,E4BmtBA4lE,GAAG/vL,OAAOm9L,IAAII,gB5BtrBP,WACL,OAAO3xD,EACT,E4BqrBAmkD,GAAG/vL,OAAOm9L,IAAIK,qB5B1qBP,WACL,OAAO3kC,EACT,E4ByqBAk3B,GAAG/vL,OAAOm9L,IAAIM,oB5BrsBP,WACL,OAAO9kC,EACT,E4BosBAo3B,GAAG/vL,OAAOm9L,IAAI7jC,oBAAsBokC,GACpC3N,GAAG/vL,OAAO29L,IAAMnzB,GAChBulB,GAAG/vL,OAAO49L,OAASzxB,GACnB4jB,GAAG/vL,OAAOgmL,IAAM1W,GAChBygB,GAAG/vL,OAAO69L,SAAWxtB,GACrB0f,GAAG/vL,OAAO69L,SAAShuB,aAAeiuB,GAClC/N,GAAG/vL,OAAO69L,SAAS/tB,aAAeiuB,GAClChO,GAAG/vL,OAAO69L,SAAS7tB,qBAAuBguB,GAC1CjO,GAAG/vL,OAAO69L,SAAS3tB,uBAAyB+tB,GAC5ClO,GAAG/vL,OAAO69L,SAASpuB,aAAeyuB,GAClCnO,GAAG/vL,OAAO69L,SAASjuB,aAAeuuB,GAClCpO,GAAG/vL,OAAO69L,SAAS9tB,qBAAuBquB,GAC1CrO,GAAG/vL,OAAO69L,SAAS1tB,sBAAwBkuB,GAC3CtO,GAAG/vL,OAAO69L,SAAS5tB,uBAAyBquB,GAC5CvO,GAAG/vL,OAAOg0J,YAAcb,GACxB48B,GAAG/vL,OAAOu+L,SAAWrtB,GACrB6e,GAAG/vL,OAAOw+L,IAAM3d,GAChBkP,GAAG/vL,OAAOw+L,IAAIC,YV+TP,SAAqB/tK,EAAQqjE,GAElC,MAAM/oB,EAAQurB,GAAgBmpF,GAD9B3rF,EAAUA,GAAW,SAC+B,UAC9C3qG,EAAU,CACdoB,KAAMwgF,GAOR,OALAprF,OAAO6C,OAAO2G,EAAS,CACrB2qG,QAAWA,EACXrjE,OAAUA,IAEZivJ,GAAqB30G,EAAOt6C,EAAQ,CAACtnC,IAC9B4hF,CACT,EU1UA+kH,GAAG/vL,OAAO0+L,kBAAoB1b,GAC9B+M,GAAG/vL,OAAO2+L,iBAAmB7Y,GAC7BiK,GAAG/vL,OAAO4+L,MAAQ,GAClB7O,GAAG/vL,OAAO4+L,MAAMpyB,SAAWqyB,GAC3B9O,GAAG/vL,OAAO8+L,IAAM,GAChB/O,GAAG/vL,OAAO8+L,IAAI3zC,YAAc4zC,GAC5BhP,GAAG/vL,OAAO8+L,IAAI1zC,kBAAoB4zC,GAClCjP,GAAG/vL,OAAO8+L,IAAIzzC,aAAe4zC,GAC7BlP,GAAG/vL,OAAO8+L,IAAIvzC,YAAc2zC,GAC5BnP,GAAG/vL,OAAO8+L,IAAItzC,kBAAoB2zC,GAClCpP,GAAG/vL,OAAO8+L,IAAIpzC,6BAA+B0zC,GAC7CrP,GAAG/vL,OAAO8+L,IAAIrzC,oBAAsB4zC,GACpCtP,GAAG/vL,OAAO8+L,IAAInzC,WAAa2zC,GAC3BvP,GAAG/vL,OAAO8+L,IAAIlzC,qBAAuB2zC,GACrCxP,GAAG/vL,OAAO8+L,IAAI/yC,kBAAoByzC,GAClCzP,GAAG/vL,OAAO8+L,IAAI7yC,sBAAwBwzC,GACtC1P,GAAG/vL,OAAO8+L,IAAIryC,qBAAuBizC,GACrC3P,GAAG/vL,OAAO8+L,IAAInyC,gCAAkCgzC,GAChD5P,GAAG/vL,OAAO8+L,IAAIhzC,oBAAsB8zC,GACpC7P,GAAGplD,UAAY,CAAA,EACfolD,GAAGplD,UAAUruJ,MAAQujN,EACrB9P,GAAGplD,UAAUtuJ,KAAOyjN,EACpB/P,GAAGplD,UAAUpuJ,KAAOwjN,EACpBhQ,GAAGplD,UAAUnuJ,WAAawjN,EAC1BjQ,GAAGplD,UAAUttJ,UAAY4iN,EACzBlQ,GAAG9hE,KAAO,CAAA,EACV8hE,GAAG9hE,KAAKv6D,OAAS4b,GACjBygH,GAAG9hE,KAAKvlH,SAAWlC,GACnBupL,GAAG9hE,KAAK16D,mBAAqB8c,GAC7B0/G,GAAG9hE,KAAKh7D,WAAaoe,GACrB0+G,GAAG9hE,KAAK/hH,WAAaK,GACrBwjL,GAAG9hE,KAAK56D,gBAAkBue,GAC1Bm+G,GAAG9hE,KAAK76D,WAAa8e,GACrB69G,GAAG9hE,KAAK36D,aAAe4f,GACvB68G,GAAG9hE,KAAKzhH,MAAQC,GAChBsjL,GAAG9hE,KAAKh/G,QAAUiB,GAClB6/K,GAAG9hE,KAAKh/G,QAAQkB,SAAW+vL,GAC3BnQ,GAAG9hE,KAAKh/G,QAAQsB,WAAa4vL,GAC7BpQ,GAAG9hE,KAAKh/G,QAAQqB,WAAa8vL,GAC7BrQ,GAAG9hE,KAAKh/G,QAAQyB,YAAc2vL,GAC9BtQ,GAAG9hE,KAAK9hH,eAAiB1D,GACzBsnL,GAAG9hE,KAAK9hH,eAAejE,mBAAqBo4L,GAC5CvQ,GAAG9hE,KAAK9hH,eAAe/D,mBAAqBm4L,GAC5CxQ,GAAG9hE,KAAK9hH,eAAe9D,gBAAkBm4L,GACzCzQ,GAAG9hE,KAAKzf,KAAO,GACfuhF,GAAG9hE,KAAKzf,KAAKp5G,KAAO,GACpB26L,GAAG9hE,KAAKzf,KAAKp5G,KAAK0W,WAAa20L,GAC/B1Q,GAAG9hE,KAAKzf,KAAKp5G,KAAK4W,YAAc00L,GAChC3Q,GAAG9hE,KAAKzf,KAAKp5G,KAAK6W,aAAe00L,GACjC5Q,GAAG9hE,KAAKzf,KAAK74G,OAAS,GACtBo6L,GAAG9hE,KAAKzf,KAAK74G,OAAOsW,aAAe20L,GACnC7Q,GAAG9hE,KAAKzf,KAAKqyF,QAAU,GACvB9Q,GAAG9hE,KAAKzf,KAAKqyF,QAAQl3L,qBAAuBm3L,GAC5C/Q,GAAG9hE,KAAKzf,KAAKqyF,QAAQ12L,wBAA0B42L,GAC/ChR,GAAG9hE,KAAKzf,KAAKqyF,QAAQz2L,6BAA+B42L,GACpDjR,GAAG9hE,KAAKzf,KAAKqyF,QAAQ92L,mBAAqBk3L,GAC1ClR,GAAG9hE,KAAKzf,KAAKqyF,QAAQr3L,gBAAkB03L,GACvCnR,GAAG9hE,KAAKzf,KAAKqyF,QAAQh3L,0BAA4Bs3L,GACjDpR,GAAG9hE,KAAKzf,KAAKxiE,SAAW,GACxB+jJ,GAAG9hE,KAAKzf,KAAKxiE,SAASt/B,yBAA2B00L,GACjDrR,GAAG9hE,KAAKzf,KAAKxiE,SAASr/B,qBAAuB00L,GAC7CtR,GAAG9hE,KAAKzf,KAAKxiE,SAASn/B,sBAAwBy0L,GAC9CvR,GAAG9hE,KAAKzf,KAAKxiE,SAASl/B,uBAAyBy0L,GAC/CxR,GAAG9hE,KAAKzf,KAAKgzF,QAAU,GACvBzR,GAAG9hE,KAAKzf,KAAKgzF,QAAQn3L,kBAAoBo3L,GACzC1R,GAAG9hE,KAAKzf,KAAKgzF,QAAQl3L,mBAAqBo3L,GAC1C3R,GAAG9hE,KAAKzf,KAAKgzF,QAAQj3L,wBAA0Bo3L,GAC/C5R,GAAG9hE,KAAKzf,KAAKgzF,QAAQ/2L,6BAA+Bm3L,GACpD7R,GAAG9hE,KAAKzf,KAAKqzF,KAAO,GACpB9R,GAAG9hE,KAAKzf,KAAKqzF,KAAK94C,OAAS+4C,GAC3B/R,GAAG9hE,KAAKzf,KAAKuzF,SAAW,GACxBhS,GAAG9hE,KAAKzf,KAAKuzF,SAASC,etEt+Bf,SACLvgM,EACAR,EACAipH,EACAhpH,EACA9I,EACA0O,GAEA,MAAMm7L,EAAgBr6L,GAAc,aAE9Bs6L,EAAUh9M,KAAKwL,IAAIiN,GAAUsD,IAC7BkhM,EAAUj9M,KAAKyL,IAAIgN,GAAUsD,IAC7BmhM,EAAUl9M,KAAKwL,IAAIiN,GAAUuD,IAC7BmhM,EAAUn9M,KAAKyL,IAAIgN,GAAUuD,IAC7BohM,EAAcp9M,KAAKwL,IAAIiN,GAAUusH,EAAOzoH,IACxC8gM,EAAcr9M,KAAKyL,IAAIgN,GAAUusH,EAAOzoH,IACxCvR,EAAIiyM,EAAUE,EAAUH,EAAUE,EAAUE,EAElD,OAAO/yF,IAKL,SAAUya,GACR,GAAI,GAAK95H,EACP,MAAO,CAACg6H,EAAMhpH,GAEhB,MAAMshM,EAAIx4E,EAAO9kI,KAAK+kH,KAAK/5G,GACrBuyM,EAAOv9M,KAAKwL,IAAI8xM,GAChBE,EAAOx9M,KAAKyL,IAAI6xM,GAChBjyM,EAAIgyM,EAAcH,EAClB9xM,EAAI4xM,EAAUG,EAAUF,EAAUC,EAAUE,EAC5Ch4K,EAAQplC,KAAKmc,MAAM9Q,EAAGD,GACtBqR,EAAMzc,KAAK0c,KAAKugM,EAAUM,EAAOP,EAAUQ,EAAOx9M,KAAKwL,IAAI45B,IAOjE,MAAO,CAAC7sB,GALNE,GAAU8D,GACVvc,KAAKmc,MACHnc,KAAKyL,IAAI25B,GAASo4K,EAAOR,EACzBO,EAAON,EAAUj9M,KAAKyL,IAAIgR,KAENlE,GAAUkE,GACnC,GACDkD,GAAao9L,EAAe7pM,GAC5B0O,EAEJ,EsE07BAipL,GAAG9hE,KAAKzf,KAAKuzF,SAASj4E,SAAW64E,GACjC5S,GAAG9hE,KAAKzf,KAAKuzF,SAAS93E,SAAW24E,GACjC7S,GAAG9hE,KAAKzf,KAAKq0F,QAAU,GACvB9S,GAAG9hE,KAAKzf,KAAKq0F,QAAQl3L,mBAAqBm3L,GAC1C/S,GAAG9hE,KAAKzf,KAAKq0F,QAAQj3L,wBAA0Bm3L,GAC/ChT,GAAG9hE,KAAKzf,KAAKq0F,QAAQh3L,6BAA+Bm3L,GACpDjT,GAAG9hE,KAAKzf,KAAKy0F,cAAgB,GAC7BlT,GAAG9hE,KAAKzf,KAAKy0F,cAAcl2L,wBAA0Bm2L,GACrDnT,GAAG9hE,KAAKzf,KAAKy0F,cAAcz1L,8BAAgC21L,GAC3DpT,GAAG9hE,KAAKzf,KAAK1oH,YAAc,GAC3BiqM,GAAG9hE,KAAKzf,KAAK1oH,YAAYwqF,iBAAmB8yH,GAC5CrT,GAAG9hE,KAAKzf,KAAK1oH,YAAY0qF,wBAA0B6yH,GACnDtT,GAAG9hE,KAAKzf,KAAK1oH,YAAY+qF,yBAA2ByyH,GACpDvT,GAAG9hE,KAAKzf,KAAK+0F,iBAAmB,GAChCxT,GAAG9hE,KAAKzf,KAAK+0F,iBAAiB51L,qBAAuB61L,GACrDzT,GAAG9hE,KAAKzf,KAAK+0F,iBAAiBv1L,0BAA4By1L,GAC1D1T,GAAG9hE,KAAKzf,KAAK+0F,iBAAiBt1L,qBAAuBy1L,GACrD3T,GAAG9hE,KAAKzf,KAAK+0F,iBAAiBr1L,0BAA4By1L,GAC1D5T,GAAG9hE,KAAKzf,KAAK+0F,iBAAiBp1L,+BAAiCy1L,GAC/D7T,GAAG9hE,KAAKzf,KAAKn0H,OAAS,GACtB01M,GAAG9hE,KAAKzf,KAAKn0H,OAAOy2F,iBAAmB+yH,GACvC9T,GAAG9hE,KAAKzf,KAAKn0H,OAAOypN,iBnJtjCb,SAA0B/vM,EAAiBC,EAAQ9Y,EAAK+Y,GAC7D,IAAI8vM,EAAYjzH,GAAiB/8E,EAAiBC,EAAQ9Y,EAAK+Y,GAC/D,MAAMlD,EAAKgD,EAAgB7Y,EAAM+Y,GAAUF,EAAgBC,GACrDhD,EAAK+C,EAAgB7Y,EAAM+Y,EAAS,GAAKF,EAAgBC,EAAS,GAExE,OADA+vM,GAAa7+M,KAAKka,KAAKrO,EAAKA,EAAKC,EAAKA,GAC/B+yM,CACT,EmJijCAhU,GAAG9hE,KAAKzf,KAAKw1F,OAAS,GACtBjU,GAAG9hE,KAAKzf,KAAKw1F,OAAOn1L,YAAco1L,GAClClU,GAAG9hE,KAAKzf,KAAKw1F,OAAO51L,sBAAwB81L,GAC5CnU,GAAG9hE,KAAKzf,KAAKw1F,OAAO11L,uBAAyB61L,GAC7CpU,GAAG9hE,KAAKzf,KAAKw1F,OAAOv1L,wBAA0B21L,GAC9CrU,GAAG9hE,KAAKzf,KAAKw1F,OAAOt1L,kBAAoB21L,GACxCtU,GAAG9hE,KAAKzf,KAAKw1F,OAAOp1L,uBAAyB01L,GAC7CvU,GAAG9hE,KAAKzf,KAAK7jB,QAAU,GACvBolG,GAAG9hE,KAAKzf,KAAK7jB,QAAQn4F,YAAc+xM,GACnCxU,GAAG9hE,KAAKzf,KAAK8tC,SAAW,GACxByzC,GAAG9hE,KAAKzf,KAAK8tC,SAASl4J,QAAUogN,GAChCzU,GAAG9hE,KAAKzf,KAAK/mG,SAAW,GACxBsoL,GAAG9hE,KAAKzf,KAAK/mG,SAASkD,eAAiB85L,GACvC1U,GAAG9hE,KAAKzf,KAAK/mG,SAAS0D,oBAAsBu5L,GAC5C3U,GAAG9hE,KAAKzf,KAAK/mG,SAASk9L,yBrQz5Bf,SACL5wM,EACAC,EACA8V,EACA7V,EACA6S,EACA8D,EACAC,EACAa,GAEA,IAAK,IAAI5wB,EAAI,EAAGuE,EAAKyqB,EAAMzvB,OAAQS,EAAIuE,IAAMvE,EAAG,CAC9C,MAAM8uB,EAAOE,EAAMhvB,GAEbswB,EAAiB,GACvBP,EAAmBM,GACjBpX,EACAC,EACA4V,EACA3V,EACA6S,EACA8D,EACAC,EACAO,GAEFM,EAAgB7sB,KAAKusB,GACrBpX,EAAS4V,EAAKA,EAAKvvB,OAAS,EAC7B,CACD,OAAOwwB,CACT,EqQ83BAklL,GAAG9hE,KAAKzf,KAAK/mG,SAAS8D,SAAWq5L,GACjC7U,GAAG9hE,KAAKzf,KAAK/mG,SAAS+D,cAAgBq5L,GACtC9U,GAAG9hE,KAAKzf,KAAK/mG,SAASgE,mBAAqBq5L,GAC3C/U,GAAG9hE,KAAKzf,KAAK/mG,SAAS4D,eAAiB05L,GACvChV,GAAG9hE,KAAKzf,KAAK/mG,SAASu9L,mBrQhkCf,SACLjxM,EACAC,EACA9Y,EACA+Y,EACA6S,EACAm+L,EACAr6L,GA2BA,OAzBAA,OACgClrB,IAA9BkrB,EAA0CA,EAA4B,GACnEq6L,IACH/pN,EAAMmwB,GACJtX,EACAC,EACA9Y,EACA+Y,EACA6S,EACA8D,EACA,GAEF7W,EAAkB6W,EAClB5W,EAAS,EACTC,EAAS,GAEX2W,EAA0BvwB,OAASswB,GACjC5W,EACAC,EACA9Y,EACA+Y,EACA6S,EACA8D,EACA,GAEKA,CACT,EqQ8hCAmlL,GAAG9hE,KAAKzf,KAAK/mG,SAAS6D,KAAO45L,GAC7BnV,GAAG9hE,KAAKzf,KAAK22F,cAAgB,GAC7BpV,GAAG9hE,KAAKzf,KAAK22F,cAAcn7F,cAAgBo7F,GAC3CrV,GAAG9hE,KAAKzf,KAAK62F,SAAW,GACxBtV,GAAG9hE,KAAKzf,KAAK62F,SAASt3F,eAAiBu3F,GACvCvV,GAAG9hE,KAAKzf,KAAK+2F,SAAW,GACxBxV,GAAG9hE,KAAKzf,KAAK+2F,SAASC,mBCpmCf,SAA4BzxM,EAAiBC,EAAQ9Y,EAAK+Y,GAC/D,MAAMwxM,EAAYvqN,EAAM+Y,EACxB,OACEF,EAAgBC,KAAYD,EAAgB0xM,IAC5C1xM,EAAgBC,EAAS,KAAOD,EAAgB0xM,EAAY,KAC3DvqN,EAAM8Y,GAAUC,EAAS,KAEjBqY,GAAevY,EAAiBC,EAAQ9Y,EAAK+Y,EAG1D,ED2lCA87L,GAAG9hE,KAAKzf,KAAKv/G,UAAY,GACzB8gM,GAAG9hE,KAAKzf,KAAKv/G,UAAUuB,OAASk1M,GAChC3V,GAAG9hE,KAAKzf,KAAKv/G,UAAU2B,MAAQ+0M,GAC/B5V,GAAG9hE,KAAKzf,KAAKv/G,UAAUkX,YAAcy/L,GACrC7V,GAAG9hE,KAAKzf,KAAKv/G,UAAU6B,UAAY+0M,GACnC9V,GAAG+V,IAAM,CAAA,EACT/V,GAAG+V,IAAI59M,oBAAsB69M,GAC7BhW,GAAG+V,IAAIr+M,mBAAqBu+M,GAC5BjW,GAAG+V,IAAI3+M,QAAU8+M,GACjBlW,GAAG+V,IAAI/9M,aAAem+M,GACtBnW,GAAG+V,IAAIt+M,IAAM2+M,GACbpW,GAAG+V,IAAI19M,wBAA0Bg+M,GACjCrW,GAAG+V,IAAI1+M,OAASi/M,GAChBtW,GAAG+V,IAAIz+M,kBAAoBi/M,GAC3BvW,GAAG+V,IAAIv+M,OAASg/M,GAChBxW,GAAG+V,IAAIn+M,wBAA0B6+M,GACjCzW,GAAGz0I,YAAc,CAAA,EACjBy0I,GAAGz0I,YAAYmrJ,iBAAmB51D,GAClCk/C,GAAGz0I,YAAYvE,gBAAkBhJ,GACjCgiJ,GAAGz0I,YAAYorJ,YAAcj1D,GAC7Bs+C,GAAGz0I,YAAYorJ,YAAYn1D,iBAAmBo1D,GAC9C5W,GAAGz0I,YAAY7H,QAAUX,GACzBi9I,GAAGz0I,YAAY7H,QAAQZ,aAAe+zJ,GACtC7W,GAAGz0I,YAAYnE,QAAUrG,GACzBi/I,GAAGz0I,YAAYzE,WAAa/E,GAC5Bi+I,GAAGz0I,YAAYurJ,kBAAoB9zD,GACnCg9C,GAAGz0I,YAAYxD,SAAWtE,GAC1Bu8I,GAAGz0I,YAAYwrJ,KAAOvyD,GACtBw7C,GAAGz0I,YAAYwrJ,KAAK1zD,UAAY2zD,GAChChX,GAAGz0I,YAAYwrJ,KAAKE,U7C0uBb,WACL,OAAO,SAAUx0M,EAAa3E,EAAUuK,GACtC,MAAM3F,EAASF,GACgB,CAC3BC,EAAY,GACZA,EAAYA,EAAYnY,OAAS,IAChCypC,KAAI,SAAUzzB,GACf,OAAO8U,GAAmB9U,EAAY+H,EAC9C,KAEU6uM,EAAiB,CACrB,CACElyM,GAActC,GACduC,GAAevC,GACfwC,GAAYxC,GACZyC,GAAWzC,GACXsC,GAActC,KAGd5E,EACFA,EAASqb,eAAe+9L,GAExBp5M,EAAW,IAAIohB,GAAQg4L,GAEzB,MAAMliM,EAAiBE,KAIvB,OAHIF,GACFlX,EAASoB,UAAUmJ,EAAY2M,GAE1BlX,CACX,CACA,E6CvwBAkiM,GAAGz0I,YAAYwrJ,KAAKI,qB7CgsBb,SAA8B12L,EAAO/f,GAC1C,OAAO,SAAU+B,EAAa3E,EAAUuK,GACtC,MAAMzC,EAASwP,GACgB,EAAc,GAC3C/M,GAEIld,EAAMiqB,GACmB,EAAc3S,EAAYnY,OAAS,GAChE+d,GAEI4I,EAAS9b,KAAKka,KAAK02I,GAA0BngJ,EAAQza,IAC3D2S,EAAWA,GAAY0iB,GAAW,IAAImjD,GAAO/9D,GAAS6a,GAEtD,IAAI22L,EAAgB12M,EACpB,IAAKA,GAAmB,IAAVA,EAAa,CACzB,MAAMH,EAAIpV,EAAI,GAAKya,EAAO,GACpBpF,EAAIrV,EAAI,GAAKya,EAAO,GAC1BwxM,EAAgBjiN,KAAKmc,MAAM9Q,EAAGD,EAC/B,CACDogB,GACJ,EACM/a,EACAqL,EACAmmM,GAGF,MAAMpiM,EAAiBE,KAIvB,OAHIF,GACFlX,EAASoB,UAAUmJ,EAAY2M,GAE1BlX,CACX,CACA,E6C/tBAkiM,GAAGz0I,YAAY8rJ,OAAS7rD,GACxBw0C,GAAGz0I,YAAY8rJ,OAAOrsD,YAAcssD,GACpCtX,GAAGz0I,YAAYtN,YAAcN,GAC7BqiJ,GAAGz0I,YAAYtN,YAAYR,IAAM85J,GACjCvX,GAAGz0I,YAAYtN,YAAYP,YAAc85J,GACzCxX,GAAGz0I,YAAY7D,YAAc5D,GAC7Bk8I,GAAGz0I,YAAY5D,aAAevD,GAC9B47I,GAAGz0I,YAAYm7G,KAAO7Y,GACtBmyC,GAAGz0I,YAAYksJ,OAAS1nD,GACxBiwC,GAAGz0I,YAAYksJ,OAAOloD,YAAcmoD,GACpC1X,GAAGz0I,YAAY1D,eAAiBxD,GAChC27I,GAAGz0I,YAAYjE,YAAczB,GAC7Bm6I,GAAGz0I,YAAY/D,UAAYjB,GAC3By5I,GAAGz0I,YAAYosJ,QAAUp5J,GACzByhJ,GAAGz0I,YAAYosJ,QAAQr5J,SAAWs5J,GAClC5X,GAAGz0I,YAAYopG,OAASqB,GACxBgqC,GAAGz0I,YAAYopG,OAAOJ,YAAcsjD,GACpC7X,GAAGz0I,YAAYusJ,KAAO1hD,GACtB4pC,GAAGz0I,YAAYwsJ,UAAYv/C,GAC3BwnC,GAAGz0I,YAAYwsJ,UAAUz/C,eAAiB0/C,GAC1ChY,GAAGz0I,YAAYxO,SAAW,GAC1BijJ,GAAGz0I,YAAYxO,SAASA,SAAWk7J,GACnCjY,GAAGnpK,MAAQ,CAAA,EACXmpK,GAAGnpK,MAAMqhL,KAAOtiL,GAChBoqK,GAAGnpK,MAAMshL,UAAY/iH,GACrB4qG,GAAGnpK,MAAMuhL,SAAWv/G,GACpBmnG,GAAGnpK,MAAMmgH,WAAate,GACtBsnE,GAAGnpK,MAAMwhL,UAAY/9E,GACrB0lE,GAAGnpK,MAAMyhL,MAAQhnK,GACjB0uJ,GAAGnpK,MAAMyhL,MAAMpoK,WAAaqoK,GAC5BvY,GAAGnpK,MAAM2hL,QAAUj5D,GACnBygD,GAAGnpK,MAAM5+B,MAAQwgG,GACjBunG,GAAGnpK,MAAMsxB,MAAQ5iB,GACjBy6J,GAAGnpK,MAAMsxB,MAAM9iB,OAASozK,GACxBzY,GAAGnpK,MAAMv6B,KAAO4/F,GAChB8jG,GAAGnpK,MAAM6hL,OAASv/E,GAClB6mE,GAAGnpK,MAAM8hL,YAAcj4D,GACvBs/C,GAAG4Y,gBAAkB,CAAA,EACrB5Y,GAAG4Y,gBAAgBz5J,IAAM05J,GACzB7Y,GAAG4Y,gBAAgB1+H,K9K/pCZ,SAAcx3E,EAAQmD,GAC3B,MAAO,CAACnD,EACV,E8K8pCAs9L,GAAG4Y,gBAAgBxiN,K9KtpCZ,SAAc0U,GACnB,OAAA,SAOYpI,EAAQmD,EAAYwC,GAC5B,MAAMmgB,EAAI1d,EAASkhE,kBACjBr2D,GAAmB9P,EAAYwC,IAE3ByrD,EAAYhpD,EAASohE,0BACzB32D,GAAe7S,EAAQ2F,GACvBmgB,GAGIq2D,EAAU,GAEVppF,EAAY,CAAC+yB,EAAG,EAAG,GACzB,IACE/yB,EAAU,GAAKq+D,EAAUxwD,KACzB7N,EAAU,IAAMq+D,EAAUtwD,OACxB/N,EAAU,GAEZ,IACEA,EAAU,GAAKq+D,EAAUvwD,KACzB9N,EAAU,IAAMq+D,EAAUrwD,OACxBhO,EAAU,GAEZopF,EAAQ/vF,KACNwmB,GAAaxK,EAAS2gE,mBAAmBh2E,GAAY4S,IAI3D,OAAOw2E,CAET,CACJ,E8KinCAmhH,GAAG8Y,KAAO,CAAA,EACV9Y,GAAG8Y,KAAK1qM,KAAO2qM,GACf/Y,GAAG8Y,KAAK/rM,MAAQisM,GAChBhZ,GAAG8Y,KAAKpwM,MAAQuwM,GAChBjZ,GAAG8Y,KAAK/qM,KAAOmrM,GACflZ,GAAG8Y,KAAKhrM,OAASqrM,GACjBnZ,GAAG8Y,KAAK3qM,MAAQirM,GAChBpZ,GAAG8Y,KAAK5rM,kBAAoBmsM,GAC5BrZ,GAAG8Y,KAAK7rM,gBAAkBqsM,GAC1BtZ,GAAG8Y,KAAK9rM,uBAAyBusM,GACjCvZ,GAAG8Y,KAAKprM,UAAY8rM,GACpBxZ,GAAG8Y,KAAK9qM,QAAUyrM,GAClBzZ,GAAG8Y,KAAKlrM,UAAY8rM,GACpB1Z,GAAG2Z,IAAM,CAAA,EACT3Z,GAAG2Z,IAAI5hJ,YAAc6hJ,GACrB5Z,GAAG2Z,IAAI9hJ,cAAgBgiJ,GACvB7Z,GAAG2Z,IAAI1hJ,QAAU6hJ,GACjB9Z,GAAG2Z,IAAItiJ,MAAQ0iJ,GACf/Z,GAAG2Z,IAAIK,Y/KhkCA,SAAqB7jJ,GACI,oBAAnBC,iBACTP,GAAcO,gBAEhBtsD,OAAOssD,eAAiBD,CAC1B,E+K4jCA6pI,GAAG2Z,IAAIxhJ,WAAa8hJ,GACpBja,GAAG2Z,IAAIO,W/K3jCA,WACLpwM,OAAOssD,eAAiBP,EAC1B,E+K0jCAmqI,GAAGnuM,IAAM,CAAA,EACTmuM,GAAGnuM,IAAI/D,MAAQqsN,EACfna,GAAGnuM,IAAI5D,QAAUmsN,EACjBpa,GAAGzoH,KAAO,CAAA,EACVyoH,GAAGzoH,KAAK5rE,WAAavC,GACrB42L,GAAGzoH,KAAK8iI,MAAQ,GAChBra,GAAGzoH,KAAK8iI,MAAMvxM,gBAAkBwxM,GAChCta,GAAGzoH,KAAK8iI,MAAME,StR7rCP,SAAkBjxM,GACvB,OAAOT,GAAWS,EACpB,EsR4rCA02L,GAAGzoH,KAAKthE,UAAYukM,GACpBxa,GAAGzoH,KAAKpjE,wBAA0BsmM,GAClCza,GAAGzoH,KAAKlkE,yBAA2BqnM,GACnC1a,GAAGzoH,KAAKjkE,wBAA0BqnM,GAClC3a,GAAGzoH,KAAK7kE,cAAgBkoM,GACxB5a,GAAGzoH,KAAK1kE,eAAiBgoM,GACzB7a,GAAGzoH,KAAKujI,oB3Qj7BD,WACLC,KACAC,IACF,E2Q+6BAhb,GAAGzoH,KAAK0jI,oB3Q1qBD,WACLjmM,GAAiB,IACnB,E2QyqBAgrL,GAAGzoH,KAAK/kE,eAAiB0oM,GACzBlb,GAAGzoH,KAAK1jE,iBAAmBsnM,GAC3Bnb,GAAGzoH,KAAK1hE,8BAAgCulM,GACxCpb,GAAGzoH,KAAKxjE,uCAAyCsnM,GACjDrb,GAAGzoH,KAAKjlE,yBAA2BgpM,GACnCtb,GAAGzoH,KAAKgkI,SAAW,GACnBvb,GAAGzoH,KAAKgkI,SAASlwM,OAASmwM,GAC1Bxb,GAAGzoH,KAAKgkI,SAASnwM,UAAYqwM,GAC7Bzb,GAAGzoH,KAAKgkI,SAAShwM,WAAamwM,GAC9B1b,GAAGzoH,KAAKgkI,SAASxvM,YAAc4vM,GAC/B3b,GAAGzoH,KAAKgkI,SAASpwM,OAASywM,GAC1B5b,GAAGzoH,KAAKgkI,SAASjwM,aAAeuwM,GAChC7b,GAAGzoH,KAAKgkI,SAASvvM,aAAe8vM,GAChC9b,GAAGzoH,KAAKgkI,SAASnvM,WAAa2vM,GAC9B/b,GAAGzoH,KAAKykI,SAAW,GACnBhc,GAAGzoH,KAAKykI,SAAS3wM,OAAS4wM,GAC1Bjc,GAAGzoH,KAAKykI,SAASlzM,gBAAkBozM,GACnClc,GAAGzoH,KAAKykI,SAASjwM,YAAcowM,GAC/Bnc,GAAGzoH,KAAKykI,SAAS7wM,OAASixM,GAC1Bpc,GAAGzoH,KAAK/iE,WAAa6nM,GACrBrc,GAAGzoH,KAAK+kI,W3Qt2BD,SAAoBh8M,EAAY+H,GAErC,OADAiK,KACOpT,GACLoB,EACA,iBACe3Q,IAAf0Y,EAA2BA,EAAa,YAE5C,E2Qg2BA23L,GAAGzoH,KAAKniE,mBAAqBmnM,GAC7Bvc,GAAGzoH,KAAKhiE,eAAiBinM,GACzBxc,GAAGzoH,KAAK5hE,mBAAqB8mM,GAC7Bzc,GAAGzoH,KAAKjlF,IAAMoqN,GACd1c,GAAGzoH,KAAKttE,mBAAqB0yM,GAC7B3c,GAAGzoH,KAAKziE,aAAe8nM,GACvB5c,GAAGzoH,KAAKpkE,4BAA8B0pM,GACtC7c,GAAGzoH,KAAKriE,kBAAoB4nM,GAC5B9c,GAAGzoH,KAAK9kE,kBAAoBsqM,GAC5B/c,GAAGzoH,KAAKsgD,MAAQ,GAChBmoE,GAAGzoH,KAAKsgD,MAAMmlF,mBzErlCP,SAA4BtsN,GACjC,OAAOgnE,eAAgBpuD,GACrB,MAAMwuD,QAAiBygB,MACrB,oDAAoDjvE,gDAAmD5Y,KAEzG,IAAKonE,EAAS2gE,GACZ,MAAM,IAAI/mI,MACR,0CAA0ComE,EAAStB,UAGvD,OAAOsB,EAAS0gB,OAAOv7E,MAAMu7E,IAC3B,MAAMykI,EAAUzkI,EAAc,QAC9B,GAAIykI,GAAS3yN,OAAS,EAAG,CACvB,MAAMqvC,EAASsjL,EAAQt8K,QACpBtzB,GAAiC,SAA3BA,EAAM,IAAe,WAAgBA,EAAM,IAAU,OAAM/D,IAClE,GACF,GAAIqwB,EAAQ,CACV,MAAMhtB,EAAagtB,EAAwB,gBAC3C,GAAIhtB,GAAYriB,OAAS,EAAG,CAE1B,MAAM4yN,EAAmBvjL,EAA+B,uBACxD,GACEhtB,EAAWg0B,QACRzrC,GACCA,EAAM,IAAe,YAAMgoN,GAA8B,WACzDhoN,EAAM,IAAU,OAAMgoN,GAAyB,MACxB,IAAvBhoN,EAAS,OAAG5K,SACdA,OAAS,EAEX,OAAOqvC,EAAgB,SAAW,MAGpC,MAAMz6B,EAAYyN,EACfg0B,QACEzrC,GACwB,IAAvBA,EAAS,OAAG5K,QACuB,SAAnC4K,EAAc,YAAe,WACC,OAA9BA,EAAc,YAAU,OACJ,IAApBA,EAAc,aACE,IAAhBA,EAAU,SAEbqoB,MAAK,CAACsV,EAAIC,IAAOD,EAAa,SAAIC,EAAa,WAAG,IAEpD,SAAU,MACX,GAAI5zB,EACF,OAAOA,CAEV,CAED,OAAOy6B,EAAgB,SAAW,KACnC,CACF,IAEP,CACA,EyEgiCAqmK,GAAGzoH,KAAKsgD,MAAMslF,azErnCPzlJ,eAA4BpuD,GACb,iBAATA,IACTA,EAAO3P,SAAS2P,EAAKwF,MAAM,KAAK1a,MAAO,KAGzC,MAAMyjI,EAAQF,GACd,IAAKE,EACH,MAAM,IAAInmI,MAAM,uDAGlB,MAAM0rN,EAAW,QAAU9zM,EAC3B,OAAIuuH,EAAME,KAAKqlF,KAIfvlF,EAAME,KAAKqlF,QAAgB5kF,GAAWlvH,IACtCsuH,GAASC,IAJAvlI,GAAI8qN,EAOf,EyEmmCApd,GAAGzoH,KAAKsgD,MAAMwlF,czExoCP,WACL,OAAO7kF,EACT,EyEuoCAwnE,GAAGzoH,KAAKsgD,MAAMylF,azE5uCP,WACL,QAAS3lF,EACX,EyE2uCAqoE,GAAGzoH,KAAKsgD,MAAMD,SAAW2lF,GACzBvd,GAAGzoH,KAAKsgD,MAAM2lF,czEppCP,SAAuBzxN,GAC5BysI,GAAazsI,CACf,EyEmpCAi0M,GAAGzoH,KAAKsgD,MAAM8/B,WzExuCP,WACLhgC,GAAa,IACf,EyEuuCAqoE,GAAGzoH,KAAKzkE,YAAc,GACtBktL,GAAGzoH,KAAKzkE,YAAYpG,IAAM+wM,GAC1Bzd,GAAGzoH,KAAKzkE,YAAYhlB,MAAQ4vN,GAC5B1d,GAAGzoH,KAAKzkE,YAAYxgB,IAAMqrN,GAC1B3d,GAAGzoH,KAAKtiE,kBAAoB2oM,GAC5B5d,GAAGzoH,KAAKsmI,S3Q32BD,SAAkBv9M,EAAY+H,GACnC,MAAMy1M,EAAS5+M,GACboB,OACe3Q,IAAf0Y,EAA2BA,EAAa,YACxC,aAEI2xH,EAAM8jF,EAAO,GAInB,OAHI9jF,GAAO,KAAOA,EAAM,OACtB8jF,EAAO,GAAKhwM,GAAOksH,EAAM,IAAK,KAAO,KAEhC8jF,CACT,E2Qi2BA9d,GAAGzoH,KAAKpiE,iBAAmB4oM,GAC3B/d,GAAGzoH,KAAKjiE,aAAe0oM,GACvBhe,GAAGzoH,KAAK/hE,iBAAmByoM,GAC3Bje,GAAGzoH,KAAKr4E,UAAYg/M,GACpBle,GAAGzoH,KAAKxiE,gBAAkBopM,GAC1Bne,GAAGzoH,KAAK6mI,yB3Q5vBD,SACLvyM,EACA6I,EACAC,GAMA,OAJsBxB,GACpBuB,EACAC,EAEKC,CAAc/I,EACvB,E2QmvBAm0L,GAAGzoH,KAAK5qE,WAAa,GACrBqzL,GAAGzoH,KAAK5qE,WAAWD,IAAM2xM,GACzBre,GAAGzoH,KAAK5qE,WAAW7e,MAAQwwN,GAC3Bte,GAAGzoH,KAAK5qE,WAAWra,IAAMisN,GACzBve,GAAGzoH,KAAK5qE,WAAW/X,OjRzuCZ,SAAgBxB,EAAQwZ,GAC7B,MAAMC,EAAazZ,EAAOiX,UACpByC,EAAkBF,EAAYvC,UAC9BnL,EAAYyN,GAAWE,GAAYC,GAKzC,cAJOH,GAAWE,GAAYC,GAC1B7e,EAAQ0e,GAAWE,YACdF,GAAWE,GAEb3N,CACT,EiRiuCA8gM,GAAGzoH,KAAKinI,c3Q/sBD,WACLvpM,GAAkB,YACpB,E2Q8sBA+qL,GAAGh6J,OAAS,CAAA,EACZg6J,GAAGh6J,OAAOihJ,IAAMhlI,GAChB+9I,GAAGh6J,OAAO92C,MAAQy6C,GAClBq2J,GAAGh6J,OAAO1oC,QAAU0mF,GACpBg8G,GAAGh6J,OAAO1oC,QAAQmhN,U7I5xBX,SAAmBv6I,EAAeyiF,GACvC,MAAMjwJ,EAAKwtE,EAAc3lE,QACnBT,EAAWgmF,GAAW5f,GACtBlmE,EAAakmE,EAAczxE,gBAC3Bm2C,EAAU,IAAItrC,GASpB,YARqB3N,IAAjBg3J,GACF/9G,EAAQ1qC,gBAAgByoJ,GAE1B/9G,EAAQ7qC,YAAYD,QACTnO,IAAP+G,GACFkyC,EAAQjqC,MAAMjI,GAEhBkyC,EAAQv2C,cAAc2L,GAAY,GAC3B4qC,CACT,E6I+wBAo3J,GAAGh6J,OAAO1oC,QAAQwmF,WAAa46H,GAC/B1e,GAAGh6J,OAAOo0B,cAAgB9B,GAC1B0nI,GAAGh6J,OAAOjtC,OAAS,GACnBinM,GAAGh6J,OAAOjtC,OAAO8jH,QAAUvH,GAC3B0qF,GAAGh6J,OAAOjtC,OAAO4lN,aAAe1hG,GAChC+iF,GAAGh6J,OAAOjtC,OAAO8rH,SAAWpF,GAC5BugF,GAAGh6J,OAAOjtC,OAAOywH,cAAgBvF,GACjC+7E,GAAGh6J,OAAOjtC,OAAOywH,cAAc3F,mBAAqB+6F,GACpD5e,GAAGh6J,OAAOjtC,OAAO+jH,aAAevE,GAChCynF,GAAGh6J,OAAOjtC,OAAO8lN,UAAY1kJ,GAC7B6lI,GAAGh6J,OAAOjtC,OAAOk8G,YAAc,GAC/B+qF,GAAGh6J,OAAOjtC,OAAOk8G,YAAYG,qBAAuB0pG,GACpD9e,GAAGh6J,OAAOjtC,OAAOk8G,YAAYI,qBAAuB0pG,GACpD/e,GAAGh6J,OAAOjtC,OAAOk8G,YAAYC,gBAAkB8pG,GAC/Chf,GAAGh6J,OAAOjtC,OAAOk8G,YAAYE,kBAAoB8pG,GACjDjf,GAAGh6J,OAAOjtC,OAAOgkH,kBAAoB7D,GACrC8mF,GAAGh6J,OAAOjtC,OAAO4jH,eAAiBrD,GAClC0mF,GAAGh6J,OAAOjtC,OAAOikH,YAAc/B,GAC/B+kF,GAAGh6J,OAAOjtC,OAAOikH,YAAYrC,WAAaukG,GAC1Clf,GAAGh6J,OAAOjtC,OAAOwyC,aAAe4zK,GAChCnf,GAAGh6J,OAAOjtC,OAAO+xC,iBAAmBs0K,GACpCpf,GAAGh6J,OAAOjtC,OAAO8xC,YAAcw0K,GAC/Brf,GAAGh6J,OAAOjtC,OAAOgyC,eAAiBu0K,GAClCtf,GAAGh6J,OAAOjtC,OAAOiyC,gBAAkBu0K,GACnCvf,GAAGh6J,OAAOjtC,OAAOymN,sB3NjsCoB,E2NksCrCxf,GAAGh6J,OAAOjtC,OAAOkyC,gBAAkBw0K,GACnCzf,GAAGh6J,OAAOjtC,OAAO2mN,iB3NzpCe,E2N0pChC1f,GAAGh6J,OAAOjtC,OAAOmyC,kBAAoBy0K,GACrC3f,GAAGh6J,OAAOjtC,OAAOuyC,eAAiBs0K,GAClC5f,GAAGh6J,OAAOjtC,OAAOoyC,mBAAqB00K,GACtC7f,GAAGh6J,OAAOjtC,OAAOqyC,iBAAmB00K,GACpC9f,GAAGh6J,OAAOjtC,OAAOsyC,oBAAsB00K,GACvC/f,GAAGh6J,OAAOjtC,OAAOu1C,iBAAmB0xK,GACpChgB,GAAGh6J,OAAOjtC,OAAO80C,kBAAoBoyK,GACrCjgB,GAAGh6J,OAAOjtC,OAAOmnN,UAAY,GAC7BlgB,GAAGh6J,OAAOjtC,OAAOmnN,UAAU56F,sBAAwB66F,GACnDngB,GAAGh6J,OAAOjtC,OAAOmnN,UAAU36F,4BAA8B66F,GACzDpgB,GAAGh6J,OAAOjtC,OAAOmnN,UAAU95F,UAAYi6F,GACvCrgB,GAAGh6J,OAAOjtC,OAAO20C,yBAA2B4yK,GAC5CtgB,GAAGh6J,OAAOjtC,OAAO8zC,kBAAoB0zK,GACrCvgB,GAAGh6J,OAAOjtC,OAAOuzC,iBAAmBk0K,GACpCxgB,GAAGh6J,OAAOjtC,OAAO4yC,aAAe80K,GAChCzgB,GAAGh6J,OAAOjtC,OAAO2nN,e3Nr7BV,SAAwBrnN,EAASyM,EAAU64B,EAASC,GACxC,IAAb94B,IACFzM,EAAQ0H,UAAU49B,EAASC,GAC3BvlC,EAAQoH,OAAOqF,GACfzM,EAAQ0H,WAAW49B,GAAUC,GAEjC,E2Ng7BAohK,GAAGh6J,OAAOjtC,OAAOU,MAAQ,GACzBumM,GAAGh6J,OAAOjtC,OAAOU,MAAMi5H,aAAeiuF,GACtC3gB,GAAGh6J,OAAOjtC,OAAOU,MAAMs5H,WAAa6tF,GACpC5gB,GAAGh6J,OAAOjtC,OAAOU,MAAMm5H,0BAA4BiuF,GACnD7gB,GAAGh6J,OAAOjtC,OAAOU,MAAM64H,qBAAuBwuF,GAC9C9gB,GAAGh6J,OAAOjtC,OAAO2yC,YAAcq1K,GAC/B/gB,GAAGh6J,OAAOg7K,e1KnsCH,SAAwBhyN,EAAOw3C,GACpC,OAAO3+B,GAAe7Y,EAAM46C,sBAAuBpD,EAAMv5C,MAAM,GACjE,E0KksCA+yM,GAAGh6J,OAAO0+B,iBAAmBu8I,GAC7BjhB,GAAGh6J,OAAOk7K,U1KzwCH,SAAmB7nN,EAASxF,GACjC,MAAMkF,EAASM,EAAQN,OAEjBsrB,GADNxwB,EAAUA,GAAoB,IACHwwB,YAAc3sB,GACnCkF,EAAO/I,EAAQ+I,KACjBA,IACF7D,EAAOJ,MAAQiE,EAAK,GAAKynB,EACzBtrB,EAAOH,OAASgE,EAAK,GAAKynB,EAC1BtrB,EAAOU,MAAMd,MAAQiE,EAAK,GAAK,KAC/B7D,EAAOU,MAAMb,OAASgE,EAAK,GAAK,MAElC,MAAM8F,EAAS,CAAC,EAAG,EAAG3J,EAAOJ,MAAOI,EAAOH,QACrCsG,EAAYiiN,G/G9CX,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,G+G8C6B98L,EAAYA,GAChE,OAAO,IAAIygD,GAAwBzrE,EAASgrB,EAAY3hB,EAAQxD,EAAW,EAC7E,E0K4vCA8gM,GAAG7yI,SAAW,CAAA,EACd6yI,GAAG7yI,SAASi0J,UAAYpyK,GACxBgxJ,GAAG7yI,SAAShF,MAAQktC,GACpB2qG,GAAG7yI,SAASssI,IAAMxxJ,GAClB+3J,GAAG7yI,SAASp0D,OAAS,GACrBinM,GAAG7yI,SAASp0D,OAAOgoG,WAAavJ,GAChCwoG,GAAG7yI,SAASp0D,OAAOovD,MAAQ8tC,GAC3B+pG,GAAG7yI,SAASp0D,OAAOovD,MAAMtvD,WAAawoN,GACtCrhB,GAAG7yI,SAASp0D,OAAO+nG,UAAY1H,GAC/B4mG,GAAG7yI,SAASp0D,OAAOuoN,iBAAmB73F,GACtCu2E,GAAG7yI,SAASp0D,OAAOwhI,YAAcjU,GACjC05E,GAAG7yI,SAASo0J,OAAS,GACrBvhB,GAAG7yI,SAASo0J,OAAO19I,aAAe29I,GAClCxhB,GAAG7yI,SAASo0J,OAAOv9I,oBAAsBy9I,GACzCzhB,GAAG7yI,SAASo0J,OAAOt9I,aAAey9I,GAClC1hB,GAAG7yI,SAASo0J,OAAOr9I,cAAgBy9I,GACnC3hB,GAAG50G,OAAS,CAAA,EACZ40G,GAAG50G,OAAO9B,SAAWD,GACrB22G,GAAG50G,OAAOnzF,MAAQg0F,GAClB+zG,GAAG50G,OAAO9uF,KAAOuuE,GACjBm1H,GAAG50G,OAAOrf,cAAgBpE,GAC1Bq4H,GAAG50G,OAAO3lB,gCAAkCm8I,GAC5C5hB,GAAG50G,OAAO/lB,0BAA4Bw8I,GACtC7hB,GAAG50G,OAAOvyF,WAAaipN,GACvB9hB,GAAG50G,OAAO22H,OAAS,GACnB/hB,GAAG50G,OAAO22H,OAAOr6I,gBAAkBs6I,GACnChiB,GAAG50G,OAAOplD,OAASi8K,GACnBjiB,GAAGn6L,WAAa,CAAA,EAChBm6L,GAAGn6L,WAAW4hE,mBAAqBy6I,GACnCliB,GAAGmiB,qBAAuB,CAAA,EAC1BniB,GAAGmiB,qBAAqB9nL,uBAAyB+nL,GACjDpiB,GAAGmiB,qBAAqBnoL,kBAAoBqoL,GAC5CriB,GAAGmiB,qBAAqBvoL,wBAA0B0oL,GAClDtiB,GAAGuiB,mBAAqB,CAAA,EACxBviB,GAAGuiB,mBAAmBjoL,cAAgBkoL,GACtCxiB,GAAGuiB,mBAAmB/nL,iBAAmBioL,GACzCziB,GAAGuiB,mBAAmBhwM,QAAUmwM,GAChC1iB,GAAGuiB,mBAAmBtwM,KAAO0wM,GAC7B3iB,GAAGpjM,KAAO,CAAA,EACVojM,GAAGpjM,KAAKiG,OzLt2CD,SAAgBjG,EAAM82I,EAAK5wI,GAMhC,YALanT,IAATmT,IACFA,EAAO,CAAC,EAAG,IAEbA,EAAK,GAAKlG,EAAK,GAAK,EAAI82I,EACxB5wI,EAAK,GAAKlG,EAAK,GAAK,EAAI82I,EACjB5wI,CACT,EyLg2CAk9L,GAAGpjM,KAAKorD,QAAU46J,GAClB5iB,GAAGpjM,KAAKiE,MAAQgiN,GAChB7iB,GAAGpjM,KAAKqrD,OAAS66J,GACjB9iB,GAAG5sM,OAAS,CAAA,EACZ4sM,GAAG5sM,OAAO2vN,SAAWprI,GACrBqoH,GAAG5sM,OAAO2vN,SAASvrI,QAAUwrI,GAC7BhjB,GAAG5sM,OAAO6vN,QAAU76H,GACpB43G,GAAG5sM,OAAOk2F,SAAWkC,GACrBw0G,GAAG5sM,OAAO6E,MAAQ+0F,GAClBgzG,GAAG5sM,OAAO6E,MAAM20F,iBAAmBs2H,GACnCljB,GAAG5sM,OAAO6E,MAAM40F,yBAA2Bs2H,GAC3CnjB,GAAG5sM,OAAO6E,MAAM60F,iBAAmBs2H,GACnCpjB,GAAG5sM,OAAOiwN,gBAAkB30H,GAC5BsxG,GAAG5sM,OAAOu8F,YAAcJ,GACxBywG,GAAG5sM,OAAOkwN,YAAcvzH,GACxBiwG,GAAG5sM,OAAOmwN,SAAWjyH,GACrB0uG,GAAG5sM,OAAOowN,WAAa5uH,GACvBorG,GAAG5sM,OAAOqwN,IAAMvuH,GAChB8qG,GAAG5sM,OAAOqwN,IAAIxuH,YAAcyuH,GAC5B1jB,GAAG5sM,OAAOuwN,OAAS3iH,GACnBg/F,GAAG5sM,OAAOuwN,OAAO7lH,UAAY8lH,GAC7B5jB,GAAG5sM,OAAOuwN,OAAOpkH,kBAAoBskH,GACrC7jB,GAAG5sM,OAAOuwN,OAAOpnH,aAAeunH,GAChC9jB,GAAG5sM,OAAO8+E,OAASpF,GACnBkzH,GAAG5sM,OAAO2wN,WAAa7hH,GACvB89F,GAAG5sM,OAAOkJ,KAAO21E,GACjB+tH,GAAG5sM,OAAOkJ,KAAK01E,gBAAkBgyI,GACjChkB,GAAG5sM,OAAO6wN,eAAiBxhH,GAC3Bu9F,GAAG5sM,OAAO8wN,UAAYrhH,GACtBm9F,GAAG5sM,OAAOwkF,UAAYzB,GACtB6pH,GAAG5sM,OAAO+wN,SAAWphH,GACrBi9F,GAAG5sM,OAAOgxN,QAAUzgH,GACpBq8F,GAAG5sM,OAAOixN,QAAU1/G,GACpBq7F,GAAG5sM,OAAOixN,QAAQpgH,WAAaqgH,GAC/BtkB,GAAG5sM,OAAO6hF,QAAUe,GACpBgqH,GAAG5sM,OAAOslN,OAASv0H,GACnB67G,GAAG5sM,OAAOslN,OAAOx0H,kBAAoBqgI,GACrCvkB,GAAG5sM,OAAOoxN,KAAOv/G,GACjB+6F,GAAG5sM,OAAOoxN,KAAKC,wBzGrjCR,SAAiCC,EAASrnH,GAC/C,MACMn1F,EADSw8M,EAAkB,SAAS,MACzBz9K,MAAK,SAAUiqC,GAC9B,OAAOA,EAAgB,YAAKmsB,EAAc,KAC9C,IACE,IAAKn1F,EACH,OAAO,KAET,MAAMy8M,EAAiBD,EAAkB,SAAiB,cAC1D,IAAIv/F,EAGAA,EAFAj9G,EAAqB,kBAAE5d,OAAS,EAC9B,eAAgB+yG,EACZn1F,EAAqB,kBAAE08M,WAAU,SAAU1zI,GAC/C,MAGM2zI,EAHgBF,EAAe19K,MAAK,SAAU69K,GAClD,OAAOA,EAAe,YAAK5zI,EAAmB,aACxD,IACyD,aAC3CmnD,EAAQxgH,GAAcgtM,GACtBtsF,EAAQ1gH,GAAcwlF,EAAmB,YAC/C,OAAIg7B,GAASE,EACJ/jH,GAAW6jH,EAAOE,GAEpBssF,GAAgBxnH,EAAmB,UAClD,IAEYn1F,EAAqB,kBAAE08M,WAAU,SAAU1zI,GAC/C,OAAOA,EAAmB,eAAKmsB,EAAkB,SACzD,IAGU,EAEJ8nB,EAAM,IACRA,EAAM,GAER,MAAMz0C,EAEHxoE,EAAqB,kBAAEi9G,GAAqB,cACzCx0C,EAEHzoE,EAAqB,kBAAEi9G,GAA2B,oBAErD,IAAIl1G,EAAgC/H,EAAU,OAAE,GAC5C,WAAYm1F,IACdptF,EAASotF,EAAe,QAE1B8nB,EAAMj9G,EAAS,MAAE08M,WAAU,SAAU1zI,GACnC,MAAI,UAAWmsB,EACNnsB,EAAW,OAAKmsB,EAAc,MAEhCnsB,EAAe,SAC1B,IACMi0C,EAAM,IACRA,EAAM,GAER,MAAM1rH,EAA+ByO,EAAS,MAAEi9G,GAAkB,WAE5D9f,EAAa,CAAA,EACf,cAAen9F,GACjBA,EAAa,UAAE7T,SAAQ,SAAU68E,EAAK9kF,EAAOwH,GAC3C,MAAMlD,EAAMwgF,EAAgB,WAC5B,IAAI1jF,EAAQ0jF,EAAa,aACXvhF,IAAVnC,IACFA,EAAQ0jF,EAAW,MAAE,IAEvBm0B,EAAW30G,GAAOlD,CACxB,IAGE,MACMu3N,EADaL,EAAkB,SAAiB,cACtBz9K,MAAK,SAAUiqC,GAC7C,OAAOA,EAAgB,YAAKR,CAChC,IAEE,IAAIroE,EACJ,MAAMiB,EAAOy7M,EAA2B,aAIxC,GAHIz7M,IACFjB,EAAawP,GAAcvO,IAEzB,eAAgB+zF,EAAQ,CAC1B,MAAM2nH,EAAantM,GAAcwlF,EAAmB,YAChD2nH,IACG38M,IAAcmM,GAAWwwM,EAAY38M,KACxCA,EAAa28M,GAGlB,CAED,IAAI58M,GAAQ,EACZ,MAAM68M,EAA2D,MAAhD58M,EAAWoC,qBAAqBwmE,OAAO,EAAG,GAE3D,IAAI+hB,EAAS+xH,EAAa3+G,WAAW,GAGjC8+G,EAAsB,CACxBnwB,WAAY,EACZF,WAAY,EAEZG,WAAYhiG,EAAO6iG,YAAc,EACjCf,WAAY9hG,EAAO8iG,aAAe,GAIpC,GAAInlH,EAAc,CAChBu0I,EAAsBv0I,EAAaA,EAAarmF,OAAS,GACzD,MAAM6e,EAAI47M,EAAa3+G,WAAWn/D,MAC/Bk+K,GACCA,EAAgB7wB,aAAe4wB,EAAoB9+G,YACnD2+G,EAAazwB,WAAa,IAAM6wB,EAAgB7wB,aAC9C4wB,EAAoB9+G,aAEtBj9F,IACF6pF,EAAS7pF,EAEZ,CAED,MAAMtD,EACuB,MAA1BmtF,EAAO0iG,iBAA8BrtL,EAAWkC,mBAC7CujE,EAASm3I,EACX,CAACjyH,EAAOyiG,cAAc,GAAIziG,EAAOyiG,cAAc,IAC/CziG,EAAOyiG,cACL2vB,EAAYpyH,EAAO2iG,UAAY9vL,EAC/Bw/M,EAAYryH,EAAO4iG,WAAa/vL,EACtC,IAAIy/M,EAAkBP,EAA0B,YAC5CO,GAAmBL,IACrBK,EAAkB,CAChBA,EAAgB,GAChBA,EAAgB,GAChBA,EAAgB,GAChBA,EAAgB,KAGpB,IAAI5iN,EAAS,CACXorE,EAAO,GAAKs3I,EAAYF,EAAoBnwB,WAE5CjnH,EAAO,GAAKu3I,GAAa,EAAIH,EAAoBpwB,YACjDhnH,EAAO,GAAKs3I,GAAa,EAAIF,EAAoBlwB,YACjDlnH,EAAO,GAAKu3I,EAAYH,EAAoBrwB,YAG9C,QACsBllM,IAApB21N,IACCpiN,GAAeoiN,EAAiB5iN,GACjC,CACA,MAAM6iN,EAAmBr9M,EAAoB,iBACvCs9M,EAAwB3tM,GAAc,aAAatP,YAEzD,GADA7F,EAAS4iN,EACLC,EACFn9M,EACEm9M,EAAiB,KAAOC,EAAsB,IAC9CD,EAAiB,KAAOC,EAAsB,OAC3C,CACL,MAAMC,EAAuB1wM,GAC3BuwM,EACAP,EAA2B,aAC3B,aAGF38M,EACEq9M,EAAqB,GAAK,OAASD,EAAsB,IACzDC,EAAqB,GAAK,OAASD,EAAsB,EAC5D,CACF,CAED,MAAM16M,EAAW2lE,GACfs0I,EACAriN,EACAiuE,GAII+D,EAAO,GACb,IAAIwwB,EAAkB7H,EAAwB,gBAG9C,GAFA6H,OAAsCv1G,IAApBu1G,EAAgCA,EAAkB,GAGlE,uBAAwBw/G,GACxB,YAAaA,EAA4B,mBACzC,CACA,MAAMgB,EAAOhB,EAA4B,mBAAW,QAAO,IAAQ,KAAO,IAE1E,IAAK,IAAI35N,EAAI,EAAGuE,EAAKo2N,EAAKp7N,OAAQS,EAAIuE,IAAMvE,EAC1C,GAAI26N,EAAK36N,GAAe,WAAG,CACzB,MAGM46N,EAHaD,EAAK36N,GAAe,WAAEk8C,MAAK,SAAUxzC,GACtD,MAA0B,eAAnBA,EAAc,IAC/B,IACoD,cAAS,MAMrD,GAJwB,KAApByxG,IAEFA,EAAkBygH,EAAU,IAEN,QAApBzgH,EAKF,MAJIygH,EAAU92N,SAAS,QACrB6lF,EAAK5lF,KAA4B42N,EAAK36N,GAAU,KAKrD,MAAU26N,EAAK36N,GAAS,OACvBm6G,EAAkB,MAClBxwB,EAAK5lF,KAA4B42N,EAAK36N,GAAU,MAGrD,CAWD,OAVoB,IAAhB2pF,EAAKpqF,SACP46G,EAAkB,OAClBh9F,EAAe,YAAE7T,SAAQ,SAAUZ,GACD,SAA5BA,EAAsB,eACxBwc,EAASxc,EAAgB,OACzBihF,EAAK5lF,KAA4B2E,EAAmB,UAE5D,KAGS,CACLihF,KAAMA,EACN79C,MAAOwmE,EAAc,MACrB3sB,UAAWA,EACXzgE,OAAQA,EACR5H,WAAYA,EACZ68F,gBAAiBA,EACjBp6F,SAAUA,EACVrR,MAAOA,EACP4rG,WAAYA,EACZj9F,MAAOA,EACPkd,YAAa+3E,EAAoB,YAErC,EyGk1BA2iG,GAAG5sM,OAAO+hG,IAAMhb,GAChB6lH,GAAG5sM,OAAOwyN,WAAa,GACvB5lB,GAAG5sM,OAAOwyN,WAAWt3H,aAAeu3H,GACpC7lB,GAAG5sM,OAAOwyN,WAAW13H,cAAgB43H,GACrC9lB,GAAG5sM,OAAO2uN,OAAS,GACnB/hB,GAAG5sM,OAAO2uN,OAAOr1H,SAAWq5H,GAC5B/lB,GAAG5sM,OAAO2uN,OAAOiE,oBtI75CkB,QsI85CnChmB,GAAG5sM,OAAO6yN,YAAc,GACxBjmB,GAAG5sM,OAAO6yN,YAAYt0H,sBAAwBu0H,GAC9ClmB,GAAG5sM,OAAO6yN,YAAY1xH,eAAiB4xH,GACvCnmB,GAAG5sM,OAAO6yN,YAAY9zH,yBAA2Bi0H,GACjDpmB,GAAG5sM,OAAOizN,oBEn3CH,SAA6Bv7M,EAAU6kK,GAC5C,MAAM22C,EAAc,IAAIryJ,GAAS,IAC3BsyJ,EAAiBz7M,EAASvC,YAChC,OAAO,SAAU7F,EAAQmD,GACvBygN,EAAYzzJ,cACR0zJ,IACF7jN,EAASoE,GAAgBy/M,EAAgB7jN,IAE3C,MAAM8lB,EAAI1d,EAASkhE,kBAAkBnmE,GAC/B2gN,EAAgB,GAStB,OARA17M,EAAS4jE,iBAAiBhsE,EAAQ8lB,GAAI/yB,IACpC,MAAM/E,EAAM+E,EAAUqM,WACtB,IAAKwkN,EAAYvzJ,YAAYriE,GAAM,CACjC,MAAM0C,EAASu8K,EAAQl6K,GACvB6wN,EAAYrzN,IAAIvC,EAAK0C,EACtB,CACDozN,EAAc13N,KAAKw3N,EAAYh0N,IAAI5B,GAAK,IAEnC81N,CACX,CACA,EFg2CAxmB,GAAG5sM,OAAOqzN,OAAS,GACnBzmB,GAAG5sM,OAAOqzN,OAAOn4H,aAAeo4H,GAChC1mB,GAAG5sM,OAAOuzN,IAAM,GAChB3mB,GAAG5sM,OAAOuzN,IAAIz2H,gBAAkB02H,GAChC5mB,GAAG5sM,OAAOuzN,IAAIr4H,aAAeu4H,GAC7B7mB,GAAG5sM,OAAOuzN,IAAI71H,kBAAoBg2H,GAClC9mB,GAAG5sM,OAAOuzN,IAAIt2H,YAAc02H,GAC5B/mB,GAAG5sM,OAAOuzN,IAAIx1H,aAAe61H,GAC7BhnB,GAAG5sM,OAAOuzN,IAAIl2H,iBAAmBw2H,GACjCjnB,GAAG5sM,OAAOuzN,IAAIz4H,cAAgBg5H,GAC9BlnB,GAAGmnB,OAAS,CAAA,EACZnnB,GAAGmnB,OAAOp2M,eAAiBq2M,GAC3BpnB,GAAGmnB,OAAO/hN,Q7QtwCH,SAASA,EAAQtH,EAAUjK,GAEhC,MAAMod,GADNpd,EAAUA,GAAW,IACEod,QAAUF,GAC3B1I,EAAaxU,EAAQwU,YAAc,YACnCnf,EAAO4U,EAAS6Z,UACT,uBAATzuB,IACF4U,EAAWA,EAASG,QAAQiB,UAAUmJ,EAAY,cAEpD,IACI5F,EAAa2f,EAAQr3B,EAAGuE,EAAIie,EAAG2G,EAD/B7O,EAAO,EAEX,OAAQnc,GACN,IAAK,QACL,IAAK,aACL,IAAK,aACL,IAAK,kBACL,IAAK,aACH,MAEF,IAAK,UAKH,IAJAuZ,EAAiE,EAE/DmW,iBACFvT,EAAOlQ,KAAKmP,IAAIkN,GAAgB/O,EAAY,GAAIwO,IAC3ClmB,EAAI,EAAGuE,EAAKmT,EAAYnY,OAAQS,EAAIuE,IAAMvE,EAC7Csa,GAAQlQ,KAAKmP,IAAIkN,GAAgB/O,EAAY1X,GAAIkmB,IAEnD,MAEF,IAAK,eAIH,IAHAxO,EAAwE,EAEtEmW,iBACG7tB,EAAI,EAAGuE,EAAKmT,EAAYnY,OAAQS,EAAIuE,IAAMvE,EAG7C,IAFAq3B,EAAS3f,EAAY1X,GACrBsa,GAAQlQ,KAAKmP,IAAIkN,GAAgB4Q,EAAO,GAAInR,IACvC1D,EAAI,EAAG2G,EAAKkO,EAAO93B,OAAQijB,EAAI2G,IAAM3G,EACxClI,GAAQlQ,KAAKmP,IAAIkN,GAAgB4Q,EAAO7U,GAAI0D,IAGhD,MAEF,IAAK,qBAAsB,CACzB,MAAM4sD,EAC0D,EAE5D2G,gBACJ,IAAKz5E,EAAI,EAAGuE,EAAKuuE,EAAWvzE,OAAQS,EAAIuE,IAAMvE,EAC5Csa,GAAQD,EAAQy4D,EAAW9yE,GAAI8I,GAEjC,KACD,CACD,QACE,MAAM,IAAInC,MAAM,8BAAgCxI,GAGpD,OAAOmc,CACT,E6Q+sCA26L,GAAGmnB,OAAOn2M,YAAcq2M,GACxBrnB,GAAGmnB,OAAOhzN,U7Q/2CH,SAASA,EAAU2J,EAAUjK,GAElC,MAAMod,GADNpd,EAAUA,GAAW,IACEod,QAAUF,GAC3B1I,EAAaxU,EAAQwU,YAAc,YACnCnf,EAAO4U,EAAS6Z,UACT,uBAATzuB,IACF4U,EAAWA,EAASG,QAAQiB,UAAUmJ,EAAY,cAEpD,IACI5F,EAAa2f,EAAQr3B,EAAGuE,EAAIie,EAAG2G,EAD/B5pB,EAAS,EAEb,OAAQpB,GACN,IAAK,QACL,IAAK,aACH,MAEF,IAAK,aACL,IAAK,aACHuZ,EAAwE,EAEtEmW,iBACFtuB,EAASinB,GAAkB9O,EAAawO,GACxC,MAEF,IAAK,kBACL,IAAK,UAIH,IAHAxO,EAAwE,EAEtEmW,iBACG7tB,EAAI,EAAGuE,EAAKmT,EAAYnY,OAAQS,EAAIuE,IAAMvE,EAC7CT,GAAUinB,GAAkB9O,EAAY1X,GAAIkmB,GAE9C,MAEF,IAAK,eAIH,IAHAxO,EAAwE,EAEtEmW,iBACG7tB,EAAI,EAAGuE,EAAKmT,EAAYnY,OAAQS,EAAIuE,IAAMvE,EAE7C,IADAq3B,EAAS3f,EAAY1X,GAChBwiB,EAAI,EAAG2G,EAAKkO,EAAO93B,OAAQijB,EAAI2G,IAAM3G,EACxCjjB,GAAUinB,GAAkB6Q,EAAO7U,GAAI0D,GAG3C,MAEF,IAAK,qBAAsB,CACzB,MAAM4sD,EAC0D,EAE5D2G,gBACJ,IAAKz5E,EAAI,EAAGuE,EAAKuuE,EAAWvzE,OAAQS,EAAIuE,IAAMvE,EAC5CT,GAAU6J,EAAU0pE,EAAW9yE,GAAI8I,GAErC,KACD,CACD,QACE,MAAM,IAAInC,MAAM,8BAAgCxI,GAGpD,OAAOoB,CACT,E6QozCA01M,GAAGmnB,OAAOljN,OAASqjN,GACnBtnB,GAAGvmD,OAAS,CAAA,EACZumD,GAAGvmD,OAAO/qI,gBAAkB64M,GAC5BvnB,GAAGvmD,OAAOprI,UAAYm5M,GACtBxnB,GAAGynB,QAAU,CAAA,EACbznB,GAAGynB,QAAQxzJ,SAAW1B,GACtBytI,GAAGynB,QAAQC,WAAa3zG,GACxBisF,GAAGynB,QAAQlwK,cAAgB/B,GAC3BwqJ,GAAGynB,QAAQlwK,cAAchC,KAAOoyK,GAChC3nB,GAAGynB,QAAQ5iI,MAAQpG,GACnBuhH,GAAGvmM,MAAQ,CAAA,EACXumM,GAAGvmM,MAAMkqE,OAAS4pC,GAClByyF,GAAGvmM,MAAM+zG,KAAOG,GAChBqyF,GAAGvmM,MAAMk1G,KAAOgB,GAChBqwF,GAAGvmM,MAAMo0G,UAAYU,GACrByxF,GAAGvmM,MAAMo0G,UAAUv7G,IAAMs1N,GACzB5nB,GAAGvmM,MAAMu7B,eAAiBS,GAC1BuqK,GAAGvmM,MAAMu7B,eAAeU,OAASmyL,GACjC7nB,GAAGvmM,MAAMxB,MAAQmzG,GACjB40F,GAAGvmM,MAAM4xG,aAAegC,GACxB2yF,GAAGvmM,MAAMm2G,OAASY,GAClBwvF,GAAGvmM,MAAMg3G,MAAQY,GACjB2uF,GAAGvmM,MAAMg3G,MAAMU,mBAAqB22G,GACpC9nB,GAAGvmM,MAAMg3G,MAAMW,mBAAqB22G,GACpC/nB,GAAGvmM,MAAMg3G,MAAMQ,WAAa+2G,GAC5BhoB,GAAGvmM,MAAM63G,KAAOwC,GAChBksF,GAAGvmM,MAAMglH,KAAO,GAChBuhF,GAAGvmM,MAAMglH,KAAKtN,mBAAqB82G,GACnCjoB,GAAGkoB,UAAY,CAAA,EACfloB,GAAGkoB,UAAUtkN,eAAiBukN,GAC9BnoB,GAAGkoB,UAAUv0J,QAAUy0J,GACvBpoB,GAAGkoB,UAAUG,sBrLr6CN,SAA+BpwK,GACpC,MAAOzvB,EAAGjoB,EAAGC,GAAKy3C,EACf8mE,UAAU9mE,EAAQ+vE,YAAY,KAAO,EAAG/vE,EAAQ3tD,QAChDwkB,MAAM,KACNilB,IAAIX,QACP,OAAOsgC,GAAUlrC,EAAGjoB,EAAGC,EACzB,EqLg6CAw/L,GAAGkoB,UAAUhyN,OAASoyN,GACtBtoB,GAAGkoB,UAAUx0J,UAAY60J,GACzBvoB,GAAGkoB,UAAUt0J,KAAO40J,GACpBxoB,GAAGkoB,UAAUr0J,iBAAmB40J,GAChCzoB,GAAG1oH,SAAW,CAAA,EACd0oH,GAAG1oH,SAASnH,SAAWxC,GACvBqyH,GAAG1oH,SAASktI,KAAOh0I,GACnBwvH,GAAG1oH,SAASktI,KAAK/zI,gCAAkCi4I,GACnD1oB,GAAG1oH,SAASyqI,OAAS,GACrB/hB,GAAG1oH,SAASyqI,OAAOvpL,iBAAmBmwL,GACtC3oB,GAAG1oH,SAASyqI,OAAOtpL,kBAAoBmwL,GACvC5oB,GAAG1oH,SAAS5F,gBAAkBm3I,GAC9B7oB,GAAG1oH,SAAS9F,oBAAsBs3I,GAClC9oB,GAAG1oH,SAAS1F,UAAYm3I,GACxB/oB,GAAG1oH,SAAS7F,qBAAuBu3I,GACnChpB,GAAG1oH,SAAS/F,iBAAmB03I,GAC/BjpB,GAAG1oH,SAASlvE,MAAQ8gN,GACpBlpB,GAAGmpB,gBAAkB,CAAA,EACrBnpB,GAAGmpB,gBAAgBt1I,mBAAqBu1I,GACxCppB,GAAGmpB,gBAAgBh1I,oBAAsBk1I,GACzCrpB,GAAGmpB,gBAAgB70I,2BAA6Bg1I,GAChDtpB,GAAGmpB,gBAAgB10I,UAAY80I,GAC/BvpB,GAAGmpB,gBAAgB30I,oBAAsBg1I,GACzCxpB,GAAG9gM,UAAY,CAAA,EACf8gM,GAAG9gM,UAAU7R,MAAQo8N,GACrBzpB,GAAG9gM,UAAUgC,QAAUwoN,GACvB1pB,GAAG9gM,UAAUyqN,oBzR3xCN,SAA6BxoN,EAAKC,EAAKC,EAAIC,EAAIZ,EAAOa,EAAKC,GAChE,OAAOM,GAASZ,GAtLT,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAsLWC,EAAKC,EAAKC,EAAIC,EAAIZ,EAAOa,EAAKC,GAClE,EyR0xCAw+L,GAAG9gM,UAAUF,OAAS4qN,GACtB5pB,GAAG9gM,UAAUyC,YAAckoN,GAC3B7pB,GAAG9gM,UAAU4qN,OzRrxCN,SAAgB12N,GACrB,OAAOqO,GAAYrO,EAAQA,EAC7B,EyRoxCA4sM,GAAG9gM,UAAUuC,YAAcsoN,GAC3B/pB,GAAG9gM,UAAU4B,UAAYkpN,GACzBhqB,GAAG9gM,UAAUC,SAAW8qN,GACxBjqB,GAAG9gM,UAAUD,MAAQirN,GACrBlqB,GAAG9gM,UAAUuB,OAAS0pN,GACtBnqB,GAAG9gM,UAAU2B,MAAQupN,GACrBpqB,GAAG9gM,UAAUjM,IAAMo3N,GACnBrqB,GAAG9gM,UAAUmB,aAAeiqN,GAC5BtqB,GAAG9gM,UAAU4C,SAAWyoN,GACxBvqB,GAAG9gM,UAAU6B,UAAYypN,GACzBxqB,GAAGlyG,IAAM,CAAA,EACTkyG,GAAGlyG,IAAID,aAAe48H,GACtBzqB,GAAG0qB,KAAO,CAAA,EACV1qB,GAAG0qB,KAAK95H,QrSl+Ce,QqSm+CvBovG,GAAG0qB,KAAKj5N,SAAWk5N,EACnB3qB,GAAG0qB,KAAK94N,OAASg5N,EACjB5qB,GAAG6qB,IAAM,CAAA,EACT7qB,GAAG6qB,IAAI1gH,KAAO,GACd61F,GAAG6qB,IAAI1gH,KAAKnrG,OAAS8rN,GACrB9qB,GAAG6qB,IAAI1gH,KAAKD,cAAgB6gH,GAC5B/qB,GAAGx4F,IAAM,CAAA,EACTw4F,GAAGx4F,IAAIqB,6BAA+BmiH,GACtChrB,GAAGx4F,IAAIjB,wBAA0B0kH,GACjCjrB,GAAGx4F,IAAIhB,gBAAkB0kH,GACzBlrB,GAAGx4F,IAAIZ,kBAAoBukH,GAC3BnrB,GAAGx4F,IAAIV,mBAAqBskH,GAC5BprB,GAAGx4F,IAAID,eAAiB8jH,GACxBrrB,GAAGx4F,IAAIb,YAAc2kH,GACrBtrB,GAAGx4F,IAAIsC,iBAAmByhH,GAC1BvrB,GAAGx4F,IAAIF,WAAakkH,GACpBxrB,GAAGx4F,IAAIC,kBAAoBgkH,GAC3BzrB,GAAGx4F,IAAII,gBAAkB8jH,GACzB1rB,GAAGx4F,IAAIW,oBAAsBwjH,GAC7B3rB,GAAGx4F,IAAIS,kBAAoB2jH,GAC3B5rB,GAAGx4F,IAAIM,yBAA2B+jH,GAClC7rB,GAAGx4F,IAAIQ,yBAA2B8jH,GAClC9rB,GAAGx4F,IAAIK,aAAekkH,GACtB/rB,GAAGx4F,IAAIsB,aAAekjH,GACtBhsB,GAAGx4F,IAAIe,sBAAwB0jH,GAC/BjsB,GAAGx4F,IAAIyB,gBAAkBijH,GACzBlsB,GAAGx4F,IAAIrzE,MAAQg4L,GACfnsB,GAAGx4F,IAAI6B,UAAY+iH,GACnBpsB,GAAGx4F,IAAIkC,gBAAkB2iH,GACzBrsB,GAAGx4F,IAAImC,oBAAsB2iH,GAC7BtsB,GAAGx4F,IAAI+kH,iBxGt/BA,SAA0BtzN,GAC/B4wG,GAAY5wG,CACd,EwGq/BA+mM,GAAGx4F,IAAIglH,sBxG9gCA,SAA+BC,GACpC7iH,GAAiB6iH,CACnB,EwG6gCAzsB,GAAGx4F,IAAIgB,UAAYkkH","x_google_ignoreList":[60,61,62,63,64,65,66,67,150,151,243,276,277]}