{"version":3,"file":"ol.js","sources":["../ol/events/Event.js","../ol/ObjectEventType.js","../ol/Disposable.js","../ol/array.js","../ol/functions.js","../ol/obj.js","../ol/events/Target.js","../ol/events/EventType.js","../ol/events.js","../ol/Observable.js","../ol/util.js","../ol/Object.js","../ol/CollectionEventType.js","../ol/Collection.js","../ol/TileState.js","../ol/easing.js","../ol/Tile.js","../ol/has.js","../ol/dom.js","../ol/DataTile.js","../ol/asserts.js","../ol/Feature.js","../ol/transform.js","../ol/extent/Relationship.js","../ol/extent.js","../ol/proj/Units.js","../ol/proj/Projection.js","../ol/proj/epsg3857.js","../ol/proj/epsg4326.js","../ol/proj/projections.js","../ol/proj/transforms.js","../ol/math.js","../ol/string.js","../ol/coordinate.js","../ol/sphere.js","../ol/console.js","../ol/proj.js","../ol/geom/flat/transform.js","../ol/geom/Geometry.js","../ol/geom/SimpleGeometry.js","../ol/geom/flat/closest.js","../ol/geom/flat/deflate.js","../ol/geom/flat/simplify.js","../ol/geom/flat/inflate.js","../ol/geom/flat/area.js","../ol/geom/LinearRing.js","../ol/geom/Point.js","../ol/geom/flat/contains.js","../ol/geom/flat/interiorpoint.js","../ol/geom/flat/segments.js","../ol/geom/flat/intersectsextent.js","../ol/geom/flat/reverse.js","../ol/geom/flat/orient.js","../ol/geom/Polygon.js","../ol/Geolocation.js","../ol/ImageState.js","../ol/Image.js","../ol/ImageCanvas.js","../ol/ImageTile.js","../ol/Kinetic.js","../ol/layer/Property.js","../ol/layer/Base.js","../ol/render/EventType.js","../ol/ViewHint.js","../ol/ViewProperty.js","../ol/tilegrid/common.js","../ol/centerconstraint.js","../ol/resolutionconstraint.js","../ol/rotationconstraint.js","../ol/View.js","../ol/layer/Layer.js","../../node_modules/quickselect/index.js","../../node_modules/rbush/index.js","../ol/size.js","../ol/style/Image.js","../../node_modules/color-space/rgb.js","../../node_modules/color-space/xyz.js","../../node_modules/color-space/luv.js","../../node_modules/color-space/lchuv.js","../../node_modules/color-name/index.js","../../node_modules/color-parse/index.js","../../node_modules/color-space/hsl.js","../../node_modules/color-rgba/index.js","../ol/color.js","../ol/style/IconImageCache.js","../ol/style/IconImage.js","../ol/colorlike.js","../ol/css.js","../ol/render/canvas.js","../ol/style/RegularShape.js","../ol/style/Circle.js","../ol/style/Fill.js","../ol/style/Stroke.js","../ol/style/Style.js","../ol/style/Icon.js","../ol/style/Text.js","../ol/expr/expression.js","../ol/expr/cpu.js","../ol/render/canvas/style.js","../ol/layer/BaseVector.js","../ol/renderer/Map.js","../ol/render/Event.js","../ol/renderer/Composite.js","../ol/layer/Group.js","../ol/MapEvent.js","../ol/MapBrowserEvent.js","../ol/MapBrowserEventType.js","../ol/pointer/EventType.js","../ol/MapBrowserEventHandler.js","../ol/MapEventType.js","../ol/MapProperty.js","../ol/structs/PriorityQueue.js","../ol/TileQueue.js","../ol/control/Control.js","../ol/control/Attribution.js","../ol/control/Rotate.js","../ol/control/Zoom.js","../ol/control/defaults.js","../ol/interaction/Property.js","../ol/interaction/Interaction.js","../ol/interaction/DoubleClickZoom.js","../ol/interaction/Pointer.js","../ol/events/condition.js","../ol/interaction/DragPan.js","../ol/interaction/DragRotate.js","../ol/render/Box.js","../ol/interaction/DragBox.js","../ol/interaction/DragZoom.js","../ol/events/Key.js","../ol/interaction/KeyboardPan.js","../ol/interaction/KeyboardZoom.js","../ol/interaction/MouseWheelZoom.js","../ol/interaction/PinchRotate.js","../ol/interaction/PinchZoom.js","../ol/interaction/defaults.js","../ol/Map.js","../ol/Overlay.js","../ol/structs/LRUCache.js","../ol/tilecoord.js","../ol/TileCache.js","../ol/TileRange.js","../ol/VectorRenderTile.js","../ol/featureloader.js","../ol/net.js","../ol/loadingstrategy.js","../ol/render/VectorContext.js","../ol/render/canvas/Immediate.js","../ol/renderer/vector.js","../ol/render.js","../ol/reproj.js","../ol/resolution.js","../ol/reproj/common.js","../ol/reproj/Triangulation.js","../ol/reproj/Tile.js","../ol/source/TileEventType.js","../ol/source/Source.js","../ol/tilegrid/TileGrid.js","../ol/tilegrid/WMTS.js","../ol/tilegrid.js","../ol/source/Tile.js","../ol/tileurlfunction.js","../ol/source/UrlTile.js","../ol/source/TileImage.js","../ol/source/BingMaps.js","../ol/source/XYZ.js","../ol/structs/RBush.js","../ol/geom/Circle.js","../ol/geom/GeometryCollection.js","../ol/geom/flat/interpolate.js","../ol/geom/flat/length.js","../ol/geom/LineString.js","../ol/geom/MultiLineString.js","../ol/geom/MultiPoint.js","../ol/geom/flat/center.js","../ol/geom/MultiPolygon.js","../ol/render/Feature.js","../ol/source/VectorEventType.js","../ol/source/Vector.js","../ol/reproj/DataTile.js","../ol/reproj/Image.js","../ol/source/common.js","../ol/source/Image.js","../ol/uri.js","../ol/source/arcgisRest.js","../ol/source/static.js","../ol/source/wms.js","../ol/source/ogcTileUtil.js","../ol/source/OSM.js","../ol/layer/BaseImage.js","../ol/renderer/Layer.js","../ol/render/canvas/ZIndexContext.js","../ol/renderer/canvas/Layer.js","../ol/renderer/canvas/ImageLayer.js","../ol/layer/Image.js","../ol/layer/TileProperty.js","../ol/layer/BaseTile.js","../ol/renderer/canvas/TileLayer.js","../ol/layer/Tile.js","../ol/source/Raster.js","../ol/source/StadiaMaps.js","../ol/source/UTFGrid.js","../ol/xml.js","../ol/vec/mat4.js","../ol/style/flat.js","../ol/render/canvas/Instruction.js","../ol/render/canvas/Builder.js","../ol/render/canvas/ImageBuilder.js","../ol/render/canvas/LineStringBuilder.js","../ol/render/canvas/PolygonBuilder.js","../ol/geom/flat/linechunk.js","../ol/geom/flat/straightchunk.js","../ol/render/canvas/TextBuilder.js","../ol/render/canvas/BuilderGroup.js","../ol/geom/flat/textpath.js","../ol/render/canvas/Executor.js","../ol/render/canvas/ExecutorGroup.js","../ol/render/canvas/hitdetect.js","../ol/renderer/canvas/VectorLayer.js","../ol/renderer/canvas/VectorImageLayer.js","../ol/proj/proj4.js","../ol/layer/Vector.js","../ol/geom/flat/geodesic.js","../ol/layer/Graticule.js","../ol/webgl.js","../ol/webgl/Buffer.js","../ol/webgl/ContextEventType.js","../ol/webgl/PostProcessingPass.js","../ol/webgl/Helper.js","../ol/renderer/webgl/Layer.js","../ol/webgl/RenderTarget.js","../ol/render/webgl/constants.js","../../node_modules/earcut/src/earcut.js","../ol/render/webgl/utils.js","../ol/renderer/webgl/PointsLayer.js","../ol/worker/webgl.js","../ol/renderer/webgl/worldUtil.js","../ol/webgl/PaletteTexture.js","../ol/renderer/webgl/TileLayer.js","../ol/renderer/webgl/TileLayerBase.js","../ol/expr/gpu.js","../ol/webgl/ShaderBuilder.js","../ol/layer/Heatmap.js","../ol/interaction/DragAndDrop.js","../ol/interaction/Draw.js","../ol/interaction/Extent.js","../ol/interaction/Link.js","../ol/interaction/Modify.js","../ol/interaction/Select.js","../ol/events/SnapEvent.js","../ol/interaction/Snap.js","../ol/interaction/Translate.js","../ol/geom/flat/flip.js","../ol/format/Feature.js","../ol/format/XMLFeature.js","../ol/format/xsd.js","../ol/format/GPX.js","../ol/format/JSONFeature.js","../ol/format/GeoJSON.js","../ol/format/TextFeature.js","../ol/format/IGC.js","../ol/format/KML.js","../../node_modules/ieee754/index.js","../../node_modules/pbf/index.js","../ol/format/MVT.js","../ol/format/OSMXML.js","../ol/format/XML.js","../ol/format/xlink.js","../ol/format/OWS.js","../ol/format/Polyline.js","../ol/format/TopoJSON.js","../ol/format/GMLBase.js","../ol/format/GML2.js","../ol/format/GML3.js","../ol/format/GML32.js","../ol/format/filter/Filter.js","../ol/format/filter/LogicalNary.js","../ol/format/filter/And.js","../ol/format/filter/Bbox.js","../ol/format/WFS.js","../ol/format/WMTSCapabilities.js","../ol/control/FullScreen.js","../ol/control/MousePosition.js","../ol/control/OverviewMap.js","../ol/control/ScaleLine.js","../ol/control/ZoomSlider.js","../ol/dist/ol.js","../ol/control/ZoomToExtent.js","../ol/format/filter.js","../ol/format/WMSGetFeatureInfo.js","../ol/geom/flat/topology.js","../ol/interaction/DblClickDragZoom.js","../ol/interaction/DragRotateAndZoom.js","../ol/layer/VectorImage.js","../ol/source/Cluster.js","../ol/source/DataTile.js","../ol/source/Google.js","../ol/source/ImageArcGISRest.js","../ol/source/ImageCanvas.js","../ol/source/ImageStatic.js","../ol/source/ImageWMS.js","../ol/source/OGCMapTile.js","../ol/source/TileArcGISRest.js","../ol/source/TileDebug.js","../ol/source/TileJSON.js","../ol/source/TileWMS.js","../ol/source/WMTS.js","../ol/source.js","../ol/structs/LinkedList.js"],"sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '9.2.4';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile|null}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    let tile = this.interimTile;\n    if (!tile) {\n      //empty chain\n      return this;\n    }\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    let tile = this.interimTile;\n    if (!tile) {\n      return;\n    }\n\n    /** @type {Tile} */\n    let prev = this;\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      }\n      if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement ||\n    data instanceof ImageBitmap\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true},\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e6, 1e6, 1e6, 1e6, 2, 2];\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString =\n    'matrix(' +\n    mat\n      .map(\n        (value, i) =>\n          Math.round(value * matrixPrecision[i]) / matrixPrecision[i],\n      )\n      .join(', ') +\n    ')';\n  return transformString;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @param {boolean} [multiWorld] Return all worlds\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, precision) {\n  const numberString =\n    precision !== undefined ? number.toFixed(precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection,\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride,\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/Geolocation\n */\nimport BaseEvent from './events/Event.js';\nimport BaseObject from './Object.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  identityTransform,\n} from './proj.js';\nimport {toRadians} from './math.js';\n\n/**\n * @enum {string}\n */\nconst Property = {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions',\n};\n\n/**\n * @enum string\n */\nconst GeolocationErrorType = {\n  /**\n   * Triggered when a `GeolocationPositionError` occurs.\n   * @event module:ol/Geolocation.GeolocationError#error\n   * @api\n   */\n  ERROR: 'error',\n};\n\n/**\n * @classdesc\n * Events emitted on [GeolocationPositionError](https://developer.mozilla.org/en-US/docs/Web/API/GeolocationPositionError).\n */\nexport class GeolocationError extends BaseEvent {\n  /**\n   * @param {GeolocationPositionError} error error object.\n   */\n  constructor(error) {\n    super(GeolocationErrorType.ERROR);\n\n    /**\n     * Code of the underlying `GeolocationPositionError`.\n     * @type {number}\n     * @api\n     */\n    this.code = error.code;\n\n    /**\n     * Message of the underlying `GeolocationPositionError`.\n     * @type {string}\n     * @api\n     */\n    this.message = error.message;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See https://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {import(\"./proj.js\").ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:accuracy'|'change:accuracyGeometry'|'change:altitude'|\n *    'change:altitudeAccuracy'|'change:heading'|'change:position'|'change:projection'|'change:speed'|'change:tracking'|\n *    'change:trackingOptions'} GeolocationObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<GeolocationObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'error', GeolocationError, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|GeolocationObjectEventTypes, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return>} GeolocationOnSignature\n */\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](https://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes and errors, register listeners for the generic\n * `change` event and the `error` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     const geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       console.log(geolocation.getPosition());\n *     });\n *     // listen to error\n *     geolocation.on('error', function(evt) {\n *       window.console.log(evt.message);\n *     });\n *\n * @fires GeolocationError\n * @api\n */\nclass Geolocation extends BaseObject {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GeolocationOnSignature<void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * The unprojected (EPSG:4326) device position.\n     * @private\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.position_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./proj.js\").TransformFunction}\n     */\n    this.transform_ = identityTransform;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.watchId_ = undefined;\n\n    this.addChangeListener(Property.PROJECTION, this.handleProjectionChanged_);\n    this.addChangeListener(Property.TRACKING, this.handleTrackingChanged_);\n\n    if (options.projection !== undefined) {\n      this.setProjection(options.projection);\n    }\n    if (options.trackingOptions !== undefined) {\n      this.setTrackingOptions(options.trackingOptions);\n    }\n\n    this.setTracking(options.tracking !== undefined ? options.tracking : false);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTracking(false);\n    super.disposeInternal();\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    const projection = this.getProjection();\n    if (projection) {\n      this.transform_ = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        projection,\n      );\n      if (this.position_) {\n        this.set(Property.POSITION, this.transform_(this.position_));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleTrackingChanged_() {\n    if ('geolocation' in navigator) {\n      const tracking = this.getTracking();\n      if (tracking && this.watchId_ === undefined) {\n        this.watchId_ = navigator.geolocation.watchPosition(\n          this.positionChange_.bind(this),\n          this.positionError_.bind(this),\n          this.getTrackingOptions(),\n        );\n      } else if (!tracking && this.watchId_ !== undefined) {\n        navigator.geolocation.clearWatch(this.watchId_);\n        this.watchId_ = undefined;\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPosition} position position event.\n   */\n  positionChange_(position) {\n    const coords = position.coords;\n    this.set(Property.ACCURACY, coords.accuracy);\n    this.set(\n      Property.ALTITUDE,\n      coords.altitude === null ? undefined : coords.altitude,\n    );\n    this.set(\n      Property.ALTITUDE_ACCURACY,\n      coords.altitudeAccuracy === null ? undefined : coords.altitudeAccuracy,\n    );\n    this.set(\n      Property.HEADING,\n      coords.heading === null ? undefined : toRadians(coords.heading),\n    );\n    if (!this.position_) {\n      this.position_ = [coords.longitude, coords.latitude];\n    } else {\n      this.position_[0] = coords.longitude;\n      this.position_[1] = coords.latitude;\n    }\n    const projectedPosition = this.transform_(this.position_);\n    this.set(Property.POSITION, projectedPosition.slice());\n    this.set(Property.SPEED, coords.speed === null ? undefined : coords.speed);\n    const geometry = circularPolygon(this.position_, coords.accuracy);\n    geometry.applyTransform(this.transform_);\n    this.set(Property.ACCURACY_GEOMETRY, geometry);\n    this.changed();\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPositionError} error error object.\n   */\n  positionError_(error) {\n    this.dispatchEvent(new GeolocationError(error));\n  }\n\n  /**\n   * Get the accuracy of the position in meters.\n   * @return {number|undefined} The accuracy of the position measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAccuracy() {\n    return /** @type {number|undefined} */ (this.get(Property.ACCURACY));\n  }\n\n  /**\n   * Get a geometry of the position accuracy.\n   * @return {?import(\"./geom/Polygon.js\").default} A geometry of the position accuracy.\n   * @observable\n   * @api\n   */\n  getAccuracyGeometry() {\n    return /** @type {?import(\"./geom/Polygon.js\").default} */ (\n      this.get(Property.ACCURACY_GEOMETRY) || null\n    );\n  }\n\n  /**\n   * Get the altitude associated with the position.\n   * @return {number|undefined} The altitude of the position in meters above mean\n   *     sea level.\n   * @observable\n   * @api\n   */\n  getAltitude() {\n    return /** @type {number|undefined} */ (this.get(Property.ALTITUDE));\n  }\n\n  /**\n   * Get the altitude accuracy of the position.\n   * @return {number|undefined} The accuracy of the altitude measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAltitudeAccuracy() {\n    return /** @type {number|undefined} */ (\n      this.get(Property.ALTITUDE_ACCURACY)\n    );\n  }\n\n  /**\n   * Get the heading as radians clockwise from North.\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n   * is set to `true` in the tracking options.\n   * @return {number|undefined} The heading of the device in radians from north.\n   * @observable\n   * @api\n   */\n  getHeading() {\n    return /** @type {number|undefined} */ (this.get(Property.HEADING));\n  }\n\n  /**\n   * Get the position of the device.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The current position of the device reported\n   *     in the current projection.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the projection associated with the position.\n   * @return {import(\"./proj/Projection.js\").default|undefined} The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"./proj/Projection.js\").default|undefined} */ (\n      this.get(Property.PROJECTION)\n    );\n  }\n\n  /**\n   * Get the speed in meters per second.\n   * @return {number|undefined} The instantaneous speed of the device in meters\n   *     per second.\n   * @observable\n   * @api\n   */\n  getSpeed() {\n    return /** @type {number|undefined} */ (this.get(Property.SPEED));\n  }\n\n  /**\n   * Determine if the device location is being tracked.\n   * @return {boolean} The device location is being tracked.\n   * @observable\n   * @api\n   */\n  getTracking() {\n    return /** @type {boolean} */ (this.get(Property.TRACKING));\n  }\n\n  /**\n   * Get the tracking options.\n   * See https://www.w3.org/TR/geolocation-API/#position-options.\n   * @return {PositionOptions|undefined} PositionOptions as defined by\n   *     the [HTML5 Geolocation spec\n   *     ](https://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  getTrackingOptions() {\n    return /** @type {PositionOptions|undefined} */ (\n      this.get(Property.TRACKING_OPTIONS)\n    );\n  }\n\n  /**\n   * Set the projection to use for transforming the coordinates.\n   * @param {import(\"./proj.js\").ProjectionLike} projection The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(Property.PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * Enable or disable tracking.\n   * @param {boolean} tracking Enable tracking.\n   * @observable\n   * @api\n   */\n  setTracking(tracking) {\n    this.set(Property.TRACKING, tracking);\n  }\n\n  /**\n   * Set the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @param {PositionOptions} options PositionOptions as defined by the\n   *     [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  setTrackingOptions(options) {\n    this.set(Property.TRACKING_OPTIONS, options);\n  }\n}\n\nexport default Geolocation;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageState from './ImageState.js';\nimport ImageWrapper from './Image.js';\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nclass ImageCanvas extends ImageWrapper {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, loader) {\n    const state = loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = loader !== undefined ? loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\nexport default ImageCanvas;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n          );\n          layerStatesArray.push(layerState);\n        },\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\n\nexport default {\n\tname: 'rgb',\n\tmin: [0,0,0],\n\tmax: [255,255,255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nvar xyz = {\n\tname: 'xyz',\n\tmin: [0,0,0],\n\tchannel: ['X','Y','Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931']\n};\n\n\n/**\n * Whitepoint reference values with observer/illuminant\n *\n * http://en.wikipedia.org/wiki/Standard_illuminant\n */\nxyz.whitepoint = {\n\t//1931 2°\n\t2: {\n\t\t//incadescent\n\t\tA:[109.85, 100, 35.585],\n\t\t// B:[],\n\t\tC: [98.074, 100, 118.232],\n\t\tD50: [96.422, 100, 82.521],\n\t\tD55: [95.682, 100, 92.149],\n\t\t//daylight\n\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\tD75: [94.972, 100, 122.638],\n\t\t//flourescent\n\t\t// F1: [],\n\t\tF2: [99.187, 100, 67.395],\n\t\t// F3: [],\n\t\t// F4: [],\n\t\t// F5: [],\n\t\t// F6:[],\n\t\tF7: [95.044, 100, 108.755],\n\t\t// F8: [],\n\t\t// F9: [],\n\t\t// F10: [],\n\t\tF11: [100.966, 100, 64.370],\n\t\t// F12: [],\n\t\tE: [100,100,100]\n\t},\n\n\t//1964  10°\n\t10: {\n\t\t//incadescent\n\t\tA:[111.144, 100, 35.200],\n\t\tC: [97.285, 100, 116.145],\n\t\tD50: [96.720, 100, 81.427],\n\t\tD55: [95.799, 100, 90.926],\n\t\t//daylight\n\t\tD65: [94.811, 100, 107.304],\n\t\tD75: [94.416, 100, 120.641],\n\t\t//flourescent\n\t\tF2: [103.280, 100, 69.026],\n\t\tF7: [95.792, 100, 107.687],\n\t\tF11: [103.866, 100, 65.627],\n\t\tE: [100,100,100]\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array} xyz Array of xyz values\n *\n * @return {Array} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t//FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array} rgb RGB channels\n *\n * @return {Array} XYZ channels\n */\nrgb.xyz = function(rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\n import xyz from './xyz.js';\n\nexport default {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0,-134,-140],\n\tmax: [100,224,122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function(arg, i, o){\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0,0,0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow( (l + 16) / 116 , 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function(arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y/yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1/3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n//cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0,0,0],\n\tmax: [100,100,360],\n\n\tluv: function(luv){\n\t\tvar l = luv[0],\n\t\tc = luv[1],\n\t\th = luv[2],\n\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function(arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default lchuv;\n\nluv.lchuv = function(luv){\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u*u + v*v);\n\tvar hr = Math.atan2(v,u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l,c,h]\n};\n\nxyz.lchuv = function(arg){\n  return luv.lchuv(xyz.luv(arg));\n};\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n","/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nexport default {\n\tname: 'hsl',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function(hsl) {\n\t\tvar h = hsl[0]/360, s = hsl[1]/100, l = hsl[2]/100, t1, t2, t3, rgb, val, i=0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (;i<3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t3 * t3 < 2 ?  t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\n\n//extend rgb\nrgb.hsl = function(rgb) {\n\tvar r = rgb[0]/255,\n\t\t\tg = rgb[1]/255,\n\t\t\tb = rgb[2]/255,\n\t\t\tmin = Math.min(r, g, b),\n\t\t\tmax = Math.max(r, g, b),\n\t\t\tdelta = max - min,\n\t\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g)/ delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n","/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n","/**\n * @module ol/color\n */\nimport lchuv from 'color-space/lchuv.js';\nimport parseRgba from 'color-rgba';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('Failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('Failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          this.addEventListener(EventType.CHANGE, function onChange() {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          });\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\nimport {toString} from './color.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text,\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text,\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvases_;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvases_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio,\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvases_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvases_ = {};\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * * **declutter**: Overlapping symbols and text are decluttered.\n * * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {isStringColor} from '../color.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   * `['get', 'attributeName', typeHint]` fetches a feature property value, similar to `feature.get('attributeName')`\n *     A type hint can optionally be specified, in case the resulting expression contains a type ambiguity which\n *     will make it invalid. Type hints can be one of: 'string', 'color', 'number', 'boolean', 'number[]'\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   * `['resolution']` returns the current resolution\n *   * `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` The current zoom level (WebGL only).\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const SizeType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n  [SizeType]: 'size',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n * @property {import(\"../style/flat.js\").FlatStyle|import(\"../style/webgl.js\").WebGLStyle} style The style being parsed\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n    style: {},\n  };\n}\n\n/**\n * @param {string} typeHint Type hint\n * @return {number} Resulting value type (will be a single type)\n */\nfunction getTypeFromHint(typeHint) {\n  switch (typeHint) {\n    case 'string':\n      return StringType;\n    case 'color':\n      return ColorType;\n    case 'number':\n      return NumberType;\n    case 'boolean':\n      return BooleanType;\n    case 'number[]':\n      return NumberArrayType;\n    default:\n      throw new Error(`Unrecognized type hint: ${typeHint}`);\n  }\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context, typeHint) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(\n        typeHint === SizeType ? SizeType : NumberType,\n        encoded,\n      );\n    }\n    case 'string': {\n      let type = StringType;\n      if (isStringColor(encoded)) {\n        type |= ColorType;\n      }\n      // apply the given type hint only if it won't result in an empty type\n      if (!isType(type & typeHint, NoneType)) {\n        type &= typeHint;\n      }\n      return new LiteralExpression(type, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context, typeHint);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 2) {\n    type |= SizeType;\n  } else if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n  if (typeHint) {\n    type &= typeHint;\n  }\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n};\n\n/**\n * @typedef {function(Array, ParsingContext, number):Expression} Parser\n * Third argument is a type hint\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createParser(\n    ([_, typeHint]) => {\n      if (typeHint !== undefined) {\n        return getTypeFromHint(\n          /** @type {string} */ (\n            /** @type {LiteralExpression} */ (typeHint).value\n          ),\n        );\n      }\n      return AnyType;\n    },\n    withArgsCount(1, 2),\n    withGetArgs,\n  ),\n  [Ops.Var]: createParser(\n    ([firstArg]) => firstArg.type,\n    withArgsCount(1, 1),\n    withVarArgs,\n  ),\n  [Ops.Id]: createParser(NumberType | StringType, withNoArgs, usesFeatureId),\n  [Ops.Concat]: createParser(\n    StringType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.GeometryType]: createParser(StringType, withNoArgs, usesGeometryType),\n  [Ops.Resolution]: createParser(NumberType, withNoArgs),\n  [Ops.Zoom]: createParser(NumberType, withNoArgs),\n  [Ops.Time]: createParser(NumberType, withNoArgs),\n  [Ops.Any]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createParser(\n    BooleanType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.NotEqual]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.GreaterThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.LessThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.LessThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.Multiply]: createParser(\n    (parsedArgs) => {\n      let outputType = NumberType | ColorType;\n      for (let i = 0; i < parsedArgs.length; i++) {\n        outputType &= parsedArgs[i].type;\n      }\n      return outputType;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType | ColorType),\n    narrowArgsType,\n  ),\n  [Ops.Coalesce]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.Divide]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createParser(\n    NumberType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createParser(\n    NumberType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createParser(\n    NumberType,\n    withArgsCount(1, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 2; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(4, Infinity),\n    withEvenArgs,\n    parseMatchArgs,\n  ),\n  [Ops.Between]: createParser(\n    BooleanType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createParser(\n    (parsedArgs) => {\n      let type = ColorType | NumberType;\n      for (let i = 3; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      return type;\n    },\n    withArgsCount(6, Infinity),\n    withEvenArgs,\n    parseInterpolateArgs,\n  ),\n  [Ops.Case]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(3, Infinity),\n    withOddArgs,\n    parseCaseArgs,\n  ),\n  [Ops.In]: createParser(BooleanType, withArgsCount(2, 2), parseInArgs),\n  [Ops.Number]: createParser(\n    NumberType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.String]: createParser(\n    StringType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createParser(\n    (parsedArgs) => {\n      return parsedArgs.length === 2\n        ? NumberArrayType | SizeType\n        : parsedArgs.length === 3 || parsedArgs.length === 4\n          ? NumberArrayType | ColorType\n          : NumberArrayType;\n    },\n    withArgsCount(1, Infinity),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createParser(\n    ColorType,\n    withArgsCount(1, 4),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createParser(\n    NumberType,\n    withArgsCount(1, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createParser(ColorType, withArgsCount(2, 2), parsePaletteArgs),\n  [Ops.ToString]: createParser(\n    StringType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, ParsingContext, Array<Expression>, number?):Array<Expression>|void} ArgValidator\n * An argument validator applies various checks to an encoded expression arguments\n * Returns the parsed arguments if any.\n * Third argument is the array of parsed arguments from previous validators\n * Fourth argument is an optional type hint\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  if (encoded.length === 3) {\n    const hint = parse(encoded[2], context);\n    return [arg, hint];\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context, parsedArgs, typeHint) {\n  const varName = encoded[1];\n  if (typeof varName !== 'string') {\n    throw new Error('Expected a string argument for var operation');\n  }\n  context.variables.add(varName);\n  if (\n    !('variables' in context.style) ||\n    context.style.variables[varName] === undefined\n  ) {\n    return [new LiteralExpression(AnyType, varName)];\n  }\n  const initialValue = context.style.variables[varName];\n  const arg = /** @type {LiteralExpression} */ (parse(initialValue, context));\n  arg.value = varName;\n  if (typeHint && !overlapsType(typeHint, arg.type)) {\n    throw new Error(\n      `The variable ${varName} has type ${typeName(\n        arg.type,\n      )} but the following type was expected: ${typeName(typeHint)}`,\n    );\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesFeatureId(encoded, context) {\n  context.featureId = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesGeometryType(encoded, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsCount(minArgs, maxArgs) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `Expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction parseArgsOfType(argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            `, got ${gotType} but expected ${expectedType}`,\n        );\n      }\n      expression.type &= argType;\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction narrowArgsType(encoded, context, parsedArgs) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n\n  // first pass to determine a narrowed down type\n  let sameType = AnyType;\n  for (let i = 0; i < parsedArgs.length; ++i) {\n    sameType &= parsedArgs[i].type;\n  }\n\n  if (sameType === NoneType) {\n    throw new Error(\n      `No common type could be found for arguments of ${operation} operation`,\n    );\n  }\n\n  // re-parse args\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    args[i] = parse(encoded[i + 1], context, sameType);\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withOddArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `An odd amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount,\n      )} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withEvenArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `An even amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount,\n      )} instead`,\n    );\n  }\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseMatchArgs(encoded, context, parsedArgs, typeHint) {\n  const argsCount = encoded.length - 1;\n\n  const input = parse(encoded[1], context);\n  let inputType = input.type;\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context);\n    const output = parse(encoded[i + 3], context);\n    inputType &= match.type;\n    outputType &= output.type;\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  // check input and output types validity\n  const expectedInputType = StringType | NumberType | BooleanType;\n  if (!overlapsType(expectedInputType, inputType)) {\n    throw new Error(\n      `Expected an input of type ${typeName(\n        expectedInputType,\n      )} for the interpolate operation` +\n        `, got ${typeName(inputType)} instead`,\n    );\n  }\n  inputType &= expectedInputType;\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following match operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  // parse again inputs and outputs with common type\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context, inputType);\n    const output = parse(encoded[i + 3], context, outputType);\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  return [\n    parse(encoded[1], context, inputType),\n    ...args,\n    parse(encoded[encoded.length - 1], context, outputType),\n  ];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInterpolateArgs(encoded, context, parsedArgs, typeHint) {\n  const interpolationType = encoded[1];\n  let interpolation;\n  switch (interpolationType[0]) {\n    case 'linear':\n      interpolation = 1;\n      break;\n    case 'exponential':\n      interpolation = interpolationType[1];\n      if (typeof interpolation !== 'number') {\n        throw new Error(\n          `Expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(interpolation)} instead`,\n        );\n      }\n      break;\n    default:\n      interpolation = null;\n  }\n  if (!interpolation) {\n    throw new Error(\n      `Invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n    );\n  }\n  interpolation = parse(interpolation, context);\n\n  // check input types\n  let input = parse(encoded[2], context);\n  if (!overlapsType(NumberType, input.type)) {\n    throw new Error(\n      `Expected an input of type number for the interpolate operation` +\n        `, got ${typeName(input.type)} instead`,\n    );\n  }\n  input = parse(encoded[2], context, NumberType); // parse again with narrower output\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    let stop = parse(encoded[i + 3], context);\n    if (!overlapsType(NumberType, stop.type)) {\n      throw new Error(\n        `Expected all stop input values in the interpolate operation to be of type number` +\n          `, got ${typeName(stop.type)} at position ${i + 2} instead`,\n      );\n    }\n    let output = parse(encoded[i + 4], context);\n    if (!overlapsType(NumberType | ColorType, output.type)) {\n      throw new Error(\n        `Expected all stop output values in the interpolate operation to be a number or color` +\n          `, got ${typeName(output.type)} at position ${i + 3} instead`,\n      );\n    }\n    // parse again with narrower types\n    stop = parse(encoded[i + 3], context, NumberType);\n    output = parse(encoded[i + 4], context, NumberType | ColorType);\n    args[i] = stop;\n    args[i + 1] = output;\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseCaseArgs(encoded, context, parsedArgs, typeHint) {\n  const fallback = parse(encoded[encoded.length - 1], context, typeHint);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    const condition = parse(encoded[i + 1], context);\n    const output = parse(encoded[i + 2], context, typeHint);\n    if (!overlapsType(BooleanType, condition.type)) {\n      throw new Error(\n        `Expected all conditions in the case operation to be of type boolean` +\n          `, got ${typeName(condition.type)} at position ${i} instead`,\n      );\n    }\n    outputType &= output.type;\n    args[i] = condition;\n    args[i + 1] = output;\n  }\n\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following case operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  // parse again args with common output type\n  for (let i = 0; i < args.length - 1; i += 2) {\n    args[i + 1] = parse(encoded[i + 2], context, outputType);\n  }\n  args[args.length - 1] = parse(\n    encoded[encoded.length - 1],\n    context,\n    outputType,\n  );\n\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInArgs(encoded, context) {\n  /** @type {Array<number|string>} */\n  let haystack = /** @type {any} */ (encoded[2]);\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `The \"in\" operator was provided a literal value which was not an array as second argument.`,\n    );\n  }\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `For the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions.`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `The \"in\" operator was provided a literal value which was not an array as second argument.`,\n      );\n    }\n    haystack = haystack[1];\n  }\n\n  let needleType = StringType | NumberType;\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = parse(haystack[i], context);\n    needleType &= arg.type;\n    args[i] = arg;\n  }\n  if (isType(needleType, NoneType)) {\n    throw new Error(\n      `Could not find a common type for the following in operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  const needle = parse(encoded[1], context, needleType);\n  return [needle, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parsePaletteArgs(encoded, context) {\n  const index = parse(encoded[1], context, NumberType);\n  if (index.type !== NumberType) {\n    throw new Error(\n      `The first argument of palette must be an number, got ${typeName(\n        index.type,\n      )} instead`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('The second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    const color = parse(colors[i], context, ColorType);\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `The palette color at index ${i} must be a literal value`,\n      );\n    }\n    if (!overlapsType(color.type, ColorType)) {\n      throw new Error(\n        `The palette color at index ${i} should be of type color, got ${typeName(\n          color.type,\n        )} instead`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {number|function(Array<Expression>):number} returnType The return type of the operator; can be a fixed value or a callback taking the parsed\n * arguments\n * @param {Array<ArgValidator>} argValidators A chain of argument validators; the return value of the last validator\n * will be used as parsed arguments\n * @return {Parser} The parser.\n */\nfunction createParser(returnType, ...argValidators) {\n  return function (encoded, context, typeHint) {\n    const operator = encoded[0];\n    let parsedArgs = [];\n    for (let i = 0; i < argValidators.length; i++) {\n      parsedArgs =\n        argValidators[i](encoded, context, parsedArgs, typeHint) || parsedArgs;\n    }\n    let actualType =\n      typeof returnType === 'function' ? returnType(parsedArgs) : returnType;\n    if (typeHint !== undefined) {\n      if (!overlapsType(actualType, typeHint)) {\n        throw new Error(\n          `The following expression was expected to return ${typeName(\n            typeHint,\n          )}, but returns ${typeName(actualType)} instead: ${JSON.stringify(\n            encoded,\n          )}`,\n        );\n      }\n      actualType &= typeHint;\n    }\n    if (actualType === NoneType) {\n      throw new Error(\n        `No matching type was found for the following expression: ${JSON.stringify(\n          encoded,\n        )}`,\n      );\n    }\n    return new CallExpression(actualType, operator, ...parsedArgs);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context, typeHint) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context, typeHint);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  ColorType,\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`,\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context,\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default<import('../Feature').FeatureLike>|import(\"../source/VectorTile.js\").default<import('../Feature').FeatureLike>} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default<import('../Feature').FeatureLike>|import(\"../source/VectorTile.js\").default<import('../Feature').FeatureLike>} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style === undefined ? createDefaultStyle : style;\n    const styleLike = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(styleLike);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/Composite\n */\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map),\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    if (!frameState.declutter) {\n      return;\n    }\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} GroupEventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {GroupEventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      },\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {toPromise} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState)),\n      ),\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false,\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  async updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = await Promise.all(\n      this.collectSourceAttributions_(frameState).map((attribution) =>\n        toPromise(() => attribution),\n      ),\n    );\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    if (!this.map_) {\n      return;\n    }\n\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_,\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return false;\n    }\n\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (!active) {\n      this.box_.setMap(null);\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setActive(active);\n  }\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default>|null} declutter Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_,\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this),\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false,\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this,\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this,\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this,\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      const context = this.context_[key];\n      releaseCanvas(context);\n      canvasPool.push(context.canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<FeatureType>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").FeatureLike]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<import('./format/Feature.js').FeatureToFeatureClass<FeatureType>>} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<FeatureType>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      try {\n        /** @type {Document|Node|Object|string|undefined} */\n        let source;\n        if (type == 'text' || type == 'json') {\n          source = xhr.responseText;\n        } else if (type == 'xml') {\n          source = xhr.responseXML || xhr.responseText;\n        } else if (type == 'arraybuffer') {\n          source = /** @type {ArrayBuffer} */ (xhr.response);\n        }\n        if (source) {\n          success(\n            /** @type {Array<FeatureType>} */\n            (\n              format.readFeatures(source, {\n                extent: extent,\n                featureProjection: projection,\n              })\n            ),\n            format.readProjection(source),\n          );\n        } else {\n          failure();\n        }\n      } catch {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").FeatureLike]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<import('./format/Feature.js').FeatureToFeatureClass<FeatureType>>} format Feature format.\n * @return {FeatureLoader<FeatureType>} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<FeatureType>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source =\n      /** @type {import(\"./source/Vector\").default<FeatureType>} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<FeatureType>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID,\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {Function} [errback] Callback on error.\n * @param {string} [callbackParam] Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, errback, callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src =\n    url +\n    (url.includes('?') ? '&' : '?') +\n    (callbackParam || 'callback') +\n    '=' +\n    key;\n  const timer = setTimeout(function () {\n    cleanup();\n    if (errback) {\n      errback();\n    }\n  }, 10000);\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.head.appendChild(script);\n}\n\nexport class ResponseError extends Error {\n  /**\n   * @param {XMLHttpRequest} response The XHR object.\n   */\n  constructor(response) {\n    const message = 'Unexpected response status: ' + response.status;\n    super(message);\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ResponseError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.response = response;\n  }\n}\n\nexport class ClientError extends Error {\n  /**\n   * @param {XMLHttpRequest} client The XHR object.\n   */\n  constructor(client) {\n    super('Failed to issue request');\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ClientError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.client = client;\n  }\n}\n\n/**\n * @param {string} url The URL.\n * @return {Promise<Object>} A promise that resolves to the JSON response.\n */\nexport function getJSON(url) {\n  return new Promise(function (resolve, reject) {\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The load event.\n     */\n    function onLoad(event) {\n      const client = event.target;\n      // status will be 0 for file:// urls\n      if (!client.status || (client.status >= 200 && client.status < 300)) {\n        let data;\n        try {\n          data = JSON.parse(client.responseText);\n        } catch (err) {\n          const message = 'Error parsing response text as JSON: ' + err.message;\n          reject(new Error(message));\n          return;\n        }\n        resolve(data);\n        return;\n      }\n\n      reject(new ResponseError(client));\n    }\n\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The error event.\n     */\n    function onError(event) {\n      reject(new ClientError(event.target));\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener('load', onLoad);\n    client.addEventListener('error', onError);\n    client.open('GET', url);\n    client.setRequestHeader('Accept', 'application/json');\n    client.send();\n  });\n}\n\n/**\n * @param {string} base The base URL.\n * @param {string} url The potentially relative URL.\n * @return {string} The full URL.\n */\nexport function resolveUrl(base, url) {\n  if (url.includes('://')) {\n    return url;\n  }\n  return new URL(url, base).href;\n}\n\nlet originalXHR;\nexport function overrideXHR(xhr) {\n  if (typeof XMLHttpRequest !== 'undefined') {\n    originalXHR = XMLHttpRequest;\n  }\n  global.XMLHttpRequest = xhr;\n}\n\nexport function restoreXHR() {\n  global.XMLHttpRequest = originalXHR;\n}\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection),\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z,\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection),\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/render\n */\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply as multiplyTransform,\n  scale as scaleTransform,\n} from './transform.js';\nimport {getSquaredTolerance} from './renderer/vector.js';\nimport {getTransformFromProjections, getUserProjection} from './proj.js';\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render.js';\n * import Fill from 'ol/style/Fill.js';\n * import Polygon from 'ol/geom/Polygon.js';\n *\n * const canvas = document.createElement('canvas');\n * const render = toContext(\n *     canvas.getContext('2d'),\n *     {size: [100, 100]}\n * );\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]])\n * );\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions} [options] Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, options) {\n  const canvas = context.canvas;\n  options = options ? options : {};\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  const size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  const extent = [0, 0, canvas.width, canvas.height];\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @return {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n  if (!(event.context instanceof CanvasRenderingContext2D)) {\n    throw new Error('Only works for render events from Canvas 2D layers');\n  }\n\n  // canvas may be at a different pixel ratio than frameState.pixelRatio\n  const a = event.inversePixelTransform[0];\n  const b = event.inversePixelTransform[1];\n  const canvasPixelRatio = Math.sqrt(a * a + b * b);\n  const frameState = event.frameState;\n  const transform = multiplyTransform(\n    event.inversePixelTransform.slice(),\n    frameState.coordinateToPixelTransform,\n  );\n  const squaredTolerance = getSquaredTolerance(\n    frameState.viewState.resolution,\n    canvasPixelRatio,\n  );\n  let userTransform;\n  const userProjection = getUserProjection();\n  if (userProjection) {\n    userTransform = getTransformFromProjections(\n      userProjection,\n      frameState.viewState.projection,\n    );\n  }\n\n  return new CanvasImmediateRenderer(\n    event.context,\n    canvasPixelRatio,\n    frameState.extent,\n    transform,\n    frameState.viewState.rotation,\n    squaredTolerance,\n    userTransform,\n  );\n}\n\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @return {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n  return applyTransform(event.inversePixelTransform, pixel.slice(0));\n}\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [clipExtent] Clip extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        if (src.clipExtent) {\n          stitchContext.save();\n          const xPos = (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale;\n          const yPos = -(src.clipExtent[3] - sourceDataExtent[3]) * stitchScale;\n          const width = getWidth(src.clipExtent) * stitchScale;\n          const height = getHeight(src.clipExtent) * stitchScale;\n          stitchContext.rect(\n            interpolate ? xPos : Math.round(xPos),\n            interpolate ? yPos : Math.round(yPos),\n            interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n            interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n          );\n          stitchContext.clip();\n        }\n\n        const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n        const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n        const srcWidth = getWidth(src.extent) * stitchScale;\n        const srcHeight = getHeight(src.extent) * stitchScale;\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n\n        if (src.clipExtent) {\n          stitchContext.restore();\n        }\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/resolution\n */\n\n/**\n * @typedef {number|Array<number>} ResolutionLike\n */\n\n/**\n * @param {ResolutionLike} resolution Resolution.\n * @return {number} Resolution.\n */\nexport function fromResolutionLike(resolution) {\n  if (Array.isArray(resolution)) {\n    return Math.min(...resolution);\n  }\n  return resolution;\n}\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {import(\"../ImageTile.js\").default} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceProj.getExtent()\n      : undefined;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (tile && tile.getState() == TileState.LOADED) {\n        const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n        extent[0] += source.offset;\n        extent[2] += source.offset;\n        const clipExtent = this.clipExtent_?.slice();\n        if (clipExtent) {\n          clipExtent[0] += source.offset;\n          clipExtent[2] += source.offset;\n        }\n        sources.push({\n          extent: extent,\n          clipExtent: clipExtent,\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(({tile}) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this,\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function ({tile}, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport TileGrid from './TileGrid.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile~TileSource} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes,\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent} [extent] An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>} [matrixLimits] An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(\n  matrixSet,\n  extent,\n  matrixLimits,\n) {\n  /** @type {!Array<number>} */\n  const resolutions = [];\n  /** @type {!Array<string>} */\n  const matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  const origins = [];\n  /** @type {!Array<number|import(\"../size.js\").Size>} */\n  const tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const sizes = [];\n\n  matrixLimits = matrixLimits !== undefined ? matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function (a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function (elt) {\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = matrixLimits.find(function (elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (!elt[identifierPropName].includes(':')) {\n          return (\n            matrixSet[identifierPropName] + ':' + elt[identifierPropName] ===\n            elt_ml[matrixIdsPropName]\n          );\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution =\n        (elt[scaleDenominatorPropName] * 0.28e-3) / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([\n          elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0],\n        ]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(\n        tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight],\n      );\n      sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes,\n  });\n}\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.',\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          if (!range) {\n            throw new Error(\n              'The {-y} placeholder requires a tile grid with extent',\n            );\n          }\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {},\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark,\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/BingMaps\n */\n\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {createOrUpdate} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\n\n/**\n * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  const z = tileCoord[0];\n  const digits = new Array(z);\n  let mask = 1 << (z - 1);\n  let i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nconst TOS_ATTRIBUTION =\n  '<a class=\"ol-attribution-bing-tos\" ' +\n  'href=\"https://www.microsoft.com/maps/product/terms.html\" target=\"_blank\">' +\n  'Terms of Use</a>';\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at https://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n * @property {boolean} [placeholderTiles] Whether to show BingMaps placeholder tiles when zoomed past the maximum level provided in an area. When `false`, requests beyond\n * the maximum zoom level will return no tile. When `true`, the placeholder tile will be returned. When not set, the default behaviour of the imagery set takes place,\n * which is unique for each imagery set in BingMaps.\n */\n\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources Resources.\n */\n\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nclass BingMaps extends TileImage {\n  /**\n   * @param {Options} options Bing Maps options.\n   */\n  constructor(options) {\n    const hidpi = options.hidpi !== undefined ? options.hidpi : false;\n\n    super({\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: options.interpolate,\n      opaque: true,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: hidpi ? 2 : 1,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = hidpi;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.apiKey_ = options.key;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.imagerySet_ = options.imagerySet;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.placeholderTiles_ = options.placeholderTiles;\n\n    const url =\n      'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n      this.imagerySet_ +\n      '?uriScheme=https&include=ImageryProviders&key=' +\n      this.apiKey_ +\n      '&c=' +\n      this.culture_;\n\n    fetch(url)\n      .then((response) => response.json())\n      .then((json) => this.handleImageryMetadataResponse(json));\n  }\n\n  /**\n   * Get the api key used for this source.\n   *\n   * @return {string} The api key.\n   * @api\n   */\n  getApiKey() {\n    return this.apiKey_;\n  }\n\n  /**\n   * Get the imagery set associated with this source.\n   *\n   * @return {string} The imagery set.\n   * @api\n   */\n  getImagerySet() {\n    return this.imagerySet_;\n  }\n\n  /**\n   * @param {BingMapsImageryMetadataResponse} response Response.\n   */\n  handleImageryMetadataResponse(response) {\n    if (\n      response.statusCode != 200 ||\n      response.statusDescription != 'OK' ||\n      response.authenticationResultCode != 'ValidCredentials' ||\n      response.resourceSets.length != 1 ||\n      response.resourceSets[0].resources.length != 1\n    ) {\n      this.setState('error');\n      return;\n    }\n\n    const resource = response.resourceSets[0].resources[0];\n    const maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n\n    const sourceProjection = this.getProjection();\n    const extent = extentFromProjection(sourceProjection);\n    const scale = this.hidpi_ ? 2 : 1;\n    const tileSize =\n      resource.imageWidth == resource.imageHeight\n        ? resource.imageWidth / scale\n        : [resource.imageWidth / scale, resource.imageHeight / scale];\n\n    const tileGrid = createXYZ({\n      extent: extent,\n      minZoom: resource.zoomMin,\n      maxZoom: maxZoom,\n      tileSize: tileSize,\n    });\n    this.tileGrid = tileGrid;\n\n    const culture = this.culture_;\n    const hidpi = this.hidpi_;\n    const placeholderTiles = this.placeholderTiles_;\n    this.tileUrlFunction = createFromTileUrlFunctions(\n      resource.imageUrlSubdomains.map(function (subdomain) {\n        /** @type {import('../tilecoord.js').TileCoord} */\n        const quadKeyTileCoord = [0, 0, 0];\n        const imageUrl = resource.imageUrl\n          .replace('{subdomain}', subdomain)\n          .replace('{culture}', culture);\n        return (\n          /**\n           * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n           * @param {number} pixelRatio Pixel ratio.\n           * @param {import(\"../proj/Projection.js\").default} projection Projection.\n           * @return {string|undefined} Tile URL.\n           */\n          function (tileCoord, pixelRatio, projection) {\n            if (!tileCoord) {\n              return undefined;\n            }\n            createOrUpdate(\n              tileCoord[0],\n              tileCoord[1],\n              tileCoord[2],\n              quadKeyTileCoord,\n            );\n            const url = new URL(\n              imageUrl.replace('{quadkey}', quadKey(quadKeyTileCoord)),\n            );\n            const params = url.searchParams;\n            if (hidpi) {\n              params.set('dpi', 'd1');\n              params.set('device', 'mobile');\n            }\n            if (placeholderTiles === true) {\n              params.delete('n');\n            } else if (placeholderTiles === false) {\n              params.set('n', 'z');\n            }\n            return url.toString();\n          }\n        );\n      }),\n    );\n\n    if (resource.imageryProviders) {\n      const transform = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        this.getProjection(),\n      );\n\n      this.setAttributions((frameState) => {\n        const attributions = [];\n        const viewState = frameState.viewState;\n        const tileGrid = this.getTileGrid();\n        const z = tileGrid.getZForResolution(\n          viewState.resolution,\n          this.zDirection,\n        );\n        const tileCoord = tileGrid.getTileCoordForCoordAndZ(\n          viewState.center,\n          z,\n        );\n        const zoom = tileCoord[0];\n        resource.imageryProviders.map(function (imageryProvider) {\n          let intersecting = false;\n          const coverageAreas = imageryProvider.coverageAreas;\n          for (let i = 0, ii = coverageAreas.length; i < ii; ++i) {\n            const coverageArea = coverageAreas[i];\n            if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\n              const bbox = coverageArea.bbox;\n              const epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n              const extent = applyTransform(epsg4326Extent, transform);\n              if (intersects(extent, frameState.extent)) {\n                intersecting = true;\n                break;\n              }\n            }\n          }\n          if (intersecting) {\n            attributions.push(imageryProvider.attribution);\n          }\n        });\n\n        attributions.push(TOS_ATTRIBUTION);\n        return attributions;\n      });\n    }\n\n    this.setState('ready');\n  }\n}\n\nexport default BingMaps;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/geom/Circle\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `layout` and no\n   *     `radius` are also accepted.\n   * @param {number} [radius] Radius in units of the projection.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(center, radius, layout) {\n    super();\n    if (layout !== undefined && radius === undefined) {\n      this.setFlatCoordinates(layout, center);\n    } else {\n      radius = radius ? radius : 0;\n      this.setCenterAndRadius(center, radius, layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout,\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent,\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Circle';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, layout) {\n    this.setLayout(layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  getCoordinates() {\n    return null;\n  }\n\n  setCoordinates(coordinates, layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center),\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(geometries[i], EventType.CHANGE, this.changed, this),\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(\n      cloneGeometries(this.geometries_),\n    );\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance,\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive(),\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(\n        simplifiedGeometries,\n      );\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  return geometries.map((geometry) => geometry.clone());\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined,\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5,\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1],\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride,\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss,\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right,\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters,\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss,\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends,\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends,\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_,\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport RenderFeature from '../render/Feature.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureClass=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureClass} [feature] Feature.\n   * @param {Array<FeatureClass>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureClass|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureClass>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} [T=import(\"../Feature.js\").default]\n * @typedef {T extends RenderFeature ? T|Array<T> : T} FeatureClassOrArrayOfRenderFeatures\n */\n\n/***\n * @template Return\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent<FeatureType>, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} FeatureType\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureType>|Collection<FeatureType>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default<import(\"../format/Feature.js\").FeatureToFeatureClass<FeatureType>>} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader<FeatureType>} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureType>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader<FeatureType>}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<import('../format/Feature.js').FeatureToFeatureClass<FeatureType>>|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, this.format_);\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureType>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import('../Feature.js').FeatureLike|Array<import('../Feature.js').FeatureLike>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureType>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureType>} */\n    let collection;\n    /** @type {Array<FeatureType>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureType} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature),\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this,\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else {\n          if (!Array.isArray(indexedFeature)) {\n            this.idIndex_[id] = [indexedFeature, feature];\n          } else {\n            indexedFeature.push(feature);\n          }\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source',\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureType>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureType>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureType>} */\n    const newFeatures = [];\n    /** @type Array<FeatureType> */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureType>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      },\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureType>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent)),\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureType} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      },\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClassOrArrayOfRenderFeatures<FeatureType>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined\n      ? /** @type {FeatureClassOrArrayOfRenderFeatures<FeatureType>} */ (\n          feature\n        )\n      : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureType|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default<import('../format/Feature.js').FeatureToFeatureClass<FeatureType>>|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureType} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature),\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        },\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART),\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features,\n              ),\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR),\n            );\n          },\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Batch remove features from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {Array<FeatureType>} features Features to remove.\n   * @api\n   */\n  removeFeatures(features) {\n    const removedFeatures = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      const removedFeature = this.removeFeatureInternal(feature);\n      if (removedFeature) {\n        removedFeatures.push(removedFeature);\n      }\n    }\n    if (removedFeatures.length > 0) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove a single feature from the source. If you want to batch remove\n   * features, use the {@link module:ol/source/Vector~VectorSource#removeFeatures #removeFeatures()} method\n   * instead.\n   * @param {FeatureType} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @return {FeatureType|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    if (!(featureKey in this.uidIndex_)) {\n      return;\n    }\n\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    featureChangeKeys?.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      const idString = id.toString();\n      const indexedFeature = this.idIndex_[idString];\n      if (indexedFeature === feature) {\n        delete this.idIndex_[idString];\n      } else if (Array.isArray(indexedFeature)) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n        if (indexedFeature.length === 1) {\n          this.idIndex_[idString] = indexedFeature[0];\n        }\n      }\n    }\n    delete this.uidIndex_[featureKey];\n    if (this.hasListener(VectorEventType.REMOVEFEATURE)) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature),\n      );\n    }\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      const indexedFeature = this.idIndex_[id];\n      if (\n        feature instanceof RenderFeature &&\n        Array.isArray(indexedFeature) &&\n        indexedFeature.includes(feature)\n      ) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n      } else if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader<FeatureType>} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/reproj/DataTile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport DataTile, {asArrayLike, asImageLike, toArray} from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D, releaseCanvas} from '../dom.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../DataTile.js\").default} TileGetter\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {DataTile} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n * @property {import(\"../proj/Projection.js\").default} targetProj Target projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n * @property {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n * @property {import(\"../tilecoord.js\").TileCoord} [wrappedTileCoord] Coordinate of the tile wrapped in X.\n * @property {number} pixelRatio Pixel ratio.\n * @property {number} gutter Gutter of the source tiles.\n * @property {TileGetter} getTileFunction Function returning source tiles (z, x, y, pixelRatio).\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {number} [errorThreshold] Acceptable reprojection error (in px).\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected data tile.\n * See {@link module:ol/source/DataTile~DataTileSource}.\n *\n */\nclass ReprojDataTile extends DataTile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    super({\n      tileCoord: options.tileCoord,\n      loader: () => Promise.resolve(new Uint8Array(4)),\n      interpolate: options.interpolate,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter;\n\n    /**\n     * @type {import(\"../DataTile.js\").Data}\n     * @private\n     */\n    this.reprojData_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.reprojError_ = null;\n\n    /**\n     * @type {import('../size.js').Size}\n     * @private\n     */\n    this.reprojSize_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = options.sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = options.targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = options.wrappedTileCoord || options.tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const sourceProj = options.sourceProj;\n    const sourceProjExtent = sourceProj.getExtent();\n    const sourceTileGridExtent = options.sourceTileGrid.getExtent();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceTileGridExtent\n        ? getIntersection(sourceProjExtent, sourceTileGridExtent)\n        : sourceProjExtent\n      : sourceTileGridExtent;\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = this.targetTileGrid_.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const targetProj = options.targetProj;\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      options.errorThreshold !== undefined\n        ? options.errorThreshold\n        : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = this.sourceTileGrid_.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = this.sourceTileGrid_.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n        const getTile = options.getTileFunction;\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTile(this.sourceZ_, srcX, srcY, this.pixelRatio_);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('../size.js').Size} Tile size.\n   */\n  getSize() {\n    return this.reprojSize_;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {import(\"../DataTile.js\").Data} Tile data.\n   */\n  getData() {\n    return this.reprojData_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   */\n  getError() {\n    return this.reprojError_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const dataSources = [];\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const size = tile.getSize();\n      const gutter = this.gutter_;\n      /**\n       * @type {import(\"../DataTile.js\").ArrayLike}\n       */\n      let tileData;\n      const arrayData = asArrayLike(tile.getData());\n      if (arrayData) {\n        tileData = arrayData;\n      } else {\n        tileData = toArray(asImageLike(tile.getData()));\n      }\n      const pixelSize = [size[0] + 2 * gutter, size[1] + 2 * gutter];\n      const isFloat = tileData instanceof Float32Array;\n      const pixelCount = pixelSize[0] * pixelSize[1];\n      const DataType = isFloat ? Float32Array : Uint8Array;\n      const tileDataR = new DataType(tileData.buffer);\n      const bytesPerElement = DataType.BYTES_PER_ELEMENT;\n      const bytesPerPixel = (bytesPerElement * tileDataR.length) / pixelCount;\n      const bytesPerRow = tileDataR.byteLength / pixelSize[1];\n      const bandCount = Math.floor(\n        bytesPerRow / bytesPerElement / pixelSize[0],\n      );\n      const packedLength = pixelCount * bandCount;\n      let packedData = tileDataR;\n      if (tileDataR.length !== packedLength) {\n        packedData = new DataType(packedLength);\n        let dataIndex = 0;\n        let rowOffset = 0;\n        const colCount = pixelSize[0] * bandCount;\n        for (let rowIndex = 0; rowIndex < pixelSize[1]; ++rowIndex) {\n          for (let colIndex = 0; colIndex < colCount; ++colIndex) {\n            packedData[dataIndex++] = tileDataR[rowOffset + colIndex];\n          }\n          rowOffset += bytesPerRow / bytesPerElement;\n        }\n      }\n      const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n      extent[0] += source.offset;\n      extent[2] += source.offset;\n      const clipExtent = this.clipExtent_?.slice();\n      if (clipExtent) {\n        clipExtent[0] += source.offset;\n        clipExtent[2] += source.offset;\n      }\n      dataSources.push({\n        extent: extent,\n        clipExtent: clipExtent,\n        data: new Uint8Array(packedData.buffer),\n        dataType: DataType,\n        bytesPerPixel: bytesPerPixel,\n        pixelSize: pixelSize,\n      });\n    });\n    this.sourceTiles_.length = 0;\n\n    if (dataSources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const targetWidth = typeof size === 'number' ? size : size[0];\n      const targetHeight = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      let dataR, dataU;\n\n      const bytesPerPixel = dataSources[0].bytesPerPixel;\n\n      const reprojs = Math.ceil(bytesPerPixel / 3);\n      for (let reproj = reprojs - 1; reproj >= 0; --reproj) {\n        const sources = [];\n        for (let i = 0, len = dataSources.length; i < len; ++i) {\n          const dataSource = dataSources[i];\n          const buffer = dataSource.data;\n          const pixelSize = dataSource.pixelSize;\n          const width = pixelSize[0];\n          const height = pixelSize[1];\n          const context = createCanvasContext2D(width, height, canvasPool);\n          const imageData = context.createImageData(width, height);\n          const data = imageData.data;\n          let offset = reproj * 3;\n          for (let j = 0, len = data.length; j < len; j += 4) {\n            data[j] = buffer[offset];\n            data[j + 1] = buffer[offset + 1];\n            data[j + 2] = buffer[offset + 2];\n            data[j + 3] = 255;\n            offset += bytesPerPixel;\n          }\n          context.putImageData(imageData, 0, 0);\n          sources.push({\n            extent: dataSource.extent,\n            clipExtent: dataSource.clipExtent,\n            image: context.canvas,\n          });\n        }\n\n        const canvas = renderReprojected(\n          targetWidth,\n          targetHeight,\n          this.pixelRatio_,\n          sourceResolution,\n          this.sourceTileGrid_.getExtent(),\n          targetResolution,\n          targetExtent,\n          this.triangulation_,\n          sources,\n          this.gutter_,\n          false,\n          false,\n          false,\n          //true,\n        );\n\n        for (let i = 0, len = sources.length; i < len; ++i) {\n          const canvas = sources[i].image;\n          const context = canvas.getContext('2d');\n          releaseCanvas(context);\n          canvasPool.push(context.canvas);\n        }\n\n        const context = canvas.getContext('2d');\n        const imageData = context.getImageData(\n          0,\n          0,\n          canvas.width,\n          canvas.height,\n        );\n\n        releaseCanvas(context);\n        canvasPool.push(canvas);\n\n        if (!dataR) {\n          dataU = new Uint8Array(\n            bytesPerPixel * imageData.width * imageData.height,\n          );\n          dataR = new dataSources[0].dataType(dataU.buffer);\n        }\n\n        const data = imageData.data;\n        let offset = reproj * 3;\n        for (let i = 0, len = data.length; i < len; i += 4) {\n          if (data[i + 3] === 255) {\n            dataU[offset] = data[i];\n            dataU[offset + 1] = data[i + 1];\n            dataU[offset + 2] = data[i + 2];\n          } else {\n            dataU[offset] = 0;\n            dataU[offset + 1] = 0;\n            dataU[offset + 2] = 0;\n          }\n          offset += bytesPerPixel;\n        }\n      }\n\n      this.reprojData_ = dataR;\n      this.reprojSize_ = [\n        Math.round(targetWidth * this.pixelRatio_),\n        Math.round(targetHeight * this.pixelRatio_),\n      ];\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    let leftToLoad = 0;\n\n    this.sourcesListenerKeys_ = [];\n    this.sourceTiles_.forEach(({tile}) => {\n      const state = tile.getState();\n      if (state !== TileState.IDLE && state !== TileState.LOADING) {\n        return;\n      }\n      leftToLoad++;\n\n      const sourceListenKey = listen(\n        tile,\n        EventType.CHANGE,\n        function () {\n          const state = tile.getState();\n          if (\n            state == TileState.LOADED ||\n            state == TileState.ERROR ||\n            state == TileState.EMPTY\n          ) {\n            unlistenByKey(sourceListenKey);\n            leftToLoad--;\n            if (leftToLoad === 0) {\n              this.unlistenSources_();\n              this.reproject_();\n            }\n          }\n        },\n        this,\n      );\n      this.sourcesListenerKeys_.push(sourceListenKey);\n    });\n\n    if (leftToLoad === 0) {\n      setTimeout(this.reproject_.bind(this), 0);\n    } else {\n      this.sourceTiles_.forEach(function ({tile}) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojDataTile;\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport {\n  getCenter,\n  getHeight,\n  getIntersection,\n  getWidth,\n  isEmpty,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../Image.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageWrapper {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    interpolate,\n  ) {\n    let maxSourceExtent = sourceProj.getExtent();\n    if (maxSourceExtent && sourceProj.canWrapX()) {\n      maxSourceExtent = maxSourceExtent.slice();\n      maxSourceExtent[0] = -Infinity;\n      maxSourceExtent[2] = Infinity;\n    }\n    let maxTargetExtent = targetProj.getExtent();\n    if (maxTargetExtent && targetProj.canWrapX()) {\n      maxTargetExtent = maxTargetExtent.slice();\n      maxTargetExtent[0] = -Infinity;\n      maxTargetExtent[2] = Infinity;\n    }\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution,\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = isEmpty(sourceExtent)\n      ? null\n      : getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        fromResolutionLike(this.sourceImage_.getResolution()),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.interpolate_,\n        true,\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          function (e) {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n          this,\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (\n        this.sourceListenerKey_\n      ),\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nexport const DECIMALS = 4;\n","/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport {DECIMALS} from './common.js';\nimport {ceil} from '../math.js';\nimport {\n  containsExtent,\n  equals,\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport {linearFindNearest} from '../array.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../Image.js\").Loader} [loader] Loader. Can either be a custom loader, or one of the\n * loaders created with a `createLoader()` function ({@link module:ol/source/wms.createLoader wms},\n * {@link module:ol/source/arcgisRest.createLoader arcgisRest}, {@link module:ol/source/mapguide.createLoader mapguide},\n * {@link module:ol/source/static.createLoader static}).\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./Source.js\").State} [state] State.\n */\n\n/**\n * @classdesc\n * Base class for sources providing a single image.\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n    });\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").Loader}\n     */\n    this.loader = options.loader || null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image = null;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.wantedExtent_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.wantedResolution_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.static_ = options.loader ? options.loader.length === 0 : false;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.wantedProjection_ = null;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {Array<number>|null} resolutions Resolutions.\n   */\n  setResolutions(resolutions) {\n    this.resolutions_ = resolutions;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    const resolutions = this.getResolutions();\n    if (resolutions) {\n      const idx = linearFindNearest(resolutions, resolution, 0);\n      resolution = resolutions[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    }\n    if (this.reprojectedImage_) {\n      if (\n        this.reprojectedRevision_ == this.getRevision() &&\n        equivalent(this.reprojectedImage_.getProjection(), projection) &&\n        this.reprojectedImage_.getResolution() == resolution &&\n        equals(this.reprojectedImage_.getExtent(), extent)\n      ) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new ReprojImage(\n      sourceProjection,\n      projection,\n      extent,\n      resolution,\n      pixelRatio,\n      (extent, resolution, pixelRatio) =>\n        this.getImageInternal(extent, resolution, pixelRatio, sourceProjection),\n      this.getInterpolate(),\n    );\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.loader) {\n      const requestExtent = getRequestExtent(extent, resolution, pixelRatio, 1);\n      const requestResolution = this.findNearestResolution(resolution);\n      if (\n        this.image &&\n        (this.static_ ||\n          (this.wantedProjection_ === projection &&\n            ((this.wantedExtent_ &&\n              containsExtent(this.wantedExtent_, requestExtent)) ||\n              containsExtent(this.image.getExtent(), requestExtent)) &&\n            ((this.wantedResolution_ &&\n              fromResolutionLike(this.wantedResolution_) ===\n                requestResolution) ||\n              fromResolutionLike(this.image.getResolution()) ===\n                requestResolution)))\n      ) {\n        return this.image;\n      }\n      this.wantedProjection_ = projection;\n      this.wantedExtent_ = requestExtent;\n      this.wantedResolution_ = requestResolution;\n      this.image = new ImageWrapper(\n        requestExtent,\n        requestResolution,\n        pixelRatio,\n        this.loader,\n      );\n      this.image.addEventListener(\n        EventType.CHANGE,\n        this.handleImageChange.bind(this),\n      );\n    }\n    return this.image;\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    let type;\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        type = ImageSourceEventType.IMAGELOADSTART;\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADEND;\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADERROR;\n        break;\n      default:\n        return;\n    }\n    if (this.hasListener(type)) {\n      this.dispatchEvent(new ImageSourceEvent(type, image));\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\n/**\n * Adjusts the extent so it aligns with pixel boundaries.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} resolution Reolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} ratio Ratio between request size and view size.\n * @return {import(\"../extent.js\").Extent} Request extent.\n */\nexport function getRequestExtent(extent, resolution, pixelRatio, ratio) {\n  const imageResolution = resolution / pixelRatio;\n  const center = getCenter(extent);\n  const viewWidth = ceil(getWidth(extent) / imageResolution, DECIMALS);\n  const viewHeight = ceil(getHeight(extent) / imageResolution, DECIMALS);\n  const marginWidth = ceil(((ratio - 1) * viewWidth) / 2, DECIMALS);\n  const requestWidth = viewWidth + 2 * marginWidth;\n  const marginHeight = ceil(((ratio - 1) * viewHeight) / 2, DECIMALS);\n  const requestHeight = viewHeight + 2 * marginHeight;\n  return getForViewAndSize(center, imageResolution, 0, [\n    requestWidth,\n    requestHeight,\n  ]);\n}\n\nexport default ImageSource;\n","/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n","/**\n * @module ol/source/arcgisRest\n */\n\nimport {DECIMALS} from './common.js';\nimport {appendParams} from '../uri.js';\nimport {decode} from '../Image.js';\nimport {getHeight, getWidth} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport {getRequestExtent} from './Image.js';\nimport {round} from '../math.js';\n\n/**\n * @param {string} baseUrl Base URL for the ArcGIS Rest service.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"../proj/Projection.js\").default} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n */\nexport function getRequestUrl(\n  baseUrl,\n  extent,\n  resolution,\n  pixelRatio,\n  projection,\n  params,\n) {\n  // ArcGIS Server only wants the numeric portion of the projection ID.\n  // (if there is no numeric portion the entire projection code must\n  // form a valid ArcGIS SpatialReference definition).\n  const srid = projection\n    .getCode()\n    .split(/:(?=\\d+$)/)\n    .pop();\n\n  const imageResolution = resolution / pixelRatio;\n\n  const imageSize = [\n    round(getWidth(extent) / imageResolution, DECIMALS),\n    round(getHeight(extent) / imageResolution, DECIMALS),\n  ];\n\n  params['SIZE'] = imageSize[0] + ',' + imageSize[1];\n  params['BBOX'] = extent.join(',');\n  params['BBOXSR'] = srid;\n  params['IMAGESR'] = srid;\n  params['DPI'] = Math.round(\n    params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio,\n  );\n\n  const modifiedUrl = baseUrl\n    .replace(/MapServer\\/?$/, 'MapServer/export')\n    .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n  return appendParams(modifiedUrl, params);\n}\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is 'EPSG:3857'.\n * The projection code must contain a numeric end portion separated by :\n * or the entire code must form a valid ArcGIS SpatialReference definition.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n * @property {function(HTMLImageElement, string): Promise<import('../DataTile.js').ImageLike>} [load] Function\n * to perform loading of the image. Receives the created `HTMLImageElement` and the desired `src` as argument and\n * returns a promise resolving to the loaded or decoded image. Default is {@link module:ol/Image.decode}.\n */\n\n/**\n * Creates a loader for ArcGIS Rest images.\n * @param {LoaderOptions} options Image ArcGIS Rest Options.\n * @return {import('../Image.js').ImageObjectPromiseLoader} ArcGIS Rest image.\n * @api\n */\nexport function createLoader(options) {\n  const load = options.load ? options.load : decode;\n  const projection = getProjection(options.projection || 'EPSG:3857');\n\n  /** @type {import('../Image.js').ImageObjectPromiseLoader} */\n  return function (extent, resolution, pixelRatio) {\n    pixelRatio = options.hidpi ? pixelRatio : 1;\n\n    const params = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true,\n    };\n    Object.assign(params, options.params);\n\n    extent = getRequestExtent(extent, resolution, pixelRatio, options.ratio);\n\n    const src = getRequestUrl(\n      options.url,\n      extent,\n      resolution,\n      pixelRatio,\n      projection,\n      params,\n    );\n\n    const image = new Image();\n    if (options.crossOrigin !== null) {\n      image.crossOrigin = options.crossOrigin;\n    }\n\n    return load(image, src).then((image) => {\n      // Update resolution, because the server may return a smaller size than requested\n      const resolution = (getWidth(extent) / image.width) * pixelRatio;\n      return {image, extent, resolution, pixelRatio};\n    });\n  };\n}\n","/**\n * @module ol/source/static\n */\n\nimport {decode} from '../Image.js';\nimport {getHeight, getWidth} from '../extent.js';\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image. When using this loader with an\n * `ol/source/Image`, the same extent must be set as `extent` of the `ol/layer/Image`.\n * @property {string} url Image URL.\n * @property {function(HTMLImageElement, string): Promise<import('../DataTile.js').ImageLike>} [load] Function\n * to perform loading of the image. Receives the created `HTMLImageElement` and the desired `src` as argument and\n * returns a promise resolving to the loaded or decoded image. Default is {@link module:ol/Image.decode}.\n */\n\n/**\n * Creates a loader for static images.\n * @param {LoaderOptions} options Loader options.\n * @return {import(\"../Image.js\").ImageObjectPromiseLoader} Loader.\n * @api\n */\nexport function createLoader(options) {\n  const load = options.load || decode;\n  const extent = options.imageExtent;\n  const image = new Image();\n  if (options.crossOrigin !== null) {\n    image.crossOrigin = options.crossOrigin;\n  }\n\n  return () =>\n    load(image, options.url).then((image) => {\n      const resolutionX = getWidth(extent) / image.width;\n      const resolutionY = getHeight(extent) / image.height;\n      const resolution =\n        resolutionX !== resolutionY ? [resolutionX, resolutionY] : resolutionY;\n      return {image, extent, resolution, pixelRatio: 1};\n    });\n}\n","/**\n * @module ol/source/wms\n */\n\nimport {DECIMALS} from './common.js';\nimport {appendParams} from '../uri.js';\nimport {compareVersions} from '../string.js';\nimport {decode} from '../Image.js';\nimport {floor, round} from '../math.js';\nimport {getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport {getRequestExtent} from './Image.js';\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_VERSION = '1.3.0';\n\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nconst GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n/**\n * @api\n * @typedef {'carmentaserver' | 'geoserver' | 'mapserver' | 'qgis'} ServerType\n * Set the server type to use implementation-specific parameters beyond the WMS specification.\n *  - `'carmentaserver'`: HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n *  - `'geoserver'`: HiDPI support for [GeoServer](https://geoserver.org/)\n *  - `'mapserver'`: HiDPI support for [MapServer](https://mapserver.org/)\n *  - `'qgis'`: HiDPI support for [QGIS](https://qgis.org/)\n */\n\n/**\n * @param {string} baseUrl Base URL.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {import(\"../proj/Projection.js\").default} projection Projection.\n * @param {Object} params WMS params. Will be modified in place.\n * @return {string} Request URL.\n */\nexport function getRequestUrl(baseUrl, extent, size, projection, params) {\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  const v13 = compareVersions(params['VERSION'], '1.3') >= 0;\n  params[v13 ? 'CRS' : 'SRS'] = projection.getCode();\n  if (v13 && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (baseUrl), params);\n}\n\n/**\n * @param {import(\"../extent\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio pixel ratio.\n * @param {import(\"../proj.js\").Projection} projection Projection.\n * @param {string} url WMS service url.\n * @param {Object} params WMS params.\n * @param {import(\"./wms.js\").ServerType} serverType The type of the remote WMS server.\n * @return {string} Image src.\n */\nexport function getImageSrc(\n  extent,\n  resolution,\n  pixelRatio,\n  projection,\n  url,\n  params,\n  serverType,\n) {\n  params = Object.assign({REQUEST: 'GetMap'}, params);\n\n  const imageResolution = resolution / pixelRatio;\n\n  const imageSize = [\n    round(getWidth(extent) / imageResolution, DECIMALS),\n    round(getHeight(extent) / imageResolution, DECIMALS),\n  ];\n\n  if (pixelRatio != 1) {\n    switch (serverType) {\n      case 'geoserver':\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case 'mapserver':\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case 'carmentaserver':\n      case 'qgis':\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        throw new Error('Unknown `serverType` configured');\n    }\n  }\n\n  const src = getRequestUrl(url, extent, imageSize, projection, params);\n  return src;\n}\n\n/**\n * @param {Object} params WMS params.\n * @param {string} request WMS `REQUEST`.\n * @return {Object} WMS params with required properties set.\n */\nexport function getRequestParams(params, request) {\n  return Object.assign(\n    {\n      'REQUEST': request,\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'FORMAT': 'image/png',\n      'STYLES': '',\n      'TRANSPARENT': true,\n    },\n    params,\n  );\n}\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {Object<string,*>} [params] WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT` and `BBOX` will be set\n * dynamically. `CRS` (`SRS` for WMS version < 1.3.0) will is derived from the `proection` config.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is 'EPSG:3857'.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {string} url WMS service URL.\n * @property {function(HTMLImageElement, string): Promise<import('../DataTile.js').ImageLike>} [load] Function\n * to perform loading of the image. Receives the created `HTMLImageElement` and the desired `src` as argument and\n * returns a promise resolving to the loaded or decoded image. Default is {@link module:ol/Image.decode}.\n */\n\n/**\n * Creates a loader for WMS images.\n * @param {LoaderOptions} options Loader options.\n * @return {import(\"../Image.js\").ImageObjectPromiseLoader} Loader.\n * @api\n */\nexport function createLoader(options) {\n  const hidpi = options.hidpi === undefined ? true : options.hidpi;\n  const projection = getProjection(options.projection || 'EPSG:3857');\n  const ratio = options.ratio || 1.5;\n  const load = options.load || decode;\n\n  /**\n   * @type {import(\"../Image.js\").Loader}\n   */\n  return (extent, resolution, pixelRatio) => {\n    extent = getRequestExtent(extent, resolution, pixelRatio, ratio);\n    if (pixelRatio != 1 && (!hidpi || options.serverType === undefined)) {\n      pixelRatio = 1;\n    }\n    const src = getImageSrc(\n      extent,\n      resolution,\n      pixelRatio,\n      projection,\n      options.url,\n      getRequestParams(options.params, 'GetMap'),\n      options.serverType,\n    );\n    const image = new Image();\n    if (options.crossOrigin !== null) {\n      image.crossOrigin = options.crossOrigin;\n    }\n    return load(image, src).then((image) => ({image, extent, pixelRatio}));\n  };\n}\n\n/**\n * Get the GetFeatureInfo URL for the passed coordinate and resolution. Returns `undefined` if the\n * GetFeatureInfo URL cannot be constructed.\n * @param {LoaderOptions} options Options passed the `createWMSLoader()` function. In addition to\n * the params required by the loader, `INFO_FORMAT` should be specified, it defaults to\n * `application/json`. If `QUERY_LAYERS` is not provided, then the layers specified in the `LAYERS`\n * parameter will be used.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nexport function getFeatureInfoUrl(options, coordinate, resolution) {\n  if (options.url === undefined) {\n    return undefined;\n  }\n\n  const projectionObj = getProjection(options.projection || 'EPSG:3857');\n\n  const extent = getForViewAndSize(\n    coordinate,\n    resolution,\n    0,\n    GETFEATUREINFO_IMAGE_SIZE,\n  );\n\n  const baseParams = {\n    'QUERY_LAYERS': options.params['LAYERS'],\n    'INFO_FORMAT': 'application/json',\n  };\n  Object.assign(\n    baseParams,\n    getRequestParams(options.params, 'GetFeatureInfo'),\n    options.params,\n  );\n\n  const x = floor((coordinate[0] - extent[0]) / resolution, DECIMALS);\n  const y = floor((extent[3] - coordinate[1]) / resolution, DECIMALS);\n  const v13 = compareVersions(baseParams['VERSION'], '1.3') >= 0;\n  baseParams[v13 ? 'I' : 'X'] = x;\n  baseParams[v13 ? 'J' : 'Y'] = y;\n\n  return getRequestUrl(\n    options.url,\n    extent,\n    GETFEATUREINFO_IMAGE_SIZE,\n    projectionObj,\n    baseParams,\n  );\n}\n\n/**\n * Get the GetLegendGraphic URL, optionally optimized for the passed resolution and possibly\n * including any passed specific parameters. Returns `undefined` if the GetLegendGraphic URL\n * cannot be constructed.\n *\n * @param {LoaderOptions} options Options passed the `createWMSLoader()` function.\n * @param {number} [resolution] Resolution. If not provided, `SCALE` will not be calculated and\n * included in URL.\n * @return {string|undefined} GetLegendGraphic URL.\n * @api\n */\nexport function getLegendUrl(options, resolution) {\n  if (options.url === undefined) {\n    return undefined;\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_VERSION,\n    'REQUEST': 'GetLegendGraphic',\n    'FORMAT': 'image/png',\n  };\n\n  if (options.params === undefined || options.params['LAYER'] === undefined) {\n    const layers = options.params.LAYERS;\n    const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n    if (!isSingleLayer) {\n      return undefined;\n    }\n    baseParams['LAYER'] = layers;\n  }\n\n  if (resolution !== undefined) {\n    const mpu =\n      getProjection(options.projection || 'EPSG:3857').getMetersPerUnit() || 1;\n    const pixelSize = 0.00028;\n    baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n  }\n\n  Object.assign(baseParams, options.params);\n\n  return appendParams(options.url, baseParams);\n}\n","/**\n * @module ol/source/ogcTileUtil\n */\n\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport {getJSON, resolveUrl} from '../net.js';\nimport {get as getProjection} from '../proj.js';\nimport {getIntersection as intersectExtents} from '../extent.js';\nimport {error as logError} from '../console.js';\n\n/**\n * See https://ogcapi.ogc.org/tiles/.\n */\n\n/**\n * @typedef {'map' | 'vector'} TileType\n */\n\n/**\n * @typedef {'topLeft' | 'bottomLeft'} CornerOfOrigin\n */\n\n/**\n * @typedef {Object} TileSet\n * @property {TileType} dataType Type of data represented in the tileset.\n * @property {string} [tileMatrixSetDefinition] Reference to a tile matrix set definition.\n * @property {TileMatrixSet} [tileMatrixSet] Tile matrix set definition.\n * @property {Array<TileMatrixSetLimit>} [tileMatrixSetLimits] Tile matrix set limits.\n * @property {Array<Link>} links Tileset links.\n */\n\n/**\n * @typedef {Object} Link\n * @property {string} rel The link rel attribute.\n * @property {string} href The link URL.\n * @property {string} type The link type.\n */\n\n/**\n * @typedef {Object} TileMatrixSetLimit\n * @property {string} tileMatrix The tile matrix id.\n * @property {number} minTileRow The minimum tile row.\n * @property {number} maxTileRow The maximum tile row.\n * @property {number} minTileCol The minimum tile column.\n * @property {number} maxTileCol The maximum tile column.\n */\n\n/**\n * @typedef {Object} TileMatrixSet\n * @property {string} id The tile matrix set identifier.\n * @property {string} crs The coordinate reference system.\n * @property {Array<string>} [orderedAxes] Axis order.\n * @property {Array<TileMatrix>} tileMatrices Array of tile matrices.\n */\n\n/**\n * @typedef {Object} TileMatrix\n * @property {string} id The tile matrix identifier.\n * @property {number} cellSize The pixel resolution (map units per pixel).\n * @property {Array<number>} pointOfOrigin The map location of the matrix origin.\n * @property {CornerOfOrigin} [cornerOfOrigin='topLeft'] The corner of the matrix that represents the origin ('topLeft' or 'bottomLeft').\n * @property {number} matrixWidth The number of columns.\n * @property {number} matrixHeight The number of rows.\n * @property {number} tileWidth The pixel width of a tile.\n * @property {number} tileHeight The pixel height of a tile.\n */\n\n/**\n * @type {Object<string, boolean>}\n */\nconst knownMapMediaTypes = {\n  'image/png': true,\n  'image/jpeg': true,\n  'image/gif': true,\n  'image/webp': true,\n};\n\n/**\n * @type {Object<string, boolean>}\n */\nconst knownVectorMediaTypes = {\n  'application/vnd.mapbox-vector-tile': true,\n  'application/geo+json': true,\n};\n\n/**\n * @typedef {Object} TileSetInfo\n * @property {string} urlTemplate The tile URL template.\n * @property {import(\"../tilegrid/TileGrid.js\").default} grid The tile grid.\n * @property {import(\"../Tile.js\").UrlFunction} urlFunction The tile URL function.\n */\n\n/**\n * @typedef {Object} SourceInfo\n * @property {string} url The tile set URL.\n * @property {string} mediaType The preferred tile media type.\n * @property {Array<string>} [supportedMediaTypes] The supported media types.\n * @property {import(\"../proj/Projection.js\").default} projection The source projection.\n * @property {Object} [context] Optional context for constructing the URL.\n * @property {Array<string>} [collections] Optional collections to append the URL with.\n */\n\n/**\n * @param {string} tileUrlTemplate Tile URL template.\n * @param {Array<string>} collections List of collections to include as query parameter.\n * @return {string} The tile URL template with appended collections query parameter.\n */\nexport function appendCollectionsQueryParam(tileUrlTemplate, collections) {\n  if (!collections.length) {\n    return tileUrlTemplate;\n  }\n\n  // making sure we can always construct a URL instance.\n  const url = new URL(tileUrlTemplate, 'file:/');\n\n  if (url.pathname.split('/').includes('collections')) {\n    logError(\n      'The \"collections\" query parameter cannot be added to collection endpoints',\n    );\n    return tileUrlTemplate;\n  }\n  // According to conformance class\n  // http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/collections-selection\n  // commata in the identifiers of the `collections` query parameter\n  // need to be URLEncoded, while the commata separating the identifiers\n  // should not.\n  const encodedCollections = collections\n    .map((c) => encodeURIComponent(c))\n    .join(',');\n\n  url.searchParams.append('collections', encodedCollections);\n  const baseUrl = tileUrlTemplate.split('?')[0];\n  const queryParams = decodeURIComponent(url.searchParams.toString());\n  return `${baseUrl}?${queryParams}`;\n}\n\n/**\n * @param {Array<Link>} links Tileset links.\n * @param {string} [mediaType] The preferred media type.\n * @param {Array<string>} [collections] Optional collections to append the URL with.\n * @return {string} The tile URL template.\n */\nexport function getMapTileUrlTemplate(links, mediaType, collections) {\n  let tileUrlTemplate;\n  let fallbackUrlTemplate;\n  for (let i = 0; i < links.length; ++i) {\n    const link = links[i];\n    if (link.rel === 'item') {\n      if (link.type === mediaType) {\n        tileUrlTemplate = link.href;\n        break;\n      }\n      if (knownMapMediaTypes[link.type]) {\n        fallbackUrlTemplate = link.href;\n      } else if (!fallbackUrlTemplate && link.type.startsWith('image/')) {\n        fallbackUrlTemplate = link.href;\n      }\n    }\n  }\n\n  if (!tileUrlTemplate) {\n    if (fallbackUrlTemplate) {\n      tileUrlTemplate = fallbackUrlTemplate;\n    } else {\n      throw new Error('Could not find \"item\" link');\n    }\n  }\n\n  if (collections) {\n    tileUrlTemplate = appendCollectionsQueryParam(tileUrlTemplate, collections);\n  }\n\n  return tileUrlTemplate;\n}\n\n/**\n * @param {Array<Link>} links Tileset links.\n * @param {string} [mediaType] The preferred media type.\n * @param {Array<string>} [supportedMediaTypes] The media types supported by the parser.\n * @param {Array<string>} [collections] Optional collections to append the URL with.\n * @return {string} The tile URL template.\n */\nexport function getVectorTileUrlTemplate(\n  links,\n  mediaType,\n  supportedMediaTypes,\n  collections,\n) {\n  let tileUrlTemplate;\n  let fallbackUrlTemplate;\n\n  /**\n   * Lookup of URL by media type.\n   * @type {Object<string, string>}\n   */\n  const hrefLookup = {};\n\n  for (let i = 0; i < links.length; ++i) {\n    const link = links[i];\n    hrefLookup[link.type] = link.href;\n    if (link.rel === 'item') {\n      if (link.type === mediaType) {\n        tileUrlTemplate = link.href;\n        break;\n      }\n      if (knownVectorMediaTypes[link.type]) {\n        fallbackUrlTemplate = link.href;\n      }\n    }\n  }\n\n  if (!tileUrlTemplate && supportedMediaTypes) {\n    for (let i = 0; i < supportedMediaTypes.length; ++i) {\n      const supportedMediaType = supportedMediaTypes[i];\n      if (hrefLookup[supportedMediaType]) {\n        tileUrlTemplate = hrefLookup[supportedMediaType];\n        break;\n      }\n    }\n  }\n\n  if (!tileUrlTemplate) {\n    if (fallbackUrlTemplate) {\n      tileUrlTemplate = fallbackUrlTemplate;\n    } else {\n      throw new Error('Could not find \"item\" link');\n    }\n  }\n\n  if (collections) {\n    tileUrlTemplate = appendCollectionsQueryParam(tileUrlTemplate, collections);\n  }\n\n  return tileUrlTemplate;\n}\n\n/**\n * @param {SourceInfo} sourceInfo The source info.\n * @param {TileMatrixSet} tileMatrixSet Tile matrix set.\n * @param {string} tileUrlTemplate Tile URL template.\n * @param {Array<TileMatrixSetLimit>} [tileMatrixSetLimits] Tile matrix set limits.\n * @return {TileSetInfo} Tile set info.\n */\nfunction parseTileMatrixSet(\n  sourceInfo,\n  tileMatrixSet,\n  tileUrlTemplate,\n  tileMatrixSetLimits,\n) {\n  let projection = sourceInfo.projection;\n  if (!projection) {\n    projection = getProjection(tileMatrixSet.crs);\n    if (!projection) {\n      throw new Error(`Unsupported CRS: ${tileMatrixSet.crs}`);\n    }\n  }\n  const orderedAxes = tileMatrixSet.orderedAxes;\n  const backwards =\n    (orderedAxes\n      ? orderedAxes\n          .slice(0, 2)\n          .map((s) => s.replace(/E|X|Lon/i, 'e').replace(/N|Y|Lat/i, 'n'))\n          .join('')\n      : projection.getAxisOrientation().substr(0, 2)) !== 'en';\n\n  const matrices = tileMatrixSet.tileMatrices;\n\n  /**\n   * @type {Object<string, TileMatrix>}\n   */\n  const matrixLookup = {};\n  for (let i = 0; i < matrices.length; ++i) {\n    const matrix = matrices[i];\n    matrixLookup[matrix.id] = matrix;\n  }\n\n  /**\n   * @type {Object<string, TileMatrixSetLimit>}\n   */\n  const limitLookup = {};\n\n  /**\n   * @type {Array<string>}\n   */\n  const matrixIds = [];\n\n  if (tileMatrixSetLimits) {\n    for (let i = 0; i < tileMatrixSetLimits.length; ++i) {\n      const limit = tileMatrixSetLimits[i];\n      const id = limit.tileMatrix;\n      matrixIds.push(id);\n      limitLookup[id] = limit;\n    }\n  } else {\n    for (let i = 0; i < matrices.length; ++i) {\n      const id = matrices[i].id;\n      matrixIds.push(id);\n    }\n  }\n\n  const length = matrixIds.length;\n  const origins = new Array(length);\n  const resolutions = new Array(length);\n  const sizes = new Array(length);\n  const tileSizes = new Array(length);\n  const extent = [-Infinity, -Infinity, Infinity, Infinity];\n\n  for (let i = 0; i < length; ++i) {\n    const id = matrixIds[i];\n    const matrix = matrixLookup[id];\n    const origin = matrix.pointOfOrigin;\n    if (backwards) {\n      origins[i] = [origin[1], origin[0]];\n    } else {\n      origins[i] = origin;\n    }\n    resolutions[i] = matrix.cellSize;\n    sizes[i] = [matrix.matrixWidth, matrix.matrixHeight];\n    tileSizes[i] = [matrix.tileWidth, matrix.tileHeight];\n    const limit = limitLookup[id];\n    if (limit) {\n      const tileMapWidth = matrix.cellSize * matrix.tileWidth;\n      const minX = origins[i][0] + limit.minTileCol * tileMapWidth;\n      const maxX = origins[i][0] + (limit.maxTileCol + 1) * tileMapWidth;\n\n      const tileMapHeight = matrix.cellSize * matrix.tileHeight;\n      const upsideDown = matrix.cornerOfOrigin === 'bottomLeft';\n\n      let minY;\n      let maxY;\n      if (upsideDown) {\n        minY = origins[i][1] + limit.minTileRow * tileMapHeight;\n        maxY = origins[i][1] + (limit.maxTileRow + 1) * tileMapHeight;\n      } else {\n        minY = origins[i][1] - (limit.maxTileRow + 1) * tileMapHeight;\n        maxY = origins[i][1] - limit.minTileRow * tileMapHeight;\n      }\n\n      intersectExtents(extent, [minX, minY, maxX, maxY], extent);\n    }\n  }\n\n  const tileGrid = new TileGrid({\n    origins: origins,\n    resolutions: resolutions,\n    sizes: sizes,\n    tileSizes: tileSizes,\n    extent: tileMatrixSetLimits ? extent : undefined,\n  });\n\n  const context = sourceInfo.context;\n  const base = sourceInfo.url;\n\n  /** @type {import('../Tile.js').UrlFunction} */\n  function tileUrlFunction(tileCoord, pixelRatio, projection) {\n    if (!tileCoord) {\n      return undefined;\n    }\n\n    const id = matrixIds[tileCoord[0]];\n    const matrix = matrixLookup[id];\n    const upsideDown = matrix.cornerOfOrigin === 'bottomLeft';\n\n    const localContext = {\n      tileMatrix: id,\n      tileCol: tileCoord[1],\n      tileRow: upsideDown ? -tileCoord[2] - 1 : tileCoord[2],\n    };\n\n    if (tileMatrixSetLimits) {\n      const limit = limitLookup[matrix.id];\n      if (\n        localContext.tileCol < limit.minTileCol ||\n        localContext.tileCol > limit.maxTileCol ||\n        localContext.tileRow < limit.minTileRow ||\n        localContext.tileRow > limit.maxTileRow\n      ) {\n        return undefined;\n      }\n    }\n\n    Object.assign(localContext, context);\n\n    const url = tileUrlTemplate.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n      return localContext[p];\n    });\n\n    return resolveUrl(base, url);\n  }\n\n  return {\n    grid: tileGrid,\n    urlTemplate: tileUrlTemplate,\n    urlFunction: tileUrlFunction,\n  };\n}\n\n/**\n * @param {SourceInfo} sourceInfo The source info.\n * @param {TileSet} tileSet Tile set.\n * @return {TileSetInfo|Promise<TileSetInfo>} Tile set info.\n */\nfunction parseTileSetMetadata(sourceInfo, tileSet) {\n  const tileMatrixSetLimits = tileSet.tileMatrixSetLimits;\n  /** @type {string} */\n  let tileUrlTemplate;\n\n  if (tileSet.dataType === 'map') {\n    tileUrlTemplate = getMapTileUrlTemplate(\n      tileSet.links,\n      sourceInfo.mediaType,\n      sourceInfo.collections,\n    );\n  } else if (tileSet.dataType === 'vector') {\n    tileUrlTemplate = getVectorTileUrlTemplate(\n      tileSet.links,\n      sourceInfo.mediaType,\n      sourceInfo.supportedMediaTypes,\n      sourceInfo.collections,\n    );\n  } else {\n    throw new Error('Expected tileset data type to be \"map\" or \"vector\"');\n  }\n\n  if (tileSet.tileMatrixSet) {\n    return parseTileMatrixSet(\n      sourceInfo,\n      tileSet.tileMatrixSet,\n      tileUrlTemplate,\n      tileMatrixSetLimits,\n    );\n  }\n\n  const tileMatrixSetLink = tileSet.links.find(\n    (link) =>\n      link.rel === 'http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme',\n  );\n  if (!tileMatrixSetLink) {\n    throw new Error(\n      'Expected http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme link or tileMatrixSet',\n    );\n  }\n  const tileMatrixSetDefinition = tileMatrixSetLink.href;\n\n  const url = resolveUrl(sourceInfo.url, tileMatrixSetDefinition);\n  return getJSON(url).then(function (tileMatrixSet) {\n    return parseTileMatrixSet(\n      sourceInfo,\n      tileMatrixSet,\n      tileUrlTemplate,\n      tileMatrixSetLimits,\n    );\n  });\n}\n\n/**\n * @param {SourceInfo} sourceInfo Source info.\n * @return {Promise<TileSetInfo>} Tile set info.\n */\nexport function getTileSetInfo(sourceInfo) {\n  return getJSON(sourceInfo.url).then(function (tileSet) {\n    return parseTileSetMetadata(sourceInfo, tileSet);\n  });\n}\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(getSharedCanvasContext2D(), {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.instructions_[this.zIndex + this.offset_].push(args);\n    return this;\n  };\n\n  /**\n   * Push a function that renders to the context directly.\n   * @param {function(CanvasRenderingContext2D): void} render Function.\n   */\n  pushFunction(render) {\n    this.instructions_[this.zIndex + this.offset_].push(render);\n  }\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; ++i) {\n        const property = instructionsAtIndex[i];\n        if (typeof property === 'function') {\n          property(context);\n          continue;\n        }\n        const instructionAtIndex = instructionsAtIndex[++i];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getHeight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @protected\n   */\n  prepareContainer(frameState, target) {\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    if (!this.containerReused) {\n      const canvas = this.context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        this.context.clearRect(0, 0, width, height);\n      }\n      if (canvasTransform !== canvas.style.transform) {\n        canvas.style.transform = canvasTransform;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../Image.js\").default}\n     */\n    this.image_ = null;\n  }\n\n  /**\n   * @return {import('../../DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return !this.image_ ? null : this.image_.getImage();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection),\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection,\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image_ = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image_ = null;\n          }\n        }\n      } else {\n        this.image_ = null;\n      }\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image_.getExtent();\n    const img = this.image_.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth),\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight),\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const [imageResolutionX, imageResolutionY] = Array.isArray(imageResolution)\n      ? imageResolution\n      : [imageResolution, imageResolution];\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scaleX =\n      (pixelRatio * imageResolutionX) / (viewResolution * imagePixelRatio);\n    const scaleY =\n      (pixelRatio * imageResolutionY) / (viewResolution * imagePixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const context = this.getRenderContext(frameState);\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection,\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scaleX,\n      scaleY,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolutionX,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolutionY,\n    );\n\n    this.renderedResolution = (imageResolutionY * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      if (opacity !== 1) {\n        context.save();\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.restore();\n      }\n    }\n    this.postRender(this.context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection,\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ,\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent,\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent,\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    const context = this.getRenderContext(frameState);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]],\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition,\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload(),\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey],\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        ),\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback,\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/source/Raster\n */\nimport Disposable from '../Disposable.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport ImageLayer from '../layer/Image.js';\nimport ImageSource from './Image.js';\nimport Source from './Source.js';\nimport TileLayer from '../layer/Tile.js';\nimport TileQueue from '../TileQueue.js';\nimport TileSource from './Tile.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {create as createTransform} from '../transform.js';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport {getUid} from '../util.js';\n\nlet hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet context;\n\n/**\n * @param {Uint8ClampedArray} data Image data.\n * @param {number} width Number of columns.\n * @param {number} height Number of rows.\n * @return {ImageData} Image data.\n */\nexport function newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  }\n\n  if (!context) {\n    context = document.createElement('canvas').getContext('2d');\n  }\n  const imageData = context.createImageData(width, height);\n  imageData.data.set(data);\n  return imageData;\n}\n\n/**\n * @typedef {Object} MinionData\n * @property {Array<ArrayBuffer>} buffers Array of buffers.\n * @property {Object} meta Operation metadata.\n * @property {boolean} imageOps The operation is an image operation.\n * @property {number} width The width of the image.\n * @property {number} height The height of the image.\n */\n\n/* istanbul ignore next */\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(MinionData):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  let workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    }\n    return {data: data, width: width, height: height};\n  }\n\n  return function (data) {\n    // bracket notation for minification support\n    const buffers = data['buffers'];\n    const meta = data['meta'];\n    const imageOps = data['imageOps'];\n    const width = data['width'];\n    const height = data['height'];\n\n    const numBuffers = buffers.length;\n    const numBytes = buffers[0].byteLength;\n\n    if (imageOps) {\n      const images = new Array(numBuffers);\n      for (let b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n          new Uint8ClampedArray(buffers[b]),\n          width,\n          height,\n        );\n      }\n      const output = operation(images, meta).data;\n      return output.buffer;\n    }\n\n    const output = new Uint8ClampedArray(numBytes);\n    const arrays = new Array(numBuffers);\n    const pixels = new Array(numBuffers);\n    for (let b = 0; b < numBuffers; ++b) {\n      arrays[b] = new Uint8ClampedArray(buffers[b]);\n      pixels[b] = [0, 0, 0, 0];\n    }\n    for (let i = 0; i < numBytes; i += 4) {\n      for (let j = 0; j < numBuffers; ++j) {\n        const array = arrays[j];\n        pixels[j][0] = array[i];\n        pixels[j][1] = array[i + 1];\n        pixels[j][2] = array[i + 2];\n        pixels[j][3] = array[i + 3];\n      }\n      const pixel = operation(pixels, meta);\n      output[i] = pixel[0];\n      output[i + 1] = pixel[1];\n      output[i + 2] = pixel[2];\n      output[i + 3] = pixel[3];\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {ProcessorOptions} config Processor options.\n * @param {function(MessageEvent): void} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  const lib = Object.keys(config.lib || {}).map(function (name) {\n    return 'const ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  const lines = lib.concat([\n    'const __minion__ = (' + createMinion.toString() + ')(',\n    config.operation.toString(),\n    ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  const buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});',\n  ]);\n\n  const worker = new Worker(\n    typeof Blob === 'undefined'\n      ? 'data:text/javascript;base64,' +\n        Buffer.from(lines.join('\\n'), 'binary').toString('base64')\n      : URL.createObjectURL(new Blob(lines, {type: 'text/javascript'})),\n  );\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * @typedef {Object} FauxMessageEvent\n * @property {Object} data Message data.\n */\n\n/**\n * Create a faux worker for running operations.\n * @param {ProcessorOptions} config Configuration.\n * @param {function(FauxMessageEvent): void} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  const minion = createMinion(config.operation);\n  let terminated = false;\n  return {\n    postMessage: function (data) {\n      setTimeout(function () {\n        if (terminated) {\n          return;\n        }\n        onMessage({data: {buffer: minion(data), meta: data['meta']}});\n      }, 0);\n    },\n    terminate: function () {\n      terminated = true;\n    },\n  };\n}\n\n/**\n * @typedef {function(Error, ImageData, (Object|Array<Object>)): void} JobCallback\n */\n\n/**\n * @typedef {Object} Job\n * @property {Object} meta Job metadata.\n * @property {Array<ImageData>} inputs Array of input data.\n * @property {JobCallback} callback Called when the job is complete.\n */\n\n/**\n * @typedef {Object} ProcessorOptions\n * @property {number} threads Number of workers to spawn.\n * @property {Operation} operation The operation.\n * @property {Object<string, Function>} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} queue The number of queued jobs to allow.\n * @property {boolean} [imageOps=false] Pass all the image data to the operation instead of a single pixel.\n */\n\n/**\n * @classdesc\n * A processor runs pixel or image operations in workers.\n */\nexport class Processor extends Disposable {\n  /**\n   * @param {ProcessorOptions} config Configuration.\n   */\n  constructor(config) {\n    super();\n\n    this._imageOps = !!config.imageOps;\n    let threads;\n    if (config.threads === 0) {\n      threads = 0;\n    } else if (this._imageOps) {\n      threads = 1;\n    } else {\n      threads = config.threads || 1;\n    }\n\n    /**\n     * @type {Array<Worker>}\n     */\n    const workers = new Array(threads);\n    if (threads) {\n      for (let i = 0; i < threads; ++i) {\n        workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n      }\n    } else {\n      workers[0] = createFauxWorker(\n        config,\n        this._onWorkerMessage.bind(this, 0),\n      );\n    }\n    this._workers = workers;\n\n    /**\n     * @type {Array<Job>}\n     * @private\n     */\n    this._queue = [];\n\n    this._maxQueueLength = config.queue || Infinity;\n    this._running = 0;\n\n    /**\n     * @type {Object<number, any>}\n     * @private\n     */\n    this._dataLookup = {};\n\n    /**\n     * @type {Job}\n     * @private\n     */\n    this._job = null;\n  }\n\n  /**\n   * Run operation on input data.\n   * @param {Array<ImageData>} inputs Array of image data.\n   * @param {Object} meta A user data object.  This is passed to all operations\n   *     and must be serializable.\n   * @param {function(Error, ImageData, Object): void} callback Called when work\n   *     completes.  The first argument is any error.  The second is the ImageData\n   *     generated by operations.  The third is the user data object.\n   */\n  process(inputs, meta, callback) {\n    this._enqueue({\n      inputs: inputs,\n      meta: meta,\n      callback: callback,\n    });\n    this._dispatch();\n  }\n\n  /**\n   * Add a job to the queue.\n   * @param {Job} job The job.\n   */\n  _enqueue(job) {\n    this._queue.push(job);\n    while (this._queue.length > this._maxQueueLength) {\n      this._queue.shift().callback(null, null);\n    }\n  }\n\n  /**\n   * Dispatch a job.\n   */\n  _dispatch() {\n    if (this._running || this._queue.length === 0) {\n      return;\n    }\n\n    const job = this._queue.shift();\n    this._job = job;\n    const width = job.inputs[0].width;\n    const height = job.inputs[0].height;\n    const buffers = job.inputs.map(function (input) {\n      return input.data.buffer;\n    });\n    const threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage(\n        {\n          buffers: buffers,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        buffers,\n      );\n      return;\n    }\n\n    const length = job.inputs[0].data.length;\n    const segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (let i = 0; i < threads; ++i) {\n      const offset = i * segmentLength;\n      const slices = [];\n      for (let j = 0, jj = buffers.length; j < jj; ++j) {\n        slices.push(buffers[j].slice(offset, offset + segmentLength));\n      }\n      this._workers[i].postMessage(\n        {\n          buffers: slices,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        slices,\n      );\n    }\n  }\n\n  /**\n   * Handle messages from the worker.\n   * @param {number} index The worker index.\n   * @param {MessageEvent} event The message event.\n   */\n  _onWorkerMessage(index, event) {\n    if (this.disposed) {\n      return;\n    }\n    this._dataLookup[index] = event.data;\n    --this._running;\n    if (this._running === 0) {\n      this._resolveJob();\n    }\n  }\n\n  /**\n   * Resolve a job.  If there are no more worker threads, the processor callback\n   * will be called.\n   */\n  _resolveJob() {\n    const job = this._job;\n    const threads = this._workers.length;\n    let data, meta;\n    if (threads === 1) {\n      data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n      meta = this._dataLookup[0]['meta'];\n    } else {\n      const length = job.inputs[0].data.length;\n      data = new Uint8ClampedArray(length);\n      meta = new Array(threads);\n      const segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (let i = 0; i < threads; ++i) {\n        const buffer = this._dataLookup[i]['buffer'];\n        const offset = i * segmentLength;\n        data.set(new Uint8ClampedArray(buffer), offset);\n        meta[i] = this._dataLookup[i]['meta'];\n      }\n    }\n    this._job = null;\n    this._dataLookup = {};\n    job.callback(\n      null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height),\n      meta,\n    );\n    this._dispatch();\n  }\n\n  /**\n   * Terminate all workers associated with the processor.\n   */\n  disposeInternal() {\n    for (let i = 0; i < this._workers.length; ++i) {\n      this._workers[i].terminate();\n    }\n    this._workers.length = 0;\n  }\n}\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData)\n * and should return a single\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData).\n * The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n\n/**\n * @enum {string}\n */\nconst RasterEventType = {\n  /**\n   * Triggered before operations are run.  Listeners will receive an event object with\n   * a `data` property that can be used to make data available to operations.\n   * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.  Listeners will receive an event object with\n   * a `data` property.  If more than one thread is used, `data` will be an array of\n   * objects.  If a single thread is used, `data` will be a single object.\n   * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations',\n};\n\n/**\n * @typedef {'pixel' | 'image'} RasterOperationType\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n */\n\n/**\n * @typedef {import(\"./Image.js\").ImageSourceEventTypes|'beforeoperations'|'afteroperations'} RasterSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster~RasterSource} instances are instances of this\n * type.\n */\nexport class RasterSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Object|Array<Object>} data An object made available to operations.  For \"afteroperations\" evenets\n   * this will be an array of objects if more than one thread is used.\n   */\n  constructor(type, frameState, data) {\n    super(type);\n\n    /**\n     * The raster extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n * @property {Array<number>|null} [resolutions] Resolutions. If specified, raster operations will only\n * be run at the given resolutions.  By default, the resolutions of the first source with resolutions\n * specified will be used, if any. Set to `null` to use any view resolution instead.\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Image.js\").ImageSourceEventTypes, import(\"./Image.js\").ImageSourceEvent, Return> &\n *   import(\"../Observable\").OnSignature<RasterSourceEventTypes, RasterSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |RasterSourceEventTypes, Return>} RasterSourceOnSignature\n */\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nclass RasterSource extends ImageSource {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      projection: null,\n    });\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {RasterSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Processor}\n     */\n    this.processor_ = null;\n\n    /**\n     * @private\n     * @type {RasterOperationType}\n     */\n    this.operationType_ =\n      options.operationType !== undefined ? options.operationType : 'pixel';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array<import(\"../layer/Layer.js\").default>}\n     */\n    this.layers_ = createLayers(options.sources);\n\n    const changed = this.changed.bind(this);\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      this.layers_[i].addEventListener(EventType.CHANGE, changed);\n    }\n\n    /** @type {boolean} */\n    this.useResolutions_ = options.resolutions !== null;\n\n    /**\n     * @private\n     * @type {import(\"../TileQueue.js\").default}\n     */\n    this.tileQueue_ = new TileQueue(function () {\n      return 1;\n    }, this.processSources_.bind(this));\n\n    /**\n     * The most recently requested frame state.\n     * @type {import(\"../Map.js\").FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {import(\"../ImageCanvas.js\").default}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      declutter: null,\n      extent: null,\n      index: 0,\n      layerIndex: 0,\n      layerStatesArray: getLayerStatesArray(this.layers_),\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {import(\"../View.js\").State} */ ({\n        rotation: 0,\n      }),\n      viewHints: [],\n      wantedTiles: {},\n      mapId: getUid(this),\n      renderTargets: {},\n    };\n\n    this.setAttributions(function (frameState) {\n      const attributions = [];\n      for (\n        let index = 0, iMax = options.sources.length;\n        index < iMax;\n        ++index\n      ) {\n        const sourceOrLayer = options.sources[index];\n        const source =\n          sourceOrLayer instanceof Source\n            ? sourceOrLayer\n            : sourceOrLayer.getSource();\n        if (!source) {\n          continue;\n        }\n        const attributionGetter = source.getAttributions();\n        if (typeof attributionGetter === 'function') {\n          const sourceAttribution = attributionGetter(frameState);\n          attributions.push.apply(attributions, sourceAttribution);\n        }\n      }\n      return attributions.length !== 0 ? attributions : null;\n    });\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n  }\n\n  /**\n   * Set the operation.\n   * @param {Operation} operation New operation.\n   * @param {Object} [lib] Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  setOperation(operation, lib) {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n\n    this.processor_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === 'image',\n      queue: 1,\n      lib: lib,\n      threads: this.threads_,\n    });\n    this.changed();\n  }\n\n  /**\n   * Update the stored frame state.\n   * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n   * @return {import(\"../Map.js\").FrameState} The updated frame state.\n   * @private\n   */\n  updateFrameState_(extent, resolution, projection) {\n    const frameState = /** @type {import(\"../Map.js\").FrameState} */ (\n      Object.assign({}, this.frameState_)\n    );\n\n    frameState.viewState = /** @type {import(\"../View.js\").State} */ (\n      Object.assign({}, frameState.viewState)\n    );\n\n    const center = getCenter(extent);\n\n    frameState.size[0] = Math.ceil(getWidth(extent) / resolution);\n    frameState.size[1] = Math.ceil(getHeight(extent) / resolution);\n    frameState.extent = [\n      center[0] - (frameState.size[0] * resolution) / 2,\n      center[1] - (frameState.size[1] * resolution) / 2,\n      center[0] + (frameState.size[0] * resolution) / 2,\n      center[1] + (frameState.size[1] * resolution) / 2,\n    ];\n    frameState.time = Date.now();\n\n    const viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  }\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  allSourcesReady_() {\n    let ready = true;\n    let source;\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      source = this.layers_[i].getSource();\n      if (!source || source.getState() !== 'ready') {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    this.tileQueue_.loadMoreTiles(16, 16);\n\n    resolution = this.findNearestResolution(resolution);\n    const frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      const renderedResolution = this.renderedImageCanvas_.getResolution();\n      const renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (\n        resolution !== renderedResolution ||\n        !equals(frameState.extent, renderedExtent)\n      ) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (\n      !this.renderedImageCanvas_ ||\n      this.getRevision() !== this.renderedRevision_\n    ) {\n      this.processSources_();\n    }\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  }\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  processSources_() {\n    const frameState = this.requestedFrameState_;\n    const len = this.layers_.length;\n    const imageDatas = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      frameState.layerIndex = i;\n      frameState.renderTargets = {};\n      const imageData = getImageData(this.layers_[i], frameState);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    const data = {};\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data),\n    );\n    this.processor_.process(\n      imageDatas,\n      data,\n      this.onWorkerComplete_.bind(this, frameState),\n    );\n  }\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object|Array<Object>} data The user data (or an array if more than one thread).\n   * @private\n   */\n  onWorkerComplete_(frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    if (\n      resolution !== this.requestedFrameState_.viewState.resolution ||\n      !equals(extent, this.requestedFrameState_.extent)\n    ) {\n      return;\n    }\n\n    let context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      const width = Math.round(getWidth(extent) / resolution);\n      const height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(\n        extent,\n        resolution,\n        1,\n        context.canvas,\n      );\n    }\n    context.putImageData(output, 0, 0);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    } else {\n      this.changed();\n    }\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data),\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    if (!this.useResolutions_) {\n      return null;\n    }\n    let resolutions = super.getResolutions();\n    if (!resolutions) {\n      for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n        const source = this.layers_[i].getSource();\n        resolutions = source.getResolutions(projection);\n        if (resolutions) {\n          break;\n        }\n      }\n    }\n    return resolutions;\n  }\n\n  disposeInternal() {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n    super.disposeInternal();\n  }\n}\n\n/**\n * Clean up and unregister the worker.\n * @function\n * @api\n */\nRasterSource.prototype.dispose;\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nlet sharedContext = null;\n\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState) {\n  const renderer = layer.getRenderer();\n  if (!renderer) {\n    throw new Error('Unsupported layer type: ' + layer);\n  }\n\n  if (!renderer.prepareFrame(frameState)) {\n    return null;\n  }\n  const width = frameState.size[0];\n  const height = frameState.size[1];\n  if (width === 0 || height === 0) {\n    return null;\n  }\n  const container = renderer.renderFrame(frameState, null);\n  let element;\n  if (container instanceof HTMLCanvasElement) {\n    element = container;\n  } else {\n    if (container) {\n      element = container.firstElementChild;\n    }\n    if (!(element instanceof HTMLCanvasElement)) {\n      throw new Error('Unsupported rendered element: ' + element);\n    }\n    if (element.width === width && element.height === height) {\n      const context = element.getContext('2d');\n      return context.getImageData(0, 0, width, height);\n    }\n  }\n\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height, undefined, {\n      willReadFrequently: true,\n    });\n  } else {\n    const canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height, undefined, {\n        willReadFrequently: true,\n      });\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  sharedContext.drawImage(element, 0, 0, width, height);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n  return layers.map(function (layer) {\n    return layer.getLayerState();\n  });\n}\n\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n  const len = sources.length;\n  const layers = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    layers[i] = createLayer(sources[i]);\n  }\n  return layers;\n}\n\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n  // @type {import(\"../layer/Layer.js\").default}\n  let layer;\n  if (layerOrSource instanceof Source) {\n    if (layerOrSource instanceof TileSource) {\n      layer = new TileLayer({source: layerOrSource});\n    } else if (layerOrSource instanceof ImageSource) {\n      layer = new ImageLayer({source: layerOrSource});\n    }\n  } else {\n    layer = layerOrSource;\n  }\n  return layer;\n}\n\nexport default RasterSource;\n","/**\n * @module ol/source/StadiaMaps\n */\n\nimport XYZ from './XYZ.js';\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from './OSM.js';\n\n/**\n * @const\n * @type string\n */\nconst STADIA_ATTRIBUTION =\n  '&copy; <a href=\"https://www.stadiamaps.com/\" target=\"_blank\">Stadia Maps</a>';\n\n/**\n * @const\n * @type string\n */\nconst OMT_ATTRIBUTION =\n  '&copy; <a href=\"https://openmaptiles.org/\" target=\"_blank\">OpenMapTiles</a>';\n\n/**\n * @const\n * @type string\n */\nconst STAMEN_ATTRIBUTION =\n  '&copy; <a href=\"https://stamen.com/\" target=\"_blank\">Stamen Design</a>';\n\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nconst LayerConfig = {\n  'stamen_terrain': {\n    extension: 'png',\n    opaque: true,\n  },\n  'stamen_terrain_background': {\n    extension: 'png',\n    opaque: true,\n  },\n  'stamen_terrain_labels': {\n    extension: 'png',\n    opaque: false,\n  },\n  'stamen_terrain_lines': {\n    extension: 'png',\n    opaque: false,\n  },\n  'stamen_toner_background': {\n    extension: 'png',\n    opaque: true,\n  },\n  'stamen_toner': {\n    extension: 'png',\n    opaque: true,\n  },\n  'stamen_toner_labels': {\n    extension: 'png',\n    opaque: false,\n  },\n  'stamen_toner_lines': {\n    extension: 'png',\n    opaque: false,\n  },\n  'stamen_toner_lite': {\n    extension: 'png',\n    opaque: true,\n  },\n  'stamen_watercolor': {\n    extension: 'jpg',\n    opaque: true,\n  },\n  'alidade_smooth': {\n    extension: 'png',\n    opaque: true,\n  },\n  'alidade_smooth_dark': {\n    extension: 'png',\n    opaque: true,\n  },\n  'alidade_satellite': {\n    extension: 'png',\n    opaque: true,\n  },\n  'outdoors': {\n    extension: 'png',\n    opaque: true,\n  },\n  'osm_bright': {\n    extension: 'png',\n    opaque: true,\n  },\n};\n\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number, retina: boolean}>}\n */\nconst ProviderConfig = {\n  'stamen_terrain': {\n    minZoom: 0,\n    maxZoom: 18,\n    retina: true,\n  },\n  'stamen_toner': {\n    minZoom: 0,\n    maxZoom: 20,\n    retina: true,\n  },\n  'stamen_watercolor': {\n    minZoom: 1,\n    maxZoom: 18,\n    retina: false,\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {string} layer Layer name. Valid values: `alidade_smooth`, `alidade_smooth_dark`, `outdoors`, `stamen_terrain`, `stamen_terrain_background`, `stamen_terrain_labels`, `stamen_terrain_lines`, `stamen_toner_background`, `stamen_toner`, `stamen_toner_labels`, `stamen_toner_lines`, `stamen_toner_lite`, `stamen_watercolor`, and `osm_bright`.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n * @property {string} [apiKey] Stadia Maps API key. Not required for localhost or most public web deployments. See https://docs.stadiamaps.com/authentication/ for details.\n * @property {boolean} [retina] Use retina tiles (if available; not available for Stamen Watercolor).\n */\n\n/**\n * @classdesc\n * Layer source for the Stadia Maps tile server.\n * @api\n */\nclass StadiaMaps extends XYZ {\n  /**\n   * @param {Options} options StadiaMaps options.\n   */\n  constructor(options) {\n    const i = options.layer.indexOf('-');\n    const provider = i == -1 ? options.layer : options.layer.slice(0, i);\n    const providerConfig = ProviderConfig[provider] || {\n      'minZoom': 0,\n      'maxZoom': 20,\n      'retina': true,\n    };\n\n    const layerConfig = LayerConfig[options.layer];\n    const query = options.apiKey ? '?api_key=' + options.apiKey : '';\n    const retina = providerConfig.retina && options.retina ? '@2x' : '';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tiles.stadiamaps.com/tiles/' +\n          options.layer +\n          '/{z}/{x}/{y}' +\n          retina +\n          '.' +\n          layerConfig.extension +\n          query;\n\n    const attributions = [STADIA_ATTRIBUTION, OMT_ATTRIBUTION, OSM_ATTRIBUTION];\n\n    if (options.layer.startsWith('stamen_')) {\n      attributions.splice(1, 0, STAMEN_ATTRIBUTION);\n    }\n\n    super({\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: options.interpolate,\n      maxZoom:\n        options.maxZoom !== undefined\n          ? options.maxZoom\n          : providerConfig.maxZoom,\n      minZoom:\n        options.minZoom !== undefined\n          ? options.minZoom\n          : providerConfig.minZoom,\n      opaque: layerConfig.opaque,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      tilePixelRatio: retina ? 2 : 1,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default StadiaMaps;\n","/**\n * @module ol/source/UTFGrid\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileSource from './Tile.js';\nimport TileState from '../TileState.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {listenOnce} from '../events.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @typedef {Object} UTFGridJSON\n * @property {Array<string>} grid The grid.\n * @property {Array<string>} keys The keys.\n * @property {Object<string, Object>} [data] Optional data.\n */\n\nexport class CustomTile extends Tile {\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {import(\"../extent.js\").Extent} extent Extent of the tile.\n   * @param {boolean} preemptive Load the tile when visible (before it's needed).\n   * @param {boolean} jsonp Load the tile as a script.\n   */\n  constructor(tileCoord, state, src, extent, preemptive, jsonp) {\n    super(tileCoord, state);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = preemptive;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.grid_ = null;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.keys_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Object>|undefined}\n     */\n    this.data_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = jsonp;\n  }\n\n  /**\n   * Get the image element for this tile.\n   * @return {HTMLImageElement} Image.\n   */\n  getImage() {\n    return null;\n  }\n\n  /**\n   * Synchronously returns data at given coordinate (if available).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {*} The data.\n   */\n  getData(coordinate) {\n    if (!this.grid_ || !this.keys_) {\n      return null;\n    }\n    const xRelative =\n      (coordinate[0] - this.extent_[0]) / (this.extent_[2] - this.extent_[0]);\n    const yRelative =\n      (coordinate[1] - this.extent_[1]) / (this.extent_[3] - this.extent_[1]);\n\n    const row = this.grid_[Math.floor((1 - yRelative) * this.grid_.length)];\n\n    if (typeof row !== 'string') {\n      return null;\n    }\n\n    let code = row.charCodeAt(Math.floor(xRelative * row.length));\n    if (code >= 93) {\n      code--;\n    }\n    if (code >= 35) {\n      code--;\n    }\n    code -= 32;\n\n    let data = null;\n    if (code in this.keys_) {\n      const id = this.keys_[code];\n      if (this.data_ && id in this.data_) {\n        data = this.data_[id];\n      } else {\n        data = id;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate (or `null` if not yet loaded).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(*): void} callback Callback.\n   * @param {boolean} [request] If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   */\n  forDataAtCoordinate(coordinate, callback, request) {\n    if (this.state == TileState.EMPTY && request === true) {\n      this.state = TileState.IDLE;\n      listenOnce(\n        this,\n        EventType.CHANGE,\n        function (e) {\n          callback(this.getData(coordinate));\n        },\n        this,\n      );\n      this.loadInternal_();\n    } else {\n      if (request === true) {\n        setTimeout(() => {\n          callback(this.getData(coordinate));\n        }, 0);\n      } else {\n        callback(this.getData(coordinate));\n      }\n    }\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.src_;\n  }\n\n  /**\n   * @private\n   */\n  handleError_() {\n    this.state = TileState.ERROR;\n    this.changed();\n  }\n\n  /**\n   * @param {!UTFGridJSON} json UTFGrid data.\n   * @private\n   */\n  handleLoad_(json) {\n    this.grid_ = json['grid'];\n    this.keys_ = json['keys'];\n    this.data_ = json['data'];\n\n    this.state = TileState.LOADED;\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  loadInternal_() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      if (this.jsonp_) {\n        requestJSONP(\n          this.src_,\n          this.handleLoad_.bind(this),\n          this.handleError_.bind(this),\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', this.src_);\n        client.send();\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {!UTFGridJSON} */ (\n          JSON.parse(client.responseText)\n        );\n      } catch (err) {\n        this.handleError_();\n        return;\n      }\n      this.handleLoad_(response);\n    } else {\n      this.handleError_();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleError_();\n  }\n\n  /**\n   */\n  load() {\n    if (this.preemptive_) {\n      this.loadInternal_();\n    } else {\n      this.setState(TileState.EMPTY);\n    }\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [preemptive=true]\n * If `true` the UTFGrid source loads the tiles based on their \"visibility\".\n * This improves the speed of response, but increases traffic.\n * Note that if set to `false` (lazy loading), you need to pass `true` as\n * `request` to the `forDataAtCoordinateAndResolution` method otherwise no\n * data will ever be loaded.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {import(\"./TileJSON.js\").Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {string} [url] TileJSON endpoint that provides the configuration for this source.\n * Request will be made through JSONP. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for UTFGrid interaction data loaded from TileJSON format.\n * @api\n */\nclass UTFGrid extends TileSource {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super({\n      projection: getProjection('EPSG:3857'),\n      state: 'loading',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ =\n      options.preemptive !== undefined ? options.preemptive : true;\n\n    /**\n     * @private\n     * @type {!import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction_ = nullTileUrlFunction;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.template_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = options.jsonp || false;\n\n    if (options.url) {\n      if (this.jsonp_) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this),\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      throw new Error('Either `url` or `tileJSON` options must be provided');\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {import(\"./TileJSON.js\").Config} */ (\n          JSON.parse(client.responseText)\n        );\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * Return the template from TileJSON.\n   * @return {string|undefined} The template from TileJSON.\n   * @api\n   */\n  getTemplate() {\n    return this.template_;\n  }\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate and resolution (or `null` if not yet loaded or\n   * in case of an error).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {function(*): void} callback Callback.\n   * @param {boolean} [request] If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   * @api\n   */\n  forDataAtCoordinateAndResolution(coordinate, resolution, callback, request) {\n    if (this.tileGrid) {\n      const z = this.tileGrid.getZForResolution(resolution, this.zDirection);\n      const tileCoord = this.tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = /** @type {!CustomTile} */ (\n        this.getTile(\n          tileCoord[0],\n          tileCoord[1],\n          tileCoord[2],\n          1,\n          this.getProjection(),\n        )\n      );\n      tile.forDataAtCoordinate(coordinate, callback, request);\n    } else {\n      if (request === true) {\n        setTimeout(function () {\n          callback(null);\n        }, 0);\n      } else {\n        callback(null);\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n\n  /**\n   * TODO: very similar to ol/source/TileJSON#handleTileJSONResponse\n   * @protected\n   * @param {import(\"./TileJSON.js\").Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection,\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n    });\n    this.tileGrid = tileGrid;\n\n    this.template_ = tileJSON['template'];\n\n    const grids = tileJSON['grids'];\n    if (!grids) {\n      this.setState('error');\n      return;\n    }\n\n    this.tileUrlFunction_ = createFromTemplates(grids, tileGrid);\n\n    if (tileJSON['attribution']) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n\n    this.setState('ready');\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!CustomTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return this.tileCache.get(tileCoordKey);\n    }\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = this.tileUrlFunction_(urlTileCoord, pixelRatio, projection);\n    const tile = new CustomTile(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.tileGrid.getTileCoordExtent(tileCoord),\n      this.preemptive_,\n      this.jsonp_,\n    );\n    this.tileCache.set(tileCoordKey, tile);\n    return tile;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UTFGrid;\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml.makeChildAppender} or\n * {@link module:ol/xml.makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Element} node Node.\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack,\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack,\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack,\n      );\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack,\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        let array;\n        if (name in object) {\n          array = object[name];\n        } else {\n          array = [];\n          object[name] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack,\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        object[name] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, thisArg) {\n  return function (node, value, objectStack) {\n    nodeWriter.call(\n      thisArg !== undefined ? thisArg : this,\n      node,\n      value,\n      objectStack,\n    );\n    const parent = /** @type {NodeStackItem} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml.serialize}. This can be used by the parent writer to have the\n * `nodeWriter` called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, thisArg) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `keys` passed to\n * {@link module:ol/xml.serialize} or {@link module:ol/xml.pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [fixedNodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [fixedNamespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(fixedNodeName, fixedNamespaceURI) {\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [newNodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, newNodeName) {\n      const context = /** @type {NodeStackItem} */ (\n        objectStack[objectStack.length - 1]\n      );\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = newNodeName;\n      }\n\n      const namespaceURI =\n        fixedNamespaceURI !== undefined ? fixedNamespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, structureNS) {\n  structureNS = structureNS !== undefined ? structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, thisArg) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(thisArg, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, thisArg) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, thisArg);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg,\n) {\n  const length = (keys !== undefined ? keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        thisArg !== undefined ? thisArg : this,\n        value,\n        objectStack,\n        keys !== undefined ? keys[i] : undefined,\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          thisArg,\n          node,\n          value,\n          objectStack,\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg,\n) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, keys, thisArg);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n","/**\n * @module ol/vec/mat4\n */\n\n/**\n * @return {Array<number>} \"4x4 matrix representing a 3D identity transform.\"\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} \"2D transformation matrix as flattened 4x4 matrix.\"\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n","/**\n * @module ol/style/flat\n */\n\n/**\n * @api\n * @fileoverview Vector layers can be styled with an object literal containing properties for\n * stroke, fill, image, and text styles.  The types below can be composed into a single object.\n * For example, a style with both stroke and fill properties could look like this:\n *\n *     const style = {\n *       'stroke-color': 'yellow',\n *       'stroke-width': 1.5,\n *       'fill-color': 'orange',\n *     };\n *\n * See details about the available properties depending on what type of symbolizer should be applied:\n *  * {@link module:ol/style/flat~FlatStroke Stroke} - properties for applying a stroke to lines and polygons\n *  * {@link module:ol/style/flat~FlatFill Fill} - properties for filling polygons\n *  * {@link module:ol/style/flat~FlatText Text} - properties for labeling points, lines, and polygons\n *  * {@link module:ol/style/flat~FlatIcon Icon} - properties for rendering points with an icon\n *  * {@link module:ol/style/flat~FlatCircle Circle} - properties for rendering points with a circle\n *  * {@link module:ol/style/flat~FlatShape Shape} - properties for rendering points with a regular shape\n *\n * To conditionally apply styles based on a filter, a list of {@link module:ol/style/flat~Rule rules} can be used.\n * For example, to style points with a big orange circle if the population is greater than 1 million and\n * a smaller blue circle otherwise:\n *\n *     const rules = [\n *       {\n *         filter: ['>', ['get', 'population'], 1_000_000],\n *         style: {\n *           'circle-radius': 10,\n *           'circle-fill-color': 'red',\n *         }\n *       },\n *       {\n *         else: true,\n *         style: {\n *           'circle-radius': 5,\n *           'circle-fill-color': 'blue',\n *         },\n *       },\n *     ];\n */\n\n/**\n * A literal boolean (e.g. `true`) or an expression that evaluates to a boolean (e.g. `['>', ['get', 'population'], 1_000_000]`).\n *\n * @typedef {boolean|Array} BooleanExpression\n */\n\n/**\n * A literal string (e.g. `'hello'`) or an expression that evaluates to a string (e.g. `['get', 'greeting']`).\n *\n * @typedef {string|Array} StringExpression\n */\n\n/**\n * A literal number (e.g. `42`) or an expression that evaluates to a number (e.g. `['+', 40, 2]`).\n *\n * @typedef {number|Array} NumberExpression\n */\n\n/**\n * A CSS named color (e.g. `'blue'`), an array of 3 RGB values (e.g. `[0, 255, 0]`), an array of 4 RGBA values\n * (e.g. `[0, 255, 0, 0.5]`), or an expression that evaluates to one of these color types (e.g. `['get', 'color']`).\n *\n * @typedef {import(\"../color.js\").Color|string|Array} ColorExpression\n */\n\n/**\n * An array of numbers (e.g. `[1, 2, 3]`) or an expression that evaluates to the same (e.g. `['get', 'values']`).\n *\n * @typedef {Array<number>|Array} NumberArrayExpression\n */\n\n/**\n * An array of two numbers (e.g. `[10, 20]`) or an expression that evaluates to the same (e.g. `['get', 'size']`).\n *\n * @typedef {number|Array<number>|Array} SizeExpression\n */\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>|Array<Rule>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {ColorExpression} [fill-color] The fill color.\n * @property {StringExpression} [fill-pattern-src] Fill pattern image URL.\n * @property {SizeExpression} [fill-pattern-size] Fill pattern image size in pixels.\n * Can be used together with `fill-pattern-offset` to define the sub-rectangle to use\n * from a fill pattern image sprite sheet.\n * @property {SizeExpression} [fill-pattern-offset] Fill pattern image offset in pixels.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {ColorExpression} [stroke-color] The stroke color.\n * @property {NumberExpression} [stroke-width] Stroke pixel width.\n * @property {StringExpression} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {StringExpression} [text-value] Text content (with `\\n` for line breaks).\n * @property {StringExpression} [text-font='10px sans-serif'] Font style as [CSS `font`](https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font) value.\n * @property {NumberExpression} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {NumberExpression} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {NumberExpression} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {BooleanExpression} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {StringExpression} [text-placement='point'] Text placement.\n * @property {NumberExpression} [text-repeat] Repeat interval in pixels. When set, the text will be repeated at this interval. Only available when\n * `text-placement` is set to `'line'`. Overrides `text-align`.\n * @property {SizeExpression} [text-scale] Scale.\n * @property {BooleanExpression} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {NumberExpression} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {StringExpression} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `'text-placement': 'point'`. For `'text-placement': 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {StringExpression} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `'text-placement': 'line'`.\n * @property {StringExpression} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {NumberArrayExpression} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {ColorExpression} [text-fill-color] The fill color. Specify `'none'` to avoid hit detection on the fill.\n * @property {ColorExpression} [text-background-fill-color] The fill color.\n * @property {ColorExpression} [text-stroke-color] The stroke color.\n * @property {StringExpression} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [text-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [text-stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [text-stroke-width] Stroke pixel width.\n * @property {ColorExpression} [text-background-stroke-color] The stroke color.\n * @property {StringExpression} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [text-background-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [text-background-stroke-width] Stroke pixel width.\n * @property {import(\"./Style.js\").DeclutterMode} [text-declutter-mode] Declutter mode\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Icon style properties applied to point features. `icon-src` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {NumberArrayExpression} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {NumberArrayExpression} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {NumberExpression} [icon-opacity=1] Opacity of the icon.\n * @property {SizeExpression} [icon-scale=1] Scale.\n * @property {number} [icon-width] Width of the icon. If not specified, the actual image width will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-height] Height of the icon. If not specified, the actual image height will be used. Cannot be combined\n * with `scale`.\n * @property {NumberExpression} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {BooleanExpression} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"./Style.js\").DeclutterMode} [icon-declutter-mode] Declutter mode\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {ColorExpression} [shape-fill-color] The fill color.\n * @property {ColorExpression} [shape-stroke-color] The stroke color.\n * @property {NumberExpression} [shape-stroke-width] Stroke pixel width.\n * @property {StringExpression} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [shape-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {NumberArrayExpression} [shape-displacement=[0,0]] Displacement of the shape\n * @property {NumberExpression} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {BooleanExpression} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {SizeExpression} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius` and `shape-radius2`.\n * @property {import(\"./Style.js\").DeclutterMode} [shape-declutter-mode] Declutter mode.\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {ColorExpression} [circle-fill-color] The fill color.\n * @property {ColorExpression} [circle-stroke-color] The stroke color.\n * @property {NumberExpression} [circle-stroke-width] Stroke pixel width.\n * @property {StringExpression} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [circle-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [circle-stroke-miter-limit=10] Miter limit.\n * @property {NumberArrayExpression} [circle-displacement=[0,0]] displacement\n * @property {SizeExpression} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {NumberExpression} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {BooleanExpression} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import(\"./Style.js\").DeclutterMode} [circle-declutter-mode] Declutter mode\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * These default style properties are applied when no other style is given.\n *\n * @typedef {Object} DefaultStyle\n * @property {string} fill-color `'rgba(255,255,255,0.4)'`\n * @property {string} stroke-color `'#3399CC'`\n * @property {number} stroke-width `1.25`\n * @property {number} circle-radius `5`\n * @property {string} circle-fill-color `'rgba(255,255,255,0.4)'`\n * @property {number} circle-stroke-width `1.25`\n * @property {string} circle-stroke-color `'#3399CC'`\n */\n\n/**\n * @return {DefaultStyle} The default flat style.\n */\nexport function createDefaultStyle() {\n  return {\n    'fill-color': 'rgba(255,255,255,0.4)',\n    'stroke-color': '#3399CC',\n    'stroke-width': 1.25,\n    'circle-radius': 5,\n    'circle-fill-color': 'rgba(255,255,255,0.4)',\n    'circle-stroke-width': 1.25,\n    'circle-stroke-color': '#3399CC',\n  };\n}\n\n/**\n * A rule is used to conditionally apply a style.  If the rule's filter evaluates to true,\n * the style will be applied.\n *\n * @typedef {Object} Rule\n * @property {FlatStyle|Array<FlatStyle>} style The style to be applied if the filter matches.\n * @property {import(\"../expr/expression.js\").EncodedExpression} [filter] The filter used\n * to determine if a style applies.  If no filter is included, the rule always applies\n * (unless it is an else rule).\n * @property {boolean} [else] If true, the rule applies only if no other previous rule applies.\n * If the else rule also has a filter, the rule will not apply if the filter does not match.\n */\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {containsCoordinate} from '../../extent.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke,\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, import(\"../../style/Style.js\").DeclutterMode): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(\n              feature,\n              currentGeometry,\n              declutterMode,\n            );\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          context.moveTo(x, y);\n          prevX = (x + 0.5) | 0;\n          prevY = (y + 0.5) | 0;\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true},\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import('../../style/Style.js').DeclutterMode} declutterMode Declutter mode.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry, declutterMode) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            declutterMode === 'none' ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    const maxBuilderTypes = ALL.length;\n    let i, ii, j, jj, replays;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        const replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          if (\n            !zIndexContext ||\n            builderType === 'Text' ||\n            builderType === 'Image'\n          ) {\n            replay.execute(\n              context,\n              scaledCanvasSize,\n              transform,\n              viewRotation,\n              snapToPixel,\n              declutterTree,\n            );\n          } else {\n            zIndexContext.pushFunction((context) =>\n              replay.execute(\n                context,\n                scaledCanvasSize,\n                transform,\n                viewRotation,\n                snapToPixel,\n                declutterTree,\n              ),\n            );\n          }\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const index = zs[i] * maxBuilderTypes + j;\n            if (!this.deferredZIndexContexts_[index]) {\n              this.deferredZIndexContexts_[index] = [];\n            }\n            this.deferredZIndexContexts_[index].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n      deferredZIndexContexts[zs[i]].length = 0;\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup, {\n  ALL,\n  DECLUTTER,\n  NON_DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getHeight,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.clipped_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedPixelRatio_ = 1;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedFrameDeclutter_;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.targetContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} [declutterable] `true` to only render declutterable items,\n   *     `false` to only render non-declutterable items, `undefined` to render all.\n   */\n  renderWorlds(executorGroup, frameState, declutterable) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const declutter = this.getLayer().getDeclutter();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      let transform = this.getRenderTransform(\n        center,\n        resolution,\n        0,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth,\n      );\n      if (frameState.declutter) {\n        transform = transform.slice(0);\n      }\n      executorGroup.execute(\n        context,\n        [context.canvas.width, context.canvas.height],\n        transform,\n        rotation,\n        snapToPixel,\n        declutterable === undefined\n          ? ALL\n          : declutterable\n            ? DECLUTTER\n            : NON_DECLUTTER,\n        declutterable\n          ? declutter && frameState.declutter[declutter]\n          : undefined,\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * @private\n   */\n  setDrawContext_() {\n    if (this.opacity_ !== 1) {\n      this.targetContext_ = this.context;\n      this.context = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetDrawContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.targetContext_.globalAlpha;\n      this.targetContext_.globalAlpha = this.opacity_;\n      this.targetContext_.drawImage(this.context.canvas, 0, 0);\n      this.targetContext_.globalAlpha = alpha;\n      releaseCanvas(this.context);\n      canvasPool.push(this.context.canvas);\n      this.context = this.targetContext_;\n      this.targetContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!this.replayGroup_ || !this.getLayer().getDeclutter()) {\n      return;\n    }\n    this.renderWorlds(this.replayGroup_, frameState, true);\n  }\n\n  /**\n   * Render deferred instructions.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {\n    if (!this.replayGroup_) {\n      return;\n    }\n    this.replayGroup_.renderDeferred();\n    if (this.clipped_) {\n      this.context.restore();\n    }\n    this.resetDrawContext_();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    this.opacity_ = layerState.opacity;\n    const viewState = frameState.viewState;\n\n    this.prepareContainer(frameState, target);\n    const context = this.context;\n\n    const replayGroup = this.replayGroup_;\n    let render = replayGroup && !replayGroup.isEmpty();\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    this.setDrawContext_();\n\n    this.preRender(context, frameState);\n\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    this.clipped_ = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      this.clipped_ = render && !containsExtent(layerExtent, frameState.extent);\n      if (this.clipped_) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(\n        replayGroup,\n        frameState,\n        this.getLayer().getDeclutter() ? false : undefined,\n      );\n    }\n\n    if (!frameState.declutter && this.clipped_) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    if (!frameState.declutter) {\n      this.resetDrawContext_();\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (\n        this.frameState &&\n        !this.hitDetectionImageData_ &&\n        !this.animatingOrInteracting_\n      ) {\n        const size = this.frameState.size.slice();\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0,\n          ).slice(),\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX -= worldWidth;\n          }\n        }\n        const userProjection = getUserProjection();\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation,\n          getSquaredRenderTolerance(resolution, this.renderedPixelRatio_),\n          userProjection ? projection : null,\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_),\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    const declutter = this.getLayer().getDeclutter();\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        declutter && frameState.declutter[declutter]\n          ? frameState.declutter[declutter].all().map((item) => item.value)\n          : null,\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution,\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      this.renderedFrameDeclutter_ === !!frameState.declutter &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio,\n    );\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection,\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @param {number} index Index.\n       */\n      (feature, index) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            this.getLayer().getDeclutter(),\n            index,\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i], i);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer(),\n      !!frameState.declutter,\n    );\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedFrameDeclutter_ = !!frameState.declutter;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.renderedPixelRatio_ = pixelRatio;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/renderer/canvas/VectorImageLayer\n */\nimport CanvasImageLayerRenderer from './ImageLayer.js';\nimport CanvasVectorLayerRenderer from './VectorLayer.js';\nimport EventType from '../../events/EventType.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport ImageState from '../../ImageState.js';\nimport RBush from 'rbush';\nimport ViewHint from '../../ViewHint.js';\nimport {apply, compose, create} from '../../transform.js';\nimport {fromResolutionLike} from '../../resolution.js';\nimport {getHeight, getWidth, isEmpty, scaleFromCenter} from '../../extent.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasVectorImageLayerRenderer extends CanvasImageLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorImage.js\").default} layer Vector image layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = new CanvasVectorLayerRenderer(layer);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.layerImageRatio_ = layer.getImageRatio();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToVectorPixelTransform_ = create();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.vectorRenderer_.dispose();\n    super.disposeInternal();\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.vectorRenderer_) {\n      return Promise.resolve([]);\n    }\n    const vectorPixel = apply(\n      this.coordinateToVectorPixelTransform_,\n      apply(this.renderedPixelToCoordinateTransform_, pixel.slice()),\n    );\n    return this.vectorRenderer_.getFeatures(vectorPixel);\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    this.vectorRenderer_.handleFontsChanged();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const hints = frameState.viewHints;\n    const vectorRenderer = this.vectorRenderer_;\n    let renderedExtent = frameState.extent;\n    if (this.layerImageRatio_ !== 1) {\n      renderedExtent = renderedExtent.slice(0);\n      scaleFromCenter(renderedExtent, this.layerImageRatio_);\n    }\n    const width = getWidth(renderedExtent) / viewResolution;\n    const height = getHeight(renderedExtent) / viewResolution;\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      vectorRenderer.useContainer(null, null);\n      const context = vectorRenderer.context;\n      const layerState = frameState.layerStatesArray[frameState.layerIndex];\n      const imageLayerState = Object.assign({}, layerState, {opacity: 1});\n      const imageFrameState = /** @type {import(\"../../Map.js\").FrameState} */ (\n        Object.assign({}, frameState, {\n          extent: renderedExtent,\n          size: [width, height],\n          viewState: /** @type {import(\"../../View.js\").State} */ (\n            Object.assign({}, frameState.viewState, {\n              rotation: 0,\n            })\n          ),\n          layerStatesArray: [imageLayerState],\n          layerIndex: 0,\n          declutter: null,\n        })\n      );\n      const declutter = this.getLayer().getDeclutter();\n      if (declutter) {\n        imageFrameState.declutter = {\n          [declutter]: new RBush(9),\n        };\n      }\n      let emptyImage = true;\n      const image = new ImageCanvas(\n        renderedExtent,\n        viewResolution,\n        pixelRatio,\n        context.canvas,\n        function (callback) {\n          if (\n            vectorRenderer.prepareFrame(imageFrameState) &&\n            vectorRenderer.replayGroupChanged\n          ) {\n            vectorRenderer.clipping = false;\n            if (vectorRenderer.renderFrame(imageFrameState, null)) {\n              vectorRenderer.renderDeclutter(imageFrameState);\n              vectorRenderer.renderDeferred(imageFrameState);\n              emptyImage = false;\n            }\n            callback();\n          }\n        },\n      );\n\n      image.addEventListener(EventType.CHANGE, () => {\n        if (image.getState() !== ImageState.LOADED) {\n          return;\n        }\n        this.image_ = emptyImage ? null : image;\n        const imagePixelRatio = image.getPixelRatio();\n        const renderedResolution =\n          (fromResolutionLike(image.getResolution()) * pixelRatio) /\n          imagePixelRatio;\n        this.renderedResolution = renderedResolution;\n        this.coordinateToVectorPixelTransform_ = compose(\n          this.coordinateToVectorPixelTransform_,\n          width / 2,\n          height / 2,\n          1 / renderedResolution,\n          -1 / renderedResolution,\n          0,\n          -viewState.center[0],\n          -viewState.center[1],\n        );\n      });\n      image.load();\n    }\n\n    if (this.image_) {\n      this.renderedPixelToCoordinateTransform_ =\n        frameState.pixelToCoordinateTransform.slice();\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   */\n  preRender() {}\n\n  /**\n   */\n  postRender() {}\n\n  /**\n   */\n  renderDeclutter() {}\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(\n        coordinate,\n        frameState,\n        hitTolerance,\n        callback,\n        matches,\n      );\n    }\n    return super.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      callback,\n      matches,\n    );\n  }\n}\n\nexport default CanvasVectorImageLayerRenderer;\n","/**\n * @module ol/proj/proj4\n */\nimport Projection from './Projection.js';\nimport {\n  addCoordinateTransforms,\n  addEquivalentProjections,\n  addProjection,\n  createSafeCoordinateTransform,\n  get,\n} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\n\n/**\n * @type {import(\"proj4\")|null}\n */\nlet registered = null;\n\n/**\n * @return {boolean} Proj4 has been registered.\n */\nexport function isRegistered() {\n  return !!registered;\n}\n\n/**\n * Unsets the shared proj4 previously set with register.\n */\nexport function unregister() {\n  registered = null;\n}\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers. Requires proj4 >= 2.8.0.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {import(\"proj4\")} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  registered = proj4;\n\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      let units = /** @type {import(\"./Units.js\").Units} */ (def.units);\n      if (!units && def.projName === 'longlat') {\n        units = 'degrees';\n      }\n      addProjection(\n        new Projection({\n          code: code,\n          axisOrientation: def.axis,\n          metersPerUnit: def.to_meter,\n          units,\n        }),\n      );\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(\n            proj1,\n            proj2,\n            createSafeCoordinateTransform(proj1, proj2, transform.forward),\n            createSafeCoordinateTransform(proj2, proj1, transform.inverse),\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {number} code The EPSG code.\n * @return {Promise<string>} The proj4 definition.\n */\nlet epsgLookup = async function (code) {\n  const response = await fetch(`https://epsg.io/${code}.proj4`);\n  if (!response.ok) {\n    throw new Error(`Unexpected response from epsg.io: ${response.status}`);\n  }\n  return response.text();\n};\n\n/**\n * Set the lookup function for getting proj4 definitions given an EPSG code.\n * By default, the {@link module:ol/proj/proj4.fromEPSGCode} function uses the\n * epsg.io website for proj4 definitions.  This can be changed by providing a\n * different lookup function.\n *\n * @param {function(number):Promise<string>} func The lookup function.\n * @api\n */\nexport function setEPSGLookup(func) {\n  epsgLookup = func;\n}\n\n/**\n * Get the current EPSG lookup function.\n *\n * @return {function(number):Promise<string>} The EPSG lookup function.\n */\nexport function getEPSGLookup() {\n  return epsgLookup;\n}\n\n/**\n * Get a projection from an EPSG code.  This function fetches the projection\n * definition from the epsg.io website, registers this definition for use with\n * proj4, and returns a configured projection.  You must call import proj4 and\n * call {@link module:ol/proj/proj4.register} before using this function.\n *\n * If the projection definition is already registered with proj4, it will not\n * be fetched again (so it is ok to call this function multiple times with the\n * same code).\n *\n * @param {number|string} code The EPSG code (e.g. 4326 or 'EPSG:4326').\n * @return {Promise<Projection>} The projection.\n * @api\n */\nexport async function fromEPSGCode(code) {\n  if (typeof code === 'string') {\n    code = parseInt(code.split(':').pop(), 10);\n  }\n\n  const proj4 = registered;\n  if (!proj4) {\n    throw new Error('Proj4 must be registered first with register(proj4)');\n  }\n\n  const epsgCode = 'EPSG:' + code;\n  if (proj4.defs(epsgCode)) {\n    return get(epsgCode);\n  }\n\n  proj4.defs(epsgCode, await epsgLookup(code));\n  register(proj4);\n\n  return get(epsgCode);\n}\n\n/**\n * Generate an EPSG lookup function which uses the MapTiler Coordinates API to find projection\n * definitions which do not require proj4 to be configured to handle `+nadgrids` parameters.\n * Call {@link module:ol/proj/proj4.setEPSGLookup} use the function for lookups\n * `setEPSGLookup(epsgLookupMapTiler('{YOUR_MAPTILER_API_KEY_HERE}'))`.\n *\n * @param {string} key MapTiler API key.  Get your own API key at https://www.maptiler.com/cloud/.\n * @return {function(number):Promise<string>} The EPSG lookup function.\n * @api\n */\nexport function epsgLookupMapTiler(key) {\n  return async function (code) {\n    const response = await fetch(\n      `https://api.maptiler.com/coordinates/search/code:${code}.json?transformations=true&exports=true&key=${key}`,\n    );\n    if (!response.ok) {\n      throw new Error(\n        `Unexpected response from maptiler.com: ${response.status}`,\n      );\n    }\n    return response.json().then((json) => {\n      const results = json['results'];\n      if (results?.length > 0) {\n        const result = results.filter(\n          (r) =>\n            r['id']?.['authority'] === 'EPSG' && r['id']?.['code'] === code,\n        )[0];\n        if (result) {\n          const transforms = result['transformations'];\n          if (transforms?.length > 0) {\n            // use default transform if it does not require grids\n            const defaultTransform = result['default_transformation'];\n            if (\n              transforms.filter(\n                (t) =>\n                  t['id']?.['authority'] === defaultTransform?.['authority'] &&\n                  t['id']?.['code'] === defaultTransform?.['code'] &&\n                  t['grids']?.length === 0,\n              ).length > 0\n            ) {\n              return result['exports']?.['proj4'];\n            }\n            // otherwise use most accurate alternative without grids\n            const transform = transforms\n              .filter(\n                (t) =>\n                  t['grids']?.length === 0 &&\n                  t['target_crs']?.['authority'] === 'EPSG' &&\n                  t['target_crs']?.['code'] === 4326 &&\n                  t['deprecated'] === false &&\n                  t['usable'] === true,\n              )\n              .sort((t1, t2) => t1['accuracy'] - t2['accuracy'])[0]?.[\n              'exports'\n            ]?.['proj4'];\n            if (transform) {\n              return transform;\n            }\n          }\n          // fallback to default\n          return result['exports']?.['proj4'];\n        }\n      }\n    });\n  };\n}\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @template {import('../Feature.js').FeatureLike} FeatureType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default<FeatureType>} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature.js').FeatureLike} FeatureType\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default<FeatureType>, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/geom/flat/geodesic\n */\nimport {get as getProjection, getTransform} from '../../proj.js';\nimport {squaredSegmentDistance, toDegrees, toRadians} from '../../math.js';\n\n/**\n * @param {function(number): import(\"../../coordinate.js\").Coordinate} interpolate Interpolate function.\n * @param {import(\"../../proj.js\").TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n  // FIXME reduce garbage generation\n  // FIXME optimize stack operations\n\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n\n  let geoA = interpolate(0);\n  let geoB = interpolate(1);\n\n  let a = transform(geoA);\n  let b = transform(geoB);\n\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const geoStack = [geoB, geoA];\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const stack = [b, a];\n  /** @type {Array<number>} */\n  const fractionStack = [1, 0];\n\n  /** @type {!Object<string, boolean>} */\n  const fractions = {};\n\n  let maxIterations = 1e5;\n  let geoM, m, fracA, fracB, fracM, key;\n\n  while (--maxIterations > 0 && fractionStack.length > 0) {\n    // Pop the a coordinate off the stack\n    fracA = fractionStack.pop();\n    geoA = geoStack.pop();\n    a = stack.pop();\n    // Add the a coordinate if it has not been added yet\n    key = fracA.toString();\n    if (!(key in fractions)) {\n      flatCoordinates.push(a[0], a[1]);\n      fractions[key] = true;\n    }\n    // Pop the b coordinate off the stack\n    fracB = fractionStack.pop();\n    geoB = geoStack.pop();\n    b = stack.pop();\n    // Find the m point between the a and b coordinates\n    fracM = (fracA + fracB) / 2;\n    geoM = interpolate(fracM);\n    m = transform(geoM);\n    if (\n      squaredSegmentDistance(m[0], m[1], a[0], a[1], b[0], b[1]) <\n      squaredTolerance\n    ) {\n      // If the m point is sufficiently close to the straight line, then we\n      // discard it.  Just use the b coordinate and move on to the next line\n      // segment.\n      flatCoordinates.push(b[0], b[1]);\n      key = fracB.toString();\n      fractions[key] = true;\n    } else {\n      // Otherwise, we need to subdivide the current line segment.  Split it\n      // into two and push the two line segments onto the stack.\n      fractionStack.push(fracB, fracM, fracM, fracA);\n      stack.push(b, m, m, a);\n      geoStack.push(geoB, geoM, geoM, geoA);\n    }\n  }\n\n  return flatCoordinates;\n}\n\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function greatCircleArc(\n  lon1,\n  lat1,\n  lon2,\n  lat2,\n  projection,\n  squaredTolerance,\n) {\n  const geoProjection = getProjection('EPSG:4326');\n\n  const cosLat1 = Math.cos(toRadians(lat1));\n  const sinLat1 = Math.sin(toRadians(lat1));\n  const cosLat2 = Math.cos(toRadians(lat2));\n  const sinLat2 = Math.sin(toRadians(lat2));\n  const cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n  const sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n  const d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      if (1 <= d) {\n        return [lon2, lat2];\n      }\n      const D = frac * Math.acos(d);\n      const cosD = Math.cos(D);\n      const sinD = Math.sin(D);\n      const y = sinDeltaLon * cosLat2;\n      const x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n      const theta = Math.atan2(y, x);\n      const lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n      const lon =\n        toRadians(lon1) +\n        Math.atan2(\n          Math.sin(theta) * sinD * cosLat1,\n          cosD - sinLat1 * Math.sin(lat),\n        );\n      return [toDegrees(lon), toDegrees(lat)];\n    },\n    getTransform(geoProjection, projection),\n    squaredTolerance,\n  );\n}\n\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon, lat1 + (lat2 - lat1) * frac];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance,\n  );\n}\n\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon1 + (lon2 - lon1) * frac, lat];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance,\n  );\n}\n","/**\n * @module ol/layer/Graticule\n */\nimport Collection from '../Collection.js';\nimport EventType from '../render/EventType.js';\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport VectorLayer from './Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  applyTransform,\n  approximatelyEquals,\n  containsCoordinate,\n  containsExtent,\n  equals,\n  getCenter,\n  getIntersection,\n  getWidth,\n  intersects,\n  isEmpty,\n  wrapX as wrapExtentX,\n} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {degreesToStringHDMS} from '../coordinate.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n} from '../proj.js';\nimport {getVectorContext} from '../render.js';\nimport {meridian, parallel} from '../geom/flat/geodesic.js';\n\n/**\n * @type {Stroke}\n * @private\n * @const\n */\nconst DEFAULT_STROKE_STYLE = new Stroke({\n  color: 'rgba(0,0,0,0.2)',\n});\n\n/**\n * @type {Array<number>}\n * @private\n */\nconst INTERVALS = [\n  90,\n  45,\n  30,\n  20,\n  10,\n  5,\n  2,\n  1,\n  30 / 60,\n  20 / 60,\n  10 / 60,\n  5 / 60,\n  2 / 60,\n  1 / 60,\n  30 / 3600,\n  20 / 3600,\n  10 / 3600,\n  5 / 3600,\n  2 / 3600,\n  1 / 3600,\n];\n\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {Point} geom Geometry.\n * @property {string} text Text.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {Stroke} [strokeStyle] The\n * stroke style to use for drawing the graticule. If not provided, the following stroke will be used:\n * ```js\n * new Stroke({\n *   color: 'rgba(0, 0, 0, 0.2)' // a not fully opaque black\n * });\n * ```\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n * @property {Array<number>} [intervals=[90, 45, 30, 20, 10, 5, 2, 1, 30/60, 20/60, 10/60, 5/60, 2/60, 1/60, 30/3600, 20/3600, 10/3600, 5/3600, 2/3600, 1/3600]]\n * Intervals (in degrees) for the graticule. Example to limit graticules to 30 and 10 degrees intervals:\n * ```js\n * [30, 10]\n * ```\n * @property {boolean} [wrapX=true] Whether to repeat the graticule horizontally.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer that renders a grid for a coordinate system (currently only EPSG:4326 is supported).\n * Note that the view projection must define both extent and worldExtent.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {VectorLayer<Feature>}\n * @api\n */\nclass Graticule extends VectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign(\n      {\n        updateWhileAnimating: true,\n        updateWhileInteracting: true,\n        renderBuffer: 0,\n      },\n      options,\n    );\n\n    delete baseOptions.maxLines;\n    delete baseOptions.strokeStyle;\n    delete baseOptions.targetSize;\n    delete baseOptions.showLabels;\n    delete baseOptions.lonLabelFormatter;\n    delete baseOptions.latLabelFormatter;\n    delete baseOptions.lonLabelPosition;\n    delete baseOptions.latLabelPosition;\n    delete baseOptions.lonLabelStyle;\n    delete baseOptions.latLabelStyle;\n    delete baseOptions.intervals;\n    super(baseOptions);\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLat_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLon_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLat_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLon_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxX_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxY_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minX_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minY_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.targetSize_ =\n      options.targetSize !== undefined ? options.targetSize : 100;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.meridians_ = [];\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.parallels_ = [];\n\n    /**\n     * @type {Stroke}\n     * @private\n     */\n    this.strokeStyle_ =\n      options.strokeStyle !== undefined\n        ? options.strokeStyle\n        : DEFAULT_STROKE_STYLE;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.fromLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.toLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.projectionCenterLonLat_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomRight_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topRight_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.meridiansLabels_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.parallelsLabels_ = null;\n\n    if (options.showLabels) {\n      /**\n       * @type {null|function(number):string}\n       * @private\n       */\n      this.lonLabelFormatter_ =\n        options.lonLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'EW')\n          : options.lonLabelFormatter;\n\n      /**\n       * @type {function(number):string}\n       * @private\n       */\n      this.latLabelFormatter_ =\n        options.latLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'NS')\n          : options.latLabelFormatter;\n\n      /**\n       * Longitude label position in fractions (0..1) of view extent. 0 means\n       * bottom, 1 means top.\n       * @type {number}\n       * @private\n       */\n      this.lonLabelPosition_ =\n        options.lonLabelPosition == undefined ? 0 : options.lonLabelPosition;\n\n      /**\n       * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n       * means right.\n       * @type {number}\n       * @private\n       */\n      this.latLabelPosition_ =\n        options.latLabelPosition == undefined ? 1 : options.latLabelPosition;\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.lonLabelStyleBase_ = new Style({\n        text:\n          options.lonLabelStyle !== undefined\n            ? options.lonLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textBaseline: 'bottom',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.lonLabelStyle_ = (feature) => {\n        const label = feature.get('graticule_label');\n        this.lonLabelStyleBase_.getText().setText(label);\n        return this.lonLabelStyleBase_;\n      };\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.latLabelStyleBase_ = new Style({\n        text:\n          options.latLabelStyle !== undefined\n            ? options.latLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textAlign: 'right',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.latLabelStyle_ = (feature) => {\n        const label = feature.get('graticule_label');\n        this.latLabelStyleBase_.getText().setText(label);\n        return this.latLabelStyleBase_;\n      };\n\n      this.meridiansLabels_ = [];\n      this.parallelsLabels_ = [];\n\n      this.addEventListener(EventType.POSTRENDER, this.drawLabels_.bind(this));\n    }\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.intervals_ =\n      options.intervals !== undefined ? options.intervals : INTERVALS;\n\n    // use a source with a custom loader for lines & text\n    this.setSource(\n      new VectorSource({\n        loader: this.loaderFunction.bind(this),\n        strategy: this.strategyFunction.bind(this),\n        features: new Collection(),\n        overlaps: false,\n        useSpatialIndex: false,\n        wrapX: options.wrapX,\n      }),\n    );\n\n    /**\n     * feature pool to use when updating graticule\n     * @type {Array<Feature>}\n     * @private\n     */\n    this.featurePool_ = [];\n\n    /**\n     * @type {Style}\n     * @private\n     */\n    this.lineStyle_ = new Style({\n      stroke: this.strokeStyle_,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.loadedExtent_ = null;\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.renderedResolution_ = null;\n\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Strategy function for loading features based on the view's extent and\n   * resolution.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @return {Array<import(\"../extent.js\").Extent>} Extents.\n   */\n  strategyFunction(extent, resolution) {\n    // extents may be passed in different worlds, to avoid endless loop we use only one\n    let realWorldExtent = extent.slice();\n    if (this.projection_ && this.getSource().getWrapX()) {\n      wrapExtentX(realWorldExtent, this.projection_);\n    }\n    if (this.loadedExtent_) {\n      if (\n        approximatelyEquals(this.loadedExtent_, realWorldExtent, resolution)\n      ) {\n        // make sure result is exactly equal to previous extent\n        realWorldExtent = this.loadedExtent_.slice();\n      } else {\n        // we should not keep track of loaded extents\n        this.getSource().removeLoadedExtent(this.loadedExtent_);\n      }\n    }\n    return [realWorldExtent];\n  }\n\n  /**\n   * Update geometries in the source based on current view\n   * @param {import(\"../extent\").Extent} extent Extent\n   * @param {number} resolution Resolution\n   * @param {import(\"../proj/Projection.js\").default} projection Projection\n   */\n  loaderFunction(extent, resolution, projection) {\n    this.loadedExtent_ = extent;\n    const source = this.getSource();\n\n    // only consider the intersection between our own extent & the requested one\n    const layerExtent = this.getExtent() || [\n      -Infinity,\n      -Infinity,\n      Infinity,\n      Infinity,\n    ];\n    const renderExtent = getIntersection(layerExtent, extent);\n\n    if (\n      this.renderedExtent_ &&\n      equals(this.renderedExtent_, renderExtent) &&\n      this.renderedResolution_ === resolution\n    ) {\n      return;\n    }\n    this.renderedExtent_ = renderExtent;\n    this.renderedResolution_ = resolution;\n\n    // bail out if nothing to render\n    if (isEmpty(renderExtent)) {\n      return;\n    }\n\n    // update projection info\n    const center = getCenter(renderExtent);\n    const squaredTolerance = (resolution * resolution) / 4;\n\n    const updateProjectionInfo =\n      !this.projection_ || !equivalentProjection(this.projection_, projection);\n\n    if (updateProjectionInfo) {\n      this.updateProjectionInfo_(projection);\n    }\n\n    this.createGraticule_(renderExtent, center, resolution, squaredTolerance);\n\n    // first make sure we have enough features in the pool\n    let featureCount = this.meridians_.length + this.parallels_.length;\n    if (this.meridiansLabels_) {\n      featureCount += this.meridians_.length;\n    }\n    if (this.parallelsLabels_) {\n      featureCount += this.parallels_.length;\n    }\n\n    let feature;\n    while (featureCount > this.featurePool_.length) {\n      feature = new Feature();\n      this.featurePool_.push(feature);\n    }\n\n    const featuresColl = source.getFeaturesCollection();\n    featuresColl.clear();\n    let poolIndex = 0;\n\n    // add features for the lines & labels\n    let i, l;\n    for (i = 0, l = this.meridians_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.meridians_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n    for (i = 0, l = this.parallels_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.parallels_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, index) {\n    const lineString = this.getMeridian_(\n      lon,\n      minLat,\n      maxLat,\n      squaredTolerance,\n      index,\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.meridiansLabels_) {\n        const text = this.lonLabelFormatter_(lon);\n        if (index in this.meridiansLabels_) {\n          this.meridiansLabels_[index].text = text;\n        } else {\n          this.meridiansLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.meridians_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addParallel_(lat, minLon, maxLon, squaredTolerance, extent, index) {\n    const lineString = this.getParallel_(\n      lat,\n      minLon,\n      maxLon,\n      squaredTolerance,\n      index,\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.parallelsLabels_) {\n        const text = this.latLabelFormatter_(lat);\n        if (index in this.parallelsLabels_) {\n          this.parallelsLabels_[index].text = text;\n        } else {\n          this.parallelsLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.parallels_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {import(\"../render/Event.js\").default} event Render event.\n   * @private\n   */\n  drawLabels_(event) {\n    const rotation = event.frameState.viewState.rotation;\n    const resolution = event.frameState.viewState.resolution;\n    const size = event.frameState.size;\n    const extent = event.frameState.extent;\n    const rotationCenter = getCenter(extent);\n    let rotationExtent = extent;\n    if (rotation) {\n      const unrotatedWidth = size[0] * resolution;\n      const unrotatedHeight = size[1] * resolution;\n      rotationExtent = [\n        rotationCenter[0] - unrotatedWidth / 2,\n        rotationCenter[1] - unrotatedHeight / 2,\n        rotationCenter[0] + unrotatedWidth / 2,\n        rotationCenter[1] + unrotatedHeight / 2,\n      ];\n    }\n\n    let startWorld = 0;\n    let endWorld = 0;\n    let labelsAtStart = this.latLabelPosition_ < 0.5;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      startWorld = Math.floor((extent[0] - projectionExtent[0]) / worldWidth);\n      endWorld = Math.ceil((extent[2] - projectionExtent[2]) / worldWidth);\n      const inverted = Math.abs(rotation) > Math.PI / 2;\n      labelsAtStart = labelsAtStart !== inverted;\n    }\n    const vectorContext = getVectorContext(event);\n\n    for (let world = startWorld; world <= endWorld; ++world) {\n      let poolIndex = this.meridians_.length + this.parallels_.length;\n      let feature, index, l, textPoint;\n\n      if (this.meridiansLabels_) {\n        for (index = 0, l = this.meridiansLabels_.length; index < l; ++index) {\n          const lineString = this.meridians_[index];\n          if (!rotation && world === 0) {\n            textPoint = this.getMeridianPoint_(lineString, extent, index);\n          } else {\n            const clone = lineString.clone();\n            clone.translate(world * worldWidth, 0);\n            clone.rotate(-rotation, rotationCenter);\n            textPoint = this.getMeridianPoint_(clone, rotationExtent, index);\n            textPoint.rotate(rotation, rotationCenter);\n          }\n          feature = this.featurePool_[poolIndex++];\n          feature.setGeometry(textPoint);\n          feature.set('graticule_label', this.meridiansLabels_[index].text);\n          vectorContext.drawFeature(feature, this.lonLabelStyle_(feature));\n        }\n      }\n      if (this.parallelsLabels_) {\n        if (\n          (world === startWorld && labelsAtStart) ||\n          (world === endWorld && !labelsAtStart)\n        ) {\n          for (index = 0, l = this.parallels_.length; index < l; ++index) {\n            const lineString = this.parallels_[index];\n            if (!rotation && world === 0) {\n              textPoint = this.getParallelPoint_(lineString, extent, index);\n            } else {\n              const clone = lineString.clone();\n              clone.translate(world * worldWidth, 0);\n              clone.rotate(-rotation, rotationCenter);\n              textPoint = this.getParallelPoint_(clone, rotationExtent, index);\n              textPoint.rotate(rotation, rotationCenter);\n            }\n            feature = this.featurePool_[poolIndex++];\n            feature.setGeometry(textPoint);\n            feature.set('graticule_label', this.parallelsLabels_[index].text);\n            vectorContext.drawFeature(feature, this.latLabelStyle_(feature));\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @private\n   */\n  createGraticule_(extent, center, resolution, squaredTolerance) {\n    const interval = this.getInterval_(resolution);\n    if (interval == -1) {\n      this.meridians_.length = 0;\n      this.parallels_.length = 0;\n      if (this.meridiansLabels_) {\n        this.meridiansLabels_.length = 0;\n      }\n      if (this.parallelsLabels_) {\n        this.parallelsLabels_.length = 0;\n      }\n      return;\n    }\n\n    let wrapX = false;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      if (getWidth(extent) >= worldWidth) {\n        extent[0] = projectionExtent[0];\n        extent[2] = projectionExtent[2];\n      } else {\n        wrapX = true;\n      }\n    }\n\n    // Constrain the center to fit into the extent available to the graticule\n\n    const validCenterP = [\n      clamp(center[0], this.minX_, this.maxX_),\n      clamp(center[1], this.minY_, this.maxY_),\n    ];\n\n    // Transform the center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    const centerLonLat = this.toLonLatTransform_(validCenterP);\n    if (isNaN(centerLonLat[1])) {\n      centerLonLat[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n    let centerLon = clamp(centerLonLat[0], this.minLon_, this.maxLon_);\n    let centerLat = clamp(centerLonLat[1], this.minLat_, this.maxLat_);\n    const maxLines = this.maxLines_;\n    let cnt, idx, lat, lon;\n\n    // Limit the extent to fit into the extent available to the graticule\n\n    let validExtentP = extent;\n    if (!wrapX) {\n      validExtentP = [\n        clamp(extent[0], this.minX_, this.maxX_),\n        clamp(extent[1], this.minY_, this.maxY_),\n        clamp(extent[2], this.minX_, this.maxX_),\n        clamp(extent[3], this.minY_, this.maxY_),\n      ];\n    }\n\n    // Transform the extent to get the lon lat ranges for the edges of the extent\n\n    const validExtent = applyTransform(\n      validExtentP,\n      this.toLonLatTransform_,\n      undefined,\n      8,\n    );\n\n    let maxLat = validExtent[3];\n    let maxLon = validExtent[2];\n    let minLat = validExtent[1];\n    let minLon = validExtent[0];\n\n    if (!wrapX) {\n      // Check if extremities of the world extent lie inside the extent\n      // (for example the pole in a polar projection)\n      // and extend the extent as appropriate\n\n      if (containsCoordinate(validExtentP, this.bottomLeft_)) {\n        minLon = this.minLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.bottomRight_)) {\n        maxLon = this.maxLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topLeft_)) {\n        minLon = this.minLon_;\n        maxLat = this.maxLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topRight_)) {\n        maxLon = this.maxLon_;\n        maxLat = this.maxLat_;\n      }\n\n      // The transformed center may also extend the lon lat ranges used for rendering\n\n      maxLat = clamp(maxLat, centerLat, this.maxLat_);\n      maxLon = clamp(maxLon, centerLon, this.maxLon_);\n      minLat = clamp(minLat, this.minLat_, centerLat);\n      minLon = clamp(minLon, this.minLon_, centerLon);\n    }\n\n    // Create meridians\n\n    centerLon = Math.floor(centerLon / interval) * interval;\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon -= interval) >= minLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx,\n        );\n      }\n    } else {\n      while (lon != this.minLon_ && cnt++ < maxLines) {\n        lon = Math.max(lon - interval, this.minLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx,\n        );\n      }\n    }\n\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon += interval) <= maxLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx,\n        );\n      }\n    } else {\n      while (lon != this.maxLon_ && cnt++ < maxLines) {\n        lon = Math.min(lon + interval, this.maxLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx,\n        );\n      }\n    }\n\n    this.meridians_.length = idx;\n    if (this.meridiansLabels_) {\n      this.meridiansLabels_.length = idx;\n    }\n\n    // Create parallels\n\n    centerLat = Math.floor(centerLat / interval) * interval;\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    while (lat != this.minLat_ && cnt++ < maxLines) {\n      lat = Math.max(lat - interval, this.minLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx,\n      );\n    }\n\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    cnt = 0;\n    while (lat != this.maxLat_ && cnt++ < maxLines) {\n      lat = Math.min(lat + interval, this.maxLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx,\n      );\n    }\n\n    this.parallels_.length = idx;\n    if (this.parallelsLabels_) {\n      this.parallelsLabels_.length = idx;\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @return {number} The interval in degrees.\n   * @private\n   */\n  getInterval_(resolution) {\n    const centerLon = this.projectionCenterLonLat_[0];\n    const centerLat = this.projectionCenterLonLat_[1];\n    let interval = -1;\n    const target = Math.pow(this.targetSize_ * resolution, 2);\n    /** @type {Array<number>} **/\n    const p1 = [];\n    /** @type {Array<number>} **/\n    const p2 = [];\n    for (let i = 0, ii = this.intervals_.length; i < ii; ++i) {\n      const delta = clamp(this.intervals_[i] / 2, 0, 90);\n      // Don't attempt to transform latitudes beyond the poles!\n      const clampedLat = clamp(centerLat, -90 + delta, 90 - delta);\n      p1[0] = centerLon - delta;\n      p1[1] = clampedLat - delta;\n      p2[0] = centerLon + delta;\n      p2[1] = clampedLat + delta;\n      this.fromLonLatTransform_(p1, p1);\n      this.fromLonLatTransform_(p2, p2);\n      const dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n      if (dist <= target) {\n        break;\n      }\n      interval = this.intervals_[i];\n    }\n    return interval;\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The meridian line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getMeridian_(lon, minLat, maxLat, squaredTolerance, index) {\n    const flatCoordinates = meridian(\n      lon,\n      minLat,\n      maxLat,\n      this.projection_,\n      squaredTolerance,\n    );\n    let lineString = this.meridians_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n      this.meridians_[index] = lineString;\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Meridian\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Meridian point.\n   * @private\n   */\n  getMeridianPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let bottom = 1;\n    let top = flatCoordinates.length - 1;\n    if (flatCoordinates[bottom] > flatCoordinates[top]) {\n      bottom = top;\n      top = 1;\n    }\n    const clampedBottom = Math.max(extent[1], flatCoordinates[bottom]);\n    const clampedTop = Math.min(extent[3], flatCoordinates[top]);\n    const lat = clamp(\n      extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\n      clampedBottom,\n      clampedTop,\n    );\n    const coordinate0 =\n      flatCoordinates[bottom - 1] +\n      ((flatCoordinates[top - 1] - flatCoordinates[bottom - 1]) *\n        (lat - flatCoordinates[bottom])) /\n        (flatCoordinates[top] - flatCoordinates[bottom]);\n    const coordinate = [coordinate0, lat];\n    const point = this.meridiansLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of meridians.  Meridians are lines of equal longitude.\n   * @return {Array<LineString>} The meridians.\n   * @api\n   */\n  getMeridians() {\n    return this.meridians_;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The parallel line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getParallel_(lat, minLon, maxLon, squaredTolerance, index) {\n    const flatCoordinates = parallel(\n      lat,\n      minLon,\n      maxLon,\n      this.projection_,\n      squaredTolerance,\n    );\n    let lineString = this.parallels_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Parallels.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Parallel point.\n   * @private\n   */\n  getParallelPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let left = 0;\n    let right = flatCoordinates.length - 2;\n    if (flatCoordinates[left] > flatCoordinates[right]) {\n      left = right;\n      right = 0;\n    }\n    const clampedLeft = Math.max(extent[0], flatCoordinates[left]);\n    const clampedRight = Math.min(extent[2], flatCoordinates[right]);\n    const lon = clamp(\n      extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\n      clampedLeft,\n      clampedRight,\n    );\n    const coordinate1 =\n      flatCoordinates[left + 1] +\n      ((flatCoordinates[right + 1] - flatCoordinates[left + 1]) *\n        (lon - flatCoordinates[left])) /\n        (flatCoordinates[right] - flatCoordinates[left]);\n    const coordinate = [lon, coordinate1];\n    const point = this.parallelsLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of parallels.  Parallels are lines of equal latitude.\n   * @return {Array<LineString>} The parallels.\n   * @api\n   */\n  getParallels() {\n    return this.parallels_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateProjectionInfo_(projection) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const worldExtent = projection.getWorldExtent();\n\n    this.maxLat_ = worldExtent[3];\n    this.maxLon_ = worldExtent[2];\n    this.minLat_ = worldExtent[1];\n    this.minLon_ = worldExtent[0];\n\n    // If the world extent crosses the dateline define a custom transform to\n    // return longitudes which wrap the dateline\n\n    const toLonLatTransform = getTransform(projection, epsg4326Projection);\n    if (this.minLon_ < this.maxLon_) {\n      this.toLonLatTransform_ = toLonLatTransform;\n    } else {\n      const split = this.minLon_ + this.maxLon_ / 2;\n      this.maxLon_ += 360;\n      this.toLonLatTransform_ = function (coordinates, output, dimension) {\n        dimension = dimension || 2;\n        const lonLatCoordinates = toLonLatTransform(\n          coordinates,\n          output,\n          dimension,\n        );\n        for (let i = 0, l = lonLatCoordinates.length; i < l; i += dimension) {\n          if (lonLatCoordinates[i] < split) {\n            lonLatCoordinates[i] += 360;\n          }\n        }\n        return lonLatCoordinates;\n      };\n    }\n\n    // Transform the extent to get the limits of the view projection extent\n    // which should be available to the graticule\n\n    this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n    const worldExtentP = applyTransform(\n      [this.minLon_, this.minLat_, this.maxLon_, this.maxLat_],\n      this.fromLonLatTransform_,\n      undefined,\n      8,\n    );\n\n    this.minX_ = worldExtentP[0];\n    this.maxX_ = worldExtentP[2];\n    this.minY_ = worldExtentP[1];\n    this.maxY_ = worldExtentP[3];\n\n    // Determine the view projection coordinates of the extremities of the world extent\n    // as these may lie inside a view extent (for example the pole in a polar projection)\n\n    this.bottomLeft_ = this.fromLonLatTransform_([this.minLon_, this.minLat_]);\n    this.bottomRight_ = this.fromLonLatTransform_([this.maxLon_, this.minLat_]);\n    this.topLeft_ = this.fromLonLatTransform_([this.minLon_, this.maxLat_]);\n    this.topRight_ = this.fromLonLatTransform_([this.maxLon_, this.maxLat_]);\n\n    // Transform the projection center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    this.projectionCenterLonLat_ = this.toLonLatTransform_(\n      getCenter(projection.getExtent()),\n    );\n    if (isNaN(this.projectionCenterLonLat_[1])) {\n      this.projectionCenterLonLat_[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n\n    this.projection_ = projection;\n  }\n}\n\nexport default Graticule;\n","/**\n * @module ol/webgl\n */\n\nimport {SAFARI_BUG_237906} from './has.js';\n\n/**\n * Constants taken from goog.webgl\n */\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STREAM_DRAW = 0x88e0;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STATIC_DRAW = 0x88e4;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const DYNAMIC_DRAW = 0x88e8;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n/** end of goog.webgl constants\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object} [attributes] Attributes.\n * @return {WebGLRenderingContext|null} WebGL rendering context.\n */\nexport function getContext(canvas, attributes) {\n  attributes = Object.assign(\n    {\n      preserveDrawingBuffer: true,\n      antialias: SAFARI_BUG_237906 ? false : true, // https://bugs.webkit.org/show_bug.cgi?id=237906\n    },\n    attributes,\n  );\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n/**\n * @type {Array<string>|null}\n */\nlet supportedExtensions = null;\n\n/**\n * @return {Array<string>|null} List of supported WebGL extensions.\n */\nexport function getSupportedExtensions() {\n  if (!supportedExtensions) {\n    const canvas = document.createElement('canvas');\n    const gl = getContext(canvas);\n    if (gl) {\n      supportedExtensions = gl.getSupportedExtensions();\n    }\n  }\n  return supportedExtensions;\n}\n","/**\n * @module ol/webgl/Buffer\n */\nimport {\n  ARRAY_BUFFER,\n  DYNAMIC_DRAW,\n  ELEMENT_ARRAY_BUFFER,\n  STATIC_DRAW,\n  STREAM_DRAW,\n} from '../webgl.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Used to describe the intended usage for the data: `STATIC_DRAW`, `STREAM_DRAW`\n * or `DYNAMIC_DRAW`.\n * @enum {number}\n */\nexport const BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW,\n};\n\n/**\n * @classdesc\n * Object used to store an array of data as well as usage information for that data.\n * Stores typed arrays internally, either Float32Array or Uint16/32Array depending on\n * the buffer type (ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER) and available extensions.\n *\n * To populate the array, you can either use:\n * * A size using `#ofSize(buffer)`\n * * An `ArrayBuffer` object using `#fromArrayBuffer(buffer)`\n * * A plain array using `#fromArray(array)`\n *\n * Note:\n * See the documentation of [WebGLRenderingContext.bufferData](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData)\n * for more info on buffer usage.\n */\nclass WebGLArrayBuffer {\n  /**\n   * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n   * @param {number} [usage] Intended usage, either `STATIC_DRAW`, `STREAM_DRAW` or `DYNAMIC_DRAW`.\n   * Default is `DYNAMIC_DRAW`.\n   */\n  constructor(type, usage) {\n    /**\n     * @private\n     * @type {Float32Array|Uint32Array|null}\n     */\n    this.array_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.type_ = type;\n\n    assert(\n      type === ARRAY_BUFFER || type === ELEMENT_ARRAY_BUFFER,\n      'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.usage_ = usage !== undefined ? usage : BufferUsage.STATIC_DRAW;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size (all values will be zeroes).\n   * @param {number} size Array size\n   * @return {WebGLArrayBuffer} This\n   */\n  ofSize(size) {\n    this.array_ = new (getArrayClassForType(this.type_))(size);\n    return this;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size.\n   * @param {Array<number>} array Numerical array\n   * @return {WebGLArrayBuffer} This\n   */\n  fromArray(array) {\n    this.array_ = getArrayClassForType(this.type_).from(array);\n    return this;\n  }\n\n  /**\n   * Populates the buffer with a raw binary array buffer.\n   * @param {ArrayBuffer} buffer Raw binary buffer to populate the array with. Note that this buffer must have been\n   * initialized for the same typed array class.\n   * @return {WebGLArrayBuffer} This\n   */\n  fromArrayBuffer(buffer) {\n    this.array_ = new (getArrayClassForType(this.type_))(buffer);\n    return this;\n  }\n\n  /**\n   * @return {number} Buffer type.\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Will return null if the buffer was not initialized\n   * @return {Float32Array|Uint32Array|null} Array.\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * @return {number} Usage.\n   */\n  getUsage() {\n    return this.usage_;\n  }\n\n  /**\n   * Will return 0 if the buffer is not initialized\n   * @return {number} Array size\n   */\n  getSize() {\n    return this.array_ ? this.array_.length : 0;\n  }\n}\n\n/**\n * Returns a typed array constructor based on the given buffer type\n * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n * @return {Float32ArrayConstructor|Uint32ArrayConstructor} The typed array class to use for this buffer.\n */\nexport function getArrayClassForType(type) {\n  switch (type) {\n    case ARRAY_BUFFER:\n      return Float32Array;\n    case ELEMENT_ARRAY_BUFFER:\n      return Uint32Array;\n    default:\n      return Float32Array;\n  }\n}\n\nexport default WebGLArrayBuffer;\n","/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored',\n};\n","/**\n * @module ol/webgl/PostProcessingPass\n */\n\nimport {getUid} from '../util.js';\n\nconst DEFAULT_VERTEX_SHADER = `\n  precision mediump float;\n  \n  attribute vec2 a_position;\n  varying vec2 v_texCoord;\n  varying vec2 v_screenCoord;\n  \n  uniform vec2 u_screenSize;\n   \n  void main() {\n    v_texCoord = a_position * 0.5 + 0.5;\n    v_screenCoord = v_texCoord * u_screenSize;\n    gl_Position = vec4(a_position, 0.0, 1.0);\n  }\n`;\n\nconst DEFAULT_FRAGMENT_SHADER = `\n  precision mediump float;\n   \n  uniform sampler2D u_image;\n  uniform float u_opacity;\n   \n  varying vec2 v_texCoord;\n   \n  void main() {\n    gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n  }\n`;\n\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {WebGLUniformLocation} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\n * premultiplied.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *   uniform float u_opacity;\n *\n *   varying vec2 v_texCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n *   }\n *   ```\n */\nclass WebGLPostProcessingPass {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    this.gl_ = options.webGlContext;\n    const gl = this.gl_;\n\n    this.scaleRatio_ = options.scaleRatio || 1;\n\n    this.renderTargetTexture_ = gl.createTexture();\n    this.renderTargetTextureSize_ = null;\n\n    this.frameBuffer_ = gl.createFramebuffer();\n    this.depthBuffer_ = gl.createRenderbuffer();\n\n    // compile the program for the frame buffer\n    // TODO: make compilation errors show up\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(\n      vertexShader,\n      options.vertexShader || DEFAULT_VERTEX_SHADER,\n    );\n    gl.compileShader(vertexShader);\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(\n      fragmentShader,\n      options.fragmentShader || DEFAULT_FRAGMENT_SHADER,\n    );\n    gl.compileShader(fragmentShader);\n    this.renderTargetProgram_ = gl.createProgram();\n    gl.attachShader(this.renderTargetProgram_, vertexShader);\n    gl.attachShader(this.renderTargetProgram_, fragmentShader);\n    gl.linkProgram(this.renderTargetProgram_);\n\n    // bind the vertices buffer for the frame buffer\n    this.renderTargetVerticesBuffer_ = gl.createBuffer();\n    const verticesArray = [-1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1];\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(verticesArray),\n      gl.STATIC_DRAW,\n    );\n\n    this.renderTargetAttribLocation_ = gl.getAttribLocation(\n      this.renderTargetProgram_,\n      'a_position',\n    );\n    this.renderTargetUniformLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_screenSize',\n    );\n    this.renderTargetOpacityLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_opacity',\n    );\n    this.renderTargetTextureLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_image',\n    );\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    options.uniforms &&\n      Object.keys(options.uniforms).forEach((name) => {\n        this.uniforms_.push({\n          value: options.uniforms[name],\n          location: gl.getUniformLocation(this.renderTargetProgram_, name),\n        });\n      });\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Initialize the render target texture of the post process, make sure it is at the\n   * right size and bind it as a render target for the next draw calls.\n   * The last step to be initialized will be the one where the primitives are rendered.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   */\n  init(frameState) {\n    const gl = this.getGL();\n    const textureSize = [\n      gl.drawingBufferWidth * this.scaleRatio_,\n      gl.drawingBufferHeight * this.scaleRatio_,\n    ];\n\n    // rendering goes to my buffer\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n    gl.bindRenderbuffer(gl.RENDERBUFFER, this.getDepthBuffer());\n    gl.viewport(0, 0, textureSize[0], textureSize[1]);\n\n    // if size has changed: adjust canvas & render target texture\n    if (\n      !this.renderTargetTextureSize_ ||\n      this.renderTargetTextureSize_[0] !== textureSize[0] ||\n      this.renderTargetTextureSize_[1] !== textureSize[1]\n    ) {\n      this.renderTargetTextureSize_ = textureSize;\n\n      // create a new texture\n      const level = 0;\n      const internalFormat = gl.RGBA;\n      const border = 0;\n      const format = gl.RGBA;\n      const type = gl.UNSIGNED_BYTE;\n      const data = null;\n      gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        textureSize[0],\n        textureSize[1],\n        border,\n        format,\n        type,\n        data,\n      );\n\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n      // bind the texture to the framebuffer\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        this.renderTargetTexture_,\n        0,\n      );\n\n      gl.renderbufferStorage(\n        gl.RENDERBUFFER,\n        gl.DEPTH_COMPONENT16,\n        textureSize[0],\n        textureSize[1],\n      );\n      gl.framebufferRenderbuffer(\n        gl.FRAMEBUFFER,\n        gl.DEPTH_ATTACHMENT,\n        gl.RENDERBUFFER,\n        this.depthBuffer_,\n      );\n    }\n  }\n\n  /**\n   * Render to the next postprocessing pass (or to the canvas if final pass).\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   */\n  apply(frameState, nextPass, preCompose, postCompose) {\n    const gl = this.getGL();\n    const size = frameState.size;\n\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER,\n      nextPass ? nextPass.getFrameBuffer() : null,\n    );\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n\n    if (!nextPass) {\n      // clear the canvas if we are the first to render to it\n      // and preserveDrawingBuffer is true\n      const canvasId = getUid(gl.canvas);\n      if (!frameState.renderTargets[canvasId]) {\n        const attributes = gl.getContextAttributes();\n        if (attributes && attributes.preserveDrawingBuffer) {\n          gl.clearColor(0.0, 0.0, 0.0, 0.0);\n          gl.clearDepth(1.0);\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        }\n\n        frameState.renderTargets[canvasId] = true;\n      }\n    }\n\n    gl.disable(gl.DEPTH_TEST);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n\n    gl.useProgram(this.renderTargetProgram_);\n    gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n    gl.vertexAttribPointer(\n      this.renderTargetAttribLocation_,\n      2,\n      gl.FLOAT,\n      false,\n      0,\n      0,\n    );\n    gl.uniform2f(this.renderTargetUniformLocation_, size[0], size[1]);\n    gl.uniform1i(this.renderTargetTextureLocation_, 0);\n\n    const opacity = frameState.layerStatesArray[frameState.layerIndex].opacity;\n    gl.uniform1f(this.renderTargetOpacityLocation_, opacity);\n\n    this.applyUniforms(frameState);\n\n    if (preCompose) {\n      preCompose(gl, frameState);\n    }\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n    if (postCompose) {\n      postCompose(gl, frameState);\n    }\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer\n   */\n  getFrameBuffer() {\n    return this.frameBuffer_;\n  }\n\n  /**\n   * @return {WebGLRenderbuffer} Depth buffer\n   */\n  getDepthBuffer() {\n    return this.depthBuffer_;\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 1;\n    this.uniforms_.forEach(function (uniform) {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.texture = gl.createTexture();\n        }\n        gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        if (value instanceof ImageData) {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            value.width,\n            value.height,\n            0,\n            gl.UNSIGNED_BYTE,\n            new Uint8Array(value.data),\n          );\n        } else {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value,\n          );\n        }\n\n        // fill texture slots\n        gl.uniform1i(uniform.location, textureSlot++);\n      } else if (Array.isArray(value)) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(uniform.location, value[0], value[1]);\n            return;\n          case 3:\n            gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n            return;\n          case 4:\n            gl.uniform4f(\n              uniform.location,\n              value[0],\n              value[1],\n              value[2],\n              value[3],\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(uniform.location, value);\n      }\n    });\n  }\n}\n\nexport default WebGLPostProcessingPass;\n","/**\n * @module ol/webgl/Helper\n */\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport Disposable from '../Disposable.js';\nimport WebGLPostProcessingPass from './PostProcessingPass.js';\nimport {\n  FLOAT,\n  UNSIGNED_BYTE,\n  UNSIGNED_INT,\n  UNSIGNED_SHORT,\n  getContext,\n} from '../webgl.js';\nimport {clear} from '../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {create, fromTransform} from '../vec/mat4.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer Buffer.\n * @property {WebGLBuffer} webGlBuffer WebGlBuffer.\n */\n\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport const ShaderType = {\n  FRAGMENT_SHADER: 0x8b30,\n  VERTEX_SHADER: 0x8b31,\n};\n\n/**\n * Names of uniforms made available to all shaders.\n * Please note: changing these *will* break custom shaders!\n * @enum {string}\n */\nexport const DefaultUniform = {\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  SCREEN_TO_WORLD_MATRIX: 'u_screenToWorldMatrix',\n  TIME: 'u_time',\n  ZOOM: 'u_zoom',\n  RESOLUTION: 'u_resolution',\n  ROTATION: 'u_rotation',\n  VIEWPORT_SIZE_PX: 'u_viewportSizePx',\n  PIXEL_RATIO: 'u_pixelRatio',\n  HIT_DETECTION: 'u_hitDetection',\n};\n\n/**\n * Attribute types, either `UNSIGNED_BYTE`, `UNSIGNED_SHORT`, `UNSIGNED_INT` or `FLOAT`\n * Note: an attribute stored in a `Float32Array` should be of type `FLOAT`.\n * @enum {number}\n */\nexport const AttributeType = {\n  UNSIGNED_BYTE: UNSIGNED_BYTE,\n  UNSIGNED_SHORT: UNSIGNED_SHORT,\n  UNSIGNED_INT: UNSIGNED_INT,\n  FLOAT: FLOAT,\n};\n\n/**\n * Description of an attribute in a buffer\n * @typedef {Object} AttributeDescription\n * @property {string} name Attribute name to use in shaders\n * @property {number} size Number of components per attributes\n * @property {AttributeType} [type] Attribute type, i.e. number of bytes used to store the value. This is\n * determined by the class of typed array which the buffer uses (eg. `Float32Array` for a `FLOAT` attribute).\n * Default is `FLOAT`.\n */\n\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|WebGLTexture|import(\"../transform\").Transform} UniformLiteralValue\n */\n\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../Map.js\").FrameState):UniformLiteralValue} UniformValue\n */\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n * @property {string} [canvasCacheKey] The cache key for the canvas.\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue} [value] Value\n * @property {UniformValue} [prevValue] The previous value.\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @typedef {Object} CanvasCacheItem\n * @property {WebGLRenderingContext} context The context of this canvas.\n * @property {number} users The count of users of this canvas.\n */\n\n/**\n * @type {Object<string,CanvasCacheItem>}\n */\nconst canvasCache = {};\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {string} The shared cache key.\n */\nfunction getSharedCanvasCacheKey(key) {\n  return 'shared/' + key;\n}\n\nlet uniqueCanvasCacheKeyCount = 0;\n\n/**\n * @return {string} The unique cache key.\n */\nfunction getUniqueCanvasCacheKey() {\n  const key = 'unique/' + uniqueCanvasCacheKeyCount;\n  uniqueCanvasCacheKeyCount += 1;\n  return key;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {WebGLRenderingContext} The canvas.\n */\nfunction getOrCreateContext(key) {\n  let cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    canvas.style.position = 'absolute';\n    canvas.style.left = '0';\n    const context = getContext(canvas);\n    cacheItem = {users: 0, context};\n    canvasCache[key] = cacheItem;\n  }\n\n  cacheItem.users += 1;\n  return cacheItem.context;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n */\nfunction releaseCanvas(key) {\n  const cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    return;\n  }\n\n  cacheItem.users -= 1;\n  if (cacheItem.users > 0) {\n    return;\n  }\n\n  const gl = cacheItem.context;\n  const extension = gl.getExtension('WEBGL_lose_context');\n  if (extension) {\n    extension.loseContext();\n  }\n  const canvas = gl.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n\n  delete canvasCache[key];\n}\n\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls; note how a frameState is required to set up a program,\n *   // as several default uniforms are computed from it (projection matrix, zoom level, etc.)\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   const program = this.context.getProgram(fragmentShader, vertexShader);\n *   helper.useProgram(this.program, frameState);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   helper.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   const verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   const indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   helper.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   helper.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Specify the attribute names with\n *   {@link module:ol/webgl/Helper~WebGLHelper#enableAttributes} (see code snippet below).\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   helper.enableAttributes([\n *     {\n *        name: 'a_position',\n *        size: 2\n *     },\n *     {\n *       name: 'a_offset',\n *       size: 2\n *     },\n *     {\n *       name: 'a_texCoord',\n *       size: 2\n *     }\n *   ])\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   helper.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   helper.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   helper.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n */\nclass WebGLHelper extends Disposable {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n    options = options || {};\n\n    /** @private */\n    this.boundHandleWebGLContextLost_ = this.handleWebGLContextLost.bind(this);\n\n    /** @private */\n    this.boundHandleWebGLContextRestored_ =\n      this.handleWebGLContextRestored.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.canvasCacheKey_ = options.canvasCacheKey\n      ? getSharedCanvasCacheKey(options.canvasCacheKey)\n      : getUniqueCanvasCacheKey();\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = getOrCreateContext(this.canvasCacheKey_);\n\n    /**\n     * @private\n     * @type {!Object<string, BufferCacheEntry>}\n     */\n    this.bufferCache_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object>}\n     */\n    this.extensionCache_ = {};\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.currentProgram_ = null;\n\n    /**\n     * @private\n     * @type boolean\n     */\n    this.needsToBeRecreated_ = false;\n\n    const canvas = this.gl_.canvas;\n\n    canvas.addEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_,\n    );\n    canvas.addEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_,\n    );\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetRotateMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetScaleMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, WebGLUniformLocation>>}\n     */\n    this.uniformLocationsByProgram_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.attribLocationsByProgram_ = {};\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass.\n     * If the uniform is a texture, the WebGL Texture object will be stored here.\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    if (options.uniforms) {\n      this.setUniforms(options.uniforms);\n    }\n\n    /**\n     * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n     * options. If no post process was given, a default one is used (so as not to have to make an exception to\n     * the frame buffer logic).\n     * @type {Array<WebGLPostProcessingPass>}\n     * @private\n     */\n    this.postProcessPasses_ = options.postProcesses\n      ? options.postProcesses.map(\n          (options) =>\n            new WebGLPostProcessingPass({\n              webGlContext: this.gl_,\n              scaleRatio: options.scaleRatio,\n              vertexShader: options.vertexShader,\n              fragmentShader: options.fragmentShader,\n              uniforms: options.uniforms,\n            }),\n        )\n      : [new WebGLPostProcessingPass({webGlContext: this.gl_})];\n\n    /**\n     * @type {string|null}\n     * @private\n     */\n    this.shaderCompileErrors_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.startTime_ = Date.now();\n  }\n\n  /**\n   * @param {Object<string, UniformValue>} uniforms Uniform definitions.\n   */\n  setUniforms(uniforms) {\n    this.uniforms_ = [];\n    this.addUniforms(uniforms);\n  }\n\n  /**\n   * @param {Object<string, UniformValue>} uniforms Uniform definitions.\n   */\n  addUniforms(uniforms) {\n    for (const name in uniforms) {\n      this.uniforms_.push({\n        name: name,\n        value: uniforms[name],\n      });\n    }\n  }\n\n  /**\n   * @param {string} canvasCacheKey The canvas cache key.\n   * @return {boolean} The provided key matches the one this helper was constructed with.\n   */\n  canvasCacheKeyMatches(canvasCacheKey) {\n    return this.canvasCacheKey_ === getSharedCanvasCacheKey(canvasCacheKey);\n  }\n\n  /**\n   * Get a WebGL extension.  If the extension is not supported, null is returned.\n   * Extensions are cached after they are enabled for the first time.\n   * @param {string} name The extension name.\n   * @return {Object|null} The extension or null if not supported.\n   */\n  getExtension(name) {\n    if (name in this.extensionCache_) {\n      return this.extensionCache_[name];\n    }\n    const extension = this.gl_.getExtension(name);\n    this.extensionCache_[name] = extension;\n    return extension;\n  }\n\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  bindBuffer(buffer) {\n    const gl = this.gl_;\n    const bufferKey = getUid(buffer);\n    let bufferCache = this.bufferCache_[bufferKey];\n    if (!bufferCache) {\n      const webGlBuffer = gl.createBuffer();\n      bufferCache = {\n        buffer: buffer,\n        webGlBuffer: webGlBuffer,\n      };\n      this.bufferCache_[bufferKey] = bufferCache;\n    }\n    gl.bindBuffer(buffer.getType(), bufferCache.webGlBuffer);\n  }\n\n  /**\n   * Update the data contained in the buffer array; this is required for the\n   * new data to be rendered\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  flushBufferData(buffer) {\n    const gl = this.gl_;\n    this.bindBuffer(buffer);\n    gl.bufferData(buffer.getType(), buffer.getArray(), buffer.getUsage());\n  }\n\n  /**\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\n   */\n  deleteBuffer(buf) {\n    const gl = this.gl_;\n    const bufferKey = getUid(buf);\n    const bufferCacheEntry = this.bufferCache_[bufferKey];\n    if (bufferCacheEntry && !gl.isContextLost()) {\n      gl.deleteBuffer(bufferCacheEntry.webGlBuffer);\n    }\n    delete this.bufferCache_[bufferKey];\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    const canvas = this.gl_.canvas;\n    canvas.removeEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_,\n    );\n    canvas.removeEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_,\n    );\n\n    releaseCanvas(this.canvasCacheKey_);\n\n    delete this.gl_;\n  }\n\n  /**\n   * Clear the buffer & set the viewport to draw.\n   * Post process passes will be initialized here, the first one being bound as a render target for\n   * subsequent draw calls.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   * @param {boolean} [enableDepth] If true, enables depth testing.\n   */\n  prepareDraw(frameState, disableAlphaBlend, enableDepth) {\n    const gl = this.gl_;\n    const canvas = this.getCanvas();\n    const size = frameState.size;\n    const pixelRatio = frameState.pixelRatio;\n\n    if (\n      canvas.width !== size[0] * pixelRatio ||\n      canvas.height !== size[1] * pixelRatio\n    ) {\n      canvas.width = size[0] * pixelRatio;\n      canvas.height = size[1] * pixelRatio;\n      canvas.style.width = size[0] + 'px';\n      canvas.style.height = size[1] + 'px';\n    }\n\n    // loop backwards in post processes list\n    for (let i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n      this.postProcessPasses_[i].init(frameState);\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.depthRange(0.0, 1.0);\n    gl.clearDepth(1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n    if (enableDepth) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthFunc(gl.LEQUAL);\n    } else {\n      gl.disable(gl.DEPTH_TEST);\n    }\n  }\n\n  /**\n   * Prepare a program to use a texture.\n   * @param {WebGLTexture} texture The texture.\n   * @param {number} slot The texture slot.\n   * @param {string} uniformName The corresponding uniform name.\n   */\n  bindTexture(texture, slot, uniformName) {\n    const gl = this.gl_;\n    gl.activeTexture(gl.TEXTURE0 + slot);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.uniform1i(this.getUniformLocation(uniformName), slot);\n  }\n\n  /**\n   * Clear the render target & bind it for future draw operations.\n   * This is similar to `prepareDraw`, only post processes will not be applied.\n   * Note: the whole viewport will be drawn to the render target, regardless of its size.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {import(\"./RenderTarget.js\").default} renderTarget Render target to draw to\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   * @param {boolean} [enableDepth] If true, enables depth testing.\n   */\n  prepareDrawToRenderTarget(\n    frameState,\n    renderTarget,\n    disableAlphaBlend,\n    enableDepth,\n  ) {\n    const gl = this.gl_;\n    const size = renderTarget.getSize();\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget.getFramebuffer());\n    gl.bindRenderbuffer(gl.RENDERBUFFER, renderTarget.getDepthbuffer());\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.bindTexture(gl.TEXTURE_2D, renderTarget.getTexture());\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.depthRange(0.0, 1.0);\n    gl.clearDepth(1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n    if (enableDepth) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthFunc(gl.LEQUAL);\n    } else {\n      gl.disable(gl.DEPTH_TEST);\n    }\n  }\n\n  /**\n   * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   */\n  drawElements(start, end) {\n    const gl = this.gl_;\n    this.getExtension('OES_element_index_uint');\n\n    const elementType = gl.UNSIGNED_INT;\n    const elementSize = 4;\n\n    const numItems = end - start;\n    const offsetInBytes = start * elementSize;\n    gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n  }\n\n  /**\n   * Apply the successive post process passes which will eventually render to the actual canvas.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   */\n  finalizeDraw(frameState, preCompose, postCompose) {\n    // apply post processes using the next one as target\n    for (let i = 0, ii = this.postProcessPasses_.length; i < ii; i++) {\n      if (i === ii - 1) {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          null,\n          preCompose,\n          postCompose,\n        );\n      } else {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          this.postProcessPasses_[i + 1],\n        );\n      }\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getCanvas() {\n    return /** @type {HTMLCanvasElement} */ (this.gl_.canvas);\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyFrameState(frameState) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    this.setUniformFloatValue(\n      DefaultUniform.TIME,\n      (Date.now() - this.startTime_) * 0.001,\n    );\n    this.setUniformFloatValue(DefaultUniform.ZOOM, frameState.viewState.zoom);\n    this.setUniformFloatValue(\n      DefaultUniform.RESOLUTION,\n      frameState.viewState.resolution,\n    );\n    this.setUniformFloatValue(DefaultUniform.PIXEL_RATIO, pixelRatio);\n    this.setUniformFloatVec2(DefaultUniform.VIEWPORT_SIZE_PX, [\n      size[0],\n      size[1],\n    ]);\n    this.setUniformFloatValue(DefaultUniform.ROTATION, rotation);\n  }\n\n  /**\n   * Sets the `u_hitDetection` uniform.\n   * @param {boolean} enabled Whether to enable the hit detection code path\n   */\n  applyHitDetectionUniform(enabled) {\n    const loc = this.getUniformLocation(DefaultUniform.HIT_DETECTION);\n    this.getGL().uniform1i(loc, enabled ? 1 : 0);\n\n    // hit detection uses a fixed pixel ratio\n    if (enabled) {\n      this.setUniformFloatValue(DefaultUniform.PIXEL_RATIO, 0.5);\n    }\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyUniforms(frameState) {\n    const gl = this.gl_;\n\n    let value;\n    let textureSlot = 0;\n    this.uniforms_.forEach((uniform) => {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (\n        value instanceof HTMLCanvasElement ||\n        value instanceof HTMLImageElement ||\n        value instanceof ImageData ||\n        value instanceof WebGLTexture\n      ) {\n        // create a texture & put data\n        if (value instanceof WebGLTexture && !uniform.texture) {\n          uniform.prevValue = undefined;\n          uniform.texture = value;\n        } else if (!uniform.texture) {\n          uniform.prevValue = undefined;\n          uniform.texture = gl.createTexture();\n        }\n        this.bindTexture(uniform.texture, textureSlot, uniform.name);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        const imageReady =\n          !(value instanceof HTMLImageElement) ||\n          /** @type {HTMLImageElement} */ (value).complete;\n        if (\n          !(value instanceof WebGLTexture) &&\n          imageReady &&\n          uniform.prevValue !== value\n        ) {\n          uniform.prevValue = value;\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value,\n          );\n        }\n        textureSlot++;\n      } else if (Array.isArray(value) && value.length === 6) {\n        this.setUniformMatrixValue(\n          uniform.name,\n          fromTransform(this.tmpMat4_, value),\n        );\n      } else if (Array.isArray(value) && value.length <= 4) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n            );\n            return;\n          case 3:\n            gl.uniform3f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n              value[2],\n            );\n            return;\n          case 4:\n            gl.uniform4f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n              value[2],\n              value[3],\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(this.getUniformLocation(uniform.name), value);\n      }\n    });\n  }\n\n  /**\n   * Set up a program for use. The program will be set as the current one. Then, the uniforms used\n   * in the program will be set based on the current frame state and the helper configuration.\n   * @param {WebGLProgram} program Program.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  useProgram(program, frameState) {\n    const gl = this.gl_;\n    gl.useProgram(program);\n    this.currentProgram_ = program;\n    this.applyFrameState(frameState);\n    this.applyUniforms(frameState);\n  }\n\n  /**\n   * Will attempt to compile a vertex or fragment shader based on source\n   * On error, the shader will be returned but\n   * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n   * Use `gl.getShaderInfoLog(shader)` to have details\n   * @param {string} source Shader source\n   * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n   * @return {WebGLShader} Shader object\n   */\n  compileShader(source, type) {\n    const gl = this.gl_;\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    return shader;\n  }\n\n  /**\n   * Create a program for a vertex and fragment shader.  Throws if shader compilation fails.\n   * @param {string} fragmentShaderSource Fragment shader source.\n   * @param {string} vertexShaderSource Vertex shader source.\n   * @return {WebGLProgram} Program\n   */\n  getProgram(fragmentShaderSource, vertexShaderSource) {\n    const gl = this.gl_;\n\n    const fragmentShader = this.compileShader(\n      fragmentShaderSource,\n      gl.FRAGMENT_SHADER,\n    );\n\n    const vertexShader = this.compileShader(\n      vertexShaderSource,\n      gl.VERTEX_SHADER,\n    );\n\n    const program = gl.createProgram();\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      const message = `Fragment shader compilation failed: ${gl.getShaderInfoLog(\n        fragmentShader,\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(fragmentShader);\n\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      const message = `Vertex shader compilation failed: ${gl.getShaderInfoLog(\n        vertexShader,\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(vertexShader);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      const message = `GL program linking failed: ${gl.getProgramInfoLog(\n        program,\n      )}`;\n      throw new Error(message);\n    }\n\n    return program;\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Uniform name\n   * @return {WebGLUniformLocation} uniformLocation\n   */\n  getUniformLocation(name) {\n    const programUid = getUid(this.currentProgram_);\n    if (this.uniformLocationsByProgram_[programUid] === undefined) {\n      this.uniformLocationsByProgram_[programUid] = {};\n    }\n    if (this.uniformLocationsByProgram_[programUid][name] === undefined) {\n      this.uniformLocationsByProgram_[programUid][name] =\n        this.gl_.getUniformLocation(this.currentProgram_, name);\n    }\n    return this.uniformLocationsByProgram_[programUid][name];\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Attribute name\n   * @return {number} attribLocation\n   */\n  getAttributeLocation(name) {\n    const programUid = getUid(this.currentProgram_);\n    if (this.attribLocationsByProgram_[programUid] === undefined) {\n      this.attribLocationsByProgram_[programUid] = {};\n    }\n    if (this.attribLocationsByProgram_[programUid][name] === undefined) {\n      this.attribLocationsByProgram_[programUid][name] =\n        this.gl_.getAttribLocation(this.currentProgram_, name);\n    }\n    return this.attribLocationsByProgram_[programUid][name];\n  }\n\n  /**\n   * Sets the given transform to apply the rotation/translation/scaling of the given frame state.\n   * The resulting transform can be used to convert world space coordinates to view coordinates in the [-1, 1] range.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../transform\").Transform} transform Transform to update.\n   * @return {import(\"../transform\").Transform} The updated transform object.\n   */\n  makeProjectionTransform(frameState, transform) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const resolution = frameState.viewState.resolution;\n    const center = frameState.viewState.center;\n    composeTransform(\n      transform,\n      0,\n      0,\n      2 / (resolution * size[0]),\n      2 / (resolution * size[1]),\n      -rotation,\n      -center[0],\n      -center[1],\n    );\n    return transform;\n  }\n\n  /**\n   * Give a value for a standard float uniform\n   * @param {string} uniform Uniform name\n   * @param {number} value Value\n   */\n  setUniformFloatValue(uniform, value) {\n    this.gl_.uniform1f(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec2 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec2(uniform, value) {\n    this.gl_.uniform2fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec4(uniform, value) {\n    this.gl_.uniform4fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a standard matrix4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Matrix value\n   */\n  setUniformMatrixValue(uniform, value) {\n    this.gl_.uniformMatrix4fv(this.getUniformLocation(uniform), false, value);\n  }\n\n  /**\n   * Will set the currently bound buffer to an attribute of the shader program. Used by `#enableAttributes`\n   * internally.\n   * @param {string} attribName Attribute name\n   * @param {number} size Number of components per attributes\n   * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n   * @param {number} stride Stride in bytes (0 means attribs are packed)\n   * @param {number} offset Offset in bytes\n   * @private\n   */\n  enableAttributeArray_(attribName, size, type, stride, offset) {\n    const location = this.getAttributeLocation(attribName);\n    // the attribute has not been found in the shaders or is not used; do not enable it\n    if (location < 0) {\n      return;\n    }\n    this.gl_.enableVertexAttribArray(location);\n    this.gl_.vertexAttribPointer(location, size, type, false, stride, offset);\n  }\n\n  /**\n   * Will enable the following attributes to be read from the currently bound buffer,\n   * i.e. tell the GPU where to read the different attributes in the buffer. An error in the\n   * size/type/order of attributes will most likely break the rendering and throw a WebGL exception.\n   * @param {Array<AttributeDescription>} attributes Ordered list of attributes to read from the buffer\n   */\n  enableAttributes(attributes) {\n    const stride = computeAttributesStride(attributes);\n    let offset = 0;\n    for (let i = 0; i < attributes.length; i++) {\n      const attr = attributes[i];\n      this.enableAttributeArray_(\n        attr.name,\n        attr.size,\n        attr.type || FLOAT,\n        stride,\n        offset,\n      );\n      offset += attr.size * getByteSizeFromType(attr.type);\n    }\n  }\n\n  /**\n   * WebGL context was lost\n   * @param {WebGLContextEvent} event The context loss event.\n   * @private\n   */\n  handleWebGLContextLost(event) {\n    clear(this.bufferCache_);\n    this.currentProgram_ = null;\n\n    event.preventDefault();\n  }\n\n  /**\n   * WebGL context was restored\n   * @private\n   */\n  handleWebGLContextRestored() {\n    this.needsToBeRecreated_ = true;\n  }\n\n  /**\n   * Returns whether this helper needs to be recreated, as the context was lost and then restored.\n   * @return {boolean} Whether this helper needs to be recreated.\n   */\n  needsToBeRecreated() {\n    return this.needsToBeRecreated_;\n  }\n\n  /**\n   * Will create or reuse a given webgl texture and apply the given size. If no image data\n   * specified, the texture will be empty, otherwise image data will be used and the `size`\n   * parameter will be ignored.\n   * Note: wrap parameters are set to clamp to edge, min filter is set to linear.\n   * @param {Array<number>} size Expected size of the texture\n   * @param {ImageData|HTMLImageElement|HTMLCanvasElement} [data] Image data/object to bind to the texture\n   * @param {WebGLTexture} [texture] Existing texture to reuse\n   * @return {WebGLTexture} The generated texture\n   */\n  createTexture(size, data, texture) {\n    const gl = this.gl_;\n    texture = texture || gl.createTexture();\n\n    // set params & size\n    const level = 0;\n    const internalFormat = gl.RGBA;\n    const border = 0;\n    const format = gl.RGBA;\n    const type = gl.UNSIGNED_BYTE;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    if (data) {\n      gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, format, type, data);\n    } else {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        size[0],\n        size[1],\n        border,\n        format,\n        type,\n        null,\n      );\n    }\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    return texture;\n  }\n}\n\n/**\n * Compute a stride in bytes based on a list of attributes\n * @param {Array<AttributeDescription>} attributes Ordered list of attributes\n * @return {number} Stride, ie amount of values for each vertex in the vertex buffer\n */\nexport function computeAttributesStride(attributes) {\n  let stride = 0;\n  for (let i = 0; i < attributes.length; i++) {\n    const attr = attributes[i];\n    stride += attr.size * getByteSizeFromType(attr.type);\n  }\n  return stride;\n}\n\n/**\n * Computes the size in byte of an attribute type.\n * @param {AttributeType} type Attribute type\n * @return {number} The size in bytes\n */\nfunction getByteSizeFromType(type) {\n  switch (type) {\n    case AttributeType.UNSIGNED_BYTE:\n      return Uint8Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_SHORT:\n      return Uint16Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_INT:\n      return Uint32Array.BYTES_PER_ELEMENT;\n    case AttributeType.FLOAT:\n    default:\n      return Float32Array.BYTES_PER_ELEMENT;\n  }\n}\n\nexport default WebGLHelper;\n","/**\n * @module ol/renderer/webgl/Layer\n */\nimport LayerProperty from '../../layer/Property.js';\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLHelper from '../../webgl/Helper.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * Base WebGL renderer class.\n * Holds all logic related to data manipulation & some common rendering logic\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass WebGLLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(layer, options) {\n    super(layer);\n\n    options = options || {};\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform is only\n     * set before dispatching rendering events.\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @private\n     */\n    this.postProcesses_ = options.postProcesses;\n\n    /**\n     * @private\n     */\n    this.uniforms_ = options.uniforms;\n\n    /**\n     * @type {WebGLHelper}\n     * @protected\n     */\n    this.helper;\n\n    layer.addChangeListener(LayerProperty.MAP, this.removeHelper.bind(this));\n\n    this.dispatchPreComposeEvent = this.dispatchPreComposeEvent.bind(this);\n    this.dispatchPostComposeEvent = this.dispatchPostComposeEvent.bind(this);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPreComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.PRECOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.PRECOMPOSE,\n        undefined,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPostComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.POSTCOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.POSTCOMPOSE,\n        undefined,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * Reset options (only handles uniforms).\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    this.uniforms_ = options.uniforms;\n    if (this.helper) {\n      this.helper.setUniforms(this.uniforms_);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  removeHelper() {\n    if (this.helper) {\n      this.helper.dispose();\n      delete this.helper;\n    }\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    if (this.getLayer().getRenderSource()) {\n      let incrementGroup = true;\n      let groupNumber = -1;\n      let className;\n      for (let i = 0, ii = frameState.layerStatesArray.length; i < ii; i++) {\n        const layer = frameState.layerStatesArray[i].layer;\n        const renderer = layer.getRenderer();\n        if (!(renderer instanceof WebGLLayerRenderer)) {\n          incrementGroup = true;\n          continue;\n        }\n        const layerClassName = layer.getClassName();\n        if (incrementGroup || layerClassName !== className) {\n          groupNumber += 1;\n          incrementGroup = false;\n        }\n        className = layerClassName;\n        if (renderer === this) {\n          break;\n        }\n      }\n\n      const canvasCacheKey =\n        'map/' + frameState.mapId + '/group/' + groupNumber;\n\n      if (\n        !this.helper ||\n        !this.helper.canvasCacheKeyMatches(canvasCacheKey) ||\n        this.helper.needsToBeRecreated()\n      ) {\n        this.removeHelper();\n\n        this.helper = new WebGLHelper({\n          postProcesses: this.postProcesses_,\n          uniforms: this.uniforms_,\n          canvasCacheKey: canvasCacheKey,\n        });\n\n        if (className) {\n          this.helper.getCanvas().className = className;\n        }\n\n        this.afterHelperCreated();\n      }\n    }\n\n    return this.prepareFrameInternal(frameState);\n  }\n\n  /**\n   * @protected\n   */\n  afterHelperCreated() {}\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @protected\n   */\n  prepareFrameInternal(frameState) {\n    return true;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.removeHelper();\n    super.disposeInternal();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      composeTransform(\n        this.inversePixelTransform_,\n        0,\n        0,\n        frameState.pixelRatio,\n        -frameState.pixelRatio,\n        0,\n        0,\n        -frameState.size[1],\n      );\n\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform_,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n}\n\nexport default WebGLLayerRenderer;\n","/**\n * A wrapper class to simplify rendering to a texture instead of the final canvas\n * @module ol/webgl/RenderTarget\n */\nimport {equals} from '../array.js';\n\n// for pixel color reading\nconst tmpArray4 = new Uint8Array(4);\n\n/**\n * @classdesc\n * This class is a wrapper around the association of both a `WebGLTexture` and a `WebGLFramebuffer` instances,\n * simplifying initialization and binding for rendering.\n */\nclass WebGLRenderTarget {\n  /**\n   * @param {import(\"./Helper.js\").default} helper WebGL helper; mandatory.\n   * @param {Array<number>} [size] Expected size of the render target texture; note: this can be changed later on.\n   */\n  constructor(helper, size) {\n    /**\n     * @private\n     * @type {import(\"./Helper.js\").default}\n     */\n    this.helper_ = helper;\n    const gl = helper.getGL();\n\n    /**\n     * @private\n     * @type {WebGLTexture}\n     */\n    this.texture_ = gl.createTexture();\n\n    /**\n     * @private\n     * @type {WebGLFramebuffer}\n     */\n    this.framebuffer_ = gl.createFramebuffer();\n\n    /**\n     * @private\n     * @type {WebGLRenderbuffer}\n     */\n    this.depthbuffer_ = gl.createRenderbuffer();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.size_ = size || [1, 1];\n\n    /**\n     * @type {Uint8Array}\n     * @private\n     */\n    this.data_ = new Uint8Array(0);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dataCacheDirty_ = true;\n\n    this.updateSize_();\n  }\n\n  /**\n   * Changes the size of the render target texture. Note: will do nothing if the size\n   * is already the same.\n   * @param {Array<number>} size Expected size of the render target texture\n   */\n  setSize(size) {\n    if (equals(size, this.size_)) {\n      return;\n    }\n    this.size_[0] = size[0];\n    this.size_[1] = size[1];\n    this.updateSize_();\n  }\n\n  /**\n   * Returns the size of the render target texture\n   * @return {Array<number>} Size of the render target texture\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * This will cause following calls to `#readAll` or `#readPixel` to download the content of the\n   * render target into memory, which is an expensive operation.\n   * This content will be kept in cache but should be cleared after each new render.\n   */\n  clearCachedData() {\n    this.dataCacheDirty_ = true;\n  }\n\n  /**\n   * Returns the full content of the frame buffer as a series of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * @return {Uint8Array} Integer array of color values\n   */\n  readAll() {\n    if (this.dataCacheDirty_) {\n      const size = this.size_;\n      const gl = this.helper_.getGL();\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n      gl.readPixels(\n        0,\n        0,\n        size[0],\n        size[1],\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data_,\n      );\n      this.dataCacheDirty_ = false;\n    }\n    return this.data_;\n  }\n\n  /**\n   * Reads one pixel of the frame buffer as an array of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * If x and/or y are outside of existing data, an array filled with 0 is returned.\n   * @param {number} x Pixel coordinate\n   * @param {number} y Pixel coordinate\n   * @return {Uint8Array} Integer array with one color value (4 components)\n   */\n  readPixel(x, y) {\n    if (x < 0 || y < 0 || x > this.size_[0] || y >= this.size_[1]) {\n      tmpArray4[0] = 0;\n      tmpArray4[1] = 0;\n      tmpArray4[2] = 0;\n      tmpArray4[3] = 0;\n      return tmpArray4;\n    }\n\n    this.readAll();\n    const index =\n      Math.floor(x) + (this.size_[1] - Math.floor(y) - 1) * this.size_[0];\n    tmpArray4[0] = this.data_[index * 4];\n    tmpArray4[1] = this.data_[index * 4 + 1];\n    tmpArray4[2] = this.data_[index * 4 + 2];\n    tmpArray4[3] = this.data_[index * 4 + 3];\n    return tmpArray4;\n  }\n\n  /**\n   * @return {WebGLTexture} Texture to render to\n   */\n  getTexture() {\n    return this.texture_;\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer of the render target\n   */\n  getFramebuffer() {\n    return this.framebuffer_;\n  }\n\n  /**\n   * @return {WebGLRenderbuffer} Depth buffer of the render target\n   */\n  getDepthbuffer() {\n    return this.depthbuffer_;\n  }\n\n  /**\n   * @private\n   */\n  updateSize_() {\n    const size = this.size_;\n    const gl = this.helper_.getGL();\n\n    this.texture_ = this.helper_.createTexture(size, null, this.texture_);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture_,\n      0,\n    );\n\n    gl.bindRenderbuffer(gl.RENDERBUFFER, this.depthbuffer_);\n    gl.renderbufferStorage(\n      gl.RENDERBUFFER,\n      gl.DEPTH_COMPONENT16,\n      size[0],\n      size[1],\n    );\n    gl.framebufferRenderbuffer(\n      gl.FRAMEBUFFER,\n      gl.DEPTH_ATTACHMENT,\n      gl.RENDERBUFFER,\n      this.depthbuffer_,\n    );\n\n    this.data_ = new Uint8Array(size[0] * size[1] * 4);\n  }\n}\n\nexport default WebGLRenderTarget;\n","/**\n * @module ol/render/webgl/constants\n */\n\n/**\n * @enum {string}\n */\nexport const WebGLWorkerMessageType = {\n  GENERATE_POLYGON_BUFFERS: 'GENERATE_POLYGON_BUFFERS',\n  GENERATE_POINT_BUFFERS: 'GENERATE_POINT_BUFFERS',\n  GENERATE_LINE_STRING_BUFFERS: 'GENERATE_LINE_STRING_BUFFERS',\n};\n\n/**\n * @typedef {Object} WebGLWorkerGenerateBuffersMessage\n * This message will trigger the generation of a vertex and an index buffer based on the given render instructions.\n * When the buffers are generated, the worked will send a message of the same type to the main thread, with\n * the generated buffers in it.\n * Note that any addition properties present in the message *will* be sent back to the main thread.\n * @property {number} id Message id; will be used both in request and response as a means of identification\n * @property {WebGLWorkerMessageType} type Message type\n * @property {ArrayBuffer} renderInstructions render instructions raw binary buffer.\n * @property {number} [customAttributesSize] Amount of hit detection + custom attributes count in the render instructions.\n * @property {ArrayBuffer} [vertexBuffer] Vertices array raw binary buffer (sent by the worker).\n * @property {ArrayBuffer} [indexBuffer] Indices array raw binary buffer (sent by the worker).\n * @property {import(\"../../transform\").Transform} [renderInstructionsTransform] Transformation matrix used to project the instructions coordinates\n */\n","'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 32767 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim | 0);\n            triangles.push(ear.i / dim | 0);\n            triangles.push(next.i / dim | 0);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    var p = c.next;\n    while (p !== a) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(x0, y0, minX, minY, invSize),\n        maxZ = zOrder(x1, y1, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim | 0);\n            triangles.push(p.i / dim | 0);\n            triangles.push(b.i / dim | 0);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\n                earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    var bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n\n    var bridgeReverse = splitPolygon(bridge, hole);\n\n    // filter collinear points around the cuts\n    filterPoints(bridgeReverse, bridgeReverse.next);\n    return filterPoints(bridge, bridge.next);\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                m = p.x < p.next.x ? p : p.next;\n                if (x === hx) return m; // hole touches outer segment; pick leftmost endpoint\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === 0) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = (x - minX) * invSize | 0;\n    y = (y - minY) * invSize | 0;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) >= (ax - px) * (cy - py) &&\n           (ax - px) * (by - py) >= (bx - px) * (ay - py) &&\n           (bx - px) * (cy - py) >= (cx - px) * (by - py);\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = 0;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","/**\n * @module ol/render/webgl/utils\n */\nimport earcut from 'earcut';\nimport {apply as applyTransform} from '../../transform.js';\nimport {clamp} from '../../math.js';\n\nexport const LINESTRING_ANGLE_COSINE_CUTOFF = 0.985;\n\n/** @type {Array<number>} */\nconst tmpArray_ = [];\n\n/**\n * An object holding positions both in an index and a vertex buffer.\n * @typedef {Object} BufferPositions\n * @property {number} vertexPosition Position in the vertex buffer\n * @property {number} indexPosition Position in the index buffer\n */\nconst bufferPositions_ = {vertexPosition: 0, indexPosition: 0};\n\n/**\n * @param {Float32Array} buffer Buffer\n * @param {number} pos Position\n * @param {number} x X\n * @param {number} y Y\n * @param {number} index Index\n */\nfunction writePointVertex(buffer, pos, x, y, index) {\n  buffer[pos + 0] = x;\n  buffer[pos + 1] = y;\n  buffer[pos + 2] = index;\n}\n\n/**\n * Pushes a quad (two triangles) based on a point geometry\n * @param {Float32Array} instructions Array of render instructions for points.\n * @param {number} elementIndex Index from which render instructions will be read.\n * @param {Float32Array} vertexBuffer Buffer in the form of a typed array.\n * @param {Uint32Array} indexBuffer Buffer in the form of a typed array.\n * @param {number} customAttributesSize Amount of custom attributes for each element.\n * @param {BufferPositions} [bufferPositions] Buffer write positions; if not specified, positions will be set at 0.\n * @return {BufferPositions} New buffer positions where to write next\n * @property {number} vertexPosition New position in the vertex buffer where future writes should start.\n * @property {number} indexPosition New position in the index buffer where future writes should start.\n * @private\n */\nexport function writePointFeatureToBuffers(\n  instructions,\n  elementIndex,\n  vertexBuffer,\n  indexBuffer,\n  customAttributesSize,\n  bufferPositions,\n) {\n  // This is for x, y and index\n  const baseVertexAttrsCount = 3;\n  const baseInstructionsCount = 2;\n  const stride = baseVertexAttrsCount + customAttributesSize;\n\n  const x = instructions[elementIndex + 0];\n  const y = instructions[elementIndex + 1];\n\n  // read custom numerical attributes on the feature\n  const customAttrs = tmpArray_;\n  customAttrs.length = customAttributesSize;\n  for (let i = 0; i < customAttrs.length; i++) {\n    customAttrs[i] = instructions[elementIndex + baseInstructionsCount + i];\n  }\n\n  let vPos = bufferPositions ? bufferPositions.vertexPosition : 0;\n  let iPos = bufferPositions ? bufferPositions.indexPosition : 0;\n  const baseIndex = vPos / stride;\n\n  // push vertices for each of the four quad corners (first standard then custom attributes)\n  writePointVertex(vertexBuffer, vPos, x, y, 0);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 1);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 2);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 3);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  indexBuffer[iPos++] = baseIndex;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 3;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 2;\n  indexBuffer[iPos++] = baseIndex + 3;\n\n  bufferPositions_.vertexPosition = vPos;\n  bufferPositions_.indexPosition = iPos;\n\n  return bufferPositions_;\n}\n\n/**\n * Pushes a single quad to form a line segment; also includes a computation for the join angles with previous and next\n * segment, in order to be able to offset the vertices correctly in the shader.\n * Join angles are between 0 and 2PI.\n * This also computes the length of the current segment and the sum of the join angle tangents in order\n * to store this information on each subsequent segment along the line. This is necessary to correctly render dashes\n * and symbols along the line.\n *\n *   pB (before)                          pA (after)\n *    X             negative             X\n *     \\             offset             /\n *      \\                              /\n *       \\   join              join   /\n *        \\ angle 0          angle 1 /\n *         \\←---                ←---/      positive\n *          \\   ←--          ←--   /        offset\n *           \\     ↑       ↓      /\n *            X────┴───────┴─────X\n *            p0                  p1\n *\n * @param {Float32Array} instructions Array of render instructions for lines.s\n * @param {number} segmentStartIndex Index of the segment start point from which render instructions will be read.\n * @param {number} segmentEndIndex Index of the segment end point from which render instructions will be read.\n * @param {number|null} beforeSegmentIndex Index of the point right before the segment (null if none, e.g this is a line start)\n * @param {number|null} afterSegmentIndex Index of the point right after the segment (null if none, e.g this is a line end)\n * @param {Array<number>} vertexArray Array containing vertices.\n * @param {Array<number>} indexArray Array containing indices.\n * @param {Array<number>} customAttributes Array of custom attributes value\n * @param {import('../../transform.js').Transform} toWorldTransform Transform matrix used to obtain world coordinates from instructions\n * @param {number} currentLength Cumulated length of segments processed so far\n * @param {number} currentAngleTangentSum Cumulated tangents of the join angles processed so far\n * @return {{length: number, angle: number}} Cumulated length with the newly processed segment (in world units), new sum of the join angle tangents\n * @private\n */\nexport function writeLineSegmentToBuffers(\n  instructions,\n  segmentStartIndex,\n  segmentEndIndex,\n  beforeSegmentIndex,\n  afterSegmentIndex,\n  vertexArray,\n  indexArray,\n  customAttributes,\n  toWorldTransform,\n  currentLength,\n  currentAngleTangentSum,\n) {\n  // compute the stride to determine how many vertices were already pushed\n  const baseVertexAttrsCount = 8; // base attributes: x0, y0, x1, y1, angle0, angle1, distance, params\n  const stride = baseVertexAttrsCount + customAttributes.length;\n  const baseIndex = vertexArray.length / stride;\n\n  // The segment is composed of two positions called P0[x0, y0] and P1[x1, y1]\n  // Depending on whether there are points before and after the segment, its final shape\n  // will be different\n  const p0 = [\n    instructions[segmentStartIndex + 0],\n    instructions[segmentStartIndex + 1],\n  ];\n  const p1 = [instructions[segmentEndIndex], instructions[segmentEndIndex + 1]];\n\n  // to compute join angles we need to reproject coordinates back in world units\n  const p0world = applyTransform(toWorldTransform, [...p0]);\n  const p1world = applyTransform(toWorldTransform, [...p1]);\n\n  /**\n   * Compute the angle between p0pA and p0pB\n   * @param {import(\"../../coordinate.js\").Coordinate} p0 Point 0\n   * @param {import(\"../../coordinate.js\").Coordinate} pA Point A\n   * @param {import(\"../../coordinate.js\").Coordinate} pB Point B\n   * @return {number} a value in [0, 2PI]\n   */\n  function angleBetween(p0, pA, pB) {\n    const lenA = Math.sqrt(\n      (pA[0] - p0[0]) * (pA[0] - p0[0]) + (pA[1] - p0[1]) * (pA[1] - p0[1]),\n    );\n    const tangentA = [(pA[0] - p0[0]) / lenA, (pA[1] - p0[1]) / lenA];\n    const orthoA = [-tangentA[1], tangentA[0]];\n    const lenB = Math.sqrt(\n      (pB[0] - p0[0]) * (pB[0] - p0[0]) + (pB[1] - p0[1]) * (pB[1] - p0[1]),\n    );\n    const tangentB = [(pB[0] - p0[0]) / lenB, (pB[1] - p0[1]) / lenB];\n\n    // this angle can be clockwise or anticlockwise; hence the computation afterwards\n    const angle =\n      lenA === 0 || lenB === 0\n        ? 0\n        : Math.acos(\n            clamp(tangentB[0] * tangentA[0] + tangentB[1] * tangentA[1], -1, 1),\n          );\n    const isClockwise = tangentB[0] * orthoA[0] + tangentB[1] * orthoA[1] > 0;\n    return !isClockwise ? Math.PI * 2 - angle : angle;\n  }\n\n  // a negative angle indicates a line cap\n  let angle0 = -1;\n  let angle1 = -1;\n  let newAngleTangentSum = currentAngleTangentSum;\n\n  const joinBefore = beforeSegmentIndex !== null;\n  const joinAfter = afterSegmentIndex !== null;\n\n  // add vertices and adapt offsets for P0 in case of join\n  if (joinBefore) {\n    // B for before\n    const pB = [\n      instructions[beforeSegmentIndex],\n      instructions[beforeSegmentIndex + 1],\n    ];\n    const pBworld = applyTransform(toWorldTransform, [...pB]);\n    angle0 = angleBetween(p0world, p1world, pBworld);\n\n    // only add to the sum if the angle isn't too close to 0 or 2PI\n    if (Math.cos(angle0) <= LINESTRING_ANGLE_COSINE_CUTOFF) {\n      newAngleTangentSum += Math.tan((angle0 - Math.PI) / 2);\n    }\n  }\n  // adapt offsets for P1 in case of join; add to angle sum\n  if (joinAfter) {\n    // A for after\n    const pA = [\n      instructions[afterSegmentIndex],\n      instructions[afterSegmentIndex + 1],\n    ];\n    const pAworld = applyTransform(toWorldTransform, [...pA]);\n    angle1 = angleBetween(p1world, p0world, pAworld);\n\n    // only add to the sum if the angle isn't too close to 0 or 2PI\n    if (Math.cos(angle1) <= LINESTRING_ANGLE_COSINE_CUTOFF) {\n      newAngleTangentSum += Math.tan((Math.PI - angle1) / 2);\n    }\n  }\n\n  /**\n   * @param {number} vertexIndex From 0 to 3, indicating position in the quad\n   * @param {number} angleSum Sum of the join angles encountered so far (used to compute distance offset\n   * @return {number} A float value containing both information\n   */\n  function computeParameters(vertexIndex, angleSum) {\n    if (angleSum === 0) {\n      return vertexIndex * 10000;\n    }\n    return Math.sign(angleSum) * (vertexIndex * 10000 + Math.abs(angleSum));\n  }\n\n  // add main segment triangles\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(0, currentAngleTangentSum),\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(1, currentAngleTangentSum),\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(2, currentAngleTangentSum),\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(3, currentAngleTangentSum),\n  );\n  vertexArray.push(...customAttributes);\n\n  indexArray.push(\n    baseIndex,\n    baseIndex + 1,\n    baseIndex + 2,\n    baseIndex + 1,\n    baseIndex + 3,\n    baseIndex + 2,\n  );\n\n  return {\n    length:\n      currentLength +\n      Math.sqrt(\n        (p1world[0] - p0world[0]) * (p1world[0] - p0world[0]) +\n          (p1world[1] - p0world[1]) * (p1world[1] - p0world[1]),\n      ),\n    angle: newAngleTangentSum,\n  };\n}\n\n/**\n * Pushes several triangles to form a polygon, including holes\n * @param {Float32Array} instructions Array of render instructions for lines.\n * @param {number} polygonStartIndex Index of the polygon start point from which render instructions will be read.\n * @param {Array<number>} vertexArray Array containing vertices.\n * @param {Array<number>} indexArray Array containing indices.\n * @param {number} customAttributesSize Amount of custom attributes for each element.\n * @return {number} Next polygon instructions index\n * @private\n */\nexport function writePolygonTrianglesToBuffers(\n  instructions,\n  polygonStartIndex,\n  vertexArray,\n  indexArray,\n  customAttributesSize,\n) {\n  const instructionsPerVertex = 2; // x, y\n  const attributesPerVertex = 2 + customAttributesSize;\n  let instructionsIndex = polygonStartIndex;\n  const customAttributes = instructions.slice(\n    instructionsIndex,\n    instructionsIndex + customAttributesSize,\n  );\n  instructionsIndex += customAttributesSize;\n  const ringsCount = instructions[instructionsIndex++];\n  let verticesCount = 0;\n  const holes = new Array(ringsCount - 1);\n  for (let i = 0; i < ringsCount; i++) {\n    verticesCount += instructions[instructionsIndex++];\n    if (i < ringsCount - 1) {\n      holes[i] = verticesCount;\n    }\n  }\n  const flatCoords = instructions.slice(\n    instructionsIndex,\n    instructionsIndex + verticesCount * instructionsPerVertex,\n  );\n\n  // pushing to vertices and indices!! this is where the magic happens\n  const result = earcut(flatCoords, holes, instructionsPerVertex);\n  for (let i = 0; i < result.length; i++) {\n    indexArray.push(result[i] + vertexArray.length / attributesPerVertex);\n  }\n  for (let i = 0; i < flatCoords.length; i += 2) {\n    vertexArray.push(flatCoords[i], flatCoords[i + 1], ...customAttributes);\n  }\n\n  return instructionsIndex + verticesCount * instructionsPerVertex;\n}\n\n/**\n * Returns a texture of 1x1 pixel, white\n * @private\n * @return {ImageData} Image data.\n */\nexport function getBlankImageData() {\n  const canvas = document.createElement('canvas');\n  const image = canvas.getContext('2d').createImageData(1, 1);\n  image.data[0] = 255;\n  image.data[1] = 255;\n  image.data[2] = 255;\n  image.data[3] = 255;\n  return image;\n}\n\n/**\n * Generates a color array based on a numerical id\n * Note: the range for each component is 0 to 1 with 256 steps\n * @param {number} id Id\n * @param {Array<number>} [array] Reusable array\n * @return {Array<number>} Color array containing the encoded id\n */\nexport function colorEncodeId(id, array) {\n  array = array || [];\n  const radix = 256;\n  const divide = radix - 1;\n  array[0] = Math.floor(id / radix / radix / radix) / divide;\n  array[1] = (Math.floor(id / radix / radix) % radix) / divide;\n  array[2] = (Math.floor(id / radix) % radix) / divide;\n  array[3] = (id % radix) / divide;\n  return array;\n}\n\n/**\n * Reads an id from a color-encoded array\n * Note: the expected range for each component is 0 to 1 with 256 steps.\n * @param {Array<number>} color Color array containing the encoded id\n * @return {number} Decoded id\n */\nexport function colorDecodeId(color) {\n  let id = 0;\n  const radix = 256;\n  const mult = radix - 1;\n  id += Math.round(color[0] * radix * radix * radix * mult);\n  id += Math.round(color[1] * radix * radix * mult);\n  id += Math.round(color[2] * radix * mult);\n  id += Math.round(color[3] * mult);\n  return id;\n}\n","/**\n * @module ol/renderer/webgl/PointsLayer\n */\nimport BaseVector from '../../layer/BaseVector.js';\nimport VectorEventType from '../../source/VectorEventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport WebGLRenderTarget from '../../webgl/RenderTarget.js';\nimport {ARRAY_BUFFER, DYNAMIC_DRAW, ELEMENT_ARRAY_BUFFER} from '../../webgl.js';\nimport {AttributeType, DefaultUniform} from '../../webgl/Helper.js';\nimport {WebGLWorkerMessageType} from '../../render/webgl/constants.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  makeInverse as makeInverseTransform,\n  multiply as multiplyTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {assert} from '../../asserts.js';\nimport {buffer, createEmpty, equals} from '../../extent.js';\nimport {colorDecodeId, colorEncodeId} from '../../render/webgl/utils.js';\nimport {create as createWebGLWorker} from '../../worker/webgl.js';\nimport {fromUserCoordinate, getUserProjection} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {getWorldParameters} from './worldUtil.js';\nimport {listen, unlistenByKey} from '../../events.js';\n\n/**\n * @typedef {Object} CustomAttribute A description of a custom attribute to be passed on to the GPU, with a value different\n * for each feature.\n * @property {string} name Attribute name.\n * @property {function(import(\"../../Feature\").default, Object<string, *>):number} callback This callback computes the numerical value of the\n * attribute for a given feature (properties are available as 2nd arg for quicker access).\n */\n\n/**\n * @typedef {Object} FeatureCacheItem Object that holds a reference to a feature, its geometry and properties. Used to optimize\n * rebuildBuffers by accessing these objects quicker.\n * @property {import(\"../../Feature\").default} feature Feature\n * @property {Object<string, *>} properties Feature properties\n * @property {import(\"../../geom\").Geometry} geometry Feature geometry\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the canvas element.\n * @property {Array<CustomAttribute>} [attributes] These attributes will be read from the features in the source and then\n * passed to the GPU. The `name` property of each attribute will serve as its identifier:\n *  * In the vertex shader as an `attribute` by prefixing it with `a_`\n *  * In the fragment shader as a `varying` by prefixing it with `v_`\n * Please note that these can only be numerical values.\n * @property {string} vertexShader Vertex shader source, mandatory.\n * @property {string} fragmentShader Fragment shader source, mandatory.\n * @property {boolean} [hitDetectionEnabled] Whether shader is hit detection aware.\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * Please note that `u_texture` is reserved for the main texture slot and `u_opacity` is reserved for the layer opacity.\n * @property {Array<import(\"./Layer\").PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * WebGL vector renderer optimized for points.\n * All features will be rendered as quads (two triangles forming a square). New data will be flushed to the GPU\n * every time the vector source changes.\n *\n * You need to provide vertex and fragment shaders for rendering. This can be done using\n * {@link module:ol/webgl/ShaderBuilder~ShaderBuilder} utilities. These shaders shall expect a `a_position` attribute\n * containing the screen-space projected center of the quad, as well as a `a_index` attribute\n * whose value (0, 1, 2 or 3) indicates which quad vertex is currently getting processed (see structure below).\n *\n * To include variable attributes in the shaders, you need to declare them using the `attributes` property of\n * the options object like so:\n * ```js\n * new WebGLPointsLayerRenderer(layer, {\n *   attributes: [\n *     {\n *       name: 'size',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *     {\n *       name: 'weight',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *   ],\n *   vertexShader:\n *     // shader using attribute a_weight and a_size\n *   fragmentShader:\n *     // shader using varying v_weight and v_size\n * ```\n *\n * To enable hit detection, you must as well provide dedicated shaders using the `hitVertexShader`\n * and `hitFragmentShader` properties. These shall expect the `a_hitColor` attribute to contain\n * the final color that will have to be output for hit detection to work.\n *\n * The following uniform is used for the main texture: `u_texture`.\n * The following uniform is used for the layer opacity: `u_opacity`.\n *\n * Please note that the main shader output should have premultiplied alpha, otherwise visual anomalies may occur.\n *\n * Points are rendered as quads with the following structure:\n *\n * ```\n *   (u0, v1)      (u1, v1)\n *  [3]----------[2]\n *   |`           |\n *   |  `         |\n *   |    `       |\n *   |      `     |\n *   |        `   |\n *   |          ` |\n *  [0]----------[1]\n *   (u0, v0)      (u1, v0)\n *  ```\n *\n * This uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\n *\n * @api\n */\nclass WebGLPointsLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n   * @param {Options} options Options.\n   */\n  constructor(layer, options) {\n    const uniforms = options.uniforms || {};\n    const projectionMatrixTransform = createTransform();\n    uniforms[DefaultUniform.PROJECTION_MATRIX] = projectionMatrixTransform;\n\n    super(layer, {\n      uniforms: uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    this.sourceRevision_ = -1;\n\n    this.verticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n    this.indicesBuffer_ = new WebGLArrayBuffer(\n      ELEMENT_ARRAY_BUFFER,\n      DYNAMIC_DRAW,\n    );\n\n    /**\n     * @private\n     */\n    this.vertexShader_ = options.vertexShader;\n\n    /**\n     * @private\n     */\n    this.fragmentShader_ = options.fragmentShader;\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.program_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hitDetectionEnabled_ = options.hitDetectionEnabled ?? true;\n\n    const customAttributes = options.attributes\n      ? options.attributes.map(function (attribute) {\n          return {\n            name: 'a_prop_' + attribute.name,\n            size: 1,\n            type: AttributeType.FLOAT,\n          };\n        })\n      : [];\n\n    /**\n     * A list of attributes used by the renderer. By default only the position and\n     * index of the vertex (0 to 3) are required.\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     */\n    this.attributes = [\n      {\n        name: 'a_position',\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_index',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ];\n\n    if (this.hitDetectionEnabled_) {\n      this.attributes.push({\n        name: 'a_prop_hitColor',\n        size: 4,\n        type: AttributeType.FLOAT,\n      });\n      this.attributes.push({\n        name: 'a_featureUid',\n        size: 1,\n        type: AttributeType.FLOAT,\n      });\n    }\n    this.attributes.push(...customAttributes);\n\n    this.customAttributes = options.attributes ? options.attributes : [];\n\n    this.previousExtent_ = createEmpty();\n\n    /**\n     * This transform is updated on every frame and is the composition of:\n     * - invert of the world->screen transform that was used when rebuilding buffers (see `this.renderTransform_`)\n     * - current world->screen transform\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.currentTransform_ = projectionMatrixTransform;\n\n    /**\n     * This transform is updated when buffers are rebuilt and converts world space coordinates to screen space\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.renderTransform_ = createTransform();\n\n    /**\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.invertRenderTransform_ = createTransform();\n\n    /**\n     * @type {Float32Array}\n     * @private\n     */\n    this.renderInstructions_ = new Float32Array(0);\n\n    /**\n     * @type {WebGLRenderTarget}\n     * @private\n     */\n    this.hitRenderTarget_;\n\n    /**\n     * Keep track of latest message sent to worker\n     * @type {number}\n     * @private\n     */\n    this.lastSentId = 0;\n\n    /**\n     * @private\n     */\n    this.worker_ = createWebGLWorker();\n\n    this.worker_.addEventListener(\n      'message',\n      /**\n       * @param {*} event Event.\n       */\n      (event) => {\n        const received = event.data;\n        if (received.type === WebGLWorkerMessageType.GENERATE_POINT_BUFFERS) {\n          const projectionTransform = received.projectionTransform;\n          this.verticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n          this.helper.flushBufferData(this.verticesBuffer_);\n          this.indicesBuffer_.fromArrayBuffer(received.indexBuffer);\n          this.helper.flushBufferData(this.indicesBuffer_);\n\n          this.renderTransform_ = projectionTransform;\n          makeInverseTransform(\n            this.invertRenderTransform_,\n            this.renderTransform_,\n          );\n          this.renderInstructions_ = new Float32Array(\n            event.data.renderInstructions,\n          );\n          if (received.id === this.lastSentId) {\n            this.ready = true;\n          }\n          this.getLayer().changed();\n        }\n      },\n    );\n\n    /**\n     * This object will be updated when the source changes. Key is uid.\n     * @type {Object<string, FeatureCacheItem>}\n     * @private\n     */\n    this.featureCache_ = {};\n\n    /**\n     * Amount of features in the cache.\n     * @type {number}\n     * @private\n     */\n    this.featureCount_ = 0;\n\n    const source = this.getLayer().getSource();\n    this.sourceListenKeys_ = [\n      listen(\n        source,\n        VectorEventType.ADDFEATURE,\n        this.handleSourceFeatureAdded_,\n        this,\n      ),\n      listen(\n        source,\n        VectorEventType.CHANGEFEATURE,\n        this.handleSourceFeatureChanged_,\n        this,\n      ),\n      listen(\n        source,\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceFeatureDelete_,\n        this,\n      ),\n      listen(\n        source,\n        VectorEventType.CLEAR,\n        this.handleSourceFeatureClear_,\n        this,\n      ),\n    ];\n    source.forEachFeature((feature) => {\n      this.featureCache_[getUid(feature)] = {\n        feature: feature,\n        properties: feature.getProperties(),\n        geometry: feature.getGeometry(),\n      };\n      this.featureCount_++;\n    });\n  }\n\n  afterHelperCreated() {\n    this.program_ = this.helper.getProgram(\n      this.fragmentShader_,\n      this.vertexShader_,\n    );\n\n    if (this.hitDetectionEnabled_) {\n      this.hitRenderTarget_ = new WebGLRenderTarget(this.helper);\n    }\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureAdded_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n    this.featureCount_++;\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureChanged_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureDelete_(event) {\n    const feature = event.feature;\n    delete this.featureCache_[getUid(feature)];\n    this.featureCount_--;\n  }\n\n  /**\n   * @private\n   */\n  handleSourceFeatureClear_() {\n    this.featureCache_ = {};\n    this.featureCount_ = 0;\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    const gl = this.helper.getGL();\n    this.preRender(gl, frameState);\n    const [startWorld, endWorld, worldWidth] = getWorldParameters(\n      frameState,\n      this.getLayer(),\n    );\n\n    // draw the normal canvas\n    this.renderWorlds(frameState, false, startWorld, endWorld, worldWidth);\n    this.helper.finalizeDraw(\n      frameState,\n      this.dispatchPreComposeEvent,\n      this.dispatchPostComposeEvent,\n    );\n\n    if (this.hitDetectionEnabled_) {\n      // draw the hit buffer\n      this.renderWorlds(frameState, true, startWorld, endWorld, worldWidth);\n      this.hitRenderTarget_.clearCachedData();\n    }\n\n    this.postRender(gl, frameState);\n\n    const canvas = this.helper.getCanvas();\n    return canvas;\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrameInternal(frameState) {\n    const layer = this.getLayer();\n    const vectorSource = layer.getSource();\n    const viewState = frameState.viewState;\n    const viewNotMoving =\n      !frameState.viewHints[ViewHint.ANIMATING] &&\n      !frameState.viewHints[ViewHint.INTERACTING];\n    const extentChanged = !equals(this.previousExtent_, frameState.extent);\n    const sourceChanged = this.sourceRevision_ < vectorSource.getRevision();\n\n    if (sourceChanged) {\n      this.sourceRevision_ = vectorSource.getRevision();\n    }\n\n    if (viewNotMoving && (extentChanged || sourceChanged)) {\n      const projection = viewState.projection;\n      const resolution = viewState.resolution;\n\n      const renderBuffer =\n        layer instanceof BaseVector ? layer.getRenderBuffer() : 0;\n      const extent = buffer(frameState.extent, renderBuffer * resolution);\n      vectorSource.loadFeatures(extent, resolution, projection);\n\n      this.rebuildBuffers_(frameState);\n      this.previousExtent_ = frameState.extent.slice();\n    }\n\n    this.helper.useProgram(this.program_, frameState);\n    this.helper.prepareDraw(frameState);\n\n    // write new data\n    this.helper.bindBuffer(this.verticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n    this.helper.enableAttributes(this.attributes);\n\n    return true;\n  }\n\n  /**\n   * Rebuild internal webgl buffers based on current view extent; costly, should not be called too much\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  rebuildBuffers_(frameState) {\n    // saves the projection transform for the current frame state\n    const projectionTransform = createTransform();\n    this.helper.makeProjectionTransform(frameState, projectionTransform);\n\n    const userProjection = getUserProjection();\n\n    const baseInstructionLength = this.hitDetectionEnabled_ ? 7 : 2; // see below\n    const singleInstructionLength =\n      baseInstructionLength + this.customAttributes.length;\n    const totalSize = singleInstructionLength * this.featureCount_;\n    if (\n      !this.renderInstructions_ ||\n      this.renderInstructions_.length !== totalSize\n    ) {\n      this.renderInstructions_ = new Float32Array(totalSize);\n    }\n\n    // loop on features to fill the buffer\n    let featureCache, geometry;\n    const tmpCoords = [];\n    const tmpColor = [];\n    let idx = -1;\n    for (const featureUid in this.featureCache_) {\n      featureCache = this.featureCache_[featureUid];\n      geometry = /** @type {import(\"../../geom\").Point} */ (\n        featureCache.geometry\n      );\n      if (!geometry || geometry.getType() !== 'Point') {\n        continue;\n      }\n      if (userProjection) {\n        const userCoords = fromUserCoordinate(\n          geometry.getFlatCoordinates(),\n          frameState.viewState.projection,\n        );\n        tmpCoords[0] = userCoords[0];\n        tmpCoords[1] = userCoords[1];\n      } else {\n        tmpCoords[0] = geometry.getFlatCoordinates()[0];\n        tmpCoords[1] = geometry.getFlatCoordinates()[1];\n      }\n      applyTransform(projectionTransform, tmpCoords);\n\n      this.renderInstructions_[++idx] = tmpCoords[0];\n      this.renderInstructions_[++idx] = tmpCoords[1];\n\n      // for hit detection, the feature uid is saved in the opacity value\n      // and the index of the opacity value is encoded in the color values\n      if (this.hitDetectionEnabled_) {\n        const hitColor = colorEncodeId(idx + 5, tmpColor);\n        this.renderInstructions_[++idx] = hitColor[0];\n        this.renderInstructions_[++idx] = hitColor[1];\n        this.renderInstructions_[++idx] = hitColor[2];\n        this.renderInstructions_[++idx] = hitColor[3];\n        this.renderInstructions_[++idx] = Number(featureUid);\n      }\n\n      // pushing custom attributes\n      for (let j = 0; j < this.customAttributes.length; j++) {\n        const value = this.customAttributes[j].callback(\n          featureCache.feature,\n          featureCache.properties,\n        );\n        this.renderInstructions_[++idx] = value;\n      }\n    }\n\n    /** @type {import('../../render/webgl/constants.js').WebGLWorkerGenerateBuffersMessage} */\n    const message = {\n      id: ++this.lastSentId,\n      type: WebGLWorkerMessageType.GENERATE_POINT_BUFFERS,\n      renderInstructions: this.renderInstructions_.buffer,\n      customAttributesSize: singleInstructionLength - 2,\n    };\n    // additional properties will be sent back as-is by the worker\n    message['projectionTransform'] = projectionTransform;\n    this.ready = false;\n    this.worker_.postMessage(message, [this.renderInstructions_.buffer]);\n    this.renderInstructions_ = null;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    assert(\n      this.hitDetectionEnabled_,\n      '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has been disabled using the `disableHitDetection: true` option.',\n    );\n    if (!this.renderInstructions_ || !this.hitDetectionEnabled_) {\n      return undefined;\n    }\n\n    const pixel = applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(),\n    );\n\n    const data = this.hitRenderTarget_.readPixel(pixel[0] / 2, pixel[1] / 2);\n    const color = [data[0] / 255, data[1] / 255, data[2] / 255, data[3] / 255];\n    const index = colorDecodeId(color);\n    const opacity = this.renderInstructions_[index];\n    const uid = Math.floor(opacity).toString();\n\n    const source = this.getLayer().getSource();\n    const feature = source.getFeatureByUid(uid);\n    if (feature) {\n      return callback(feature, this.getLayer(), null);\n    }\n    return undefined;\n  }\n\n  /**\n   * Render the world, either to the main framebuffer or to the hit framebuffer\n   * @param {import(\"../../Map.js\").FrameState} frameState current frame state\n   * @param {boolean} forHitDetection whether the rendering is for hit detection\n   * @param {number} startWorld the world to render in the first iteration\n   * @param {number} endWorld the last world to render\n   * @param {number} worldWidth the width of the worlds being rendered\n   */\n  renderWorlds(frameState, forHitDetection, startWorld, endWorld, worldWidth) {\n    let world = startWorld;\n\n    this.helper.useProgram(this.program_, frameState);\n\n    if (forHitDetection) {\n      this.hitRenderTarget_.setSize([\n        Math.floor(frameState.size[0] / 2),\n        Math.floor(frameState.size[1] / 2),\n      ]);\n      this.helper.prepareDrawToRenderTarget(\n        frameState,\n        this.hitRenderTarget_,\n        true,\n      );\n    }\n\n    this.helper.bindBuffer(this.verticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n    this.helper.enableAttributes(this.attributes);\n\n    do {\n      this.helper.makeProjectionTransform(frameState, this.currentTransform_);\n      translateTransform(this.currentTransform_, world * worldWidth, 0);\n      multiplyTransform(this.currentTransform_, this.invertRenderTransform_);\n      this.helper.applyUniforms(frameState);\n      this.helper.applyHitDetectionUniform(forHitDetection);\n      const renderCount = this.indicesBuffer_.getSize();\n      this.helper.drawElements(0, renderCount);\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.worker_.terminate();\n    this.layer_ = null;\n    this.sourceListenKeys_.forEach(function (key) {\n      unlistenByKey(key);\n    });\n    this.sourceListenKeys_ = null;\n    super.disposeInternal();\n  }\n\n  renderDeclutter() {}\n}\n\nexport default WebGLPointsLayerRenderer;\n","\n        export function create() {\n          const source = \"const e=\\\"GENERATE_POLYGON_BUFFERS\\\",t=\\\"GENERATE_POINT_BUFFERS\\\",n=\\\"GENERATE_LINE_STRING_BUFFERS\\\";function r(e,t){const n=t[0],r=t[1];return t[0]=e[0]*n+e[2]*r+e[4],t[1]=e[1]*n+e[3]*r+e[5],t}function x(e,t){const n=(r=t)[0]*r[3]-r[1]*r[2];var r;!function(e,t){if(!e)throw new Error(t)}(0!==n,\\\"Transformation matrix cannot be inverted\\\");const x=t[0],i=t[1],u=t[2],o=t[3],f=t[4],s=t[5];return e[0]=o/n,e[1]=-i/n,e[2]=-u/n,e[3]=x/n,e[4]=(u*s-o*f)/n,e[5]=-(x*s-i*f)/n,e}function i(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\\\"default\\\")?e.default:e}new Array(6);var u={exports:{}};function o(e,t,n){n=n||2;var r,x,i,u,o,s,l,v=t&&t.length,h=v?t[0]*n:e.length,c=f(e,0,h,n,!0),g=[];if(!c||c.next===c.prev)return g;if(v&&(c=function(e,t,n,r){var x,i,u,o=[];for(x=0,i=t.length;x<i;x++)(u=f(e,t[x]*r,x<i-1?t[x+1]*r:e.length,r,!1))===u.next&&(u.steiner=!0),o.push(d(u));for(o.sort(p),x=0;x<o.length;x++)n=y(o[x],n);return n}(e,t,c,n)),e.length>80*n){r=i=e[0],x=u=e[1];for(var b=n;b<h;b+=n)(o=e[b])<r&&(r=o),(s=e[b+1])<x&&(x=s),o>i&&(i=o),s>u&&(u=s);l=0!==(l=Math.max(i-r,u-x))?32767/l:0}return a(c,g,n,r,x,l,0),g}function f(e,t,n,r,x){var i,u;if(x===O(e,t,n,r)>0)for(i=t;i<n;i+=r)u=P(i,e[i],e[i+1],u);else for(i=n-r;i>=t;i-=r)u=P(i,e[i],e[i+1],u);return u&&m(u,u.next)&&(B(u),u=u.next),u}function s(e,t){if(!e)return e;t||(t=e);var n,r=e;do{if(n=!1,r.steiner||!m(r,r.next)&&0!==w(r.prev,r,r.next))r=r.next;else{if(B(r),(r=t=r.prev)===r.next)break;n=!0}}while(n||r!==t);return t}function a(e,t,n,r,x,i,u){if(e){!u&&i&&function(e,t,n,r){var x=e;do{0===x.z&&(x.z=b(x.x,x.y,t,n,r)),x.prevZ=x.prev,x.nextZ=x.next,x=x.next}while(x!==e);x.prevZ.nextZ=null,x.prevZ=null,function(e){var t,n,r,x,i,u,o,f,s=1;do{for(n=e,e=null,i=null,u=0;n;){for(u++,r=n,o=0,t=0;t<s&&(o++,r=r.nextZ);t++);for(f=s;o>0||f>0&&r;)0!==o&&(0===f||!r||n.z<=r.z)?(x=n,n=n.nextZ,o--):(x=r,r=r.nextZ,f--),i?i.nextZ=x:e=x,x.prevZ=i,i=x;n=r}i.nextZ=null,s*=2}while(u>1)}(x)}(e,r,x,i);for(var o,f,p=e;e.prev!==e.next;)if(o=e.prev,f=e.next,i?v(e,r,x,i):l(e))t.push(o.i/n|0),t.push(e.i/n|0),t.push(f.i/n|0),B(e),e=f.next,p=f.next;else if((e=f)===p){u?1===u?a(e=h(s(e),t,n),t,n,r,x,i,2):2===u&&c(e,t,n,r,x,i):a(s(e),t,n,r,x,i,1);break}}}function l(e){var t=e.prev,n=e,r=e.next;if(w(t,n,r)>=0)return!1;for(var x=t.x,i=n.x,u=r.x,o=t.y,f=n.y,s=r.y,a=x<i?x<u?x:u:i<u?i:u,l=o<f?o<s?o:s:f<s?f:s,v=x>i?x>u?x:u:i>u?i:u,h=o>f?o>s?o:s:f>s?f:s,c=r.next;c!==t;){if(c.x>=a&&c.x<=v&&c.y>=l&&c.y<=h&&M(x,o,i,f,u,s,c.x,c.y)&&w(c.prev,c,c.next)>=0)return!1;c=c.next}return!0}function v(e,t,n,r){var x=e.prev,i=e,u=e.next;if(w(x,i,u)>=0)return!1;for(var o=x.x,f=i.x,s=u.x,a=x.y,l=i.y,v=u.y,h=o<f?o<s?o:s:f<s?f:s,c=a<l?a<v?a:v:l<v?l:v,p=o>f?o>s?o:s:f>s?f:s,y=a>l?a>v?a:v:l>v?l:v,g=b(h,c,t,n,r),d=b(p,y,t,n,r),Z=e.prevZ,m=e.nextZ;Z&&Z.z>=g&&m&&m.z<=d;){if(Z.x>=h&&Z.x<=p&&Z.y>=c&&Z.y<=y&&Z!==x&&Z!==u&&M(o,a,f,l,s,v,Z.x,Z.y)&&w(Z.prev,Z,Z.next)>=0)return!1;if(Z=Z.prevZ,m.x>=h&&m.x<=p&&m.y>=c&&m.y<=y&&m!==x&&m!==u&&M(o,a,f,l,s,v,m.x,m.y)&&w(m.prev,m,m.next)>=0)return!1;m=m.nextZ}for(;Z&&Z.z>=g;){if(Z.x>=h&&Z.x<=p&&Z.y>=c&&Z.y<=y&&Z!==x&&Z!==u&&M(o,a,f,l,s,v,Z.x,Z.y)&&w(Z.prev,Z,Z.next)>=0)return!1;Z=Z.prevZ}for(;m&&m.z<=d;){if(m.x>=h&&m.x<=p&&m.y>=c&&m.y<=y&&m!==x&&m!==u&&M(o,a,f,l,s,v,m.x,m.y)&&w(m.prev,m,m.next)>=0)return!1;m=m.nextZ}return!0}function h(e,t,n){var r=e;do{var x=r.prev,i=r.next.next;!m(x,i)&&A(x,r,r.next,i)&&z(x,i)&&z(i,x)&&(t.push(x.i/n|0),t.push(r.i/n|0),t.push(i.i/n|0),B(r),B(r.next),r=e=i),r=r.next}while(r!==e);return s(r)}function c(e,t,n,r,x,i){var u=e;do{for(var o=u.next.next;o!==u.prev;){if(u.i!==o.i&&Z(u,o)){var f=F(u,o);return u=s(u,u.next),f=s(f,f.next),a(u,t,n,r,x,i,0),void a(f,t,n,r,x,i,0)}o=o.next}u=u.next}while(u!==e)}function p(e,t){return e.x-t.x}function y(e,t){var n=function(e,t){var n,r=t,x=e.x,i=e.y,u=-1/0;do{if(i<=r.y&&i>=r.next.y&&r.next.y!==r.y){var o=r.x+(i-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(o<=x&&o>u&&(u=o,n=r.x<r.next.x?r:r.next,o===x))return n}r=r.next}while(r!==t);if(!n)return null;var f,s=n,a=n.x,l=n.y,v=1/0;r=n;do{x>=r.x&&r.x>=a&&x!==r.x&&M(i<l?x:u,i,a,l,i<l?u:x,i,r.x,r.y)&&(f=Math.abs(i-r.y)/(x-r.x),z(r,e)&&(f<v||f===v&&(r.x>n.x||r.x===n.x&&g(n,r)))&&(n=r,v=f)),r=r.next}while(r!==s);return n}(e,t);if(!n)return t;var r=F(n,e);return s(r,r.next),s(n,n.next)}function g(e,t){return w(e.prev,e,t.prev)<0&&w(t.next,e,e.next)<0}function b(e,t,n,r,x){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=(e-n)*x|0)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=(t-r)*x|0)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function d(e){var t=e,n=e;do{(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next}while(t!==e);return n}function M(e,t,n,r,x,i,u,o){return(x-u)*(t-o)>=(e-u)*(i-o)&&(e-u)*(r-o)>=(n-u)*(t-o)&&(n-u)*(i-o)>=(x-u)*(r-o)}function Z(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){var n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&A(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}(e,t)&&(z(e,t)&&z(t,e)&&function(e,t){var n=e,r=!1,x=(e.x+t.x)/2,i=(e.y+t.y)/2;do{n.y>i!=n.next.y>i&&n.next.y!==n.y&&x<(n.next.x-n.x)*(i-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==e);return r}(e,t)&&(w(e.prev,e,t.prev)||w(e,t.prev,t))||m(e,t)&&w(e.prev,e,e.next)>0&&w(t.prev,t,t.next)>0)}function w(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function m(e,t){return e.x===t.x&&e.y===t.y}function A(e,t,n,r){var x=I(w(e,t,n)),i=I(w(e,t,r)),u=I(w(n,r,e)),o=I(w(n,r,t));return x!==i&&u!==o||(!(0!==x||!E(e,n,t))||(!(0!==i||!E(e,r,t))||(!(0!==u||!E(n,e,r))||!(0!==o||!E(n,t,r)))))}function E(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function I(e){return e>0?1:e<0?-1:0}function z(e,t){return w(e.prev,e,e.next)<0?w(e,t,e.next)>=0&&w(e,e.prev,t)>=0:w(e,t,e.prev)<0||w(e,e.next,t)<0}function F(e,t){var n=new _(e.i,e.x,e.y),r=new _(t.i,t.x,t.y),x=e.next,i=t.prev;return e.next=t,t.prev=e,n.next=x,x.prev=n,r.next=n,n.prev=r,i.next=r,r.prev=i,r}function P(e,t,n,r){var x=new _(e,t,n);return r?(x.next=r.next,x.prev=r,r.next.prev=x,r.next=x):(x.prev=x,x.next=x),x}function B(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function _(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function O(e,t,n,r){for(var x=0,i=t,u=n-r;i<n;i+=r)x+=(e[u]-e[i])*(e[i+1]+e[u+1]),u=i;return x}u.exports=o,u.exports.default=o,o.deviation=function(e,t,n,r){var x=t&&t.length,i=x?t[0]*n:e.length,u=Math.abs(O(e,0,i,n));if(x)for(var o=0,f=t.length;o<f;o++){var s=t[o]*n,a=o<f-1?t[o+1]*n:e.length;u-=Math.abs(O(e,s,a,n))}var l=0;for(o=0;o<r.length;o+=3){var v=r[o]*n,h=r[o+1]*n,c=r[o+2]*n;l+=Math.abs((e[v]-e[c])*(e[h+1]-e[v+1])-(e[v]-e[h])*(e[c+1]-e[v+1]))}return 0===u&&0===l?0:Math.abs((l-u)/u)},o.flatten=function(e){for(var t=e[0][0].length,n={vertices:[],holes:[],dimensions:t},r=0,x=0;x<e.length;x++){for(var i=0;i<e[x].length;i++)for(var u=0;u<t;u++)n.vertices.push(e[x][i][u]);x>0&&(r+=e[x-1].length,n.holes.push(r))}return n};var N=i(u.exports);const R=[],S={vertexPosition:0,indexPosition:0};function T(e,t,n,r,x){e[t+0]=n,e[t+1]=r,e[t+2]=x}function U(e,t,n,r,x,i){const u=3+x,o=e[t+0],f=e[t+1],s=R;s.length=x;for(let n=0;n<s.length;n++)s[n]=e[t+2+n];let a=i?i.vertexPosition:0,l=i?i.indexPosition:0;const v=a/u;return T(n,a,o,f,0),s.length&&n.set(s,a+3),a+=u,T(n,a,o,f,1),s.length&&n.set(s,a+3),a+=u,T(n,a,o,f,2),s.length&&n.set(s,a+3),a+=u,T(n,a,o,f,3),s.length&&n.set(s,a+3),a+=u,r[l++]=v,r[l++]=v+1,r[l++]=v+3,r[l++]=v+1,r[l++]=v+2,r[l++]=v+3,S.vertexPosition=a,S.indexPosition=l,S}function k(e,t,n,x,i,u,o,f,s,a,l){const v=8+f.length,h=u.length/v,c=[e[t+0],e[t+1]],p=[e[n],e[n+1]],y=r(s,[...c]),g=r(s,[...p]);function b(e,t,n){const r=Math.sqrt((t[0]-e[0])*(t[0]-e[0])+(t[1]-e[1])*(t[1]-e[1])),x=[(t[0]-e[0])/r,(t[1]-e[1])/r],i=[-x[1],x[0]],u=Math.sqrt((n[0]-e[0])*(n[0]-e[0])+(n[1]-e[1])*(n[1]-e[1])),o=[(n[0]-e[0])/u,(n[1]-e[1])/u],f=0===r||0===u?0:Math.acos((s=o[0]*x[0]+o[1]*x[1],a=-1,l=1,Math.min(Math.max(s,a),l)));var s,a,l;return o[0]*i[0]+o[1]*i[1]>0?f:2*Math.PI-f}let d=-1,M=-1,Z=l;const w=null!==i;if(null!==x){d=b(y,g,r(s,[...[e[x],e[x+1]]])),Math.cos(d)<=.985&&(Z+=Math.tan((d-Math.PI)/2))}if(w){M=b(g,y,r(s,[...[e[i],e[i+1]]])),Math.cos(M)<=.985&&(Z+=Math.tan((Math.PI-M)/2))}function m(e,t){return 0===t?1e4*e:Math.sign(t)*(1e4*e+Math.abs(t))}return u.push(c[0],c[1],p[0],p[1],d,M,a,m(0,l)),u.push(...f),u.push(c[0],c[1],p[0],p[1],d,M,a,m(1,l)),u.push(...f),u.push(c[0],c[1],p[0],p[1],d,M,a,m(2,l)),u.push(...f),u.push(c[0],c[1],p[0],p[1],d,M,a,m(3,l)),u.push(...f),o.push(h,h+1,h+2,h+1,h+3,h+2),{length:a+Math.sqrt((g[0]-y[0])*(g[0]-y[0])+(g[1]-y[1])*(g[1]-y[1])),angle:Z}}function G(e,t,n,r,x){const i=2+x;let u=t;const o=e.slice(u,u+x);u+=x;const f=e[u++];let s=0;const a=new Array(f-1);for(let t=0;t<f;t++)s+=e[u++],t<f-1&&(a[t]=s);const l=e.slice(u,u+2*s),v=N(l,a,2);for(let e=0;e<v.length;e++)r.push(v[e]+n.length/i);for(let e=0;e<l.length;e+=2)n.push(l[e],l[e+1],...o);return u+2*s}const j=self;j.onmessage=r=>{const i=r.data;switch(i.type){case t:{const e=3,t=2,n=i.customAttributesSize,r=t+n,x=new Float32Array(i.renderInstructions),u=x.length/r,o=4*u*(n+e),f=new Uint32Array(6*u),s=new Float32Array(o);let a;for(let e=0;e<x.length;e+=r)a=U(x,e,s,f,n,a);const l=Object.assign({vertexBuffer:s.buffer,indexBuffer:f.buffer,renderInstructions:x.buffer},i);j.postMessage(l,[s.buffer,f.buffer,x.buffer]);break}case n:{const e=[],t=[],n=i.customAttributesSize,r=2,u=new Float32Array(i.renderInstructions);let o=0;const f=[1,0,0,1,0,0];let s,a;for(x(f,i.renderInstructionsTransform);o<u.length;){a=Array.from(u.slice(o,o+n)),o+=n,s=u[o++];const x=o,i=o+(s-1)*r,l=u[x]===u[i]&&u[x+1]===u[i+1];let v=0,h=0;for(let n=0;n<s-1;n++){let c=null;n>0?c=o+(n-1)*r:l&&(c=i-r);let p=null;n<s-2?p=o+(n+2)*r:l&&(p=x+r);const y=k(u,o+n*r,o+(n+1)*r,c,p,e,t,a,f,v,h);v=y.length,h=y.angle}o+=s*r}const l=Uint32Array.from(t),v=Float32Array.from(e),h=Object.assign({vertexBuffer:v.buffer,indexBuffer:l.buffer,renderInstructions:u.buffer},i);j.postMessage(h,[v.buffer,l.buffer,u.buffer]);break}case e:{const e=[],t=[],n=i.customAttributesSize,r=new Float32Array(i.renderInstructions);let x=0;for(;x<r.length;)x=G(r,x,e,t,n);const u=Uint32Array.from(t),o=Float32Array.from(e),f=Object.assign({vertexBuffer:o.buffer,indexBuffer:u.buffer,renderInstructions:r.buffer},i);j.postMessage(f,[o.buffer,u.buffer,r.buffer]);break}}};\";\n          return new Worker(typeof Blob === 'undefined'\n            ? 'data:application/javascript;base64,' + Buffer.from(source, 'binary').toString('base64')\n            : URL.createObjectURL(new Blob([source], {type: 'application/javascript'})));\n        }\n      \n","import {getWidth} from '../../extent.js';\n\n/**\n * Compute world params\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {any} layer The layer\n * @return {Array<number>} The world start, end and width.\n */\nexport function getWorldParameters(frameState, layer) {\n  const projection = frameState.viewState.projection;\n\n  const vectorSource = layer.getSource();\n  const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n  const projectionExtent = projection.getExtent();\n\n  const extent = frameState.extent;\n  const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n  const endWorld = multiWorld\n    ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n    : 1;\n\n  const startWorld = multiWorld\n    ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n    : 0;\n\n  return [startWorld, endWorld, worldWidth];\n}\n","/**\n * @module ol/webgl/PaletteTexture\n */\n\nclass PaletteTexture {\n  /**\n   * @param {string} name The name of the texture.\n   * @param {Uint8Array} data The texture data.\n   */\n  constructor(name, data) {\n    this.name = name;\n    this.data = data;\n\n    /**\n     * @type {WebGLTexture|null}\n     * @private\n     */\n    this.texture_ = null;\n  }\n\n  /**\n   * @param {WebGLRenderingContext} gl Rendering context.\n   * @return {WebGLTexture} The texture.\n   */\n  getTexture(gl) {\n    if (!this.texture_) {\n      const texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,\n        gl.RGBA,\n        this.data.length / 4,\n        1,\n        0,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data,\n      );\n      this.texture_ = texture;\n    }\n    return this.texture_;\n  }\n\n  /**\n   * @param {WebGLRenderingContext} gl Rendering context.\n   */\n  delete(gl) {\n    if (this.texture_) {\n      gl.deleteTexture(this.texture_);\n    }\n    this.texture_ = null;\n  }\n}\n\nexport default PaletteTexture;\n","/**\n * @module ol/renderer/webgl/TileLayer\n */\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileState from '../../TileState.js';\nimport TileTexture from '../../webgl/TileTexture.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLBaseTileLayerRenderer, {\n  Uniforms as BaseUniforms,\n  getCacheKey,\n} from './TileLayerBase.js';\nimport {AttributeType} from '../../webgl/Helper.js';\nimport {ELEMENT_ARRAY_BUFFER, STATIC_DRAW} from '../../webgl.js';\nimport {apply as applyTransform} from '../../transform.js';\nimport {\n  boundingExtent,\n  containsCoordinate,\n  getIntersection,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {fromTransform as mat4FromTransform} from '../../vec/mat4.js';\nimport {toSize} from '../../size.js';\n\nexport const Uniforms = {\n  ...BaseUniforms,\n  TILE_TEXTURE_ARRAY: 'u_tileTextures',\n  TEXTURE_PIXEL_WIDTH: 'u_texturePixelWidth',\n  TEXTURE_PIXEL_HEIGHT: 'u_texturePixelHeight',\n  TEXTURE_RESOLUTION: 'u_textureResolution', // map units per texture pixel\n  TEXTURE_ORIGIN_X: 'u_textureOriginX', // map x coordinate of left edge of texture\n  TEXTURE_ORIGIN_Y: 'u_textureOriginY', // map y coordinate of top edge of texture\n};\n\nexport const Attributes = {\n  TEXTURE_COORD: 'a_textureCoord',\n};\n\n/**\n * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n */\nconst attributeDescriptions = [\n  {\n    name: Attributes.TEXTURE_COORD,\n    size: 2,\n    type: AttributeType.FLOAT,\n  },\n];\n\n/**\n * @typedef {Object} Options\n * @property {string} vertexShader Vertex shader source.\n * @property {string} fragmentShader Fragment shader source.\n * @property {Object<string, import(\"../../webgl/Helper\").UniformValue>} [uniforms] Additional uniforms\n * made available to shaders.\n * @property {Array<import(\"../../webgl/PaletteTexture.js\").default>} [paletteTextures] Palette textures.\n * @property {number} [cacheSize=512] The texture cache size.\n */\n\n/**\n * @typedef {import(\"../../layer/WebGLTile.js\").default} LayerType\n */\n/**\n * @typedef {import(\"../../webgl/TileTexture.js\").TileType} TileTextureType\n */\n/**\n * @typedef {import(\"../../webgl/TileTexture.js\").default} TileTextureRepresentation\n */\n\n/**\n * @classdesc\n * WebGL renderer for tile layers.\n * @extends {WebGLBaseTileLayerRenderer<LayerType, TileTextureType, TileTextureRepresentation>}\n * @api\n */\nclass WebGLTileLayerRenderer extends WebGLBaseTileLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} options Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer, options);\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.program_;\n\n    /**\n     * @private\n     */\n    this.vertexShader_ = options.vertexShader;\n\n    /**\n     * @private\n     */\n    this.fragmentShader_ = options.fragmentShader;\n\n    /**\n     * Tiles are rendered as a quad with the following structure:\n     *\n     *  [P3]---------[P2]\n     *   |`           |\n     *   |  `     B   |\n     *   |    `       |\n     *   |      `     |\n     *   |   A    `   |\n     *   |          ` |\n     *  [P0]---------[P1]\n     *\n     * Triangle A: P0, P1, P3\n     * Triangle B: P1, P2, P3\n     *\n     * @private\n     */\n    this.indices_ = new WebGLArrayBuffer(ELEMENT_ARRAY_BUFFER, STATIC_DRAW);\n    this.indices_.fromArray([0, 1, 3, 1, 2, 3]);\n\n    /**\n     * @type {Array<import(\"../../webgl/PaletteTexture.js\").default>}\n     * @private\n     */\n    this.paletteTextures_ = options.paletteTextures || [];\n  }\n\n  /**\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    super.reset(options);\n    if (this.helper) {\n      const gl = this.helper.getGL();\n      for (const paletteTexture of this.paletteTextures_) {\n        paletteTexture.delete(gl);\n      }\n    }\n\n    this.vertexShader_ = options.vertexShader;\n    this.fragmentShader_ = options.fragmentShader;\n    this.paletteTextures_ = options.paletteTextures || [];\n\n    if (this.helper) {\n      this.program_ = this.helper.getProgram(\n        this.fragmentShader_,\n        this.vertexShader_,\n      );\n    }\n  }\n\n  afterHelperCreated() {\n    this.program_ = this.helper.getProgram(\n      this.fragmentShader_,\n      this.vertexShader_,\n    );\n    this.helper.flushBufferData(this.indices_);\n  }\n\n  removeHelper() {\n    if (this.helper) {\n      const gl = this.helper.getGL();\n      for (const paletteTexture of this.paletteTextures_) {\n        paletteTexture.delete(gl);\n      }\n    }\n\n    super.removeHelper();\n  }\n\n  createTileRepresentation(options) {\n    return new TileTexture(options);\n  }\n\n  beforeTilesRender(frameState, tilesWithAlpha) {\n    super.beforeTilesRender(frameState, tilesWithAlpha);\n    this.helper.useProgram(this.program_, frameState);\n  }\n\n  renderTile(\n    tileTexture,\n    tileTransform,\n    frameState,\n    renderExtent,\n    tileResolution,\n    tileSize,\n    tileOrigin,\n    tileExtent,\n    depth,\n    gutter,\n    alpha,\n  ) {\n    const gl = this.helper.getGL();\n    this.helper.bindBuffer(tileTexture.coords);\n    this.helper.bindBuffer(this.indices_);\n    this.helper.enableAttributes(attributeDescriptions);\n\n    let textureSlot = 0;\n    while (textureSlot < tileTexture.textures.length) {\n      const uniformName = `${Uniforms.TILE_TEXTURE_ARRAY}[${textureSlot}]`;\n      this.helper.bindTexture(\n        tileTexture.textures[textureSlot],\n        textureSlot,\n        uniformName,\n      );\n      ++textureSlot;\n    }\n\n    for (\n      let paletteIndex = 0;\n      paletteIndex < this.paletteTextures_.length;\n      ++paletteIndex\n    ) {\n      const paletteTexture = this.paletteTextures_[paletteIndex];\n      const texture = paletteTexture.getTexture(gl);\n      this.helper.bindTexture(texture, textureSlot, paletteTexture.name);\n      ++textureSlot;\n    }\n\n    const viewState = frameState.viewState;\n\n    const tileWidthWithGutter = tileSize[0] + 2 * gutter;\n    const tileHeightWithGutter = tileSize[1] + 2 * gutter;\n\n    const tile = tileTexture.tile;\n    const tileCoord = tile.tileCoord;\n\n    const tileCenterI = tileCoord[1];\n    const tileCenterJ = tileCoord[2];\n\n    this.helper.setUniformMatrixValue(\n      Uniforms.TILE_TRANSFORM,\n      mat4FromTransform(this.tempMat4, tileTransform),\n    );\n\n    this.helper.setUniformFloatValue(Uniforms.TRANSITION_ALPHA, alpha);\n    this.helper.setUniformFloatValue(Uniforms.DEPTH, depth);\n\n    let gutterExtent = renderExtent;\n    if (gutter > 0) {\n      gutterExtent = tileExtent;\n      getIntersection(gutterExtent, renderExtent, gutterExtent);\n    }\n    this.helper.setUniformFloatVec4(Uniforms.RENDER_EXTENT, gutterExtent);\n\n    this.helper.setUniformFloatValue(Uniforms.RESOLUTION, viewState.resolution);\n    this.helper.setUniformFloatValue(Uniforms.ZOOM, viewState.zoom);\n\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_PIXEL_WIDTH,\n      tileWidthWithGutter,\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_PIXEL_HEIGHT,\n      tileHeightWithGutter,\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_RESOLUTION,\n      tileResolution,\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_ORIGIN_X,\n      tileOrigin[0] +\n        tileCenterI * tileSize[0] * tileResolution -\n        gutter * tileResolution,\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_ORIGIN_Y,\n      tileOrigin[1] -\n        tileCenterJ * tileSize[1] * tileResolution +\n        gutter * tileResolution,\n    );\n\n    this.helper.drawElements(0, this.indices_.getSize());\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView} Data at the pixel location.\n   */\n  getData(pixel) {\n    const gl = this.helper.getGL();\n    if (!gl) {\n      return null;\n    }\n\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const viewState = frameState.viewState;\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (\n        !containsCoordinate(\n          fromUserExtent(layerExtent, viewState.projection),\n          coordinate,\n        )\n      ) {\n        return null;\n      }\n    }\n\n    // determine last source suitable for rendering at coordinate\n    const sources = layer.getSources(\n      boundingExtent([coordinate]),\n      viewState.resolution,\n    );\n    let i, source, tileGrid;\n    for (i = sources.length - 1; i >= 0; --i) {\n      source = sources[i];\n      if (source.getState() === 'ready') {\n        tileGrid = source.getTileGridForProjection(viewState.projection);\n        if (source.getWrapX()) {\n          break;\n        }\n        const gridExtent = tileGrid.getExtent();\n        if (!gridExtent || containsCoordinate(gridExtent, coordinate)) {\n          break;\n        }\n      }\n    }\n    if (i < 0) {\n      return null;\n    }\n\n    const tileTextureCache = this.tileRepresentationCache;\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const cacheKey = getCacheKey(source, tileCoord);\n      if (!tileTextureCache.containsKey(cacheKey)) {\n        continue;\n      }\n      const tileTexture = tileTextureCache.get(cacheKey);\n      const tile = tileTexture.tile;\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tile.getState() === TileState.EMPTY\n      ) {\n        return null;\n      }\n      if (!tileTexture.loaded) {\n        continue;\n      }\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col =\n        (coordinate[0] - tileOrigin[0]) / tileResolution -\n        tileCoord[1] * tileSize[0];\n\n      const row =\n        (tileOrigin[1] - coordinate[1]) / tileResolution -\n        tileCoord[2] * tileSize[1];\n\n      return tileTexture.getPixelData(col, row);\n    }\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    const helper = this.helper;\n    if (helper) {\n      const gl = helper.getGL();\n      for (const paletteTexture of this.paletteTextures_) {\n        paletteTexture.delete(gl);\n      }\n      this.paletteTextures_.length = 0;\n\n      gl.deleteProgram(this.program_);\n      delete this.program_;\n      helper.deleteBuffer(this.indices_);\n    }\n    super.disposeInternal();\n    delete this.indices_;\n  }\n}\n\nexport default WebGLTileLayerRenderer;\n","/**\n * @module ol/renderer/webgl/TileLayerBase\n */\nimport LRUCache from '../../structs/LRUCache.js';\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport {abstract, getUid} from '../../util.js';\nimport {create as createMat4} from '../../vec/mat4.js';\nimport {\n  createOrUpdate as createTileCoord,\n  getKey as getTileCoordKey,\n} from '../../tilecoord.js';\nimport {\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {descending} from '../../array.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getIntersection, isEmpty} from '../../extent.js';\nimport {toSize} from '../../size.js';\n\nexport const Uniforms = {\n  TILE_TRANSFORM: 'u_tileTransform',\n  TRANSITION_ALPHA: 'u_transitionAlpha',\n  DEPTH: 'u_depth',\n  RENDER_EXTENT: 'u_renderExtent', // intersection of layer, source, and view extent\n  PATTERN_ORIGIN: 'u_patternOrigin',\n  RESOLUTION: 'u_resolution',\n  ZOOM: 'u_zoom',\n  GLOBAL_ALPHA: 'u_globalAlpha',\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  SCREEN_TO_WORLD_MATRIX: 'u_screenToWorldMatrix',\n};\n\n/**\n * @type {Object<string, boolean>}\n */\nconst empty = {};\n\n/**\n * Transform a zoom level into a depth value; zoom level zero has a depth value of 0.5, and increasing values\n * have a depth trending towards 0\n * @param {number} z A zoom level.\n * @return {number} A depth value.\n */\nfunction depthForZ(z) {\n  return 1 / (z + 2);\n}\n\n/**\n * @typedef {import(\"../../webgl/BaseTileRepresentation.js\").default<import(\"../../Tile.js\").default>} AbstractTileRepresentation\n */\n/**\n * @typedef {Object} TileRepresentationLookup\n * @property {Set<string>} tileIds The set of tile ids in the lookup.\n * @property {Object<number, Set<AbstractTileRepresentation>>} representationsByZ Tile representations by zoom level.\n */\n\n/**\n * @return {TileRepresentationLookup} A new tile representation lookup.\n */\nexport function newTileRepresentationLookup() {\n  return {tileIds: new Set(), representationsByZ: {}};\n}\n\n/**\n * Check if a tile is already in the tile representation lookup.\n * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of tile representations by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @return {boolean} The tile is already in the lookup.\n */\nfunction lookupHasTile(tileRepresentationLookup, tile) {\n  return tileRepresentationLookup.tileIds.has(getUid(tile));\n}\n\n/**\n * Add a tile representation to the lookup.\n * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of tile representations by zoom level.\n * @param {AbstractTileRepresentation} tileRepresentation A tile representation.\n * @param {number} z The zoom level.\n */\nfunction addTileRepresentationToLookup(\n  tileRepresentationLookup,\n  tileRepresentation,\n  z,\n) {\n  const representationsByZ = tileRepresentationLookup.representationsByZ;\n  if (!(z in representationsByZ)) {\n    representationsByZ[z] = new Set();\n  }\n  representationsByZ[z].add(tileRepresentation);\n  tileRepresentationLookup.tileIds.add(getUid(tileRepresentation.tile));\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection),\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\nexport function getCacheKey(source, tileCoord) {\n  return `${source.getKey()},${getTileCoordKey(tileCoord)}`;\n}\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, import(\"../../webgl/Helper\").UniformValue>} [uniforms] Additional uniforms\n * made available to shaders.\n * @property {number} [cacheSize=512] The tile representation cache size.\n * @property {Array<import('./Layer.js').PostProcessesOptions>} [postProcesses] Post-processes definitions.\n */\n\n/**\n * @typedef {import(\"../../layer/BaseTile.js\").default} BaseLayerType\n */\n\n/**\n * @classdesc\n * Base WebGL renderer for tile layers.\n * @template {BaseLayerType} LayerType\n * @template {import(\"../../Tile.js\").default} TileType\n * @template {import(\"../../webgl/BaseTileRepresentation.js\").default<TileType>} TileRepresentation\n * @extends {WebGLLayerRenderer<LayerType>}\n */\nclass WebGLBaseTileLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} options Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer, {\n      uniforms: options.uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * This transform converts representation coordinates to screen coordinates.\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.tileTransform_ = createTransform();\n\n    /**\n     * @type {Array<number>}\n     * @protected\n     */\n    this.tempMat4 = createMat4();\n\n    /**\n     * @type {import(\"../../TileRange.js\").default}\n     * @private\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    /**\n     * @type {import(\"../../size.js\").Size}\n     * @private\n     */\n    this.tempSize_ = [0, 0];\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<TileRepresentation>}\n     * @protected\n     */\n    this.tileRepresentationCache = new LRUCache(cacheSize);\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.projection_ = undefined;\n  }\n\n  /**\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    super.reset({\n      uniforms: options.uniforms,\n    });\n  }\n\n  /**\n   * @param {TileType} tile Tile.\n   * @return {boolean} Tile is drawable.\n   * @private\n   */\n  isDrawableTile_(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrameInternal(frameState) {\n    if (!this.projection_) {\n      this.projection_ = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.projection_) {\n      this.clearCache();\n      this.projection_ = frameState.viewState.projection;\n    }\n\n    const layer = this.getLayer();\n    const source = layer.getRenderSource();\n    if (!source) {\n      return false;\n    }\n\n    if (isEmpty(getRenderExtent(frameState, frameState.extent))) {\n      return false;\n    }\n    return source.getState() === 'ready';\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../../webgl/BaseTileRepresentation.js\").TileRepresentationOptions<TileType>} options tile representation options\n   * @return {TileRepresentation} A new tile representation\n   * @protected\n   */\n  createTileRepresentation(options) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileRepresentationLookup} tileRepresentationLookup The zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(\n    frameState,\n    extent,\n    initialZ,\n    tileRepresentationLookup,\n    preload,\n  ) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const gutter = tileSource.getGutterForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileRepresentationCache = this.tileRepresentationCache;\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0),\n        ),\n        tileSource.zDirection,\n      ),\n    );\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_,\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n          const cacheKey = getCacheKey(tileSource, tileCoord);\n\n          /** @type {TileRepresentation} */\n          let tileRepresentation;\n\n          /** @type {TileType} */\n          let tile;\n\n          if (tileRepresentationCache.containsKey(cacheKey)) {\n            tileRepresentation = tileRepresentationCache.get(cacheKey);\n            tile = tileRepresentation.tile;\n          }\n          if (\n            !tileRepresentation ||\n            tileRepresentation.tile.key !== tileSource.getKey()\n          ) {\n            tile = tileSource.getTile(\n              z,\n              x,\n              y,\n              frameState.pixelRatio,\n              viewState.projection,\n            );\n          }\n\n          if (lookupHasTile(tileRepresentationLookup, tile)) {\n            continue;\n          }\n\n          if (!tileRepresentation) {\n            tileRepresentation = this.createTileRepresentation({\n              tile: tile,\n              grid: tileGrid,\n              helper: this.helper,\n              gutter: gutter,\n            });\n            tileRepresentationCache.set(cacheKey, tileRepresentation);\n          } else {\n            if (this.isDrawableTile_(tile)) {\n              tileRepresentation.setTile(tile);\n            } else {\n              const interimTile = /** @type {TileType} */ (\n                tile.getInterimTile()\n              );\n              tileRepresentation.setTile(interimTile);\n            }\n          }\n\n          addTileRepresentationToLookup(\n            tileRepresentationLookup,\n            tileRepresentation,\n            z,\n          );\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} tilesWithAlpha True if at least one of the rendered tiles has alpha\n   * @protected\n   */\n  beforeTilesRender(frameState, tilesWithAlpha) {\n    this.helper.prepareDraw(this.frameState, !tilesWithAlpha, true);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} If returns false, tile mask rendering will be skipped\n   * @protected\n   */\n  beforeTilesMaskRender(frameState) {\n    return false;\n  }\n\n  /**\n   * @param {TileRepresentation} tileRepresentation Tile representation\n   * @param {import(\"../../transform.js\").Transform} tileTransform Tile transform\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state\n   * @param {import(\"../../extent.js\").Extent} renderExtent Render extent\n   * @param {number} tileResolution Tile resolution\n   * @param {import(\"../../size.js\").Size} tileSize Tile size\n   * @param {import(\"../../coordinate.js\").Coordinate} tileOrigin Tile origin\n   * @param {import(\"../../extent.js\").Extent} tileExtent tile Extent\n   * @param {number} depth Depth\n   * @param {number} gutter Gutter\n   * @param {number} alpha Alpha\n   * @protected\n   */\n  renderTile(\n    tileRepresentation,\n    tileTransform,\n    frameState,\n    renderExtent,\n    tileResolution,\n    tileSize,\n    tileOrigin,\n    tileExtent,\n    depth,\n    gutter,\n    alpha,\n  ) {}\n\n  /**\n   * @param {TileRepresentation} tileRepresentation Tile representation\n   * @param {number} tileZ Tile Z\n   * @param {import(\"../../extent.js\").Extent} extent Render extent\n   * @param {number} depth Depth\n   * @protected\n   */\n  renderTileMask(tileRepresentation, tileZ, extent, depth) {}\n\n  drawTile_(\n    frameState,\n    tileRepresentation,\n    tileZ,\n    gutter,\n    extent,\n    alphaLookup,\n    tileGrid,\n  ) {\n    if (!tileRepresentation.ready) {\n      return;\n    }\n    const tile = tileRepresentation.tile;\n    const tileCoord = tile.tileCoord;\n    const tileCoordKey = getTileCoordKey(tileCoord);\n    const alpha = tileCoordKey in alphaLookup ? alphaLookup[tileCoordKey] : 1;\n\n    const tileResolution = tileGrid.getResolution(tileZ);\n    const tileSize = toSize(tileGrid.getTileSize(tileZ), this.tempSize_);\n    const tileOrigin = tileGrid.getOrigin(tileZ);\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord);\n    // tiles with alpha are rendered last to allow blending\n    const depth = alpha < 1 ? -1 : depthForZ(tileZ);\n    if (alpha < 1) {\n      frameState.animate = true;\n    }\n\n    const viewState = frameState.viewState;\n    const centerX = viewState.center[0];\n    const centerY = viewState.center[1];\n\n    const tileWidthWithGutter = tileSize[0] + 2 * gutter;\n    const tileHeightWithGutter = tileSize[1] + 2 * gutter;\n\n    const aspectRatio = tileWidthWithGutter / tileHeightWithGutter;\n\n    const centerI = (centerX - tileOrigin[0]) / (tileSize[0] * tileResolution);\n    const centerJ = (tileOrigin[1] - centerY) / (tileSize[1] * tileResolution);\n\n    const tileScale = viewState.resolution / tileResolution;\n\n    const tileCenterI = tileCoord[1];\n    const tileCenterJ = tileCoord[2];\n\n    resetTransform(this.tileTransform_);\n    scaleTransform(\n      this.tileTransform_,\n      2 / ((frameState.size[0] * tileScale) / tileWidthWithGutter),\n      -2 / ((frameState.size[1] * tileScale) / tileWidthWithGutter),\n    );\n    rotateTransform(this.tileTransform_, viewState.rotation);\n    scaleTransform(this.tileTransform_, 1, 1 / aspectRatio);\n    translateTransform(\n      this.tileTransform_,\n      (tileSize[0] * (tileCenterI - centerI) - gutter) / tileWidthWithGutter,\n      (tileSize[1] * (tileCenterJ - centerJ) - gutter) / tileHeightWithGutter,\n    );\n\n    this.renderTile(\n      /** @type {TileRepresentation} */ (tileRepresentation),\n      this.tileTransform_,\n      frameState,\n      extent,\n      tileResolution,\n      tileSize,\n      tileOrigin,\n      tileExtent,\n      depth,\n      gutter,\n      alpha,\n    );\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    this.frameState = frameState;\n    this.renderComplete = true;\n    const gl = this.helper.getGL();\n    this.preRender(gl, frameState);\n\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const gutter = tileSource.getGutterForProjection(viewState.projection);\n    const extent = getRenderExtent(frameState, frameState.extent);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection,\n    );\n\n    /**\n     * @type {TileRepresentationLookup}\n     */\n    const tileRepresentationLookup = newTileRepresentationLookup();\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection,\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(\n        frameState,\n        nextExtent,\n        targetZ,\n        tileRepresentationLookup,\n        preload,\n      );\n    }\n\n    this.enqueueTiles(frameState, extent, z, tileRepresentationLookup, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          extent,\n          z - 1,\n          tileRepresentationLookup,\n          preload - 1,\n        );\n      }, 0);\n    }\n\n    /**\n     * A lookup of alpha values for tiles at the target rendering resolution\n     * for tiles that are in transition.  If a tile coord key is absent from\n     * this lookup, the tile should be rendered at alpha 1.\n     * @type {Object<string, number>}\n     */\n    const alphaLookup = {};\n\n    const uid = getUid(this);\n    const time = frameState.time;\n    let blend = false;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tileRepresentation of tileRepresentationLookup\n      .representationsByZ[z]) {\n      const tile = tileRepresentation.tile;\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tile.getState() === TileState.EMPTY\n      ) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileRepresentation.ready) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n        blend = true;\n        const tileCoordKey = getTileCoordKey(tileCoord);\n        alphaLookup[tileCoordKey] = alpha;\n      }\n      this.renderComplete = false;\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tileRepresentationLookup,\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tileRepresentationLookup,\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    const representationsByZ = tileRepresentationLookup.representationsByZ;\n    const zs = Object.keys(representationsByZ).map(Number).sort(descending);\n\n    const renderTileMask = this.beforeTilesMaskRender(frameState);\n\n    if (renderTileMask) {\n      for (let j = 0, jj = zs.length; j < jj; ++j) {\n        const tileZ = zs[j];\n        for (const tileRepresentation of representationsByZ[tileZ]) {\n          const tileCoord = tileRepresentation.tile.tileCoord;\n          const tileCoordKey = getTileCoordKey(tileCoord);\n          // do not render the tile mask if alpha < 1\n          if (tileCoordKey in alphaLookup) {\n            continue;\n          }\n          const tileExtent = tileGrid.getTileCoordExtent(tileCoord);\n          this.renderTileMask(\n            /** @type {TileRepresentation} */ (tileRepresentation),\n            tileZ,\n            tileExtent,\n            depthForZ(tileZ),\n          );\n        }\n      }\n    }\n\n    this.beforeTilesRender(frameState, blend);\n\n    for (let j = 0, jj = zs.length; j < jj; ++j) {\n      const tileZ = zs[j];\n      for (const tileRepresentation of representationsByZ[tileZ]) {\n        const tileCoord = tileRepresentation.tile.tileCoord;\n        const tileCoordKey = getTileCoordKey(tileCoord);\n        if (tileCoordKey in alphaLookup) {\n          continue;\n        }\n\n        this.drawTile_(\n          frameState,\n          tileRepresentation,\n          tileZ,\n          gutter,\n          extent,\n          alphaLookup,\n          tileGrid,\n        );\n      }\n    }\n\n    for (const tileRepresentation of representationsByZ[z]) {\n      const tileCoord = tileRepresentation.tile.tileCoord;\n      const tileCoordKey = getTileCoordKey(tileCoord);\n      if (tileCoordKey in alphaLookup) {\n        this.drawTile_(\n          frameState,\n          tileRepresentation,\n          z,\n          gutter,\n          extent,\n          alphaLookup,\n          tileGrid,\n        );\n      }\n    }\n\n    this.helper.finalizeDraw(\n      frameState,\n      this.dispatchPreComposeEvent,\n      this.dispatchPostComposeEvent,\n    );\n\n    const canvas = this.helper.getCanvas();\n\n    const tileRepresentationCache = this.tileRepresentationCache;\n    while (tileRepresentationCache.canExpireCache()) {\n      const tileRepresentation = tileRepresentationCache.pop();\n      tileRepresentation.dispose();\n    }\n\n    // TODO: let the renderers manage their own cache instead of managing the source cache\n    /**\n     * Here we unconditionally expire the source cache since the renderer maintains\n     * its own cache.\n     * @param {import(\"../../Map.js\").default} map Map.\n     * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n     */\n    const postRenderFunction = function (map, frameState) {\n      tileSource.updateCacheSize(0.1, frameState.viewState.projection);\n      tileSource.expireCache(frameState.viewState.projection, empty);\n    };\n\n    frameState.postRenderFunctions.push(postRenderFunction);\n\n    this.postRender(gl, frameState);\n    return canvas;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile representation lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of\n   * tile representations by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tileRepresentationLookup) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_,\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileRepresentationCache = this.tileRepresentationCache;\n    const source = this.getLayer().getRenderSource();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(source, [altZ, x, y]);\n        let loaded = false;\n        if (tileRepresentationCache.containsKey(cacheKey)) {\n          const tileRepresentation = tileRepresentationCache.get(cacheKey);\n          if (\n            tileRepresentation.ready &&\n            !lookupHasTile(tileRepresentationLookup, tileRepresentation.tile)\n          ) {\n            addTileRepresentationToLookup(\n              tileRepresentationLookup,\n              tileRepresentation,\n              altZ,\n            );\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  clearCache() {\n    const tileRepresentationCache = this.tileRepresentationCache;\n    tileRepresentationCache.forEach((tileRepresentation) =>\n      tileRepresentation.dispose(),\n    );\n    tileRepresentationCache.clear();\n  }\n\n  removeHelper() {\n    if (this.helper) {\n      this.clearCache();\n    }\n\n    super.removeHelper();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    super.disposeInternal();\n    delete this.frameState;\n  }\n}\n\nexport default WebGLBaseTileLayerRenderer;\n","/**\n * @module ol/expr/gpu\n */\nimport PaletteTexture from '../webgl/PaletteTexture.js';\nimport {\n  BooleanType,\n  CallExpression,\n  ColorType,\n  NoneType,\n  NumberArrayType,\n  NumberType,\n  Ops,\n  SizeType,\n  StringType,\n  computeGeometryType,\n  isType,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\nimport {Uniforms} from '../renderer/webgl/TileLayer.js';\nimport {asArray} from '../color.js';\nimport {toSize} from '../size.js';\n\n/**\n * @param {string} operator Operator\n * @param {CompilationContext} context Compilation context\n * @return {string} A function name based on the operator, unique in the given context\n */\nfunction computeOperatorFunctionName(operator, context) {\n  return `operator_${operator}_${Object.keys(context.functions).length}`;\n}\n\n/**\n * Will return the number as a float with a dot separator, which is required by GLSL.\n * @param {number} v Numerical value.\n * @return {string} The value as string.\n */\nexport function numberToGlsl(v) {\n  const s = v.toString();\n  return s.includes('.') ? s : s + '.0';\n}\n\n/**\n * Will return the number array as a float with a dot separator, concatenated with ', '.\n * @param {Array<number>} array Numerical values array.\n * @return {string} The array as a vector, e. g.: `vec3(1.0, 2.0, 3.0)`.\n */\nexport function arrayToGlsl(array) {\n  if (array.length < 2 || array.length > 4) {\n    throw new Error(\n      '`formatArray` can only output `vec2`, `vec3` or `vec4` arrays.',\n    );\n  }\n  return `vec${array.length}(${array.map(numberToGlsl).join(', ')})`;\n}\n\n/**\n * Will normalize and converts to string a `vec4` color array compatible with GLSL.\n * @param {string|import(\"../color.js\").Color} color Color either in string format or [r, g, b, a] array format,\n * with RGB components in the 0..255 range and the alpha component in the 0..1 range.\n * Note that the final array will always have 4 components.\n * @return {string} The color expressed in the `vec4(1.0, 1.0, 1.0, 1.0)` form.\n */\nexport function colorToGlsl(color) {\n  const array = asArray(color);\n  const alpha = array.length > 3 ? array[3] : 1;\n  // all components are premultiplied with alpha value\n  return arrayToGlsl([\n    (array[0] / 255) * alpha,\n    (array[1] / 255) * alpha,\n    (array[2] / 255) * alpha,\n    alpha,\n  ]);\n}\n\n/**\n * Normalizes and converts a number or array toa `vec2` array compatible with GLSL.\n * @param {number|import('../size.js').Size} size Size.\n * @return {string} The color expressed in the `vec4(1.0, 1.0, 1.0, 1.0)` form.\n */\nexport function sizeToGlsl(size) {\n  const array = toSize(size);\n  return arrayToGlsl(array);\n}\n\n/** @type {Object<string, number>} */\nconst stringToFloatMap = {};\nlet stringToFloatCounter = 0;\n\n/**\n * Returns a stable equivalent number for the string literal.\n * @param {string} string String literal value\n * @return {number} Number equivalent\n */\nexport function getStringNumberEquivalent(string) {\n  if (!(string in stringToFloatMap)) {\n    stringToFloatMap[string] = stringToFloatCounter++;\n  }\n  return stringToFloatMap[string];\n}\n\n/**\n * Returns a stable equivalent number for the string literal, for use in shaders. This number is then\n * converted to be a GLSL-compatible string.\n * Note: with a float precision of `mediump`, the amount of unique strings supported is 16,777,216\n * @param {string} string String literal value\n * @return {string} GLSL-compatible string containing a number\n */\nexport function stringToGlsl(string) {\n  return numberToGlsl(getStringNumberEquivalent(string));\n}\n\n/**\n * Get the uniform name given a variable name.\n * @param {string} variableName The variable name.\n * @return {string} The uniform name.\n */\nexport function uniformNameForVariable(variableName) {\n  return 'u_var_' + variableName;\n}\n\n/**\n * @typedef {import('./expression.js').ParsingContext} ParsingContext\n */\n/**\n *\n * @typedef {import(\"./expression.js\").Expression} Expression\n */\n/**\n *\n * @typedef {import(\"./expression.js\").LiteralExpression} LiteralExpression\n */\n\n/**\n * @typedef {Object} CompilationContextProperty\n * @property {string} name Name\n * @property {number} type Resolved property type\n * @property {function(import(\"../Feature.js\").FeatureLike): *} [evaluator] Function used for evaluating the value;\n */\n\n/**\n * @typedef {Object} CompilationContextVariable\n * @property {string} name Name\n * @property {number} type Resolved variable type\n * @property {function(Object): *} [evaluator] Function used for evaluating the value; argument is the style variables object\n */\n\n/**\n * @typedef {Object} CompilationContext\n * @property {boolean} [inFragmentShader] If false, means the expression output should be made for a vertex shader\n * @property {Object<string, CompilationContextProperty>} properties The values for properties used in 'get' expressions.\n * @property {Object<string, CompilationContextVariable>} variables The values for variables used in 'var' expressions.\n * @property {Object<string, string>} functions Lookup of functions used by the style.\n * @property {number} [bandCount] Number of bands per pixel.\n * @property {Array<PaletteTexture>} [paletteTextures] List of palettes used by the style.\n * @property {import(\"../style/webgl.js\").WebGLStyle} style Literal style.\n */\n\n/**\n * @return {CompilationContext} A new compilation context.\n */\nexport function newCompilationContext() {\n  return {\n    inFragmentShader: false,\n    variables: {},\n    properties: {},\n    functions: {},\n    bandCount: 0,\n    style: {},\n  };\n}\n\nconst GET_BAND_VALUE_FUNC = 'getBandValue';\n\nexport const PALETTE_TEXTURE_ARRAY = 'u_paletteTextures';\n\n/**\n * @typedef {string} CompiledExpression\n */\n\n/**\n * @typedef {function(CompilationContext, CallExpression, number): string} Compiler\n * Third argument is the expected value types\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} parsingContext The parsing context.\n * @param {CompilationContext} compilationContext An existing compilation context\n * @return {CompiledExpression} The compiled expression.\n */\nexport function buildExpression(\n  encoded,\n  type,\n  parsingContext,\n  compilationContext,\n) {\n  const expression = parse(encoded, parsingContext, type);\n  if (isType(expression.type, NoneType)) {\n    throw new Error(`No matching type was found`);\n  }\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`,\n    );\n  }\n  return compile(expression, type, compilationContext);\n}\n\n/**\n * @param {function(Array<CompiledExpression>, CompilationContext): string} output Function that takes in parsed arguments and returns a string\n * @return {function(CompilationContext, import(\"./expression.js\").CallExpression, number): string} Compiler for the call expression\n */\nfunction createCompiler(output) {\n  return (context, expression, type) => {\n    const length = expression.args.length;\n    const args = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      args[i] = compile(expression.args[i], type, context);\n    }\n    return output(args, context);\n  };\n}\n\n/**\n * @type {Object<string, Compiler>}\n */\nconst compilers = {\n  [Ops.Get]: (context, expression) => {\n    const firstArg = /** @type {LiteralExpression} */ (expression.args[0]);\n    const propName = /** @type {string} */ (firstArg.value);\n    const isExisting = propName in context.properties;\n    if (!isExisting) {\n      context.properties[propName] = {\n        name: propName,\n        type: expression.type,\n      };\n    }\n    const prefix = context.inFragmentShader ? 'v_prop_' : 'a_prop_';\n    return prefix + propName;\n  },\n  [Ops.GeometryType]: (context, expression, type) => {\n    const propName = 'geometryType';\n    const isExisting = propName in context.properties;\n    if (!isExisting) {\n      context.properties[propName] = {\n        name: propName,\n        type: StringType,\n        evaluator: (feature) => {\n          return computeGeometryType(feature.getGeometry());\n        },\n      };\n    }\n    const prefix = context.inFragmentShader ? 'v_prop_' : 'a_prop_';\n    return prefix + propName;\n  },\n  [Ops.Var]: (context, expression) => {\n    const firstArg = /** @type {LiteralExpression} */ (expression.args[0]);\n    const varName = /** @type {string} */ (firstArg.value);\n    const isExisting = varName in context.variables;\n    if (!isExisting) {\n      context.variables[varName] = {\n        name: varName,\n        type: expression.type,\n      };\n    }\n    return uniformNameForVariable(varName);\n  },\n  [Ops.Resolution]: () => 'u_resolution',\n  [Ops.Zoom]: () => 'u_zoom',\n  [Ops.Time]: () => 'u_time',\n  [Ops.Any]: createCompiler((compiledArgs) => `(${compiledArgs.join(` || `)})`),\n  [Ops.All]: createCompiler((compiledArgs) => `(${compiledArgs.join(` && `)})`),\n  [Ops.Not]: createCompiler(([value]) => `(!${value})`),\n  [Ops.Equal]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} == ${secondValue})`,\n  ),\n  [Ops.NotEqual]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} != ${secondValue})`,\n  ),\n  [Ops.GreaterThan]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} > ${secondValue})`,\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} >= ${secondValue})`,\n  ),\n  [Ops.LessThan]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} < ${secondValue})`,\n  ),\n  [Ops.LessThanOrEqualTo]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} <= ${secondValue})`,\n  ),\n  [Ops.Multiply]: createCompiler(\n    (compiledArgs) => `(${compiledArgs.join(' * ')})`,\n  ),\n  [Ops.Divide]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} / ${secondValue})`,\n  ),\n  [Ops.Add]: createCompiler((compiledArgs) => `(${compiledArgs.join(' + ')})`),\n  [Ops.Subtract]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} - ${secondValue})`,\n  ),\n  [Ops.Clamp]: createCompiler(\n    ([value, min, max]) => `clamp(${value}, ${min}, ${max})`,\n  ),\n  [Ops.Mod]: createCompiler(([value, modulo]) => `mod(${value}, ${modulo})`),\n  [Ops.Pow]: createCompiler(([value, power]) => `pow(${value}, ${power})`),\n  [Ops.Abs]: createCompiler(([value]) => `abs(${value})`),\n  [Ops.Floor]: createCompiler(([value]) => `floor(${value})`),\n  [Ops.Ceil]: createCompiler(([value]) => `ceil(${value})`),\n  [Ops.Round]: createCompiler(([value]) => `floor(${value} + 0.5)`),\n  [Ops.Sin]: createCompiler(([value]) => `sin(${value})`),\n  [Ops.Cos]: createCompiler(([value]) => `cos(${value})`),\n  [Ops.Atan]: createCompiler(([firstValue, secondValue]) => {\n    return secondValue !== undefined\n      ? `atan(${firstValue}, ${secondValue})`\n      : `atan(${firstValue})`;\n  }),\n  [Ops.Sqrt]: createCompiler(([value]) => `sqrt(${value})`),\n  [Ops.Match]: createCompiler((compiledArgs) => {\n    const input = compiledArgs[0];\n    const fallback = compiledArgs[compiledArgs.length - 1];\n    let result = null;\n    for (let i = compiledArgs.length - 3; i >= 1; i -= 2) {\n      const match = compiledArgs[i];\n      const output = compiledArgs[i + 1];\n      result = `(${input} == ${match} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  }),\n  [Ops.Between]: createCompiler(\n    ([value, min, max]) => `(${value} >= ${min} && ${value} <= ${max})`,\n  ),\n  [Ops.Interpolate]: createCompiler(([exponent, input, ...compiledArgs]) => {\n    let result = '';\n    for (let i = 0; i < compiledArgs.length - 2; i += 2) {\n      const stop1 = compiledArgs[i];\n      const output1 = result || compiledArgs[i + 1];\n      const stop2 = compiledArgs[i + 2];\n      const output2 = compiledArgs[i + 3];\n      let ratio;\n      if (exponent === numberToGlsl(1)) {\n        ratio = `(${input} - ${stop1}) / (${stop2} - ${stop1})`;\n      } else {\n        ratio = `(pow(${exponent}, (${input} - ${stop1})) - 1.0) / (pow(${exponent}, (${stop2} - ${stop1})) - 1.0)`;\n      }\n      result = `mix(${output1}, ${output2}, clamp(${ratio}, 0.0, 1.0))`;\n    }\n    return result;\n  }),\n  [Ops.Case]: createCompiler((compiledArgs) => {\n    const fallback = compiledArgs[compiledArgs.length - 1];\n    let result = null;\n    for (let i = compiledArgs.length - 3; i >= 0; i -= 2) {\n      const condition = compiledArgs[i];\n      const output = compiledArgs[i + 1];\n      result = `(${condition} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  }),\n  [Ops.In]: createCompiler(([needle, ...haystack], context) => {\n    const funcName = computeOperatorFunctionName('in', context);\n    const tests = [];\n    for (let i = 0; i < haystack.length; i += 1) {\n      tests.push(`  if (inputValue == ${haystack[i]}) { return true; }`);\n    }\n    context.functions[funcName] = `bool ${funcName}(float inputValue) {\n${tests.join('\\n')}\n  return false;\n}`;\n    return `${funcName}(${needle})`;\n  }),\n  [Ops.Array]: createCompiler(\n    (args) => `vec${args.length}(${args.join(', ')})`,\n  ),\n  [Ops.Color]: createCompiler((compiledArgs) => {\n    if (compiledArgs.length === 1) {\n      //grayscale\n      return `vec4(vec3(${compiledArgs[0]} / 255.0), 1.0)`;\n    }\n    if (compiledArgs.length === 2) {\n      //grayscale with alpha\n      return `(${compiledArgs[1]} * vec4(vec3(${compiledArgs[0]} / 255.0), 1.0))`;\n    }\n    const rgb = compiledArgs.slice(0, 3).map((color) => `${color} / 255.0`);\n    if (compiledArgs.length === 3) {\n      return `vec4(${rgb.join(', ')}, 1.0)`;\n    }\n    const alpha = compiledArgs[3];\n    return `(${alpha} * vec4(${rgb.join(', ')}, 1.0))`;\n  }),\n  [Ops.Band]: createCompiler(([band, xOffset, yOffset], context) => {\n    if (!(GET_BAND_VALUE_FUNC in context.functions)) {\n      let ifBlocks = '';\n      const bandCount = context.bandCount || 1;\n      for (let i = 0; i < bandCount; i++) {\n        const colorIndex = Math.floor(i / 4);\n        let bandIndex = i % 4;\n        if (i === bandCount - 1 && bandIndex === 1) {\n          // LUMINANCE_ALPHA - band 1 assigned to rgb and band 2 assigned to alpha\n          bandIndex = 3;\n        }\n        const textureName = `${Uniforms.TILE_TEXTURE_ARRAY}[${colorIndex}]`;\n        ifBlocks += `  if (band == ${i + 1}.0) {\n    return texture2D(${textureName}, v_textureCoord + vec2(dx, dy))[${bandIndex}];\n  }\n`;\n      }\n\n      context.functions[GET_BAND_VALUE_FUNC] =\n        `float getBandValue(float band, float xOffset, float yOffset) {\n  float dx = xOffset / ${Uniforms.TEXTURE_PIXEL_WIDTH};\n  float dy = yOffset / ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n${ifBlocks}\n}`;\n    }\n\n    return `${GET_BAND_VALUE_FUNC}(${band}, ${xOffset ?? '0.0'}, ${\n      yOffset ?? '0.0'\n    })`;\n  }),\n  [Ops.Palette]: (context, expression) => {\n    const [index, ...colors] = expression.args;\n    const numColors = colors.length;\n    const palette = new Uint8Array(numColors * 4);\n    for (let i = 0; i < colors.length; i++) {\n      const parsedValue = /** @type {string | Array<number>} */ (\n        /** @type {LiteralExpression} */ (colors[i]).value\n      );\n      const color = asArray(parsedValue);\n      const offset = i * 4;\n      palette[offset] = color[0];\n      palette[offset + 1] = color[1];\n      palette[offset + 2] = color[2];\n      palette[offset + 3] = color[3] * 255;\n    }\n    if (!context.paletteTextures) {\n      context.paletteTextures = [];\n    }\n    const paletteName = `${PALETTE_TEXTURE_ARRAY}[${context.paletteTextures.length}]`;\n    const paletteTexture = new PaletteTexture(paletteName, palette);\n    context.paletteTextures.push(paletteTexture);\n    const compiledIndex = compile(index, NumberType, context);\n    return `texture2D(${paletteName}, vec2((${compiledIndex} + 0.5) / ${numColors}.0, 0.5))`;\n  },\n  // TODO: unimplemented\n  // Ops.Number\n  // Ops.String\n  // Ops.Coalesce\n  // Ops.Concat\n  // Ops.ToString\n};\n\n/**\n * @param {Expression} expression The expression.\n * @param {number} returnType The expected return type.\n * @param {CompilationContext} context The compilation context.\n * @return {CompiledExpression} The compiled expression\n */\nfunction compile(expression, returnType, context) {\n  // operator\n  if (expression instanceof CallExpression) {\n    const compiler = compilers[expression.operator];\n    if (compiler === undefined) {\n      throw new Error(\n        `No compiler defined for this operator: ${JSON.stringify(\n          expression.operator,\n        )}`,\n      );\n    }\n    return compiler(context, expression, returnType);\n  }\n\n  if ((expression.type & NumberType) > 0) {\n    return numberToGlsl(/** @type {number} */ (expression.value));\n  }\n\n  if ((expression.type & BooleanType) > 0) {\n    return expression.value.toString();\n  }\n\n  if ((expression.type & StringType) > 0) {\n    return stringToGlsl(expression.value.toString());\n  }\n\n  if ((expression.type & ColorType) > 0) {\n    return colorToGlsl(\n      /** @type {Array<number> | string} */ (expression.value),\n    );\n  }\n\n  if ((expression.type & NumberArrayType) > 0) {\n    return arrayToGlsl(/** @type {Array<number>} */ (expression.value));\n  }\n\n  if ((expression.type & SizeType) > 0) {\n    return sizeToGlsl(\n      /** @type {number|import('../size.js').Size} */ (expression.value),\n    );\n  }\n\n  throw new Error(\n    `Unexpected expression ${expression.value} (expected type ${typeName(\n      returnType,\n    )})`,\n  );\n}\n","/**\n * Class for generating shaders from literal style objects\n * @module ol/webgl/ShaderBuilder\n */\nimport {LINESTRING_ANGLE_COSINE_CUTOFF} from '../render/webgl/utils.js';\nimport {colorToGlsl, numberToGlsl, stringToGlsl} from '../expr/gpu.js';\nimport {createDefaultStyle} from '../style/flat.js';\n\nexport const COMMON_HEADER = `#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\nuniform mat4 u_projectionMatrix;\nuniform mat4 u_screenToWorldMatrix;\nuniform vec2 u_viewportSizePx;\nuniform float u_pixelRatio;\nuniform float u_globalAlpha;\nuniform float u_time;\nuniform float u_zoom;\nuniform float u_resolution;\nuniform float u_rotation;\nuniform vec4 u_renderExtent;\nuniform vec2 u_patternOrigin;\nuniform float u_depth;\nuniform mediump int u_hitDetection;\n\nconst float PI = 3.141592653589793238;\nconst float TWO_PI = 2.0 * PI;\n\n// this used to produce an alpha-premultiplied color from a texture\nvec4 samplePremultiplied(sampler2D sampler, vec2 texCoord) {\n  vec4 color = texture2D(sampler, texCoord);\n  return vec4(color.rgb * color.a, color.a);\n}\n`;\n\nconst DEFAULT_STYLE = createDefaultStyle();\n\n/**\n * @typedef {Object} VaryingDescription\n * @property {string} name Varying name, as will be declared in the header.\n * @property {string} type Varying type, either `float`, `vec2`, `vec4`...\n * @property {string} expression Expression which will be assigned to the varying in the vertex shader, and\n * passed on to the fragment shader.\n */\n\n/**\n * @classdesc\n * This class implements a classic builder pattern for generating many different types of shaders.\n * Methods can be chained, e. g.:\n *\n * ```js\n * const shader = new ShaderBuilder()\n *   .addVarying('v_width', 'float', 'a_width')\n *   .addUniform('u_time')\n *   .setColorExpression('...')\n *   .setSymbolSizeExpression('...')\n *   .getSymbolFragmentShader();\n * ```\n */\nexport class ShaderBuilder {\n  constructor() {\n    /**\n     * Uniforms; these will be declared in the header (should include the type).\n     * @type {Array<string>}\n     * @private\n     */\n    this.uniforms_ = [];\n\n    /**\n     * Attributes; these will be declared in the header (should include the type).\n     * @type {Array<string>}\n     * @private\n     */\n    this.attributes_ = [];\n\n    /**\n     * Varyings with a name, a type and an expression.\n     * @type {Array<VaryingDescription>}\n     * @private\n     */\n    this.varyings_ = [];\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasSymbol_ = false;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolSizeExpression_ = `vec2(${numberToGlsl(\n      DEFAULT_STYLE['circle-radius'],\n    )} + ${numberToGlsl(DEFAULT_STYLE['circle-stroke-width'] * 0.5)})`;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolRotationExpression_ = '0.0';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolOffsetExpression_ = 'vec2(0.0)';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolColorExpression_ = colorToGlsl(\n      /** @type {string} */ (DEFAULT_STYLE['circle-fill-color']),\n    );\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.texCoordExpression_ = 'vec4(0.0, 0.0, 1.0, 1.0)';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.discardExpression_ = 'false';\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.symbolRotateWithView_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasStroke_ = false;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.strokeWidthExpression_ = numberToGlsl(DEFAULT_STYLE['stroke-width']);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.strokeColorExpression_ = colorToGlsl(\n      /** @type {string} */ (DEFAULT_STYLE['stroke-color']),\n    );\n\n    /**\n     * @private\n     */\n    this.strokeOffsetExpression_ = '0.';\n\n    /**\n     * @private\n     */\n    this.strokeCapExpression_ = stringToGlsl('round');\n\n    /**\n     * @private\n     */\n    this.strokeJoinExpression_ = stringToGlsl('round');\n\n    /**\n     * @private\n     */\n    this.strokeMiterLimitExpression_ = '10.';\n\n    /**\n     * @private\n     */\n    this.strokeDistanceFieldExpression_ = '-1000.';\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasFill_ = false;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.fillColorExpression_ = colorToGlsl(\n      /** @type {string} */ (DEFAULT_STYLE['fill-color']),\n    );\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.vertexShaderFunctions_ = [];\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.fragmentShaderFunctions_ = [];\n  }\n\n  /**\n   * Adds a uniform accessible in both fragment and vertex shaders.\n   * The given name should include a type, such as `sampler2D u_texture`.\n   * @param {string} name Uniform name\n   * @return {ShaderBuilder} the builder object\n   */\n  addUniform(name) {\n    this.uniforms_.push(name);\n    return this;\n  }\n\n  /**\n   * Adds an attribute accessible in the vertex shader, read from the geometry buffer.\n   * The given name should include a type, such as `vec2 a_position`.\n   * @param {string} name Attribute name\n   * @return {ShaderBuilder} the builder object\n   */\n  addAttribute(name) {\n    this.attributes_.push(name);\n    return this;\n  }\n\n  /**\n   * Adds a varying defined in the vertex shader and accessible from the fragment shader.\n   * The type and expression of the varying have to be specified separately.\n   * @param {string} name Varying name\n   * @param {'float'|'vec2'|'vec3'|'vec4'} type Type\n   * @param {string} expression Expression used to assign a value to the varying.\n   * @return {ShaderBuilder} the builder object\n   */\n  addVarying(name, type, expression) {\n    this.varyings_.push({\n      name: name,\n      type: type,\n      expression: expression,\n    });\n    return this;\n  }\n\n  /**\n   * Sets an expression to compute the size of the shape.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec2` value.\n   * @param {string} expression Size expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolSizeExpression(expression) {\n    this.hasSymbol_ = true;\n    this.symbolSizeExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current symbol size expression\n   */\n  getSymbolSizeExpression() {\n    return this.symbolSizeExpression_;\n  }\n\n  /**\n   * Sets an expression to compute the rotation of the shape.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `float` value in radians.\n   * @param {string} expression Size expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolRotationExpression(expression) {\n    this.symbolRotationExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * Sets an expression to compute the offset of the symbol from the point center.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec2` value.\n   * @param {string} expression Offset expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolOffsetExpression(expression) {\n    this.symbolOffsetExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current symbol offset expression\n   */\n  getSymbolOffsetExpression() {\n    return this.symbolOffsetExpression_;\n  }\n\n  /**\n   * Sets an expression to compute the color of the shape.\n   * This expression can use all the uniforms, varyings and attributes available\n   * in the fragment shader, and should evaluate to a `vec4` value.\n   * @param {string} expression Color expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolColorExpression(expression) {\n    this.hasSymbol_ = true;\n    this.symbolColorExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current symbol color expression\n   */\n  getSymbolColorExpression() {\n    return this.symbolColorExpression_;\n  }\n\n  /**\n   * Sets an expression to compute the texture coordinates of the vertices.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec4` value.\n   * @param {string} expression Texture coordinate expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setTextureCoordinateExpression(expression) {\n    this.texCoordExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * Sets an expression to determine whether a fragment (pixel) should be discarded,\n   * i.e. not drawn at all.\n   * This expression can use all the uniforms, varyings and attributes available\n   * in the fragment shader, and should evaluate to a `bool` value (it will be\n   * used in an `if` statement)\n   * @param {string} expression Fragment discard expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setFragmentDiscardExpression(expression) {\n    this.discardExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current fragment discard expression\n   */\n  getFragmentDiscardExpression() {\n    return this.discardExpression_;\n  }\n\n  /**\n   * Sets whether the symbols should rotate with the view or stay aligned with the map.\n   * Note: will only be used for point geometry shaders.\n   * @param {boolean} rotateWithView Rotate with view\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolRotateWithView(rotateWithView) {\n    this.symbolRotateWithView_ = rotateWithView;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke width expression, returning value in pixels\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeWidthExpression(expression) {\n    this.hasStroke_ = true;\n    this.strokeWidthExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke color expression, evaluate to `vec4`: can rely on currentLengthPx and currentRadiusPx\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeColorExpression(expression) {\n    this.hasStroke_ = true;\n    this.strokeColorExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current stroke color expression\n   */\n  getStrokeColorExpression() {\n    return this.strokeColorExpression_;\n  }\n\n  /**\n   * @param {string} expression Stroke color expression, evaluate to `float`\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeOffsetExpression(expression) {\n    this.strokeOffsetExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke line cap expression, evaluate to `float`\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeCapExpression(expression) {\n    this.strokeCapExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke line join expression, evaluate to `float`\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeJoinExpression(expression) {\n    this.strokeJoinExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke miter limit expression, evaluate to `float`\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeMiterLimitExpression(expression) {\n    this.strokeMiterLimitExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke distance field expression, evaluate to `float`\n   * This can override the default distance field; can rely on currentLengthPx and currentRadiusPx\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeDistanceFieldExpression(expression) {\n    this.strokeDistanceFieldExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Fill color expression, evaluate to `vec4`\n   * @return {ShaderBuilder} the builder object\n   */\n  setFillColorExpression(expression) {\n    this.hasFill_ = true;\n    this.fillColorExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current fill color expression\n   */\n  getFillColorExpression() {\n    return this.fillColorExpression_;\n  }\n\n  addVertexShaderFunction(code) {\n    if (this.vertexShaderFunctions_.includes(code)) {\n      return;\n    }\n    this.vertexShaderFunctions_.push(code);\n  }\n  addFragmentShaderFunction(code) {\n    if (this.fragmentShaderFunctions_.includes(code)) {\n      return;\n    }\n    this.fragmentShaderFunctions_.push(code);\n  }\n\n  /**\n   * Generates a symbol vertex shader from the builder parameters\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getSymbolVertexShader() {\n    if (!this.hasSymbol_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nattribute vec2 a_position;\nattribute float a_index;\nattribute vec4 a_prop_hitColor;\n${this.attributes_\n  .map(function (attribute) {\n    return 'attribute ' + attribute + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_texCoord;\nvarying vec2 v_quadCoord;\nvarying vec4 v_prop_hitColor;\nvarying vec2 v_centerPx;\nvarying float v_angle;\nvarying vec2 v_quadSizePx;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.vertexShaderFunctions_.join('\\n')}\nvec2 pxToScreen(vec2 coordPx) {\n  vec2 scaled = coordPx / u_viewportSizePx / 0.5;\n  return scaled;\n}\n\nvec2 screenToPx(vec2 coordScreen) {\n  return (coordScreen * 0.5 + 0.5) * u_viewportSizePx;\n}\n\nvoid main(void) {\n  v_quadSizePx = ${this.symbolSizeExpression_};\n  vec2 halfSizePx = v_quadSizePx * 0.5;\n  vec2 centerOffsetPx = ${this.symbolOffsetExpression_};\n  vec2 offsetPx = centerOffsetPx;\n  if (a_index == 0.0) {\n    offsetPx -= halfSizePx;\n  } else if (a_index == 1.0) {\n    offsetPx += halfSizePx * vec2(1., -1.);\n  } else if (a_index == 2.0) {\n    offsetPx += halfSizePx;\n  } else {\n    offsetPx += halfSizePx * vec2(-1., 1.);\n  }\n  float angle = ${this.symbolRotationExpression_};\n  ${this.symbolRotateWithView_ ? 'angle += u_rotation;' : ''}\n  float c = cos(-angle);\n  float s = sin(-angle);\n  offsetPx = vec2(c * offsetPx.x - s * offsetPx.y, s * offsetPx.x + c * offsetPx.y);\n  vec4 center = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\n  gl_Position = center + vec4(pxToScreen(offsetPx), u_depth, 0.);\n  vec4 texCoord = ${this.texCoordExpression_};\n  float u = a_index == 0.0 || a_index == 3.0 ? texCoord.s : texCoord.p;\n  float v = a_index == 2.0 || a_index == 3.0 ? texCoord.t : texCoord.q;\n  v_texCoord = vec2(u, v);\n  v_prop_hitColor = a_prop_hitColor;\n  v_angle = angle;\n  c = cos(-v_angle);\n  s = sin(-v_angle);\n  centerOffsetPx = vec2(c * centerOffsetPx.x - s * centerOffsetPx.y, s * centerOffsetPx.x + c * centerOffsetPx.y); \n  v_centerPx = screenToPx(center.xy) + centerOffsetPx;\n${this.varyings_\n  .map(function (varying) {\n    return '  ' + varying.name + ' = ' + varying.expression + ';';\n  })\n  .join('\\n')}\n}`;\n  }\n\n  /**\n   * Generates a symbol fragment shader from the builder parameters\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getSymbolFragmentShader() {\n    if (!this.hasSymbol_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_texCoord;\nvarying vec4 v_prop_hitColor;\nvarying vec2 v_centerPx;\nvarying float v_angle;\nvarying vec2 v_quadSizePx;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.fragmentShaderFunctions_.join('\\n')}\n\nvoid main(void) {\n  if (${this.discardExpression_}) { discard; }\n  vec2 coordsPx = gl_FragCoord.xy / u_pixelRatio - v_centerPx; // relative to center\n  float c = cos(v_angle);\n  float s = sin(v_angle);\n  coordsPx = vec2(c * coordsPx.x - s * coordsPx.y, s * coordsPx.x + c * coordsPx.y);\n  gl_FragColor = ${this.symbolColorExpression_};\n  if (u_hitDetection > 0) {\n    if (gl_FragColor.a < 0.05) { discard; };\n    gl_FragColor = v_prop_hitColor;\n  }\n}`;\n  }\n\n  /**\n   * Generates a stroke vertex shader from the builder parameters\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getStrokeVertexShader() {\n    if (!this.hasStroke_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nattribute vec2 a_position;\nattribute float a_index;\nattribute vec2 a_segmentStart;\nattribute vec2 a_segmentEnd;\nattribute float a_parameters;\nattribute float a_distance;\nattribute vec2 a_joinAngles;\nattribute vec4 a_prop_hitColor;\n${this.attributes_\n  .map(function (attribute) {\n    return 'attribute ' + attribute + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_segmentStart;\nvarying vec2 v_segmentEnd;\nvarying float v_angleStart;\nvarying float v_angleEnd;\nvarying float v_width;\nvarying vec4 v_prop_hitColor;\nvarying float v_distanceOffsetPx;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.vertexShaderFunctions_.join('\\n')}\nvec2 worldToPx(vec2 worldPos) {\n  vec4 screenPos = u_projectionMatrix * vec4(worldPos, 0.0, 1.0);\n  return (0.5 * screenPos.xy + 0.5) * u_viewportSizePx;\n}\n\nvec4 pxToScreen(vec2 pxPos) {\n  vec2 screenPos = 2.0 * pxPos / u_viewportSizePx - 1.0;\n  return vec4(screenPos, u_depth, 1.0);\n}\n\nbool isCap(float joinAngle) {\n  return joinAngle < -0.1;\n}\n\nvec2 getJoinOffsetDirection(vec2 normalPx, float joinAngle) {\n  float halfAngle = joinAngle / 2.0;\n  float c = cos(halfAngle);\n  float s = sin(halfAngle);\n  vec2 angleBisectorNormal = vec2(s * normalPx.x + c * normalPx.y, -c * normalPx.x + s * normalPx.y);\n  float length = 1.0 / s;\n  return angleBisectorNormal * length;\n}\n\nvec2 getOffsetPoint(vec2 point, vec2 normal, float joinAngle, float offsetPx) {\n  // if on a cap or the join angle is too high, offset the line along the segment normal\n  if (cos(joinAngle) > 0.998 || isCap(joinAngle)) {\n    return point - normal * offsetPx;\n  }\n  // offset is applied along the inverted normal (positive offset goes \"right\" relative to line direction)\n  return point - getJoinOffsetDirection(normal, joinAngle) * offsetPx;\n}\n\nvoid main(void) {\n  v_angleStart = a_joinAngles.x;\n  v_angleEnd = a_joinAngles.y;\n  float vertexNumber = floor(abs(a_parameters) / 10000. + 0.5);\n  // we're reading the fractional part while keeping the sign (so -4.12 gives -0.12, 3.45 gives 0.45)\n  float angleTangentSum = fract(abs(a_parameters) / 10000.) * 10000. * sign(a_parameters);\n\n  float lineWidth = ${this.strokeWidthExpression_};\n  float lineOffsetPx = ${this.strokeOffsetExpression_};\n\n  // compute segment start/end in px with offset\n  vec2 segmentStartPx = worldToPx(a_segmentStart);\n  vec2 segmentEndPx = worldToPx(a_segmentEnd);\n  vec2 tangentPx = normalize(segmentEndPx - segmentStartPx);\n  vec2 normalPx = vec2(-tangentPx.y, tangentPx.x);\n  segmentStartPx = getOffsetPoint(segmentStartPx, normalPx, v_angleStart, lineOffsetPx),\n  segmentEndPx = getOffsetPoint(segmentEndPx, normalPx, v_angleEnd, lineOffsetPx);\n  \n  // compute current vertex position\n  float normalDir = vertexNumber < 0.5 || (vertexNumber > 1.5 && vertexNumber < 2.5) ? 1.0 : -1.0;\n  float tangentDir = vertexNumber < 1.5 ? 1.0 : -1.0;\n  float angle = vertexNumber < 1.5 ? v_angleStart : v_angleEnd;\n  vec2 joinDirection;\n  vec2 positionPx = vertexNumber < 1.5 ? segmentStartPx : segmentEndPx;\n  // if angle is too high, do not make a proper join\n  if (cos(angle) > ${LINESTRING_ANGLE_COSINE_CUTOFF} || isCap(angle)) {\n    joinDirection = normalPx * normalDir - tangentPx * tangentDir;\n  } else {\n    joinDirection = getJoinOffsetDirection(normalPx * normalDir, angle);\n  }\n  positionPx = positionPx + joinDirection * (lineWidth * 0.5 + 1.); // adding 1 pixel for antialiasing\n  gl_Position = pxToScreen(positionPx);\n\n  v_segmentStart = segmentStartPx;\n  v_segmentEnd = segmentEndPx;\n  v_width = lineWidth;\n  v_prop_hitColor = a_prop_hitColor;\n  v_distanceOffsetPx = a_distance / u_resolution - (lineOffsetPx * angleTangentSum);\n${this.varyings_\n  .map(function (varying) {\n    return '  ' + varying.name + ' = ' + varying.expression + ';';\n  })\n  .join('\\n')}\n}`;\n  }\n\n  /**\n   * Generates a stroke fragment shader from the builder parameters\n   *\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getStrokeFragmentShader() {\n    if (!this.hasStroke_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_segmentStart;\nvarying vec2 v_segmentEnd;\nvarying float v_angleStart;\nvarying float v_angleEnd;\nvarying float v_width;\nvarying vec4 v_prop_hitColor;\nvarying float v_distanceOffsetPx;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.fragmentShaderFunctions_.join('\\n')}\n\nvec2 pxToWorld(vec2 pxPos) {\n  vec2 screenPos = 2.0 * pxPos / u_viewportSizePx - 1.0;\n  return (u_screenToWorldMatrix * vec4(screenPos, 0.0, 1.0)).xy;\n}\n\nbool isCap(float joinAngle) {\n  return joinAngle < -0.1;\n}\n\nfloat segmentDistanceField(vec2 point, vec2 start, vec2 end, float width) {\n  vec2 tangent = normalize(end - start);\n  vec2 normal = vec2(-tangent.y, tangent.x);\n  vec2 startToPoint = point - start;\n  return abs(dot(startToPoint, normal)) - width * 0.5;\n}\n\nfloat buttCapDistanceField(vec2 point, vec2 start, vec2 end) {\n  vec2 startToPoint = point - start;\n  vec2 tangent = normalize(end - start);\n  return dot(startToPoint, -tangent);\n}\n\nfloat squareCapDistanceField(vec2 point, vec2 start, vec2 end, float width) {\n  return buttCapDistanceField(point, start, end) - width * 0.5;\n}\n\nfloat roundCapDistanceField(vec2 point, vec2 start, vec2 end, float width) {\n  float onSegment = max(0., 1000. * dot(point - start, end - start)); // this is very high when inside the segment\n  return length(point - start) - width * 0.5 - onSegment;\n}\n\nfloat roundJoinDistanceField(vec2 point, vec2 start, vec2 end, float width) {\n  return roundCapDistanceField(point, start, end, width);\n}\n\nfloat bevelJoinField(vec2 point, vec2 start, vec2 end, float width, float joinAngle) {\n  vec2 startToPoint = point - start;\n  vec2 tangent = normalize(end - start);\n  float c = cos(joinAngle * 0.5);\n  float s = sin(joinAngle * 0.5);\n  float direction = -sign(sin(joinAngle));\n  vec2 bisector = vec2(c * tangent.x - s * tangent.y, s * tangent.x + c * tangent.y);\n  float radius = width * 0.5 * s;\n  return dot(startToPoint, bisector * direction) - radius;\n}\n\nfloat miterJoinDistanceField(vec2 point, vec2 start, vec2 end, float width, float joinAngle) {\n  if (cos(joinAngle) > ${LINESTRING_ANGLE_COSINE_CUTOFF}) { // avoid risking a division by zero\n    return bevelJoinField(point, start, end, width, joinAngle);\n  }\n  float miterLength = 1. / sin(joinAngle * 0.5);\n  float miterLimit = ${this.strokeMiterLimitExpression_};\n  if (miterLength > miterLimit) {\n    return bevelJoinField(point, start, end, width, joinAngle);\n  }\n  return -1000.;\n}\n\nfloat capDistanceField(vec2 point, vec2 start, vec2 end, float width, float capType) {\n   if (capType == ${stringToGlsl('butt')}) {\n    return buttCapDistanceField(point, start, end);\n  } else if (capType == ${stringToGlsl('square')}) {\n    return squareCapDistanceField(point, start, end, width);\n  }\n  return roundCapDistanceField(point, start, end, width);\n}\n\nfloat joinDistanceField(vec2 point, vec2 start, vec2 end, float width, float joinAngle, float joinType) {\n  if (joinType == ${stringToGlsl('bevel')}) {\n    return bevelJoinField(point, start, end, width, joinAngle);\n  } else if (joinType == ${stringToGlsl('miter')}) {\n    return miterJoinDistanceField(point, start, end, width, joinAngle);\n  }\n  return roundJoinDistanceField(point, start, end, width);\n}\n\nfloat computeSegmentPointDistance(vec2 point, vec2 start, vec2 end, float width, float joinAngle, float capType, float joinType) {\n  if (isCap(joinAngle)) {\n    return capDistanceField(point, start, end, width, capType);\n  }\n  return joinDistanceField(point, start, end, width, joinAngle, joinType);\n}\n\nvoid main(void) {\n  vec2 currentPoint = gl_FragCoord.xy / u_pixelRatio;\n  #ifdef GL_FRAGMENT_PRECISION_HIGH\n  vec2 worldPos = pxToWorld(currentPoint);\n  if (\n    abs(u_renderExtent[0] - u_renderExtent[2]) > 0.0 && (\n      worldPos[0] < u_renderExtent[0] ||\n      worldPos[1] < u_renderExtent[1] ||\n      worldPos[0] > u_renderExtent[2] ||\n      worldPos[1] > u_renderExtent[3]\n    )\n  ) {\n    discard;\n  }\n  #endif\n  if (${this.discardExpression_}) { discard; }\n\n  float segmentLength = length(v_segmentEnd - v_segmentStart);\n  vec2 segmentTangent = (v_segmentEnd - v_segmentStart) / segmentLength;\n  vec2 segmentNormal = vec2(-segmentTangent.y, segmentTangent.x);\n  vec2 startToPoint = currentPoint - v_segmentStart;\n  float currentLengthPx = max(0., min(dot(segmentTangent, startToPoint), segmentLength)) + v_distanceOffsetPx; \n  float currentRadiusPx = abs(dot(segmentNormal, startToPoint));\n  float currentRadiusRatio = dot(segmentNormal, startToPoint) * 2. / v_width;\n  vec4 color = ${this.strokeColorExpression_} * u_globalAlpha;\n  float capType = ${this.strokeCapExpression_};\n  float joinType = ${this.strokeJoinExpression_};\n  float segmentStartDistance = computeSegmentPointDistance(currentPoint, v_segmentStart, v_segmentEnd, v_width, v_angleStart, capType, joinType);\n  float segmentEndDistance = computeSegmentPointDistance(currentPoint, v_segmentEnd, v_segmentStart, v_width, v_angleEnd, capType, joinType);\n  float distance = max(\n    segmentDistanceField(currentPoint, v_segmentStart, v_segmentEnd, v_width),\n    max(segmentStartDistance, segmentEndDistance)\n  );\n  distance = max(distance, ${this.strokeDistanceFieldExpression_});\n  gl_FragColor = color * smoothstep(0.5, -0.5, distance);\n  if (u_hitDetection > 0) {\n    if (gl_FragColor.a < 0.1) { discard; };\n    gl_FragColor = v_prop_hitColor;\n  }\n}`;\n  }\n\n  /**\n   * Generates a fill vertex shader from the builder parameters\n   *\n   * @return {string|null} The full shader as a string; null if no color specified\n   */\n  getFillVertexShader() {\n    if (!this.hasFill_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nattribute vec2 a_position;\nattribute vec4 a_prop_hitColor;\n${this.attributes_\n  .map(function (attribute) {\n    return 'attribute ' + attribute + ';';\n  })\n  .join('\\n')}\nvarying vec4 v_prop_hitColor;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.vertexShaderFunctions_.join('\\n')}\nvoid main(void) {\n  gl_Position = u_projectionMatrix * vec4(a_position, u_depth, 1.0);\n  v_prop_hitColor = a_prop_hitColor;\n${this.varyings_\n  .map(function (varying) {\n    return '  ' + varying.name + ' = ' + varying.expression + ';';\n  })\n  .join('\\n')}\n}`;\n  }\n\n  /**\n   * Generates a fill fragment shader from the builder parameters\n   * @return {string|null} The full shader as a string; null if no color specified\n   */\n  getFillFragmentShader() {\n    if (!this.hasFill_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nvarying vec4 v_prop_hitColor;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.fragmentShaderFunctions_.join('\\n')}\nvec2 pxToWorld(vec2 pxPos) {\n  vec2 screenPos = 2.0 * pxPos / u_viewportSizePx - 1.0;\n  return (u_screenToWorldMatrix * vec4(screenPos, 0.0, 1.0)).xy;\n}\n\nvec2 worldToPx(vec2 worldPos) {\n  vec4 screenPos = u_projectionMatrix * vec4(worldPos, 0.0, 1.0);\n  return (0.5 * screenPos.xy + 0.5) * u_viewportSizePx;\n}\n\nvoid main(void) {\n  vec2 pxPos = gl_FragCoord.xy / u_pixelRatio;\n  vec2 pxOrigin = worldToPx(u_patternOrigin);\n  #ifdef GL_FRAGMENT_PRECISION_HIGH\n  vec2 worldPos = pxToWorld(pxPos);\n  if (\n    abs(u_renderExtent[0] - u_renderExtent[2]) > 0.0 && (\n      worldPos[0] < u_renderExtent[0] ||\n      worldPos[1] < u_renderExtent[1] ||\n      worldPos[0] > u_renderExtent[2] ||\n      worldPos[1] > u_renderExtent[3]\n    )\n  ) {\n    discard;\n  }\n  #endif\n  if (${this.discardExpression_}) { discard; }\n  gl_FragColor = ${this.fillColorExpression_} * u_globalAlpha;\n  if (u_hitDetection > 0) {\n    if (gl_FragColor.a < 0.1) { discard; };\n    gl_FragColor = v_prop_hitColor;\n  }\n}`;\n  }\n}\n","/**\n * @module ol/layer/Heatmap\n */\nimport BaseVector from './BaseVector.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport {ShaderBuilder} from '../webgl/ShaderBuilder.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D} from '../dom.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} FeatureType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"../source/Vector.js\").default<FeatureType>} [source] Point source.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius',\n};\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @template {import(\"../Feature.js\").FeatureLike} FeatureType\n * @extends {BaseVector<import(\"../source/Vector.js\").default<FeatureType>, WebGLPointsLayerRenderer>}\n * @api\n */\nclass Heatmap extends BaseVector {\n  /**\n   * @param {Options<FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.weight;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.gradient_ = null;\n\n    this.addChangeListener(Property.GRADIENT, this.handleGradientChanged_);\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    const weight = options.weight ? options.weight : 'weight';\n    if (typeof weight === 'string') {\n      this.weightFunction_ = function (feature) {\n        return feature.get(weight);\n      };\n    } else {\n      this.weightFunction_ = weight;\n    }\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  getBlur() {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  }\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array<string>} Colors.\n   * @api\n   * @observable\n   */\n  getGradient() {\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n  }\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  getRadius() {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  }\n\n  /**\n   * @private\n   */\n  handleGradientChanged_() {\n    this.gradient_ = createGradient(this.getGradient());\n  }\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  setBlur(blur) {\n    this.set(Property.BLUR, blur);\n  }\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  setGradient(colors) {\n    this.set(Property.GRADIENT, colors);\n  }\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  setRadius(radius) {\n    this.set(Property.RADIUS, radius);\n  }\n\n  createRenderer() {\n    const builder = new ShaderBuilder()\n      .addAttribute('float a_prop_weight')\n      .addVarying('v_prop_weight', 'float', 'a_prop_weight')\n      .addUniform('float u_size')\n      .addUniform('float u_blurSlope')\n      .setSymbolSizeExpression('vec2(u_size)')\n      .setSymbolColorExpression(\n        'vec4(smoothstep(0., 1., (1. - length(coordsPx * 2. / v_quadSizePx)) * u_blurSlope) * v_prop_weight)',\n      );\n\n    return new WebGLPointsLayerRenderer(this, {\n      className: this.getClassName(),\n      attributes: [\n        {\n          name: 'weight',\n          callback: (feature) => {\n            const weight = this.weightFunction_(feature);\n            return weight !== undefined ? clamp(weight, 0, 1) : 1;\n          },\n        },\n      ],\n      uniforms: {\n        u_size: () => {\n          return (this.get(Property.RADIUS) + this.get(Property.BLUR)) * 2;\n        },\n        u_blurSlope: () => {\n          return (\n            this.get(Property.RADIUS) / Math.max(1, this.get(Property.BLUR))\n          );\n        },\n      },\n      hitDetectionEnabled: true,\n      vertexShader: builder.getSymbolVertexShader(),\n      fragmentShader: builder.getSymbolFragmentShader(),\n      postProcesses: [\n        {\n          fragmentShader: `\n            precision mediump float;\n\n            uniform sampler2D u_image;\n            uniform sampler2D u_gradientTexture;\n            uniform float u_opacity;\n\n            varying vec2 v_texCoord;\n\n            void main() {\n              vec4 color = texture2D(u_image, v_texCoord);\n              gl_FragColor.a = color.a * u_opacity;\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\n              gl_FragColor.rgb *= gl_FragColor.a;\n            }`,\n          uniforms: {\n            u_gradientTexture: () => this.gradient_,\n            u_opacity: () => this.getOpacity(),\n          },\n        },\n      ],\n    });\n  }\n\n  renderDeclutter() {}\n}\n\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {HTMLCanvasElement} canvas with gradient texture.\n */\nfunction createGradient(colors) {\n  const width = 1;\n  const height = 256;\n  const context = createCanvasContext2D(width, height);\n\n  const gradient = context.createLinearGradient(0, 0, width, height);\n  const step = 1 / (colors.length - 1);\n  for (let i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.canvas;\n}\n\nexport default Heatmap;\n","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport {TRUE} from '../functions.js';\nimport {get as getProjection, getUserProjection} from '../proj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default|import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors\n * (and/or formats pre-constructed with options).\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n/**\n * @enum {string}\n */\nconst DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nexport class DragAndDropEvent extends Event {\n  /**\n   * @param {DragAndDropEventType} type Type.\n   * @param {File} file File.\n   * @param {Array<import(\"../Feature.js\").default>} [features] Features.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   */\n  constructor(type, file, features, projection) {\n    super(type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     * @api\n     */\n    this.projection = projection;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'addfeatures', DragAndDropEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'addfeatures', Return>} DragAndDropOnSignature\n */\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * @api\n *\n * @fires DragAndDropEvent\n */\nclass DragAndDrop extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      handleEvent: TRUE,\n    });\n\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragAndDropOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.readAsBuffer_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../format/Feature.js\").default>}\n     */\n    this.formats_ = [];\n    const formatConstructors = options.formatConstructors\n      ? options.formatConstructors\n      : [];\n    for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      let format = formatConstructors[i];\n      if (typeof format === 'function') {\n        format = new format();\n      }\n      this.formats_.push(format);\n      this.readAsBuffer_ =\n        this.readAsBuffer_ || format.getType() === 'arraybuffer';\n    }\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = options.projection\n      ? getProjection(options.projection)\n      : null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../source/Vector.js\").default}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.target = options.target ? options.target : null;\n  }\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  handleResult_(file, event) {\n    const result = event.target.result;\n    const map = this.getMap();\n    let projection = this.projection_;\n    if (!projection) {\n      projection = getUserProjection();\n      if (!projection) {\n        const view = map.getView();\n        projection = view.getProjection();\n      }\n    }\n\n    let text;\n    const formats = this.formats_;\n    for (let i = 0, ii = formats.length; i < ii; ++i) {\n      const format = formats[i];\n      let input = result;\n      if (this.readAsBuffer_ && format.getType() !== 'arraybuffer') {\n        if (text === undefined) {\n          text = new TextDecoder().decode(result);\n        }\n        input = text;\n      }\n      const features = this.tryReadFeatures_(format, input, {\n        featureProjection: projection,\n      });\n      if (features && features.length > 0) {\n        if (this.source_) {\n          this.source_.clear();\n          this.source_.addFeatures(features);\n        }\n        this.dispatchEvent(\n          new DragAndDropEvent(\n            DragAndDropEventType.ADD_FEATURES,\n            file,\n            features,\n            projection,\n          ),\n        );\n        break;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  registerListeners_() {\n    const map = this.getMap();\n    if (map) {\n      const dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [\n        listen(dropArea, EventType.DROP, this.handleDrop, this),\n        listen(dropArea, EventType.DRAGENTER, this.handleStop, this),\n        listen(dropArea, EventType.DRAGOVER, this.handleStop, this),\n        listen(dropArea, EventType.DROP, this.handleStop, this),\n      ];\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (!this.getActive() && active) {\n      this.registerListeners_();\n    }\n    if (this.getActive() && !active) {\n      this.unregisterListeners_();\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.unregisterListeners_();\n    super.setMap(map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  }\n\n  /**\n   * @param {import(\"../format/Feature.js\").default} format Format.\n   * @param {string} text Text.\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n   * @private\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  tryReadFeatures_(format, text, options) {\n    try {\n      return (\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        (format.readFeatures(text, options))\n      );\n    } catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * @private\n   */\n  unregisterListeners_() {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleDrop(event) {\n    const files = event.dataTransfer.files;\n    for (let i = 0, ii = files.length; i < ii; ++i) {\n      const file = files.item(i);\n      const reader = new FileReader();\n      reader.addEventListener(\n        EventType.LOAD,\n        this.handleResult_.bind(this, file),\n      );\n      if (this.readAsBuffer_) {\n        reader.readAsArrayBuffer(file);\n      } else {\n        reader.readAsText(file);\n      }\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleStop(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n  }\n}\n\nexport default DragAndDrop;\n","/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {\n  always,\n  never,\n  noModifierKeys,\n  shiftKeyOnly,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../extent.js';\nimport {clamp, squaredDistance, toFixed} from '../math.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {\n  distance,\n  squaredDistance as squaredCoordinateDistance,\n} from '../coordinate.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/Geometry.js\").Type} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style for sketch features. The draw interaction can have up to three sketch features, depending on the mode.\n * It will always contain a feature with a `Point` geometry that corresponds to the current cursor position.\n * If the mode is `LineString` or `Polygon`, and there is at least one drawn point, it will also contain a feature with\n * a `LineString` geometry that corresponds to the line between the already drawn points and the current cursor position.\n * If the mode is `Polygon`, and there is at least one drawn point, it will also contain a feature with a `Polygon`\n * geometry that corresponds to the polygon between the already drawn points and the current cursor position\n * (note that this polygon has only two points if only one point is drawn).\n * If the mode is `Circle`, and there is one point drawn, it will also contain a feature with a `Circle` geometry whose\n * center is the drawn point and the radius is determined by the distance between the drawn point and the cursor.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition.noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition.shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean|import(\"../events/condition.js\").Condition} [trace=false] Trace a portion of another geometry.\n * Ignored when in freehand mode.\n * @property {VectorSource} [traceSource] Source for features to trace.  If tracing is active and a `traceSource` is\n * not provided, the interaction's `source` will be used.  Tracing requires that the interaction is configured with\n * either a `traceSource` or a `source`.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the draw interaction.\n */\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n/**\n * @typedef {Object} TraceState\n * @property {boolean} active Tracing active.\n * @property {import(\"../pixel.js\").Pixel} [startPx] The initially clicked pixel location.\n * @property {Array<TraceTarget>} [targets] Targets available for tracing.\n * @property {number} [targetIndex] The index of the currently traced target.  A value of -1 indicates\n * that no trace target is active.\n */\n\n/**\n * @typedef {Object} TraceTarget\n * @property {Array<import(\"../coordinate.js\").Coordinate>} coordinates Target coordinates.\n * @property {boolean} ring The target coordinates are a linear ring.\n * @property {number} startIndex The index of first traced coordinate.  A fractional index represents an\n * edge intersection.  Index values for rings will wrap (may be negative or larger than coordinates length).\n * @property {number} endIndex The index of last traced coordinate.  Details from startIndex also apply here.\n */\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'Polygon' | 'Circle'} Mode\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n */\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend',\n  /**\n   * Triggered upon feature draw abortion\n   * @event DrawEvent#drawabort\n   * @api\n   */\n  DRAWABORT: 'drawabort',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nexport class DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n  }\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {Array<Feature>} features The candidate features.\n * @return {Array<TraceTarget>} The trace targets.\n */\nfunction getTraceTargets(coordinate, features) {\n  /**\n   * @type {Array<TraceTarget>}\n   */\n  const targets = [];\n\n  for (let i = 0; i < features.length; ++i) {\n    const feature = features[i];\n    const geometry = feature.getGeometry();\n    appendGeometryTraceTargets(coordinate, geometry, targets);\n  }\n\n  return targets;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} a One coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b Another coordinate.\n * @return {number} The squared distance between the two coordinates.\n */\nfunction getSquaredDistance(a, b) {\n  return squaredDistance(a[0], a[1], b[0], b[1]);\n}\n\n/**\n * @param {LineCoordType} coordinates The ring coordinates.\n * @param {number} index The index.  May be wrapped.\n * @return {import(\"../coordinate.js\").Coordinate} The coordinate.\n */\nfunction getCoordinate(coordinates, index) {\n  const count = coordinates.length;\n  if (index < 0) {\n    return coordinates[index + count];\n  }\n  if (index >= count) {\n    return coordinates[index - count];\n  }\n  return coordinates[index];\n}\n\n/**\n * Get the cumulative squared distance along a ring path.  The end index index may be \"wrapped\" and it may\n * be less than the start index to indicate the direction of travel.  The start and end index may have\n * a fractional part to indicate a point between two coordinates.\n * @param {LineCoordType} coordinates Ring coordinates.\n * @param {number} startIndex The start index.\n * @param {number} endIndex The end index.\n * @return {number} The cumulative squared distance along the ring path.\n */\nfunction getCumulativeSquaredDistance(coordinates, startIndex, endIndex) {\n  let lowIndex, highIndex;\n  if (startIndex < endIndex) {\n    lowIndex = startIndex;\n    highIndex = endIndex;\n  } else {\n    lowIndex = endIndex;\n    highIndex = startIndex;\n  }\n  const lowWholeIndex = Math.ceil(lowIndex);\n  const highWholeIndex = Math.floor(highIndex);\n\n  if (lowWholeIndex > highWholeIndex) {\n    // both start and end are on the same segment\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    return getSquaredDistance(start, end);\n  }\n\n  let sd = 0;\n\n  if (lowIndex < lowWholeIndex) {\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = getCoordinate(coordinates, lowWholeIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  if (highWholeIndex < highIndex) {\n    const start = getCoordinate(coordinates, highWholeIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  for (let i = lowWholeIndex; i < highWholeIndex - 1; ++i) {\n    const start = getCoordinate(coordinates, i);\n    const end = getCoordinate(coordinates, i + 1);\n    sd += getSquaredDistance(start, end);\n  }\n\n  return sd;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {import(\"../geom/Geometry.js\").default} geometry The candidate geometry.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendGeometryTraceTargets(coordinate, geometry, targets) {\n  if (geometry instanceof LineString) {\n    appendTraceTarget(coordinate, geometry.getCoordinates(), false, targets);\n    return;\n  }\n  if (geometry instanceof MultiLineString) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], false, targets);\n    }\n    return;\n  }\n  if (geometry instanceof Polygon) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], true, targets);\n    }\n    return;\n  }\n  if (geometry instanceof MultiPolygon) {\n    const polys = geometry.getCoordinates();\n    for (let i = 0, ii = polys.length; i < ii; ++i) {\n      const coordinates = polys[i];\n      for (let j = 0, jj = coordinates.length; j < jj; ++j) {\n        appendTraceTarget(coordinate, coordinates[j], true, targets);\n      }\n    }\n    return;\n  }\n  if (geometry instanceof GeometryCollection) {\n    const geometries = geometry.getGeometries();\n    for (let i = 0; i < geometries.length; ++i) {\n      appendGeometryTraceTargets(coordinate, geometries[i], targets);\n    }\n    return;\n  }\n  // other types cannot be traced\n}\n\n/**\n * @typedef {Object} TraceTargetUpdateInfo\n * @property {number} index The new target index.\n * @property {number} endIndex The new segment end index.\n */\n\n/**\n * @type {TraceTargetUpdateInfo}\n */\nconst sharedUpdateInfo = {index: -1, endIndex: NaN};\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {TraceState} traceState The trace state.\n * @param {import(\"../Map.js\").default} map The map.\n * @param {number} snapTolerance The snap tolerance.\n * @return {TraceTargetUpdateInfo} Information about the new trace target.  The returned\n * object is reused between calls and must not be modified by the caller.\n */\nfunction getTraceTargetUpdate(coordinate, traceState, map, snapTolerance) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n\n  let closestTargetDistance = Infinity;\n\n  let newTargetIndex = -1;\n  let newEndIndex = NaN;\n\n  for (\n    let targetIndex = 0;\n    targetIndex < traceState.targets.length;\n    ++targetIndex\n  ) {\n    const target = traceState.targets[targetIndex];\n    const coordinates = target.coordinates;\n\n    let minSegmentDistance = Infinity;\n    let endIndex;\n    for (\n      let coordinateIndex = 0;\n      coordinateIndex < coordinates.length - 1;\n      ++coordinateIndex\n    ) {\n      const start = coordinates[coordinateIndex];\n      const end = coordinates[coordinateIndex + 1];\n      const rel = getPointSegmentRelationship(x, y, start, end);\n      if (rel.squaredDistance < minSegmentDistance) {\n        minSegmentDistance = rel.squaredDistance;\n        endIndex = coordinateIndex + rel.along;\n      }\n    }\n\n    if (minSegmentDistance < closestTargetDistance) {\n      closestTargetDistance = minSegmentDistance;\n      if (target.ring && traceState.targetIndex === targetIndex) {\n        // same target, maintain the same trace direction\n        if (target.endIndex > target.startIndex) {\n          // forward trace\n          if (endIndex < target.startIndex) {\n            endIndex += coordinates.length;\n          }\n        } else if (target.endIndex < target.startIndex) {\n          // reverse trace\n          if (endIndex > target.startIndex) {\n            endIndex -= coordinates.length;\n          }\n        }\n      }\n      newEndIndex = endIndex;\n      newTargetIndex = targetIndex;\n    }\n  }\n\n  const newTarget = traceState.targets[newTargetIndex];\n  let considerBothDirections = newTarget.ring;\n  if (traceState.targetIndex === newTargetIndex && considerBothDirections) {\n    // only consider switching trace direction if close to the start\n    const newCoordinate = interpolateCoordinate(\n      newTarget.coordinates,\n      newEndIndex,\n    );\n    const pixel = map.getPixelFromCoordinate(newCoordinate);\n    if (distance(pixel, traceState.startPx) > snapTolerance) {\n      considerBothDirections = false;\n    }\n  }\n\n  if (considerBothDirections) {\n    const coordinates = newTarget.coordinates;\n    const count = coordinates.length;\n    const startIndex = newTarget.startIndex;\n    const endIndex = newEndIndex;\n    if (startIndex < endIndex) {\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex,\n      );\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex - count,\n      );\n      if (reverseDistance < forwardDistance) {\n        newEndIndex -= count;\n      }\n    } else {\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex,\n      );\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex + count,\n      );\n      if (forwardDistance < reverseDistance) {\n        newEndIndex += count;\n      }\n    }\n  }\n\n  sharedUpdateInfo.index = newTargetIndex;\n  sharedUpdateInfo.endIndex = newEndIndex;\n  return sharedUpdateInfo;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The clicked coordinate.\n * @param {Array<import(\"../coordinate.js\").Coordinate>} coordinates The geometry component coordinates.\n * @param {boolean} ring The coordinates represent a linear ring.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendTraceTarget(coordinate, coordinates, ring, targets) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const start = coordinates[i];\n    const end = coordinates[i + 1];\n    const rel = getPointSegmentRelationship(x, y, start, end);\n    if (rel.squaredDistance === 0) {\n      const index = i + rel.along;\n      targets.push({\n        coordinates: coordinates,\n        ring: ring,\n        startIndex: index,\n        endIndex: index,\n      });\n      return;\n    }\n  }\n}\n\n/**\n * @typedef {Object} PointSegmentRelationship\n * @property {number} along The closest point expressed as a fraction along the segment length.\n * @property {number} squaredDistance The squared distance of the point to the segment.\n */\n\n/**\n * @type {PointSegmentRelationship}\n */\nconst sharedRel = {along: 0, squaredDistance: 0};\n\n/**\n * @param {number} x The point x.\n * @param {number} y The point y.\n * @param {import(\"../coordinate.js\").Coordinate} start The segment start.\n * @param {import(\"../coordinate.js\").Coordinate} end The segment end.\n * @return {PointSegmentRelationship} The point segment relationship.  The returned object is\n * shared between calls and must not be modified by the caller.\n */\nfunction getPointSegmentRelationship(x, y, start, end) {\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  let along = 0;\n  let px = x1;\n  let py = y1;\n  if (dx !== 0 || dy !== 0) {\n    along = clamp(((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy), 0, 1);\n    px += dx * along;\n    py += dy * along;\n  }\n\n  sharedRel.along = along;\n  sharedRel.squaredDistance = toFixed(squaredDistance(x, y, px, py), 10);\n  return sharedRel;\n}\n\n/**\n * @param {LineCoordType} coordinates The coordinates.\n * @param {number} index The index.  May be fractional and may wrap.\n * @return {import(\"../coordinate.js\").Coordinate} The interpolated coordinate.\n */\nfunction interpolateCoordinate(coordinates, index) {\n  const count = coordinates.length;\n\n  let startIndex = Math.floor(index);\n  const along = index - startIndex;\n  if (startIndex >= count) {\n    startIndex -= count;\n  } else if (startIndex < 0) {\n    startIndex += count;\n  }\n\n  let endIndex = startIndex + 1;\n  if (endIndex >= count) {\n    endIndex -= count;\n  }\n\n  const start = coordinates[startIndex];\n  const x0 = start[0];\n  const y0 = start[1];\n  const end = coordinates[endIndex];\n  const dx = end[0] - x0;\n  const dy = end[1] - y0;\n\n  return [x0 + dx * along, y0 + dy * along];\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'drawabort'|'drawend'|'drawstart', DrawEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'drawabort'|'drawend'|'drawstart', Return>} DrawOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DrawOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * Pointer type of the last pointermove event\n     * @type {string}\n     * @private\n     */\n    this.pointerType_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {import(\"../geom/Geometry.js\").Type}\n     * @private\n     */\n    this.type_ = /** @type {import(\"../geom/Geometry.js\").Type} */ (\n      options.type\n    );\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints\n      ? options.minPoints\n      : this.mode_ === 'Polygon'\n        ? 3\n        : 2;\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ =\n      this.mode_ === 'Circle'\n        ? 2\n        : options.maxPoints\n          ? options.maxPoints\n          : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition\n      ? options.finishCondition\n      : TRUE;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      const mode = this.mode_;\n      if (mode === 'Circle') {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          const circle = geometry\n            ? /** @type {Circle} */ (geometry)\n            : new Circle([NaN, NaN]);\n          const center = fromUserCoordinate(coordinates[0], projection);\n          const squaredLength = squaredCoordinateDistance(\n            center,\n            fromUserCoordinate(coordinates[coordinates.length - 1], projection),\n          );\n          circle.setCenterAndRadius(\n            center,\n            Math.sqrt(squaredLength),\n            this.geometryLayout_,\n          );\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        let Constructor;\n        if (mode === 'Point') {\n          Constructor = Point;\n        } else if (mode === 'LineString') {\n          Constructor = LineString;\n        } else if (mode === 'Polygon') {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          if (geometry) {\n            if (mode === 'Polygon') {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates(\n                  [coordinates[0].concat([coordinates[0][0]])],\n                  this.geometryLayout_,\n                );\n              } else {\n                geometry.setCoordinates([], this.geometryLayout_);\n              }\n            } else {\n              geometry.setCoordinates(coordinates, this.geometryLayout_);\n            }\n          } else {\n            geometry = new Constructor(coordinates, this.geometryLayout_);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ =\n      options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature<import('../geom/SimpleGeometry.js').default>}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance\n      ? options.clickTolerance * options.clickTolerance\n      : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition\n        ? options.freehandCondition\n        : shiftKeyOnly;\n    }\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.traceCondition_;\n    this.setTrace(options.trace || false);\n\n    /**\n     * @type {TraceState}\n     * @private\n     */\n    this.traceState_ = {active: false};\n\n    /**\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.traceSource_ = options.traceSource || options.source || null;\n\n    this.addChangeListener(InteractionProperty.ACTIVE, this.updateState_);\n  }\n\n  /**\n   * Toggle tracing mode or set a tracing condition.\n   *\n   * @param {boolean|import(\"../events/condition.js\").Condition} trace A boolean to toggle tracing mode or an event\n   *     condition that will be checked when a feature is clicked to determine if tracing should be active.\n   */\n  setTrace(trace) {\n    let condition;\n    if (!trace) {\n      condition = never;\n    } else if (trace === true) {\n      condition = always;\n    } else {\n      condition = trace;\n    }\n    this.traceCondition_ = condition;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.originalEvent.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== 'Point' && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (\n      !this.freehand_ &&\n      this.lastDragTime_ &&\n      event.type === MapBrowserEventType.POINTERDRAG\n    ) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null\n    ) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN\n    ) {\n      pass = false;\n    } else if (move && this.getPointerCount() < 2) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        this.handlePointerMove_(event);\n        if (this.shouldHandle_) {\n          // Avoid page scrolling when freehand drawing on mobile\n          event.originalEvent.preventDefault();\n        }\n      } else if (\n        event.originalEvent.pointerType === 'mouse' ||\n        (event.type === MapBrowserEventType.POINTERDRAG &&\n          this.downTimeout_ === undefined)\n      ) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event.coordinate);\n      }\n      return true;\n    }\n\n    if (!this.condition_(event)) {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(() => {\n      this.handlePointerMove_(\n        new MapBrowserEvent(\n          MapBrowserEventType.POINTERMOVE,\n          event.map,\n          event.originalEvent,\n          false,\n          event.frameState,\n        ),\n      );\n    }, this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  deactivateTrace_() {\n    this.traceState_ = {active: false};\n  }\n\n  /**\n   * Activate or deactivate trace state based on a browser event.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  toggleTraceState_(event) {\n    if (!this.traceSource_ || !this.traceCondition_(event)) {\n      return;\n    }\n\n    if (this.traceState_.active) {\n      this.deactivateTrace_();\n      return;\n    }\n\n    const map = this.getMap();\n    const lowerLeft = map.getCoordinateFromPixel([\n      event.pixel[0] - this.snapTolerance_,\n      event.pixel[1] + this.snapTolerance_,\n    ]);\n    const upperRight = map.getCoordinateFromPixel([\n      event.pixel[0] + this.snapTolerance_,\n      event.pixel[1] - this.snapTolerance_,\n    ]);\n    const extent = boundingExtent([lowerLeft, upperRight]);\n    const features = this.traceSource_.getFeaturesInExtent(extent);\n    if (features.length === 0) {\n      return;\n    }\n\n    const targets = getTraceTargets(event.coordinate, features);\n    if (targets.length) {\n      this.traceState_ = {\n        active: true,\n        startPx: event.pixel.slice(),\n        targets: targets,\n        targetIndex: -1,\n      };\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} endIndex The new end index of the trace.\n   * @private\n   */\n  addOrRemoveTracedCoordinates_(target, endIndex) {\n    // three cases to handle:\n    //  1. traced in the same direction and points need adding\n    //  2. traced in the same direction and points need removing\n    //  3. traced in a new direction\n    const previouslyForward = target.startIndex <= target.endIndex;\n    const currentlyForward = target.startIndex <= endIndex;\n    if (previouslyForward === currentlyForward) {\n      // same direction\n      if (\n        (previouslyForward && endIndex > target.endIndex) ||\n        (!previouslyForward && endIndex < target.endIndex)\n      ) {\n        // case 1 - add new points\n        this.addTracedCoordinates_(target, target.endIndex, endIndex);\n      } else if (\n        (previouslyForward && endIndex < target.endIndex) ||\n        (!previouslyForward && endIndex > target.endIndex)\n      ) {\n        // case 2 - remove old points\n        this.removeTracedCoordinates_(endIndex, target.endIndex);\n      }\n    } else {\n      // case 3 - remove old points, add new points\n      this.removeTracedCoordinates_(target.startIndex, target.endIndex);\n      this.addTracedCoordinates_(target, target.startIndex, endIndex);\n    }\n  }\n\n  /**\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  removeTracedCoordinates_(fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    let remove = 0;\n    if (fromIndex < toIndex) {\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        end -= 1;\n      }\n      remove = end - start + 1;\n    } else {\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      remove = start - end + 1;\n    }\n\n    if (remove > 0) {\n      this.removeLastPoints_(remove);\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  addTracedCoordinates_(target, fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    const coordinates = [];\n    if (fromIndex < toIndex) {\n      // forward trace\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        // if end is snapped to a vertex, it will be added later\n        end -= 1;\n      }\n      for (let i = start; i <= end; ++i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    } else {\n      // reverse trace\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      for (let i = start; i >= end; --i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    }\n    if (coordinates.length) {\n      this.appendCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * Update the trace.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  updateTrace_(event) {\n    const traceState = this.traceState_;\n    if (!traceState.active) {\n      return;\n    }\n\n    if (traceState.targetIndex === -1) {\n      // check if we are ready to pick a target\n      if (distance(traceState.startPx, event.pixel) < this.snapTolerance_) {\n        return;\n      }\n    }\n\n    const updatedTraceTarget = getTraceTargetUpdate(\n      event.coordinate,\n      traceState,\n      this.getMap(),\n      this.snapTolerance_,\n    );\n\n    if (traceState.targetIndex !== updatedTraceTarget.index) {\n      // target changed\n      if (traceState.targetIndex !== -1) {\n        // remove points added during previous trace\n        const oldTarget = traceState.targets[traceState.targetIndex];\n        this.removeTracedCoordinates_(oldTarget.startIndex, oldTarget.endIndex);\n      }\n      // add points for the new target\n      const newTarget = traceState.targets[updatedTraceTarget.index];\n      this.addTracedCoordinates_(\n        newTarget,\n        newTarget.startIndex,\n        updatedTraceTarget.endIndex,\n      );\n    } else {\n      // target stayed the same\n      const target = traceState.targets[traceState.targetIndex];\n      this.addOrRemoveTracedCoordinates_(target, updatedTraceTarget.endIndex);\n    }\n\n    // modify the state with updated info\n    traceState.targetIndex = updatedTraceTarget.index;\n    const target = traceState.targets[traceState.targetIndex];\n    target.endIndex = updatedTraceTarget.endIndex;\n\n    // update event coordinate and pixel to match end point of final segment\n    const coordinate = interpolateCoordinate(\n      target.coordinates,\n      target.endIndex,\n    );\n    const pixel = this.getMap().getPixelFromCoordinate(coordinate);\n    event.coordinate = coordinate;\n    event.pixel = [Math.round(pixel[0]), Math.round(pixel[1])];\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.getPointerCount() === 0) {\n      if (this.downTimeout_) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n\n      this.handlePointerMove_(event);\n      const tracing = this.traceState_.active;\n      this.toggleTraceState_(event);\n\n      if (this.shouldHandle_) {\n        const startingToDraw = !this.finishCoordinate_;\n        if (startingToDraw) {\n          this.startDrawing_(event.coordinate);\n        }\n        if (!startingToDraw && this.freehand_) {\n          this.finishDrawing();\n        } else if (\n          !this.freehand_ &&\n          (!startingToDraw || this.mode_ === 'Point')\n        ) {\n          if (this.atFinish_(event.pixel, tracing)) {\n            if (this.finishCondition_(event)) {\n              this.finishDrawing();\n            }\n          } else {\n            this.addToDrawing_(event.coordinate);\n          }\n        }\n        pass = false;\n      } else if (this.freehand_) {\n        this.abortDrawing();\n      }\n    }\n\n    if (!pass && this.stopClick_) {\n      event.preventDefault();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @private\n   */\n  handlePointerMove_(event) {\n    this.pointerType_ = event.originalEvent.pointerType;\n    if (\n      this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))\n    ) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_\n        ? squaredDistance > this.squaredClickTolerance_\n        : squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return;\n      }\n    }\n\n    if (!this.finishCoordinate_) {\n      this.createOrUpdateSketchPoint_(event.coordinate.slice());\n      return;\n    }\n\n    this.updateTrace_(event);\n    this.modifyDrawing_(event.coordinate);\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {boolean} [tracing] Drawing in trace mode (only stop if at the starting point).\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(pixel, tracing) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      const mode = this.mode_;\n      if (mode === 'Point') {\n        at = true;\n      } else if (mode === 'Circle') {\n        at = this.sketchCoords_.length === 2;\n      } else if (mode === 'LineString') {\n        potentiallyDone =\n          !tracing && this.sketchCoords_.length > this.minPoints_;\n      } else if (mode === 'Polygon') {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [\n          sketchCoords[0][0],\n          sketchCoords[0][sketchCoords[0].length - 2],\n        ];\n        if (tracing) {\n          potentiallyFinishCoordinates = [sketchCoords[0][0]];\n        } else {\n          potentiallyFinishCoordinates = [\n            sketchCoords[0][0],\n            sketchCoords[0][sketchCoords[0].length - 2],\n          ];\n        }\n      }\n      if (potentiallyDone) {\n        const map = this.getMap();\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../coordinate\").Coordinate} coordinates Coordinate.\n   * @private\n   */\n  createOrUpdateSketchPoint_(coordinates) {\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @private\n   */\n  createOrUpdateCustomSketchLine_(geometry) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature();\n    }\n    const ring = geometry.getLinearRing(0);\n    let sketchLineGeom = this.sketchLine_.getGeometry();\n    if (!sketchLineGeom) {\n      sketchLineGeom = new LineString(\n        ring.getFlatCoordinates(),\n        ring.getLayout(),\n      );\n      this.sketchLine_.setGeometry(sketchLineGeom);\n    } else {\n      sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(),\n        ring.getFlatCoordinates(),\n      );\n      sketchLineGeom.changed();\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n   * @private\n   */\n  startDrawing_(start) {\n    const projection = this.getMap().getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    while (start.length < stride) {\n      start.push(0);\n    }\n    this.finishCoordinate_ = start;\n    if (this.mode_ === 'Point') {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === 'Polygon') {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(\n      this.sketchCoords_,\n      undefined,\n      projection,\n    );\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_),\n    );\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @private\n   */\n  modifyDrawing_(coordinate) {\n    const map = this.getMap();\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = map.getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    let coordinates, last;\n    while (coordinate.length < stride) {\n      coordinate.push(0);\n    }\n    if (this.mode_ === 'Point') {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(\n      /** @type {!LineCoordType} */ (this.sketchCoords_),\n      geometry,\n      projection,\n    );\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    if (geometry.getType() === 'Polygon' && this.mode_ !== 'Polygon') {\n      this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n    } else if (this.sketchLineCoords_) {\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>} The sketch feature.\n   * @private\n   */\n  addToDrawing_(coordinate) {\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let done;\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === 'LineString' || mode === 'Circle') {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (mode === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.createOrUpdateSketchPoint_(coordinate.slice());\n    this.updateSketchFeatures_();\n    if (done) {\n      return this.finishDrawing();\n    }\n    return this.sketchFeature_;\n  }\n\n  /**\n   * @param {number} n The number of points to remove.\n   */\n  removeLastPoints_(n) {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    const mode = this.mode_;\n    for (let i = 0; i < n; ++i) {\n      let coordinates;\n      if (mode === 'LineString' || mode === 'Circle') {\n        coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n        coordinates.splice(-2, 1);\n        if (coordinates.length >= 2) {\n          this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n          const finishCoordinate = this.finishCoordinate_.slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        this.geometryFunction_(coordinates, geometry, projection);\n        if (geometry.getType() === 'Polygon' && this.sketchLine_) {\n          this.createOrUpdateCustomSketchLine_(\n            /** @type {Polygon} */ (geometry),\n          );\n        }\n      } else if (mode === 'Polygon') {\n        coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n        coordinates.splice(-2, 1);\n        const sketchLineGeom = this.sketchLine_.getGeometry();\n        if (coordinates.length >= 2) {\n          const finishCoordinate = coordinates[coordinates.length - 2].slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        sketchLineGeom.setCoordinates(coordinates);\n        this.geometryFunction_(this.sketchCoords_, geometry, projection);\n      }\n\n      if (coordinates.length === 1) {\n        this.abortDrawing();\n        break;\n      }\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn. Does not do anything when\n   * drawing POINT or MULTI_POINT geometries.\n   * @api\n   */\n  removeLastPoint() {\n    this.removeLastPoints_(1);\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The drawn feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return null;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    if (this.mode_ === 'LineString') {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === 'Polygon') {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === 'MultiPoint') {\n      sketchFeature.setGeometry(\n        new MultiPoint([/** @type {PointCoordType} */ (coordinates)]),\n      );\n    } else if (this.type_ === 'MultiLineString') {\n      sketchFeature.setGeometry(\n        new MultiLineString([/** @type {LineCoordType} */ (coordinates)]),\n      );\n    } else if (this.type_ === 'MultiPolygon') {\n      sketchFeature.setGeometry(\n        new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)]),\n      );\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    this.deactivateTrace_();\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @api\n   */\n  abortDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (sketchFeature) {\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n    }\n  }\n\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon. If no geometry is being drawn, a new one will be created.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n   * the coordinate array.\n   * @api\n   */\n  appendCoordinates(coordinates) {\n    const mode = this.mode_;\n    const newDrawing = !this.sketchFeature_;\n    if (newDrawing) {\n      this.startDrawing_(coordinates[0]);\n    }\n    /** @type {LineCoordType} */\n    let sketchCoords;\n    if (mode === 'LineString' || mode === 'Circle') {\n      sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n    } else if (mode === 'Polygon') {\n      sketchCoords =\n        this.sketchCoords_ && this.sketchCoords_.length\n          ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n          : [];\n    } else {\n      return;\n    }\n\n    if (newDrawing) {\n      sketchCoords.shift();\n    }\n\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    sketchCoords.pop();\n\n    // Append coordinate list\n    for (let i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n\n    const ending = coordinates[coordinates.length - 1];\n    // Duplicate last coordinate for sketch drawing (cursor position)\n    this.sketchFeature_ = this.addToDrawing_(ending);\n    this.modifyDrawing_(ending);\n  }\n\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.sketchPoint_ = new Feature(new Point(last));\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_),\n    );\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function (feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * {@link import(\"../geom/Circle.js\").Circle} geometry.\n * @param {number} [sides] Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number} [angle] Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(sides, angle) {\n  return function (coordinates, geometry, projection) {\n    const center = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[0],\n      projection,\n    );\n    const end = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1],\n      projection,\n    );\n    const radius = Math.sqrt(squaredCoordinateDistance(center, end));\n    geometry = geometry || fromCircle(new Circle(center), sides);\n\n    let internalAngle = angle;\n    if (!angle && angle !== 0) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      internalAngle = Math.atan2(y, x);\n    }\n    makeRegular(\n      /** @type {Polygon} */ (geometry),\n      center,\n      radius,\n      internalAngle,\n    );\n\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return function (coordinates, geometry, projection) {\n    const extent = boundingExtent(\n      /** @type {LineCoordType} */ ([\n        coordinates[0],\n        coordinates[coordinates.length - 1],\n      ]).map(function (coordinate) {\n        return fromUserCoordinate(coordinate, projection);\n      }),\n    );\n    const boxCoordinates = [\n      [\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent),\n      ],\n    ];\n    if (geometry) {\n      geometry.setCoordinates(boxCoordinates);\n    } else {\n      geometry = new Polygon(boxCoordinates);\n    }\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Get the drawing mode.  The mode for multi-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n      return 'Point';\n    case 'LineString':\n    case 'MultiLineString':\n      return 'LineString';\n    case 'Polygon':\n    case 'MultiPolygon':\n      return 'Polygon';\n    case 'Circle':\n      return 'Circle';\n    default:\n      throw new Error('Invalid type: ' + type);\n  }\n}\n\nexport default Draw;\n","/**\n * @module ol/interaction/Extent\n */\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {always} from '../events/condition.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {toUserExtent} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to the `Polygon` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to the `Point` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n/**\n * @enum {string}\n */\nconst ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event ExtentEvent#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nexport class ExtentEvent extends Event {\n  /**\n   * @param {import(\"../extent.js\").Extent} extent the new extent\n   */\n  constructor(extent) {\n    super(ExtentEventType.EXTENTCHANGED);\n\n    /**\n     * The current extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = extent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'extentchanged', ExtentEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'extentchanged', Return>} ExtentOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires ExtentEvent\n * @api\n */\nclass Extent extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ExtentOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * Condition\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * Extent of the drawn box\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.extent_ = null;\n\n    /**\n     * Handler for pointer move events\n     * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n     * @private\n     */\n    this.pointerHandler_ = null;\n\n    /**\n     * Pixel threshold to snap to extent\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Is the pointer snapped to an extent vertex\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Feature for displaying the visible extent\n     * @type {Feature}\n     * @private\n     */\n    this.extentFeature_ = null;\n\n    /**\n     * Feature for displaying the visible pointer\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    if (!options) {\n      options = {};\n    }\n\n    /**\n     * Layer for the extentFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.extentOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.boxStyle\n        ? options.boxStyle\n        : getDefaultExtentStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Layer for the vertexFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.vertexOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.pointerStyle\n        ? options.pointerStyle\n        : getDefaultPointerStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    if (options.extent) {\n      this.setExtent(options.extent);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n   * @param {import(\"../Map.js\").default} map map\n   * @return {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n   * @private\n   */\n  snapToVertex_(pixel, map) {\n    const pixelCoordinate = map.getCoordinateFromPixelInternal(pixel);\n    const sortByDistance = function (a, b) {\n      return (\n        squaredDistanceToSegment(pixelCoordinate, a) -\n        squaredDistanceToSegment(pixelCoordinate, b)\n      );\n    };\n    const extent = this.getExtentInternal();\n    if (extent) {\n      //convert extents to line segments and find the segment closest to pixelCoordinate\n      const segments = getSegments(extent);\n      segments.sort(sortByDistance);\n      const closestSegment = segments[0];\n\n      let vertex = closestOnSegment(pixelCoordinate, closestSegment);\n      const vertexPixel = map.getPixelFromCoordinateInternal(vertex);\n\n      //if the distance is within tolerance, snap to the segment\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        //test if we should further snap to a vertex\n        const pixel1 = map.getPixelFromCoordinateInternal(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinateInternal(closestSegment[1]);\n        const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex =\n            squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        }\n        return vertex;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n   * @private\n   */\n  handlePointerMove_(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    let vertex = this.snapToVertex_(pixel, map);\n    if (!vertex) {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n    }\n    this.createOrUpdatePointerFeature_(vertex);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent extent\n   * @return {Feature} extent as featrue\n   * @private\n   */\n  createOrUpdateExtentFeature_(extent) {\n    let extentFeature = this.extentFeature_;\n\n    if (!extentFeature) {\n      if (!extent) {\n        extentFeature = new Feature({});\n      } else {\n        extentFeature = new Feature(polygonFromExtent(extent));\n      }\n      this.extentFeature_ = extentFeature;\n      this.extentOverlay_.getSource().addFeature(extentFeature);\n    } else {\n      if (!extent) {\n        extentFeature.setGeometry(undefined);\n      } else {\n        extentFeature.setGeometry(polygonFromExtent(extent));\n      }\n    }\n    return extentFeature;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n   * @return {Feature} vertex as feature\n   * @private\n   */\n  createOrUpdatePointerFeature_(vertex) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(vertex));\n      this.vertexFeature_ = vertexFeature;\n      this.vertexOverlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(vertex);\n    }\n    return vertexFeature;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent || !this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    //display pointer (if not dragging)\n    if (\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    //call pointer to determine up/down/drag\n    super.handleEvent(mapBrowserEvent);\n    //return false to stop propagation\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    const extent = this.getExtentInternal();\n    let vertex = this.snapToVertex_(pixel, map);\n\n    //find the extent corner opposite the passed corner\n    const getOpposingPoint = function (point) {\n      let x_ = null;\n      let y_ = null;\n      if (point[0] == extent[0]) {\n        x_ = extent[2];\n      } else if (point[0] == extent[2]) {\n        x_ = extent[0];\n      }\n      if (point[1] == extent[1]) {\n        y_ = extent[3];\n      } else if (point[1] == extent[3]) {\n        y_ = extent[1];\n      }\n      if (x_ !== null && y_ !== null) {\n        return [x_, y_];\n      }\n      return null;\n    };\n    if (vertex && extent) {\n      const x =\n        vertex[0] == extent[0] || vertex[0] == extent[2] ? vertex[0] : null;\n      const y =\n        vertex[1] == extent[1] || vertex[1] == extent[3] ? vertex[1] : null;\n\n      //snap to point\n      if (x !== null && y !== null) {\n        this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n        //snap to edge\n      } else if (x !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([x, extent[1]]),\n          getOpposingPoint([x, extent[3]]),\n        );\n      } else if (y !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([extent[0], y]),\n          getOpposingPoint([extent[2], y]),\n        );\n      }\n      //no snap - new bbox\n    } else {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n      this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n      this.pointerHandler_ = getPointHandler(vertex);\n    }\n    return true; //event handled; start downup sequence\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (this.pointerHandler_) {\n      const pixelCoordinate = mapBrowserEvent.coordinate;\n      this.setExtent(this.pointerHandler_(pixelCoordinate));\n      this.createOrUpdatePointerFeature_(pixelCoordinate);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.pointerHandler_ = null;\n    //If bbox is zero area, set to null;\n    const extent = this.getExtentInternal();\n    if (!extent || getArea(extent) === 0) {\n      this.setExtent(null);\n    }\n    return false; //Stop handling downup sequence\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.extentOverlay_.setMap(map);\n    this.vertexOverlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection (or user projection if set)\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtent() {\n    return toUserExtent(\n      this.getExtentInternal(),\n      this.getMap().getView().getProjection(),\n    );\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtentInternal() {\n    return this.extent_;\n  }\n\n  /**\n   * Manually sets the drawn extent, using the view projection.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent\n   * @api\n   */\n  setExtent(extent) {\n    //Null extent means no bbox\n    this.extent_ = extent ? extent : null;\n    this.createOrUpdateExtentFeature_(extent);\n    this.dispatchEvent(new ExtentEvent(this.extent_));\n  }\n}\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Polygon'];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function (point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  }\n  if (fixedP1[1] == fixedP2[1]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  }\n  return null;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [\n      [extent[0], extent[1]],\n      [extent[0], extent[3]],\n    ],\n    [\n      [extent[0], extent[3]],\n      [extent[2], extent[3]],\n    ],\n    [\n      [extent[2], extent[3]],\n      [extent[2], extent[1]],\n    ],\n    [\n      [extent[2], extent[1]],\n      [extent[0], extent[1]],\n    ],\n  ];\n}\n\nexport default Extent;\n","/**\n * @module ol/interaction/Link\n */\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport MapEventType from '../MapEventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {toFixed} from '../math.js';\n\n/**\n * @param {number} number A number.\n * @return {number} A number with at most 5 decimal places.\n */\nfunction to5(number) {\n  return toFixed(number, 5);\n}\n\n/**\n * @param {string} string A string.\n * @return {number} A number representing the string.\n */\nfunction readNumber(string) {\n  return parseFloat(string);\n}\n\n/**\n * @param {number} number A number.\n * @return {string} A string representing the number.\n */\nfunction writeNumber(number) {\n  return to5(number).toString();\n}\n\n/**\n * @param {number} a A number.\n * @param {number} b A number.\n * @return {boolean} The numbers are different.\n */\nfunction differentNumber(a, b) {\n  if (isNaN(a)) {\n    return false;\n  }\n  return a !== readNumber(writeNumber(b));\n}\n\n/**\n * @param {Array<number>} a An array of two numbers.\n * @param {Array<number>} b An array of two numbers.\n * @return {boolean} The arrays are different.\n */\nfunction differentArray(a, b) {\n  return differentNumber(a[0], b[0]) || differentNumber(a[1], b[1]);\n}\n\n/** @typedef {'x'|'y'|'z'|'r'|'l'} Params */\n\n/**\n * @typedef {function(string):void} Callback\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean|import('../View.js').AnimationOptions} [animate=true] Animate view transitions.\n * @property {Array<Params>} [params=['x', 'y', 'z', 'r', 'l']] Properties to track. Default is to track\n * `x` (center x), `y` (center y), `z` (zoom), `r` (rotation) and `l` (layers).\n * @property {boolean} [replace=false] Replace the current URL without creating the new entry in browser history.\n * By default, changes in the map state result in a new entry being added to the browser history.\n * @property {string} [prefix=''] By default, the URL will be updated with search parameters x, y, z, and r.  To\n * avoid collisions with existing search parameters that your application uses, you can supply a custom prefix for\n * the ones used by this interaction (e.g. 'ol:').\n */\n\n/**\n * @classdesc\n * An interaction that synchronizes the map state with the URL.\n *\n * @api\n */\nclass Link extends Interaction {\n  /**\n   * @param {Options} [options] Link options.\n   */\n  constructor(options) {\n    super();\n\n    options = Object.assign(\n      {\n        animate: true,\n        params: ['x', 'y', 'z', 'r', 'l'],\n        replace: false,\n        prefix: '',\n      },\n      options || {},\n    );\n\n    let animationOptions;\n    if (options.animate === true) {\n      animationOptions = {duration: 250};\n    } else if (!options.animate) {\n      animationOptions = null;\n    } else {\n      animationOptions = options.animate;\n    }\n\n    /**\n     * @type {import('../View.js').AnimationOptions|null}\n     * @private\n     */\n    this.animationOptions_ = animationOptions;\n\n    /**\n     * @type {Object<Params, boolean>}\n     * @private\n     */\n    this.params_ = options.params.reduce((acc, value) => {\n      acc[value] = true;\n      return acc;\n    }, {});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.replace_ = options.replace;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.prefix_ = options.prefix;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.initial_ = true;\n\n    this.updateState_ = this.updateState_.bind(this);\n\n    /**\n     * The tracked parameter callbacks.\n     * @private\n     * @type {Object<string, Callback>}\n     */\n    this.trackedCallbacks_ = {};\n\n    /**\n     * The tracked parameter values.\n     * @private\n     * @type {Object<string, string|null>}\n     */\n    this.trackedValues_ = {};\n  }\n\n  /**\n   * @private\n   * @param {string} name A parameter name.\n   * @return {string} A name with the prefix applied.\n   */\n  getParamName_(name) {\n    if (!this.prefix_) {\n      return name;\n    }\n    return this.prefix_ + name;\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   * @return {string|null} The parameter value.\n   */\n  get_(params, name) {\n    return params.get(this.getParamName_(name));\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   * @param {string} value The param value.\n   */\n  set_(params, name, value) {\n    if (!(name in this.params_)) {\n      return;\n    }\n    params.set(this.getParamName_(name), value);\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   */\n  delete_(params, name) {\n    if (!(name in this.params_)) {\n      return;\n    }\n    params.delete(this.getParamName_(name));\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      this.unregisterListeners_(oldMap);\n    }\n    if (map) {\n      this.initial_ = true;\n      this.updateState_();\n      this.registerListeners_(map);\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   * @private\n   */\n  registerListeners_(map) {\n    this.listenerKeys_.push(\n      listen(map, MapEventType.MOVEEND, this.updateUrl_, this),\n      listen(map.getLayerGroup(), EventType.CHANGE, this.updateUrl_, this),\n      listen(map, 'change:layergroup', this.handleChangeLayerGroup_, this),\n    );\n\n    if (!this.replace_) {\n      addEventListener('popstate', this.updateState_);\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   * @private\n   */\n  unregisterListeners_(map) {\n    for (let i = 0, ii = this.listenerKeys_.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys_[i]);\n    }\n    this.listenerKeys_.length = 0;\n\n    if (!this.replace_) {\n      removeEventListener('popstate', this.updateState_);\n    }\n\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    this.delete_(params, 'x');\n    this.delete_(params, 'y');\n    this.delete_(params, 'z');\n    this.delete_(params, 'r');\n    this.delete_(params, 'l');\n    window.history.replaceState(null, '', url);\n  }\n\n  /**\n   * @private\n   */\n  handleChangeLayerGroup_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    this.unregisterListeners_(map);\n    this.registerListeners_(map);\n    this.initial_ = true;\n    this.updateUrl_();\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    for (const key in this.trackedCallbacks_) {\n      const value = params.get(key);\n      if (key in this.trackedCallbacks_ && value !== this.trackedValues_[key]) {\n        this.trackedValues_[key] = value;\n        this.trackedCallbacks_[key](value);\n      }\n    }\n\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    if (!view) {\n      return;\n    }\n\n    let updateView = false;\n\n    /**\n     * @type {import('../View.js').AnimationOptions}\n     */\n    const viewProperties = {};\n\n    const zoom = readNumber(this.get_(params, 'z'));\n    if ('z' in this.params_ && differentNumber(zoom, view.getZoom())) {\n      updateView = true;\n      viewProperties.zoom = zoom;\n    }\n\n    const rotation = readNumber(this.get_(params, 'r'));\n    if ('r' in this.params_ && differentNumber(rotation, view.getRotation())) {\n      updateView = true;\n      viewProperties.rotation = rotation;\n    }\n\n    const center = [\n      readNumber(this.get_(params, 'x')),\n      readNumber(this.get_(params, 'y')),\n    ];\n    if (\n      ('x' in this.params_ || 'y' in this.params_) &&\n      differentArray(center, view.getCenter())\n    ) {\n      updateView = true;\n      viewProperties.center = center;\n    }\n\n    if (updateView) {\n      if (!this.initial_ && this.animationOptions_) {\n        view.animate(Object.assign(viewProperties, this.animationOptions_));\n      } else {\n        if (viewProperties.center) {\n          view.setCenter(viewProperties.center);\n        }\n        if ('zoom' in viewProperties) {\n          view.setZoom(viewProperties.zoom);\n        }\n        if ('rotation' in viewProperties) {\n          view.setRotation(viewProperties.rotation);\n        }\n      }\n    }\n\n    const layers = map.getAllLayers();\n    const layersParam = this.get_(params, 'l');\n    if (\n      'l' in this.params_ &&\n      layersParam &&\n      layersParam.length === layers.length\n    ) {\n      for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const value = parseInt(layersParam[i]);\n        if (!isNaN(value)) {\n          const visible = Boolean(value);\n          const layer = layers[i];\n          if (layer.getVisible() !== visible) {\n            layer.setVisible(visible);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Register a listener for a URL search parameter.  The callback will be called with a new value\n   * when the corresponding search parameter changes due to history events (e.g. browser navigation).\n   *\n   * @param {string} key The URL search parameter.\n   * @param {Callback} callback The function to call when the search parameter changes.\n   * @return {string|null} The initial value of the search parameter (or null if absent from the URL).\n   * @api\n   */\n  track(key, callback) {\n    this.trackedCallbacks_[key] = callback;\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    const value = params.get(key);\n    this.trackedValues_[key] = value;\n    return value;\n  }\n\n  /**\n   * Update the URL with a new search parameter value.  If the value is null, it will be\n   * deleted from the search parameters.\n   *\n   * @param {string} key The URL search parameter.\n   * @param {string|null} value The updated value (or null to remove it from the URL).\n   * @api\n   */\n  update(key, value) {\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    if (value === null) {\n      params.delete(key);\n    } else {\n      params.set(key, value);\n    }\n    if (key in this.trackedValues_) {\n      this.trackedValues_[key] = value;\n    }\n    this.updateHistory_(url);\n  }\n\n  /**\n   * @private\n   */\n  updateUrl_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    if (!view) {\n      return;\n    }\n\n    const center = view.getCenter();\n    const zoom = view.getZoom();\n    const rotation = view.getRotation();\n\n    const layers = map.getAllLayers();\n    const visibilities = new Array(layers.length);\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      visibilities[i] = layers[i].getVisible() ? '1' : '0';\n    }\n\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n\n    this.set_(params, 'x', writeNumber(center[0]));\n    this.set_(params, 'y', writeNumber(center[1]));\n    this.set_(params, 'z', writeNumber(zoom));\n    this.set_(params, 'r', writeNumber(rotation));\n    this.set_(params, 'l', visibilities.join(''));\n\n    this.updateHistory_(url);\n    this.initial_ = false;\n  }\n\n  /**\n   * @private\n   * @param {URL} url The URL.\n   */\n  updateHistory_(url) {\n    if (url.href !== window.location.href) {\n      if (this.initial_ || this.replace_) {\n        window.history.replaceState(history.state, '', url);\n      } else {\n        window.history.pushState(null, '', url);\n      }\n    }\n  }\n}\n\nexport default Link;\n","/**\n * @module ol/interaction/Modify\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  altKeyOnly,\n  always,\n  primaryAction,\n  singleClick,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  buffer as bufferExtent,\n  createOrUpdateFromCoordinate as createExtent,\n} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  equals as coordinatesEqual,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {equals} from '../array.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\nconst tempExtent = [0, 0, 0, 0];\nconst tempSegment = [];\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend',\n};\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth] Depth.\n * @property {Feature} feature Feature.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} [index] Index.\n * @property {Array<Array<number>>} segment Segment.\n * @property {Array<SegmentData>} [featureSegments] FeatureSegments.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition.primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition.singleClick} with\n * {@link module:ol/events/condition.altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition.always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style used for the modification point or vertex. For linestrings and polygons, this will\n * be the affected vertex, for circles a point along the circle, and for points the actual\n * point. If not configured, the default edit style is used (see {@link module:ol/style/Style~Style}).\n * When using a style function, the point feature passed to the function will have a `features`\n * property - an array whose entries are the features that are being modified, and a `geometries`\n * property - an array whose entries are the geometries that are being modified. Both arrays are\n * in the same order. The `geometries` are only useful when modifying geometry collections, where\n * the geometry will be the particular geometry from the collection that is being modified.\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the `features` option.\n * @property {boolean|import(\"../layer/BaseVector\").default} [hitDetection] When configured, point\n * features will be considered for modification based on their visual appearance, instead of being within\n * the `pixelTolerance` from the pointer location. When a {@link module:ol/layer/BaseVector~BaseVectorLayer} is\n * provided, only the rendered representation of the features on that layer will be considered.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the `source` option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {boolean} [snapToPointer=!hitDetection] The vertex, point or segment being modified snaps to the\n * pointer coordinate when clicked within the `pixelTolerance`.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport class ModifyEvent extends Event {\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {Collection<Feature>} features\n   * The features modified.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent\n   * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, features, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'modifyend'|'modifystart', ModifyEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'modifyend'|'modifystart', Return>} ModifyOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * Cartesian distance from the pointer is used to determine the features that\n * will be modified. This means that geometries will only be considered for\n * modification when they are within the configured `pixelTolerance`. For point\n * geometries, the `hitDetection` option can be used to match their visual\n * appearance.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nclass Modify extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ModifyOnSignature<void>}\n     */\n    this.un;\n\n    /** @private */\n    this.boundHandleFeatureChange_ = this.handleFeatureChange_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition\n      ? options.deleteCondition\n      : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition\n      ? options.insertVertexCondition\n      : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.featuresBeingModified_ = null;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n    };\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    /**\n     * @type {boolean|import(\"../layer/BaseVector\").default}\n     */\n    this.hitDetection_ = null;\n\n    /** @type {Collection<Feature>} */\n    let features;\n    if (options.features) {\n      features = options.features;\n    } else if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      this.source_.addEventListener(\n        VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_.bind(this),\n      );\n      this.source_.addEventListener(\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_.bind(this),\n      );\n    }\n    if (!features) {\n      throw new Error(\n        'The modify interaction requires features, a source or a layer',\n      );\n    }\n    if (options.hitDetection) {\n      this.hitDetection_ = options.hitDetection;\n    }\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    this.features_.addEventListener(\n      CollectionEventType.ADD,\n      this.handleFeatureAdd_.bind(this),\n    );\n    this.features_.addEventListener(\n      CollectionEventType.REMOVE,\n      this.handleFeatureRemove_.bind(this),\n    );\n\n    /**\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n    /**\n     * Delta (x, y in map units) between matched rtree vertex and pointer vertex.\n     * @type {Array<number>}\n     */\n    this.delta_ = [0, 0];\n\n    /**\n     * @private\n     */\n    this.snapToPointer_ =\n      options.snapToPointer === undefined\n        ? !this.hitDetection_\n        : options.snapToPointer;\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  addFeature_(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (writer) {\n        writer(feature, geometry);\n      }\n    }\n    const map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @param {Array<Array<SegmentData>>} segments The segments subject to modification.\n   * @private\n   */\n  willModifyFeatures_(evt, segments) {\n    if (!this.featuresBeingModified_) {\n      this.featuresBeingModified_ = new Collection();\n      const features = this.featuresBeingModified_.getArray();\n      for (let i = 0, ii = segments.length; i < ii; ++i) {\n        const segment = segments[i];\n        for (let s = 0, ss = segment.length; s < ss; ++s) {\n          const feature = segment[s].feature;\n          if (feature && !features.includes(feature)) {\n            this.featuresBeingModified_.push(feature);\n          }\n        }\n      }\n      if (this.featuresBeingModified_.getLength() === 0) {\n        this.featuresBeingModified_ = null;\n      } else {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYSTART,\n            this.featuresBeingModified_,\n            evt,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeature_(feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of candidate features is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    feature.removeEventListener(\n      EventType.CHANGE,\n      this.boundHandleFeatureChange_,\n    );\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureSegmentData_(feature) {\n    const rBush = this.rBush_;\n    /** @type {Array<SegmentData>} */\n    const nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      },\n    );\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      const nodeToRemove = nodesToRemove[i];\n      for (let j = this.dragSegments_.length - 1; j >= 0; --j) {\n        if (this.dragSegments_[j][0] === nodeToRemove) {\n          this.dragSegments_.splice(j, 1);\n        }\n      }\n      rBush.remove(nodeToRemove);\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.overlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders the modification point or vertex to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceAdd_(event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceRemove_(event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    this.addFeature_(evt.element);\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    if (!this.changingFeature_) {\n      const feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    this.removeFeature_(evt.element);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n\n    /** @type {SegmentData} */\n    const segmentData = {\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates],\n    };\n\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates],\n      };\n\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment,\n      };\n\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n\n          /** @type {SegmentData} */\n          const segmentData = {\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment,\n          };\n\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const coordinates = geometry.getCenter();\n\n    /** @type {SegmentData} */\n    const centerSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    /** @type {SegmentData} */\n    const circumferenceSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = featureSegments;\n    circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n    let circleGeometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection && this.getMap()) {\n      const projection = this.getMap().getView().getProjection();\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n      circleGeometry = fromCircle(\n        /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry),\n      ).transform(projection, userProjection);\n    }\n    this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const geometry = geometries[i];\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      writer(feature, geometry);\n    }\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {Array<Feature>} features The features being modified.\n   * @param {Array<import(\"../geom/SimpleGeometry.js\").default>} geometries The geometries being modified.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  createOrUpdateVertexFeature_(coordinates, features, geometries) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(coordinates);\n    }\n    vertexFeature.set('features', features);\n    vertexFeature.set('geometries', geometries);\n    return vertexFeature;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may modify the geometry.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    let handled;\n    if (\n      !mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (\n        mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_\n      ) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return super.handleEvent(mapBrowserEvent) && !handled;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   */\n  handleDragEvent(evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt, this.dragSegments_);\n\n    const vertex = [\n      evt.coordinate[0] + this.delta_[0],\n      evt.coordinate[1] + this.delta_[1],\n    ];\n    const features = [];\n    const geometries = [];\n    for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      const dragSegment = this.dragSegments_[i];\n      const segmentData = dragSegment[0];\n      const feature = segmentData.feature;\n      if (!features.includes(feature)) {\n        features.push(feature);\n      }\n      const geometry = segmentData.geometry;\n      if (!geometries.includes(geometry)) {\n        geometries.push(geometry);\n      }\n      const depth = segmentData.depth;\n      let coordinates;\n      const segment = segmentData.segment;\n      const index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case 'Point':\n          coordinates = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'MultiPoint':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'LineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiLineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Polygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiPolygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Circle':\n          segment[0] = vertex;\n          segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else {\n            // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            const projection = evt.map.getView().getProjection();\n            let radius = coordinateDistance(\n              fromUserCoordinate(geometry.getCenter(), projection),\n              fromUserCoordinate(vertex, projection),\n            );\n            const userProjection = getUserProjection();\n            if (userProjection) {\n              const circleGeometry = geometry\n                .clone()\n                .transform(userProjection, projection);\n              circleGeometry.setRadius(radius);\n              radius = circleGeometry\n                .transform(projection, userProjection)\n                .getRadius();\n            }\n            geometry.setRadius(radius);\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex, features, geometries);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    const pixelCoordinate = evt.coordinate;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, pixelCoordinate);\n    this.dragSegments_.length = 0;\n    this.featuresBeingModified_ = null;\n    const vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      const projection = evt.map.getView().getProjection();\n      const insertVertices = [];\n      const vertex = vertexFeature.getGeometry().getCoordinates();\n      const vertexExtent = boundingExtent([vertex]);\n      const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      const componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        const segmentDataMatch = segmentDataMatches[i];\n        const segment = segmentDataMatch.segment;\n        let uid = getUid(segmentDataMatch.geometry);\n        const depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n\n        if (\n          segmentDataMatch.geometry.getType() === 'Circle' &&\n          segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          const closestVertex = closestOnSegmentData(\n            pixelCoordinate,\n            segmentDataMatch,\n            projection,\n          );\n          if (\n            coordinatesEqual(closestVertex, vertex) &&\n            !componentSegments[uid][0]\n          ) {\n            this.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]\n        ) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]\n        ) {\n          if (\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0\n          ) {\n            let coordinates = segmentDataMatch.geometry.getCoordinates();\n            switch (segmentDataMatch.geometry.getType()) {\n              // prevent dragging closed linestrings by the connecting node\n              case 'LineString':\n              case 'MultiLineString':\n                continue;\n              // if dragging the first vertex of a polygon, ensure the other segment\n              // belongs to the closing vertex of the linear ring\n              case 'MultiPolygon':\n                coordinates = coordinates[depth[1]];\n              /* falls through */\n              case 'Polygon':\n                if (\n                  segmentDataMatch.index !==\n                  coordinates[depth[0]].length - 2\n                ) {\n                  continue;\n                }\n                break;\n              default:\n              // pass\n            }\n          }\n\n          this.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          getUid(segment) in this.vertexSegments_ &&\n          !componentSegments[uid][0] &&\n          !componentSegments[uid][1] &&\n          this.insertVertexCondition_(evt)\n        ) {\n          insertVertices.push(segmentDataMatch);\n        }\n      }\n\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt, [insertVertices]);\n      }\n\n      for (let j = insertVertices.length - 1; j >= 0; --j) {\n        this.insertVertex_(insertVertices[j], vertex);\n      }\n    }\n    return !!this.vertexFeature_;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n      const segmentData = this.dragSegments_[i][0];\n      const geometry = segmentData.geometry;\n      if (geometry.getType() === 'Circle') {\n        // Update a circle object in the R* bush:\n        const coordinates = geometry.getCenter();\n        const centerSegmentData = segmentData.featureSegments[0];\n        const circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = coordinates;\n        centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = coordinates;\n        circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createExtent(coordinates), centerSegmentData);\n        let circleGeometry = geometry;\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          const projection = evt.map.getView().getProjection();\n          circleGeometry = circleGeometry\n            .clone()\n            .transform(userProjection, projection);\n          circleGeometry = fromCircle(circleGeometry).transform(\n            projection,\n            userProjection,\n          );\n        }\n        this.rBush_.update(\n          circleGeometry.getExtent(),\n          circumferenceSegmentData,\n        );\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.featuresBeingModified_) {\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYEND,\n          this.featuresBeingModified_,\n          evt,\n        ),\n      );\n      this.featuresBeingModified_ = null;\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  handlePointerMove_(evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, evt.coordinate);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../Map.js\").default} map Map.\n   * @param {import(\"../coordinate.js\").Coordinate} [coordinate] The pixel Coordinate.\n   * @private\n   */\n  handlePointerAtPixel_(pixel, map, coordinate) {\n    const pixelCoordinate = coordinate || map.getCoordinateFromPixel(pixel);\n    const projection = map.getView().getProjection();\n    const sortByDistance = function (a, b) {\n      return (\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection)\n      );\n    };\n\n    /** @type {Array<SegmentData>|undefined} */\n    let nodes;\n    /** @type {Point|undefined} */\n    let hitPointGeometry;\n    if (this.hitDetection_) {\n      const layerFilter =\n        typeof this.hitDetection_ === 'object'\n          ? (layer) => layer === this.hitDetection_\n          : undefined;\n      map.forEachFeatureAtPixel(\n        pixel,\n        (feature, layer, geometry) => {\n          if (geometry && geometry.getType() === 'Point') {\n            geometry = new Point(\n              toUserCoordinate(geometry.getCoordinates(), projection),\n            );\n          }\n          const geom = geometry || feature.getGeometry();\n          if (\n            feature instanceof Feature &&\n            this.features_.getArray().includes(feature)\n          ) {\n            hitPointGeometry = /** @type {Point} */ (geom);\n            const coordinate = /** @type {Point} */ (feature.getGeometry())\n              .getFlatCoordinates()\n              .slice(0, 2);\n            nodes = [\n              {\n                feature,\n                geometry: hitPointGeometry,\n                segment: [coordinate, coordinate],\n              },\n            ];\n          }\n          return true;\n        },\n        {layerFilter},\n      );\n    }\n    if (!nodes) {\n      const viewExtent = fromUserExtent(\n        createExtent(pixelCoordinate, tempExtent),\n        projection,\n      );\n      const buffer = map.getView().getResolution() * this.pixelTolerance_;\n      const box = toUserExtent(\n        bufferExtent(viewExtent, buffer, tempExtent),\n        projection,\n      );\n      nodes = this.rBush_.getInExtent(box);\n    }\n\n    if (nodes && nodes.length > 0) {\n      const node = nodes.sort(sortByDistance)[0];\n      const closestSegment = node.segment;\n      let vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n      let dist = coordinateDistance(pixel, vertexPixel);\n      if (hitPointGeometry || dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        const vertexSegments = {};\n        vertexSegments[getUid(closestSegment)] = true;\n\n        if (!this.snapToPointer_) {\n          this.delta_[0] = vertex[0] - pixelCoordinate[0];\n          this.delta_[1] = vertex[1] - pixelCoordinate[1];\n        }\n        if (\n          node.geometry.getType() === 'Circle' &&\n          node.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry],\n          );\n        } else {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex =\n              squaredDist1 > squaredDist2\n                ? closestSegment[1]\n                : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry],\n          );\n          const geometries = {};\n          geometries[getUid(node.geometry)] = true;\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\n            const segment = nodes[i].segment;\n            if (\n              (coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1])) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0]))\n            ) {\n              const geometryUid = getUid(nodes[i].geometry);\n              if (!(geometryUid in geometries)) {\n                geometries[geometryUid] = true;\n                vertexSegments[getUid(segment)] = true;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  }\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  insertVertex_(segmentData, vertex) {\n    const segment = segmentData.segment;\n    const feature = segmentData.feature;\n    const geometry = segmentData.geometry;\n    const depth = segmentData.depth;\n    const index = segmentData.index;\n    let coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case 'MultiLineString':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'Polygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'MultiPolygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'LineString':\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    const rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n\n    /** @type {SegmentData} */\n    const newSegmentData = {\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    /** @type {SegmentData} */\n    const newSegmentData2 = {\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  }\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  removePoint() {\n    if (\n      this.lastPointerEvent_ &&\n      this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG\n    ) {\n      const evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt, this.dragSegments_);\n      const removed = this.removeVertex_();\n      if (this.featuresBeingModified_) {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYEND,\n            this.featuresBeingModified_,\n            evt,\n          ),\n        );\n      }\n\n      this.featuresBeingModified_ = null;\n      return removed;\n    }\n    return false;\n  }\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  removeVertex_() {\n    const dragSegments = this.dragSegments_;\n    const segmentsByFeature = {};\n    let deleted = false;\n    let component, coordinates, dragSegment, geometry, i, index, left;\n    let newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case 'MultiLineString':\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'LineString':\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'MultiPolygon':\n          component = component[segmentData.depth[1]];\n        /* falls through */\n        case 'Polygon':\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        const segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          /** @type {SegmentData} */\n          const newSegmentData = {\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments,\n          };\n\n          this.rBush_.insert(\n            boundingExtent(newSegmentData.segment),\n            newSegmentData,\n          );\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n    }\n    return deleted;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  setGeometryCoordinates_(geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  updateSegmentIndices_(geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(\n      geometry.getExtent(),\n      function (segmentDataMatch) {\n        if (\n          segmentDataMatch.geometry === geometry &&\n          (depth === undefined ||\n            segmentDataMatch.depth === undefined ||\n            equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index\n        ) {\n          segmentDataMatch.index += delta;\n        }\n      },\n    );\n  }\n}\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction projectedDistanceToSegmentDataSquared(\n  pointCoordinates,\n  segmentData,\n  projection,\n) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === 'Circle') {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        circleGeometry = circleGeometry\n          .clone()\n          .transform(userProjection, projection);\n      }\n      const distanceToCenterSquared = squaredCoordinateDistance(\n        circleGeometry.getCenter(),\n        fromUserCoordinate(pointCoordinates, projection),\n      );\n      const distanceToCircumference =\n        Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return squaredDistanceToSegment(coordinate, tempSegment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n  const geometry = segmentData.geometry;\n\n  if (\n    geometry.getType() === 'Circle' &&\n    segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX\n  ) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n    }\n    return toUserCoordinate(\n      circleGeometry.getClosestPoint(\n        fromUserCoordinate(pointCoordinates, projection),\n      ),\n      projection,\n    );\n  }\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return toUserCoordinate(\n    closestOnSegment(coordinate, tempSegment),\n    projection,\n  );\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n\nexport default Modify;\n","/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport Interaction from './Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {TRUE} from '../functions.js';\nimport {clear} from '../obj.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {never, shiftKeyOnly, singleClick} from '../events/condition.js';\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").default, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style/Style~Style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {Collection<Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature~Feature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nexport class SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nconst originalFeatureStyles = {};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'select', Return>} SelectOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * @fires SelectEvent\n * @api\n */\nclass Select extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SelectOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     */\n    this.boundAddFeature_ = this.addFeature_.bind(this);\n\n    /**\n     * @private\n     */\n    this.boundRemoveFeature_ = this.removeFeature_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition\n      ? options.removeCondition\n      : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition\n      ? options.toggleCondition\n      : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n    this.style_ =\n      options.style !== undefined ? options.style : getDefaultStyleFunction();\n\n    /**\n     * @private\n     * @type {Collection<Feature>}\n     */\n    this.features_ = options.features || new Collection();\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  addFeatureLayerAssociation_(feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  }\n\n  /**\n   * Get the selected features.\n   * @return {Collection<Feature>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~VectorLayer vector layer} of\n   * a selected feature.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n  getLayer(feature) {\n    return /** @type {import('../layer/Vector.js').default} */ (\n      this.featureLayerAssociation_[getUid(feature)]\n    );\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n    super.setMap(map);\n    if (map) {\n      this.features_.addEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_,\n      );\n      this.features_.addEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_,\n      );\n\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_,\n      );\n      this.features_.removeEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_,\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n    if (!this.getLayer(feature)) {\n      const layer = /** @type {VectorLayer} */ (\n        this.getMap()\n          .getAllLayers()\n          .find(function (layer) {\n            if (\n              layer instanceof VectorLayer &&\n              layer.getSource() &&\n              layer.getSource().hasFeature(feature)\n            ) {\n              return layer;\n            }\n          })\n      );\n      if (layer) {\n        this.addFeatureLayerAssociation_(feature, layer);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    if (this.style_) {\n      this.restorePreviousStyle_(evt.element);\n    }\n  }\n\n  /**\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  applySelectedStyle_(feature) {\n    const key = getUid(feature);\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n    feature.setStyle(this.style_);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  restorePreviousStyle_(feature) {\n    const interactions = this.getMap().getInteractions().getArray();\n    for (let i = interactions.length - 1; i >= 0; --i) {\n      const interaction = interactions[i];\n      if (\n        interaction !== this &&\n        interaction instanceof Select &&\n        interaction.getStyle() &&\n        interaction.getFeatures().getArray().lastIndexOf(feature) !== -1\n      ) {\n        feature.setStyle(interaction.getStyle());\n        return;\n      }\n    }\n\n    const key = getUid(feature);\n    feature.setStyle(originalFeatureStyles[key]);\n    delete originalFeatureStyles[key];\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureLayerAssociation_(feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may change the\n   * selected state of features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const add = this.addCondition_(mapBrowserEvent);\n    const remove = this.removeCondition_(mapBrowserEvent);\n    const toggle = this.toggleCondition_(mapBrowserEvent);\n    const set = !add && !remove && !toggle;\n    const map = mapBrowserEvent.map;\n    const features = this.getFeatures();\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const deselected = [];\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const selected = [];\n\n    if (set) {\n      // Replace the currently selected feature(s) with the feature(s) at the\n      // pixel, or clear the selected feature(s) if there is no feature at\n      // the pixel.\n      clear(this.featureLayerAssociation_);\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        (feature, layer) => {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          this.addFeatureLayerAssociation_(feature, layer);\n          selected.push(feature);\n          return !this.multi_;\n        },\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        },\n      );\n      for (let i = features.getLength() - 1; i >= 0; --i) {\n        const feature = features.item(i);\n        const index = selected.indexOf(feature);\n        if (index > -1) {\n          // feature is already selected\n          selected.splice(index, 1);\n        } else {\n          features.remove(feature);\n          deselected.push(feature);\n        }\n      }\n      if (selected.length !== 0) {\n        features.extend(selected);\n      }\n    } else {\n      // Modify the currently selected feature(s).\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        (feature, layer) => {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          if ((add || toggle) && !features.getArray().includes(feature)) {\n            this.addFeatureLayerAssociation_(feature, layer);\n            selected.push(feature);\n          } else if (\n            (remove || toggle) &&\n            features.getArray().includes(feature)\n          ) {\n            deselected.push(feature);\n            this.removeFeatureLayerAssociation_(feature);\n          }\n          return !this.multi_;\n        },\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        },\n      );\n      for (let j = deselected.length - 1; j >= 0; --j) {\n        features.remove(deselected[j]);\n      }\n      features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n      this.dispatchEvent(\n        new SelectEvent(\n          SelectEventType.SELECT,\n          selected,\n          deselected,\n          mapBrowserEvent,\n        ),\n      );\n    }\n    return true;\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles['Polygon'], styles['LineString']);\n  extend(styles['GeometryCollection'], styles['LineString']);\n\n  return function (feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\nexport default Select;\n","/**\n * @module ol/events/SnapEvent\n */\nimport Event from './Event.js';\n\n/**\n * @enum {string}\n */\nexport const SnapEventType = {\n  /**\n   * Triggered upon snapping to vertex or edge\n   * @event SnapEvent#snap\n   * @api\n   */\n  SNAP: 'snap',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Snap~Snap} instances are instances of this\n */\nexport class SnapEvent extends Event {\n  /**\n   * @param {SnapEventType} type Type.\n   * @param {Object} options Options.\n   * @param {import(\"../coordinate.js\").Coordinate} options.vertex The snapped vertex.\n   * @param {import(\"../coordinate.js\").Coordinate} options.vertexPixel The pixel of the snapped vertex.\n   * @param {import(\"../Feature.js\").default} options.feature The feature being snapped.\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|null} options.segment Segment, or `null` if snapped to a vertex.\n   */\n  constructor(type, options) {\n    super(type);\n    /**\n     * The Map coordinate of the snapped point.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.vertex = options.vertex;\n    /**\n     * The Map pixel of the snapped point.\n     * @type {Array<number>&Array<number>}\n     * @api\n     */\n    this.vertexPixel = options.vertexPixel;\n    /**\n     * The feature closest to the snapped point.\n     * @type {import(\"../Feature.js\").default<import(\"../geom/Geometry.js\").default>}\n     * @api\n     */\n    this.feature = options.feature;\n    /**\n     * The segment closest to the snapped point, if snapped to a segment.\n     * @type {Array<import(\"../coordinate.js\").Coordinate>|null}\n     * @api\n     */\n    this.segment = options.segment;\n  }\n}\n","/**\n * @module ol/interaction/Snap\n */\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {SnapEvent, SnapEventType} from '../events/SnapEvent.js';\nimport {boundingExtent, buffer, createEmpty} from '../extent.js';\nimport {\n  closestOnCircle,\n  closestOnSegment,\n  squaredDistance,\n} from '../coordinate.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Result\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex Vertex.\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel VertexPixel.\n * @property {import(\"../Feature.js\").default|null} feature Feature.\n * @property {Array<import(\"../coordinate.js\").Coordinate>|null} segment Segment, or `null` if snapped to a vertex.\n */\n\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature Feature.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment Segment.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n * @return {import(\"../Feature.js\").default|null} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n  if (\n    /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature\n  ) {\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt)\n      .feature;\n  }\n  if (\n    /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element\n  ) {\n    return /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element;\n  }\n  return null;\n}\n\nconst tempSegment = [];\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'snap', SnapEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'snap', Return>} SnapOnSignature\n */\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector~VectorSource} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap.js';\n *\n *     const snap = new Snap({\n *       source: source\n *     });\n *\n *     map.addInteraction(snap);\n *\n * @fires SnapEvent\n * @api\n */\nclass Snap extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.handleDownEvent) {\n      pointerOptions.handleDownEvent = TRUE;\n    }\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {SnapOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SnapOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SnapOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {import(\"../source/Vector.js\").default|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<string, import(\"../extent.js\").Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Segment RTree for each layer\n     * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @const\n     * @private\n     * @type {Object<string, function(Array<Array<import('../coordinate.js').Coordinate>>, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.GEOMETRY_SEGMENTERS_ = {\n      'Point': this.segmentPointGeometry_.bind(this),\n      'LineString': this.segmentLineStringGeometry_.bind(this),\n      'LinearRing': this.segmentLineStringGeometry_.bind(this),\n      'Polygon': this.segmentPolygonGeometry_.bind(this),\n      'MultiPoint': this.segmentMultiPointGeometry_.bind(this),\n      'MultiLineString': this.segmentMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.segmentMultiPolygonGeometry_.bind(this),\n      'GeometryCollection': this.segmentGeometryCollectionGeometry_.bind(this),\n      'Circle': this.segmentCircleGeometry_.bind(this),\n    };\n  }\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {boolean} [register] Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  addFeature(feature, register) {\n    register = register !== undefined ? register : true;\n    const feature_uid = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const segmenter = this.GEOMETRY_SEGMENTERS_[geometry.getType()];\n      if (segmenter) {\n        this.indexedFeaturesExtents_[feature_uid] =\n          geometry.getExtent(createEmpty());\n        const segments =\n          /** @type {Array<Array<import('../coordinate.js').Coordinate>>} */ ([]);\n        segmenter(segments, geometry);\n        if (segments.length === 1) {\n          this.rBush_.insert(boundingExtent(segments[0]), {\n            feature: feature,\n            segment: segments[0],\n          });\n        } else if (segments.length > 1) {\n          const extents = segments.map((s) => boundingExtent(s));\n          const segmentsData = segments.map((segment) => ({\n            feature: feature,\n            segment: segment,\n          }));\n          this.rBush_.load(extents, segmentsData);\n        }\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_,\n        this,\n      );\n    }\n  }\n\n  /**\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  getFeatures_() {\n    /** @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} */\n    let features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return features;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(evt) {\n    const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n    if (result) {\n      evt.coordinate = result.vertex.slice(0, 2);\n      evt.pixel = result.vertexPixel;\n      this.dispatchEvent(\n        new SnapEvent(SnapEventType.SNAP, {\n          vertex: evt.coordinate,\n          vertexPixel: evt.pixel,\n          feature: result.feature,\n          segment: result.segment,\n        }),\n      );\n    }\n    return super.handleEvent(evt);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    if (feature) {\n      this.addFeature(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    if (feature) {\n      this.removeFeature(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    const feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      const uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    const featuresToUpdate = Object.values(this.pendingFeatures_);\n    if (featuresToUpdate.length) {\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\n      this.pendingFeatures_ = {};\n    }\n    return false;\n  }\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {boolean} [unlisten] Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  removeFeature(feature, unlisten) {\n    const unregister = unlisten !== undefined ? unlisten : true;\n    const feature_uid = getUid(feature);\n    const extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      const rBush = this.rBush_;\n      const nodesToRemove = [];\n      rBush.forEachInExtent(extent, function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    const keys = this.featuresListenerKeys_;\n    const features = /** @type {Array<import(\"../Feature.js\").default>} */ (\n      this.getFeatures_()\n    );\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      this.rBush_.clear();\n      Object.values(this.featureChangeListenerKeys_).forEach(unlistenByKey);\n      this.featureChangeListenerKeys_ = {};\n    }\n    super.setMap(map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(\n            this.features_,\n            CollectionEventType.ADD,\n            this.handleFeatureAdd_,\n            this,\n          ),\n          listen(\n            this.features_,\n            CollectionEventType.REMOVE,\n            this.handleFeatureRemove_,\n            this,\n          ),\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(\n            this.source_,\n            VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_,\n            this,\n          ),\n          listen(\n            this.source_,\n            VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_,\n            this,\n          ),\n        );\n      }\n      features.forEach((feature) => this.addFeature(feature));\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n   * @param {import(\"../Map.js\").default} map Map.\n   * @return {Result|null} Snap result\n   */\n  snapTo(pixel, pixelCoordinate, map) {\n    const projection = map.getView().getProjection();\n    const projectedCoordinate = fromUserCoordinate(pixelCoordinate, projection);\n\n    const box = toUserExtent(\n      buffer(\n        boundingExtent([projectedCoordinate]),\n        map.getView().getResolution() * this.pixelTolerance_,\n      ),\n      projection,\n    );\n\n    const segments = this.rBush_.getInExtent(box);\n    const segmentsLength = segments.length;\n    if (segmentsLength === 0) {\n      return null;\n    }\n\n    let closestVertex;\n    let minSquaredDistance = Infinity;\n    let closestFeature;\n    let closestSegment = null;\n\n    const squaredPixelTolerance = this.pixelTolerance_ * this.pixelTolerance_;\n    const getResult = () => {\n      if (closestVertex) {\n        const vertexPixel = map.getPixelFromCoordinate(closestVertex);\n        const squaredPixelDistance = squaredDistance(pixel, vertexPixel);\n        if (squaredPixelDistance <= squaredPixelTolerance) {\n          return {\n            vertex: closestVertex,\n            vertexPixel: [\n              Math.round(vertexPixel[0]),\n              Math.round(vertexPixel[1]),\n            ],\n            feature: closestFeature,\n            segment: closestSegment,\n          };\n        }\n      }\n      return null;\n    };\n\n    if (this.vertex_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() !== 'Circle') {\n          segmentData.segment.forEach((vertex) => {\n            const tempVertexCoord = fromUserCoordinate(vertex, projection);\n            const delta = squaredDistance(projectedCoordinate, tempVertexCoord);\n            if (delta < minSquaredDistance) {\n              closestVertex = vertex;\n              minSquaredDistance = delta;\n              closestFeature = segmentData.feature;\n            }\n          });\n        }\n      }\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    if (this.edge_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        let vertex = null;\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() === 'Circle') {\n          let circleGeometry = segmentData.feature.getGeometry();\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circleGeometry = circleGeometry\n              .clone()\n              .transform(userProjection, projection);\n          }\n          vertex = closestOnCircle(\n            projectedCoordinate,\n            /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry),\n          );\n        } else {\n          const [segmentStart, segmentEnd] = segmentData.segment;\n          // points have only one coordinate\n          if (segmentEnd) {\n            tempSegment[0] = fromUserCoordinate(segmentStart, projection);\n            tempSegment[1] = fromUserCoordinate(segmentEnd, projection);\n            vertex = closestOnSegment(projectedCoordinate, tempSegment);\n          }\n        }\n        if (vertex) {\n          const delta = squaredDistance(projectedCoordinate, vertex);\n          if (delta < minSquaredDistance) {\n            closestVertex = toUserCoordinate(vertex, projection);\n            closestSegment =\n              segmentData.feature.getGeometry().getType() === 'Circle'\n                ? null\n                : segmentData.segment;\n            minSquaredDistance = delta;\n            closestFeature = segmentData.feature;\n          }\n        }\n      }\n\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  updateFeature_(feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentCircleGeometry_(segments, geometry) {\n    const projection = this.getMap().getView().getProjection();\n    let circleGeometry = geometry;\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n    }\n    const polygon = fromCircle(circleGeometry);\n    if (userProjection) {\n      polygon.transform(projection, userProjection);\n    }\n    const coordinates = polygon.getCoordinates()[0];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segments.push(coordinates.slice(i, i + 2));\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentGeometryCollectionGeometry_(segments, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const segmenter = this.GEOMETRY_SEGMENTERS_[geometries[i].getType()];\n      if (segmenter) {\n        segmenter(segments, geometries[i]);\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentLineStringGeometry_(segments, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segments.push(coordinates.slice(i, i + 2));\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiLineStringGeometry_(segments, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segments.push(coordinates.slice(i, i + 2));\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiPointGeometry_(segments, geometry) {\n    geometry.getCoordinates().forEach((point) => {\n      segments.push([point]);\n    });\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiPolygonGeometry_(segments, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          segments.push(coordinates.slice(i, i + 2));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentPointGeometry_(segments, geometry) {\n    segments.push([geometry.getCoordinates()]);\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentPolygonGeometry_(segments, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segments.push(coordinates.slice(i, i + 2));\n      }\n    }\n  }\n}\n\nexport default Snap;\n","/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport InteractionProperty from './Property.js';\nimport PointerInteraction from './Pointer.js';\nimport {TRUE} from '../functions.js';\nimport {always} from '../events/condition.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\n\n/**\n * @enum {string}\n */\nconst TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @typedef {function(Feature, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {Collection<Feature>} [features] Features contained in this collection will be able to be translated together.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * Not used if `features` is provided.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature~Feature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * translated or `false` otherwise. Not used if `features` is provided.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nexport class TranslateEvent extends Event {\n  /**\n   * @param {TranslateEventType} type Type.\n   * @param {Collection<Feature>} features The features translated.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} startCoordinate The original coordinates before.translation started\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   */\n  constructor(type, features, coordinate, startCoordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being translated.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * The coordinate of the start position before translation started.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.startCoordinate = startCoordinate;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'translateend'|'translatestart'|'translating', TranslateEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'translateend'|'translatestart'|'translating', Return>} TranslateOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n * If you want to translate multiple features in a single action (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.\n *\n * @fires TranslateEvent\n * @api\n */\nclass Translate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {TranslateOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TranslateOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TranslateOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * The last position we translated to.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = null;\n\n    /**\n     * The start position before translation started.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.startCoordinate_ = null;\n\n    /**\n     * @type {Collection<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features !== undefined ? options.features : null;\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers && !this.features_) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter && !this.features_ ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @type {Feature}\n     * @private\n     */\n    this.lastFeature_ = null;\n\n    this.addChangeListener(\n      InteractionProperty.ACTIVE,\n      this.handleActiveChanged_,\n    );\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    if (!event.originalEvent || !this.condition_(event)) {\n      return false;\n    }\n    this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n    if (!this.lastCoordinate_ && this.lastFeature_) {\n      this.startCoordinate_ = event.coordinate;\n      this.lastCoordinate_ = event.coordinate;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATESTART,\n          features,\n          event.coordinate,\n          this.startCoordinate_,\n          event,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    if (this.lastCoordinate_) {\n      this.lastCoordinate_ = null;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATEEND,\n          features,\n          event.coordinate,\n          this.startCoordinate_,\n          event,\n        ),\n      );\n      // cleanup\n      this.startCoordinate_ = null;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  handleDragEvent(event) {\n    if (this.lastCoordinate_) {\n      const newCoordinate = event.coordinate;\n      const projection = event.map.getView().getProjection();\n\n      const newViewCoordinate = fromUserCoordinate(newCoordinate, projection);\n      const lastViewCoordinate = fromUserCoordinate(\n        this.lastCoordinate_,\n        projection,\n      );\n      const deltaX = newViewCoordinate[0] - lastViewCoordinate[0];\n      const deltaY = newViewCoordinate[1] - lastViewCoordinate[1];\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n      const userProjection = getUserProjection();\n\n      features.forEach(function (feature) {\n        const geom = feature.getGeometry();\n        if (userProjection) {\n          geom.transform(userProjection, projection);\n          geom.translate(deltaX, deltaY);\n          geom.transform(projection, userProjection);\n        } else {\n          geom.translate(deltaX, deltaY);\n        }\n        feature.setGeometry(geom);\n      });\n\n      this.lastCoordinate_ = newCoordinate;\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATING,\n          features,\n          newCoordinate,\n          this.startCoordinate_,\n          event,\n        ),\n      );\n    }\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  handleMoveEvent(event) {\n    const elem = event.map.getViewport();\n\n    // Change the cursor to grab/grabbing if hovering any of the features managed\n    // by the interaction\n    if (this.featuresAtPixel_(event.pixel, event.map)) {\n      elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n      elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n    } else {\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {import(\"../Map.js\").default} map Map to test the intersection on.\n   * @return {Feature} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  featuresAtPixel_(pixel, map) {\n    return map.forEachFeatureAtPixel(\n      pixel,\n      (feature, layer) => {\n        if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n          return undefined;\n        }\n        if (this.features_ && !this.features_.getArray().includes(feature)) {\n          return undefined;\n        }\n        return feature;\n      },\n      {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_,\n      },\n    );\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    this.updateState_(oldMap);\n  }\n\n  /**\n   * @private\n   */\n  handleActiveChanged_() {\n    this.updateState_(null);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} oldMap Old map.\n   * @private\n   */\n  updateState_(oldMap) {\n    let map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        const elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  }\n}\n\nexport default Translate;\n","/**\n * @module ol/geom/flat/flip\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destOffset] Destination offset.\n * @return {Array<number>} Flat coordinates.\n */\nexport function flipXY(flatCoordinates, offset, end, stride, dest, destOffset) {\n  if (dest !== undefined) {\n    dest = dest;\n    destOffset = destOffset !== undefined ? destOffset : 0;\n  } else {\n    dest = [];\n    destOffset = 0;\n  }\n  let j = offset;\n  while (j < end) {\n    const x = flatCoordinates[j++];\n    dest[destOffset++] = flatCoordinates[j++];\n    dest[destOffset++] = x;\n    for (let k = 2; k < stride; ++k) {\n      dest[destOffset++] = flatCoordinates[j++];\n    }\n  }\n  dest.length = destOffset;\n  return dest;\n}\n","/**\n * @module ol/format/Feature\n */\nimport Feature from '../Feature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  GeometryCollection,\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n  transformExtent,\n} from '../proj.js';\nimport {\n  linearRingsAreOriented,\n  linearRingssAreOriented,\n  orientLinearRings,\n  orientLinearRingsArray,\n} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @typedef {Object} SimpleGeometryObject\n * @property {import('../geom/Geometry.js').Type} type Type.\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>|Array<Array<number>>} [ends] Ends or endss.\n * @property {import('../geom/Geometry.js').GeometryLayout} [layout] Layout.\n */\n\n/**\n * @typedef {Array<GeometryObject>} GeometryCollectionObject\n */\n\n/**\n * @typedef {SimpleGeometryObject|GeometryCollectionObject} GeometryObject\n */\n\n/**\n * @typedef {Object} FeatureObject\n * @property {string|number} [id] Id.\n * @property {GeometryObject} [geometry] Geometry.\n * @property {Object<string, *>} [properties] Properties.\n */\n\n/***\n * @template {Feature|RenderFeature} T\n * @typedef {T extends RenderFeature ? typeof RenderFeature : typeof Feature} FeatureToFeatureClass\n */\n\n/***\n * @template {import(\"../Feature.js\").FeatureClass} T\n * @typedef {T[keyof T] extends RenderFeature ? RenderFeature : Feature} FeatureClassToFeature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @template {import('../Feature.js').FeatureClass} [T=typeof import('../Feature.js').default]\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * @protected\n     * @type {T}\n     */\n    this.featureClass = /** @type {T} */ (Feature);\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n        featureClass: this.featureClass,\n      },\n      options,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|Array<import(\"../render/Feature.js\").default>} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import('../Feature.js').FeatureLike|FeatureClassToFeature<T>>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {Feature} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<Feature>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @template {import(\"../geom/Geometry.js\").default|RenderFeature} T\n * @param {T} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {T} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed = geometry;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    if (write) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    const fromProjection = write ? featureProjection : dataProjection;\n    const toProjection = write ? dataProjection : featureProjection;\n    if (fromProjection.getUnits() === 'tile-pixels') {\n      transformed.transform(fromProjection, toProjection);\n    } else {\n      transformed.applyTransform(getTransform(fromProjection, toProjection));\n    }\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n\nconst GeometryConstructor = {\n  Point: Point,\n  LineString: LineString,\n  Polygon: Polygon,\n  MultiPoint: MultiPoint,\n  MultiLineString: MultiLineString,\n  MultiPolygon: MultiPolygon,\n};\n\nfunction orientFlatCoordinates(flatCoordinates, ends, stride) {\n  if (Array.isArray(ends[0])) {\n    // MultiPolagon\n    if (!linearRingssAreOriented(flatCoordinates, 0, ends, stride)) {\n      flatCoordinates = flatCoordinates.slice();\n      orientLinearRingsArray(flatCoordinates, 0, ends, stride);\n    }\n    return flatCoordinates;\n  }\n  if (!linearRingsAreOriented(flatCoordinates, 0, ends, stride)) {\n    flatCoordinates = flatCoordinates.slice();\n    orientLinearRings(flatCoordinates, 0, ends, stride);\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {FeatureObject} object Feature object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {RenderFeature|Array<RenderFeature>} Render feature.\n */\nexport function createRenderFeature(object, options) {\n  const geometry = object.geometry;\n  if (!geometry) {\n    return [];\n  }\n  if (Array.isArray(geometry)) {\n    return geometry\n      .map((geometry) => createRenderFeature({...object, geometry}))\n      .flat();\n  }\n\n  const geometryType =\n    geometry.type === 'MultiPolygon' ? 'Polygon' : geometry.type;\n  if (geometryType === 'GeometryCollection' || geometryType === 'Circle') {\n    throw new Error('Unsupported geometry type: ' + geometryType);\n  }\n\n  const stride = geometry.layout.length;\n  return transformGeometryWithOptions(\n    new RenderFeature(\n      geometryType,\n      geometryType === 'Polygon'\n        ? orientFlatCoordinates(geometry.flatCoordinates, geometry.ends, stride)\n        : geometry.flatCoordinates,\n      geometry.ends?.flat(),\n      stride,\n      object.properties || {},\n      object.id,\n    ).enableSimplifyTransformed(),\n    false,\n    options,\n  );\n}\n\n/**\n * @param {GeometryObject|null} object Geometry object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nexport function createGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  if (Array.isArray(object)) {\n    const geometries = object.map((geometry) =>\n      createGeometry(geometry, options),\n    );\n    return new GeometryCollection(geometries);\n  }\n  const Geometry = GeometryConstructor[object.type];\n  return transformGeometryWithOptions(\n    new Geometry(object.flatCoordinates, object.layout, object.ends),\n    false,\n    options,\n  );\n}\n","/**\n * @module ol/format/XMLFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport {abstract} from '../util.js';\nimport {extend} from '../array.js';\nimport {getXMLSerializer, isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nclass XMLFeature extends FeatureFormat {\n  constructor() {\n    super();\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = getXMLSerializer();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'xml';\n  }\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readFeatureFromDocument(\n        /** @type {Document} */ (source),\n        options,\n      );\n    }\n    return this.readFeatureFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromDocument(doc, options) {\n    const features = this.readFeaturesFromDocument(doc, options);\n    if (features.length > 0) {\n      return features[0];\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    if (!source) {\n      return [];\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeaturesFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source),\n        options,\n      );\n    }\n    return this.readFeaturesFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromDocument(doc, options) {\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    const features = [];\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          features,\n          this.readFeaturesFromNode(/** @type {Element} */ (n), options),\n        );\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readGeometryFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source),\n        options,\n      );\n    }\n    return this.readGeometryFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromDocument(doc, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readProjectionFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    return this.dataProjection;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   */\n  writeFeature(feature, options) {\n    const node = this.writeFeatureNode(feature, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  writeFeatureNode(feature, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Result.\n   * @api\n   */\n  writeFeatures(features, options) {\n    const node = this.writeFeaturesNode(features, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeFeaturesNode(features, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   */\n  writeGeometry(geometry, options) {\n    const node = this.writeGeometryNode(geometry, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeGeometryNode(geometry, options) {\n    return null; // not implemented\n  }\n}\n\nexport default XMLFeature;\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, getDocument} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readPositiveInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(getDocument().createTextNode(string));\n}\n","/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  isDocument,\n  makeArrayPusher,\n  makeArraySerializer,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readDateTime,\n  readDecimal,\n  readPositiveInteger,\n  readString,\n  writeDateTimeTextNode,\n  writeDecimalTextNode,\n  writeNonNegativeIntegerTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.topografix.com/GPX/1/1 ' +\n  'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt,\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GPX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeArrayPusher(readRte),\n  'trk': makeArrayPusher(readTrk),\n  'wpt': makeArrayPusher(readWpt),\n});\n\n/**\n * @typedef {Object} GPXLink\n * @property {string} [text] text\n * @property {string} [type] type\n */\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeObjectPropertySetter(readString, 'linkText'),\n  'type': makeObjectPropertySetter(readString, 'linkType'),\n});\n\n/**\n * @typedef {Object} GPXAuthor\n * @property {string} [name] name\n * @property {string} [email] email\n * @property {GPXLink} [link] link\n */\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst AUTHOR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'email': parseEmail,\n  'link': parseLink,\n});\n\n/**\n * @typedef {Object} GPXMetadata\n * @property {string} [name] name\n * @property {string} [desc] desc\n * @property {GPXAuthor} [author] author\n * @property {GPXLink} [link] link\n * @property {number} [time] time\n * @property {string} [keywords] keywords\n * @property {Array<number>} [bounds] bounds\n * @property {Object} [extensions] extensions\n *\n */\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'author': makeObjectPropertySetter(readAuthor),\n  'copyright': makeObjectPropertySetter(readCopyright),\n  'link': parseLink,\n  'time': makeObjectPropertySetter(readDateTime),\n  'keywords': makeObjectPropertySetter(readString),\n  'bounds': parseBounds,\n  'extensions': parseExtensions,\n});\n\n/**\n * @typedef {Object} GPXCopyright\n * @property {string} [author] author\n * @property {number} [year] year\n * @property {string} [license] license\n */\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst COPYRIGHT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'year': makeObjectPropertySetter(readPositiveInteger),\n  'license': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst GPX_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeChildAppender(writeRte),\n  'trk': makeChildAppender(writeTrk),\n  'wpt': makeChildAppender(writeWpt),\n});\n\n/**\n * @typedef {Object} Options\n * @property {function(Feature, Node):void} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ] HasZ.\n * @property {boolean} [hasM] HasM.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nclass GPX extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @type {function(Feature, Node): void|undefined}\n     * @private\n     */\n    this.readExtensions_ = options.readExtensions;\n  }\n\n  /**\n   * @param {Array<Feature>} features List of features.\n   * @private\n   */\n  handleReadExtensions_(features) {\n    if (!features) {\n      features = [];\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      if (this.readExtensions_) {\n        const extensionsNode = feature.get('extensionsNode_') || null;\n        this.readExtensions_(feature, extensionsNode);\n      }\n      feature.set('extensionsNode_', undefined);\n    }\n  }\n\n  /**\n   * Reads a GPX file's metadata tag, reading among other things:\n   *   - the name and description of this GPX\n   *   - its author\n   *   - the copyright associated with this GPX file\n   *\n   * Will return null if no metadata tag is present (or no valid source is given).\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {GPXMetadata | null} Metadata\n   * @api\n   */\n  readMetadata(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      return this.readMetadataFromDocument(parse(source));\n    }\n    if (isDocument(source)) {\n      return this.readMetadataFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readMetadataFromNode(source);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {GPXMetadata | null} Metadata\n   */\n  readMetadataFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType === Node.ELEMENT_NODE) {\n        const metadata = this.readMetadataFromNode(/** @type {Element} */ (n));\n        if (metadata) {\n          return metadata;\n        }\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object} Metadata\n   */\n  readMetadataFromNode(node) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        n.localName === 'metadata'\n      ) {\n        return pushParseAndPop({}, METADATA_PARSERS, n, []);\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    const featureReader = FEATURE_READER[node.localName];\n    if (!featureReader) {\n      return null;\n    }\n    const feature = featureReader(node, [this.getReadOptions(node, options)]);\n    if (!feature) {\n      return null;\n    }\n    this.handleReadExtensions_([feature]);\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return [];\n    }\n    if (node.localName == 'gpx') {\n      /** @type {Array<Feature>} */\n      const features = pushParseAndPop([], GPX_PARSERS, node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (features) {\n        this.handleReadExtensions_(features);\n        return features;\n      }\n      return [];\n    }\n    return [];\n  }\n\n  /**\n   * Encode an array of features in the GPX format as an XML node.\n   * LineString geometries are output as routes (`<rte>`), and MultiLineString\n   * as tracks (`<trk>`).\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    //FIXME Serialize metadata\n    const gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    gpx.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION,\n    );\n    gpx.setAttribute('version', '1.1');\n    gpx.setAttribute('creator', 'OpenLayers');\n\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: gpx}),\n      GPX_SERIALIZERS,\n      GPX_NODE_FACTORY,\n      features,\n      [options],\n    );\n    return gpx;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readPositiveInteger),\n  'extensions': parseExtensions,\n  'type': makeObjectPropertySetter(readString),\n  'rtept': parseRtePt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTEPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readPositiveInteger),\n  'type': makeObjectPropertySetter(readString),\n  'extensions': parseExtensions,\n  'trkseg': parseTrkSeg,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKSEG_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': parseTrkPt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n  'magvar': makeObjectPropertySetter(readDecimal),\n  'geoidheight': makeObjectPropertySetter(readDecimal),\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'sym': makeObjectPropertySetter(readString),\n  'type': makeObjectPropertySetter(readString),\n  'fix': makeObjectPropertySetter(readString),\n  'sat': makeObjectPropertySetter(readPositiveInteger),\n  'hdop': makeObjectPropertySetter(readDecimal),\n  'vdop': makeObjectPropertySetter(readDecimal),\n  'pdop': makeObjectPropertySetter(readDecimal),\n  'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n  'dgpsid': makeObjectPropertySetter(readPositiveInteger),\n  'extensions': parseExtensions,\n});\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'rtept',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst RTE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'rtept': makeArraySerializer(makeChildAppender(writeWptType)),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTEPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['ele', 'time']);\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst TRK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'trkseg',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg)),\n});\n\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRKSEG_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': makeChildAppender(writeWptType),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'ele',\n  'time',\n  'magvar',\n  'geoidheight',\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'sym',\n  'type',\n  'fix',\n  'sat',\n  'hdop',\n  'vdop',\n  'pdop',\n  'ageofdgpsdata',\n  'dgpsid',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeChildAppender(writeDecimalTextNode),\n  'time': makeChildAppender(writeDateTimeTextNode),\n  'magvar': makeChildAppender(writeDecimalTextNode),\n  'geoidheight': makeChildAppender(writeDecimalTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'sym': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'fix': makeChildAppender(writeStringTextNode),\n  'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'hdop': makeChildAppender(writeDecimalTextNode),\n  'vdop': makeChildAppender(writeDecimalTextNode),\n  'pdop': makeChildAppender(writeDecimalTextNode),\n  'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n  'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk',\n};\n\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, nodeName) {\n  const geometry = /** @type {Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Element} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')),\n  );\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>} [ends] Ends.\n * @return {import(\"../geom/Geometry.js\").GeometryLayout} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n  /** @type {import(\"../geom/Geometry.js\").GeometryLayout} */\n  let layout = 'XY';\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = 'XYZM';\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = 'XYZ';\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = 'XYM';\n    stride = 3;\n  }\n  if (stride !== 4) {\n    for (let i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = (flatCoordinates.length / 4) * stride;\n    if (ends) {\n      for (let i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = (ends[i] / 4) * stride;\n      }\n    }\n  }\n  return layout;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<any>} objectStack Object stack.\n * @return {GPXAuthor | undefined} Person object.\n */\nfunction readAuthor(node, objectStack) {\n  const values = pushParseAndPop({}, AUTHOR_PARSERS, node, objectStack);\n  if (values) {\n    return values;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<any>} objectStack Object stack.\n * @return {GPXCopyright | undefined} Person object.\n */\nfunction readCopyright(node, objectStack) {\n  const values = pushParseAndPop({}, COPYRIGHT_PARSERS, node, objectStack);\n  if (values) {\n    const author = node.getAttribute('author');\n    if (author !== null) {\n      values['author'] = author;\n    }\n    return values;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseBounds(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const minlat = node.getAttribute('minlat');\n  const minlon = node.getAttribute('minlon');\n  const maxlat = node.getAttribute('maxlat');\n  const maxlon = node.getAttribute('maxlon');\n  if (\n    minlon !== null &&\n    minlat !== null &&\n    maxlon !== null &&\n    maxlat !== null\n  ) {\n    values['bounds'] = [\n      [parseFloat(minlon), parseFloat(minlat)],\n      [parseFloat(maxlon), parseFloat(maxlat)],\n    ];\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseEmail(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const id = node.getAttribute('id');\n  const domain = node.getAttribute('domain');\n  if (id !== null && domain !== null) {\n    values['email'] = `${id}@${domain}`;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {!Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const flatCoordinates = /** @type {Array<number>} */ (\n      rteValues['flatCoordinates']\n    );\n    const layoutOptions = /** @type {LayoutOptions} */ (\n      rteValues['layoutOptions']\n    );\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {!Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const flatCoordinates = /** @type {Array<number>} */ (\n      trkValues['flatCoordinates']\n    );\n    const layoutOptions = /** @type {LayoutOptions} */ (\n      trkValues['layoutOptions']\n    );\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'layoutOptions': {},\n    },\n    RTE_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n  const geometry = new LineString(flatCoordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'ends': [],\n      'layoutOptions': {},\n    },\n    TRK_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(flatCoordinates, layout, ends);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = applyLayoutOptions(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [properties['linkText'], properties['linkType']];\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    link,\n    objectStack,\n    LINK_SEQUENCE,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  node.setAttributeNS(null, 'lat', String(coordinate[1]));\n  node.setAttributeNS(null, 'lon', String(coordinate[0]));\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case 'XYZM':\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n    // fall through\n    case 'XYZ':\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case 'XYM':\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n    // pass\n  }\n  const orderedKeys =\n    node.nodeName == 'rtept'\n      ? RTEPT_TYPE_SEQUENCE[namespaceURI]\n      : WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const properties = feature.getProperties();\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'LineString') {\n    const lineString = /** @type {LineString} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    context['geometryLayout'] = lineString.getLayout();\n    properties['rtept'] = lineString.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    RTE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const properties = feature.getProperties();\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'MultiLineString') {\n    const multiLineString = /** @type {MultiLineString} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    properties['trkseg'] = multiLineString.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    TRK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['geometryLayout'] = lineString.getLayout();\n  context['properties'] = {};\n  pushSerializeAndPop(\n    context,\n    TRKSEG_SERIALIZERS,\n    TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(),\n    objectStack,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'Point') {\n    const point = /** @type {Point} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    context['geometryLayout'] = point.getLayout();\n    writeWptType(node, point.getCoordinates(), objectStack);\n  }\n}\n\nexport default GPX;\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @template {import('../Feature.js').FeatureClass} [T=typeof import('../Feature.js').default]\n * @extends {FeatureFormat<T>}\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import('./Feature.js').FeatureClassToFeature<T>} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return /** @type {import('./Feature.js').FeatureClassToFeature<T>} */ (\n      this.readFeatureFromObject(\n        getObject(source),\n        this.getReadOptions(source, options),\n      )\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import('./Feature.js').FeatureClassToFeature<T>>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return /** @type {Array<import('./Feature.js').FeatureClassToFeature<T>>} */ (\n      this.readFeaturesFromObject(\n        getObject(source),\n        this.getReadOptions(source, options),\n      )\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default|import(\"../render/Feature.js\").default|Array<import(\"../render/Feature.js\").default>} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default|import(\"../render/Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  }\n  if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  createGeometry,\n  createRenderFeature,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport {\n  deflateCoordinatesArray,\n  deflateMultiCoordinatesArray,\n} from '../geom/flat/deflate.js';\nimport {getLayoutForStride} from '../geom/SimpleGeometry.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureClass} FeatureClassToFeature\n * @typedef {Object} Options\n *\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n * @property {FeatureClassToFeature} [featureClass] Feature class\n * to be used when reading features. The default is {@link module:ol/Feature~Feature}. If performance is\n * the primary concern, and features are not going to be modified or round-tripped through the format,\n * consider using {@link module:ol/render/Feature~RenderFeature}\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @template {import('../Feature.js').FeatureClass} [T=typeof Feature]\n * @extends {JSONFeature<T>}\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options<T>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326',\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    if (options.featureClass) {\n      this.featureClass = options.featureClass;\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the `geometry_name` in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Feature|RenderFeature|Array<RenderFeature>}.default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometryInternal(geoJSONFeature['geometry'], options);\n    if (this.featureClass === RenderFeature) {\n      return createRenderFeature(\n        {\n          geometry,\n          id: geoJSONFeature['id'],\n          properties: geoJSONFeature['properties'],\n        },\n        options,\n      );\n    }\n\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && geoJSONFeature['geometry_name']) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(createGeometry(geometry, options));\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature|RenderFeature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<Feature|RenderFeature|Array<RenderFeature>>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        const featureObject = this.readFeatureFromObject(\n          geoJSONFeatures[i],\n          options,\n        );\n        if (!featureObject) {\n          continue;\n        }\n        features.push(featureObject);\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return features.flat();\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        throw new Error('Unknown SRS type');\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryObject} Geometry.\n */\nfunction readGeometryInternal(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /** @type {import(\"./Feature.js\").GeometryObject} */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object),\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object),\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object),\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object),\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object),\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return geometry;\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  const geometryObject = readGeometryInternal(object, options);\n  return createGeometry(geometryObject, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryCollectionObject} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"./Feature.js\").GeometryObject} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometryInternal(geometry, options);\n    },\n  );\n  return geometries;\n}\n\n/**\n * @param {GeoJSONPoint} object Input object.\n * @return {import(\"./Feature.js\").GeometryObject} Point geometry.\n */\nfunction readPointGeometry(object) {\n  const flatCoordinates = object['coordinates'];\n  return {\n    type: 'Point',\n    flatCoordinates,\n    layout: getLayoutForStride(flatCoordinates.length),\n  };\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} LineString geometry.\n */\nfunction readLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = coordinates.flat();\n  return {\n    type: 'LineString',\n    flatCoordinates,\n    ends: [flatCoordinates.length],\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiLineString geometry.\n */\nfunction readMultiLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const stride = coordinates[0]?.[0]?.length || 2;\n  const flatCoordinates = [];\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'MultiLineString',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPoint geometry.\n */\nfunction readMultiPointGeometry(object) {\n  const coordinates = object['coordinates'];\n  return {\n    type: 'MultiPoint',\n    flatCoordinates: coordinates.flat(),\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPolygon geometry.\n */\nfunction readMultiPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.[0].length || 2;\n  const endss = deflateMultiCoordinatesArray(\n    flatCoordinates,\n    0,\n    coordinates,\n    stride,\n  );\n  return {\n    type: 'MultiPolygon',\n    flatCoordinates,\n    ends: endss,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.length;\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'Polygon',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(\n        /** @type {import(\"../geom/Point.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {import(\"../geom/LineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {import(\"../geom/Polygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {import(\"../geom/MultiPoint.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {import(\"../geom/MultiLineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {import(\"../geom/MultiPolygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ),\n        options,\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/format/TextFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nclass TextFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'text';\n  }\n\n  /**\n   * Read the feature from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromText(\n      getText(source),\n      this.adaptOptions(options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the features from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromText(\n      getText(source),\n      this.adaptOptions(options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the geometry from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromText(\n      getText(source),\n      this.adaptOptions(options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromText(getText(source));\n  }\n\n  /**\n   * @param {string} text Text.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjectionFromText(text) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as a string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return this.writeFeatureText(feature, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return this.writeFeaturesText(features, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return this.writeGeometryText(geometry, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  }\n  return '';\n}\n\nexport default TextFeature;\n","/**\n * @module ol/format/IGC\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport TextFeature from './TextFeature.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {'barometric' | 'gps' | 'none'} IGCZ\n * IGC altitude/z. One of 'barometric', 'gps', 'none'.\n */\n\n/**\n * @const\n * @type {RegExp}\n */\nconst B_RECORD_RE =\n  /^B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5})/;\n\n/**\n * @const\n * @type {RegExp}\n */\nconst H_RECORD_RE = /^H.([A-Z]{3}).*?:(.*)/;\n\n/**\n * @const\n * @type {RegExp}\n */\nconst HFDTE_RECORD_RE = /^HFDTE(\\d{2})(\\d{2})(\\d{2})/;\n\n/**\n * @const\n * @type {RegExp}\n */\nconst HFDTEDATE_RECORD_RE = /^HFDTEDATE:(\\d{2})(\\d{2})(\\d{2}),(\\d{2})/;\n\n/**\n * A regular expression matching the newline characters `\\r\\n`, `\\r` and `\\n`.\n *\n * @const\n * @type {RegExp}\n */\nconst NEWLINE_RE = /\\r\\n|\\r|\\n/;\n\n/**\n * @typedef {Object} Options\n * @property {IGCZ} [altitudeMode='none'] Altitude mode. Possible\n * values are `'barometric'`, `'gps'`, and `'none'`.\n */\n\n/**\n * @classdesc\n * Feature format for `*.igc` flight recording files.\n *\n * As IGC sources contain a single feature,\n * {@link module:ol/format/IGC~IGC#readFeatures} will return the feature in an\n * array\n *\n * @api\n */\nclass IGC extends TextFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {IGCZ}\n     */\n    this.altitudeMode_ = options.altitudeMode ? options.altitudeMode : 'none';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.lad_ = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.lod_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ladStart_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ladStop_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lodStart_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lodStop_ = 0;\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    const altitudeMode = this.altitudeMode_;\n    const lines = text.split(NEWLINE_RE);\n    /** @type {Object<string, string>} */\n    const properties = {};\n    const flatCoordinates = [];\n    let year = 2000;\n    let month = 0;\n    let day = 1;\n    let lastDateTime = -1;\n    let i, ii;\n    for (i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      let m;\n      if (line.charAt(0) == 'B') {\n        m = B_RECORD_RE.exec(line);\n        if (m) {\n          const hour = parseInt(m[1], 10);\n          const minute = parseInt(m[2], 10);\n          const second = parseInt(m[3], 10);\n          let y = parseInt(m[4], 10) + parseInt(m[5], 10) / 60000;\n          if (this.lad_) {\n            y +=\n              parseInt(line.slice(this.ladStart_, this.ladStop_), 10) /\n              60000 /\n              10 ** (this.ladStop_ - this.ladStart_);\n          }\n          if (m[6] == 'S') {\n            y = -y;\n          }\n          let x = parseInt(m[7], 10) + parseInt(m[8], 10) / 60000;\n          if (this.lod_) {\n            x +=\n              parseInt(line.slice(this.lodStart_, this.lodStop_), 10) /\n              60000 /\n              10 ** (this.lodStop_ - this.lodStart_);\n          }\n          if (m[9] == 'W') {\n            x = -x;\n          }\n          flatCoordinates.push(x, y);\n          if (altitudeMode != 'none') {\n            let z;\n            if (altitudeMode == 'gps') {\n              z = parseInt(m[11], 10);\n            } else if (altitudeMode == 'barometric') {\n              z = parseInt(m[12], 10);\n            } else {\n              z = 0;\n            }\n            flatCoordinates.push(z);\n          }\n          let dateTime = Date.UTC(year, month, day, hour, minute, second);\n          // Detect UTC midnight wrap around.\n          if (dateTime < lastDateTime) {\n            dateTime = Date.UTC(year, month, day + 1, hour, minute, second);\n          }\n          flatCoordinates.push(dateTime / 1000);\n          lastDateTime = dateTime;\n        }\n      } else if (line.charAt(0) == 'H') {\n        m = HFDTEDATE_RECORD_RE.exec(line);\n        if (m) {\n          day = parseInt(m[1], 10);\n          month = parseInt(m[2], 10) - 1;\n          year = 2000 + parseInt(m[3], 10);\n        } else {\n          m = HFDTE_RECORD_RE.exec(line);\n          if (m) {\n            day = parseInt(m[1], 10);\n            month = parseInt(m[2], 10) - 1;\n            year = 2000 + parseInt(m[3], 10);\n          } else {\n            m = H_RECORD_RE.exec(line);\n            if (m) {\n              properties[m[1]] = m[2].trim();\n            }\n          }\n        }\n      } else if (line.charAt(0) == 'I') {\n        const numberAdds = parseInt(line.slice(1, 3), 10);\n        for (let i = 0; i < numberAdds; i++) {\n          const addCode = line.slice(7 + i * 7, 10 + i * 7);\n          if (addCode === 'LAD' || addCode === 'LOD') {\n            // in IGC format, columns are numbered from 1\n            const addStart = parseInt(line.slice(3 + i * 7, 5 + i * 7), 10) - 1;\n            const addStop = parseInt(line.slice(5 + i * 7, 7 + i * 7), 10);\n            if (addCode === 'LAD') {\n              this.lad_ = true;\n              this.ladStart_ = addStart;\n              this.ladStop_ = addStop;\n            } else if (addCode === 'LOD') {\n              this.lod_ = true;\n              this.lodStart_ = addStart;\n              this.lodStop_ = addStop;\n            }\n          }\n        }\n      }\n    }\n    if (flatCoordinates.length === 0) {\n      return null;\n    }\n    const layout = altitudeMode == 'none' ? 'XYM' : 'XYZM';\n    const lineString = new LineString(flatCoordinates, layout);\n    const feature = new Feature(\n      transformGeometryWithOptions(lineString, false, options),\n    );\n    feature.setProperties(properties, true);\n    return feature;\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    const feature = this.readFeatureFromText(text, options);\n    if (feature) {\n      return [feature];\n    }\n    return [];\n  }\n}\n\nexport default IGC;\n","/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport Icon from '../style/Icon.js';\nimport ImageState from '../ImageState.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  isDocument,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeReplacer,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {asArray} from '../color.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readBoolean,\n  readDecimal,\n  readString,\n  writeBooleanTextNode,\n  writeCDATASection,\n  writeDecimalTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {toRadians} from '../math.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x X coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} xunits Units of x.\n * @property {number} y Y coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} yunits Units of Y.\n * @property {import(\"../style/Icon.js\").IconOrigin} [origin] Origin.\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<Array<number>>} coordinates Coordinates.\n * @property {Array<number>} whens Whens.\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst GX_NAMESPACE_URIS = ['http://www.google.com/kml/ext/2.2'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.opengis.net/kml/2.2 ' +\n  'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n/**\n * @type {Object<string, import(\"../style/Icon.js\").IconAnchorUnits>}\n */\nconst ICON_ANCHOR_UNITS_MAP = {\n  'fraction': 'fraction',\n  'pixels': 'pixels',\n  'insetPixels': 'pixels',\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PLACEMARK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readStyleURL),\n    'visibility': makeObjectPropertySetter(readBoolean),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry'),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': extendedDataParser,\n  'Region': regionParser,\n  'Link': linkParser,\n  'address': makeObjectPropertySetter(readString),\n  'description': makeObjectPropertySetter(readString),\n  'name': makeObjectPropertySetter(readString),\n  'open': makeObjectPropertySetter(readBoolean),\n  'phoneNumber': makeObjectPropertySetter(readString),\n  'visibility': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'href': makeObjectPropertySetter(readURI),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CAMERA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  Altitude: makeObjectPropertySetter(readDecimal),\n  Longitude: makeObjectPropertySetter(readDecimal),\n  Latitude: makeObjectPropertySetter(readDecimal),\n  Tilt: makeObjectPropertySetter(readDecimal),\n  AltitudeMode: makeObjectPropertySetter(readString),\n  Heading: makeObjectPropertySetter(readDecimal),\n  Roll: makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LatLonAltBox': latLonAltBoxParser,\n  'Lod': lodParser,\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['Document', 'Placemark']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Document': makeChildAppender(writeDocument),\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @type {import(\"../color.js\").Color}\n */\nlet DEFAULT_COLOR;\n\n/**\n * @type {Fill|null}\n */\nlet DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill|null} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nlet DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {import(\"../style/Image.js\").default|null}\n */\nlet DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default|null} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nlet DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {Stroke|null}\n */\nlet DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke|null} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {Stroke}\n */\nlet DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {Text|null}\n */\nlet DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text|null} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {Style|null}\n */\nlet DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {Style|null} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>|null} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\n/**\n * Function that returns the scale needed to normalize an icon image to 32 pixels.\n * @param {import(\"../size.js\").Size} size Image size.\n * @return {number} Scale.\n */\nfunction scaleForSize(size) {\n  return 32 / Math.min(size[0], size[1]);\n}\n\nfunction createStyleDefaults() {\n  DEFAULT_COLOR = [255, 255, 255, 1];\n\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR,\n  });\n\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2];\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = 'pixels';\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = 'pixels';\n\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n\n  DEFAULT_IMAGE_STYLE_SRC =\n    'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: 'bottom-left',\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: scaleForSize(DEFAULT_IMAGE_STYLE_SIZE),\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC,\n  });\n\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1,\n  });\n\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2,\n  });\n\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8,\n  });\n\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0,\n  });\n\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n\n/**\n * @type {HTMLTextAreaElement}\n */\nlet TEXTAREA;\n\n/**\n * A function that takes a url `{string}` and returns a url `{string}`.\n * Might be used to change an icon path or to substitute a\n * data url obtained from a KMZ array buffer.\n *\n * @typedef {function(string):string} IconUrlFunction\n * @api\n */\n\n/**\n * Function that returns a url unchanged.\n * @param {string} href Input url.\n * @return {string} Output url.\n */\nfunction defaultIconUrlFunction(href) {\n  return href;\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * @property {IconUrlFunction} [iconUrlFunction] Function that takes a url string and returns a url string.\n * Might be used to change an icon path or to substitute a data url obtained from a KMZ array buffer.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * @api\n */\nclass KML extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    if (!DEFAULT_STYLE_ARRAY) {\n      createStyleDefaults();\n    }\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {Array<Style>}\n     */\n    this.defaultStyle_ = options.defaultStyle\n      ? options.defaultStyle\n      : DEFAULT_STYLE_ARRAY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.extractStyles_ =\n      options.extractStyles !== undefined ? options.extractStyles : true;\n\n    /**\n     * @type {boolean}\n     */\n    this.writeStyles_ =\n      options.writeStyles !== undefined ? options.writeStyles : true;\n\n    /**\n     * @private\n     * @type {!Object<string, (Array<Style>|string)>}\n     */\n    this.sharedStyles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.showPointNames_ =\n      options.showPointNames !== undefined ? options.showPointNames : true;\n\n    /**\n     * @type {null|string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    /**\n     * @type {IconUrlFunction}\n     */\n    this.iconUrlFunction_ = options.iconUrlFunction\n      ? options.iconUrlFunction\n      : defaultIconUrlFunction;\n\n    this.supportedMediaTypes = ['application/vnd.google-earth.kml+xml'];\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<Feature>|undefined} Features.\n   */\n  readDocumentOrFolder_(node, objectStack) {\n    // FIXME use scope somehow\n    const parsersNS = makeStructureNS(NAMESPACE_URIS, {\n      'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this),\n    });\n    /** @type {Array<Feature>} */\n    // @ts-ignore\n    const features = pushParseAndPop([], parsersNS, node, objectStack, this);\n    if (features) {\n      return features;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Feature|undefined} Feature.\n   */\n  readPlacemark_(node, objectStack) {\n    const object = pushParseAndPop(\n      {'geometry': null},\n      PLACEMARK_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (!object) {\n      return undefined;\n    }\n    const feature = new Feature();\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      feature.setId(id);\n    }\n    const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n      objectStack[0]\n    );\n\n    const geometry = object['geometry'];\n    if (geometry) {\n      transformGeometryWithOptions(geometry, false, options);\n    }\n    feature.setGeometry(geometry);\n    delete object['geometry'];\n\n    if (this.extractStyles_) {\n      const style = object['Style'];\n      const styleUrl = object['styleUrl'];\n      const styleFunction = createFeatureStyleFunction(\n        style,\n        styleUrl,\n        this.defaultStyle_,\n        this.sharedStyles_,\n        this.showPointNames_,\n      );\n      feature.setStyle(styleFunction);\n    }\n    delete object['Style'];\n    // we do not remove the styleUrl property from the object, so it\n    // gets stored on feature when setProperties is called\n\n    feature.setProperties(object, true);\n\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyle_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      const style = readStyle.call(this, node, objectStack);\n      if (style) {\n        let styleUri;\n        let baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n          baseURI = window.location.href;\n        }\n        if (baseURI) {\n          const url = new URL('#' + id, baseURI);\n          styleUri = url.href;\n        } else {\n          styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = style;\n      }\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyleMap_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id === null) {\n      return;\n    }\n    const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n    if (!styleMapValue) {\n      return;\n    }\n    let styleUri;\n    let baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n      baseURI = window.location.href;\n    }\n    if (baseURI) {\n      const url = new URL('#' + id, baseURI);\n      styleUri = url.href;\n    } else {\n      styleUri = '#' + id;\n    }\n    this.sharedStyles_[styleUri] = styleMapValue;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    const feature = this.readPlacemark_(node, [\n      this.getReadOptions(node, options),\n    ]);\n    if (feature) {\n      return feature;\n    }\n    return null;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return [];\n    }\n    let features;\n    const localName = node.localName;\n    if (localName == 'Document' || localName == 'Folder') {\n      features = this.readDocumentOrFolder_(node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (features) {\n        return features;\n      }\n      return [];\n    }\n    if (localName == 'Placemark') {\n      const feature = this.readPlacemark_(node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (feature) {\n        return [feature];\n      }\n      return [];\n    }\n    if (localName == 'kml') {\n      features = [];\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        const fs = this.readFeaturesFromNode(n, options);\n        if (fs) {\n          extend(features, fs);\n        }\n      }\n      return features;\n    }\n    return [];\n  }\n\n  /**\n   * Read the name of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {string|undefined} Name.\n   * @api\n   */\n  readName(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readNameFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readNameFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readNameFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {string|undefined} Name.\n   */\n  readNameFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        const name = this.readNameFromNode(/** @type {Element} */ (n));\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {string|undefined} Name.\n   */\n  readNameFromNode(node) {\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'name') {\n        return readString(n);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' ||\n          localName == 'Folder' ||\n          localName == 'Placemark' ||\n          localName == 'kml')\n      ) {\n        const name = this.readNameFromNode(n);\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Read the network links of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Network links.\n   * @api\n   */\n  readNetworkLinks(source) {\n    const networkLinks = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromDocument(/** @type {Document} */ (source)),\n      );\n    } else {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromNode(/** @type {Element} */ (source)),\n      );\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromDocument(doc) {\n    const networkLinks = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          networkLinks,\n          this.readNetworkLinksFromNode(/** @type {Element} */ (n)),\n        );\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromNode(node) {\n    const networkLinks = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        n.localName == 'NetworkLink'\n      ) {\n        const obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n        networkLinks.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(networkLinks, this.readNetworkLinksFromNode(n));\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * Read the regions of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Regions.\n   * @api\n   */\n  readRegion(source) {\n    const regions = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(regions, this.readRegionFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        regions,\n        this.readRegionFromDocument(/** @type {Document} */ (source)),\n      );\n    } else {\n      extend(regions, this.readRegionFromNode(/** @type {Element} */ (source)));\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Region.\n   */\n  readRegionFromDocument(doc) {\n    const regions = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Region.\n   * @api\n   */\n  readRegionFromNode(node) {\n    const regions = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'Region') {\n        const obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n        regions.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(regions, this.readRegionFromNode(n));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @typedef {Object} KMLCamera Specifies the observer's viewpoint and associated view parameters.\n   * @property {number} [Latitude] Latitude of the camera.\n   * @property {number} [Longitude] Longitude of the camera.\n   * @property {number} [Altitude] Altitude of the camera.\n   * @property {string} [AltitudeMode] Floor-related altitude mode.\n   * @property {number} [Heading] Horizontal camera rotation.\n   * @property {number} [Tilt] Lateral camera rotation.\n   * @property {number} [Roll] Vertical camera rotation.\n   */\n\n  /**\n   * Read the cameras of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<KMLCamera>} Cameras.\n   * @api\n   */\n  readCamera(source) {\n    const cameras = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(cameras, this.readCameraFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        cameras,\n        this.readCameraFromDocument(/** @type {Document} */ (source)),\n      );\n    } else {\n      extend(cameras, this.readCameraFromNode(/** @type {Element} */ (source)));\n    }\n    return cameras;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<KMLCamera>} Cameras.\n   */\n  readCameraFromDocument(doc) {\n    const cameras = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType === Node.ELEMENT_NODE) {\n        extend(cameras, this.readCameraFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return cameras;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<KMLCamera>} Cameras.\n   * @api\n   */\n  readCameraFromNode(node) {\n    const cameras = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName === 'Camera') {\n        const obj = pushParseAndPop({}, CAMERA_PARSERS, n, []);\n        cameras.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName === 'Document' ||\n          localName === 'Folder' ||\n          localName === 'Placemark' ||\n          localName === 'kml')\n      ) {\n        extend(cameras, this.readCameraFromNode(n));\n      }\n    }\n    return cameras;\n  }\n\n  /**\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    const kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    kml.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION,\n    );\n\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: kml,\n      };\n    /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n    const properties = {};\n    if (features.length > 1) {\n      properties['Document'] = features;\n    } else if (features.length == 1) {\n      properties['Placemark'] = features[0];\n    }\n    const orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n    const values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(\n      context,\n      KML_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      [options],\n      orderedKeys,\n      this,\n    );\n    return kml;\n  }\n}\n\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  const textOffset = [0, 0];\n  /** @type {CanvasTextAlign} */\n  let textAlign = 'start';\n  const imageStyle = foundStyle.getImage();\n  if (imageStyle) {\n    const imageSize = imageStyle.getSize();\n    if (imageSize && imageSize.length == 2) {\n      const imageScale = imageStyle.getScaleArray();\n      const anchor = imageStyle.getAnchor();\n      // Offset the label to be centered to the right of the icon,\n      // if there is one.\n      textOffset[0] = imageScale[0] * (imageSize[0] - anchor[0]);\n      textOffset[1] = imageScale[1] * (imageSize[1] / 2 - anchor[1]);\n      textAlign = 'left';\n    }\n  }\n  let textStyle = foundStyle.getText();\n  if (textStyle) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    textStyle = textStyle.clone();\n    textStyle.setFont(textStyle.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(textStyle.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(textStyle.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(textStyle.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    image: imageStyle,\n    text: textStyle,\n  });\n  return nameStyle;\n}\n\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(\n  style,\n  styleUrl,\n  defaultStyle,\n  sharedStyles,\n  showPointNames,\n) {\n  return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>|Style} Style.\n     */\n    function (feature, resolution) {\n      let drawName = showPointNames;\n      let name = '';\n      let multiGeometryPoints = [];\n      if (drawName) {\n        const geometry = feature.getGeometry();\n        if (geometry) {\n          if (geometry instanceof GeometryCollection) {\n            multiGeometryPoints = geometry\n              .getGeometriesArrayRecursive()\n              .filter(function (geometry) {\n                const type = geometry.getType();\n                return type === 'Point' || type === 'MultiPoint';\n              });\n            drawName = multiGeometryPoints.length > 0;\n          } else {\n            const type = geometry.getType();\n            drawName = type === 'Point' || type === 'MultiPoint';\n          }\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (feature.get('name'));\n        drawName = drawName && !!name;\n        // convert any html character codes\n        if (drawName && /&[^&]+;/.test(name)) {\n          if (!TEXTAREA) {\n            TEXTAREA = document.createElement('textarea');\n          }\n          TEXTAREA.innerHTML = name;\n          name = TEXTAREA.value;\n        }\n      }\n\n      let featureStyle = defaultStyle;\n      if (style) {\n        featureStyle = style;\n      } else if (styleUrl) {\n        featureStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n      }\n      if (drawName) {\n        const nameStyle = createNameStyleFunction(featureStyle[0], name);\n        if (multiGeometryPoints.length > 0) {\n          // in multigeometries restrict the name style to points and create a\n          // style without image or text for geometries requiring fill or stroke\n          // including any polygon specific style if there is one\n          nameStyle.setGeometry(new GeometryCollection(multiGeometryPoints));\n          const baseStyle = new Style({\n            geometry: featureStyle[0].getGeometry(),\n            image: null,\n            fill: featureStyle[0].getFill(),\n            stroke: featureStyle[0].getStroke(),\n            text: null,\n          });\n          return [nameStyle, baseStyle].concat(featureStyle.slice(1));\n        }\n        return nameStyle;\n      }\n      return featureStyle;\n    }\n  );\n}\n\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  }\n  if (typeof styleValue === 'string') {\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  }\n  return defaultStyle;\n}\n\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n  const s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255,\n    ];\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  let s = getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  s = s.replace(/\\s*,\\s*/g, ',');\n  const re =\n    /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?),([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|,|$)(?:([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|$))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  const s = getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  }\n  return s;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readStyleURL(node) {\n  // KML files in the wild occasionally forget the leading\n  // `#` on styleUrlsdefined in the same document.\n  const s = getAllTextContent(node, false)\n    .trim()\n    .replace(/^(?!.*#)/, '#');\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  }\n  return s;\n}\n\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  /** @type {import('../style/Icon.js').IconOrigin} */\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = 'bottom-left';\n    } else {\n      origin = 'top-left';\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = 'bottom-right';\n    } else {\n      origin = 'top-right';\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin,\n  };\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Pair': pairDataParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack, this);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeObjectPropertySetter(readIcon),\n  'color': makeObjectPropertySetter(readColor),\n  'heading': makeObjectPropertySetter(readDecimal),\n  'hotSpot': makeObjectPropertySetter(readVec2),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = !('Icon' in object) || Object.keys(IconObject).length > 0;\n  let src;\n  const href = /** @type {string|undefined} */ (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  /** @type {import('../style/Icon.js').IconOrigin|undefined} */\n  let anchorOrigin = 'bottom-left';\n  const hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (/^https?:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    // Google hotspots from https://kml4earth.appspot.com/icons.html#notes\n    if (src.includes('pushpin')) {\n      anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (src.includes('arrow-reverse')) {\n      anchor = [54, 42];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (src.includes('paddle')) {\n      anchor = [32, 1];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    }\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */ (IconObject['x']);\n  const y = /** @type {number|undefined} */ (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */ (IconObject['w']);\n  const h = /** @type {number|undefined} */ (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */ (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  const scale = /** @type {number|undefined} */ (object['scale']);\n\n  const color = /** @type {Array<number>|undefined} */ (object['color']);\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: this.crossOrigin_,\n      offset: offset,\n      offsetOrigin: 'bottom-left',\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: this.iconUrlFunction_(src),\n      color: color,\n    });\n\n    const imageScale = imageStyle.getScaleArray()[0];\n    const imageSize = imageStyle.getSize();\n    if (imageSize === null) {\n      const imageState = imageStyle.getImageState();\n      if (imageState === ImageState.IDLE || imageState === ImageState.LOADING) {\n        const listener = function () {\n          const imageState = imageStyle.getImageState();\n          if (\n            !(\n              imageState === ImageState.IDLE ||\n              imageState === ImageState.LOADING\n            )\n          ) {\n            const imageSize = imageStyle.getSize();\n            if (imageSize && imageSize.length == 2) {\n              const resizeScale = scaleForSize(imageSize);\n              imageStyle.setScale(imageScale * resizeScale);\n            }\n            imageStyle.unlistenImageChange(listener);\n          }\n        };\n        imageStyle.listenImageChange(listener);\n        if (imageState === ImageState.IDLE) {\n          imageStyle.load();\n        }\n      }\n    } else if (imageSize.length == 2) {\n      const resizeScale = scaleForSize(imageSize);\n      imageStyle.setScale(imageScale * resizeScale);\n    }\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color:\n        /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    }),\n    scale: /** @type {number|undefined} */ (object['scale']),\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'width': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1),\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'fill': makeObjectPropertySetter(readBoolean),\n  'outline': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline = /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const coordinates = gxTrackObject.coordinates;\n  const s = getAllTextContent(node, false);\n  const re =\n    /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    coordinates.push([x, y, z]);\n  } else {\n    coordinates.push([]);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n  'Track': makeArrayPusher(readGxTrack),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  const lineStrings = pushParseAndPop(\n    [],\n    GX_MULTITRACK_GEOMETRY_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!lineStrings) {\n    return undefined;\n  }\n  return new MultiLineString(lineStrings);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_TRACK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'when': whenParser,\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'coord': gxCoordParser,\n  }),\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  const gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n      coordinates: [],\n      whens: [],\n    }),\n    GX_TRACK_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = [];\n  const coordinates = gxTrackObject.coordinates;\n  const whens = gxTrackObject.whens;\n  for (\n    let i = 0, ii = Math.min(coordinates.length, whens.length);\n    i < ii;\n    ++i\n  ) {\n    if (coordinates[i].length == 3) {\n      flatCoordinates.push(\n        coordinates[i][0],\n        coordinates[i][1],\n        coordinates[i][2],\n        whens[i],\n      );\n    }\n  }\n  return new LineString(flatCoordinates, 'XYZM');\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeObjectPropertySetter(readURI),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeObjectPropertySetter(readDecimal),\n    'y': makeObjectPropertySetter(readDecimal),\n    'w': makeObjectPropertySetter(readDecimal),\n    'h': makeObjectPropertySetter(readDecimal),\n  }),\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  const iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  }\n  return null;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(\n    null,\n    GEOMETRY_FLAT_COORDINATES_PARSERS,\n    node,\n    objectStack,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeObjectPropertySetter(readBoolean),\n  'tessellate': makeObjectPropertySetter(readBoolean),\n  'altitudeMode': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack,\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(flatCoordinates, 'XYZ');\n    lineString.setProperties(properties, true);\n    return lineString;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack,\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(flatCoordinates, 'XYZ', [\n      flatCoordinates.length,\n    ]);\n    polygon.setProperties(properties, true);\n    return polygon;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeArrayPusher(readLineString),\n  'LinearRing': makeArrayPusher(readLinearRing),\n  'MultiGeometry': makeArrayPusher(readMultiGeometry),\n  'Point': makeArrayPusher(readPoint),\n  'Polygon': makeArrayPusher(readPolygon),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  const geometries = pushParseAndPop(\n    [],\n    MULTI_GEOMETRY_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry;\n  for (let i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == 'Point') {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (let i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'LineString') {\n      multiGeometry = new MultiLineString(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'Polygon') {\n      multiGeometry = new MultiPolygon(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'GeometryCollection') {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      throw new Error('Unknown geometry type found');\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack,\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(flatCoordinates, 'XYZ');\n    point.setProperties(properties, true);\n    return point;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'innerBoundaryIs': innerBoundaryIsParser,\n  'outerBoundaryIs': outerBoundaryIsParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  const properties = pushParseAndPop(\n    /** @type {Object<string,*>} */ ({}),\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack,\n  );\n  const flatLinearRings = pushParseAndPop(\n    [null],\n    FLAT_LINEAR_RINGS_PARSERS,\n    node,\n    objectStack,\n  );\n  if (flatLinearRings && flatLinearRings[0]) {\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    for (let i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    const polygon = new Polygon(flatCoordinates, 'XYZ', ends);\n    polygon.setProperties(properties, true);\n    return polygon;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': iconStyleParser,\n  'LabelStyle': labelStyleParser,\n  'LineStyle': lineStyleParser,\n  'PolyStyle': polyStyleParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  const styleObject = pushParseAndPop(\n    {},\n    STYLE_PARSERS,\n    node,\n    objectStack,\n    this,\n  );\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle =\n    /** @type {Fill} */\n    (\n      'fillStyle' in styleObject ? styleObject['fillStyle'] : DEFAULT_FILL_STYLE\n    );\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle;\n  if ('imageStyle' in styleObject) {\n    if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n      imageStyle = /** @type {import(\"../style/Image.js\").default} */ (\n        styleObject['imageStyle']\n      );\n    }\n  } else {\n    imageStyle = DEFAULT_IMAGE_STYLE;\n  }\n  const textStyle =\n    /** @type {Text} */\n    (\n      'textStyle' in styleObject ? styleObject['textStyle'] : DEFAULT_TEXT_STYLE\n    );\n  const strokeStyle =\n    /** @type {Stroke} */\n    (\n      'strokeStyle' in styleObject\n        ? styleObject['strokeStyle']\n        : DEFAULT_STROKE_STYLE\n    );\n  const outline = /** @type {boolean|undefined} */ (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    // if the polystyle specifies no outline two styles are needed,\n    // one for non-polygon geometries where linestrings require a stroke\n    // and one for polygons where there should be no stroke\n    return [\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === 'GeometryCollection') {\n            const collection =\n              /** @type {import(\"../geom/GeometryCollection\").default} */ (\n                geometry\n              );\n            return new GeometryCollection(\n              collection\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type !== 'Polygon' && type !== 'MultiPolygon';\n                }),\n            );\n          }\n          if (type !== 'Polygon' && type !== 'MultiPolygon') {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        image: imageStyle,\n        stroke: strokeStyle,\n        text: textStyle,\n        zIndex: undefined, // FIXME\n      }),\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === 'GeometryCollection') {\n            const collection =\n              /** @type {import(\"../geom/GeometryCollection\").default} */ (\n                geometry\n              );\n            return new GeometryCollection(\n              collection\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type === 'Polygon' || type === 'MultiPolygon';\n                }),\n            );\n          }\n          if (type === 'Polygon' || type === 'MultiPolygon') {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        stroke: null,\n        zIndex: undefined, // FIXME\n      }),\n    ];\n  }\n  return [\n    new Style({\n      fill: fillStyle,\n      image: imageStyle,\n      stroke: strokeStyle,\n      text: textStyle,\n      zIndex: undefined, // FIXME\n    }),\n  ];\n}\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = false;\n  hasTessellate = false;\n  hasAltitudeMode = false;\n  for (let i = 0; i < ii; ++i) {\n    const geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'displayName': makeObjectPropertySetter(readString),\n  'value': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  const featureObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  if (name && featureObject.displayName) {\n    featureObject[name] = {\n      value: featureObject.value,\n      displayName: featureObject.displayName,\n      toString: function () {\n        return featureObject.value;\n      },\n    };\n  } else if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': dataParser,\n  'SchemaData': schemaDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Style': makeObjectPropertySetter(readStyle),\n  'key': makeObjectPropertySetter(readString),\n  'styleUrl': makeObjectPropertySetter(readStyleURL),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  const pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack, this);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */ (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const style = /** @type {Style} */ (pairObject['Style']);\n    if (style) {\n      objectStack[objectStack.length - 1] = style;\n    }\n  }\n}\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    throw new Error('`styleMapValue` has an unknown type');\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'SimpleData': simpleDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = readString(node);\n    const featureObject = /** @type {Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    featureObject[name] = data;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'altitudeMode': makeObjectPropertySetter(readString),\n  'minAltitude': makeObjectPropertySetter(readDecimal),\n  'maxAltitude': makeObjectPropertySetter(readDecimal),\n  'north': makeObjectPropertySetter(readDecimal),\n  'south': makeObjectPropertySetter(readDecimal),\n  'east': makeObjectPropertySetter(readDecimal),\n  'west': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  const object = pushParseAndPop(\n    {},\n    LAT_LON_ALT_BOX_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north']),\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'minLodPixels': makeObjectPropertySetter(readDecimal),\n  'maxLodPixels': makeObjectPropertySetter(readDecimal),\n  'minFadeExtent': makeObjectPropertySetter(readDecimal),\n  'maxFadeExtent': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  const object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  // KML spec only allows one LinearRing  per innerBoundaryIs, but Google Earth\n  // allows multiple, so we parse multiple here too.\n  'LinearRing': makeArrayPusher(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  const innerBoundaryFlatLinearRings = pushParseAndPop(\n    /** @type {Array<Array<number>>} */ ([]),\n    INNER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack,\n  );\n  if (innerBoundaryFlatLinearRings.length > 0) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(...innerBoundaryFlatLinearRings);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(\n    undefined,\n    OUTER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack,\n  );\n  if (flatLinearRing) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  const rgba = asArray(color);\n  const opacity = rgba.length == 4 ? rgba[3] : 1;\n  /** @type {Array<string|number>} */\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (let i = 0; i < 4; ++i) {\n    const hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n    abgr[i] = hex.length == 1 ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == 'XY' || layout == 'XYM') {\n    dimension = 2;\n  } else if (layout == 'XYZ' || layout == 'XYZM') {\n    dimension = 3;\n  } else {\n    throw new Error('Invalid geometry layout');\n  }\n\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (let d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (let i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (let d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': makeChildAppender(writeDataNode),\n  'value': makeChildAppender(writeDataNodeValue),\n  'displayName': makeChildAppender(writeDataNodeName),\n});\n\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.displayName],\n        objectStack,\n        ['displayName'],\n      );\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.value],\n        objectStack,\n        ['value'],\n      );\n    }\n  } else {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      [value],\n      objectStack,\n      ['value'],\n    );\n  }\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst DOCUMENT_NODE_FACTORY = function (value, objectStack, nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    DOCUMENT_SERIALIZERS,\n    DOCUMENT_NODE_FACTORY,\n    features,\n    objectStack,\n    undefined,\n    this,\n  );\n}\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n/**\n * @param {Element} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      DATA_NODE_FACTORY,\n      [{name: names[i], value: values[i]}],\n      objectStack,\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS,\n  ['href'],\n  makeStructureNS(GX_NAMESPACE_URIS, ['x', 'y', 'w', 'h']),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeChildAppender(writeStringTextNode),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeChildAppender(writeDecimalTextNode),\n    'y': makeChildAppender(writeDecimalTextNode),\n    'w': makeChildAppender(writeDecimalTextNode),\n    'h': makeChildAppender(writeDecimalTextNode),\n  }),\n);\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GX_NODE_FACTORY = function (value, objectStack, nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + nodeName);\n};\n\n/**\n * @param {Element} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  let values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n  orderedKeys = ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    GX_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'scale',\n  'heading',\n  'Icon',\n  'color',\n  'hotSpot',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeChildAppender(writeIcon),\n  'color': makeChildAppender(writeColorTextNode),\n  'heading': makeChildAppender(writeDecimalTextNode),\n  'hotSpot': makeChildAppender(writeVec2),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const /** @type {Object<string, any>} */ properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src,\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {Vec2} */ hotSpot = {\n          x: anchor[0],\n          xunits: 'pixels',\n          y: size[1] - anchor[1],\n          yunits: 'pixels',\n        };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  let scale = style.getScaleArray()[0];\n  let imageSize = size;\n  if (imageSize === null) {\n    imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n  }\n  if (imageSize.length == 2) {\n    const resizeScale = scaleForSize(imageSize);\n    scale = scale / resizeScale;\n  }\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const color = style.getColor();\n  if (color) {\n    properties['color'] = color;\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'scale',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LABEL_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'width']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'width': makeChildAppender(writeDecimalTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': Number(style.getWidth()) || 1,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LINE_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry',\n};\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GEOMETRY_NODE_FACTORY = function (value, objectStack, nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      parentNode.namespaceURI,\n      GEOMETRY_TYPE_TO_NODENAME[\n        /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType()\n      ],\n    );\n  }\n};\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'GeometryCollection': makeChildAppender(writeMultiGeometry),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n  let geometries = [];\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type === 'GeometryCollection') {\n    /** @type {GeometryCollection} */ (geometry)\n      .getGeometriesArrayRecursive()\n      .forEach(function (geometry) {\n        const type = geometry.getType();\n        if (type === 'MultiPoint') {\n          geometries = geometries.concat(\n            /** @type {MultiPoint} */ (geometry).getPoints(),\n          );\n        } else if (type === 'MultiLineString') {\n          geometries = geometries.concat(\n            /** @type {MultiLineString} */ (geometry).getLineStrings(),\n          );\n        } else if (type === 'MultiPolygon') {\n          geometries = geometries.concat(\n            /** @type {MultiPolygon} */ (geometry).getPolygons(),\n          );\n        } else if (\n          type === 'Point' ||\n          type === 'LineString' ||\n          type === 'Polygon'\n        ) {\n          geometries.push(geometry);\n        } else {\n          throw new Error('Unknown geometry type');\n        }\n      });\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type === 'MultiPoint') {\n    geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type === 'MultiLineString') {\n    geometries = /** @type {MultiLineString} */ (geometry).getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type === 'MultiPolygon') {\n    geometries = /** @type {MultiPolygon} */ (geometry).getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    throw new Error('Unknown geometry type');\n  }\n  pushSerializeAndPop(\n    context,\n    MULTI_GEOMETRY_SERIALIZERS,\n    factory,\n    geometries,\n    objectStack,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    BOUNDARY_IS_SERIALIZERS,\n    LINEAR_RING_NODE_FACTORY,\n    [linearRing],\n    objectStack,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': makeChildAppender(writeExtendedData),\n  'MultiGeometry': makeChildAppender(writeMultiGeometry),\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'Style': makeChildAppender(writeStyle),\n  'address': makeChildAppender(writeStringTextNode),\n  'description': makeChildAppender(writeStringTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'open': makeChildAppender(writeBooleanTextNode),\n  'phoneNumber': makeChildAppender(writeStringTextNode),\n  'styleUrl': makeChildAppender(writeStringTextNode),\n  'visibility': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'open',\n  'visibility',\n  'address',\n  'phoneNumber',\n  'description',\n  'styleUrl',\n  'Style',\n]);\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', /** @type {string} */ (feature.getId()));\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {\n    'address': 1,\n    'description': 1,\n    'name': 1,\n    'open': 1,\n    'phoneNumber': 1,\n    'styleUrl': 1,\n    'visibility': 1,\n  };\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {})\n    .sort()\n    .filter(function (v) {\n      return !filter[v];\n    });\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction(feature, 0);\n    if (styles) {\n      const styleArray = Array.isArray(styles) ? styles : [styles];\n      let pointStyles = styleArray;\n      if (feature.getGeometry()) {\n        pointStyles = styleArray.filter(function (style) {\n          const geometry = style.getGeometryFunction()(feature);\n          if (geometry) {\n            const type = geometry.getType();\n            if (type === 'GeometryCollection') {\n              return /** @type {GeometryCollection} */ (geometry)\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type === 'Point' || type === 'MultiPoint';\n                }).length;\n            }\n            return type === 'Point' || type === 'MultiPoint';\n          }\n        });\n        ('Point');\n      }\n      if (this.writeStyles_) {\n        let lineStyles = styleArray;\n        let polyStyles = styleArray;\n        if (feature.getGeometry()) {\n          lineStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === 'GeometryCollection') {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return type === 'LineString' || type === 'MultiLineString';\n                  }).length;\n              }\n              return type === 'LineString' || type === 'MultiLineString';\n            }\n          });\n          polyStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === 'GeometryCollection') {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return type === 'Polygon' || type === 'MultiPolygon';\n                  }).length;\n              }\n              return type === 'Polygon' || type === 'MultiPolygon';\n            }\n          });\n        }\n        properties['Style'] = {\n          pointStyles: pointStyles,\n          lineStyles: lineStyles,\n          polyStyles: polyStyles,\n        };\n      }\n      if (pointStyles.length && properties['name'] === undefined) {\n        const textStyle = pointStyles[0].getText();\n        if (textStyle) {\n          properties['name'] = textStyle.getText();\n        }\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n\n  if (keys.length > 0) {\n    const sequence = makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    pushSerializeAndPop(\n      context,\n      PLACEMARK_SERIALIZERS,\n      EXTENDEDDATA_NODE_FACTORY,\n      [namesAndValues],\n      objectStack,\n    );\n  }\n\n  // serialize geometry\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformGeometryWithOptions(geometry, true, options);\n  }\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    GEOMETRY_NODE_FACTORY,\n    [geometry],\n    objectStack,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'extrude',\n  'tessellate',\n  'altitudeMode',\n  'coordinates',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeChildAppender(writeBooleanTextNode),\n  'tessellate': makeChildAppender(writeBooleanTextNode),\n  'altitudeMode': makeChildAppender(writeStringTextNode),\n  'coordinates': makeChildAppender(writeCoordinatesTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PRIMITIVE_GEOMETRY_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'fill',\n  'outline',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n  'innerBoundaryIs': makeChildAppender(writeBoundaryIs),\n});\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n/**\n * @param {Element} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  // inner rings\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    INNER_BOUNDARY_NODE_FACTORY,\n    linearRings,\n    objectStack,\n  );\n  // outer ring\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    OUTER_BOUNDARY_NODE_FACTORY,\n    [outerRing],\n    objectStack,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'fill': makeChildAppender(writeBooleanTextNode),\n  'outline': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const fill = style.getFill();\n  const stroke = style.getStroke();\n  const properties = {\n    'color': fill ? fill.getColor() : undefined,\n    'fill': fill ? undefined : false,\n    'outline': stroke ? undefined : false,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = POLY_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    POLY_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'IconStyle',\n  'LabelStyle',\n  'LineStyle',\n  'PolyStyle',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': makeChildAppender(writeIconStyle),\n  'LabelStyle': makeChildAppender(writeLabelStyle),\n  'LineStyle': makeChildAppender(writeLineStyle),\n  'PolyStyle': makeChildAppender(writePolyStyle),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Object<string, Array<Style>>} styles Styles.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, styles, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  if (styles.pointStyles.length) {\n    const textStyle = styles.pointStyles[0].getText();\n    if (textStyle) {\n      properties['LabelStyle'] = textStyle;\n    }\n    const imageStyle = styles.pointStyles[0].getImage();\n    if (\n      imageStyle &&\n      typeof (/** @type {?} */ (imageStyle).getSrc) === 'function'\n    ) {\n      properties['IconStyle'] = imageStyle;\n    }\n  }\n  if (styles.lineStyles.length) {\n    const strokeStyle = styles.lineStyles[0].getStroke();\n    if (strokeStyle) {\n      properties['LineStyle'] = strokeStyle;\n    }\n  }\n  if (styles.polyStyles.length) {\n    const strokeStyle = styles.polyStyles[0].getStroke();\n    if (strokeStyle && !properties['LineStyle']) {\n      properties['LineStyle'] = strokeStyle;\n    }\n    properties['PolyStyle'] = styles.polyStyles[0];\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', String(vec2.x));\n  node.setAttribute('y', String(vec2.y));\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\nexport default KML;\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos;\n        var pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return readUtf8TextDecoder(this.buf, pos, end);\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport {get} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureClass} FeatureClassToFeature\n * @typedef {Object} Options\n * @property {FeatureClassToFeature} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @template {import('../Feature.js').FeatureClass} [T=typeof import(\"../render/Feature.js\").default]\n * @extends {FeatureFormat<T>}\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options<T>} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    this.featureClass = options.featureClass\n      ? options.featureClass\n      : /** @type {T} */ (RenderFeature);\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1],\n          );\n          coordsLen += 2;\n        }\n      } else {\n        throw new Error('Invalid command found in the PBF');\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass === RenderFeature) {\n      feature = new /** @type {typeof RenderFeature} */ (this.featureClass)(\n        geometryType,\n        flatCoordinates,\n        ends,\n        2,\n        values,\n        id,\n      );\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n              ? new LineString(flatCoordinates, 'XY')\n              : geometryType === 'MultiPoint'\n                ? new MultiPoint(flatCoordinates, 'XY')\n                : geometryType === 'MultiLineString'\n                  ? new MultiLineString(flatCoordinates, 'XY', ends)\n                  : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return feature;\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import('./Feature.js').FeatureClassToFeature<T>>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return /** @type {Array<import('./Feature.js').FeatureClassToFeature<T>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n            ? pbf.readFloat()\n            : tag === 3\n              ? pbf.readDouble()\n              : tag === 4\n                ? pbf.readVarint64()\n                : tag === 5\n                  ? pbf.readVarint()\n                  : tag === 6\n                    ? pbf.readSVarint()\n                    : tag === 7\n                      ? pbf.readBoolean()\n                      : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../render/Feature.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../render/Feature.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/format/OSMXML\n */\n// FIXME add typedef for stack state objects\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport XMLFeature from './XMLFeature.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {makeStructureNS, pushParseAndPop} from '../xml.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @const\n * @type {Array<null>}\n */\nconst NAMESPACE_URIS = [null];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WAY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'nd': readNd,\n  'tag': readTag,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'node': readNode,\n  'way': readWay,\n});\n\n/**\n * @classdesc\n * Feature format for reading data in the\n * [OSMXML format](https://wiki.openstreetmap.org/wiki/OSM_XML).\n *\n * @api\n */\nclass OSMXML extends XMLFeature {\n  constructor() {\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    options = this.getReadOptions(node, options);\n    if (node.localName == 'osm') {\n      const state = pushParseAndPop(\n        {\n          nodes: {},\n          ways: [],\n          features: [],\n        },\n        PARSERS,\n        node,\n        [options],\n      );\n      // parse nodes in ways\n      for (let j = 0; j < state.ways.length; j++) {\n        const values = /** @type {Object} */ (state.ways[j]);\n        /** @type {Array<number>} */\n        const flatCoordinates = values.flatCoordinates;\n        if (!flatCoordinates.length) {\n          for (let i = 0, ii = values.ndrefs.length; i < ii; i++) {\n            const point = state.nodes[values.ndrefs[i]];\n            extend(flatCoordinates, point);\n          }\n        }\n        let geometry;\n        if (values.ndrefs[0] == values.ndrefs[values.ndrefs.length - 1]) {\n          // closed way\n          geometry = new Polygon(flatCoordinates, 'XY', [\n            flatCoordinates.length,\n          ]);\n        } else {\n          geometry = new LineString(flatCoordinates, 'XY');\n        }\n        transformGeometryWithOptions(geometry, false, options);\n        const feature = new Feature(geometry);\n        if (values.id !== undefined) {\n          feature.setId(values.id);\n        }\n        feature.setProperties(values.tags, true);\n        state.features.push(feature);\n      }\n      if (state.features) {\n        return state.features;\n      }\n    }\n    return [];\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'tag': readTag,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNode(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const id = node.getAttribute('id');\n  /** @type {import(\"../coordinate.js\").Coordinate} */\n  const coordinates = [\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')),\n  ];\n  state.nodes[id] = coordinates;\n\n  const values = pushParseAndPop(\n    {\n      tags: {},\n    },\n    NODE_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!isEmpty(values.tags)) {\n    const geometry = new Point(coordinates);\n    transformGeometryWithOptions(geometry, false, options);\n    const feature = new Feature(geometry);\n    if (id !== undefined) {\n      feature.setId(id);\n    }\n    feature.setProperties(values.tags, true);\n    state.features.push(feature);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readWay(node, objectStack) {\n  const id = node.getAttribute('id');\n  const values = pushParseAndPop(\n    {\n      id: id,\n      ndrefs: [],\n      flatCoordinates: [],\n      tags: {},\n    },\n    WAY_PARSERS,\n    node,\n    objectStack,\n  );\n  const state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  state.ways.push(values);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNd(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values.ndrefs.push(node.getAttribute('ref'));\n  if (node.hasAttribute('lon') && node.hasAttribute('lat')) {\n    values.flatCoordinates.push(parseFloat(node.getAttribute('lon')));\n    values.flatCoordinates.push(parseFloat(node.getAttribute('lat')));\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readTag(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values.tags[node.getAttribute('k')] = node.getAttribute('v');\n}\n\nexport default OSMXML;\n","/**\n * @module ol/format/XML\n */\nimport {abstract} from '../util.js';\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nclass XML {\n  /**\n   * Read the source document.\n   *\n   * @param {Document|Element|string} source The XML source.\n   * @return {Object|null} An object representing the source.\n   * @api\n   */\n  read(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Object|null} Object\n   */\n  readFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   */\n  readFromNode(node) {\n    abstract();\n  }\n}\n\nexport default XML;\n","/**\n * @module ol/format/xlink\n */\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n/**\n * @param {Element} node Node.\n * @return {string|null} href.\n */\nexport function readHref(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n","/**\n * @module ol/format/OWS\n */\nimport XML from './XML.js';\nimport {\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readHref} from './xlink.js';\nimport {readString} from './xsd.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n  'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n  'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata),\n});\n\nclass OWS extends XML {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   */\n  readFromNode(node) {\n    const owsObject = pushParseAndPop({}, PARSERS, node, []);\n    return owsObject ? owsObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DeliveryPoint': makeObjectPropertySetter(readString),\n  'City': makeObjectPropertySetter(readString),\n  'AdministrativeArea': makeObjectPropertySetter(readString),\n  'PostalCode': makeObjectPropertySetter(readString),\n  'Country': makeObjectPropertySetter(readString),\n  'ElectronicMailAddress': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ALLOWED_VALUES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Value': makeObjectPropertyPusher(readValue),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONSTRAINT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'AllowedValues': makeObjectPropertySetter(readAllowedValues),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_INFO_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Phone': makeObjectPropertySetter(readPhone),\n  'Address': makeObjectPropertySetter(readAddress),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DCP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'HTTP': makeObjectPropertySetter(readHttp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Get': makeObjectPropertyPusher(readGet),\n  'Post': undefined, // TODO\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DCP': makeObjectPropertySetter(readDcp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATIONS_METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Operation': readOperation,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PHONE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Voice': makeObjectPropertySetter(readString),\n  'Facsimile': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REQUEST_METHOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Constraint': makeObjectPropertyPusher(readConstraint),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_CONTACT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IndividualName': makeObjectPropertySetter(readString),\n  'PositionName': makeObjectPropertySetter(readString),\n  'ContactInfo': makeObjectPropertySetter(readContactInfo),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_IDENTIFICATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Abstract': makeObjectPropertySetter(readString),\n  'AccessConstraints': makeObjectPropertySetter(readString),\n  'Fees': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'ServiceTypeVersion': makeObjectPropertySetter(readString),\n  'ServiceType': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PROVIDER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ProviderName': makeObjectPropertySetter(readString),\n  'ProviderSite': makeObjectPropertySetter(readHref),\n  'ServiceContact': makeObjectPropertySetter(readServiceContact),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({}, ADDRESS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({}, ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({'name': name}, CONSTRAINT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({}, DCP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  const href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop(\n    {'href': href},\n    REQUEST_METHOD_PARSERS,\n    node,\n    objectStack,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = pushParseAndPop({}, OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  object[name] = value;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONS_METADATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({}, PHONE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_IDENTIFICATION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_CONTACT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PROVIDER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\n\nexport default OWS;\n","/**\n * @module ol/format/Polyline\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport TextFeature from './TextFeature.js';\nimport {flipXY} from '../geom/flat/flip.js';\nimport {get as getProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the format reader.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the Encoded\n * Polyline Algorithm Format.\n *\n * When reading features, the coordinates are assumed to be in two dimensions\n * and in [latitude, longitude] order.\n *\n * As Polyline sources contain a single feature,\n * {@link module:ol/format/Polyline~Polyline#readFeatures} will return the\n * feature in an array.\n *\n * @api\n */\nclass Polyline extends TextFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.factor_ = options.factor ? options.factor : 1e5;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    const geometry = this.readGeometryFromText(text, options);\n    return new Feature(geometry);\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    const feature = this.readFeatureFromText(text, options);\n    return [feature];\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, options) {\n    const stride = getStrideForLayout(this.geometryLayout_);\n    const flatCoordinates = decodeDeltas(text, stride, this.factor_);\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    const coordinates = inflateCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    const lineString = new LineString(coordinates, this.geometryLayout_);\n\n    return transformGeometryWithOptions(\n      lineString,\n      false,\n      this.adaptOptions(options),\n    );\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default<LineString>} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, options) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, options);\n    }\n    throw new Error('Expected `feature` to have a geometry');\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default<LineString>>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, options) {\n    return this.writeFeatureText(features[0], options);\n  }\n\n  /**\n   * @param {LineString} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, options) {\n    geometry =\n      /** @type {LineString} */\n      (\n        transformGeometryWithOptions(geometry, true, this.adaptOptions(options))\n      );\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    return encodeDeltas(flatCoordinates, stride, this.factor_);\n  }\n}\n\n/**\n * Encode a list of n-dimensional points and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of n-dimensional points.\n * @param {number} stride The number of dimension of the points in the list.\n * @param {number} [factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeDeltas(numbers, stride, factor) {\n  factor = factor ? factor : 1e5;\n  let d;\n\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      const num = numbers[i];\n      const delta = num - lastNumbers[d];\n      lastNumbers[d] = num;\n\n      numbers[i] = delta;\n    }\n  }\n\n  return encodeFloats(numbers, factor);\n}\n\n/**\n * Decode a list of n-dimensional points from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} stride The number of dimension of the points in the\n *     encoded string.\n * @param {number} [factor] The factor by which the resulting numbers will\n *     be divided. Default is `1e5`.\n * @return {Array<number>} A list of n-dimensional points.\n * @api\n */\nexport function decodeDeltas(encoded, stride, factor) {\n  factor = factor ? factor : 1e5;\n  let d;\n\n  /** @type {Array<number>} */\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  const numbers = decodeFloats(encoded, factor);\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      lastNumbers[d] += numbers[i];\n\n      numbers[i] = lastNumbers[d];\n    }\n  }\n\n  return numbers;\n}\n\n/**\n * Encode a list of floating point numbers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of floating point numbers.\n * @param {number} [factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeFloats(numbers, factor) {\n  factor = factor ? factor : 1e5;\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] = Math.round(numbers[i] * factor);\n  }\n\n  return encodeSignedIntegers(numbers);\n}\n\n/**\n * Decode a list of floating point numbers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} [factor] The factor by which the result will be divided.\n *     Default is `1e5`.\n * @return {Array<number>} A list of floating point numbers.\n * @api\n */\nexport function decodeFloats(encoded, factor) {\n  factor = factor ? factor : 1e5;\n  const numbers = decodeSignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] /= factor;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of signed integers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of signed integers.\n * @return {string} The encoded string.\n */\nexport function encodeSignedIntegers(numbers) {\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num < 0 ? ~(num << 1) : num << 1;\n  }\n  return encodeUnsignedIntegers(numbers);\n}\n\n/**\n * Decode a list of signed integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of signed integers.\n */\nexport function decodeSignedIntegers(encoded) {\n  const numbers = decodeUnsignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num & 1 ? ~(num >> 1) : num >> 1;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of unsigned integers and return an encoded string\n *\n * @param {Array<number>} numbers A list of unsigned integers.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedIntegers(numbers) {\n  let encoded = '';\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    encoded += encodeUnsignedInteger(numbers[i]);\n  }\n  return encoded;\n}\n\n/**\n * Decode a list of unsigned integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of unsigned integers.\n */\nexport function decodeUnsignedIntegers(encoded) {\n  const numbers = [];\n  let current = 0;\n  let shift = 0;\n  for (let i = 0, ii = encoded.length; i < ii; ++i) {\n    const b = encoded.charCodeAt(i) - 63;\n    current |= (b & 0x1f) << shift;\n    if (b < 0x20) {\n      numbers.push(current);\n      current = 0;\n      shift = 0;\n    } else {\n      shift += 5;\n    }\n  }\n  return numbers;\n}\n\n/**\n * Encode one single unsigned integer and return an encoded string\n *\n * @param {number} num Unsigned integer that should be encoded.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedInteger(num) {\n  let value,\n    encoded = '';\n  while (num >= 0x20) {\n    value = (0x20 | (num & 0x1f)) + 63;\n    encoded += String.fromCharCode(value);\n    num >>= 5;\n  }\n  value = num + 63;\n  encoded += String.fromCharCode(value);\n  return encoded;\n}\n\nexport default Polyline;\n","/**\n * @module ol/format/TopoJSON\n */\nimport Feature from '../Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"topojson-specification\").Topology} TopoJSONTopology\n * @typedef {import(\"topojson-specification\").GeometryCollection} TopoJSONGeometryCollection\n * @typedef {import(\"topojson-specification\").GeometryObject} TopoJSONGeometry\n * @typedef {import(\"topojson-specification\").Point} TopoJSONPoint\n * @typedef {import(\"topojson-specification\").MultiPoint} TopoJSONMultiPoint\n * @typedef {import(\"topojson-specification\").LineString} TopoJSONLineString\n * @typedef {import(\"topojson-specification\").MultiLineString} TopoJSONMultiLineString\n * @typedef {import(\"topojson-specification\").Polygon} TopoJSONPolygon\n * @typedef {import(\"topojson-specification\").MultiPolygon} TopoJSONMultiPolygon\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {string} [layerName] Set the name of the TopoJSON topology\n * `objects`'s children as feature property with the specified name. This means\n * that when set to `'layer'`, a topology like\n * ```\n * {\n *   \"type\": \"Topology\",\n *   \"objects\": {\n *     \"example\": {\n *       \"type\": \"GeometryCollection\",\n *       \"geometries\": []\n *     }\n *   }\n * }\n * ```\n * will result in features that have a property `'layer'` set to `'example'`.\n * When not set, no property will be added to features.\n * @property {Array<string>} [layers] Names of the TopoJSON topology's\n * `objects`'s children to read features from.  If not provided, features will\n * be read from all children.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the TopoJSON format.\n *\n * @api\n */\nclass TopoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.layerName_ = options.layerName;\n\n    /**\n     * @private\n     * @type {?Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326',\n    );\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    if (object.type == 'Topology') {\n      const topoJSONTopology = /** @type {TopoJSONTopology} */ (object);\n      let transform,\n        scale = null,\n        translate = null;\n      if (topoJSONTopology['transform']) {\n        transform = topoJSONTopology['transform'];\n        scale = transform['scale'];\n        translate = transform['translate'];\n      }\n      const arcs = topoJSONTopology['arcs'];\n      if (transform) {\n        transformArcs(arcs, scale, translate);\n      }\n      /** @type {Array<Feature>} */\n      const features = [];\n      const topoJSONFeatures = topoJSONTopology['objects'];\n      const property = this.layerName_;\n      let feature;\n      for (const objectName in topoJSONFeatures) {\n        if (this.layers_ && !this.layers_.includes(objectName)) {\n          continue;\n        }\n        if (topoJSONFeatures[objectName].type === 'GeometryCollection') {\n          feature = /** @type {TopoJSONGeometryCollection} */ (\n            topoJSONFeatures[objectName]\n          );\n          features.push.apply(\n            features,\n            readFeaturesFromGeometryCollection(\n              feature,\n              arcs,\n              scale,\n              translate,\n              property,\n              objectName,\n              options,\n            ),\n          );\n        } else {\n          feature = /** @type {TopoJSONGeometry} */ (\n            topoJSONFeatures[objectName]\n          );\n          features.push(\n            readFeatureFromGeometry(\n              feature,\n              arcs,\n              scale,\n              translate,\n              property,\n              objectName,\n              options,\n            ),\n          );\n        }\n      }\n      return features;\n    }\n    return [];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return this.dataProjection;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, function(TopoJSONGeometry, Array, ...Array=): import(\"../geom/Geometry.js\").default>}\n */\nconst GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry,\n};\n\n/**\n * Concatenate arcs into a coordinate array.\n * @param {Array<number>} indices Indices of arcs to concatenate.  Negative\n *     values indicate arcs need to be reversed.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs (already\n *     transformed).\n * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates array.\n */\nfunction concatenateArcs(indices, arcs) {\n  /** @type {Array<import(\"../coordinate.js\").Coordinate>} */\n  const coordinates = [];\n  let index;\n  for (let i = 0, ii = indices.length; i < ii; ++i) {\n    index = indices[i];\n    if (i > 0) {\n      // splicing together arcs, discard last point\n      coordinates.pop();\n    }\n    if (index >= 0) {\n      // forward arc\n      const arc = arcs[index];\n      for (let j = 0, jj = arc.length; j < jj; ++j) {\n        coordinates.push(arc[j].slice(0));\n      }\n    } else {\n      // reverse arc\n      const arc = arcs[~index];\n      for (let j = arc.length - 1; j >= 0; --j) {\n        coordinates.push(arc[j].slice(0));\n      }\n    }\n  }\n  return coordinates;\n}\n\n/**\n * Create a point from a TopoJSON geometry object.\n *\n * @param {TopoJSONPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {Point} Geometry.\n */\nfunction readPointGeometry(object, scale, translate) {\n  const coordinates = object['coordinates'];\n  if (scale && translate) {\n    transformVertex(coordinates, scale, translate);\n  }\n  return new Point(coordinates);\n}\n\n/**\n * Create a multi-point from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {MultiPoint} Geometry.\n */\nfunction readMultiPointGeometry(object, scale, translate) {\n  const coordinates = object['coordinates'];\n  if (scale && translate) {\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      transformVertex(coordinates[i], scale, translate);\n    }\n  }\n  return new MultiPoint(coordinates);\n}\n\n/**\n * Create a linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {LineString} Geometry.\n */\nfunction readLineStringGeometry(object, arcs) {\n  const coordinates = concatenateArcs(object['arcs'], arcs);\n  return new LineString(coordinates);\n}\n\n/**\n * Create a multi-linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiLineString} Geometry.\n */\nfunction readMultiLineStringGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n  }\n  return new MultiLineString(coordinates);\n}\n\n/**\n * Create a polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {Polygon} Geometry.\n */\nfunction readPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n  }\n  return new Polygon(coordinates);\n}\n\n/**\n * Create a multi-polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiPolygon} Geometry.\n */\nfunction readMultiPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    // for each polygon\n    const polyArray = object['arcs'][i];\n    const ringCoords = [];\n    for (let j = 0, jj = polyArray.length; j < jj; ++j) {\n      // for each ring\n      ringCoords[j] = concatenateArcs(polyArray[j], arcs);\n    }\n    coordinates[i] = ringCoords;\n  }\n  return new MultiPolygon(coordinates);\n}\n\n/**\n * Create features from a TopoJSON GeometryCollection object.\n *\n * @param {TopoJSONGeometryCollection} collection TopoJSON Geometry\n *     object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {Array<Feature>} Array of features.\n */\nfunction readFeaturesFromGeometryCollection(\n  collection,\n  arcs,\n  scale,\n  translate,\n  property,\n  name,\n  options,\n) {\n  const geometries = collection['geometries'];\n  const features = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    features[i] = readFeatureFromGeometry(\n      geometries[i],\n      arcs,\n      scale,\n      translate,\n      property,\n      name,\n      options,\n    );\n  }\n  return features;\n}\n\n/**\n * Create a feature from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON geometry object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {Feature} Feature.\n */\nfunction readFeatureFromGeometry(\n  object,\n  arcs,\n  scale,\n  translate,\n  property,\n  name,\n  options,\n) {\n  let geometry = null;\n  const type = object.type;\n  if (type) {\n    const geometryReader = GEOMETRY_READERS[type];\n    if (type === 'Point' || type === 'MultiPoint') {\n      geometry = geometryReader(object, scale, translate);\n    } else {\n      geometry = geometryReader(object, arcs);\n    }\n    geometry = transformGeometryWithOptions(geometry, false, options);\n  }\n  const feature = new Feature({geometry: geometry});\n  if (object.id !== undefined) {\n    feature.setId(object.id);\n  }\n  let properties = object.properties;\n  if (property) {\n    if (!properties) {\n      properties = {};\n    }\n    properties[property] = name;\n  }\n  if (properties) {\n    feature.setProperties(properties, true);\n  }\n  return feature;\n}\n\n/**\n * Apply a linear transform to array of arcs.  The provided array of arcs is\n * modified in place.\n *\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArcs(arcs, scale, translate) {\n  for (let i = 0, ii = arcs.length; i < ii; ++i) {\n    transformArc(arcs[i], scale, translate);\n  }\n}\n\n/**\n * Apply a linear transform to an arc.  The provided arc is modified in place.\n *\n * @param {Array<import(\"../coordinate.js\").Coordinate>} arc Arc.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArc(arc, scale, translate) {\n  let x = 0;\n  let y = 0;\n  for (let i = 0, ii = arc.length; i < ii; ++i) {\n    const vertex = arc[i];\n    x += vertex[0];\n    y += vertex[1];\n    vertex[0] = x;\n    vertex[1] = y;\n    transformVertex(vertex, scale, translate);\n  }\n}\n\n/**\n * Apply a linear transform to a vertex.  The provided vertex is modified in\n * place.\n *\n * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformVertex(vertex, scale, translate) {\n  vertex[0] = vertex[0] * scale[0] + translate[0];\n  vertex[1] = vertex[1] * scale[1] + translate[1];\n}\n\nexport default TopoJSON;\n","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport Feature from '../Feature.js';\nimport Geometry from '../geom/Geometry.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport XMLFeature from './XMLFeature.js';\nimport {extend} from '../array.js';\nimport {\n  getAllTextContent,\n  getAttributeNS,\n  makeArrayPusher,\n  makeReplacer,\n  parseNode,\n  pushParseAndPop,\n} from '../xml.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\n\n/**\n * @const\n * @type {string}\n */\nexport const GMLNS = 'http://www.opengis.net/gml';\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc.\n *\n * @const\n * @type {RegExp}\n */\nconst ONLY_WHITESPACE_RE = /^\\s*$/;\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] Feature\n * namespace. If not defined will be derived from GML. If multiple\n * feature types have been configured which come from different feature\n * namespaces, this will be an object with the keys being the prefixes used\n * in the entries of featureType array. The values of the object will be the\n * feature namespaces themselves. So for instance there might be a featureType\n * item `topp:states` in the `featureType` array and then there will be a key\n * `topp` in the featureNS object with value `http://www.openplans.org/topp`.\n * @property {Array<string>|string} [featureType] Feature type(s) to parse.\n * If multiple feature types need to be configured\n * which come from different feature namespaces, `featureNS` will be an object\n * with the keys being the prefixes used in the entries of featureType array.\n * The values of the object will be the feature namespaces themselves.\n * So for instance there might be a featureType item `topp:states` and then\n * there will be a key named `topp` in the featureNS object with value\n * `http://www.openplans.org/topp`.\n * @property {string} [srsName] srsName to use when writing geometries.\n * @property {boolean} [surface=false] Write gml:Surface instead of gml:Polygon\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [curve=false] Write gml:Curve instead of gml:LineString\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [multiCurve=true] Write gml:MultiCurve instead of gml:MultiLineString.\n * Since the latter is deprecated in GML 3.\n * @property {boolean} [multiSurface=true] Write gml:multiSurface instead of\n * gml:MultiPolygon. Since the latter is deprecated in GML 3.\n * @property {string} [schemaLocation] Optional schemaLocation to use when\n * writing out the GML, this will override the default provided.\n * @property {boolean} [hasZ=false] If coordinates have a Z value.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes GML2 and GML3.\n *\n * @abstract\n * @api\n */\nclass GMLBase extends XMLFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @protected\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType = options.featureType;\n\n    /**\n     * @protected\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS = options.featureNS;\n\n    /**\n     * @protected\n     * @type {string|undefined}\n     */\n    this.srsName = options.srsName;\n\n    /**\n     * @protected\n     * @type {string}\n     */\n    this.schemaLocation = '';\n\n    /**\n     * @type {Object<string, Object<string, Object>>}\n     */\n    this.FEATURE_COLLECTION_PARSERS = {};\n    this.FEATURE_COLLECTION_PARSERS[this.namespace] = {\n      'featureMember': makeArrayPusher(this.readFeaturesInternal),\n      'featureMembers': makeReplacer(this.readFeaturesInternal),\n    };\n\n    this.supportedMediaTypes = ['application/gml+xml'];\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<Feature> | undefined} Features.\n   */\n  readFeaturesInternal(node, objectStack) {\n    const localName = node.localName;\n    let features = null;\n    if (localName == 'FeatureCollection') {\n      features = pushParseAndPop(\n        [],\n        this.FEATURE_COLLECTION_PARSERS,\n        node,\n        objectStack,\n        this,\n      );\n    } else if (\n      localName == 'featureMembers' ||\n      localName == 'featureMember' ||\n      localName == 'member'\n    ) {\n      const context = objectStack[0];\n      let featureType = context['featureType'];\n      let featureNS = context['featureNS'];\n      const prefix = 'p';\n      const defaultPrefix = 'p0';\n      if (!featureType && node.childNodes) {\n        (featureType = []), (featureNS = {});\n        for (let i = 0, ii = node.childNodes.length; i < ii; ++i) {\n          const child = /** @type {Element} */ (node.childNodes[i]);\n          if (child.nodeType === 1) {\n            const ft = child.nodeName.split(':').pop();\n            if (!featureType.includes(ft)) {\n              let key = '';\n              let count = 0;\n              const uri = child.namespaceURI;\n              for (const candidate in featureNS) {\n                if (featureNS[candidate] === uri) {\n                  key = candidate;\n                  break;\n                }\n                ++count;\n              }\n              if (!key) {\n                key = prefix + count;\n                featureNS[key] = uri;\n              }\n              featureType.push(key + ':' + ft);\n            }\n          }\n        }\n        if (localName != 'featureMember') {\n          // recheck featureType for each featureMember\n          context['featureType'] = featureType;\n          context['featureNS'] = featureNS;\n        }\n      }\n      if (typeof featureNS === 'string') {\n        const ns = featureNS;\n        featureNS = {};\n        featureNS[defaultPrefix] = ns;\n      }\n      /** @type {Object<string, Object<string, import(\"../xml.js\").Parser>>} */\n      const parsersNS = {};\n      const featureTypes = Array.isArray(featureType)\n        ? featureType\n        : [featureType];\n      for (const p in featureNS) {\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        const parsers = {};\n        for (let i = 0, ii = featureTypes.length; i < ii; ++i) {\n          const featurePrefix = featureTypes[i].includes(':')\n            ? featureTypes[i].split(':')[0]\n            : defaultPrefix;\n          if (featurePrefix === p) {\n            parsers[featureTypes[i].split(':').pop()] =\n              localName == 'featureMembers'\n                ? makeArrayPusher(this.readFeatureElement, this)\n                : makeReplacer(this.readFeatureElement, this);\n          }\n        }\n        parsersNS[featureNS[p]] = parsers;\n      }\n      if (localName == 'featureMember' || localName == 'member') {\n        features = pushParseAndPop(undefined, parsersNS, node, objectStack);\n      } else {\n        features = pushParseAndPop([], parsersNS, node, objectStack);\n      }\n    }\n    if (features === null) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent|undefined} Geometry.\n   */\n  readGeometryOrExtent(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    context['srsName'] = node.firstElementChild.getAttribute('srsName');\n    context['srsDimension'] =\n      node.firstElementChild.getAttribute('srsDimension');\n    return pushParseAndPop(\n      null,\n      this.GEOMETRY_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Geometry.\n   */\n  readExtentElement(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    const extent = /** @type {import(\"../extent.js\").Extent} */ (\n      this.readGeometryOrExtent(node, objectStack)\n    );\n    return extent ? transformExtentWithOptions(extent, context) : undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../geom/Geometry.js\").default|undefined} Geometry.\n   */\n  readGeometryElement(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    const geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      this.readGeometryOrExtent(node, objectStack)\n    );\n    return geometry\n      ? transformGeometryWithOptions(geometry, false, context)\n      : undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {boolean} asFeature whether result should be wrapped as a feature.\n   * @return {Feature|Object} Feature\n   */\n  readFeatureElementInternal(node, objectStack, asFeature) {\n    let geometryName;\n    const values = {};\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      let value;\n      const localName = n.localName;\n      // first, check if it is simple attribute\n      if (\n        n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n          (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))\n      ) {\n        value = getAllTextContent(n, false);\n        if (ONLY_WHITESPACE_RE.test(value)) {\n          value = undefined;\n        }\n      } else {\n        if (asFeature) {\n          //if feature, try it as a geometry or extent\n          value =\n            localName === 'boundedBy'\n              ? this.readExtentElement(n, objectStack)\n              : this.readGeometryElement(n, objectStack);\n        }\n        if (!value) {\n          //if not a geometry or not a feature, treat it as a complex attribute\n          value = this.readFeatureElementInternal(n, objectStack, false);\n        } else if (localName !== 'boundedBy') {\n          // boundedBy is an extent and must not be considered as a geometry\n          geometryName = localName;\n        }\n      }\n\n      const len = n.attributes.length;\n      if (len > 0 && !(value instanceof Geometry)) {\n        value = {_content_: value};\n        for (let i = 0; i < len; i++) {\n          const attName = n.attributes[i].name;\n          value[attName] = n.attributes[i].value;\n        }\n      }\n\n      if (values[localName]) {\n        if (!(values[localName] instanceof Array)) {\n          values[localName] = [values[localName]];\n        }\n        values[localName].push(value);\n      } else {\n        values[localName] = value;\n      }\n    }\n    if (!asFeature) {\n      return values;\n    }\n    const feature = new Feature(values);\n    if (geometryName) {\n      feature.setGeometryName(geometryName);\n    }\n    const fid =\n      node.getAttribute('fid') || getAttributeNS(node, this.namespace, 'id');\n    if (fid) {\n      feature.setId(fid);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Feature} Feature.\n   */\n  readFeatureElement(node, objectStack) {\n    return this.readFeatureElementInternal(node, objectStack, true);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Point|undefined} Point.\n   */\n  readPoint(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      return new Point(flatCoordinates, 'XYZ');\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPoint|undefined} MultiPoint.\n   */\n  readMultiPoint(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const coordinates = pushParseAndPop(\n      [],\n      this.MULTIPOINT_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (coordinates) {\n      return new MultiPoint(coordinates);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  readMultiLineString(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTILINESTRING_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (lineStrings) {\n      return new MultiLineString(lineStrings);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiPolygon(node, objectStack) {\n    /** @type {Array<Polygon>} */\n    const polygons = pushParseAndPop(\n      [],\n      this.MULTIPOLYGON_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  pointMemberParser(node, objectStack) {\n    parseNode(this.POINTMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  lineStringMemberParser(node, objectStack) {\n    parseNode(this.LINESTRINGMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  polygonMemberParser(node, objectStack) {\n    parseNode(this.POLYGONMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n  readLineString(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, 'XYZ');\n      return lineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} LinearRing flat coordinates.\n   */\n  readFlatLinearRing(node, objectStack) {\n    const ring = pushParseAndPop(\n      null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (ring) {\n      return ring;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LinearRing|undefined} LinearRing.\n   */\n  readLinearRing(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      return new LinearRing(flatCoordinates, 'XYZ');\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n  readPolygon(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const flatLinearRings = pushParseAndPop(\n      [null],\n      this.FLAT_LINEAR_RINGS_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, 'XYZ', ends);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>} Flat coordinates.\n   */\n  readFlatCoordinatesFromNode(node, objectStack) {\n    return pushParseAndPop(\n      null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, options) {\n    const geometry = this.readGeometryElement(node, [\n      this.getReadOptions(node, options ? options : {}),\n    ]);\n    return geometry ? geometry : null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    const internalOptions = {\n      featureType: this.featureType,\n      featureNS: this.featureNS,\n    };\n    if (internalOptions) {\n      Object.assign(internalOptions, this.getReadOptions(node, options));\n    }\n    const features = this.readFeaturesInternal(node, [internalOptions]);\n    return features || [];\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return getProjection(\n      this.srsName\n        ? this.srsName\n        : node.firstElementChild.getAttribute('srsName'),\n    );\n  }\n}\n\nGMLBase.prototype.namespace = GMLNS;\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTIPOINT_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser,\n    ),\n    'lineStringMembers': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser,\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.POINTMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n  },\n};\n\nexport default GMLBase;\n","/**\n * @module ol/format/GML2\n */\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  createElementNS,\n  getAllTextContent,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n  makeSimpleNodeFactory,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {createOrUpdate} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport {writeStringTextNode} from './xsd.js';\n\n/**\n * @const\n * @type {string}\n */\nconst schemaLocation =\n  GMLNS + ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember',\n};\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @api\n */\nclass GML2 extends GMLBase {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    this.FEATURE_COLLECTION_PARSERS[GMLNS]['featureMember'] = makeArrayPusher(\n      this.readFeaturesInternal,\n    );\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : schemaLocation;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatCoordinates(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n      objectStack[0]\n    );\n    const containerSrs = context['srsName'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      if (proj) {\n        axisOrientation = proj.getAxisOrientation();\n      }\n    }\n    const coordsGroups = s.trim().split(/\\s+/);\n    const flatCoordinates = [];\n    for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n      const coords = coordsGroups[i].split(/,+/);\n      const x = parseFloat(coords[0]);\n      const y = parseFloat(coords[1]);\n      const z = coords.length === 3 ? parseFloat(coords[2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  readBox(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.BOX_PARSERS_,\n      node,\n      objectStack,\n      this,\n    );\n    return createOrUpdate(\n      flatCoordinates[1][0],\n      flatCoordinates[1][1],\n      flatCoordinates[1][3],\n      flatCoordinates[1][4],\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  innerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  outerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const multiCurve = context['multiCurve'];\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        value\n      ).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS('http://www.opengis.net/gml', nodeName);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const keys = [];\n    const values = [];\n    if (feature.hasProperties()) {\n      const properties = feature.getProperties();\n      for (const key in properties) {\n        const value = properties[key];\n        if (value !== null) {\n          keys.push(key);\n          values.push(value);\n          if (\n            key == geometryName ||\n            typeof (/** @type {?} */ (value).getSimplifiedGeometry) ===\n              'function'\n          ) {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] = makeChildAppender(\n                this.writeGeometryElement,\n                this,\n              );\n            }\n          } else {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] =\n                makeChildAppender(writeStringTextNode);\n            }\n          }\n        }\n      }\n    }\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack,\n      keys,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (\n      node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment'\n    ) {\n      const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n      node.appendChild(coordinates);\n      this.writeCoordinates_(coordinates, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLineStringOrCurveMember(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      lines,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const item = Object.assign({}, context);\n    item['node'] = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      value = transformExtentWithOptions(\n        /** @type {import(\"../extent.js\").Extent} */ (geometry),\n        context,\n      );\n    } else {\n      value = transformGeometryWithOptions(\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry),\n        true,\n        context,\n      );\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      this.GEOMETRY_SERIALIZERS,\n      this.GEOMETRY_NODE_FACTORY_,\n      [value],\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {string} namespaceURI XML namespace.\n   * @return {Element} coordinates node.\n   * @private\n   */\n  createCoordinatesNode_(namespaceURI) {\n    const coordinates = createElementNS(namespaceURI, 'coordinates');\n    coordinates.setAttribute('decimal', '.');\n    coordinates.setAttribute('cs', ',');\n    coordinates.setAttribute('ts', ' ');\n\n    return coordinates;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/LineString.js\").default|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCoordinates_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      const point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString(child, line, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS,\n        this.RING_NODE_FACTORY_,\n        rings,\n        objectStack,\n        undefined,\n        this,\n      );\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(\n      parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs',\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeRing(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string} [srsName] Optional srsName\n   * @param {boolean} [hasZ] whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, srsName, hasZ) {\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    let coords =\n      axisOrientation.substr(0, 2) === 'en'\n        ? point[0] + ',' + point[1]\n        : point[1] + ',' + point[0];\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ',' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    const point = geometry.getCoordinates();\n    const coord = this.getCoords_(point, srsName, hasZ);\n    writeStringTextNode(coordinates, coord);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiPoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS,\n      makeSimpleNodeFactory('pointMember'),\n      points,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePointMember(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint(child, point, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLinearRing(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      polygons,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygonMember(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}),\n      this.ENVELOPE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack,\n      keys,\n      this,\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      'http://www.opengis.net/gml',\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName],\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeArrayPusher(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Box': makeReplacer(GML2.prototype.readBox),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(GML2.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML2.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML2.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML2.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML2.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString,\n    ),\n    'LinearRing': makeChildAppender(GML2.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Surface': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Envelope': makeChildAppender(GML2.prototype.writeEnvelope),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember,\n    ),\n    'curveMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': makeChildAppender(GML2.prototype.writeRing),\n    'innerBoundaryIs': makeChildAppender(GML2.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(GML2.prototype.writePointMember),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember,\n    ),\n    'polygonMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\nexport default GML2;\n","/**\n * @module ol/format/GML3\n */\nimport GML2 from './GML2.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n  makeSimpleNodeFactory,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {createOrUpdate} from '../extent.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {readNonNegativeIntegerString, writeStringTextNode} from './xsd.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\n\n/**\n * @const\n * @type {string}\n * @private\n */\nconst schemaLocation =\n  GMLNS +\n  ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n  '1.0.0/gmlsf.xsd';\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember',\n};\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @api\n */\nclass GML3 extends GMLBase {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.surface_ = options.surface !== undefined ? options.surface : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.curve_ = options.curve !== undefined ? options.curve : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiCurve_ =\n      options.multiCurve !== undefined ? options.multiCurve : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiSurface_ =\n      options.multiSurface !== undefined ? options.multiSurface : true;\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : schemaLocation;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hasZ = options.hasZ !== undefined ? options.hasZ : false;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  readMultiCurve(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTICURVE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (lineStrings) {\n      const multiLineString = new MultiLineString(lineStrings);\n      return multiLineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Polygon.\n   */\n  readFlatCurveRing(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTICURVE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    const flatCoordinates = [];\n    for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n      extend(flatCoordinates, lineStrings[i].getFlatCoordinates());\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiSurface(node, objectStack) {\n    /** @type {Array<Polygon>} */\n    const polygons = pushParseAndPop(\n      [],\n      this.MULTISURFACE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  curveMemberParser(node, objectStack) {\n    parseNode(this.CURVEMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  surfaceMemberParser(node, objectStack) {\n    parseNode(this.SURFACEMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  readPatch(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.PATCHES_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  readSegment(node, objectStack) {\n    return pushParseAndPop([], this.SEGMENTS_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  readPolygonPatch(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.FLAT_LINEAR_RINGS_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  readLineStringSegment(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  interiorParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  exteriorParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n  readSurface(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const flatLinearRings = pushParseAndPop(\n      [null],\n      this.SURFACE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, 'XYZ', ends);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n  readCurve(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.CURVE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, 'XYZ');\n      return lineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  readEnvelope(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.ENVELOPE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    return createOrUpdate(\n      flatCoordinates[1][0],\n      flatCoordinates[1][1],\n      flatCoordinates[2][0],\n      flatCoordinates[2][1],\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatPos(node, objectStack) {\n    let s = getAllTextContent(node, false);\n    const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n    /** @type {Array<number>} */\n    const flatCoordinates = [];\n    let m;\n    while ((m = re.exec(s))) {\n      flatCoordinates.push(parseFloat(m[1]));\n      s = s.substr(m[0].length);\n    }\n    if (s !== '') {\n      return undefined;\n    }\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    if (axisOrientation === 'neu') {\n      let i, ii;\n      for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n        const y = flatCoordinates[i];\n        const x = flatCoordinates[i + 1];\n        flatCoordinates[i] = x;\n        flatCoordinates[i + 1] = y;\n      }\n    }\n    const len = flatCoordinates.length;\n    if (len == 2) {\n      flatCoordinates.push(0);\n    }\n    if (len === 0) {\n      return undefined;\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatPosList(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    const contextDimension = context['srsDimension'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    const coords = s.split(/\\s+/);\n    // The \"dimension\" attribute is from the GML 3.0.1 spec.\n    let dim = 2;\n    if (node.getAttribute('srsDimension')) {\n      dim = readNonNegativeIntegerString(node.getAttribute('srsDimension'));\n    } else if (node.getAttribute('dimension')) {\n      dim = readNonNegativeIntegerString(node.getAttribute('dimension'));\n    } else if (\n      /** @type {Element} */ (node.parentNode).getAttribute('srsDimension')\n    ) {\n      dim = readNonNegativeIntegerString(\n        /** @type {Element} */ (node.parentNode).getAttribute('srsDimension'),\n      );\n    } else if (contextDimension) {\n      dim = readNonNegativeIntegerString(contextDimension);\n    }\n    let x, y, z;\n    const flatCoordinates = [];\n    for (let i = 0, ii = coords.length; i < ii; i += dim) {\n      x = parseFloat(coords[i]);\n      y = parseFloat(coords[i + 1]);\n      z = dim === 3 ? parseFloat(coords[i + 2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} value Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePos_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    const point = value.getCoordinates();\n    let coords;\n    // only 2d for simple features profile\n    if (axisOrientation.substr(0, 2) === 'en') {\n      coords = point[0] + ' ' + point[1];\n    } else {\n      coords = point[1] + ' ' + point[0];\n    }\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n    writeStringTextNode(node, coords);\n  }\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string} [srsName] Optional srsName\n   * @param {boolean} [hasZ] whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, srsName, hasZ) {\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    let coords =\n      axisOrientation.substr(0, 2) === 'en'\n        ? point[0] + ' ' + point[1]\n        : point[1] + ' ' + point[0];\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePosList_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    let point;\n    for (let i = 0; i < len; ++i) {\n      point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const pos = createElementNS(node.namespaceURI, 'pos');\n    node.appendChild(pos);\n    this.writePos_(pos, geometry, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}),\n      this.ENVELOPE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack,\n      keys,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLinearRing(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const posList = createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(\n      parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'interior' : 'exterior',\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS,\n        this.RING_NODE_FACTORY_,\n        rings,\n        objectStack,\n        undefined,\n        this,\n      );\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (\n      node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment'\n    ) {\n      const posList = createElementNS(node.namespaceURI, 'posList');\n      node.appendChild(posList);\n      this.writePosList_(posList, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiPolygon} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      polygons,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiPoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    const hasZ = context['hasZ'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS,\n      makeSimpleNodeFactory('pointMember'),\n      points,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiLineString} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      lines,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeRing(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygonMember(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePointMember(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint(child, point, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLineStringOrCurveMember(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString(child, line, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const item = Object.assign({}, context);\n    item['node'] = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      value = transformExtentWithOptions(\n        /** @type {import(\"../extent.js\").Extent} */ (geometry),\n        context,\n      );\n    } else {\n      value = transformGeometryWithOptions(\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry),\n        true,\n        context,\n      );\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      this.GEOMETRY_SERIALIZERS,\n      this.GEOMETRY_NODE_FACTORY_,\n      [value],\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const keys = [];\n    const values = [];\n    if (feature.hasProperties()) {\n      const properties = feature.getProperties();\n      for (const key in properties) {\n        const value = properties[key];\n        if (value !== null) {\n          keys.push(key);\n          values.push(value);\n          if (\n            key == geometryName ||\n            typeof (/** @type {?} */ (value).getSimplifiedGeometry) ===\n              'function'\n          ) {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] = makeChildAppender(\n                this.writeGeometryElement,\n                this,\n              );\n            }\n          } else {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] =\n                makeChildAppender(writeStringTextNode);\n            }\n          }\n        }\n      }\n    }\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack,\n      keys,\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeFeatureMembers_(node, features, objectStack) {\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureType = context['featureType'];\n    const featureNS = context['featureNS'];\n    /** @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>} */\n    const serializers = {};\n    serializers[featureNS] = {};\n    serializers[featureNS][featureType] = makeChildAppender(\n      this.writeFeatureElement,\n      this,\n    );\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      serializers,\n      makeSimpleNodeFactory(featureType, featureNS),\n      features,\n      objectStack,\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      this.namespace,\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName],\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const curve = context['curve'];\n    const multiCurve = context['multiCurve'];\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        value\n      ).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'LineString' && curve === true) {\n        nodeName = 'Curve';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS(this.namespace, nodeName);\n  }\n\n  /**\n   * Encode a geometry in GML 3.1.1 Simple Features.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeGeometryNode(geometry, options) {\n    options = this.adaptOptions(options);\n    const geom = createElementNS(this.namespace, 'geom');\n    const context = {\n      node: geom,\n      hasZ: this.hasZ,\n      srsName: this.srsName,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n    };\n    if (options) {\n      Object.assign(context, options);\n    }\n    this.writeGeometryElement(geom, geometry, [context]);\n    return geom;\n  }\n\n  /**\n   * Encode an array of features in the GML 3.1.1 format as an XML node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Element} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    const node = createElementNS(this.namespace, 'featureMembers');\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      this.schemaLocation,\n    );\n    const context = {\n      srsName: this.srsName,\n      hasZ: this.hasZ,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n      featureNS: this.featureNS,\n      featureType: this.featureType,\n    };\n    if (options) {\n      Object.assign(context, options);\n    }\n    this.writeFeatureMembers_(node, features, [context]);\n    return node;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList),\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser,\n    'exterior': GML3.prototype.exteriorParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML3.prototype.readSurface),\n    'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface),\n    'Curve': makeReplacer(GML3.prototype.readCurve),\n    'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve),\n    'Envelope': makeReplacer(GML3.prototype.readEnvelope),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.MULTICURVE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser),\n    'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.MULTISURFACE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n    'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.CURVEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SURFACEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SURFACE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'patches': makeReplacer(GML3.prototype.readPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.CURVE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'segments': makeReplacer(GML3.prototype.readSegment),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.ENVELOPE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n    'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.PATCHES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SEGMENTS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': makeArrayExtender(\n      GML3.prototype.readLineStringSegment,\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n    'Ring': makeReplacer(GML3.prototype.readFlatCurveRing),\n  },\n};\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing),\n    'interior': makeChildAppender(GML3.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember,\n    ),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(GML3.prototype.writePointMember),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember,\n    ),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML3.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString,\n    ),\n    'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Envelope': makeChildAppender(GML3.prototype.writeEnvelope),\n  },\n};\n\nexport default GML3;\n","/**\n * @module ol/format/GML32\n */\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GMLBase from './GMLBase.js';\nimport {\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n} from '../xml.js';\nimport {writeStringTextNode} from '../format/xsd.js';\n\n/**\n * @classdesc Feature format for reading and writing data in the GML format\n *            version 3.2.1.\n * @api\n */\nclass GML32 extends GML3 {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : this.namespace + ' http://schemas.opengis.net/gml/3.2.1/gml.xsd';\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    objectStack[objectStack.length - 1] = Object.assign(\n      {multiCurve: true, multiSurface: true},\n      context,\n    );\n    super.writeGeometryElement(node, geometry, objectStack);\n  }\n}\n\nGML32.prototype.namespace = 'http://www.opengis.net/gml/3.2';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList),\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'interior': GML3.prototype.interiorParser,\n    'exterior': GML3.prototype.exteriorParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML32.prototype.readSurface),\n    'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface),\n    'Curve': makeReplacer(GML32.prototype.readCurve),\n    'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve),\n    'Envelope': makeReplacer(GML32.prototype.readEnvelope),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTICURVE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser),\n    'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTISURFACE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n    'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.CURVEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SURFACEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SURFACE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'patches': makeReplacer(GML3.prototype.readPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.CURVE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'segments': makeReplacer(GML3.prototype.readSegment),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.ENVELOPE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n    'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.PATCHES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SEGMENTS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineStringSegment': makeArrayExtender(\n      GML3.prototype.readLineStringSegment,\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTIPOINT_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTILINESTRING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser,\n    ),\n    'lineStringMembers': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser,\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTIPOLYGON_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.POINTMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.LINESTRINGMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.POLYGONMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n    'Ring': makeReplacer(GML32.prototype.readFlatCurveRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing),\n    'interior': makeChildAppender(GML3.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember,\n    ),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeChildAppender(GML3.prototype.writePointMember),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember,\n    ),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML32.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString,\n    ),\n    'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Envelope': makeChildAppender(GML3.prototype.writeEnvelope),\n  },\n};\n\nexport default GML32;\n","/**\n * @module ol/format/filter/Filter\n */\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @abstract\n */\nclass Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   */\n  constructor(tagName) {\n    /**\n     * @private\n     * @type {!string}\n     */\n    this.tagName_ = tagName;\n  }\n\n  /**\n   * The XML tag name for a filter.\n   * @return {!string} Name.\n   */\n  getTagName() {\n    return this.tagName_;\n  }\n}\n\nexport default Filter;\n","/**\n * @module ol/format/filter/LogicalNary\n */\nimport Filter from './Filter.js';\nimport {assert} from '../../asserts.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @abstract\n */\nclass LogicalNary extends Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   * @param {Array<import(\"./Filter.js\").default>} conditions Conditions.\n   */\n  constructor(tagName, conditions) {\n    super(tagName);\n\n    /**\n     * @type {Array<import(\"./Filter.js\").default>}\n     */\n    this.conditions = conditions;\n    assert(this.conditions.length >= 2, 'At least 2 conditions are required');\n  }\n}\n\nexport default LogicalNary;\n","/**\n * @module ol/format/filter/And\n */\nimport LogicalNary from './LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @abstract\n */\nclass And extends LogicalNary {\n  /**\n   * @param {...import(\"./Filter.js\").default} conditions Conditions.\n   */\n  constructor(conditions) {\n    super('And', Array.prototype.slice.call(arguments));\n  }\n}\n\nexport default And;\n","/**\n * @module ol/format/filter/Bbox\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @api\n */\nclass Bbox extends Filter {\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../../extent.js\").Extent} extent Extent.\n   * @param {string} [srsName] SRS name. No srsName attribute will be set\n   * on geometries when this is not provided.\n   */\n  constructor(geometryName, extent, srsName) {\n    super('BBOX');\n\n    /**\n     * @type {!string}\n     */\n    this.geometryName = geometryName;\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent = extent;\n    if (extent.length !== 4) {\n      throw new Error(\n        'Expected an extent with four values ([minX, minY, maxX, maxY])',\n      );\n    }\n\n    /**\n     * @type {string|undefined}\n     */\n    this.srsName = srsName;\n  }\n}\n\nexport default Bbox;\n","/**\n * @module ol/format/WFS\n */\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GML32 from './GML32.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  isDocument,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSimpleNodeFactory,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {and as andFilterFn, bbox as bboxFilterFn} from './filter.js';\nimport {assert} from '../asserts.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readNonNegativeIntegerString,\n  readPositiveInteger,\n  writeStringTextNode,\n} from './xsd.js';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst FEATURE_COLLECTION_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': makeObjectPropertySetter(\n      GMLBase.prototype.readExtentElement,\n      'bounds',\n    ),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'member': makeArrayPusher(GMLBase.prototype.readFeaturesInternal),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst TRANSACTION_SUMMARY_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst TRANSACTION_RESPONSE_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary,\n      'transactionSummary',\n    ),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds'),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary,\n      'transactionSummary',\n    ),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds'),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst QUERY_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': makeChildAppender(writeStringTextNode),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'PropertyName': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst TRANSACTION_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative),\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] The namespace URI used for features.\n * @property {Array<string>|string} [featureType] The feature type to parse. Only used for read operations.\n * @property {GMLBase} [gmlFormat] The GML format to use to parse the response.\n * Default is `ol/format/GML2` for WFS 1.0.0, `ol/format/GML3` for WFS 1.1.0 and `ol/format/GML32` for WFS 2.0.0.\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\n * @property {string} [version='1.1.0'] WFS version to use. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * @typedef {Object} WriteGetFeatureOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {Array<string|FeatureType>} featureTypes The feature type names or FeatureType objects to\n * define a unique bbox filter per feature type name (in this case, options `bbox` and `geometryName` are\n * ignored.).\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {string} [outputFormat] Output format.\n * @property {number} [maxFeatures] Maximum number of features to fetch.\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\n * @property {Array<string>} [propertyNames] Optional list of property names to serialize.\n * @property {string} [viewParams] viewParams GeoServer vendor parameter.\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\n * @property {number} [count] Number of features to retrieve when paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\n * Web Feature Services have repurposed `maxfeatures` instead.\n * @property {import(\"../extent.js\").Extent} [bbox] Extent to use for the BBOX filter. The `geometryName`\n * option must be set.\n * @property {import(\"./filter/Filter.js\").default} [filter] Filter condition. See\n * {@link module:ol/format/filter} for more information.\n * @property {string} [resultType] Indicates what response should be returned,\n * e.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\n */\n\n/**\n * @typedef {Object} FeatureType\n * @property {!string} name The feature type name.\n * @property {!import(\"../extent.js\").Extent} bbox Extent to use for the BBOX filter.\n * @property {!string} geometryName Geometry name to use in the BBOX filter.\n */\n\n/**\n * @typedef {Object} WriteTransactionOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {string} featureType The feature type name.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\n * @property {Array<Object>} nativeElements Native elements. Currently not supported.\n * @property {import(\"./GMLBase.js\").Options} [gmlOptions] GML options for the WFS transaction writer.\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * Number of features; bounds/extent.\n * @typedef {Object} FeatureCollectionMetadata\n * @property {number} numberOfFeatures NumberOfFeatures.\n * @property {import(\"../extent.js\").Extent} bounds Bounds.\n */\n\n/**\n * @typedef {Object} TransactionSummary\n * @property {number} totalDeleted TotalDeleted.\n * @property {number} totalInserted TotalInserted.\n * @property {number} totalUpdated TotalUpdated.\n */\n\n/**\n * Total deleted; total inserted; total updated; array of insert ids.\n * @typedef {Object} TransactionResponse\n * @property {TransactionSummary} transactionSummary Transaction summary.\n * @property {Array<string>} insertIds InsertIds.\n */\n\n/**\n * @type {string}\n */\nconst FEATURE_PREFIX = 'feature';\n\n/**\n * @type {string}\n */\nconst XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n/**\n * @type {Object<string, string>}\n */\nconst OGCNS = {\n  '2.0.0': 'http://www.opengis.net/ogc/1.1',\n  '1.1.0': 'http://www.opengis.net/ogc',\n  '1.0.0': 'http://www.opengis.net/ogc',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst WFSNS = {\n  '2.0.0': 'http://www.opengis.net/wfs/2.0',\n  '1.1.0': 'http://www.opengis.net/wfs',\n  '1.0.0': 'http://www.opengis.net/wfs',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst FESNS = {\n  '2.0.0': 'http://www.opengis.net/fes/2.0',\n  '1.1.0': 'http://www.opengis.net/fes',\n  '1.0.0': 'http://www.opengis.net/fes',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst SCHEMA_LOCATIONS = {\n  '2.0.0':\n    'http://www.opengis.net/wfs/2.0 http://schemas.opengis.net/wfs/2.0/wfs.xsd',\n  '1.1.0':\n    'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0':\n    'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd',\n};\n\n/**\n * @type {Object<string, object>}\n */\nconst GML_FORMATS = {\n  '2.0.0': GML32,\n  '1.1.0': GML3,\n  '1.0.0': GML2,\n};\n\n/**\n * @const\n * @type {string}\n */\nconst DEFAULT_VERSION = '1.1.0';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option to override the default.\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\n *\n * @api\n */\nclass WFS extends XMLFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version ? options.version : DEFAULT_VERSION;\n\n    /**\n     * @private\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType_ = options.featureType;\n\n    /**\n     * @private\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS_ = options.featureNS;\n\n    /**\n     * @private\n     * @type {GMLBase}\n     */\n    this.gmlFormat_ = options.gmlFormat\n      ? options.gmlFormat\n      : new GML_FORMATS[this.version_]();\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.schemaLocation_ = options.schemaLocation\n      ? options.schemaLocation\n      : SCHEMA_LOCATIONS[this.version_];\n  }\n\n  /**\n   * @return {Array<string>|string|undefined} featureType\n   */\n  getFeatureType() {\n    return this.featureType_;\n  }\n\n  /**\n   * @param {Array<string>|string|undefined} featureType Feature type(s) to parse.\n   */\n  setFeatureType(featureType) {\n    this.featureType_ = featureType;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    const context = {\n      node,\n    };\n    Object.assign(context, {\n      'featureType': this.featureType_,\n      'featureNS': this.featureNS_,\n    });\n\n    Object.assign(context, this.getReadOptions(node, options ? options : {}));\n    const objectStack = [context];\n    let featuresNS;\n    if (this.version_ === '2.0.0') {\n      featuresNS = FEATURE_COLLECTION_PARSERS;\n    } else {\n      featuresNS = this.gmlFormat_.FEATURE_COLLECTION_PARSERS;\n    }\n    let features = pushParseAndPop(\n      [],\n      featuresNS,\n      node,\n      objectStack,\n      this.gmlFormat_,\n    );\n    if (!features) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * Read transaction response of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {TransactionResponse|undefined} Transaction response.\n   * @api\n   */\n  readTransactionResponse(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readTransactionResponseFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readTransactionResponseFromDocument(\n        /** @type {Document} */ (source),\n      );\n    }\n    return this.readTransactionResponseFromNode(\n      /** @type {Element} */ (source),\n    );\n  }\n\n  /**\n   * Read feature collection metadata of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   * @api\n   */\n  readFeatureCollectionMetadata(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureCollectionMetadataFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readFeatureCollectionMetadataFromDocument(\n        /** @type {Document} */ (source),\n      );\n    }\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Element} */ (source),\n    );\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFeatureCollectionMetadataFromNode(\n          /** @type {Element} */ (n),\n        );\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromNode(node) {\n    const result = {};\n    const value = readNonNegativeIntegerString(\n      node.getAttribute('numberOfFeatures'),\n    );\n    result['numberOfFeatures'] = value;\n    return pushParseAndPop(\n      /** @type {FeatureCollectionMetadata} */ (result),\n      FEATURE_COLLECTION_PARSERS,\n      node,\n      [],\n      this.gmlFormat_,\n    );\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readTransactionResponseFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromNode(node) {\n    return pushParseAndPop(\n      /** @type {TransactionResponse} */ ({}),\n      TRANSACTION_RESPONSE_PARSERS,\n      node,\n      [],\n    );\n  }\n\n  /**\n   * Encode format as WFS `GetFeature` and return the Node.\n   *\n   * @param {WriteGetFeatureOptions} options Options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeGetFeature(options) {\n    const node = createElementNS(WFSNS[this.version_], 'GetFeature');\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', this.version_);\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', String(options.maxFeatures));\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', String(options.startIndex));\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', String(options.count));\n    }\n    if (options.viewParams !== undefined) {\n      node.setAttribute('viewParams', options.viewParams);\n    }\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      this.schemaLocation_,\n    );\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    const context = {\n      node,\n    };\n    Object.assign(context, {\n      'version': this.version_,\n      'srsName': options.srsName,\n      'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n      'featurePrefix': options.featurePrefix,\n      'propertyNames': options.propertyNames ? options.propertyNames : [],\n    });\n    assert(\n      Array.isArray(options.featureTypes),\n      '`options.featureTypes` must be an Array',\n    );\n    if (typeof options.featureTypes[0] === 'string') {\n      let filter = options.filter;\n      if (options.bbox) {\n        assert(\n          options.geometryName,\n          '`options.geometryName` must also be provided when `options.bbox` is set',\n        );\n        filter = this.combineBboxAndFilter(\n          options.geometryName,\n          options.bbox,\n          options.srsName,\n          filter,\n        );\n      }\n      Object.assign(context, {\n        'geometryName': options.geometryName,\n        'filter': filter,\n      });\n      writeGetFeature(\n        node,\n        /** @type {!Array<string>} */ (options.featureTypes),\n        [context],\n      );\n    } else {\n      // Write one query node per element in featuresType.\n      options.featureTypes.forEach((/** @type {FeatureType} */ featureType) => {\n        const completeFilter = this.combineBboxAndFilter(\n          featureType.geometryName,\n          featureType.bbox,\n          options.srsName,\n          options.filter,\n        );\n        Object.assign(context, {\n          'geometryName': featureType.geometryName,\n          'filter': completeFilter,\n        });\n        writeGetFeature(node, [featureType.name], [context]);\n      });\n    }\n    return node;\n  }\n\n  /**\n   * Create a bbox filter and combine it with another optional filter.\n   *\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../extent.js\").Extent} extent Extent.\n   * @param {string} [srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   * @param {import(\"./filter/Filter.js\").default} [filter] Filter condition.\n   * @return {import(\"./filter/Filter.js\").default} The filter.\n   */\n  combineBboxAndFilter(geometryName, extent, srsName, filter) {\n    const bboxFilter = bboxFilterFn(geometryName, extent, srsName);\n    if (filter) {\n      // if bbox and filter are both set, combine the two into a single filter\n      return andFilterFn(filter, bboxFilter);\n    }\n    return bboxFilter;\n  }\n\n  /**\n   * Encode format as WFS `Transaction` and return the Node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} inserts The features to insert.\n   * @param {Array<import(\"../Feature.js\").default>} updates The features to update.\n   * @param {Array<import(\"../Feature.js\").default>} deletes The features to delete.\n   * @param {WriteTransactionOptions} options Write options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeTransaction(inserts, updates, deletes, options) {\n    const objectStack = [];\n    const version = options.version ? options.version : this.version_;\n    const node = createElementNS(WFSNS[version], 'Transaction');\n\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', version);\n    let baseObj;\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    if (options) {\n      baseObj = options.gmlOptions ? options.gmlOptions : {};\n      if (options.handle) {\n        node.setAttribute('handle', options.handle);\n      }\n    }\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATIONS[version],\n    );\n\n    const request = createTransactionRequest(node, baseObj, version, options);\n    if (inserts) {\n      serializeTransactionRequest('Insert', inserts, objectStack, request);\n    }\n    if (updates) {\n      serializeTransactionRequest('Update', updates, objectStack, request);\n    }\n    if (deletes) {\n      serializeTransactionRequest('Delete', deletes, objectStack, request);\n    }\n    if (options.nativeElements) {\n      serializeTransactionRequest(\n        'Native',\n        options.nativeElements,\n        objectStack,\n        request,\n      );\n    }\n    return node;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readProjectionFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    if (node.firstElementChild && node.firstElementChild.firstElementChild) {\n      node = node.firstElementChild.firstElementChild;\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        if (\n          !(\n            n.childNodes.length === 0 ||\n            (n.childNodes.length === 1 && n.firstChild.nodeType === 3)\n          )\n        ) {\n          const objectStack = [{}];\n          this.gmlFormat_.readGeometryElement(n, objectStack);\n          return getProjection(objectStack.pop().srsName);\n        }\n      }\n    }\n\n    return null;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {*} baseObj Base object.\n * @param {string} version Version.\n * @param {WriteTransactionOptions} options Options.\n * @return {Object} Request object.\n */\nfunction createTransactionRequest(node, baseObj, version, options) {\n  const featurePrefix = options.featurePrefix\n    ? options.featurePrefix\n    : FEATURE_PREFIX;\n  let gmlVersion;\n  if (version === '1.0.0') {\n    gmlVersion = 2;\n  } else if (version === '1.1.0') {\n    gmlVersion = 3;\n  } else if (version === '2.0.0') {\n    gmlVersion = 3.2;\n  }\n  const obj = Object.assign(\n    {node},\n    {\n      version,\n      'featureNS': options.featureNS,\n      'featureType': options.featureType,\n      'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion,\n      'hasZ': options.hasZ,\n      'srsName': options.srsName,\n    },\n    baseObj,\n  );\n  return obj;\n}\n\n/**\n * @param {string} type Request type.\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @param {Element} request Transaction Request.\n */\nfunction serializeTransactionRequest(type, features, objectStack, request) {\n  pushSerializeAndPop(\n    request,\n    TRANSACTION_SERIALIZERS,\n    makeSimpleNodeFactory(type),\n    features,\n    objectStack,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n */\nfunction readTransactionSummary(node, objectStack) {\n  return pushParseAndPop({}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst OGC_FID_PARSERS = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    }),\n  },\n  'http://www.opengis.net/ogc/1.1': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    }),\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction fidParser(node, objectStack) {\n  parseNode(OGC_FID_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst INSERT_RESULTS_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'Feature': fidParser,\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Feature': fidParser,\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Insert results.\n */\nfunction readInsertResults(node, objectStack) {\n  return pushParseAndPop([], INSERT_RESULTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFeature(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else if (gmlVersion === 3) {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML32.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeOgcFidFilter(node, fid, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const version = context['version'];\n  const ns = OGCNS[version];\n  const filter = createElementNS(ns, 'Filter');\n  const child = createElementNS(ns, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', /** @type {string} */ (fid));\n  node.appendChild(filter);\n}\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @return {string} The value of the typeName property.\n */\nfunction getTypeName(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.startsWith(prefix)) {\n    return featureType;\n  }\n  return prefix + featureType;\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDelete(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 'Features must have an id set');\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeUpdate(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 'Features must have an id set');\n  const version = context['version'];\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (\n          value &&\n          typeof (/** @type {?} */ (value).getSimplifiedGeometry) === 'function'\n        ) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */ ({\n        version,\n        'gmlVersion': context['gmlVersion'],\n        node,\n        'hasZ': context['hasZ'],\n        'srsName': context['srsName'],\n      }),\n      TRANSACTION_SERIALIZERS,\n      makeSimpleNodeFactory('Property'),\n      values,\n      objectStack,\n    );\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeProperty(node, pair, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const version = context['version'];\n  const ns = WFSNS[version];\n  const tagName = version === '2.0.0' ? 'ValueReference' : 'Name';\n  const name = createElementNS(ns, tagName);\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = createElementNS(ns, 'Value');\n    node.appendChild(value);\n    if (\n      pair.value &&\n      typeof (/** @type {?} */ (pair.value).getSimplifiedGeometry) ===\n        'function'\n    ) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else if (gmlVersion === 3) {\n        GML3.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else {\n        GML32.prototype.writeGeometryElement(value, pair.value, objectStack);\n      }\n    } else {\n      writeStringTextNode(value, pair.value);\n    }\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}} nativeElement The native element.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNative(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', String(nativeElement.safeToIgnore));\n  }\n  if (nativeElement.value !== undefined) {\n    writeStringTextNode(node, nativeElement.value);\n  }\n}\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst GETFEATURE_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Query': makeChildAppender(writeQuery),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Query': makeChildAppender(writeQuery),\n  },\n  'http://www.opengis.net/ogc': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter),\n  },\n  'http://www.opengis.net/fes/2.0': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Disjoint': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'ResourceId': makeChildAppender(writeResourceIdFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter),\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {string} featureType Feature type.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeQuery(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const version = context['version'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = getTypeName(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  let typeNameAttr;\n  if (version === '2.0.0') {\n    typeNameAttr = 'typeNames';\n  } else {\n    typeNameAttr = 'typeName';\n  }\n  node.setAttribute(typeNameAttr, typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  }\n  const item = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n    Object.assign({}, context)\n  );\n  item.node = node;\n  pushSerializeAndPop(\n    item,\n    QUERY_SERIALIZERS,\n    makeSimpleNodeFactory('PropertyName'),\n    propertyNames,\n    objectStack,\n  );\n  const filter = context['filter'];\n  if (filter) {\n    const child = createElementNS(getFilterNS(version), 'Filter');\n    node.appendChild(child);\n    writeFilterCondition(child, filter, objectStack);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFilterCondition(node, filter, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(filter.getTagName()),\n    [filter],\n    objectStack,\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Bbox.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeBboxFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  parent['srsName'] = filter.srsName;\n  const format = GML_FORMATS[version];\n\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.extent, objectStack);\n}\n\n/**\n * @param {Element} node Element.\n * @param {import(\"./filter/ResourceId.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeResourceIdFilter(node, filter, objectStack) {\n  node.setAttribute('rid', /** @type {string} */ (filter.rid));\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Spatial.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeSpatialFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  parent['srsName'] = filter.srsName;\n  const format = GML_FORMATS[version];\n\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/DWithin.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDWithinFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  writeSpatialFilter(node, filter, objectStack);\n  const distance = createElementNS(getFilterNS(version), 'Distance');\n  writeStringTextNode(distance, filter.distance.toString());\n  if (version === '2.0.0') {\n    distance.setAttribute('uom', filter.unit);\n  } else {\n    distance.setAttribute('units', filter.unit);\n  }\n  node.appendChild(distance);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/During.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDuringFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n\n  writeExpression(FESNS[version], 'ValueReference', node, filter.propertyName);\n  const timePeriod = createElementNS(GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = createElementNS(GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  writeTimeInstant(begin, filter.begin);\n\n  const end = createElementNS(GMLNS, 'end');\n  timePeriod.appendChild(end);\n  writeTimeInstant(end, filter.end);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/LogicalNary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLogicalFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    pushSerializeAndPop(\n      item,\n      GETFEATURE_SERIALIZERS,\n      makeSimpleNodeFactory(condition.getTagName()),\n      [condition],\n      objectStack,\n    );\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/Not.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNotFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  const condition = filter.condition;\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(condition.getTagName()),\n    [condition],\n    objectStack,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/ComparisonBinary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeComparisonFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.expression);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsNull.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsNullFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  writePropertyName(version, node, filter.propertyName);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsBetween.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsBetweenFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  const ns = getFilterNS(version);\n\n  writePropertyName(version, node, filter.propertyName);\n\n  const lowerBoundary = createElementNS(ns, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  writeLiteral(version, lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = createElementNS(ns, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  writeLiteral(version, upperBoundary, '' + filter.upperBoundary);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/IsLike.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsLikeFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.pattern);\n}\n\n/**\n * @param {string} ns Namespace.\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n */\nfunction writeExpression(ns, tagName, node, value) {\n  const property = createElementNS(ns, tagName);\n  writeStringTextNode(property, value);\n  node.appendChild(property);\n}\n\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeLiteral(version, node, value) {\n  writeExpression(getFilterNS(version), 'Literal', node, value);\n}\n\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writePropertyName(version, node, value) {\n  if (version === '2.0.0') {\n    writeExpression(FESNS[version], 'ValueReference', node, value);\n  } else {\n    writeExpression(OGCNS[version], 'PropertyName', node, value);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n */\nfunction writeTimeInstant(node, time) {\n  const timeInstant = createElementNS(GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = createElementNS(GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  writeStringTextNode(timePosition, time);\n}\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {string} version WFS version. If not provided defaults to '1.1.0'\n * @return {Node} Result.\n * @api\n */\nexport function writeFilter(filter, version) {\n  version = version || '1.1.0';\n  const child = createElementNS(getFilterNS(version), 'Filter');\n  const context = {\n    node: child,\n  };\n  Object.assign(context, {\n    'version': version,\n    'filter': filter,\n  });\n  writeFilterCondition(child, filter, [context]);\n  return child;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<string>} featureTypes Feature types.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeGetFeature(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n    Object.assign({}, context)\n  );\n  item.node = node;\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory('Query'),\n    featureTypes,\n    objectStack,\n  );\n}\n\nfunction getFilterNS(version) {\n  let ns;\n  if (version === '2.0.0') {\n    ns = FESNS[version];\n  } else {\n    ns = OGCNS[version];\n  }\n  return ns;\n}\n\nexport default WFS;\n","/**\n * @module ol/format/WMTSCapabilities\n */\nimport OWS from './OWS.js';\nimport XML from './XML.js';\nimport {boundingExtent} from '../extent.js';\nimport {\n  makeArrayPusher,\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readDecimal, readPositiveInteger, readString} from './xsd.js';\nimport {readHref} from './xlink.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/wmts/1.0'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst OWS_NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Contents': makeObjectPropertySetter(readContents),\n});\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\nclass WMTSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {OWS}\n     * @private\n     */\n    this.owsParser_ = new OWS();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   */\n  readFromNode(node) {\n    let version = node.getAttribute('version');\n    if (version) {\n      version = version.trim();\n    }\n    let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n    if (!WMTSCapabilityObject) {\n      return null;\n    }\n    WMTSCapabilityObject['version'] = version;\n    WMTSCapabilityObject = pushParseAndPop(\n      WMTSCapabilityObject,\n      PARSERS,\n      node,\n      [],\n    );\n    return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTENTS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Layer': makeObjectPropertyPusher(readLayer),\n  'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readBoundingBox),\n    'BoundingBox': makeObjectPropertyPusher(readBoundingBoxWithCrs),\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LINKS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixSet': makeObjectPropertySetter(readString),\n  'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_LIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrix': makeObjectPropertySetter(readString),\n  'MinTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MinTileCol': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileCol': makeObjectPropertySetter(readPositiveInteger),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DIMENSION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WGS84_BBOX_READERS = makeStructureNS(OWS_NAMESPACE_URIS, {\n  'LowerCorner': makeArrayPusher(readCoordinates),\n  'UpperCorner': makeArrayPusher(readCoordinates),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n    'BoundingBox': makeObjectPropertySetter(readBoundingBox),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TM_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readPositiveInteger),\n    'TileHeight': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixWidth': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixHeight': makeObjectPropertySetter(readPositiveInteger),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  const style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBox(node, objectStack) {\n  const coordinates = pushParseAndPop(\n    [],\n    WGS84_BBOX_READERS,\n    node,\n    objectStack,\n  );\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBoxWithCrs(node, objectStack) {\n  const crs = node.getAttribute('crs');\n  const coordinates = pushParseAndPop(\n    [],\n    WGS84_BBOX_READERS,\n    node,\n    objectStack,\n  );\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return {extent: boundingExtent(coordinates), crs: crs};\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = readHref(node);\n  return legend;\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n  const coordinates = readString(node).split(/\\s+/);\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\n\nexport default WMTSCapabilities;\n","/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceNode} from '../dom.js';\n\nconst events = [\n  'fullscreenchange',\n  'webkitfullscreenchange',\n  'MSFullscreenChange',\n];\n\n/**\n * @enum {string}\n */\nconst FullScreenEventType = {\n  /**\n   * Triggered after the map entered fullscreen.\n   * @event FullScreenEventType#enterfullscreen\n   * @api\n   */\n  ENTERFULLSCREEN: 'enterfullscreen',\n\n  /**\n   * Triggered after the map leave fullscreen.\n   * @event FullScreenEventType#leavefullscreen\n   * @api\n   */\n  LEAVEFULLSCREEN: 'leavefullscreen',\n};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen', import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen'|import(\"../ObjectEventType\").Types, Return>} FullScreenOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text|HTMLElement} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [activeClassName=className + '-true'] CSS class name for the button\n * when full-screen is active.\n * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button\n * when full-screen is inactive.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](https://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @fires FullScreenEventType#enterfullscreen\n * @fires FullScreenEventType#leavefullscreen\n * @api\n */\nclass FullScreen extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FullScreenOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.isInFullscreen_ = false;\n\n    /**\n     * @private\n     */\n    this.boundHandleMapTargetChange_ = this.handleMapTargetChange_.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ =\n      options.className !== undefined ? options.className : 'ol-full-screen';\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.documentListeners_ = [];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.activeClassName_ =\n      options.activeClassName !== undefined\n        ? options.activeClassName.split(' ')\n        : [this.cssClassName_ + '-true'];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.inactiveClassName_ =\n      options.inactiveClassName !== undefined\n        ? options.inactiveClassName.split(' ')\n        : [this.cssClassName_ + '-false'];\n\n    const label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelNode_ =\n      typeof label === 'string' ? document.createTextNode(label) : label;\n\n    const labelActive =\n      options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelActiveNode_ =\n      typeof labelActive === 'string'\n        ? document.createTextNode(labelActive)\n        : labelActive;\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n    this.button_.title = tipLabel;\n    this.button_.setAttribute('type', 'button');\n    this.button_.appendChild(this.labelNode_);\n    this.button_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n    this.setClassName_(this.button_, this.isInFullscreen_);\n\n    this.element.className = `${this.cssClassName_} ${CLASS_UNSELECTABLE} ${CLASS_CONTROL}`;\n    this.element.appendChild(this.button_);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreen_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const doc = map.getOwnerDocument();\n    if (!isFullScreenSupported(doc)) {\n      return;\n    }\n    if (isFullScreen(doc)) {\n      exitFullScreen(doc);\n    } else {\n      let element;\n      if (this.source_) {\n        element =\n          typeof this.source_ === 'string'\n            ? doc.getElementById(this.source_)\n            : this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreenChange_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const wasInFullscreen = this.isInFullscreen_;\n    this.isInFullscreen_ = isFullScreen(map.getOwnerDocument());\n    if (wasInFullscreen !== this.isInFullscreen_) {\n      this.setClassName_(this.button_, this.isInFullscreen_);\n      if (this.isInFullscreen_) {\n        replaceNode(this.labelActiveNode_, this.labelNode_);\n        this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\n      } else {\n        replaceNode(this.labelNode_, this.labelActiveNode_);\n        this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\n      }\n      map.updateSize();\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  setClassName_(element, fullscreen) {\n    if (fullscreen) {\n      element.classList.remove(...this.inactiveClassName_);\n      element.classList.add(...this.activeClassName_);\n    } else {\n      element.classList.remove(...this.activeClassName_);\n      element.classList.add(...this.inactiveClassName_);\n    }\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (oldMap) {\n      oldMap.removeChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_,\n      );\n    }\n\n    super.setMap(map);\n\n    this.handleMapTargetChange_();\n    if (map) {\n      map.addChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleMapTargetChange_() {\n    const listeners = this.documentListeners_;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      unlistenByKey(listeners[i]);\n    }\n    listeners.length = 0;\n\n    const map = this.getMap();\n    if (map) {\n      const doc = map.getOwnerDocument();\n      if (isFullScreenSupported(doc)) {\n        this.element.classList.remove(CLASS_UNSUPPORTED);\n      } else {\n        this.element.classList.add(CLASS_UNSUPPORTED);\n      }\n\n      for (let i = 0, ii = events.length; i < ii; ++i) {\n        listeners.push(\n          listen(doc, events[i], this.handleFullScreenChange_, this),\n        );\n      }\n      this.handleFullScreenChange_();\n    }\n  }\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported(doc) {\n  const body = doc.body;\n  return !!(\n    body['webkitRequestFullscreen'] ||\n    (body.requestFullscreen && doc.fullscreenEnabled)\n  );\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen(doc) {\n  return !!(doc['webkitIsFullScreen'] || doc.fullscreenElement);\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n * @param {Document} doc The document to exit fullscren from\n */\nfunction exitFullScreen(doc) {\n  if (doc.exitFullscreen) {\n    doc.exitFullscreen();\n  } else if (doc['webkitExitFullscreen']) {\n    doc['webkitExitFullscreen']();\n  }\n}\n\nexport default FullScreen;\n","/**\n * @module ol/control/MousePosition\n */\n\nimport Control from './Control.js';\nimport EventType from '../pointer/EventType.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  getUserProjection,\n  identityTransform,\n} from '../proj.js';\nimport {listen} from '../events.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', Return>} MousePositionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [placeholder] Markup to show when the mouse position is not\n * available (e.g. when the pointer leaves the map viewport).  By default, a non-breaking space is rendered\n * initially and the last position is retained when the mouse leaves the viewport.\n * When a string is provided (e.g. `'no position'` or `''` for an empty string) it is used as a\n * placeholder.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the projection's antimeridian, if it\n * is a global projection.\n */\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nclass MousePosition extends Control {\n  /**\n   * @param {Options} [options] Mouse position options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.className =\n      options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MousePositionOnSignature<void>}\n     */\n    this.un;\n\n    this.addChangeListener(PROJECTION, this.handleProjectionChanged_);\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = options.placeholder !== undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.placeholder_ = this.renderOnMouseOut_ ? options.placeholder : '&#160;';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {?import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX === false ? false : true;\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    this.transform_ = null;\n  }\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  getCoordinateFormat() {\n    return /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (\n      this.get(COORDINATE_FORMAT)\n    );\n  }\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"../proj/Projection.js\").default|undefined} */ (\n      this.get(PROJECTION)\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event Browser event.\n   * @protected\n   */\n  handleMouseMove(event) {\n    const map = this.getMap();\n    this.updateHTML_(map.getEventPixel(event));\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseOut(event) {\n    this.updateHTML_(null);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      const viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this),\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this),\n        );\n      }\n      this.updateHTML_(null);\n    }\n  }\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  setCoordinateFormat(format) {\n    this.set(COORDINATE_FORMAT, format);\n  }\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  updateHTML_(pixel) {\n    let html = this.placeholder_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        const projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            projection,\n          );\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      const map = this.getMap();\n      const coordinate = map.getCoordinateFromPixelInternal(pixel);\n      if (coordinate) {\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            userProjection,\n          );\n        }\n        this.transform_(coordinate, coordinate);\n        if (this.wrapX_) {\n          const projection =\n            userProjection || this.getProjection() || this.mapProjection_;\n          wrapX(coordinate, projection);\n        }\n        const coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  }\n\n  /**\n   * Update the projection. Rendering of the coordinates is done in\n   * `handleMouseMove` and `handleMouseUp`.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.mapProjection_ = null;\n    } else {\n      if (this.mapProjection_ != frameState.viewState.projection) {\n        this.mapProjection_ = frameState.viewState.projection;\n        this.transform_ = null;\n      }\n    }\n  }\n}\n\nexport default MousePosition;\n","/**\n * @module ol/control/OverviewMap\n */\nimport Collection from '../Collection.js';\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport View from '../View.js';\nimport ViewProperty from '../ViewProperty.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {\n  containsExtent,\n  equals as equalsExtent,\n  getBottomRight,\n  getTopLeft,\n  scaleFromCenter,\n} from '../extent.js';\nimport {listen, listenOnce} from '../events.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {replaceNode} from '../dom.js';\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nconst MAX_RATIO = 0.75;\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nconst MIN_RATIO = 0.1;\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='‹'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='›'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Base.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Base.js\").default>} [layers]\n * Layers for the overview map.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {boolean} [rotateWithView=false] Whether the control view should rotate with the main map view.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {View} [view] Custom view for the overview map (should use same projection as main map). If not provided,\n * a default view with the same projection as the main map will be used.\n */\n\n/**\n * Create a new control with a map acting as an overview map for another\n * defined map.\n *\n * @api\n */\nclass OverviewMap extends Control {\n  /**\n   * @param {Options} [options] OverviewMap options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     */\n    this.boundHandleRotationChanged_ = this.handleRotationChanged_.bind(this);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.viewExtent_ = undefined;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u2039';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : '\\u203A';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('div');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * Explicitly given view to be used instead of a view derived from the main map.\n     * @type {View}\n     * @private\n     */\n    this.view_ = options.view;\n\n    const ovmap = new Map({\n      view: options.view,\n      controls: new Collection(),\n      interactions: new Collection(),\n    });\n\n    /**\n     * @type {Map}\n     * @private\n     */\n    this.ovmap_ = ovmap;\n\n    if (options.layers) {\n      options.layers.forEach(function (layer) {\n        ovmap.addLayer(layer);\n      });\n    }\n\n    const box = document.createElement('div');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {import(\"../Overlay.js\").default}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: 'center-center',\n      element: box,\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    const scope = this;\n\n    const overlay = this.boxOverlay_;\n    const overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    const computeDesiredMousePosition = function (mousePosition) {\n      return {\n        clientX: mousePosition.clientX,\n        clientY: mousePosition.clientY,\n      };\n    };\n\n    const move = function (event) {\n      const position = /** @type {?} */ (computeDesiredMousePosition(event));\n      const coordinates = ovmap.getEventCoordinateInternal(\n        /** @type {MouseEvent} */ (position),\n      );\n\n      overlay.setPosition(coordinates);\n    };\n\n    const endMoving = function (event) {\n      const coordinates = ovmap.getEventCoordinateInternal(event);\n\n      scope.getMap().getView().setCenterInternal(coordinates);\n\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', endMoving);\n    };\n\n    /* Binding */\n\n    overlayBox.addEventListener('mousedown', function () {\n      window.addEventListener('mousemove', move);\n      window.addEventListener('mouseup', endMoving);\n    });\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      const oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    super.setMap(map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(\n        listen(\n          map,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleMapPropertyChange_,\n          this,\n        ),\n      );\n\n      const view = map.getView();\n      if (view) {\n        this.bindView_(view);\n        if (view.isDef()) {\n          this.ovmap_.updateSize();\n          this.resetExtent_();\n        }\n      }\n\n      if (!this.ovmap_.isRendered()) {\n        this.updateBoxAfterOvmapIsRendered_();\n      }\n    }\n  }\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n   * @private\n   */\n  handleMapPropertyChange_(event) {\n    if (event.key === MapProperty.VIEW) {\n      const oldView = /** @type {import(\"../View.js\").default} */ (\n        event.oldValue\n      );\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      const newView = this.getMap().getView();\n      this.bindView_(newView);\n    } else if (\n      !this.ovmap_.isRendered() &&\n      (event.key === MapProperty.TARGET || event.key === MapProperty.SIZE)\n    ) {\n      this.ovmap_.updateSize();\n    }\n  }\n\n  /**\n   * Register listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  bindView_(view) {\n    if (!this.view_) {\n      // Unless an explicit view definition was given, derive default from whatever main map uses.\n      const newView = new View({\n        projection: view.getProjection(),\n      });\n      this.ovmap_.setView(newView);\n    }\n\n    view.addChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_,\n    );\n    // Sync once with the new view\n    this.handleRotationChanged_();\n  }\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  unbindView_(view) {\n    view.removeChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_,\n    );\n  }\n\n  /**\n   * Handle rotation changes to the main map.\n   * @private\n   */\n  handleRotationChanged_() {\n    if (this.rotateWithView_) {\n      this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n    }\n  }\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  validateExtent_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    if (this.viewExtent_ && equalsExtent(extent, this.viewExtent_)) {\n      // repeats of the same extent may indicate constraint conflicts leading to an endless cycle\n      return;\n    }\n    this.viewExtent_ = extent;\n\n    const ovmapSize = /** @type {import(\"../size.js\").Size} */ (\n      ovmap.getSize()\n    );\n\n    const ovview = ovmap.getView();\n    const ovextent = ovview.calculateExtentInternal(ovmapSize);\n\n    const topLeftPixel = ovmap.getPixelFromCoordinateInternal(\n      getTopLeft(extent),\n    );\n    const bottomRightPixel = ovmap.getPixelFromCoordinateInternal(\n      getBottomRight(extent),\n    );\n\n    const boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    const boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    const ovmapWidth = ovmapSize[0];\n    const ovmapHeight = ovmapSize[1];\n\n    if (\n      boxWidth < ovmapWidth * MIN_RATIO ||\n      boxHeight < ovmapHeight * MIN_RATIO ||\n      boxWidth > ovmapWidth * MAX_RATIO ||\n      boxHeight > ovmapHeight * MAX_RATIO\n    ) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  }\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  resetExtent_() {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    const ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    const steps = Math.log(MAX_RATIO / MIN_RATIO) / Math.LN2;\n    const ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fitInternal(polygonFromExtent(extent));\n  }\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  recenter_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    ovview.setCenterInternal(view.getCenterInternal());\n  }\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  updateBox_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    const rotation = this.rotateWithView_ ? 0 : -view.getRotation();\n\n    const overlay = this.boxOverlay_;\n    const box = this.boxOverlay_.getElement();\n    const center = view.getCenterInternal();\n    const resolution = view.getResolution();\n    const ovresolution = ovview.getResolution();\n    const width = (mapSize[0] * resolution) / ovresolution;\n    const height = (mapSize[1] * resolution) / ovresolution;\n\n    // set position using center coordinates\n    overlay.setPosition(center);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = width + 'px';\n      box.style.height = height + 'px';\n      const transform = 'rotate(' + rotation + 'rad)';\n      box.style.transform = transform;\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateBoxAfterOvmapIsRendered_() {\n    if (this.ovmapPostrenderKey_) {\n      return;\n    }\n    this.ovmapPostrenderKey_ = listenOnce(\n      this.ovmap_,\n      MapEventType.POSTRENDER,\n      function (event) {\n        delete this.ovmapPostrenderKey_;\n        this.updateBox_();\n      },\n      this,\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    const ovmap = this.ovmap_;\n    if (!this.collapsed_) {\n      if (ovmap.isRendered()) {\n        this.viewExtent_ = undefined;\n        ovmap.render();\n        return;\n      }\n      ovmap.updateSize();\n      this.resetExtent_();\n      this.updateBoxAfterOvmapIsRendered_();\n    }\n  }\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the overview map view can rotate, `false` otherwise.\n   * @return {boolean} True if the control view can rotate.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Set whether the overview map view should rotate with the main map view.\n   * @param {boolean} rotateWithView True if the control view should rotate.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    if (this.rotateWithView_ === rotateWithView) {\n      return;\n    }\n    this.rotateWithView_ = rotateWithView;\n    if (this.getMap().getView().getRotation() !== 0) {\n      if (this.rotateWithView_) {\n        this.handleRotationChanged_();\n      } else {\n        this.ovmap_.getView().setRotation(0);\n      }\n      this.viewExtent_ = undefined;\n      this.validateExtent_();\n      this.updateBox_();\n    }\n  }\n\n  /**\n   * Return the overview map.\n   * @return {import(\"../Map.js\").default} Overview map.\n   * @api\n   */\n  getOverviewMap() {\n    return this.ovmap_;\n  }\n\n  /**\n   * Update the overview map element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.validateExtent_();\n    this.updateBox_();\n  }\n}\n\nexport default OverviewMap;\n","/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * @typedef {'degrees' | 'imperial' | 'nautical' | 'metric' | 'us'} Units\n * Units for the scale line.\n */\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className] CSS class name. The default is `ol-scale-bar` when configured with\n * `bar: true`. Otherwise the default is `ol-scale-line`.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {number} [maxWidth] Maximum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n * For cartesian measurements of the scaleline, you need to set the\n * `getPointResolution` method of your projection to simply return the input\n * value, e.g. `projection.setGetPointResolution(r => r);`\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options} [options] Scale line options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.style.pointerEvents = 'none';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ScaleLineOnSignature<void>}\n     */\n    this.un;\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n          ? 'ol-scale-bar'\n          : 'ol-scale-line';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.maxWidth_ = options.maxWidth;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addChangeListener(UNITS_PROP, this.handleUnitsChanged_);\n\n    this.setUnits(options.units || 'metric');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits = units == 'degrees' ? 'degrees' : 'm';\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits,\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    const maxWidth =\n      this.maxWidth_ !== undefined\n        ? (this.maxWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI\n        : undefined;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == 'degrees') {\n      const metersPerDegree = METERS_PER_UNIT.degrees;\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == 'imperial') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == 'nautical') {\n      pointResolution /= 1852;\n      suffix = 'NM';\n    } else if (units == 'metric') {\n      if (nominalCount < 1e-6) {\n        suffix = 'nm';\n        pointResolution *= 1e9;\n      } else if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == 'us') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      throw new Error('Invalid units');\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    let previousCount, previousWidth, previousDecimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      }\n      if (maxWidth !== undefined && width >= maxWidth) {\n        count = previousCount;\n        width = previousWidth;\n        decimalCount = previousDecimalCount;\n        break;\n      } else if (width >= minWidth) {\n        break;\n      }\n      previousCount = count;\n      previousWidth = width;\n      previousDecimalCount = decimalCount;\n      ++i;\n    }\n    const html = this.scaleBar_\n      ? this.createScaleBar(width, count, suffix)\n      : count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @return {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const resolutionScale = this.getScaleForResolution();\n    const mapScale =\n      resolutionScale < 1\n        ? Math.round(1 / resolutionScale).toLocaleString() + ' : 1'\n        : '1 : ' + Math.round(resolutionScale).toLocaleString();\n    const steps = this.scaleBarSteps_;\n    const stepWidth = width / steps;\n    const scaleSteps = [this.createMarker('absolute')];\n    for (let i = 0; i < steps; ++i) {\n      const cls =\n        i % 2 === 0 ? 'ol-scale-singlebar-odd' : 'ol-scale-singlebar-even';\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          `class=\"ol-scale-singlebar ${cls}\" ` +\n          `style=\"width: ${stepWidth}px;\"` +\n          '>' +\n          '</div>' +\n          this.createMarker('relative') +\n          // render text every second step, except when only 2 steps\n          (i % 2 === 0 || steps === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>',\n      );\n    }\n    // render text at the end\n    scaleSteps.push(this.createStepText(steps, width, true, scale, suffix));\n\n    const scaleBarText = this.scaleBarText_\n      ? `<div class=\"ol-scale-text\" style=\"width: ${width}px;\">` +\n        mapScale +\n        '</div>'\n      : '';\n    return scaleBarText + scaleSteps.join('');\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {'absolute'|'relative'} position The position, absolute or relative\n   * @return {string} The stringified div containing the marker\n   */\n  createMarker(position) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      `style=\"position: ${position}; top: ${top}px;\"` +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i The iterator\n   * @param {number} width The width the scalebar will currently use\n   * @param {boolean} isLast Flag indicating if we add the last step text\n   * @param {number} scale The current scale for the whole scalebar\n   * @param {string} suffix The suffix for the scale\n   * @return {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      `margin-left: ${margin}px;` +\n      `text-align: ${i === 0 ? 'left' : 'center'};` +\n      `min-width: ${minWidth}px;` +\n      `left: ${isLast ? width + 'px' : 'unset'};` +\n      '\">' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center,\n      'm',\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const inchesPerMeter = 1000 / 25.4;\n    return resolution * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n","/**\n * @module ol/control/ZoomSlider\n */\n\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {clamp} from '../math.js';\nimport {easeOut} from '../easing.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nconst Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1,\n};\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nclass ZoomSlider extends Control {\n  /**\n   * @param {Options} [options] Zoom slider options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      target: options.target,\n      element: document.createElement('div'),\n      render: options.render,\n    });\n\n    /**\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    this.currentResolution_ = undefined;\n\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    this.direction_ = Direction.VERTICAL;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.heightLimit_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.widthLimit_ = 0;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startX_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startY_;\n\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.thumbSize_ = null;\n\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    this.sliderInitialized_ = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoomslider';\n    const thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    const containerElement = this.element;\n    containerElement.className =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n\n    containerElement.addEventListener(\n      PointerEventType.POINTERDOWN,\n      this.handleDraggerStart_.bind(this),\n      false,\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERMOVE,\n      this.handleDraggerDrag_.bind(this),\n      false,\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERUP,\n      this.handleDraggerEnd_.bind(this),\n      false,\n    );\n\n    containerElement.addEventListener(\n      EventType.CLICK,\n      this.handleContainerClick_.bind(this),\n      false,\n    );\n    thumbElement.addEventListener(EventType.CLICK, stopPropagation, false);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      map.render();\n    }\n  }\n\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @return {boolean} Initialization successful\n   * @private\n   */\n  initSlider_() {\n    const container = this.element;\n    let containerWidth = container.offsetWidth;\n    let containerHeight = container.offsetHeight;\n    if (containerWidth === 0 && containerHeight === 0) {\n      return (this.sliderInitialized_ = false);\n    }\n\n    const containerStyle = getComputedStyle(container);\n    containerWidth -=\n      parseFloat(containerStyle['paddingRight']) +\n      parseFloat(containerStyle['paddingLeft']);\n    containerHeight -=\n      parseFloat(containerStyle['paddingTop']) +\n      parseFloat(containerStyle['paddingBottom']);\n    const thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n    const thumbStyle = getComputedStyle(thumb);\n    const thumbWidth =\n      thumb.offsetWidth +\n      parseFloat(thumbStyle['marginRight']) +\n      parseFloat(thumbStyle['marginLeft']);\n    const thumbHeight =\n      thumb.offsetHeight +\n      parseFloat(thumbStyle['marginTop']) +\n      parseFloat(thumbStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerWidth > containerHeight) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerWidth - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerHeight - thumbHeight;\n    }\n    return (this.sliderInitialized_ = true);\n  }\n\n  /**\n   * @param {PointerEvent} event The browser event to handle.\n   * @private\n   */\n  handleContainerClick_(event) {\n    const view = this.getMap().getView();\n\n    const relativePosition = this.getRelativePosition_(\n      event.offsetX - this.thumbSize_[0] / 2,\n      event.offsetY - this.thumbSize_[1] / 2,\n    );\n\n    const resolution = this.getResolutionForPosition_(relativePosition);\n    const zoom = view.getConstrainedZoom(view.getZoomForResolution(resolution));\n\n    view.animateInternal({\n      zoom: zoom,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n\n  /**\n   * Handle dragger start events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerStart_(event) {\n    if (!this.dragging_ && event.target === this.element.firstElementChild) {\n      const element = /** @type {HTMLElement} */ (\n        this.element.firstElementChild\n      );\n      this.getMap().getView().beginInteraction();\n      this.startX_ = event.clientX - parseFloat(element.style.left);\n      this.startY_ = event.clientY - parseFloat(element.style.top);\n      this.dragging_ = true;\n\n      if (this.dragListenerKeys_.length === 0) {\n        const drag = this.handleDraggerDrag_;\n        const end = this.handleDraggerEnd_;\n        const doc = this.getMap().getOwnerDocument();\n        this.dragListenerKeys_.push(\n          listen(doc, PointerEventType.POINTERMOVE, drag, this),\n          listen(doc, PointerEventType.POINTERUP, end, this),\n        );\n      }\n    }\n  }\n\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerDrag_(event) {\n    if (this.dragging_) {\n      const deltaX = event.clientX - this.startX_;\n      const deltaY = event.clientY - this.startY_;\n      const relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ =\n        this.getResolutionForPosition_(relativePosition);\n      this.getMap().getView().setResolution(this.currentResolution_);\n    }\n  }\n\n  /**\n   * Handle dragger end events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerEnd_(event) {\n    if (this.dragging_) {\n      const view = this.getMap().getView();\n      view.endInteraction();\n\n      this.dragging_ = false;\n      this.startX_ = undefined;\n      this.startY_ = undefined;\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n    }\n  }\n\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  setThumbPosition_(res) {\n    const position = this.getPositionForResolution_(res);\n    const thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  }\n\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  getRelativePosition_(x, y) {\n    let amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  }\n\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  getResolutionForPosition_(position) {\n    const fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  }\n\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  getPositionForResolution_(res) {\n    const fn = this.getMap().getView().getValueForResolutionFunction();\n    return clamp(1 - fn(res), 0, 1);\n  }\n\n  /**\n   * Update the zoomslider element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    if (!mapEvent.frameState) {\n      return;\n    }\n    if (!this.sliderInitialized_ && !this.initSlider_()) {\n      return;\n    }\n    const res = mapEvent.frameState.viewState.resolution;\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\nexport default ZoomSlider;\n","import {CollectionEvent as _ol_Collection$CollectionEvent} from '../../ol/Collection.js';\nimport $ol$Collection from '../../ol/Collection.js';\nimport {asImageLike as _ol_DataTile$asImageLike} from '../../ol/DataTile.js';\nimport {asArrayLike as _ol_DataTile$asArrayLike} from '../../ol/DataTile.js';\nimport {toArray as _ol_DataTile$toArray} from '../../ol/DataTile.js';\nimport $ol$DataTile from '../../ol/DataTile.js';\nimport $ol$Disposable from '../../ol/Disposable.js';\nimport $ol$Feature from '../../ol/Feature.js';\nimport {createStyleFunction as _ol_Feature$createStyleFunction} from '../../ol/Feature.js';\nimport {GeolocationError as _ol_Geolocation$GeolocationError} from '../../ol/Geolocation.js';\nimport $ol$Geolocation from '../../ol/Geolocation.js';\nimport $ol$Image from '../../ol/Image.js';\nimport {listenImage as _ol_Image$listenImage} from '../../ol/Image.js';\nimport {load as _ol_Image$load} from '../../ol/Image.js';\nimport {decodeFallback as _ol_Image$decodeFallback} from '../../ol/Image.js';\nimport {decode as _ol_Image$decode} from '../../ol/Image.js';\nimport $ol$ImageCanvas from '../../ol/ImageCanvas.js';\nimport $ol$ImageTile from '../../ol/ImageTile.js';\nimport $ol$Kinetic from '../../ol/Kinetic.js';\nimport $ol$Map from '../../ol/Map.js';\nimport $ol$MapBrowserEvent from '../../ol/MapBrowserEvent.js';\nimport $ol$MapBrowserEventHandler from '../../ol/MapBrowserEventHandler.js';\nimport $ol$MapEvent from '../../ol/MapEvent.js';\nimport {ObjectEvent as _ol_Object$ObjectEvent} from '../../ol/Object.js';\nimport $ol$Object from '../../ol/Object.js';\nimport $ol$Observable from '../../ol/Observable.js';\nimport {unByKey as _ol_Observable$unByKey} from '../../ol/Observable.js';\nimport $ol$Overlay from '../../ol/Overlay.js';\nimport $ol$Tile from '../../ol/Tile.js';\nimport $ol$TileCache from '../../ol/TileCache.js';\nimport $ol$TileQueue from '../../ol/TileQueue.js';\nimport {getTilePriority as _ol_TileQueue$getTilePriority} from '../../ol/TileQueue.js';\nimport $ol$TileRange from '../../ol/TileRange.js';\nimport {createOrUpdate as _ol_TileRange$createOrUpdate} from '../../ol/TileRange.js';\nimport $ol$VectorRenderTile from '../../ol/VectorRenderTile.js';\nimport $ol$View from '../../ol/View.js';\nimport {createCenterConstraint as _ol_View$createCenterConstraint} from '../../ol/View.js';\nimport {createResolutionConstraint as _ol_View$createResolutionConstraint} from '../../ol/View.js';\nimport {createRotationConstraint as _ol_View$createRotationConstraint} from '../../ol/View.js';\nimport {isNoopAnimation as _ol_View$isNoopAnimation} from '../../ol/View.js';\nimport {binarySearch as _ol_array$binarySearch} from '../../ol/array.js';\nimport {ascending as _ol_array$ascending} from '../../ol/array.js';\nimport {descending as _ol_array$descending} from '../../ol/array.js';\nimport {linearFindNearest as _ol_array$linearFindNearest} from '../../ol/array.js';\nimport {reverseSubArray as _ol_array$reverseSubArray} from '../../ol/array.js';\nimport {extend as _ol_array$extend} from '../../ol/array.js';\nimport {remove as _ol_array$remove} from '../../ol/array.js';\nimport {equals as _ol_array$equals} from '../../ol/array.js';\nimport {stableSort as _ol_array$stableSort} from '../../ol/array.js';\nimport {isSorted as _ol_array$isSorted} from '../../ol/array.js';\nimport {assert as _ol_asserts$assert} from '../../ol/asserts.js';\nimport {createExtent as _ol_centerconstraint$createExtent} from '../../ol/centerconstraint.js';\nimport {none as _ol_centerconstraint$none} from '../../ol/centerconstraint.js';\nimport {asString as _ol_color$asString} from '../../ol/color.js';\nimport {withAlpha as _ol_color$withAlpha} from '../../ol/color.js';\nimport {rgbaToLcha as _ol_color$rgbaToLcha} from '../../ol/color.js';\nimport {lchaToRgba as _ol_color$lchaToRgba} from '../../ol/color.js';\nimport {fromString as _ol_color$fromString} from '../../ol/color.js';\nimport {asArray as _ol_color$asArray} from '../../ol/color.js';\nimport {normalize as _ol_color$normalize} from '../../ol/color.js';\nimport {toString as _ol_color$toString} from '../../ol/color.js';\nimport {isStringColor as _ol_color$isStringColor} from '../../ol/color.js';\nimport {asColorLike as _ol_colorlike$asColorLike} from '../../ol/colorlike.js';\nimport {setLevel as _ol_console$setLevel} from '../../ol/console.js';\nimport {log as _ol_console$log} from '../../ol/console.js';\nimport {warn as _ol_console$warn} from '../../ol/console.js';\nimport {error as _ol_console$error} from '../../ol/console.js';\nimport {add as _ol_coordinate$add} from '../../ol/coordinate.js';\nimport {closestOnCircle as _ol_coordinate$closestOnCircle} from '../../ol/coordinate.js';\nimport {closestOnSegment as _ol_coordinate$closestOnSegment} from '../../ol/coordinate.js';\nimport {createStringXY as _ol_coordinate$createStringXY} from '../../ol/coordinate.js';\nimport {degreesToStringHDMS as _ol_coordinate$degreesToStringHDMS} from '../../ol/coordinate.js';\nimport {format as _ol_coordinate$format} from '../../ol/coordinate.js';\nimport {equals as _ol_coordinate$equals} from '../../ol/coordinate.js';\nimport {rotate as _ol_coordinate$rotate} from '../../ol/coordinate.js';\nimport {scale as _ol_coordinate$scale} from '../../ol/coordinate.js';\nimport {squaredDistance as _ol_coordinate$squaredDistance} from '../../ol/coordinate.js';\nimport {distance as _ol_coordinate$distance} from '../../ol/coordinate.js';\nimport {squaredDistanceToSegment as _ol_coordinate$squaredDistanceToSegment} from '../../ol/coordinate.js';\nimport {toStringHDMS as _ol_coordinate$toStringHDMS} from '../../ol/coordinate.js';\nimport {toStringXY as _ol_coordinate$toStringXY} from '../../ol/coordinate.js';\nimport {wrapX as _ol_coordinate$wrapX} from '../../ol/coordinate.js';\nimport {getWorldsAway as _ol_coordinate$getWorldsAway} from '../../ol/coordinate.js';\nimport {CLASS_HIDDEN as _ol_css$CLASS_HIDDEN} from '../../ol/css.js';\nimport {CLASS_SELECTABLE as _ol_css$CLASS_SELECTABLE} from '../../ol/css.js';\nimport {CLASS_UNSELECTABLE as _ol_css$CLASS_UNSELECTABLE} from '../../ol/css.js';\nimport {CLASS_UNSUPPORTED as _ol_css$CLASS_UNSUPPORTED} from '../../ol/css.js';\nimport {CLASS_CONTROL as _ol_css$CLASS_CONTROL} from '../../ol/css.js';\nimport {CLASS_COLLAPSED as _ol_css$CLASS_COLLAPSED} from '../../ol/css.js';\nimport {getFontParameters as _ol_css$getFontParameters} from '../../ol/css.js';\nimport {createCanvasContext2D as _ol_dom$createCanvasContext2D} from '../../ol/dom.js';\nimport {getSharedCanvasContext2D as _ol_dom$getSharedCanvasContext2D} from '../../ol/dom.js';\nimport {releaseCanvas as _ol_dom$releaseCanvas} from '../../ol/dom.js';\nimport {outerWidth as _ol_dom$outerWidth} from '../../ol/dom.js';\nimport {outerHeight as _ol_dom$outerHeight} from '../../ol/dom.js';\nimport {replaceNode as _ol_dom$replaceNode} from '../../ol/dom.js';\nimport {removeNode as _ol_dom$removeNode} from '../../ol/dom.js';\nimport {removeChildren as _ol_dom$removeChildren} from '../../ol/dom.js';\nimport {replaceChildren as _ol_dom$replaceChildren} from '../../ol/dom.js';\nimport {easeIn as _ol_easing$easeIn} from '../../ol/easing.js';\nimport {easeOut as _ol_easing$easeOut} from '../../ol/easing.js';\nimport {inAndOut as _ol_easing$inAndOut} from '../../ol/easing.js';\nimport {linear as _ol_easing$linear} from '../../ol/easing.js';\nimport {upAndDown as _ol_easing$upAndDown} from '../../ol/easing.js';\nimport {listen as _ol_events$listen} from '../../ol/events.js';\nimport {listenOnce as _ol_events$listenOnce} from '../../ol/events.js';\nimport {unlistenByKey as _ol_events$unlistenByKey} from '../../ol/events.js';\nimport {boundingExtent as _ol_extent$boundingExtent} from '../../ol/extent.js';\nimport {buffer as _ol_extent$buffer} from '../../ol/extent.js';\nimport {clone as _ol_extent$clone} from '../../ol/extent.js';\nimport {closestSquaredDistanceXY as _ol_extent$closestSquaredDistanceXY} from '../../ol/extent.js';\nimport {containsCoordinate as _ol_extent$containsCoordinate} from '../../ol/extent.js';\nimport {containsExtent as _ol_extent$containsExtent} from '../../ol/extent.js';\nimport {containsXY as _ol_extent$containsXY} from '../../ol/extent.js';\nimport {coordinateRelationship as _ol_extent$coordinateRelationship} from '../../ol/extent.js';\nimport {createEmpty as _ol_extent$createEmpty} from '../../ol/extent.js';\nimport {createOrUpdate as _ol_extent$createOrUpdate} from '../../ol/extent.js';\nimport {createOrUpdateEmpty as _ol_extent$createOrUpdateEmpty} from '../../ol/extent.js';\nimport {createOrUpdateFromCoordinate as _ol_extent$createOrUpdateFromCoordinate} from '../../ol/extent.js';\nimport {createOrUpdateFromCoordinates as _ol_extent$createOrUpdateFromCoordinates} from '../../ol/extent.js';\nimport {createOrUpdateFromFlatCoordinates as _ol_extent$createOrUpdateFromFlatCoordinates} from '../../ol/extent.js';\nimport {createOrUpdateFromRings as _ol_extent$createOrUpdateFromRings} from '../../ol/extent.js';\nimport {equals as _ol_extent$equals} from '../../ol/extent.js';\nimport {approximatelyEquals as _ol_extent$approximatelyEquals} from '../../ol/extent.js';\nimport {extend as _ol_extent$extend} from '../../ol/extent.js';\nimport {extendCoordinate as _ol_extent$extendCoordinate} from '../../ol/extent.js';\nimport {extendCoordinates as _ol_extent$extendCoordinates} from '../../ol/extent.js';\nimport {extendFlatCoordinates as _ol_extent$extendFlatCoordinates} from '../../ol/extent.js';\nimport {extendRings as _ol_extent$extendRings} from '../../ol/extent.js';\nimport {extendXY as _ol_extent$extendXY} from '../../ol/extent.js';\nimport {forEachCorner as _ol_extent$forEachCorner} from '../../ol/extent.js';\nimport {getArea as _ol_extent$getArea} from '../../ol/extent.js';\nimport {getBottomLeft as _ol_extent$getBottomLeft} from '../../ol/extent.js';\nimport {getBottomRight as _ol_extent$getBottomRight} from '../../ol/extent.js';\nimport {getCenter as _ol_extent$getCenter} from '../../ol/extent.js';\nimport {getCorner as _ol_extent$getCorner} from '../../ol/extent.js';\nimport {getEnlargedArea as _ol_extent$getEnlargedArea} from '../../ol/extent.js';\nimport {getForViewAndSize as _ol_extent$getForViewAndSize} from '../../ol/extent.js';\nimport {getRotatedViewport as _ol_extent$getRotatedViewport} from '../../ol/extent.js';\nimport {getHeight as _ol_extent$getHeight} from '../../ol/extent.js';\nimport {getIntersectionArea as _ol_extent$getIntersectionArea} from '../../ol/extent.js';\nimport {getIntersection as _ol_extent$getIntersection} from '../../ol/extent.js';\nimport {getMargin as _ol_extent$getMargin} from '../../ol/extent.js';\nimport {getSize as _ol_extent$getSize} from '../../ol/extent.js';\nimport {getTopLeft as _ol_extent$getTopLeft} from '../../ol/extent.js';\nimport {getTopRight as _ol_extent$getTopRight} from '../../ol/extent.js';\nimport {getWidth as _ol_extent$getWidth} from '../../ol/extent.js';\nimport {intersects as _ol_extent$intersects} from '../../ol/extent.js';\nimport {isEmpty as _ol_extent$isEmpty} from '../../ol/extent.js';\nimport {returnOrUpdate as _ol_extent$returnOrUpdate} from '../../ol/extent.js';\nimport {scaleFromCenter as _ol_extent$scaleFromCenter} from '../../ol/extent.js';\nimport {intersectsSegment as _ol_extent$intersectsSegment} from '../../ol/extent.js';\nimport {applyTransform as _ol_extent$applyTransform} from '../../ol/extent.js';\nimport {wrapX as _ol_extent$wrapX} from '../../ol/extent.js';\nimport {wrapAndSliceX as _ol_extent$wrapAndSliceX} from '../../ol/extent.js';\nimport {loadFeaturesXhr as _ol_featureloader$loadFeaturesXhr} from '../../ol/featureloader.js';\nimport {xhr as _ol_featureloader$xhr} from '../../ol/featureloader.js';\nimport {setWithCredentials as _ol_featureloader$setWithCredentials} from '../../ol/featureloader.js';\nimport {TRUE as _ol_functions$TRUE} from '../../ol/functions.js';\nimport {FALSE as _ol_functions$FALSE} from '../../ol/functions.js';\nimport {VOID as _ol_functions$VOID} from '../../ol/functions.js';\nimport {memoizeOne as _ol_functions$memoizeOne} from '../../ol/functions.js';\nimport {toPromise as _ol_functions$toPromise} from '../../ol/functions.js';\nimport {FIREFOX as _ol_has$FIREFOX} from '../../ol/has.js';\nimport {SAFARI as _ol_has$SAFARI} from '../../ol/has.js';\nimport {SAFARI_BUG_237906 as _ol_has$SAFARI_BUG_237906} from '../../ol/has.js';\nimport {WEBKIT as _ol_has$WEBKIT} from '../../ol/has.js';\nimport {MAC as _ol_has$MAC} from '../../ol/has.js';\nimport {DEVICE_PIXEL_RATIO as _ol_has$DEVICE_PIXEL_RATIO} from '../../ol/has.js';\nimport {WORKER_OFFSCREEN_CANVAS as _ol_has$WORKER_OFFSCREEN_CANVAS} from '../../ol/has.js';\nimport {IMAGE_DECODE as _ol_has$IMAGE_DECODE} from '../../ol/has.js';\nimport {CREATE_IMAGE_BITMAP as _ol_has$CREATE_IMAGE_BITMAP} from '../../ol/has.js';\nimport {PASSIVE_EVENT_LISTENERS as _ol_has$PASSIVE_EVENT_LISTENERS} from '../../ol/has.js';\nimport {all as _ol_loadingstrategy$all} from '../../ol/loadingstrategy.js';\nimport {bbox as _ol_loadingstrategy$bbox} from '../../ol/loadingstrategy.js';\nimport {tile as _ol_loadingstrategy$tile} from '../../ol/loadingstrategy.js';\nimport {clamp as _ol_math$clamp} from '../../ol/math.js';\nimport {squaredSegmentDistance as _ol_math$squaredSegmentDistance} from '../../ol/math.js';\nimport {squaredDistance as _ol_math$squaredDistance} from '../../ol/math.js';\nimport {solveLinearSystem as _ol_math$solveLinearSystem} from '../../ol/math.js';\nimport {toDegrees as _ol_math$toDegrees} from '../../ol/math.js';\nimport {toRadians as _ol_math$toRadians} from '../../ol/math.js';\nimport {modulo as _ol_math$modulo} from '../../ol/math.js';\nimport {lerp as _ol_math$lerp} from '../../ol/math.js';\nimport {toFixed as _ol_math$toFixed} from '../../ol/math.js';\nimport {round as _ol_math$round} from '../../ol/math.js';\nimport {floor as _ol_math$floor} from '../../ol/math.js';\nimport {ceil as _ol_math$ceil} from '../../ol/math.js';\nimport {jsonp as _ol_net$jsonp} from '../../ol/net.js';\nimport {ResponseError as _ol_net$ResponseError} from '../../ol/net.js';\nimport {ClientError as _ol_net$ClientError} from '../../ol/net.js';\nimport {getJSON as _ol_net$getJSON} from '../../ol/net.js';\nimport {resolveUrl as _ol_net$resolveUrl} from '../../ol/net.js';\nimport {overrideXHR as _ol_net$overrideXHR} from '../../ol/net.js';\nimport {restoreXHR as _ol_net$restoreXHR} from '../../ol/net.js';\nimport {clear as _ol_obj$clear} from '../../ol/obj.js';\nimport {isEmpty as _ol_obj$isEmpty} from '../../ol/obj.js';\nimport {disableCoordinateWarning as _ol_proj$disableCoordinateWarning} from '../../ol/proj.js';\nimport {cloneTransform as _ol_proj$cloneTransform} from '../../ol/proj.js';\nimport {identityTransform as _ol_proj$identityTransform} from '../../ol/proj.js';\nimport {addProjection as _ol_proj$addProjection} from '../../ol/proj.js';\nimport {addProjections as _ol_proj$addProjections} from '../../ol/proj.js';\nimport {get as _ol_proj$get} from '../../ol/proj.js';\nimport {getPointResolution as _ol_proj$getPointResolution} from '../../ol/proj.js';\nimport {addEquivalentProjections as _ol_proj$addEquivalentProjections} from '../../ol/proj.js';\nimport {addEquivalentTransforms as _ol_proj$addEquivalentTransforms} from '../../ol/proj.js';\nimport {clearAllProjections as _ol_proj$clearAllProjections} from '../../ol/proj.js';\nimport {createProjection as _ol_proj$createProjection} from '../../ol/proj.js';\nimport {createTransformFromCoordinateTransform as _ol_proj$createTransformFromCoordinateTransform} from '../../ol/proj.js';\nimport {addCoordinateTransforms as _ol_proj$addCoordinateTransforms} from '../../ol/proj.js';\nimport {fromLonLat as _ol_proj$fromLonLat} from '../../ol/proj.js';\nimport {toLonLat as _ol_proj$toLonLat} from '../../ol/proj.js';\nimport {equivalent as _ol_proj$equivalent} from '../../ol/proj.js';\nimport {getTransformFromProjections as _ol_proj$getTransformFromProjections} from '../../ol/proj.js';\nimport {getTransform as _ol_proj$getTransform} from '../../ol/proj.js';\nimport {transform as _ol_proj$transform} from '../../ol/proj.js';\nimport {transformExtent as _ol_proj$transformExtent} from '../../ol/proj.js';\nimport {transformWithProjections as _ol_proj$transformWithProjections} from '../../ol/proj.js';\nimport {setUserProjection as _ol_proj$setUserProjection} from '../../ol/proj.js';\nimport {clearUserProjection as _ol_proj$clearUserProjection} from '../../ol/proj.js';\nimport {getUserProjection as _ol_proj$getUserProjection} from '../../ol/proj.js';\nimport {useGeographic as _ol_proj$useGeographic} from '../../ol/proj.js';\nimport {toUserCoordinate as _ol_proj$toUserCoordinate} from '../../ol/proj.js';\nimport {fromUserCoordinate as _ol_proj$fromUserCoordinate} from '../../ol/proj.js';\nimport {toUserExtent as _ol_proj$toUserExtent} from '../../ol/proj.js';\nimport {fromUserExtent as _ol_proj$fromUserExtent} from '../../ol/proj.js';\nimport {toUserResolution as _ol_proj$toUserResolution} from '../../ol/proj.js';\nimport {fromUserResolution as _ol_proj$fromUserResolution} from '../../ol/proj.js';\nimport {createSafeCoordinateTransform as _ol_proj$createSafeCoordinateTransform} from '../../ol/proj.js';\nimport {addCommon as _ol_proj$addCommon} from '../../ol/proj.js';\nimport {toContext as _ol_render$toContext} from '../../ol/render.js';\nimport {getVectorContext as _ol_render$getVectorContext} from '../../ol/render.js';\nimport {getRenderPixel as _ol_render$getRenderPixel} from '../../ol/render.js';\nimport {canvasPool as _ol_reproj$canvasPool} from '../../ol/reproj.js';\nimport {calculateSourceResolution as _ol_reproj$calculateSourceResolution} from '../../ol/reproj.js';\nimport {calculateSourceExtentResolution as _ol_reproj$calculateSourceExtentResolution} from '../../ol/reproj.js';\nimport {render as _ol_reproj$render} from '../../ol/reproj.js';\nimport {fromResolutionLike as _ol_resolution$fromResolutionLike} from '../../ol/resolution.js';\nimport {createSnapToResolutions as _ol_resolutionconstraint$createSnapToResolutions} from '../../ol/resolutionconstraint.js';\nimport {createSnapToPower as _ol_resolutionconstraint$createSnapToPower} from '../../ol/resolutionconstraint.js';\nimport {createMinMaxResolution as _ol_resolutionconstraint$createMinMaxResolution} from '../../ol/resolutionconstraint.js';\nimport {disable as _ol_rotationconstraint$disable} from '../../ol/rotationconstraint.js';\nimport {none as _ol_rotationconstraint$none} from '../../ol/rotationconstraint.js';\nimport {createSnapToN as _ol_rotationconstraint$createSnapToN} from '../../ol/rotationconstraint.js';\nimport {createSnapToZero as _ol_rotationconstraint$createSnapToZero} from '../../ol/rotationconstraint.js';\nimport {buffer as _ol_size$buffer} from '../../ol/size.js';\nimport {hasArea as _ol_size$hasArea} from '../../ol/size.js';\nimport {scale as _ol_size$scale} from '../../ol/size.js';\nimport {toSize as _ol_size$toSize} from '../../ol/size.js';\nimport {sourcesFromTileGrid as _ol_source$sourcesFromTileGrid} from '../../ol/source.js';\nimport {DEFAULT_RADIUS as _ol_sphere$DEFAULT_RADIUS} from '../../ol/sphere.js';\nimport {getDistance as _ol_sphere$getDistance} from '../../ol/sphere.js';\nimport {getLength as _ol_sphere$getLength} from '../../ol/sphere.js';\nimport {getArea as _ol_sphere$getArea} from '../../ol/sphere.js';\nimport {offset as _ol_sphere$offset} from '../../ol/sphere.js';\nimport {padNumber as _ol_string$padNumber} from '../../ol/string.js';\nimport {compareVersions as _ol_string$compareVersions} from '../../ol/string.js';\nimport {createOrUpdate as _ol_tilecoord$createOrUpdate} from '../../ol/tilecoord.js';\nimport {getKeyZXY as _ol_tilecoord$getKeyZXY} from '../../ol/tilecoord.js';\nimport {getKey as _ol_tilecoord$getKey} from '../../ol/tilecoord.js';\nimport {getCacheKeyForTileKey as _ol_tilecoord$getCacheKeyForTileKey} from '../../ol/tilecoord.js';\nimport {fromKey as _ol_tilecoord$fromKey} from '../../ol/tilecoord.js';\nimport {hash as _ol_tilecoord$hash} from '../../ol/tilecoord.js';\nimport {withinExtentAndZ as _ol_tilecoord$withinExtentAndZ} from '../../ol/tilecoord.js';\nimport {getForProjection as _ol_tilegrid$getForProjection} from '../../ol/tilegrid.js';\nimport {wrapX as _ol_tilegrid$wrapX} from '../../ol/tilegrid.js';\nimport {createForExtent as _ol_tilegrid$createForExtent} from '../../ol/tilegrid.js';\nimport {createXYZ as _ol_tilegrid$createXYZ} from '../../ol/tilegrid.js';\nimport {createForProjection as _ol_tilegrid$createForProjection} from '../../ol/tilegrid.js';\nimport {extentFromProjection as _ol_tilegrid$extentFromProjection} from '../../ol/tilegrid.js';\nimport {createFromTemplate as _ol_tileurlfunction$createFromTemplate} from '../../ol/tileurlfunction.js';\nimport {createFromTemplates as _ol_tileurlfunction$createFromTemplates} from '../../ol/tileurlfunction.js';\nimport {createFromTileUrlFunctions as _ol_tileurlfunction$createFromTileUrlFunctions} from '../../ol/tileurlfunction.js';\nimport {nullTileUrlFunction as _ol_tileurlfunction$nullTileUrlFunction} from '../../ol/tileurlfunction.js';\nimport {expandUrl as _ol_tileurlfunction$expandUrl} from '../../ol/tileurlfunction.js';\nimport {create as _ol_transform$create} from '../../ol/transform.js';\nimport {reset as _ol_transform$reset} from '../../ol/transform.js';\nimport {multiply as _ol_transform$multiply} from '../../ol/transform.js';\nimport {set as _ol_transform$set} from '../../ol/transform.js';\nimport {setFromArray as _ol_transform$setFromArray} from '../../ol/transform.js';\nimport {apply as _ol_transform$apply} from '../../ol/transform.js';\nimport {rotate as _ol_transform$rotate} from '../../ol/transform.js';\nimport {scale as _ol_transform$scale} from '../../ol/transform.js';\nimport {makeScale as _ol_transform$makeScale} from '../../ol/transform.js';\nimport {translate as _ol_transform$translate} from '../../ol/transform.js';\nimport {compose as _ol_transform$compose} from '../../ol/transform.js';\nimport {composeCssTransform as _ol_transform$composeCssTransform} from '../../ol/transform.js';\nimport {invert as _ol_transform$invert} from '../../ol/transform.js';\nimport {makeInverse as _ol_transform$makeInverse} from '../../ol/transform.js';\nimport {determinant as _ol_transform$determinant} from '../../ol/transform.js';\nimport {toString as _ol_transform$toString} from '../../ol/transform.js';\nimport {appendParams as _ol_uri$appendParams} from '../../ol/uri.js';\nimport {abstract as _ol_util$abstract} from '../../ol/util.js';\nimport {getUid as _ol_util$getUid} from '../../ol/util.js';\nimport {VERSION as _ol_util$VERSION} from '../../ol/util.js';\nimport {XML_SCHEMA_INSTANCE_URI as _ol_xml$XML_SCHEMA_INSTANCE_URI} from '../../ol/xml.js';\nimport {createElementNS as _ol_xml$createElementNS} from '../../ol/xml.js';\nimport {getAllTextContent as _ol_xml$getAllTextContent} from '../../ol/xml.js';\nimport {getAllTextContent_ as _ol_xml$getAllTextContent_} from '../../ol/xml.js';\nimport {isDocument as _ol_xml$isDocument} from '../../ol/xml.js';\nimport {getAttributeNS as _ol_xml$getAttributeNS} from '../../ol/xml.js';\nimport {parse as _ol_xml$parse} from '../../ol/xml.js';\nimport {makeArrayExtender as _ol_xml$makeArrayExtender} from '../../ol/xml.js';\nimport {makeArrayPusher as _ol_xml$makeArrayPusher} from '../../ol/xml.js';\nimport {makeReplacer as _ol_xml$makeReplacer} from '../../ol/xml.js';\nimport {makeObjectPropertyPusher as _ol_xml$makeObjectPropertyPusher} from '../../ol/xml.js';\nimport {makeObjectPropertySetter as _ol_xml$makeObjectPropertySetter} from '../../ol/xml.js';\nimport {makeChildAppender as _ol_xml$makeChildAppender} from '../../ol/xml.js';\nimport {makeArraySerializer as _ol_xml$makeArraySerializer} from '../../ol/xml.js';\nimport {makeSimpleNodeFactory as _ol_xml$makeSimpleNodeFactory} from '../../ol/xml.js';\nimport {OBJECT_PROPERTY_NODE_FACTORY as _ol_xml$OBJECT_PROPERTY_NODE_FACTORY} from '../../ol/xml.js';\nimport {makeSequence as _ol_xml$makeSequence} from '../../ol/xml.js';\nimport {makeStructureNS as _ol_xml$makeStructureNS} from '../../ol/xml.js';\nimport {parseNode as _ol_xml$parseNode} from '../../ol/xml.js';\nimport {pushParseAndPop as _ol_xml$pushParseAndPop} from '../../ol/xml.js';\nimport {serialize as _ol_xml$serialize} from '../../ol/xml.js';\nimport {pushSerializeAndPop as _ol_xml$pushSerializeAndPop} from '../../ol/xml.js';\nimport {registerXMLSerializer as _ol_xml$registerXMLSerializer} from '../../ol/xml.js';\nimport {getXMLSerializer as _ol_xml$getXMLSerializer} from '../../ol/xml.js';\nimport {registerDocument as _ol_xml$registerDocument} from '../../ol/xml.js';\nimport {getDocument as _ol_xml$getDocument} from '../../ol/xml.js';\nimport {create as _ol_vec_mat4$create} from '../../ol/vec/mat4.js';\nimport {fromTransform as _ol_vec_mat4$fromTransform} from '../../ol/vec/mat4.js';\nimport $ol$tilegrid$TileGrid from '../../ol/tilegrid/TileGrid.js';\nimport $ol$tilegrid$WMTS from '../../ol/tilegrid/WMTS.js';\nimport {createFromCapabilitiesMatrixSet as _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet} from '../../ol/tilegrid/WMTS.js';\nimport {DEFAULT_MAX_ZOOM as _ol_tilegrid_common$DEFAULT_MAX_ZOOM} from '../../ol/tilegrid/common.js';\nimport {DEFAULT_TILE_SIZE as _ol_tilegrid_common$DEFAULT_TILE_SIZE} from '../../ol/tilegrid/common.js';\nimport $ol$style$Circle from '../../ol/style/Circle.js';\nimport $ol$style$Fill from '../../ol/style/Fill.js';\nimport $ol$style$Icon from '../../ol/style/Icon.js';\nimport $ol$style$IconImage from '../../ol/style/IconImage.js';\nimport {get as _ol_style_IconImage$get} from '../../ol/style/IconImage.js';\nimport $ol$style$IconImageCache from '../../ol/style/IconImageCache.js';\nimport {getCacheKey as _ol_style_IconImageCache$getCacheKey} from '../../ol/style/IconImageCache.js';\nimport {shared as _ol_style_IconImageCache$shared} from '../../ol/style/IconImageCache.js';\nimport $ol$style$Image from '../../ol/style/Image.js';\nimport $ol$style$RegularShape from '../../ol/style/RegularShape.js';\nimport $ol$style$Stroke from '../../ol/style/Stroke.js';\nimport $ol$style$Style from '../../ol/style/Style.js';\nimport {toFunction as _ol_style_Style$toFunction} from '../../ol/style/Style.js';\nimport {createDefaultStyle as _ol_style_Style$createDefaultStyle} from '../../ol/style/Style.js';\nimport {createEditingStyle as _ol_style_Style$createEditingStyle} from '../../ol/style/Style.js';\nimport $ol$style$Text from '../../ol/style/Text.js';\nimport {createDefaultStyle as _ol_style_flat$createDefaultStyle} from '../../ol/style/flat.js';\nimport $ol$structs$LRUCache from '../../ol/structs/LRUCache.js';\nimport $ol$structs$LinkedList from '../../ol/structs/LinkedList.js';\nimport {DROP as _ol_structs_PriorityQueue$DROP} from '../../ol/structs/PriorityQueue.js';\nimport $ol$structs$PriorityQueue from '../../ol/structs/PriorityQueue.js';\nimport $ol$structs$RBush from '../../ol/structs/RBush.js';\nimport {quadKey as _ol_source_BingMaps$quadKey} from '../../ol/source/BingMaps.js';\nimport $ol$source$BingMaps from '../../ol/source/BingMaps.js';\nimport $ol$source$Cluster from '../../ol/source/Cluster.js';\nimport $ol$source$DataTile from '../../ol/source/DataTile.js';\nimport $ol$source$Google from '../../ol/source/Google.js';\nimport {ImageSourceEvent as _ol_source_Image$ImageSourceEvent} from '../../ol/source/Image.js';\nimport $ol$source$Image from '../../ol/source/Image.js';\nimport {defaultImageLoadFunction as _ol_source_Image$defaultImageLoadFunction} from '../../ol/source/Image.js';\nimport {getRequestExtent as _ol_source_Image$getRequestExtent} from '../../ol/source/Image.js';\nimport $ol$source$ImageArcGISRest from '../../ol/source/ImageArcGISRest.js';\nimport $ol$source$ImageCanvas from '../../ol/source/ImageCanvas.js';\nimport $ol$source$ImageStatic from '../../ol/source/ImageStatic.js';\nimport $ol$source$ImageWMS from '../../ol/source/ImageWMS.js';\nimport $ol$source$OGCMapTile from '../../ol/source/OGCMapTile.js';\nimport {ATTRIBUTION as _ol_source_OSM$ATTRIBUTION} from '../../ol/source/OSM.js';\nimport $ol$source$OSM from '../../ol/source/OSM.js';\nimport {newImageData as _ol_source_Raster$newImageData} from '../../ol/source/Raster.js';\nimport {Processor as _ol_source_Raster$Processor} from '../../ol/source/Raster.js';\nimport {RasterSourceEvent as _ol_source_Raster$RasterSourceEvent} from '../../ol/source/Raster.js';\nimport $ol$source$Raster from '../../ol/source/Raster.js';\nimport $ol$source$Source from '../../ol/source/Source.js';\nimport $ol$source$StadiaMaps from '../../ol/source/StadiaMaps.js';\nimport $ol$source$Tile from '../../ol/source/Tile.js';\nimport {TileSourceEvent as _ol_source_Tile$TileSourceEvent} from '../../ol/source/Tile.js';\nimport $ol$source$TileArcGISRest from '../../ol/source/TileArcGISRest.js';\nimport $ol$source$TileDebug from '../../ol/source/TileDebug.js';\nimport $ol$source$TileImage from '../../ol/source/TileImage.js';\nimport $ol$source$TileJSON from '../../ol/source/TileJSON.js';\nimport $ol$source$TileWMS from '../../ol/source/TileWMS.js';\nimport {CustomTile as _ol_source_UTFGrid$CustomTile} from '../../ol/source/UTFGrid.js';\nimport $ol$source$UTFGrid from '../../ol/source/UTFGrid.js';\nimport $ol$source$UrlTile from '../../ol/source/UrlTile.js';\nimport {VectorSourceEvent as _ol_source_Vector$VectorSourceEvent} from '../../ol/source/Vector.js';\nimport $ol$source$Vector from '../../ol/source/Vector.js';\nimport $ol$source$WMTS from '../../ol/source/WMTS.js';\nimport {optionsFromCapabilities as _ol_source_WMTS$optionsFromCapabilities} from '../../ol/source/WMTS.js';\nimport $ol$source$XYZ from '../../ol/source/XYZ.js';\nimport {getRequestUrl as _ol_source_arcgisRest$getRequestUrl} from '../../ol/source/arcgisRest.js';\nimport {createLoader as _ol_source_arcgisRest$createLoader} from '../../ol/source/arcgisRest.js';\nimport {DEFAULT_WMS_VERSION as _ol_source_common$DEFAULT_WMS_VERSION} from '../../ol/source/common.js';\nimport {DECIMALS as _ol_source_common$DECIMALS} from '../../ol/source/common.js';\nimport {appendCollectionsQueryParam as _ol_source_ogcTileUtil$appendCollectionsQueryParam} from '../../ol/source/ogcTileUtil.js';\nimport {getMapTileUrlTemplate as _ol_source_ogcTileUtil$getMapTileUrlTemplate} from '../../ol/source/ogcTileUtil.js';\nimport {getVectorTileUrlTemplate as _ol_source_ogcTileUtil$getVectorTileUrlTemplate} from '../../ol/source/ogcTileUtil.js';\nimport {getTileSetInfo as _ol_source_ogcTileUtil$getTileSetInfo} from '../../ol/source/ogcTileUtil.js';\nimport {createLoader as _ol_source_static$createLoader} from '../../ol/source/static.js';\nimport {DEFAULT_VERSION as _ol_source_wms$DEFAULT_VERSION} from '../../ol/source/wms.js';\nimport {getRequestUrl as _ol_source_wms$getRequestUrl} from '../../ol/source/wms.js';\nimport {getImageSrc as _ol_source_wms$getImageSrc} from '../../ol/source/wms.js';\nimport {getRequestParams as _ol_source_wms$getRequestParams} from '../../ol/source/wms.js';\nimport {createLoader as _ol_source_wms$createLoader} from '../../ol/source/wms.js';\nimport {getFeatureInfoUrl as _ol_source_wms$getFeatureInfoUrl} from '../../ol/source/wms.js';\nimport {getLegendUrl as _ol_source_wms$getLegendUrl} from '../../ol/source/wms.js';\nimport $ol$reproj$DataTile from '../../ol/reproj/DataTile.js';\nimport $ol$reproj$Image from '../../ol/reproj/Image.js';\nimport $ol$reproj$Tile from '../../ol/reproj/Tile.js';\nimport $ol$reproj$Triangulation from '../../ol/reproj/Triangulation.js';\nimport {ERROR_THRESHOLD as _ol_reproj_common$ERROR_THRESHOLD} from '../../ol/reproj/common.js';\nimport $ol$renderer$Composite from '../../ol/renderer/Composite.js';\nimport $ol$renderer$Layer from '../../ol/renderer/Layer.js';\nimport $ol$renderer$Map from '../../ol/renderer/Map.js';\nimport {defaultOrder as _ol_renderer_vector$defaultOrder} from '../../ol/renderer/vector.js';\nimport {getSquaredTolerance as _ol_renderer_vector$getSquaredTolerance} from '../../ol/renderer/vector.js';\nimport {getTolerance as _ol_renderer_vector$getTolerance} from '../../ol/renderer/vector.js';\nimport {renderFeature as _ol_renderer_vector$renderFeature} from '../../ol/renderer/vector.js';\nimport $ol$renderer$canvas$ImageLayer from '../../ol/renderer/canvas/ImageLayer.js';\nimport {canvasPool as _ol_renderer_canvas_Layer$canvasPool} from '../../ol/renderer/canvas/Layer.js';\nimport $ol$renderer$canvas$Layer from '../../ol/renderer/canvas/Layer.js';\nimport $ol$renderer$canvas$TileLayer from '../../ol/renderer/canvas/TileLayer.js';\nimport $ol$renderer$canvas$VectorImageLayer from '../../ol/renderer/canvas/VectorImageLayer.js';\nimport $ol$renderer$canvas$VectorLayer from '../../ol/renderer/canvas/VectorLayer.js';\nimport $ol$render$Box from '../../ol/render/Box.js';\nimport $ol$render$Event from '../../ol/render/Event.js';\nimport $ol$render$Feature from '../../ol/render/Feature.js';\nimport {toGeometry as _ol_render_Feature$toGeometry} from '../../ol/render/Feature.js';\nimport {toFeature as _ol_render_Feature$toFeature} from '../../ol/render/Feature.js';\nimport $ol$render$VectorContext from '../../ol/render/VectorContext.js';\nimport {defaultFont as _ol_render_canvas$defaultFont} from '../../ol/render/canvas.js';\nimport {defaultFillStyle as _ol_render_canvas$defaultFillStyle} from '../../ol/render/canvas.js';\nimport {defaultLineCap as _ol_render_canvas$defaultLineCap} from '../../ol/render/canvas.js';\nimport {defaultLineDash as _ol_render_canvas$defaultLineDash} from '../../ol/render/canvas.js';\nimport {defaultLineDashOffset as _ol_render_canvas$defaultLineDashOffset} from '../../ol/render/canvas.js';\nimport {defaultLineJoin as _ol_render_canvas$defaultLineJoin} from '../../ol/render/canvas.js';\nimport {defaultMiterLimit as _ol_render_canvas$defaultMiterLimit} from '../../ol/render/canvas.js';\nimport {defaultStrokeStyle as _ol_render_canvas$defaultStrokeStyle} from '../../ol/render/canvas.js';\nimport {defaultTextAlign as _ol_render_canvas$defaultTextAlign} from '../../ol/render/canvas.js';\nimport {defaultTextBaseline as _ol_render_canvas$defaultTextBaseline} from '../../ol/render/canvas.js';\nimport {defaultPadding as _ol_render_canvas$defaultPadding} from '../../ol/render/canvas.js';\nimport {defaultLineWidth as _ol_render_canvas$defaultLineWidth} from '../../ol/render/canvas.js';\nimport {checkedFonts as _ol_render_canvas$checkedFonts} from '../../ol/render/canvas.js';\nimport {textHeights as _ol_render_canvas$textHeights} from '../../ol/render/canvas.js';\nimport {registerFont as _ol_render_canvas$registerFont} from '../../ol/render/canvas.js';\nimport {measureTextHeight as _ol_render_canvas$measureTextHeight} from '../../ol/render/canvas.js';\nimport {measureTextWidth as _ol_render_canvas$measureTextWidth} from '../../ol/render/canvas.js';\nimport {measureAndCacheTextWidth as _ol_render_canvas$measureAndCacheTextWidth} from '../../ol/render/canvas.js';\nimport {getTextDimensions as _ol_render_canvas$getTextDimensions} from '../../ol/render/canvas.js';\nimport {rotateAtOffset as _ol_render_canvas$rotateAtOffset} from '../../ol/render/canvas.js';\nimport {drawImageOrLabel as _ol_render_canvas$drawImageOrLabel} from '../../ol/render/canvas.js';\nimport $ol$render$canvas$Builder from '../../ol/render/canvas/Builder.js';\nimport $ol$render$canvas$BuilderGroup from '../../ol/render/canvas/BuilderGroup.js';\nimport $ol$render$canvas$Executor from '../../ol/render/canvas/Executor.js';\nimport {ALL as _ol_render_canvas_ExecutorGroup$ALL} from '../../ol/render/canvas/ExecutorGroup.js';\nimport {DECLUTTER as _ol_render_canvas_ExecutorGroup$DECLUTTER} from '../../ol/render/canvas/ExecutorGroup.js';\nimport {NON_DECLUTTER as _ol_render_canvas_ExecutorGroup$NON_DECLUTTER} from '../../ol/render/canvas/ExecutorGroup.js';\nimport $ol$render$canvas$ExecutorGroup from '../../ol/render/canvas/ExecutorGroup.js';\nimport {getPixelIndexArray as _ol_render_canvas_ExecutorGroup$getPixelIndexArray} from '../../ol/render/canvas/ExecutorGroup.js';\nimport $ol$render$canvas$ImageBuilder from '../../ol/render/canvas/ImageBuilder.js';\nimport $ol$render$canvas$Immediate from '../../ol/render/canvas/Immediate.js';\nimport {fillInstruction as _ol_render_canvas_Instruction$fillInstruction} from '../../ol/render/canvas/Instruction.js';\nimport {strokeInstruction as _ol_render_canvas_Instruction$strokeInstruction} from '../../ol/render/canvas/Instruction.js';\nimport {beginPathInstruction as _ol_render_canvas_Instruction$beginPathInstruction} from '../../ol/render/canvas/Instruction.js';\nimport {closePathInstruction as _ol_render_canvas_Instruction$closePathInstruction} from '../../ol/render/canvas/Instruction.js';\nimport $ol$render$canvas$LineStringBuilder from '../../ol/render/canvas/LineStringBuilder.js';\nimport $ol$render$canvas$PolygonBuilder from '../../ol/render/canvas/PolygonBuilder.js';\nimport {TEXT_ALIGN as _ol_render_canvas_TextBuilder$TEXT_ALIGN} from '../../ol/render/canvas/TextBuilder.js';\nimport $ol$render$canvas$TextBuilder from '../../ol/render/canvas/TextBuilder.js';\nimport $ol$render$canvas$ZIndexContext from '../../ol/render/canvas/ZIndexContext.js';\nimport {HIT_DETECT_RESOLUTION as _ol_render_canvas_hitdetect$HIT_DETECT_RESOLUTION} from '../../ol/render/canvas/hitdetect.js';\nimport {createHitDetectionImageData as _ol_render_canvas_hitdetect$createHitDetectionImageData} from '../../ol/render/canvas/hitdetect.js';\nimport {hitDetect as _ol_render_canvas_hitdetect$hitDetect} from '../../ol/render/canvas/hitdetect.js';\nimport {rulesToStyleFunction as _ol_render_canvas_style$rulesToStyleFunction} from '../../ol/render/canvas/style.js';\nimport {flatStylesToStyleFunction as _ol_render_canvas_style$flatStylesToStyleFunction} from '../../ol/render/canvas/style.js';\nimport {buildRuleSet as _ol_render_canvas_style$buildRuleSet} from '../../ol/render/canvas/style.js';\nimport {buildStyle as _ol_render_canvas_style$buildStyle} from '../../ol/render/canvas/style.js';\nimport $ol$proj$Projection from '../../ol/proj/Projection.js';\nimport {fromCode as _ol_proj_Units$fromCode} from '../../ol/proj/Units.js';\nimport {METERS_PER_UNIT as _ol_proj_Units$METERS_PER_UNIT} from '../../ol/proj/Units.js';\nimport {RADIUS as _ol_proj_epsg3857$RADIUS} from '../../ol/proj/epsg3857.js';\nimport {HALF_SIZE as _ol_proj_epsg3857$HALF_SIZE} from '../../ol/proj/epsg3857.js';\nimport {EXTENT as _ol_proj_epsg3857$EXTENT} from '../../ol/proj/epsg3857.js';\nimport {WORLD_EXTENT as _ol_proj_epsg3857$WORLD_EXTENT} from '../../ol/proj/epsg3857.js';\nimport {MAX_SAFE_Y as _ol_proj_epsg3857$MAX_SAFE_Y} from '../../ol/proj/epsg3857.js';\nimport {PROJECTIONS as _ol_proj_epsg3857$PROJECTIONS} from '../../ol/proj/epsg3857.js';\nimport {fromEPSG4326 as _ol_proj_epsg3857$fromEPSG4326} from '../../ol/proj/epsg3857.js';\nimport {toEPSG4326 as _ol_proj_epsg3857$toEPSG4326} from '../../ol/proj/epsg3857.js';\nimport {RADIUS as _ol_proj_epsg4326$RADIUS} from '../../ol/proj/epsg4326.js';\nimport {EXTENT as _ol_proj_epsg4326$EXTENT} from '../../ol/proj/epsg4326.js';\nimport {METERS_PER_UNIT as _ol_proj_epsg4326$METERS_PER_UNIT} from '../../ol/proj/epsg4326.js';\nimport {PROJECTIONS as _ol_proj_epsg4326$PROJECTIONS} from '../../ol/proj/epsg4326.js';\nimport {isRegistered as _ol_proj_proj4$isRegistered} from '../../ol/proj/proj4.js';\nimport {unregister as _ol_proj_proj4$unregister} from '../../ol/proj/proj4.js';\nimport {register as _ol_proj_proj4$register} from '../../ol/proj/proj4.js';\nimport {setEPSGLookup as _ol_proj_proj4$setEPSGLookup} from '../../ol/proj/proj4.js';\nimport {getEPSGLookup as _ol_proj_proj4$getEPSGLookup} from '../../ol/proj/proj4.js';\nimport {fromEPSGCode as _ol_proj_proj4$fromEPSGCode} from '../../ol/proj/proj4.js';\nimport {epsgLookupMapTiler as _ol_proj_proj4$epsgLookupMapTiler} from '../../ol/proj/proj4.js';\nimport {clear as _ol_proj_projections$clear} from '../../ol/proj/projections.js';\nimport {get as _ol_proj_projections$get} from '../../ol/proj/projections.js';\nimport {add as _ol_proj_projections$add} from '../../ol/proj/projections.js';\nimport {clear as _ol_proj_transforms$clear} from '../../ol/proj/transforms.js';\nimport {add as _ol_proj_transforms$add} from '../../ol/proj/transforms.js';\nimport {remove as _ol_proj_transforms$remove} from '../../ol/proj/transforms.js';\nimport {get as _ol_proj_transforms$get} from '../../ol/proj/transforms.js';\nimport $ol$layer$Base from '../../ol/layer/Base.js';\nimport $ol$layer$BaseImage from '../../ol/layer/BaseImage.js';\nimport $ol$layer$BaseTile from '../../ol/layer/BaseTile.js';\nimport $ol$layer$BaseVector from '../../ol/layer/BaseVector.js';\nimport $ol$layer$Graticule from '../../ol/layer/Graticule.js';\nimport {GroupEvent as _ol_layer_Group$GroupEvent} from '../../ol/layer/Group.js';\nimport $ol$layer$Group from '../../ol/layer/Group.js';\nimport $ol$layer$Heatmap from '../../ol/layer/Heatmap.js';\nimport $ol$layer$Image from '../../ol/layer/Image.js';\nimport $ol$layer$Layer from '../../ol/layer/Layer.js';\nimport {inView as _ol_layer_Layer$inView} from '../../ol/layer/Layer.js';\nimport $ol$layer$Tile from '../../ol/layer/Tile.js';\nimport $ol$layer$Vector from '../../ol/layer/Vector.js';\nimport $ol$layer$VectorImage from '../../ol/layer/VectorImage.js';\nimport $ol$interaction$DblClickDragZoom from '../../ol/interaction/DblClickDragZoom.js';\nimport $ol$interaction$DoubleClickZoom from '../../ol/interaction/DoubleClickZoom.js';\nimport {DragAndDropEvent as _ol_interaction_DragAndDrop$DragAndDropEvent} from '../../ol/interaction/DragAndDrop.js';\nimport $ol$interaction$DragAndDrop from '../../ol/interaction/DragAndDrop.js';\nimport {DragBoxEvent as _ol_interaction_DragBox$DragBoxEvent} from '../../ol/interaction/DragBox.js';\nimport $ol$interaction$DragBox from '../../ol/interaction/DragBox.js';\nimport $ol$interaction$DragPan from '../../ol/interaction/DragPan.js';\nimport $ol$interaction$DragRotate from '../../ol/interaction/DragRotate.js';\nimport $ol$interaction$DragRotateAndZoom from '../../ol/interaction/DragRotateAndZoom.js';\nimport $ol$interaction$DragZoom from '../../ol/interaction/DragZoom.js';\nimport {DrawEvent as _ol_interaction_Draw$DrawEvent} from '../../ol/interaction/Draw.js';\nimport $ol$interaction$Draw from '../../ol/interaction/Draw.js';\nimport {createRegularPolygon as _ol_interaction_Draw$createRegularPolygon} from '../../ol/interaction/Draw.js';\nimport {createBox as _ol_interaction_Draw$createBox} from '../../ol/interaction/Draw.js';\nimport {ExtentEvent as _ol_interaction_Extent$ExtentEvent} from '../../ol/interaction/Extent.js';\nimport $ol$interaction$Extent from '../../ol/interaction/Extent.js';\nimport $ol$interaction$Interaction from '../../ol/interaction/Interaction.js';\nimport {pan as _ol_interaction_Interaction$pan} from '../../ol/interaction/Interaction.js';\nimport {zoomByDelta as _ol_interaction_Interaction$zoomByDelta} from '../../ol/interaction/Interaction.js';\nimport $ol$interaction$KeyboardPan from '../../ol/interaction/KeyboardPan.js';\nimport $ol$interaction$KeyboardZoom from '../../ol/interaction/KeyboardZoom.js';\nimport $ol$interaction$Link from '../../ol/interaction/Link.js';\nimport {ModifyEvent as _ol_interaction_Modify$ModifyEvent} from '../../ol/interaction/Modify.js';\nimport $ol$interaction$Modify from '../../ol/interaction/Modify.js';\nimport $ol$interaction$MouseWheelZoom from '../../ol/interaction/MouseWheelZoom.js';\nimport $ol$interaction$PinchRotate from '../../ol/interaction/PinchRotate.js';\nimport $ol$interaction$PinchZoom from '../../ol/interaction/PinchZoom.js';\nimport $ol$interaction$Pointer from '../../ol/interaction/Pointer.js';\nimport {centroid as _ol_interaction_Pointer$centroid} from '../../ol/interaction/Pointer.js';\nimport {SelectEvent as _ol_interaction_Select$SelectEvent} from '../../ol/interaction/Select.js';\nimport $ol$interaction$Select from '../../ol/interaction/Select.js';\nimport $ol$interaction$Snap from '../../ol/interaction/Snap.js';\nimport {TranslateEvent as _ol_interaction_Translate$TranslateEvent} from '../../ol/interaction/Translate.js';\nimport $ol$interaction$Translate from '../../ol/interaction/Translate.js';\nimport {defaults as _ol_interaction_defaults$defaults} from '../../ol/interaction/defaults.js';\nimport $ol$geom$Circle from '../../ol/geom/Circle.js';\nimport $ol$geom$Geometry from '../../ol/geom/Geometry.js';\nimport $ol$geom$GeometryCollection from '../../ol/geom/GeometryCollection.js';\nimport $ol$geom$LineString from '../../ol/geom/LineString.js';\nimport $ol$geom$LinearRing from '../../ol/geom/LinearRing.js';\nimport $ol$geom$MultiLineString from '../../ol/geom/MultiLineString.js';\nimport $ol$geom$MultiPoint from '../../ol/geom/MultiPoint.js';\nimport $ol$geom$MultiPolygon from '../../ol/geom/MultiPolygon.js';\nimport $ol$geom$Point from '../../ol/geom/Point.js';\nimport $ol$geom$Polygon from '../../ol/geom/Polygon.js';\nimport {circular as _ol_geom_Polygon$circular} from '../../ol/geom/Polygon.js';\nimport {fromExtent as _ol_geom_Polygon$fromExtent} from '../../ol/geom/Polygon.js';\nimport {fromCircle as _ol_geom_Polygon$fromCircle} from '../../ol/geom/Polygon.js';\nimport {makeRegular as _ol_geom_Polygon$makeRegular} from '../../ol/geom/Polygon.js';\nimport $ol$geom$SimpleGeometry from '../../ol/geom/SimpleGeometry.js';\nimport {getLayoutForStride as _ol_geom_SimpleGeometry$getLayoutForStride} from '../../ol/geom/SimpleGeometry.js';\nimport {getStrideForLayout as _ol_geom_SimpleGeometry$getStrideForLayout} from '../../ol/geom/SimpleGeometry.js';\nimport {transformGeom2D as _ol_geom_SimpleGeometry$transformGeom2D} from '../../ol/geom/SimpleGeometry.js';\nimport {linearRing as _ol_geom_flat_area$linearRing} from '../../ol/geom/flat/area.js';\nimport {linearRings as _ol_geom_flat_area$linearRings} from '../../ol/geom/flat/area.js';\nimport {linearRingss as _ol_geom_flat_area$linearRingss} from '../../ol/geom/flat/area.js';\nimport {linearRingss as _ol_geom_flat_center$linearRingss} from '../../ol/geom/flat/center.js';\nimport {maxSquaredDelta as _ol_geom_flat_closest$maxSquaredDelta} from '../../ol/geom/flat/closest.js';\nimport {arrayMaxSquaredDelta as _ol_geom_flat_closest$arrayMaxSquaredDelta} from '../../ol/geom/flat/closest.js';\nimport {multiArrayMaxSquaredDelta as _ol_geom_flat_closest$multiArrayMaxSquaredDelta} from '../../ol/geom/flat/closest.js';\nimport {assignClosestPoint as _ol_geom_flat_closest$assignClosestPoint} from '../../ol/geom/flat/closest.js';\nimport {assignClosestArrayPoint as _ol_geom_flat_closest$assignClosestArrayPoint} from '../../ol/geom/flat/closest.js';\nimport {assignClosestMultiArrayPoint as _ol_geom_flat_closest$assignClosestMultiArrayPoint} from '../../ol/geom/flat/closest.js';\nimport {linearRingContainsExtent as _ol_geom_flat_contains$linearRingContainsExtent} from '../../ol/geom/flat/contains.js';\nimport {linearRingContainsXY as _ol_geom_flat_contains$linearRingContainsXY} from '../../ol/geom/flat/contains.js';\nimport {linearRingsContainsXY as _ol_geom_flat_contains$linearRingsContainsXY} from '../../ol/geom/flat/contains.js';\nimport {linearRingssContainsXY as _ol_geom_flat_contains$linearRingssContainsXY} from '../../ol/geom/flat/contains.js';\nimport {deflateCoordinate as _ol_geom_flat_deflate$deflateCoordinate} from '../../ol/geom/flat/deflate.js';\nimport {deflateCoordinates as _ol_geom_flat_deflate$deflateCoordinates} from '../../ol/geom/flat/deflate.js';\nimport {deflateCoordinatesArray as _ol_geom_flat_deflate$deflateCoordinatesArray} from '../../ol/geom/flat/deflate.js';\nimport {deflateMultiCoordinatesArray as _ol_geom_flat_deflate$deflateMultiCoordinatesArray} from '../../ol/geom/flat/deflate.js';\nimport {flipXY as _ol_geom_flat_flip$flipXY} from '../../ol/geom/flat/flip.js';\nimport {greatCircleArc as _ol_geom_flat_geodesic$greatCircleArc} from '../../ol/geom/flat/geodesic.js';\nimport {meridian as _ol_geom_flat_geodesic$meridian} from '../../ol/geom/flat/geodesic.js';\nimport {parallel as _ol_geom_flat_geodesic$parallel} from '../../ol/geom/flat/geodesic.js';\nimport {inflateCoordinates as _ol_geom_flat_inflate$inflateCoordinates} from '../../ol/geom/flat/inflate.js';\nimport {inflateCoordinatesArray as _ol_geom_flat_inflate$inflateCoordinatesArray} from '../../ol/geom/flat/inflate.js';\nimport {inflateMultiCoordinatesArray as _ol_geom_flat_inflate$inflateMultiCoordinatesArray} from '../../ol/geom/flat/inflate.js';\nimport {getInteriorPointOfArray as _ol_geom_flat_interiorpoint$getInteriorPointOfArray} from '../../ol/geom/flat/interiorpoint.js';\nimport {getInteriorPointsOfMultiArray as _ol_geom_flat_interiorpoint$getInteriorPointsOfMultiArray} from '../../ol/geom/flat/interiorpoint.js';\nimport {interpolatePoint as _ol_geom_flat_interpolate$interpolatePoint} from '../../ol/geom/flat/interpolate.js';\nimport {lineStringCoordinateAtM as _ol_geom_flat_interpolate$lineStringCoordinateAtM} from '../../ol/geom/flat/interpolate.js';\nimport {lineStringsCoordinateAtM as _ol_geom_flat_interpolate$lineStringsCoordinateAtM} from '../../ol/geom/flat/interpolate.js';\nimport {intersectsLineString as _ol_geom_flat_intersectsextent$intersectsLineString} from '../../ol/geom/flat/intersectsextent.js';\nimport {intersectsLineStringArray as _ol_geom_flat_intersectsextent$intersectsLineStringArray} from '../../ol/geom/flat/intersectsextent.js';\nimport {intersectsLinearRing as _ol_geom_flat_intersectsextent$intersectsLinearRing} from '../../ol/geom/flat/intersectsextent.js';\nimport {intersectsLinearRingArray as _ol_geom_flat_intersectsextent$intersectsLinearRingArray} from '../../ol/geom/flat/intersectsextent.js';\nimport {intersectsLinearRingMultiArray as _ol_geom_flat_intersectsextent$intersectsLinearRingMultiArray} from '../../ol/geom/flat/intersectsextent.js';\nimport {lineStringLength as _ol_geom_flat_length$lineStringLength} from '../../ol/geom/flat/length.js';\nimport {linearRingLength as _ol_geom_flat_length$linearRingLength} from '../../ol/geom/flat/length.js';\nimport {linearRingIsClockwise as _ol_geom_flat_orient$linearRingIsClockwise} from '../../ol/geom/flat/orient.js';\nimport {linearRingsAreOriented as _ol_geom_flat_orient$linearRingsAreOriented} from '../../ol/geom/flat/orient.js';\nimport {linearRingssAreOriented as _ol_geom_flat_orient$linearRingssAreOriented} from '../../ol/geom/flat/orient.js';\nimport {orientLinearRings as _ol_geom_flat_orient$orientLinearRings} from '../../ol/geom/flat/orient.js';\nimport {orientLinearRingsArray as _ol_geom_flat_orient$orientLinearRingsArray} from '../../ol/geom/flat/orient.js';\nimport {inflateEnds as _ol_geom_flat_orient$inflateEnds} from '../../ol/geom/flat/orient.js';\nimport {coordinates as _ol_geom_flat_reverse$coordinates} from '../../ol/geom/flat/reverse.js';\nimport {forEach as _ol_geom_flat_segments$forEach} from '../../ol/geom/flat/segments.js';\nimport {simplifyLineString as _ol_geom_flat_simplify$simplifyLineString} from '../../ol/geom/flat/simplify.js';\nimport {douglasPeucker as _ol_geom_flat_simplify$douglasPeucker} from '../../ol/geom/flat/simplify.js';\nimport {douglasPeuckerArray as _ol_geom_flat_simplify$douglasPeuckerArray} from '../../ol/geom/flat/simplify.js';\nimport {douglasPeuckerMultiArray as _ol_geom_flat_simplify$douglasPeuckerMultiArray} from '../../ol/geom/flat/simplify.js';\nimport {radialDistance as _ol_geom_flat_simplify$radialDistance} from '../../ol/geom/flat/simplify.js';\nimport {snap as _ol_geom_flat_simplify$snap} from '../../ol/geom/flat/simplify.js';\nimport {quantize as _ol_geom_flat_simplify$quantize} from '../../ol/geom/flat/simplify.js';\nimport {quantizeArray as _ol_geom_flat_simplify$quantizeArray} from '../../ol/geom/flat/simplify.js';\nimport {quantizeMultiArray as _ol_geom_flat_simplify$quantizeMultiArray} from '../../ol/geom/flat/simplify.js';\nimport {matchingChunk as _ol_geom_flat_straightchunk$matchingChunk} from '../../ol/geom/flat/straightchunk.js';\nimport {drawTextOnPath as _ol_geom_flat_textpath$drawTextOnPath} from '../../ol/geom/flat/textpath.js';\nimport {lineStringIsClosed as _ol_geom_flat_topology$lineStringIsClosed} from '../../ol/geom/flat/topology.js';\nimport {transform2D as _ol_geom_flat_transform$transform2D} from '../../ol/geom/flat/transform.js';\nimport {rotate as _ol_geom_flat_transform$rotate} from '../../ol/geom/flat/transform.js';\nimport {scale as _ol_geom_flat_transform$scale} from '../../ol/geom/flat/transform.js';\nimport {translate as _ol_geom_flat_transform$translate} from '../../ol/geom/flat/transform.js';\nimport $ol$format$Feature from '../../ol/format/Feature.js';\nimport {transformGeometryWithOptions as _ol_format_Feature$transformGeometryWithOptions} from '../../ol/format/Feature.js';\nimport {transformExtentWithOptions as _ol_format_Feature$transformExtentWithOptions} from '../../ol/format/Feature.js';\nimport {createRenderFeature as _ol_format_Feature$createRenderFeature} from '../../ol/format/Feature.js';\nimport {createGeometry as _ol_format_Feature$createGeometry} from '../../ol/format/Feature.js';\nimport $ol$format$GPX from '../../ol/format/GPX.js';\nimport $ol$format$GeoJSON from '../../ol/format/GeoJSON.js';\nimport $ol$format$IGC from '../../ol/format/IGC.js';\nimport $ol$format$JSONFeature from '../../ol/format/JSONFeature.js';\nimport {getDefaultFillStyle as _ol_format_KML$getDefaultFillStyle} from '../../ol/format/KML.js';\nimport {getDefaultImageStyle as _ol_format_KML$getDefaultImageStyle} from '../../ol/format/KML.js';\nimport {getDefaultStrokeStyle as _ol_format_KML$getDefaultStrokeStyle} from '../../ol/format/KML.js';\nimport {getDefaultTextStyle as _ol_format_KML$getDefaultTextStyle} from '../../ol/format/KML.js';\nimport {getDefaultStyle as _ol_format_KML$getDefaultStyle} from '../../ol/format/KML.js';\nimport {getDefaultStyleArray as _ol_format_KML$getDefaultStyleArray} from '../../ol/format/KML.js';\nimport $ol$format$KML from '../../ol/format/KML.js';\nimport {readFlatCoordinates as _ol_format_KML$readFlatCoordinates} from '../../ol/format/KML.js';\nimport $ol$format$MVT from '../../ol/format/MVT.js';\nimport $ol$format$OSMXML from '../../ol/format/OSMXML.js';\nimport $ol$format$OWS from '../../ol/format/OWS.js';\nimport $ol$format$Polyline from '../../ol/format/Polyline.js';\nimport {encodeDeltas as _ol_format_Polyline$encodeDeltas} from '../../ol/format/Polyline.js';\nimport {decodeDeltas as _ol_format_Polyline$decodeDeltas} from '../../ol/format/Polyline.js';\nimport {encodeFloats as _ol_format_Polyline$encodeFloats} from '../../ol/format/Polyline.js';\nimport {decodeFloats as _ol_format_Polyline$decodeFloats} from '../../ol/format/Polyline.js';\nimport {encodeSignedIntegers as _ol_format_Polyline$encodeSignedIntegers} from '../../ol/format/Polyline.js';\nimport {decodeSignedIntegers as _ol_format_Polyline$decodeSignedIntegers} from '../../ol/format/Polyline.js';\nimport {encodeUnsignedIntegers as _ol_format_Polyline$encodeUnsignedIntegers} from '../../ol/format/Polyline.js';\nimport {decodeUnsignedIntegers as _ol_format_Polyline$decodeUnsignedIntegers} from '../../ol/format/Polyline.js';\nimport {encodeUnsignedInteger as _ol_format_Polyline$encodeUnsignedInteger} from '../../ol/format/Polyline.js';\nimport $ol$format$TextFeature from '../../ol/format/TextFeature.js';\nimport $ol$format$TopoJSON from '../../ol/format/TopoJSON.js';\nimport $ol$format$WFS from '../../ol/format/WFS.js';\nimport {writeFilter as _ol_format_WFS$writeFilter} from '../../ol/format/WFS.js';\nimport $ol$format$WMSGetFeatureInfo from '../../ol/format/WMSGetFeatureInfo.js';\nimport $ol$format$WMTSCapabilities from '../../ol/format/WMTSCapabilities.js';\nimport {readHref as _ol_format_xlink$readHref} from '../../ol/format/xlink.js';\nimport {readBoolean as _ol_format_xsd$readBoolean} from '../../ol/format/xsd.js';\nimport {readBooleanString as _ol_format_xsd$readBooleanString} from '../../ol/format/xsd.js';\nimport {readDateTime as _ol_format_xsd$readDateTime} from '../../ol/format/xsd.js';\nimport {readDecimal as _ol_format_xsd$readDecimal} from '../../ol/format/xsd.js';\nimport {readDecimalString as _ol_format_xsd$readDecimalString} from '../../ol/format/xsd.js';\nimport {readPositiveInteger as _ol_format_xsd$readPositiveInteger} from '../../ol/format/xsd.js';\nimport {readNonNegativeIntegerString as _ol_format_xsd$readNonNegativeIntegerString} from '../../ol/format/xsd.js';\nimport {readString as _ol_format_xsd$readString} from '../../ol/format/xsd.js';\nimport {writeBooleanTextNode as _ol_format_xsd$writeBooleanTextNode} from '../../ol/format/xsd.js';\nimport {writeCDATASection as _ol_format_xsd$writeCDATASection} from '../../ol/format/xsd.js';\nimport {writeDateTimeTextNode as _ol_format_xsd$writeDateTimeTextNode} from '../../ol/format/xsd.js';\nimport {writeDecimalTextNode as _ol_format_xsd$writeDecimalTextNode} from '../../ol/format/xsd.js';\nimport {writeNonNegativeIntegerTextNode as _ol_format_xsd$writeNonNegativeIntegerTextNode} from '../../ol/format/xsd.js';\nimport {writeStringTextNode as _ol_format_xsd$writeStringTextNode} from '../../ol/format/xsd.js';\nimport {newEvaluationContext as _ol_expr_cpu$newEvaluationContext} from '../../ol/expr/cpu.js';\nimport {buildExpression as _ol_expr_cpu$buildExpression} from '../../ol/expr/cpu.js';\nimport {NoneType as _ol_expr_expression$NoneType} from '../../ol/expr/expression.js';\nimport {BooleanType as _ol_expr_expression$BooleanType} from '../../ol/expr/expression.js';\nimport {NumberType as _ol_expr_expression$NumberType} from '../../ol/expr/expression.js';\nimport {StringType as _ol_expr_expression$StringType} from '../../ol/expr/expression.js';\nimport {ColorType as _ol_expr_expression$ColorType} from '../../ol/expr/expression.js';\nimport {NumberArrayType as _ol_expr_expression$NumberArrayType} from '../../ol/expr/expression.js';\nimport {SizeType as _ol_expr_expression$SizeType} from '../../ol/expr/expression.js';\nimport {AnyType as _ol_expr_expression$AnyType} from '../../ol/expr/expression.js';\nimport {typeName as _ol_expr_expression$typeName} from '../../ol/expr/expression.js';\nimport {includesType as _ol_expr_expression$includesType} from '../../ol/expr/expression.js';\nimport {overlapsType as _ol_expr_expression$overlapsType} from '../../ol/expr/expression.js';\nimport {isType as _ol_expr_expression$isType} from '../../ol/expr/expression.js';\nimport {LiteralExpression as _ol_expr_expression$LiteralExpression} from '../../ol/expr/expression.js';\nimport {CallExpression as _ol_expr_expression$CallExpression} from '../../ol/expr/expression.js';\nimport {newParsingContext as _ol_expr_expression$newParsingContext} from '../../ol/expr/expression.js';\nimport {parse as _ol_expr_expression$parse} from '../../ol/expr/expression.js';\nimport {Ops as _ol_expr_expression$Ops} from '../../ol/expr/expression.js';\nimport {computeGeometryType as _ol_expr_expression$computeGeometryType} from '../../ol/expr/expression.js';\nimport {numberToGlsl as _ol_expr_gpu$numberToGlsl} from '../../ol/expr/gpu.js';\nimport {arrayToGlsl as _ol_expr_gpu$arrayToGlsl} from '../../ol/expr/gpu.js';\nimport {colorToGlsl as _ol_expr_gpu$colorToGlsl} from '../../ol/expr/gpu.js';\nimport {sizeToGlsl as _ol_expr_gpu$sizeToGlsl} from '../../ol/expr/gpu.js';\nimport {getStringNumberEquivalent as _ol_expr_gpu$getStringNumberEquivalent} from '../../ol/expr/gpu.js';\nimport {stringToGlsl as _ol_expr_gpu$stringToGlsl} from '../../ol/expr/gpu.js';\nimport {uniformNameForVariable as _ol_expr_gpu$uniformNameForVariable} from '../../ol/expr/gpu.js';\nimport {newCompilationContext as _ol_expr_gpu$newCompilationContext} from '../../ol/expr/gpu.js';\nimport {PALETTE_TEXTURE_ARRAY as _ol_expr_gpu$PALETTE_TEXTURE_ARRAY} from '../../ol/expr/gpu.js';\nimport {buildExpression as _ol_expr_gpu$buildExpression} from '../../ol/expr/gpu.js';\nimport $ol$events$Event from '../../ol/events/Event.js';\nimport {stopPropagation as _ol_events_Event$stopPropagation} from '../../ol/events/Event.js';\nimport {preventDefault as _ol_events_Event$preventDefault} from '../../ol/events/Event.js';\nimport {SnapEvent as _ol_events_SnapEvent$SnapEvent} from '../../ol/events/SnapEvent.js';\nimport $ol$events$Target from '../../ol/events/Target.js';\nimport {all as _ol_events_condition$all} from '../../ol/events/condition.js';\nimport {altKeyOnly as _ol_events_condition$altKeyOnly} from '../../ol/events/condition.js';\nimport {altShiftKeysOnly as _ol_events_condition$altShiftKeysOnly} from '../../ol/events/condition.js';\nimport {focus as _ol_events_condition$focus} from '../../ol/events/condition.js';\nimport {focusWithTabindex as _ol_events_condition$focusWithTabindex} from '../../ol/events/condition.js';\nimport {always as _ol_events_condition$always} from '../../ol/events/condition.js';\nimport {click as _ol_events_condition$click} from '../../ol/events/condition.js';\nimport {mouseActionButton as _ol_events_condition$mouseActionButton} from '../../ol/events/condition.js';\nimport {never as _ol_events_condition$never} from '../../ol/events/condition.js';\nimport {pointerMove as _ol_events_condition$pointerMove} from '../../ol/events/condition.js';\nimport {singleClick as _ol_events_condition$singleClick} from '../../ol/events/condition.js';\nimport {doubleClick as _ol_events_condition$doubleClick} from '../../ol/events/condition.js';\nimport {noModifierKeys as _ol_events_condition$noModifierKeys} from '../../ol/events/condition.js';\nimport {platformModifierKeyOnly as _ol_events_condition$platformModifierKeyOnly} from '../../ol/events/condition.js';\nimport {platformModifierKey as _ol_events_condition$platformModifierKey} from '../../ol/events/condition.js';\nimport {shiftKeyOnly as _ol_events_condition$shiftKeyOnly} from '../../ol/events/condition.js';\nimport {targetNotEditable as _ol_events_condition$targetNotEditable} from '../../ol/events/condition.js';\nimport {mouseOnly as _ol_events_condition$mouseOnly} from '../../ol/events/condition.js';\nimport {touchOnly as _ol_events_condition$touchOnly} from '../../ol/events/condition.js';\nimport {penOnly as _ol_events_condition$penOnly} from '../../ol/events/condition.js';\nimport {primaryAction as _ol_events_condition$primaryAction} from '../../ol/events/condition.js';\nimport $ol$control$Attribution from '../../ol/control/Attribution.js';\nimport $ol$control$Control from '../../ol/control/Control.js';\nimport $ol$control$FullScreen from '../../ol/control/FullScreen.js';\nimport $ol$control$MousePosition from '../../ol/control/MousePosition.js';\nimport $ol$control$OverviewMap from '../../ol/control/OverviewMap.js';\nimport $ol$control$Rotate from '../../ol/control/Rotate.js';\nimport $ol$control$ScaleLine from '../../ol/control/ScaleLine.js';\nimport $ol$control$Zoom from '../../ol/control/Zoom.js';\nimport $ol$control$ZoomSlider from '../../ol/control/ZoomSlider.js';\nimport $ol$control$ZoomToExtent from '../../ol/control/ZoomToExtent.js';\nimport {defaults as _ol_control_defaults$defaults} from '../../ol/control/defaults.js';\n\nvar ol = {};\nol.Collection = $ol$Collection;\nol.Collection.CollectionEvent = _ol_Collection$CollectionEvent;\nol.DataTile = $ol$DataTile;\nol.DataTile.asArrayLike = _ol_DataTile$asArrayLike;\nol.DataTile.asImageLike = _ol_DataTile$asImageLike;\nol.DataTile.toArray = _ol_DataTile$toArray;\nol.Disposable = $ol$Disposable;\nol.Feature = $ol$Feature;\nol.Feature.createStyleFunction = _ol_Feature$createStyleFunction;\nol.Geolocation = $ol$Geolocation;\nol.Geolocation.GeolocationError = _ol_Geolocation$GeolocationError;\nol.Image = $ol$Image;\nol.Image.decode = _ol_Image$decode;\nol.Image.decodeFallback = _ol_Image$decodeFallback;\nol.Image.listenImage = _ol_Image$listenImage;\nol.Image.load = _ol_Image$load;\nol.ImageCanvas = $ol$ImageCanvas;\nol.ImageTile = $ol$ImageTile;\nol.Kinetic = $ol$Kinetic;\nol.Map = $ol$Map;\nol.MapBrowserEvent = $ol$MapBrowserEvent;\nol.MapBrowserEventHandler = $ol$MapBrowserEventHandler;\nol.MapEvent = $ol$MapEvent;\nol.Object = $ol$Object;\nol.Object.ObjectEvent = _ol_Object$ObjectEvent;\nol.Observable = $ol$Observable;\nol.Observable.unByKey = _ol_Observable$unByKey;\nol.Overlay = $ol$Overlay;\nol.Tile = $ol$Tile;\nol.TileCache = $ol$TileCache;\nol.TileQueue = $ol$TileQueue;\nol.TileQueue.getTilePriority = _ol_TileQueue$getTilePriority;\nol.TileRange = $ol$TileRange;\nol.TileRange.createOrUpdate = _ol_TileRange$createOrUpdate;\nol.VectorRenderTile = $ol$VectorRenderTile;\nol.View = $ol$View;\nol.View.createCenterConstraint = _ol_View$createCenterConstraint;\nol.View.createResolutionConstraint = _ol_View$createResolutionConstraint;\nol.View.createRotationConstraint = _ol_View$createRotationConstraint;\nol.View.isNoopAnimation = _ol_View$isNoopAnimation;\nol.array = {};\nol.array.ascending = _ol_array$ascending;\nol.array.binarySearch = _ol_array$binarySearch;\nol.array.descending = _ol_array$descending;\nol.array.equals = _ol_array$equals;\nol.array.extend = _ol_array$extend;\nol.array.isSorted = _ol_array$isSorted;\nol.array.linearFindNearest = _ol_array$linearFindNearest;\nol.array.remove = _ol_array$remove;\nol.array.reverseSubArray = _ol_array$reverseSubArray;\nol.array.stableSort = _ol_array$stableSort;\nol.asserts = {};\nol.asserts.assert = _ol_asserts$assert;\nol.centerconstraint = {};\nol.centerconstraint.createExtent = _ol_centerconstraint$createExtent;\nol.centerconstraint.none = _ol_centerconstraint$none;\nol.color = {};\nol.color.asArray = _ol_color$asArray;\nol.color.asString = _ol_color$asString;\nol.color.fromString = _ol_color$fromString;\nol.color.isStringColor = _ol_color$isStringColor;\nol.color.lchaToRgba = _ol_color$lchaToRgba;\nol.color.normalize = _ol_color$normalize;\nol.color.rgbaToLcha = _ol_color$rgbaToLcha;\nol.color.toString = _ol_color$toString;\nol.color.withAlpha = _ol_color$withAlpha;\nol.colorlike = {};\nol.colorlike.asColorLike = _ol_colorlike$asColorLike;\nol.console = {};\nol.console.error = _ol_console$error;\nol.console.log = _ol_console$log;\nol.console.setLevel = _ol_console$setLevel;\nol.console.warn = _ol_console$warn;\nol.control = {};\nol.control.Attribution = $ol$control$Attribution;\nol.control.Control = $ol$control$Control;\nol.control.FullScreen = $ol$control$FullScreen;\nol.control.MousePosition = $ol$control$MousePosition;\nol.control.OverviewMap = $ol$control$OverviewMap;\nol.control.Rotate = $ol$control$Rotate;\nol.control.ScaleLine = $ol$control$ScaleLine;\nol.control.Zoom = $ol$control$Zoom;\nol.control.ZoomSlider = $ol$control$ZoomSlider;\nol.control.ZoomToExtent = $ol$control$ZoomToExtent;\nol.control.defaults = {};\nol.control.defaults.defaults = _ol_control_defaults$defaults;\nol.coordinate = {};\nol.coordinate.add = _ol_coordinate$add;\nol.coordinate.closestOnCircle = _ol_coordinate$closestOnCircle;\nol.coordinate.closestOnSegment = _ol_coordinate$closestOnSegment;\nol.coordinate.createStringXY = _ol_coordinate$createStringXY;\nol.coordinate.degreesToStringHDMS = _ol_coordinate$degreesToStringHDMS;\nol.coordinate.distance = _ol_coordinate$distance;\nol.coordinate.equals = _ol_coordinate$equals;\nol.coordinate.format = _ol_coordinate$format;\nol.coordinate.getWorldsAway = _ol_coordinate$getWorldsAway;\nol.coordinate.rotate = _ol_coordinate$rotate;\nol.coordinate.scale = _ol_coordinate$scale;\nol.coordinate.squaredDistance = _ol_coordinate$squaredDistance;\nol.coordinate.squaredDistanceToSegment = _ol_coordinate$squaredDistanceToSegment;\nol.coordinate.toStringHDMS = _ol_coordinate$toStringHDMS;\nol.coordinate.toStringXY = _ol_coordinate$toStringXY;\nol.coordinate.wrapX = _ol_coordinate$wrapX;\nol.css = {};\nol.css.CLASS_COLLAPSED = _ol_css$CLASS_COLLAPSED;\nol.css.CLASS_CONTROL = _ol_css$CLASS_CONTROL;\nol.css.CLASS_HIDDEN = _ol_css$CLASS_HIDDEN;\nol.css.CLASS_SELECTABLE = _ol_css$CLASS_SELECTABLE;\nol.css.CLASS_UNSELECTABLE = _ol_css$CLASS_UNSELECTABLE;\nol.css.CLASS_UNSUPPORTED = _ol_css$CLASS_UNSUPPORTED;\nol.css.getFontParameters = _ol_css$getFontParameters;\nol.dom = {};\nol.dom.createCanvasContext2D = _ol_dom$createCanvasContext2D;\nol.dom.getSharedCanvasContext2D = _ol_dom$getSharedCanvasContext2D;\nol.dom.outerHeight = _ol_dom$outerHeight;\nol.dom.outerWidth = _ol_dom$outerWidth;\nol.dom.releaseCanvas = _ol_dom$releaseCanvas;\nol.dom.removeChildren = _ol_dom$removeChildren;\nol.dom.removeNode = _ol_dom$removeNode;\nol.dom.replaceChildren = _ol_dom$replaceChildren;\nol.dom.replaceNode = _ol_dom$replaceNode;\nol.easing = {};\nol.easing.easeIn = _ol_easing$easeIn;\nol.easing.easeOut = _ol_easing$easeOut;\nol.easing.inAndOut = _ol_easing$inAndOut;\nol.easing.linear = _ol_easing$linear;\nol.easing.upAndDown = _ol_easing$upAndDown;\nol.events = {};\nol.events.Event = $ol$events$Event;\nol.events.Event.preventDefault = _ol_events_Event$preventDefault;\nol.events.Event.stopPropagation = _ol_events_Event$stopPropagation;\nol.events.SnapEvent = {};\nol.events.SnapEvent.SnapEvent = _ol_events_SnapEvent$SnapEvent;\nol.events.Target = $ol$events$Target;\nol.events.condition = {};\nol.events.condition.all = _ol_events_condition$all;\nol.events.condition.altKeyOnly = _ol_events_condition$altKeyOnly;\nol.events.condition.altShiftKeysOnly = _ol_events_condition$altShiftKeysOnly;\nol.events.condition.always = _ol_events_condition$always;\nol.events.condition.click = _ol_events_condition$click;\nol.events.condition.doubleClick = _ol_events_condition$doubleClick;\nol.events.condition.focus = _ol_events_condition$focus;\nol.events.condition.focusWithTabindex = _ol_events_condition$focusWithTabindex;\nol.events.condition.mouseActionButton = _ol_events_condition$mouseActionButton;\nol.events.condition.mouseOnly = _ol_events_condition$mouseOnly;\nol.events.condition.never = _ol_events_condition$never;\nol.events.condition.noModifierKeys = _ol_events_condition$noModifierKeys;\nol.events.condition.penOnly = _ol_events_condition$penOnly;\nol.events.condition.platformModifierKey = _ol_events_condition$platformModifierKey;\nol.events.condition.platformModifierKeyOnly = _ol_events_condition$platformModifierKeyOnly;\nol.events.condition.pointerMove = _ol_events_condition$pointerMove;\nol.events.condition.primaryAction = _ol_events_condition$primaryAction;\nol.events.condition.shiftKeyOnly = _ol_events_condition$shiftKeyOnly;\nol.events.condition.singleClick = _ol_events_condition$singleClick;\nol.events.condition.targetNotEditable = _ol_events_condition$targetNotEditable;\nol.events.condition.touchOnly = _ol_events_condition$touchOnly;\nol.events.listen = _ol_events$listen;\nol.events.listenOnce = _ol_events$listenOnce;\nol.events.unlistenByKey = _ol_events$unlistenByKey;\nol.expr = {};\nol.expr.cpu = {};\nol.expr.cpu.buildExpression = _ol_expr_cpu$buildExpression;\nol.expr.cpu.newEvaluationContext = _ol_expr_cpu$newEvaluationContext;\nol.expr.expression = {};\nol.expr.expression.AnyType = _ol_expr_expression$AnyType;\nol.expr.expression.BooleanType = _ol_expr_expression$BooleanType;\nol.expr.expression.CallExpression = _ol_expr_expression$CallExpression;\nol.expr.expression.ColorType = _ol_expr_expression$ColorType;\nol.expr.expression.LiteralExpression = _ol_expr_expression$LiteralExpression;\nol.expr.expression.NoneType = _ol_expr_expression$NoneType;\nol.expr.expression.NumberArrayType = _ol_expr_expression$NumberArrayType;\nol.expr.expression.NumberType = _ol_expr_expression$NumberType;\nol.expr.expression.Ops = _ol_expr_expression$Ops;\nol.expr.expression.SizeType = _ol_expr_expression$SizeType;\nol.expr.expression.StringType = _ol_expr_expression$StringType;\nol.expr.expression.computeGeometryType = _ol_expr_expression$computeGeometryType;\nol.expr.expression.includesType = _ol_expr_expression$includesType;\nol.expr.expression.isType = _ol_expr_expression$isType;\nol.expr.expression.newParsingContext = _ol_expr_expression$newParsingContext;\nol.expr.expression.overlapsType = _ol_expr_expression$overlapsType;\nol.expr.expression.parse = _ol_expr_expression$parse;\nol.expr.expression.typeName = _ol_expr_expression$typeName;\nol.expr.gpu = {};\nol.expr.gpu.PALETTE_TEXTURE_ARRAY = _ol_expr_gpu$PALETTE_TEXTURE_ARRAY;\nol.expr.gpu.arrayToGlsl = _ol_expr_gpu$arrayToGlsl;\nol.expr.gpu.buildExpression = _ol_expr_gpu$buildExpression;\nol.expr.gpu.colorToGlsl = _ol_expr_gpu$colorToGlsl;\nol.expr.gpu.getStringNumberEquivalent = _ol_expr_gpu$getStringNumberEquivalent;\nol.expr.gpu.newCompilationContext = _ol_expr_gpu$newCompilationContext;\nol.expr.gpu.numberToGlsl = _ol_expr_gpu$numberToGlsl;\nol.expr.gpu.sizeToGlsl = _ol_expr_gpu$sizeToGlsl;\nol.expr.gpu.stringToGlsl = _ol_expr_gpu$stringToGlsl;\nol.expr.gpu.uniformNameForVariable = _ol_expr_gpu$uniformNameForVariable;\nol.extent = {};\nol.extent.applyTransform = _ol_extent$applyTransform;\nol.extent.approximatelyEquals = _ol_extent$approximatelyEquals;\nol.extent.boundingExtent = _ol_extent$boundingExtent;\nol.extent.buffer = _ol_extent$buffer;\nol.extent.clone = _ol_extent$clone;\nol.extent.closestSquaredDistanceXY = _ol_extent$closestSquaredDistanceXY;\nol.extent.containsCoordinate = _ol_extent$containsCoordinate;\nol.extent.containsExtent = _ol_extent$containsExtent;\nol.extent.containsXY = _ol_extent$containsXY;\nol.extent.coordinateRelationship = _ol_extent$coordinateRelationship;\nol.extent.createEmpty = _ol_extent$createEmpty;\nol.extent.createOrUpdate = _ol_extent$createOrUpdate;\nol.extent.createOrUpdateEmpty = _ol_extent$createOrUpdateEmpty;\nol.extent.createOrUpdateFromCoordinate = _ol_extent$createOrUpdateFromCoordinate;\nol.extent.createOrUpdateFromCoordinates = _ol_extent$createOrUpdateFromCoordinates;\nol.extent.createOrUpdateFromFlatCoordinates = _ol_extent$createOrUpdateFromFlatCoordinates;\nol.extent.createOrUpdateFromRings = _ol_extent$createOrUpdateFromRings;\nol.extent.equals = _ol_extent$equals;\nol.extent.extend = _ol_extent$extend;\nol.extent.extendCoordinate = _ol_extent$extendCoordinate;\nol.extent.extendCoordinates = _ol_extent$extendCoordinates;\nol.extent.extendFlatCoordinates = _ol_extent$extendFlatCoordinates;\nol.extent.extendRings = _ol_extent$extendRings;\nol.extent.extendXY = _ol_extent$extendXY;\nol.extent.forEachCorner = _ol_extent$forEachCorner;\nol.extent.getArea = _ol_extent$getArea;\nol.extent.getBottomLeft = _ol_extent$getBottomLeft;\nol.extent.getBottomRight = _ol_extent$getBottomRight;\nol.extent.getCenter = _ol_extent$getCenter;\nol.extent.getCorner = _ol_extent$getCorner;\nol.extent.getEnlargedArea = _ol_extent$getEnlargedArea;\nol.extent.getForViewAndSize = _ol_extent$getForViewAndSize;\nol.extent.getHeight = _ol_extent$getHeight;\nol.extent.getIntersection = _ol_extent$getIntersection;\nol.extent.getIntersectionArea = _ol_extent$getIntersectionArea;\nol.extent.getMargin = _ol_extent$getMargin;\nol.extent.getRotatedViewport = _ol_extent$getRotatedViewport;\nol.extent.getSize = _ol_extent$getSize;\nol.extent.getTopLeft = _ol_extent$getTopLeft;\nol.extent.getTopRight = _ol_extent$getTopRight;\nol.extent.getWidth = _ol_extent$getWidth;\nol.extent.intersects = _ol_extent$intersects;\nol.extent.intersectsSegment = _ol_extent$intersectsSegment;\nol.extent.isEmpty = _ol_extent$isEmpty;\nol.extent.returnOrUpdate = _ol_extent$returnOrUpdate;\nol.extent.scaleFromCenter = _ol_extent$scaleFromCenter;\nol.extent.wrapAndSliceX = _ol_extent$wrapAndSliceX;\nol.extent.wrapX = _ol_extent$wrapX;\nol.featureloader = {};\nol.featureloader.loadFeaturesXhr = _ol_featureloader$loadFeaturesXhr;\nol.featureloader.setWithCredentials = _ol_featureloader$setWithCredentials;\nol.featureloader.xhr = _ol_featureloader$xhr;\nol.format = {};\nol.format.Feature = $ol$format$Feature;\nol.format.Feature.createGeometry = _ol_format_Feature$createGeometry;\nol.format.Feature.createRenderFeature = _ol_format_Feature$createRenderFeature;\nol.format.Feature.transformExtentWithOptions = _ol_format_Feature$transformExtentWithOptions;\nol.format.Feature.transformGeometryWithOptions = _ol_format_Feature$transformGeometryWithOptions;\nol.format.GPX = $ol$format$GPX;\nol.format.GeoJSON = $ol$format$GeoJSON;\nol.format.IGC = $ol$format$IGC;\nol.format.JSONFeature = $ol$format$JSONFeature;\nol.format.KML = $ol$format$KML;\nol.format.KML.getDefaultFillStyle = _ol_format_KML$getDefaultFillStyle;\nol.format.KML.getDefaultImageStyle = _ol_format_KML$getDefaultImageStyle;\nol.format.KML.getDefaultStrokeStyle = _ol_format_KML$getDefaultStrokeStyle;\nol.format.KML.getDefaultStyle = _ol_format_KML$getDefaultStyle;\nol.format.KML.getDefaultStyleArray = _ol_format_KML$getDefaultStyleArray;\nol.format.KML.getDefaultTextStyle = _ol_format_KML$getDefaultTextStyle;\nol.format.KML.readFlatCoordinates = _ol_format_KML$readFlatCoordinates;\nol.format.MVT = $ol$format$MVT;\nol.format.OSMXML = $ol$format$OSMXML;\nol.format.OWS = $ol$format$OWS;\nol.format.Polyline = $ol$format$Polyline;\nol.format.Polyline.decodeDeltas = _ol_format_Polyline$decodeDeltas;\nol.format.Polyline.decodeFloats = _ol_format_Polyline$decodeFloats;\nol.format.Polyline.decodeSignedIntegers = _ol_format_Polyline$decodeSignedIntegers;\nol.format.Polyline.decodeUnsignedIntegers = _ol_format_Polyline$decodeUnsignedIntegers;\nol.format.Polyline.encodeDeltas = _ol_format_Polyline$encodeDeltas;\nol.format.Polyline.encodeFloats = _ol_format_Polyline$encodeFloats;\nol.format.Polyline.encodeSignedIntegers = _ol_format_Polyline$encodeSignedIntegers;\nol.format.Polyline.encodeUnsignedInteger = _ol_format_Polyline$encodeUnsignedInteger;\nol.format.Polyline.encodeUnsignedIntegers = _ol_format_Polyline$encodeUnsignedIntegers;\nol.format.TextFeature = $ol$format$TextFeature;\nol.format.TopoJSON = $ol$format$TopoJSON;\nol.format.WFS = $ol$format$WFS;\nol.format.WFS.writeFilter = _ol_format_WFS$writeFilter;\nol.format.WMSGetFeatureInfo = $ol$format$WMSGetFeatureInfo;\nol.format.WMTSCapabilities = $ol$format$WMTSCapabilities;\nol.format.xlink = {};\nol.format.xlink.readHref = _ol_format_xlink$readHref;\nol.format.xsd = {};\nol.format.xsd.readBoolean = _ol_format_xsd$readBoolean;\nol.format.xsd.readBooleanString = _ol_format_xsd$readBooleanString;\nol.format.xsd.readDateTime = _ol_format_xsd$readDateTime;\nol.format.xsd.readDecimal = _ol_format_xsd$readDecimal;\nol.format.xsd.readDecimalString = _ol_format_xsd$readDecimalString;\nol.format.xsd.readNonNegativeIntegerString = _ol_format_xsd$readNonNegativeIntegerString;\nol.format.xsd.readPositiveInteger = _ol_format_xsd$readPositiveInteger;\nol.format.xsd.readString = _ol_format_xsd$readString;\nol.format.xsd.writeBooleanTextNode = _ol_format_xsd$writeBooleanTextNode;\nol.format.xsd.writeCDATASection = _ol_format_xsd$writeCDATASection;\nol.format.xsd.writeDateTimeTextNode = _ol_format_xsd$writeDateTimeTextNode;\nol.format.xsd.writeDecimalTextNode = _ol_format_xsd$writeDecimalTextNode;\nol.format.xsd.writeNonNegativeIntegerTextNode = _ol_format_xsd$writeNonNegativeIntegerTextNode;\nol.format.xsd.writeStringTextNode = _ol_format_xsd$writeStringTextNode;\nol.functions = {};\nol.functions.FALSE = _ol_functions$FALSE;\nol.functions.TRUE = _ol_functions$TRUE;\nol.functions.VOID = _ol_functions$VOID;\nol.functions.memoizeOne = _ol_functions$memoizeOne;\nol.functions.toPromise = _ol_functions$toPromise;\nol.geom = {};\nol.geom.Circle = $ol$geom$Circle;\nol.geom.Geometry = $ol$geom$Geometry;\nol.geom.GeometryCollection = $ol$geom$GeometryCollection;\nol.geom.LineString = $ol$geom$LineString;\nol.geom.LinearRing = $ol$geom$LinearRing;\nol.geom.MultiLineString = $ol$geom$MultiLineString;\nol.geom.MultiPoint = $ol$geom$MultiPoint;\nol.geom.MultiPolygon = $ol$geom$MultiPolygon;\nol.geom.Point = $ol$geom$Point;\nol.geom.Polygon = $ol$geom$Polygon;\nol.geom.Polygon.circular = _ol_geom_Polygon$circular;\nol.geom.Polygon.fromCircle = _ol_geom_Polygon$fromCircle;\nol.geom.Polygon.fromExtent = _ol_geom_Polygon$fromExtent;\nol.geom.Polygon.makeRegular = _ol_geom_Polygon$makeRegular;\nol.geom.SimpleGeometry = $ol$geom$SimpleGeometry;\nol.geom.SimpleGeometry.getLayoutForStride = _ol_geom_SimpleGeometry$getLayoutForStride;\nol.geom.SimpleGeometry.getStrideForLayout = _ol_geom_SimpleGeometry$getStrideForLayout;\nol.geom.SimpleGeometry.transformGeom2D = _ol_geom_SimpleGeometry$transformGeom2D;\nol.geom.flat = {};\nol.geom.flat.area = {};\nol.geom.flat.area.linearRing = _ol_geom_flat_area$linearRing;\nol.geom.flat.area.linearRings = _ol_geom_flat_area$linearRings;\nol.geom.flat.area.linearRingss = _ol_geom_flat_area$linearRingss;\nol.geom.flat.center = {};\nol.geom.flat.center.linearRingss = _ol_geom_flat_center$linearRingss;\nol.geom.flat.closest = {};\nol.geom.flat.closest.arrayMaxSquaredDelta = _ol_geom_flat_closest$arrayMaxSquaredDelta;\nol.geom.flat.closest.assignClosestArrayPoint = _ol_geom_flat_closest$assignClosestArrayPoint;\nol.geom.flat.closest.assignClosestMultiArrayPoint = _ol_geom_flat_closest$assignClosestMultiArrayPoint;\nol.geom.flat.closest.assignClosestPoint = _ol_geom_flat_closest$assignClosestPoint;\nol.geom.flat.closest.maxSquaredDelta = _ol_geom_flat_closest$maxSquaredDelta;\nol.geom.flat.closest.multiArrayMaxSquaredDelta = _ol_geom_flat_closest$multiArrayMaxSquaredDelta;\nol.geom.flat.contains = {};\nol.geom.flat.contains.linearRingContainsExtent = _ol_geom_flat_contains$linearRingContainsExtent;\nol.geom.flat.contains.linearRingContainsXY = _ol_geom_flat_contains$linearRingContainsXY;\nol.geom.flat.contains.linearRingsContainsXY = _ol_geom_flat_contains$linearRingsContainsXY;\nol.geom.flat.contains.linearRingssContainsXY = _ol_geom_flat_contains$linearRingssContainsXY;\nol.geom.flat.deflate = {};\nol.geom.flat.deflate.deflateCoordinate = _ol_geom_flat_deflate$deflateCoordinate;\nol.geom.flat.deflate.deflateCoordinates = _ol_geom_flat_deflate$deflateCoordinates;\nol.geom.flat.deflate.deflateCoordinatesArray = _ol_geom_flat_deflate$deflateCoordinatesArray;\nol.geom.flat.deflate.deflateMultiCoordinatesArray = _ol_geom_flat_deflate$deflateMultiCoordinatesArray;\nol.geom.flat.flip = {};\nol.geom.flat.flip.flipXY = _ol_geom_flat_flip$flipXY;\nol.geom.flat.geodesic = {};\nol.geom.flat.geodesic.greatCircleArc = _ol_geom_flat_geodesic$greatCircleArc;\nol.geom.flat.geodesic.meridian = _ol_geom_flat_geodesic$meridian;\nol.geom.flat.geodesic.parallel = _ol_geom_flat_geodesic$parallel;\nol.geom.flat.inflate = {};\nol.geom.flat.inflate.inflateCoordinates = _ol_geom_flat_inflate$inflateCoordinates;\nol.geom.flat.inflate.inflateCoordinatesArray = _ol_geom_flat_inflate$inflateCoordinatesArray;\nol.geom.flat.inflate.inflateMultiCoordinatesArray = _ol_geom_flat_inflate$inflateMultiCoordinatesArray;\nol.geom.flat.interiorpoint = {};\nol.geom.flat.interiorpoint.getInteriorPointOfArray = _ol_geom_flat_interiorpoint$getInteriorPointOfArray;\nol.geom.flat.interiorpoint.getInteriorPointsOfMultiArray = _ol_geom_flat_interiorpoint$getInteriorPointsOfMultiArray;\nol.geom.flat.interpolate = {};\nol.geom.flat.interpolate.interpolatePoint = _ol_geom_flat_interpolate$interpolatePoint;\nol.geom.flat.interpolate.lineStringCoordinateAtM = _ol_geom_flat_interpolate$lineStringCoordinateAtM;\nol.geom.flat.interpolate.lineStringsCoordinateAtM = _ol_geom_flat_interpolate$lineStringsCoordinateAtM;\nol.geom.flat.intersectsextent = {};\nol.geom.flat.intersectsextent.intersectsLineString = _ol_geom_flat_intersectsextent$intersectsLineString;\nol.geom.flat.intersectsextent.intersectsLineStringArray = _ol_geom_flat_intersectsextent$intersectsLineStringArray;\nol.geom.flat.intersectsextent.intersectsLinearRing = _ol_geom_flat_intersectsextent$intersectsLinearRing;\nol.geom.flat.intersectsextent.intersectsLinearRingArray = _ol_geom_flat_intersectsextent$intersectsLinearRingArray;\nol.geom.flat.intersectsextent.intersectsLinearRingMultiArray = _ol_geom_flat_intersectsextent$intersectsLinearRingMultiArray;\nol.geom.flat.length = {};\nol.geom.flat.length.lineStringLength = _ol_geom_flat_length$lineStringLength;\nol.geom.flat.length.linearRingLength = _ol_geom_flat_length$linearRingLength;\nol.geom.flat.orient = {};\nol.geom.flat.orient.inflateEnds = _ol_geom_flat_orient$inflateEnds;\nol.geom.flat.orient.linearRingIsClockwise = _ol_geom_flat_orient$linearRingIsClockwise;\nol.geom.flat.orient.linearRingsAreOriented = _ol_geom_flat_orient$linearRingsAreOriented;\nol.geom.flat.orient.linearRingssAreOriented = _ol_geom_flat_orient$linearRingssAreOriented;\nol.geom.flat.orient.orientLinearRings = _ol_geom_flat_orient$orientLinearRings;\nol.geom.flat.orient.orientLinearRingsArray = _ol_geom_flat_orient$orientLinearRingsArray;\nol.geom.flat.reverse = {};\nol.geom.flat.reverse.coordinates = _ol_geom_flat_reverse$coordinates;\nol.geom.flat.segments = {};\nol.geom.flat.segments.forEach = _ol_geom_flat_segments$forEach;\nol.geom.flat.simplify = {};\nol.geom.flat.simplify.douglasPeucker = _ol_geom_flat_simplify$douglasPeucker;\nol.geom.flat.simplify.douglasPeuckerArray = _ol_geom_flat_simplify$douglasPeuckerArray;\nol.geom.flat.simplify.douglasPeuckerMultiArray = _ol_geom_flat_simplify$douglasPeuckerMultiArray;\nol.geom.flat.simplify.quantize = _ol_geom_flat_simplify$quantize;\nol.geom.flat.simplify.quantizeArray = _ol_geom_flat_simplify$quantizeArray;\nol.geom.flat.simplify.quantizeMultiArray = _ol_geom_flat_simplify$quantizeMultiArray;\nol.geom.flat.simplify.radialDistance = _ol_geom_flat_simplify$radialDistance;\nol.geom.flat.simplify.simplifyLineString = _ol_geom_flat_simplify$simplifyLineString;\nol.geom.flat.simplify.snap = _ol_geom_flat_simplify$snap;\nol.geom.flat.straightchunk = {};\nol.geom.flat.straightchunk.matchingChunk = _ol_geom_flat_straightchunk$matchingChunk;\nol.geom.flat.textpath = {};\nol.geom.flat.textpath.drawTextOnPath = _ol_geom_flat_textpath$drawTextOnPath;\nol.geom.flat.topology = {};\nol.geom.flat.topology.lineStringIsClosed = _ol_geom_flat_topology$lineStringIsClosed;\nol.geom.flat.transform = {};\nol.geom.flat.transform.rotate = _ol_geom_flat_transform$rotate;\nol.geom.flat.transform.scale = _ol_geom_flat_transform$scale;\nol.geom.flat.transform.transform2D = _ol_geom_flat_transform$transform2D;\nol.geom.flat.transform.translate = _ol_geom_flat_transform$translate;\nol.has = {};\nol.has.CREATE_IMAGE_BITMAP = _ol_has$CREATE_IMAGE_BITMAP;\nol.has.DEVICE_PIXEL_RATIO = _ol_has$DEVICE_PIXEL_RATIO;\nol.has.FIREFOX = _ol_has$FIREFOX;\nol.has.IMAGE_DECODE = _ol_has$IMAGE_DECODE;\nol.has.MAC = _ol_has$MAC;\nol.has.PASSIVE_EVENT_LISTENERS = _ol_has$PASSIVE_EVENT_LISTENERS;\nol.has.SAFARI = _ol_has$SAFARI;\nol.has.SAFARI_BUG_237906 = _ol_has$SAFARI_BUG_237906;\nol.has.WEBKIT = _ol_has$WEBKIT;\nol.has.WORKER_OFFSCREEN_CANVAS = _ol_has$WORKER_OFFSCREEN_CANVAS;\nol.interaction = {};\nol.interaction.DblClickDragZoom = $ol$interaction$DblClickDragZoom;\nol.interaction.DoubleClickZoom = $ol$interaction$DoubleClickZoom;\nol.interaction.DragAndDrop = $ol$interaction$DragAndDrop;\nol.interaction.DragAndDrop.DragAndDropEvent = _ol_interaction_DragAndDrop$DragAndDropEvent;\nol.interaction.DragBox = $ol$interaction$DragBox;\nol.interaction.DragBox.DragBoxEvent = _ol_interaction_DragBox$DragBoxEvent;\nol.interaction.DragPan = $ol$interaction$DragPan;\nol.interaction.DragRotate = $ol$interaction$DragRotate;\nol.interaction.DragRotateAndZoom = $ol$interaction$DragRotateAndZoom;\nol.interaction.DragZoom = $ol$interaction$DragZoom;\nol.interaction.Draw = $ol$interaction$Draw;\nol.interaction.Draw.DrawEvent = _ol_interaction_Draw$DrawEvent;\nol.interaction.Draw.createBox = _ol_interaction_Draw$createBox;\nol.interaction.Draw.createRegularPolygon = _ol_interaction_Draw$createRegularPolygon;\nol.interaction.Extent = $ol$interaction$Extent;\nol.interaction.Extent.ExtentEvent = _ol_interaction_Extent$ExtentEvent;\nol.interaction.Interaction = $ol$interaction$Interaction;\nol.interaction.Interaction.pan = _ol_interaction_Interaction$pan;\nol.interaction.Interaction.zoomByDelta = _ol_interaction_Interaction$zoomByDelta;\nol.interaction.KeyboardPan = $ol$interaction$KeyboardPan;\nol.interaction.KeyboardZoom = $ol$interaction$KeyboardZoom;\nol.interaction.Link = $ol$interaction$Link;\nol.interaction.Modify = $ol$interaction$Modify;\nol.interaction.Modify.ModifyEvent = _ol_interaction_Modify$ModifyEvent;\nol.interaction.MouseWheelZoom = $ol$interaction$MouseWheelZoom;\nol.interaction.PinchRotate = $ol$interaction$PinchRotate;\nol.interaction.PinchZoom = $ol$interaction$PinchZoom;\nol.interaction.Pointer = $ol$interaction$Pointer;\nol.interaction.Pointer.centroid = _ol_interaction_Pointer$centroid;\nol.interaction.Select = $ol$interaction$Select;\nol.interaction.Select.SelectEvent = _ol_interaction_Select$SelectEvent;\nol.interaction.Snap = $ol$interaction$Snap;\nol.interaction.Translate = $ol$interaction$Translate;\nol.interaction.Translate.TranslateEvent = _ol_interaction_Translate$TranslateEvent;\nol.interaction.defaults = {};\nol.interaction.defaults.defaults = _ol_interaction_defaults$defaults;\nol.layer = {};\nol.layer.Base = $ol$layer$Base;\nol.layer.BaseImage = $ol$layer$BaseImage;\nol.layer.BaseTile = $ol$layer$BaseTile;\nol.layer.BaseVector = $ol$layer$BaseVector;\nol.layer.Graticule = $ol$layer$Graticule;\nol.layer.Group = $ol$layer$Group;\nol.layer.Group.GroupEvent = _ol_layer_Group$GroupEvent;\nol.layer.Heatmap = $ol$layer$Heatmap;\nol.layer.Image = $ol$layer$Image;\nol.layer.Layer = $ol$layer$Layer;\nol.layer.Layer.inView = _ol_layer_Layer$inView;\nol.layer.Tile = $ol$layer$Tile;\nol.layer.Vector = $ol$layer$Vector;\nol.layer.VectorImage = $ol$layer$VectorImage;\nol.loadingstrategy = {};\nol.loadingstrategy.all = _ol_loadingstrategy$all;\nol.loadingstrategy.bbox = _ol_loadingstrategy$bbox;\nol.loadingstrategy.tile = _ol_loadingstrategy$tile;\nol.math = {};\nol.math.ceil = _ol_math$ceil;\nol.math.clamp = _ol_math$clamp;\nol.math.floor = _ol_math$floor;\nol.math.lerp = _ol_math$lerp;\nol.math.modulo = _ol_math$modulo;\nol.math.round = _ol_math$round;\nol.math.solveLinearSystem = _ol_math$solveLinearSystem;\nol.math.squaredDistance = _ol_math$squaredDistance;\nol.math.squaredSegmentDistance = _ol_math$squaredSegmentDistance;\nol.math.toDegrees = _ol_math$toDegrees;\nol.math.toFixed = _ol_math$toFixed;\nol.math.toRadians = _ol_math$toRadians;\nol.net = {};\nol.net.ClientError = _ol_net$ClientError;\nol.net.ResponseError = _ol_net$ResponseError;\nol.net.getJSON = _ol_net$getJSON;\nol.net.jsonp = _ol_net$jsonp;\nol.net.overrideXHR = _ol_net$overrideXHR;\nol.net.resolveUrl = _ol_net$resolveUrl;\nol.net.restoreXHR = _ol_net$restoreXHR;\nol.obj = {};\nol.obj.clear = _ol_obj$clear;\nol.obj.isEmpty = _ol_obj$isEmpty;\nol.proj = {};\nol.proj.Projection = $ol$proj$Projection;\nol.proj.Units = {};\nol.proj.Units.METERS_PER_UNIT = _ol_proj_Units$METERS_PER_UNIT;\nol.proj.Units.fromCode = _ol_proj_Units$fromCode;\nol.proj.addCommon = _ol_proj$addCommon;\nol.proj.addCoordinateTransforms = _ol_proj$addCoordinateTransforms;\nol.proj.addEquivalentProjections = _ol_proj$addEquivalentProjections;\nol.proj.addEquivalentTransforms = _ol_proj$addEquivalentTransforms;\nol.proj.addProjection = _ol_proj$addProjection;\nol.proj.addProjections = _ol_proj$addProjections;\nol.proj.clearAllProjections = _ol_proj$clearAllProjections;\nol.proj.clearUserProjection = _ol_proj$clearUserProjection;\nol.proj.cloneTransform = _ol_proj$cloneTransform;\nol.proj.createProjection = _ol_proj$createProjection;\nol.proj.createSafeCoordinateTransform = _ol_proj$createSafeCoordinateTransform;\nol.proj.createTransformFromCoordinateTransform = _ol_proj$createTransformFromCoordinateTransform;\nol.proj.disableCoordinateWarning = _ol_proj$disableCoordinateWarning;\nol.proj.epsg3857 = {};\nol.proj.epsg3857.EXTENT = _ol_proj_epsg3857$EXTENT;\nol.proj.epsg3857.HALF_SIZE = _ol_proj_epsg3857$HALF_SIZE;\nol.proj.epsg3857.MAX_SAFE_Y = _ol_proj_epsg3857$MAX_SAFE_Y;\nol.proj.epsg3857.PROJECTIONS = _ol_proj_epsg3857$PROJECTIONS;\nol.proj.epsg3857.RADIUS = _ol_proj_epsg3857$RADIUS;\nol.proj.epsg3857.WORLD_EXTENT = _ol_proj_epsg3857$WORLD_EXTENT;\nol.proj.epsg3857.fromEPSG4326 = _ol_proj_epsg3857$fromEPSG4326;\nol.proj.epsg3857.toEPSG4326 = _ol_proj_epsg3857$toEPSG4326;\nol.proj.epsg4326 = {};\nol.proj.epsg4326.EXTENT = _ol_proj_epsg4326$EXTENT;\nol.proj.epsg4326.METERS_PER_UNIT = _ol_proj_epsg4326$METERS_PER_UNIT;\nol.proj.epsg4326.PROJECTIONS = _ol_proj_epsg4326$PROJECTIONS;\nol.proj.epsg4326.RADIUS = _ol_proj_epsg4326$RADIUS;\nol.proj.equivalent = _ol_proj$equivalent;\nol.proj.fromLonLat = _ol_proj$fromLonLat;\nol.proj.fromUserCoordinate = _ol_proj$fromUserCoordinate;\nol.proj.fromUserExtent = _ol_proj$fromUserExtent;\nol.proj.fromUserResolution = _ol_proj$fromUserResolution;\nol.proj.get = _ol_proj$get;\nol.proj.getPointResolution = _ol_proj$getPointResolution;\nol.proj.getTransform = _ol_proj$getTransform;\nol.proj.getTransformFromProjections = _ol_proj$getTransformFromProjections;\nol.proj.getUserProjection = _ol_proj$getUserProjection;\nol.proj.identityTransform = _ol_proj$identityTransform;\nol.proj.proj4 = {};\nol.proj.proj4.epsgLookupMapTiler = _ol_proj_proj4$epsgLookupMapTiler;\nol.proj.proj4.fromEPSGCode = _ol_proj_proj4$fromEPSGCode;\nol.proj.proj4.getEPSGLookup = _ol_proj_proj4$getEPSGLookup;\nol.proj.proj4.isRegistered = _ol_proj_proj4$isRegistered;\nol.proj.proj4.register = _ol_proj_proj4$register;\nol.proj.proj4.setEPSGLookup = _ol_proj_proj4$setEPSGLookup;\nol.proj.proj4.unregister = _ol_proj_proj4$unregister;\nol.proj.projections = {};\nol.proj.projections.add = _ol_proj_projections$add;\nol.proj.projections.clear = _ol_proj_projections$clear;\nol.proj.projections.get = _ol_proj_projections$get;\nol.proj.setUserProjection = _ol_proj$setUserProjection;\nol.proj.toLonLat = _ol_proj$toLonLat;\nol.proj.toUserCoordinate = _ol_proj$toUserCoordinate;\nol.proj.toUserExtent = _ol_proj$toUserExtent;\nol.proj.toUserResolution = _ol_proj$toUserResolution;\nol.proj.transform = _ol_proj$transform;\nol.proj.transformExtent = _ol_proj$transformExtent;\nol.proj.transformWithProjections = _ol_proj$transformWithProjections;\nol.proj.transforms = {};\nol.proj.transforms.add = _ol_proj_transforms$add;\nol.proj.transforms.clear = _ol_proj_transforms$clear;\nol.proj.transforms.get = _ol_proj_transforms$get;\nol.proj.transforms.remove = _ol_proj_transforms$remove;\nol.proj.useGeographic = _ol_proj$useGeographic;\nol.render = {};\nol.render.Box = $ol$render$Box;\nol.render.Event = $ol$render$Event;\nol.render.Feature = $ol$render$Feature;\nol.render.Feature.toFeature = _ol_render_Feature$toFeature;\nol.render.Feature.toGeometry = _ol_render_Feature$toGeometry;\nol.render.VectorContext = $ol$render$VectorContext;\nol.render.canvas = {};\nol.render.canvas.Builder = $ol$render$canvas$Builder;\nol.render.canvas.BuilderGroup = $ol$render$canvas$BuilderGroup;\nol.render.canvas.Executor = $ol$render$canvas$Executor;\nol.render.canvas.ExecutorGroup = $ol$render$canvas$ExecutorGroup;\nol.render.canvas.ExecutorGroup.ALL = _ol_render_canvas_ExecutorGroup$ALL;\nol.render.canvas.ExecutorGroup.DECLUTTER = _ol_render_canvas_ExecutorGroup$DECLUTTER;\nol.render.canvas.ExecutorGroup.NON_DECLUTTER = _ol_render_canvas_ExecutorGroup$NON_DECLUTTER;\nol.render.canvas.ExecutorGroup.getPixelIndexArray = _ol_render_canvas_ExecutorGroup$getPixelIndexArray;\nol.render.canvas.ImageBuilder = $ol$render$canvas$ImageBuilder;\nol.render.canvas.Immediate = $ol$render$canvas$Immediate;\nol.render.canvas.Instruction = {};\nol.render.canvas.Instruction.beginPathInstruction = _ol_render_canvas_Instruction$beginPathInstruction;\nol.render.canvas.Instruction.closePathInstruction = _ol_render_canvas_Instruction$closePathInstruction;\nol.render.canvas.Instruction.fillInstruction = _ol_render_canvas_Instruction$fillInstruction;\nol.render.canvas.Instruction.strokeInstruction = _ol_render_canvas_Instruction$strokeInstruction;\nol.render.canvas.LineStringBuilder = $ol$render$canvas$LineStringBuilder;\nol.render.canvas.PolygonBuilder = $ol$render$canvas$PolygonBuilder;\nol.render.canvas.TextBuilder = $ol$render$canvas$TextBuilder;\nol.render.canvas.TextBuilder.TEXT_ALIGN = _ol_render_canvas_TextBuilder$TEXT_ALIGN;\nol.render.canvas.ZIndexContext = $ol$render$canvas$ZIndexContext;\nol.render.canvas.checkedFonts = _ol_render_canvas$checkedFonts;\nol.render.canvas.defaultFillStyle = _ol_render_canvas$defaultFillStyle;\nol.render.canvas.defaultFont = _ol_render_canvas$defaultFont;\nol.render.canvas.defaultLineCap = _ol_render_canvas$defaultLineCap;\nol.render.canvas.defaultLineDash = _ol_render_canvas$defaultLineDash;\nol.render.canvas.defaultLineDashOffset = _ol_render_canvas$defaultLineDashOffset;\nol.render.canvas.defaultLineJoin = _ol_render_canvas$defaultLineJoin;\nol.render.canvas.defaultLineWidth = _ol_render_canvas$defaultLineWidth;\nol.render.canvas.defaultMiterLimit = _ol_render_canvas$defaultMiterLimit;\nol.render.canvas.defaultPadding = _ol_render_canvas$defaultPadding;\nol.render.canvas.defaultStrokeStyle = _ol_render_canvas$defaultStrokeStyle;\nol.render.canvas.defaultTextAlign = _ol_render_canvas$defaultTextAlign;\nol.render.canvas.defaultTextBaseline = _ol_render_canvas$defaultTextBaseline;\nol.render.canvas.drawImageOrLabel = _ol_render_canvas$drawImageOrLabel;\nol.render.canvas.getTextDimensions = _ol_render_canvas$getTextDimensions;\nol.render.canvas.hitdetect = {};\nol.render.canvas.hitdetect.HIT_DETECT_RESOLUTION = _ol_render_canvas_hitdetect$HIT_DETECT_RESOLUTION;\nol.render.canvas.hitdetect.createHitDetectionImageData = _ol_render_canvas_hitdetect$createHitDetectionImageData;\nol.render.canvas.hitdetect.hitDetect = _ol_render_canvas_hitdetect$hitDetect;\nol.render.canvas.measureAndCacheTextWidth = _ol_render_canvas$measureAndCacheTextWidth;\nol.render.canvas.measureTextHeight = _ol_render_canvas$measureTextHeight;\nol.render.canvas.measureTextWidth = _ol_render_canvas$measureTextWidth;\nol.render.canvas.registerFont = _ol_render_canvas$registerFont;\nol.render.canvas.rotateAtOffset = _ol_render_canvas$rotateAtOffset;\nol.render.canvas.style = {};\nol.render.canvas.style.buildRuleSet = _ol_render_canvas_style$buildRuleSet;\nol.render.canvas.style.buildStyle = _ol_render_canvas_style$buildStyle;\nol.render.canvas.style.flatStylesToStyleFunction = _ol_render_canvas_style$flatStylesToStyleFunction;\nol.render.canvas.style.rulesToStyleFunction = _ol_render_canvas_style$rulesToStyleFunction;\nol.render.canvas.textHeights = _ol_render_canvas$textHeights;\nol.render.getRenderPixel = _ol_render$getRenderPixel;\nol.render.getVectorContext = _ol_render$getVectorContext;\nol.render.toContext = _ol_render$toContext;\nol.renderer = {};\nol.renderer.Composite = $ol$renderer$Composite;\nol.renderer.Layer = $ol$renderer$Layer;\nol.renderer.Map = $ol$renderer$Map;\nol.renderer.canvas = {};\nol.renderer.canvas.ImageLayer = $ol$renderer$canvas$ImageLayer;\nol.renderer.canvas.Layer = $ol$renderer$canvas$Layer;\nol.renderer.canvas.Layer.canvasPool = _ol_renderer_canvas_Layer$canvasPool;\nol.renderer.canvas.TileLayer = $ol$renderer$canvas$TileLayer;\nol.renderer.canvas.VectorImageLayer = $ol$renderer$canvas$VectorImageLayer;\nol.renderer.canvas.VectorLayer = $ol$renderer$canvas$VectorLayer;\nol.renderer.vector = {};\nol.renderer.vector.defaultOrder = _ol_renderer_vector$defaultOrder;\nol.renderer.vector.getSquaredTolerance = _ol_renderer_vector$getSquaredTolerance;\nol.renderer.vector.getTolerance = _ol_renderer_vector$getTolerance;\nol.renderer.vector.renderFeature = _ol_renderer_vector$renderFeature;\nol.reproj = {};\nol.reproj.DataTile = $ol$reproj$DataTile;\nol.reproj.Image = $ol$reproj$Image;\nol.reproj.Tile = $ol$reproj$Tile;\nol.reproj.Triangulation = $ol$reproj$Triangulation;\nol.reproj.calculateSourceExtentResolution = _ol_reproj$calculateSourceExtentResolution;\nol.reproj.calculateSourceResolution = _ol_reproj$calculateSourceResolution;\nol.reproj.canvasPool = _ol_reproj$canvasPool;\nol.reproj.common = {};\nol.reproj.common.ERROR_THRESHOLD = _ol_reproj_common$ERROR_THRESHOLD;\nol.reproj.render = _ol_reproj$render;\nol.resolution = {};\nol.resolution.fromResolutionLike = _ol_resolution$fromResolutionLike;\nol.resolutionconstraint = {};\nol.resolutionconstraint.createMinMaxResolution = _ol_resolutionconstraint$createMinMaxResolution;\nol.resolutionconstraint.createSnapToPower = _ol_resolutionconstraint$createSnapToPower;\nol.resolutionconstraint.createSnapToResolutions = _ol_resolutionconstraint$createSnapToResolutions;\nol.rotationconstraint = {};\nol.rotationconstraint.createSnapToN = _ol_rotationconstraint$createSnapToN;\nol.rotationconstraint.createSnapToZero = _ol_rotationconstraint$createSnapToZero;\nol.rotationconstraint.disable = _ol_rotationconstraint$disable;\nol.rotationconstraint.none = _ol_rotationconstraint$none;\nol.size = {};\nol.size.buffer = _ol_size$buffer;\nol.size.hasArea = _ol_size$hasArea;\nol.size.scale = _ol_size$scale;\nol.size.toSize = _ol_size$toSize;\nol.source = {};\nol.source.BingMaps = $ol$source$BingMaps;\nol.source.BingMaps.quadKey = _ol_source_BingMaps$quadKey;\nol.source.Cluster = $ol$source$Cluster;\nol.source.DataTile = $ol$source$DataTile;\nol.source.Google = $ol$source$Google;\nol.source.Image = $ol$source$Image;\nol.source.Image.ImageSourceEvent = _ol_source_Image$ImageSourceEvent;\nol.source.Image.defaultImageLoadFunction = _ol_source_Image$defaultImageLoadFunction;\nol.source.Image.getRequestExtent = _ol_source_Image$getRequestExtent;\nol.source.ImageArcGISRest = $ol$source$ImageArcGISRest;\nol.source.ImageCanvas = $ol$source$ImageCanvas;\nol.source.ImageStatic = $ol$source$ImageStatic;\nol.source.ImageWMS = $ol$source$ImageWMS;\nol.source.OGCMapTile = $ol$source$OGCMapTile;\nol.source.OSM = $ol$source$OSM;\nol.source.OSM.ATTRIBUTION = _ol_source_OSM$ATTRIBUTION;\nol.source.Raster = $ol$source$Raster;\nol.source.Raster.Processor = _ol_source_Raster$Processor;\nol.source.Raster.RasterSourceEvent = _ol_source_Raster$RasterSourceEvent;\nol.source.Raster.newImageData = _ol_source_Raster$newImageData;\nol.source.Source = $ol$source$Source;\nol.source.StadiaMaps = $ol$source$StadiaMaps;\nol.source.Tile = $ol$source$Tile;\nol.source.Tile.TileSourceEvent = _ol_source_Tile$TileSourceEvent;\nol.source.TileArcGISRest = $ol$source$TileArcGISRest;\nol.source.TileDebug = $ol$source$TileDebug;\nol.source.TileImage = $ol$source$TileImage;\nol.source.TileJSON = $ol$source$TileJSON;\nol.source.TileWMS = $ol$source$TileWMS;\nol.source.UTFGrid = $ol$source$UTFGrid;\nol.source.UTFGrid.CustomTile = _ol_source_UTFGrid$CustomTile;\nol.source.UrlTile = $ol$source$UrlTile;\nol.source.Vector = $ol$source$Vector;\nol.source.Vector.VectorSourceEvent = _ol_source_Vector$VectorSourceEvent;\nol.source.WMTS = $ol$source$WMTS;\nol.source.WMTS.optionsFromCapabilities = _ol_source_WMTS$optionsFromCapabilities;\nol.source.XYZ = $ol$source$XYZ;\nol.source.arcgisRest = {};\nol.source.arcgisRest.createLoader = _ol_source_arcgisRest$createLoader;\nol.source.arcgisRest.getRequestUrl = _ol_source_arcgisRest$getRequestUrl;\nol.source.common = {};\nol.source.common.DECIMALS = _ol_source_common$DECIMALS;\nol.source.common.DEFAULT_WMS_VERSION = _ol_source_common$DEFAULT_WMS_VERSION;\nol.source.ogcTileUtil = {};\nol.source.ogcTileUtil.appendCollectionsQueryParam = _ol_source_ogcTileUtil$appendCollectionsQueryParam;\nol.source.ogcTileUtil.getMapTileUrlTemplate = _ol_source_ogcTileUtil$getMapTileUrlTemplate;\nol.source.ogcTileUtil.getTileSetInfo = _ol_source_ogcTileUtil$getTileSetInfo;\nol.source.ogcTileUtil.getVectorTileUrlTemplate = _ol_source_ogcTileUtil$getVectorTileUrlTemplate;\nol.source.sourcesFromTileGrid = _ol_source$sourcesFromTileGrid;\nol.source.static = {};\nol.source.static.createLoader = _ol_source_static$createLoader;\nol.source.wms = {};\nol.source.wms.DEFAULT_VERSION = _ol_source_wms$DEFAULT_VERSION;\nol.source.wms.createLoader = _ol_source_wms$createLoader;\nol.source.wms.getFeatureInfoUrl = _ol_source_wms$getFeatureInfoUrl;\nol.source.wms.getImageSrc = _ol_source_wms$getImageSrc;\nol.source.wms.getLegendUrl = _ol_source_wms$getLegendUrl;\nol.source.wms.getRequestParams = _ol_source_wms$getRequestParams;\nol.source.wms.getRequestUrl = _ol_source_wms$getRequestUrl;\nol.sphere = {};\nol.sphere.DEFAULT_RADIUS = _ol_sphere$DEFAULT_RADIUS;\nol.sphere.getArea = _ol_sphere$getArea;\nol.sphere.getDistance = _ol_sphere$getDistance;\nol.sphere.getLength = _ol_sphere$getLength;\nol.sphere.offset = _ol_sphere$offset;\nol.string = {};\nol.string.compareVersions = _ol_string$compareVersions;\nol.string.padNumber = _ol_string$padNumber;\nol.structs = {};\nol.structs.LRUCache = $ol$structs$LRUCache;\nol.structs.LinkedList = $ol$structs$LinkedList;\nol.structs.PriorityQueue = $ol$structs$PriorityQueue;\nol.structs.PriorityQueue.DROP = _ol_structs_PriorityQueue$DROP;\nol.structs.RBush = $ol$structs$RBush;\nol.style = {};\nol.style.Circle = $ol$style$Circle;\nol.style.Fill = $ol$style$Fill;\nol.style.Icon = $ol$style$Icon;\nol.style.IconImage = $ol$style$IconImage;\nol.style.IconImage.get = _ol_style_IconImage$get;\nol.style.IconImageCache = $ol$style$IconImageCache;\nol.style.IconImageCache.getCacheKey = _ol_style_IconImageCache$getCacheKey;\nol.style.IconImageCache.shared = _ol_style_IconImageCache$shared;\nol.style.Image = $ol$style$Image;\nol.style.RegularShape = $ol$style$RegularShape;\nol.style.Stroke = $ol$style$Stroke;\nol.style.Style = $ol$style$Style;\nol.style.Style.createDefaultStyle = _ol_style_Style$createDefaultStyle;\nol.style.Style.createEditingStyle = _ol_style_Style$createEditingStyle;\nol.style.Style.toFunction = _ol_style_Style$toFunction;\nol.style.Text = $ol$style$Text;\nol.style.flat = {};\nol.style.flat.createDefaultStyle = _ol_style_flat$createDefaultStyle;\nol.tilecoord = {};\nol.tilecoord.createOrUpdate = _ol_tilecoord$createOrUpdate;\nol.tilecoord.fromKey = _ol_tilecoord$fromKey;\nol.tilecoord.getCacheKeyForTileKey = _ol_tilecoord$getCacheKeyForTileKey;\nol.tilecoord.getKey = _ol_tilecoord$getKey;\nol.tilecoord.getKeyZXY = _ol_tilecoord$getKeyZXY;\nol.tilecoord.hash = _ol_tilecoord$hash;\nol.tilecoord.withinExtentAndZ = _ol_tilecoord$withinExtentAndZ;\nol.tilegrid = {};\nol.tilegrid.TileGrid = $ol$tilegrid$TileGrid;\nol.tilegrid.WMTS = $ol$tilegrid$WMTS;\nol.tilegrid.WMTS.createFromCapabilitiesMatrixSet = _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet;\nol.tilegrid.common = {};\nol.tilegrid.common.DEFAULT_MAX_ZOOM = _ol_tilegrid_common$DEFAULT_MAX_ZOOM;\nol.tilegrid.common.DEFAULT_TILE_SIZE = _ol_tilegrid_common$DEFAULT_TILE_SIZE;\nol.tilegrid.createForExtent = _ol_tilegrid$createForExtent;\nol.tilegrid.createForProjection = _ol_tilegrid$createForProjection;\nol.tilegrid.createXYZ = _ol_tilegrid$createXYZ;\nol.tilegrid.extentFromProjection = _ol_tilegrid$extentFromProjection;\nol.tilegrid.getForProjection = _ol_tilegrid$getForProjection;\nol.tilegrid.wrapX = _ol_tilegrid$wrapX;\nol.tileurlfunction = {};\nol.tileurlfunction.createFromTemplate = _ol_tileurlfunction$createFromTemplate;\nol.tileurlfunction.createFromTemplates = _ol_tileurlfunction$createFromTemplates;\nol.tileurlfunction.createFromTileUrlFunctions = _ol_tileurlfunction$createFromTileUrlFunctions;\nol.tileurlfunction.expandUrl = _ol_tileurlfunction$expandUrl;\nol.tileurlfunction.nullTileUrlFunction = _ol_tileurlfunction$nullTileUrlFunction;\nol.transform = {};\nol.transform.apply = _ol_transform$apply;\nol.transform.compose = _ol_transform$compose;\nol.transform.composeCssTransform = _ol_transform$composeCssTransform;\nol.transform.create = _ol_transform$create;\nol.transform.determinant = _ol_transform$determinant;\nol.transform.invert = _ol_transform$invert;\nol.transform.makeInverse = _ol_transform$makeInverse;\nol.transform.makeScale = _ol_transform$makeScale;\nol.transform.multiply = _ol_transform$multiply;\nol.transform.reset = _ol_transform$reset;\nol.transform.rotate = _ol_transform$rotate;\nol.transform.scale = _ol_transform$scale;\nol.transform.set = _ol_transform$set;\nol.transform.setFromArray = _ol_transform$setFromArray;\nol.transform.toString = _ol_transform$toString;\nol.transform.translate = _ol_transform$translate;\nol.uri = {};\nol.uri.appendParams = _ol_uri$appendParams;\nol.util = {};\nol.util.VERSION = _ol_util$VERSION;\nol.util.abstract = _ol_util$abstract;\nol.util.getUid = _ol_util$getUid;\nol.vec = {};\nol.vec.mat4 = {};\nol.vec.mat4.create = _ol_vec_mat4$create;\nol.vec.mat4.fromTransform = _ol_vec_mat4$fromTransform;\nol.xml = {};\nol.xml.OBJECT_PROPERTY_NODE_FACTORY = _ol_xml$OBJECT_PROPERTY_NODE_FACTORY;\nol.xml.XML_SCHEMA_INSTANCE_URI = _ol_xml$XML_SCHEMA_INSTANCE_URI;\nol.xml.createElementNS = _ol_xml$createElementNS;\nol.xml.getAllTextContent = _ol_xml$getAllTextContent;\nol.xml.getAllTextContent_ = _ol_xml$getAllTextContent_;\nol.xml.getAttributeNS = _ol_xml$getAttributeNS;\nol.xml.getDocument = _ol_xml$getDocument;\nol.xml.getXMLSerializer = _ol_xml$getXMLSerializer;\nol.xml.isDocument = _ol_xml$isDocument;\nol.xml.makeArrayExtender = _ol_xml$makeArrayExtender;\nol.xml.makeArrayPusher = _ol_xml$makeArrayPusher;\nol.xml.makeArraySerializer = _ol_xml$makeArraySerializer;\nol.xml.makeChildAppender = _ol_xml$makeChildAppender;\nol.xml.makeObjectPropertyPusher = _ol_xml$makeObjectPropertyPusher;\nol.xml.makeObjectPropertySetter = _ol_xml$makeObjectPropertySetter;\nol.xml.makeReplacer = _ol_xml$makeReplacer;\nol.xml.makeSequence = _ol_xml$makeSequence;\nol.xml.makeSimpleNodeFactory = _ol_xml$makeSimpleNodeFactory;\nol.xml.makeStructureNS = _ol_xml$makeStructureNS;\nol.xml.parse = _ol_xml$parse;\nol.xml.parseNode = _ol_xml$parseNode;\nol.xml.pushParseAndPop = _ol_xml$pushParseAndPop;\nol.xml.pushSerializeAndPop = _ol_xml$pushSerializeAndPop;\nol.xml.registerDocument = _ol_xml$registerDocument;\nol.xml.registerXMLSerializer = _ol_xml$registerXMLSerializer;\nol.xml.serialize = _ol_xml$serialize;\n\nexport default ol;","/**\n * @module ol/control/ZoomToExtent\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {fromUserExtent} from '../proj.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nclass ZoomToExtent extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent|null}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    const label = options.label !== undefined ? options.label : 'E';\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label,\n    );\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  }\n\n  /**\n   * @protected\n   */\n  handleZoomToExtent() {\n    const map = this.getMap();\n    const view = map.getView();\n    const extent = !this.extent\n      ? view.getProjection().getExtent()\n      : fromUserExtent(this.extent, view.getProjection());\n    view.fitInternal(polygonFromExtent(extent));\n  }\n}\n\nexport default ZoomToExtent;\n","/**\n * @module ol/format/filter\n */\nimport And from './filter/And.js';\nimport Bbox from './filter/Bbox.js';\nimport Contains from './filter/Contains.js';\nimport DWithin from './filter/DWithin.js';\nimport Disjoint from './filter/Disjoint.js';\nimport During from './filter/During.js';\nimport EqualTo from './filter/EqualTo.js';\nimport GreaterThan from './filter/GreaterThan.js';\nimport GreaterThanOrEqualTo from './filter/GreaterThanOrEqualTo.js';\nimport Intersects from './filter/Intersects.js';\nimport IsBetween from './filter/IsBetween.js';\nimport IsLike from './filter/IsLike.js';\nimport IsNull from './filter/IsNull.js';\nimport LessThan from './filter/LessThan.js';\nimport LessThanOrEqualTo from './filter/LessThanOrEqualTo.js';\nimport Not from './filter/Not.js';\nimport NotEqualTo from './filter/NotEqualTo.js';\nimport Or from './filter/Or.js';\nimport ResourceId from './filter/ResourceId.js';\nimport Within from './filter/Within.js';\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @return {!And} `<And>` operator.\n * @api\n */\nexport function and(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(And, params))();\n}\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @return {!Or} `<Or>` operator.\n * @api\n */\nexport function or(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(Or, params))();\n}\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!import(\"./filter/Filter.js\").default} condition Filter condition.\n * @return {!Not} `<Not>` operator.\n * @api\n */\nexport function not(condition) {\n  return new Not(condition);\n}\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../extent.js\").Extent} extent Extent.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Bbox} `<BBOX>` operator.\n * @api\n */\nexport function bbox(geometryName, extent, srsName) {\n  return new Bbox(geometryName, extent, srsName);\n}\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Contains} `<Contains>` operator.\n * @api\n */\nexport function contains(geometryName, geometry, srsName) {\n  return new Contains(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Intersects} `<Intersects>` operator.\n * @api\n */\nexport function intersects(geometryName, geometry, srsName) {\n  return new Intersects(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Disjoint>` operator to test whether a geometry-valued property\n * is disjoint to a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Disjoint} `<Disjoint>` operator.\n * @api\n */\nexport function disjoint(geometryName, geometry, srsName) {\n  return new Disjoint(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Within} `<Within>` operator.\n * @api\n */\nexport function within(geometryName, geometry, srsName) {\n  return new Within(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<DWithin>` operator to test whether a geometry-valued property\n * is within a distance to a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {!number} distance Distance.\n * @param {!string} unit Unit.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!DWithin} `<DWithin>` operator.\n * @api\n */\nexport function dwithin(geometryName, geometry, distance, unit, srsName) {\n  return new DWithin(geometryName, geometry, distance, unit, srsName);\n}\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\nexport function equalTo(propertyName, expression, matchCase) {\n  return new EqualTo(propertyName, expression, matchCase);\n}\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\nexport function notEqualTo(propertyName, expression, matchCase) {\n  return new NotEqualTo(propertyName, expression, matchCase);\n}\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\nexport function lessThan(propertyName, expression) {\n  return new LessThan(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\nexport function lessThanOrEqualTo(propertyName, expression) {\n  return new LessThanOrEqualTo(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\nexport function greaterThan(propertyName, expression) {\n  return new GreaterThan(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\nexport function greaterThanOrEqualTo(propertyName, expression) {\n  return new GreaterThanOrEqualTo(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @return {!IsNull} `<PropertyIsNull>` operator.\n * @api\n */\nexport function isNull(propertyName) {\n  return new IsNull(propertyName);\n}\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @return {!IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\nexport function between(propertyName, lowerBoundary, upperBoundary) {\n  return new IsBetween(propertyName, lowerBoundary, upperBoundary);\n}\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string} [wildCard] Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string} [singleChar] pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string} [escapeChar] Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!IsLike} `<PropertyIsLike>` operator.\n * @api\n */\nexport function like(\n  propertyName,\n  pattern,\n  wildCard,\n  singleChar,\n  escapeChar,\n  matchCase,\n) {\n  return new IsLike(\n    propertyName,\n    pattern,\n    wildCard,\n    singleChar,\n    escapeChar,\n    matchCase,\n  );\n}\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @return {!During} `<During>` operator.\n * @api\n */\nexport function during(propertyName, begin, end) {\n  return new During(propertyName, begin, end);\n}\n\nexport function resourceId(rid) {\n  return new ResourceId(rid);\n}\n","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport GML2 from './GML2.js';\nimport XMLFeature from './XMLFeature.js';\nimport {extend} from '../array.js';\nimport {makeArrayPusher, makeStructureNS, pushParseAndPop} from '../xml.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<string>} [layers] If set, only features of the given layers will be returned by the format when read.\n */\n\n/**\n * @const\n * @type {string}\n */\nconst featureIdentifier = '_feature';\n\n/**\n * @const\n * @type {string}\n */\nconst layerIdentifier = '_layer';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link module:ol/format/GML2~GML2} to read features.\n *\n * @api\n */\nclass WMSGetFeatureInfo extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n    /**\n     * @private\n     * @type {GML2}\n     */\n    this.gmlFormat_ = new GML2();\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n  }\n\n  /**\n   * @return {Array<string>|null} layers\n   */\n  getLayers() {\n    return this.layers_;\n  }\n\n  /**\n   * @param {Array<string>|null} layers Layers to parse.\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  readFeatures_(node, objectStack) {\n    node.setAttribute('namespaceURI', this.featureNS_);\n    const localName = node.localName;\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = [];\n    if (node.childNodes.length === 0) {\n      return features;\n    }\n    if (localName == 'msGMLOutput') {\n      for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n        const layer = node.childNodes[i];\n        if (layer.nodeType !== Node.ELEMENT_NODE) {\n          continue;\n        }\n\n        const layerElement = /** @type {Element} */ (layer);\n        const context = objectStack[0];\n\n        const toRemove = layerIdentifier;\n        const layerName = layerElement.localName.replace(toRemove, '');\n\n        if (this.layers_ && !this.layers_.includes(layerName)) {\n          continue;\n        }\n\n        const featureType = layerName + featureIdentifier;\n\n        context['featureType'] = featureType;\n        context['featureNS'] = this.featureNS_;\n\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        const parsers = {};\n        parsers[featureType] = makeArrayPusher(\n          this.gmlFormat_.readFeatureElement,\n          this.gmlFormat_,\n        );\n        const parsersNS = makeStructureNS(\n          [context['featureNS'], null],\n          parsers,\n        );\n        layerElement.setAttribute('namespaceURI', this.featureNS_);\n        const layerFeatures = pushParseAndPop(\n          [],\n          // @ts-ignore\n          parsersNS,\n          layerElement,\n          objectStack,\n          this.gmlFormat_,\n        );\n        if (layerFeatures) {\n          extend(features, layerFeatures);\n        }\n      }\n    }\n    if (localName == 'FeatureCollection') {\n      const gmlFeatures = pushParseAndPop(\n        [],\n        this.gmlFormat_.FEATURE_COLLECTION_PARSERS,\n        node,\n        [{}],\n        this.gmlFormat_,\n      );\n      if (gmlFeatures) {\n        features = gmlFeatures;\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    const internalOptions = {};\n    if (options) {\n      Object.assign(internalOptions, this.getReadOptions(node, options));\n    }\n    return this.readFeatures_(node, [internalOptions]);\n  }\n}\n\nexport default WMSGetFeatureInfo;\n","/**\n * @module ol/geom/flat/topology\n */\nimport {linearRing as linearRingArea} from './area.js';\n\n/**\n * Check if the linestring is a boundary.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} The linestring is a boundary.\n */\nexport function lineStringIsClosed(flatCoordinates, offset, end, stride) {\n  const lastCoord = end - stride;\n  if (\n    flatCoordinates[offset] === flatCoordinates[lastCoord] &&\n    flatCoordinates[offset + 1] === flatCoordinates[lastCoord + 1] &&\n    (end - offset) / stride > 3\n  ) {\n    return !!linearRingArea(flatCoordinates, offset, end, stride);\n  }\n  return false;\n}\n","/**\n * @module ol/interaction/DblClickDragZoom\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds. *\n * @property {number} [delta=1] The zoom delta applied on move of one pixel. *\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by double tap/click then drag up/down\n * with one finger/left mouse.\n * @api\n */\nclass DblClickDragZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleDeltaByPixel_ = options.delta ? options.delta : 0.01;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.handlingDownUpSequence_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.handlingDoubleDownSequence_ = false;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.doubleTapTimeoutId_ = undefined;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent  map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence_) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence_ = handledUp;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        if (this.handlingDoubleDownSequence_) {\n          this.handlingDoubleDownSequence_ = false;\n          const handled = this.handleDownEvent(mapBrowserEvent);\n          this.handlingDownUpSequence_ = handled;\n          stopEvent = this.stopDown(handled);\n        } else {\n          stopEvent = this.stopDown(false);\n          this.waitForDblTap_();\n        }\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.down_.originalEvent;\n    const distance = touch0.clientY - touch1.clientY;\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta =\n        1 - (this.lastDistance_ - distance) * this.scaleDeltaByPixel_;\n    }\n    this.lastDistance_ = distance;\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale, bypass the resolution constraint\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    map.render();\n    view.adjustResolutionInternal(scaleDelta);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length == 1) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      this.down_ = mapBrowserEvent;\n      if (!this.handlingDownUpSequence_) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer up events zooming out.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length == 0) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      this.handlingDownUpSequence_ = false;\n      this.handlingDoubleDownSequence_ = false;\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = Object.values(this.trackedPointers_);\n    }\n  }\n\n  /**\n   * Wait the second double finger tap.\n   * @private\n   */\n  waitForDblTap_() {\n    if (this.doubleTapTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.doubleTapTimeoutId_);\n      this.doubleTapTimeoutId_ = undefined;\n    } else {\n      this.handlingDoubleDownSequence_ = true;\n      this.doubleTapTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        250,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.handlingDoubleDownSequence_ = false;\n    this.doubleTapTimeoutId_ = undefined;\n  }\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default DblClickDragZoom;\n","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport PointerInteraction from './Pointer.js';\nimport {mouseOnly, shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nclass DragRotateAndZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastMagnitude_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const deltaX = offset[0] - size[0] / 2;\n    const deltaY = size[1] / 2 - offset[1];\n    const theta = Math.atan2(deltaY, deltaX);\n    const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    const view = map.getView();\n    if (this.lastAngle_ !== undefined) {\n      const angleDelta = this.lastAngle_ - theta;\n      view.adjustRotationInternal(angleDelta);\n    }\n    this.lastAngle_ = theta;\n    if (this.lastMagnitude_ !== undefined) {\n      view.adjustResolutionInternal(this.lastMagnitude_ / magnitude);\n    }\n    if (this.lastMagnitude_ !== undefined) {\n      this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n    }\n    this.lastMagnitude_ = magnitude;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n    view.endInteraction(this.duration_, direction);\n    this.lastScaleDelta_ = 0;\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (this.condition_(mapBrowserEvent)) {\n      mapBrowserEvent.map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      this.lastMagnitude_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotateAndZoom;\n","/**\n * @module ol/layer/VectorImage\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorImageLayerRenderer from '../renderer/canvas/VectorImageLayer.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text on this layer. Any truthy value will enable\n * decluttering. The priority is defined by the `zIndex` of the style and the render order of features. Higher z-index means higher\n * priority. Within the same z-index, a feature rendered before another has higher priority. Items will\n * not be decluttered against or together with items on other layers with the same `declutter` value. If\n * that is needed, use {@link import(\"../layer/Vector.js\").default} instead.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {number} [imageRatio=1] Ratio by which the rendered extent should be larger than the\n * viewport extent. A larger ratio avoids cut images during panning, but will cause a decrease in performance.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, to an image. This layer type provides great performance\n * during panning and zooming, but point symbols and texts are always rotated with the view and\n * pixels are scaled during zoom animations. For more accurate rendering of vector data, use\n * {@link module:ol/layer/Vector~VectorLayer} instead.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../Feature.js\").default} FeatureType\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default<FeatureType>, CanvasVectorImageLayerRenderer>}\n * @api\n */\nclass VectorImageLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<import(\"../source/Vector.js\").default<FeatureType>>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.imageRatio;\n    super(baseOptions);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.imageRatio_ =\n      options.imageRatio !== undefined ? options.imageRatio : 1;\n  }\n\n  /**\n   * @return {number} Ratio between rendered extent size and viewport extent size.\n   */\n  getImageRatio() {\n    return this.imageRatio_;\n  }\n\n  createRenderer() {\n    return new CanvasVectorImageLayerRenderer(this);\n  }\n}\n\nexport default VectorImageLayer;\n","/**\n * @module ol/source/Cluster\n */\n\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from './Vector.js';\nimport {add as addCoordinate, scale as scaleCoordinate} from '../coordinate.js';\nimport {assert} from '../asserts.js';\nimport {\n  buffer,\n  createEmpty,\n  createOrUpdateFromCoordinate,\n  getCenter,\n} from '../extent.js';\nimport {getUid} from '../util.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} FeatureType\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Distance in pixels within which features will\n * be clustered together.\n * @property {number} [minDistance=0] Minimum distance in pixels between clusters.\n * Will be capped at the configured distance.\n * By default no minimum distance is guaranteed. This config can be used to avoid\n * overlapping icons. As a tradoff, the cluster feature's position will no longer be\n * the center of all its features.\n * @property {function(FeatureType):(Point)} [geometryFunction]\n * Function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Point~Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underlying source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {function(Point, Array<FeatureType>):Feature} [createCluster]\n * Function that takes the cluster's center {@link module:ol/geom/Point~Point} and an array\n * of {@link module:ol/Feature~Feature} included in this cluster. Must return a\n * {@link module:ol/Feature~Feature} that will be used to render. Default implementation is:\n * ```js\n * function(point, features) {\n *   return new Feature({\n *     geometry: point,\n *     features: features\n *   });\n * }\n * ```\n * @property {VectorSource<FeatureType>} [source=null] Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n *\n * If the instance is disposed without also disposing the underlying\n * source `setSource(null)` has to be called to remove the listener reference\n * from the wrapped source.\n * @api\n * @template {import('../Feature.js').FeatureLike} FeatureType\n * @extends {VectorSource<Feature<import(\"../geom/Geometry.js\").default>>}\n */\nclass Cluster extends VectorSource {\n  /**\n   * @param {Options<FeatureType>} [options] Cluster options.\n   */\n  constructor(options) {\n    options = options || {};\n    super({\n      attributions: options.attributions,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.resolution = undefined;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.distance = options.distance !== undefined ? options.distance : 20;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.minDistance = options.minDistance || 0;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.interpolationRatio = 0;\n\n    /**\n     * @type {Array<Feature>}\n     * @protected\n     */\n    this.features = [];\n\n    /**\n     * @param {FeatureType} feature Feature.\n     * @return {Point} Cluster calculation point.\n     * @protected\n     */\n    this.geometryFunction =\n      options.geometryFunction ||\n      function (feature) {\n        const geometry = /** @type {Point} */ (feature.getGeometry());\n        assert(\n          !geometry || geometry.getType() === 'Point',\n          'The default `geometryFunction` can only handle `Point` or null geometries',\n        );\n        return geometry;\n      };\n\n    /**\n     * @type {function(Point, Array<FeatureType>):Feature}\n     * @private\n     */\n    this.createCustomCluster_ = options.createCluster;\n\n    /**\n     * @type {VectorSource<FeatureType>|null}\n     * @protected\n     */\n    this.source = null;\n\n    /**\n     * @private\n     */\n    this.boundRefresh_ = this.refresh.bind(this);\n\n    this.updateDistance(this.distance, this.minDistance);\n    this.setSource(options.source || null);\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/VectorEventType~VectorEventType#removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    this.features.length = 0;\n    super.clear(fast);\n  }\n\n  /**\n   * Get the distance in pixels between clusters.\n   * @return {number} Distance.\n   * @api\n   */\n  getDistance() {\n    return this.distance;\n  }\n\n  /**\n   * Get a reference to the wrapped source.\n   * @return {VectorSource<FeatureType>|null} Source.\n   * @api\n   */\n  getSource() {\n    return this.source;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    this.source?.loadFeatures(extent, resolution, projection);\n    if (resolution !== this.resolution) {\n      this.resolution = resolution;\n      this.refresh();\n    }\n  }\n\n  /**\n   * Set the distance within which features will be clusterd together.\n   * @param {number} distance The distance in pixels.\n   * @api\n   */\n  setDistance(distance) {\n    this.updateDistance(distance, this.minDistance);\n  }\n\n  /**\n   * Set the minimum distance between clusters. Will be capped at the\n   * configured distance.\n   * @param {number} minDistance The minimum distance in pixels.\n   * @api\n   */\n  setMinDistance(minDistance) {\n    this.updateDistance(this.distance, minDistance);\n  }\n\n  /**\n   * The configured minimum distance between clusters.\n   * @return {number} The minimum distance in pixels.\n   * @api\n   */\n  getMinDistance() {\n    return this.minDistance;\n  }\n\n  /**\n   * Replace the wrapped source.\n   * @param {VectorSource<FeatureType>|null} source The new source for this instance.\n   * @api\n   */\n  setSource(source) {\n    if (this.source) {\n      this.source.removeEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.source = source;\n    if (source) {\n      source.addEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.refresh();\n  }\n\n  /**\n   * Handle the source changing.\n   */\n  refresh() {\n    this.clear();\n    this.cluster();\n    this.addFeatures(this.features);\n  }\n\n  /**\n   * Update the distances and refresh the source if necessary.\n   * @param {number} distance The new distance.\n   * @param {number} minDistance The new minimum distance.\n   */\n  updateDistance(distance, minDistance) {\n    const ratio =\n      distance === 0 ? 0 : Math.min(minDistance, distance) / distance;\n    const changed =\n      distance !== this.distance || this.interpolationRatio !== ratio;\n    this.distance = distance;\n    this.minDistance = minDistance;\n    this.interpolationRatio = ratio;\n    if (changed) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  cluster() {\n    if (this.resolution === undefined || !this.source) {\n      return;\n    }\n    const extent = createEmpty();\n    const mapDistance = this.distance * this.resolution;\n    const features = this.source.getFeatures();\n\n    /** @type {Object<string, true>} */\n    const clustered = {};\n\n    for (let i = 0, ii = features.length; i < ii; i++) {\n      const feature = features[i];\n      if (!(getUid(feature) in clustered)) {\n        const geometry = this.geometryFunction(feature);\n        if (geometry) {\n          const coordinates = geometry.getCoordinates();\n          createOrUpdateFromCoordinate(coordinates, extent);\n          buffer(extent, mapDistance, extent);\n\n          const neighbors = this.source\n            .getFeaturesInExtent(extent)\n            .filter(function (neighbor) {\n              const uid = getUid(neighbor);\n              if (uid in clustered) {\n                return false;\n              }\n              clustered[uid] = true;\n              return true;\n            });\n          this.features.push(this.createCluster(neighbors, extent));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<FeatureType>} features Features\n   * @param {import(\"../extent.js\").Extent} extent The searched extent for these features.\n   * @return {Feature} The cluster feature.\n   * @protected\n   */\n  createCluster(features, extent) {\n    const centroid = [0, 0];\n    for (let i = features.length - 1; i >= 0; --i) {\n      const geometry = this.geometryFunction(features[i]);\n      if (geometry) {\n        addCoordinate(centroid, geometry.getCoordinates());\n      } else {\n        features.splice(i, 1);\n      }\n    }\n    scaleCoordinate(centroid, 1 / features.length);\n    const searchCenter = getCenter(extent);\n    const ratio = this.interpolationRatio;\n    const geometry = new Point([\n      centroid[0] * (1 - ratio) + searchCenter[0] * ratio,\n      centroid[1] * (1 - ratio) + searchCenter[1] * ratio,\n    ]);\n    if (this.createCustomCluster_) {\n      return this.createCustomCluster_(geometry, features);\n    }\n    return new Feature({\n      geometry,\n      features,\n    });\n  }\n}\n\nexport default Cluster;\n","/**\n * @module ol/source/DataTile\n */\nimport DataTile from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport ReprojDataTile from '../reproj/DataTile.js';\nimport TileCache from '../TileCache.js';\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {\n  createXYZ,\n  extentFromProjection,\n  getForProjection as getTileGridForProjection,\n} from '../tilegrid.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\nimport {toPromise} from '../functions.js';\nimport {toSize} from '../size.js';\n\n/**\n * Data tile loading function.  The function is called with z, x, and y tile coordinates and\n * returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * @typedef {function(number, number, number) : (import(\"../DataTile.js\").Data|Promise<import(\"../DataTile.js\").Data>)} Loader\n */\n\n/**\n * @typedef {Object} Options\n * @property {Loader} [loader] Data loader.  Called with z, x, and y tile coordinates.\n * Returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The pixel width and height of the source tiles.\n * This may be different than the rendered pixel size if a `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around data tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported data should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Tile projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"./Source.js\").State} [state] The source state.\n * @property {boolean} [wrapX=false] Render tiles beyond the antimeridian.\n * @property {number} [transition] Transition time when fading in new tiles (in milliseconds).\n * @property {number} [bandCount=4] Number of bands represented in the data.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * A source for typed array data tiles.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass DataTileSource extends TileSource {\n  /**\n   * @param {Options} options DataTile source options.\n   */\n  constructor(options) {\n    const projection =\n      options.projection === undefined ? 'EPSG:3857' : options.projection;\n\n    let tileGrid = options.tileGrid;\n    if (tileGrid === undefined && projection) {\n      tileGrid = createXYZ({\n        extent: extentFromProjection(projection),\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize,\n      });\n    }\n\n    super({\n      cacheSize: 0.1, // don't cache on the source\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: projection,\n      tileGrid: tileGrid,\n      opaque: options.opaque,\n      state: options.state,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {import('../size.js').Size|null}\n     */\n    this.tileSize_ = options.tileSize ? toSize(options.tileSize) : null;\n\n    /**\n     * @private\n     * @type {Array<import('../size.js').Size>|null}\n     */\n    this.tileSizes_ = null;\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n    /**\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    this.handleTileChange_ = this.handleTileChange_.bind(this);\n\n    /**\n     * @type {number}\n     */\n    this.bandCount = options.bandCount === undefined ? 4 : options.bandCount; // assume RGBA if undefined\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../TileCache.js\").default>}\n     */\n    this.tileCacheForProjection_ = {};\n  }\n\n  /**\n   * Set the source tile sizes.  The length of the array is expected to match the number of\n   * levels in the tile grid.\n   * @protected\n   * @param {Array<import('../size.js').Size>} tileSizes An array of tile sizes.\n   */\n  setTileSizes(tileSizes) {\n    this.tileSizes_ = tileSizes;\n  }\n\n  /**\n   * Get the source tile size at the given zoom level.  This may be different than the rendered tile\n   * size.\n   * @protected\n   * @param {number} z Tile zoom level.\n   * @return {import('../size.js').Size} The source tile size.\n   */\n  getTileSize(z) {\n    if (this.tileSizes_) {\n      return this.tileSizes_[z];\n    }\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    const tileGrid = this.getTileGrid();\n    return tileGrid ? toSize(tileGrid.getTileSize(z)) : [256, 256];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.gutter_;\n    }\n\n    return 0;\n  }\n\n  /**\n   * @param {Loader} loader The data loader.\n   * @protected\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} targetProj The output projection.\n   * @param {import(\"../proj/Projection.js\").default} sourceProj The input projection.\n   * @return {!DataTile} Tile.\n   */\n  getReprojTile_(z, x, y, targetProj, sourceProj) {\n    const cache = this.getTileCacheForProjection(targetProj);\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (cache.containsKey(tileCoordKey)) {\n      const tile = cache.get(tileCoordKey);\n      if (tile && tile.key == this.getKey()) {\n        return tile;\n      }\n    }\n\n    const tileGrid = this.getTileGrid();\n    const reprojTilePixelRatio = Math.max.apply(\n      null,\n      tileGrid.getResolutions().map((r, z) => {\n        const tileSize = toSize(tileGrid.getTileSize(z));\n        const textureSize = this.getTileSize(z);\n        return Math.max(\n          textureSize[0] / tileSize[0],\n          textureSize[1] / tileSize[1],\n        );\n      }),\n    );\n\n    const sourceTileGrid = this.getTileGridForProjection(sourceProj);\n    const targetTileGrid = this.getTileGridForProjection(targetProj);\n    const tileCoord = [z, x, y];\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      targetProj,\n    );\n\n    const options = Object.assign(\n      {\n        sourceProj,\n        sourceTileGrid,\n        targetProj,\n        targetTileGrid,\n        tileCoord,\n        wrappedTileCoord,\n        pixelRatio: reprojTilePixelRatio,\n        gutter: this.getGutterForProjection(sourceProj),\n        getTileFunction: (z, x, y, pixelRatio) =>\n          this.getTile(z, x, y, pixelRatio, sourceProj),\n      },\n      this.tileOptions,\n    );\n    const newTile = new ReprojDataTile(options);\n    newTile.key = this.getKey();\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!DataTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      sourceProjection &&\n      projection &&\n      !equivalent(sourceProjection, projection)\n    ) {\n      return this.getReprojTile_(z, x, y, projection, sourceProjection);\n    }\n\n    const size = this.getTileSize(z);\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return this.tileCache.get(tileCoordKey);\n    }\n\n    const sourceLoader = this.loader_;\n\n    function loader() {\n      return toPromise(function () {\n        return sourceLoader(z, x, y);\n      });\n    }\n\n    const options = Object.assign(\n      {\n        tileCoord: [z, x, y],\n        loader: loader,\n        size: size,\n      },\n      this.tileOptions,\n    );\n\n    const tile = new DataTile(options);\n    tile.key = this.getKey();\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange_);\n\n    this.tileCache.set(tileCoordKey, tile);\n    return tile;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   */\n  handleTileChange_(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection_)) {\n      this.tileGridForProjection_[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection_[projKey];\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection_)) {\n        this.tileGridForProjection_[projKey] = tilegrid;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection_)) {\n      this.tileCacheForProjection_[projKey] = new TileCache(0.1); // don't cache\n    }\n    return this.tileCacheForProjection_[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {},\n    );\n    for (const id in this.tileCacheForProjection_) {\n      const tileCache = this.tileCacheForProjection_[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection_) {\n      this.tileCacheForProjection_[id].clear();\n    }\n  }\n}\n\nexport default DataTileSource;\n","/**\n * @module ol/source/Google\n */\n\nimport TileImage from './TileImage.js';\nimport ViewHint from '../ViewHint.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {getBottomLeft, getTopRight} from '../extent.js';\nimport {toLonLat} from '../proj.js';\n\nconst createSessionUrl = 'https://tile.googleapis.com/v1/createSession';\nconst tileUrl = 'https://tile.googleapis.com/v1/2dtiles';\nconst attributionUrl = 'https://tile.googleapis.com/tile/v1/viewport';\nconst maxZoom = 22;\n\n/**\n * @typedef {Object} Options\n * @property {string} key Google Map Tiles API key. Get yours at https://developers.google.com/maps/documentation/tile/get-api-key.\n * @property {string} [mapType='roadmap'] The type of [base map](https://developers.google.com/maps/documentation/tile/session_tokens#required_fields).\n * @property {string} [language='en-US'] An [IETF language tag](https://en.wikipedia.org/wiki/IETF_language_tag) for information displayed on the tiles.\n * @property {string} [region='US'] A [Common Locale Data Repository](https://cldr.unicode.org/) (CLDR) region identifier that represents the user location.\n * @property {string} [imageFormat] The image format used for the map tiles (e.g. `'jpeg'`, or `'png'`).\n * @property {string} [scale] Scale for map elements (`'scaleFactor1x'`, `'scaleFactor2x'`, or `'scaleFactor4x'`).\n * @property {boolean} [highDpi=false] Use high-resolution tiles.\n * @property {Array<string>} [layerTypes] The layer types added to the map (e.g. `'layerRoadmap'`, `'layerStreetview'`, or `'layerTraffic'`).\n * @property {boolean} [overlay=false] Display only the `layerTypes` and not the underlying `mapType` (only works if `layerTypes` is provided).\n * @property {Array<Object>} [styles] [Custom styles](https://developers.google.com/maps/documentation/tile/style-reference) applied to the map.\n * @property {boolean} [attributionsCollapsible=true] Allow the attributions to be collapsed.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @typedef {Object} SessionTokenRequest\n * @property {string} mapType The map type.\n * @property {string} language The language.\n * @property {string} region The region.\n * @property {string} [imageFormat] The image format.\n * @property {string} [scale] The scale.\n * @property {boolean} [highDpi] Use high resolution tiles.\n * @property {Array<string>} [layerTypes] The layer types.\n * @property {boolean} [overlay] The overlay.\n * @property {Array<Object>} [styles] The styles.\n */\n\n/**\n * @typedef {Object} SessionTokenResponse\n * @property {string} session The session token.\n * @property {string} expiry The session token expiry (seconds since the epoch as a string).\n * @property {number} tileWidth The tile width.\n * @property {number} tileHeight The tile height.\n * @property {string} imageFormat The image format.\n */\n\n/**\n * @classdesc\n * A tile layer source that renders tiles from the Google [Map Tiles API](https://developers.google.com/maps/documentation/tile/overview).\n * The constructor takes options that are passed to the request to create a session token.  Refer to the\n * [documentation](https://developers.google.com/maps/documentation/tile/session_tokens#required_fields)\n * for additional details.\n * @api\n */\nclass Google extends TileImage {\n  /**\n   * @param {Options} options Google Maps options.\n   */\n  constructor(options) {\n    const highDpi = !!options.highDpi;\n    const opaque = !(options.overlay === true);\n\n    super({\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: options.interpolate,\n      opaque: opaque,\n      projection: 'EPSG:3857',\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: highDpi ? 2 : 1,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.apiKey_ = options.key;\n\n    /**\n     * @type {Error|null}\n     */\n    this.error_ = null;\n\n    /**\n     * @type {SessionTokenRequest}\n     */\n    const sessionTokenRequest = {\n      mapType: options.mapType || 'roadmap',\n      language: options.language || 'en-US',\n      region: options.region || 'US',\n    };\n    if (options.imageFormat) {\n      sessionTokenRequest.imageFormat = options.imageFormat;\n    }\n    if (options.scale) {\n      sessionTokenRequest.scale = options.scale;\n    }\n    if (highDpi) {\n      sessionTokenRequest.highDpi = true;\n    }\n    if (options.layerTypes) {\n      sessionTokenRequest.layerTypes = options.layerTypes;\n    }\n    if (options.styles) {\n      sessionTokenRequest.styles = options.styles;\n    }\n    if (options.overlay === true) {\n      sessionTokenRequest.overlay = true;\n    }\n\n    /**\n     * @type {SessionTokenRequest}\n     * @private\n     */\n    this.sessionTokenRequest_ = sessionTokenRequest;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.sessionTokenValue_;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.sessionRefreshId_;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.previousViewportAttribution_;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.previousViewportExtent_;\n\n    this.createSession_();\n  }\n\n  /**\n   * @return {Error|null} A source loading error. When the source state is `error`, use this function\n   * to get more information about the error. To debug a faulty configuration, you may want to use\n   * a listener like\n   * ```js\n   * source.on('change', () => {\n   *   if (source.getState() === 'error') {\n   *     console.error(source.getError());\n   *   }\n   * });\n   * ```\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Exposed here so it can be overridden in the tests.\n   * @param {string} url The URL.\n   * @param {RequestInit} config The config.\n   * @return {Promise<Response>} A promise that resolves with the response.\n   */\n  fetchSessionToken(url, config) {\n    return fetch(url, config);\n  }\n\n  /**\n   * Get or renew a session token for use with tile requests.\n   * @private\n   */\n  async createSession_() {\n    const url = createSessionUrl + '?key=' + this.apiKey_;\n    const config = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(this.sessionTokenRequest_),\n    };\n\n    const response = await this.fetchSessionToken(url, config);\n    if (!response.ok) {\n      try {\n        const body = await response.json();\n        this.error_ = new Error(body.error.message);\n      } catch {\n        this.error_ = new Error('Error fetching session token');\n      }\n      this.setState('error');\n      return;\n    }\n\n    /**\n     * @type {SessionTokenResponse}\n     */\n    const sessionTokenResponse = await response.json();\n\n    const tilePixelRatio = this.getTilePixelRatio(1);\n    const tileSize = [\n      sessionTokenResponse.tileWidth / tilePixelRatio,\n      sessionTokenResponse.tileHeight / tilePixelRatio,\n    ];\n\n    this.tileGrid = createXYZ({\n      extent: extentFromProjection(this.getProjection()),\n      maxZoom: maxZoom,\n      tileSize: tileSize,\n    });\n\n    const session = sessionTokenResponse.session;\n    this.sessionTokenValue_ = session;\n    const key = this.apiKey_;\n    this.tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n      const z = tileCoord[0];\n      const x = tileCoord[1];\n      const y = tileCoord[2];\n      const url = `${tileUrl}/${z}/${x}/${y}?session=${session}&key=${key}`;\n      return url;\n    };\n\n    const expiry = parseInt(sessionTokenResponse.expiry, 10) * 1000;\n    const timeout = Math.max(expiry - Date.now() - 60 * 1000, 1);\n    this.sessionRefreshId_ = setTimeout(() => this.createSession_(), timeout);\n\n    this.setAttributions(this.fetchAttributions_.bind(this));\n    // even if the state is already ready, we want the change event\n    this.setState('ready');\n  }\n\n  /**\n   * @param {import('../Map.js').FrameState} frameState The frame state.\n   * @return {Promise<string>} The attributions.\n   * @private\n   */\n  async fetchAttributions_(frameState) {\n    if (\n      frameState.viewHints[ViewHint.ANIMATING] ||\n      frameState.viewHints[ViewHint.INTERACTING] ||\n      frameState.animate\n    ) {\n      return this.previousViewportAttribution_;\n    }\n    const [west, south] = toLonLat(\n      getBottomLeft(frameState.extent),\n      frameState.viewState.projection,\n    );\n    const [east, north] = toLonLat(\n      getTopRight(frameState.extent),\n      frameState.viewState.projection,\n    );\n    const tileGrid = this.getTileGrid();\n    const zoom = tileGrid.getZForResolution(\n      frameState.viewState.resolution,\n      this.zDirection,\n    );\n    const viewportExtent = `zoom=${zoom}&north=${north}&south=${south}&east=${east}&west=${west}`;\n    // check if the extent or zoom has actually changed to avoid unnecessary requests\n    if (this.previousViewportExtent_ == viewportExtent) {\n      return this.previousViewportAttribution_;\n    }\n    this.previousViewportExtent_ = viewportExtent;\n    const session = this.sessionTokenValue_;\n    const key = this.apiKey_;\n    const url = `${attributionUrl}?session=${session}&key=${key}&${viewportExtent}`;\n    this.previousViewportAttribution_ = await fetch(url)\n      .then((response) => response.json())\n      .then((json) => json.copyright);\n\n    return this.previousViewportAttribution_;\n  }\n\n  disposeInternal() {\n    clearTimeout(this.sessionRefreshId_);\n    super.disposeInternal();\n  }\n}\n\nexport default Google;\n","/**\n * @module ol/source/ImageArcGISRest\n */\n\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport {createLoader} from './arcgisRest.js';\nimport {decode} from '../Image.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given\n * a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * The projection code must contain a numeric end portion separated by :\n * or the entire code must form a valid ArcGIS SpatialReference definition.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {Array<number>} [resolutions] Resolutions. If specified, requests will be made for\n * these resolutions only.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n */\n\n/**\n * @classdesc\n * Source for data from ArcGIS Rest services providing single, untiled images.\n * Useful when underlying map service has labels.\n *\n * If underlying map service is not using labels,\n * take advantage of ol image caching and use\n * {@link module:ol/source/TileArcGISRest~TileArcGISRest} data source.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageArcGISRest extends ImageSource {\n  /**\n   * @param {Options} [options] Image ArcGIS Rest Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = Object.assign({}, options.params);\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.loaderProjection_ = null;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n    if (!this.loader || this.loaderProjection_ !== projection) {\n      // Lazily create loader to pick up the view projection and to allow `params` updates\n      this.loaderProjection_ = projection;\n      this.loader = createLoader({\n        crossOrigin: this.crossOrigin_,\n        params: this.params_,\n        projection: projection,\n        hidpi: this.hidpi_,\n        url: this.url_,\n        ratio: this.ratio_,\n        load: (image, src) => {\n          this.image.setImage(image);\n          this.imageLoadFunction_(this.image, src);\n          return decode(image);\n        },\n      });\n    }\n\n    return super.getImageInternal(extent, resolution, pixelRatio, projection);\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * Return the URL used for this ArcGIS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.loader = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.changed();\n  }\n\n  changed() {\n    this.image = null;\n    super.changed();\n  }\n}\n\nexport default ImageArcGISRest;\n","/**\n * @module ol/source/ImageCanvas\n */\n\nimport ImageCanvas from '../ImageCanvas.js';\nimport ImageSource from './Image.js';\nimport {\n  containsExtent,\n  getHeight,\n  getWidth,\n  scaleFromCenter,\n} from '../extent.js';\n\n/**\n * A function returning the canvas element (`{HTMLCanvasElement}`)\n * used by the source as an image. The arguments passed to the function are:\n * {@link module:ol/extent~Extent} the image extent, `{number}` the image resolution,\n * `{number}` the pixel ratio of the map, {@link module:ol/size~Size} the image size,\n * and {@link module:ol/proj/Projection~Projection} the image projection. The canvas returned by\n * this function is cached by the source. The this keyword inside the function\n * references the {@link module:ol/source/ImageCanvas~ImageCanvasSource}.\n *\n * @typedef {function(this:import(\"../ImageCanvas.js\").default, import(\"../extent.js\").Extent, number,\n *     number, import(\"../size.js\").Size, import(\"../proj/Projection.js\").default): HTMLCanvasElement} FunctionType\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {FunctionType} [canvasFunction] Canvas function.\n * The function returning the canvas element used by the source\n * as an image. The arguments passed to the function are: {@link import(\"../extent.js\").Extent} the\n * image extent, `{number}` the image resolution, `{number}` the pixel ratio of the map,\n * {@link import(\"../size.js\").Size} the image size, and {@link import(\"../proj/Projection.js\").default} the image\n * projection. The canvas returned by this function is cached by the source. If\n * the value returned by the function is later changed then\n * `changed` should be called on the source for the source to\n * invalidate the current cached image. See: {@link module:ol/Observable~Observable#changed}\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. 1 means canvases are the size of the map viewport, 2 means twice the\n * width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, new canvases will be created for these resolutions\n * @property {import(\"./Source.js\").State} [state] Source state.\n */\n\n/**\n * @classdesc\n * Base class for image sources where a canvas element is the image.\n * @api\n */\nclass ImageCanvasSource extends ImageSource {\n  /**\n   * @param {Options} [options] ImageCanvas options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n      state: options.state,\n    });\n\n    /**\n     * @private\n     * @type {FunctionType}\n     */\n    this.canvasFunction_ = options.canvasFunction;\n\n    /**\n     * @private\n     * @type {import(\"../ImageCanvas.js\").default}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n\n    let canvas = this.canvas_;\n    if (\n      canvas &&\n      this.renderedRevision_ == this.getRevision() &&\n      canvas.getResolution() == resolution &&\n      canvas.getPixelRatio() == pixelRatio &&\n      containsExtent(canvas.getExtent(), extent)\n    ) {\n      return canvas;\n    }\n\n    extent = extent.slice();\n    scaleFromCenter(extent, this.ratio_);\n    const width = getWidth(extent) / resolution;\n    const height = getHeight(extent) / resolution;\n    const size = [width * pixelRatio, height * pixelRatio];\n\n    const canvasElement = this.canvasFunction_.call(\n      this,\n      extent,\n      resolution,\n      pixelRatio,\n      size,\n      projection,\n    );\n    if (canvasElement) {\n      canvas = new ImageCanvas(extent, resolution, pixelRatio, canvasElement);\n    }\n    this.canvas_ = canvas;\n    this.renderedRevision_ = this.getRevision();\n\n    return canvas;\n  }\n}\n\nexport default ImageCanvasSource;\n","/**\n * @module ol/source/ImageStatic\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageWrapper, {decode} from '../Image.js';\nimport {createLoader} from './static.js';\nimport {get as getProjection} from '../proj.js';\nimport {intersects} from '../extent.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} imageExtent Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {string} url Image URL.\n */\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nclass Static extends ImageSource {\n  /**\n   * @param {Options} options ImageStatic options.\n   */\n  constructor(options) {\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const /** @type {import(\"../Image.js\").LoadFunction} */ imageLoadFunction =\n        options.imageLoadFunction !== undefined\n          ? options.imageLoadFunction\n          : defaultImageLoadFunction;\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: getProjection(options.projection),\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.imageExtent_ = options.imageExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image = null;\n\n    this.image = new ImageWrapper(\n      this.imageExtent_,\n      undefined,\n      1,\n      createLoader({\n        url: options.url,\n        imageExtent: options.imageExtent,\n        crossOrigin,\n        load: (image, src) => {\n          this.image.setImage(image);\n          imageLoadFunction(this.image, src);\n          return decode(image);\n        },\n      }),\n    );\n\n    this.image.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this),\n    );\n  }\n\n  /**\n   * Returns the image extent\n   * @return {import(\"../extent.js\").Extent} image extent.\n   * @api\n   */\n  getImageExtent() {\n    return this.imageExtent_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (intersects(extent, this.image.getExtent())) {\n      return this.image;\n    }\n    return null;\n  }\n\n  /**\n   * Return the URL used for this image source.\n   * @return {string} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n}\n\nexport default Static;\n","/**\n * @module ol/source/ImageWMS\n */\n\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {createLoader, getFeatureInfoUrl, getLegendUrl} from './wms.js';\nimport {decode} from '../Image.js';\nimport {get as getProjection, transform} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} [url] WMS service URL.\n */\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageWMS extends ImageSource {\n  /**\n   * @param {Options} [options] ImageWMS options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = Object.assign({}, options.params);\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.loaderProjection_ = null;\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      resolution = calculateSourceResolution(\n        sourceProjectionObj,\n        projectionObj,\n        coordinate,\n        resolution,\n      );\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const options = {\n      url: this.url_,\n      params: {\n        ...this.params_,\n        ...params,\n      },\n      projection: sourceProjectionObj || projectionObj,\n    };\n    return getFeatureInfoUrl(options, coordinate, resolution);\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    return getLegendUrl(\n      {\n        url: this.url_,\n        params: {\n          ...this.params_,\n          ...params,\n        },\n      },\n      resolution,\n    );\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n    if (!this.loader || this.loaderProjection_ !== projection) {\n      // Lazily create loader to pick up the view projection and to allow `params` updates\n      this.loaderProjection_ = projection;\n      this.loader = createLoader({\n        crossOrigin: this.crossOrigin_,\n        params: this.params_,\n        projection: projection,\n        serverType: this.serverType_,\n        hidpi: this.hidpi_,\n        url: this.url_,\n        ratio: this.ratio_,\n        load: (image, src) => {\n          this.image.setImage(image);\n          this.imageLoadFunction_(this.image, src);\n          return decode(image);\n        },\n      });\n    }\n\n    return super.getImageInternal(extent, resolution, pixelRatio, projection);\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * Return the URL used for this WMS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.loader = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.changed();\n  }\n\n  changed() {\n    this.image = null;\n    super.changed();\n  }\n}\n\nexport default ImageWMS;\n","/**\n * @module ol/source/OGCMapTile\n */\nimport TileImage from './TileImage.js';\nimport {getTileSetInfo} from './ogcTileUtil.js';\nimport {error as logError} from '../console.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} url URL to the OGC Map Tileset endpoint.\n * @property {Object} [context] A lookup of values to use in the tile URL template.  The `{tileMatrix}`\n * (zoom level), `{tileRow}`, and `{tileCol}` variables in the URL will always be provided by the source.\n * @property {string} [mediaType] The content type for the tiles (e.g. \"image/png\").  If not provided,\n * the source will try to find a link with rel=\"item\" that uses a supported image type.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. By default, the projection\n * will be derived from the `crs` of the `tileMatrixSet`.  You can override this by supplying\n * a projection to the constructor.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will be ignored if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(tile, src) {\n *   tile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {Array<string>} [collections] A list of geospatial data sub-resources to include. If not provided, the entire dataset will\n * be included. This option is not applicable when requesting the tileset for a single collection.\n */\n\n/**\n * @classdesc\n * Layer source for map tiles from an [OGC API - Tiles](https://ogcapi.ogc.org/tiles/) service that provides \"map\" type tiles.\n * The service must conform to at least the core (http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/core)\n * and tileset (http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/tileset) conformance classes. For supporting the `collections`\n * option, the service must conform to the collections selection\n * (http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/collections-selection) conformance class.\n * @api\n */\nclass OGCMapTile extends TileImage {\n  /**\n   * @param {Options} options OGC map tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n    });\n\n    const sourceInfo = {\n      url: options.url,\n      projection: this.getProjection(),\n      mediaType: options.mediaType,\n      context: options.context || null,\n      collections: options.collections,\n    };\n\n    getTileSetInfo(sourceInfo)\n      .then(this.handleTileSetInfo_.bind(this))\n      .catch(this.handleError_.bind(this));\n  }\n\n  /**\n   * @param {import(\"./ogcTileUtil.js\").TileSetInfo} tileSetInfo Tile set info.\n   * @private\n   */\n  handleTileSetInfo_(tileSetInfo) {\n    this.tileGrid = tileSetInfo.grid;\n    this.setTileUrlFunction(tileSetInfo.urlFunction, tileSetInfo.urlTemplate);\n    this.setState('ready');\n  }\n\n  /**\n   * @private\n   * @param {Error} error The error.\n   */\n  handleError_(error) {\n    logError(error);\n    this.setState('error');\n  }\n}\n\nexport default OGCMapTile;\n","/**\n * @module ol/source/TileArcGISRest\n */\n\nimport TileImage from './TileImage.js';\nimport {createEmpty} from '../extent.js';\nimport {getRequestUrl} from './arcgisRest.js';\nimport {modulo} from '../math.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\n * default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`,\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\n * override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * The projection code must contain a numeric end portion separated by :\n * or the entire code must form a valid ArcGIS SpatialReference definition.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\n * The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\n * url should include /MapServer or /ImageServer.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\n * transition, pass `transition: 0`.\n * @property {Array<string>} [urls] ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\n * Service supports multiple urls for export requests.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from ArcGIS Rest services. Map and Image\n * Services are supported.\n *\n * For cached ArcGIS services, better performance is available using the\n * {@link module:ol/source/XYZ~XYZ} data source.\n * @api\n */\nclass TileArcGISRest extends TileImage {\n  /**\n   * @param {Options} [options] Tile ArcGIS Rest options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = Object.assign({}, options.params);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(\n    tileCoord,\n    tileSize,\n    tileExtent,\n    pixelRatio,\n    projection,\n    params,\n  ) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n\n    return getRequestUrl(\n      url,\n      tileExtent,\n      (\n        this.tileGrid || this.getTileGridForProjection(projection)\n      ).getResolution(tileCoord[0]),\n      pixelRatio,\n      projection,\n      params,\n    );\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.hidpi_ ? pixelRatio : 1;\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && !this.hidpi_) {\n      pixelRatio = 1;\n    }\n\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    // Apply default params and override with user specified values.\n    const baseParams = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true,\n    };\n    Object.assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams,\n    );\n  }\n}\n\nexport default TileArcGISRest;\n","/**\n * @module ol/source/TileDebug\n */\n\nimport XYZ from './XYZ.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Optional projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Set to `1` when debugging `VectorTile` sources with a default configuration.\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n * @property {string} [template='z:{z} x:{x} y:{y}'] Template for labeling the tiles.\n * Should include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n */\n\n/**\n * @classdesc\n * A pseudo tile source, which does not fetch tiles from a server, but renders\n * a grid outline for the tile grid/projection along with the coordinates for\n * each tile. See examples/canvas-tiles for an example.\n * @api\n */\nclass TileDebug extends XYZ {\n  /**\n   * @param {Options} [options] Debug tile options.\n   */\n  constructor(options) {\n    /**\n     * @type {Options}\n     */\n    options = options || {};\n\n    super({\n      opaque: false,\n      projection: options.projection,\n      tileGrid: options.tileGrid,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      zDirection: options.zDirection,\n      url: options.template || 'z:{z} x:{x} y:{y}',\n      tileLoadFunction: (tile, text) => {\n        const z = tile.getTileCoord()[0];\n        const tileSize = toSize(this.tileGrid.getTileSize(z));\n        const context = createCanvasContext2D(tileSize[0], tileSize[1]);\n\n        context.strokeStyle = 'grey';\n        context.strokeRect(0.5, 0.5, tileSize[0] + 0.5, tileSize[1] + 0.5);\n\n        context.fillStyle = 'grey';\n        context.strokeStyle = 'white';\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.font = '24px sans-serif';\n        context.lineWidth = 4;\n        context.strokeText(text, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n        context.fillText(text, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n\n        /** @type {import(\"../ImageTile.js\").default} */ (tile).setImage(\n          context.canvas,\n        );\n      },\n    });\n  }\n}\n\nexport default TileDebug;\n","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See https://mapbox.com/developers/api/.\n */\n\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Note: `tileSize` and other non-standard TileJSON properties are currently ignored.\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nclass TileJSON extends TileImage {\n  /**\n   * @param {Options} options TileJSON options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @type {Config}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     * @private\n     */\n    this.tileSize_ = options.tileSize;\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this),\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      throw new Error('Either `url` or `tileJSON` options must be provided');\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {Config} */ (JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * @return {Config} The tilejson object.\n   * @api\n   */\n  getTileJSON() {\n    return this.tileJSON_;\n  }\n\n  /**\n   * @protected\n   * @param {Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection,\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n      tileSize: this.tileSize_,\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n\n    if (tileJSON['attribution'] && !this.getAttributions()) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState('ready');\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n}\n\nexport default TileJSON;\n","/**\n * @module ol/source/TileWMS\n */\n\nimport TileImage from './TileImage.js';\nimport {DEFAULT_VERSION, getImageSrc, getRequestParams} from './wms.js';\nimport {appendParams} from '../uri.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {compareVersions} from '../string.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport {modulo} from '../math.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See https://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nclass TileWMS extends TileImage {\n  /**\n   * @param {Options} [options] Tile WMS options.\n   */\n  constructor(options) {\n    options = options ? options : /** @type {Options} */ ({});\n\n    const params = Object.assign({}, options.params);\n\n    const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: !transparent,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection() || projectionObj;\n\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(sourceProjectionObj);\n    }\n\n    const sourceProjCoord = transform(\n      coordinate,\n      projectionObj,\n      sourceProjectionObj,\n    );\n    const sourceResolution = calculateSourceResolution(\n      sourceProjectionObj,\n      projectionObj,\n      coordinate,\n      resolution,\n    );\n\n    const z = tileGrid.getZForResolution(sourceResolution, this.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n    const tileCoord = tileGrid.getTileCoordForCoordAndZ(sourceProjCoord, z);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    const baseParams = {\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    Object.assign(\n      baseParams,\n      getRequestParams(this.params_, 'GetFeatureInfo'),\n      params,\n    );\n\n    const x = Math.floor((sourceProjCoord[0] - tileExtent[0]) / tileResolution);\n    const y = Math.floor((tileExtent[3] - sourceProjCoord[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileExtent,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams,\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.urls[0] === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    Object.assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.urls[0]), baseParams);\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(tileCoord, tileExtent, pixelRatio, projection, params) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n\n    return getImageSrc(\n      tileExtent,\n      (\n        this.tileGrid || this.getTileGridForProjection(projection)\n      ).getResolution(tileCoord[0]),\n      pixelRatio,\n      projection,\n      url,\n      params,\n      this.serverType_,\n    );\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return !this.hidpi_ || this.serverType_ === undefined ? 1 : pixelRatio;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    const baseParams = Object.assign(\n      {},\n      getRequestParams(this.params_, 'GetMap'),\n    );\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams,\n    );\n  }\n}\n\nexport default TileWMS;\n","/**\n * @module ol/source/WMTS\n */\n\nimport TileImage from './TileImage.js';\nimport {appendParams} from '../uri.js';\nimport {containsExtent} from '../extent.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {createFromTileUrlFunctions, expandUrl} from '../tileurlfunction.js';\nimport {equivalent, get as getProjection, transformExtent} from '../proj.js';\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @typedef {'KVP' | 'REST'} RequestEncoding\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {RequestEncoding} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nclass WMTS extends TileImage {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    // TODO: add support for TileMatrixLimits\n\n    const requestEncoding =\n      options.requestEncoding !== undefined ? options.requestEncoding : 'KVP';\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    const tileGrid = options.tileGrid;\n\n    let urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ =\n      options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {RequestEncoding}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this)),\n      );\n    }\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @param {Array<string>} urls URLs.\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    this.setTileUrlFunction(\n      createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this)),\n      ),\n      key,\n    );\n  }\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  getDimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  getMatrixSet() {\n    return this.matrixSet_;\n  }\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {RequestEncoding} Request encoding.\n   * @api\n   */\n  getRequestEncoding() {\n    return this.requestEncoding_;\n  }\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  getVersion() {\n    return this.version_;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  getKeyForDimensions_() {\n    const res = this.urls ? this.urls.slice(0) : [];\n    for (const key in this.dimensions_) {\n      res.push(key + '-' + this.dimensions_[key]);\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  updateDimensions(dimensions) {\n    Object.assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  }\n\n  /**\n   * @param {string} template Template.\n   * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n   */\n  createFromWMTSTemplate(template) {\n    const requestEncoding = this.requestEncoding_;\n\n    // context property names are lower case to allow for a case insensitive\n    // replacement as some services use different naming conventions\n    const context = {\n      'layer': this.layer_,\n      'style': this.style_,\n      'tilematrixset': this.matrixSet_,\n    };\n\n    if (requestEncoding == 'KVP') {\n      Object.assign(context, {\n        'Service': 'WMTS',\n        'Request': 'GetTile',\n        'Version': this.version_,\n        'Format': this.format_,\n      });\n    }\n\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n\n    template =\n      requestEncoding == 'KVP'\n        ? appendParams(template, context)\n        : template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return p.toLowerCase() in context ? context[p.toLowerCase()] : m;\n          });\n\n    const tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (\n      this.tileGrid\n    );\n    const dimensions = this.dimensions_;\n\n    return (\n      /**\n       * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {import(\"../proj/Projection.js\").default} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        }\n        const localContext = {\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n          'TileCol': tileCoord[1],\n          'TileRow': tileCoord[2],\n        };\n        Object.assign(localContext, dimensions);\n        let url = template;\n        if (requestEncoding == 'KVP') {\n          url = appendParams(url, localContext);\n        } else {\n          url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return localContext[p];\n          });\n        }\n        return url;\n      }\n    );\n  }\n}\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {Options|null} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = layers?.find(function (elt) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (!l) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        const tileMatrixSet = tileMatrixSets.find(function (el) {\n          return el['Identifier'] == elt['TileMatrixSet'];\n        });\n        const supportedCRS = tileMatrixSet['SupportedCRS'];\n        const proj1 = getProjection(supportedCRS);\n        const proj2 = getProjection(config['projection']);\n        if (proj1 && proj2) {\n          return equivalent(proj1, proj2);\n        }\n        return supportedCRS == config['projection'];\n      });\n    } else {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        return elt['TileMatrixSet'] == config['matrixSet'];\n      });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet =\n    /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits =\n    /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = l['Style'].findIndex(function (elt) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    }\n    return elt['isDefault'];\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function (elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = matrixSets.find(function (elt) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  let wrapX = false;\n  const switchXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  let matrix = matrixSetObj.TileMatrix[0];\n\n  // create default matrixLimit\n  let selectedMatrixLimit = {\n    MinTileCol: 0,\n    MinTileRow: 0,\n    // subtract one to end up at tile top left\n    MaxTileCol: matrix.MatrixWidth - 1,\n    MaxTileRow: matrix.MatrixHeight - 1,\n  };\n\n  //in case of matrix limits, use matrix limits to calculate extent\n  if (matrixLimits) {\n    selectedMatrixLimit = matrixLimits[matrixLimits.length - 1];\n    const m = matrixSetObj.TileMatrix.find(\n      (tileMatrixValue) =>\n        tileMatrixValue.Identifier === selectedMatrixLimit.TileMatrix ||\n        matrixSetObj.Identifier + ':' + tileMatrixValue.Identifier ===\n          selectedMatrixLimit.TileMatrix,\n    );\n    if (m) {\n      matrix = m;\n    }\n  }\n\n  const resolution =\n    (matrix.ScaleDenominator * 0.00028) / projection.getMetersPerUnit(); // WMTS 1.0.0: standardized rendering pixel size\n  const origin = switchXY\n    ? [matrix.TopLeftCorner[1], matrix.TopLeftCorner[0]]\n    : matrix.TopLeftCorner;\n  const tileSpanX = matrix.TileWidth * resolution;\n  const tileSpanY = matrix.TileHeight * resolution;\n  let matrixSetExtent = matrixSetObj['BoundingBox'];\n  if (matrixSetExtent && switchXY) {\n    matrixSetExtent = [\n      matrixSetExtent[1],\n      matrixSetExtent[0],\n      matrixSetExtent[3],\n      matrixSetExtent[2],\n    ];\n  }\n  let extent = [\n    origin[0] + tileSpanX * selectedMatrixLimit.MinTileCol,\n    // add one to get proper bottom/right coordinate\n    origin[1] - tileSpanY * (1 + selectedMatrixLimit.MaxTileRow),\n    origin[0] + tileSpanX * (1 + selectedMatrixLimit.MaxTileCol),\n    origin[1] - tileSpanY * selectedMatrixLimit.MinTileRow,\n  ];\n\n  if (\n    matrixSetExtent !== undefined &&\n    !containsExtent(matrixSetExtent, extent)\n  ) {\n    const wgs84BoundingBox = l['WGS84BoundingBox'];\n    const wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    extent = matrixSetExtent;\n    if (wgs84BoundingBox) {\n      wrapX =\n        wgs84BoundingBox[0] === wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] === wgs84ProjectionExtent[2];\n    } else {\n      const wgs84MatrixSetExtent = transformExtent(\n        matrixSetExtent,\n        matrixSetObj['SupportedCRS'],\n        'EPSG:4326',\n      );\n      // Ignore slight deviation from the correct x limits\n      wrapX =\n        wgs84MatrixSetExtent[0] - 1e-10 <= wgs84ProjectionExtent[0] &&\n        wgs84MatrixSetExtent[2] + 1e-10 >= wgs84ProjectionExtent[2];\n    }\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(\n    matrixSetObj,\n    extent,\n    matrixLimits,\n  );\n\n  /** @type {!Array<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if (\n    'OperationsMetadata' in wmtsCap &&\n    'GetTile' in wmtsCap['OperationsMetadata']\n  ) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = gets[i]['Constraint'].find(function (element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === 'KVP') {\n          if (encodings.includes('KVP')) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = 'KVP';\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = 'REST';\n    l['ResourceURL'].forEach(function (element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin'],\n  };\n}\n","/**\n * @module ol/source\n */\n\nimport LRUCache from './structs/LRUCache.js';\nimport {getIntersection} from './extent.js';\n\nexport {default as BingMaps} from './source/BingMaps.js';\nexport {default as CartoDB} from './source/CartoDB.js';\nexport {default as Cluster} from './source/Cluster.js';\nexport {default as DataTile} from './source/DataTile.js';\nexport {default as GeoTIFF} from './source/GeoTIFF.js';\nexport {default as Google} from './source/Google.js';\nexport {default as IIIF} from './source/IIIF.js';\nexport {default as Image} from './source/Image.js';\nexport {default as ImageArcGISRest} from './source/ImageArcGISRest.js';\nexport {default as ImageCanvas} from './source/ImageCanvas.js';\nexport {default as ImageMapGuide} from './source/ImageMapGuide.js';\nexport {default as ImageStatic} from './source/ImageStatic.js';\nexport {default as ImageWMS} from './source/ImageWMS.js';\nexport {default as OGCMapTile} from './source/OGCMapTile.js';\nexport {default as OGCVectorTile} from './source/OGCVectorTile.js';\nexport {default as OSM} from './source/OSM.js';\nexport {default as Raster} from './source/Raster.js';\nexport {default as Source} from './source/Source.js';\nexport {default as StadiaMaps} from './source/StadiaMaps.js';\nexport {default as Tile} from './source/Tile.js';\nexport {default as TileArcGISRest} from './source/TileArcGISRest.js';\nexport {default as TileDebug} from './source/TileDebug.js';\nexport {default as TileImage} from './source/TileImage.js';\nexport {default as TileJSON} from './source/TileJSON.js';\nexport {default as TileWMS} from './source/TileWMS.js';\nexport {default as UrlTile} from './source/UrlTile.js';\nexport {default as UTFGrid} from './source/UTFGrid.js';\nexport {default as Vector} from './source/Vector.js';\nexport {default as VectorTile} from './source/VectorTile.js';\nexport {default as WMTS} from './source/WMTS.js';\nexport {default as XYZ} from './source/XYZ.js';\nexport {default as Zoomify} from './source/Zoomify.js';\nexport {createLoader as createWMSLoader} from './source/wms.js';\nexport {createLoader as createArcGISRestLoader} from './source/arcgisRest.js';\nexport {createLoader as createStaticLoader} from './source/static.js';\nexport {createLoader as createMapGuideLoader} from './source/mapguide.js';\n\n/**\n * Creates a sources function from a tile grid. This function can be used as value for the\n * `sources` property of the {@link module:ol/layer/Layer~Layer} subclasses that support it.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @param {function(import(\"./tilecoord.js\").TileCoord): import(\"./source/Source.js\").default} factory Source factory.\n * This function takes a {@link module:ol/tilecoord~TileCoord} as argument and is expected to return a\n * {@link module:ol/source/Source~Source}. **Note**: The returned sources should have a tile grid with\n * a limited set of resolutions, matching the resolution range of a single zoom level of the pyramid\n * `tileGrid` that `sourcesFromTileGrid` was called with.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./source/Source.js\").default>} Sources function.\n * @api\n */\nexport function sourcesFromTileGrid(tileGrid, factory) {\n  const sourceCache = new LRUCache(32);\n  const tileGridExtent = tileGrid.getExtent();\n  return function (extent, resolution) {\n    sourceCache.expireCache();\n    if (tileGridExtent) {\n      extent = getIntersection(tileGridExtent, extent);\n    }\n    const z = tileGrid.getZForResolution(resolution);\n    const wantedSources = [];\n    tileGrid.forEachTileCoord(extent, z, (tileCoord) => {\n      const key = tileCoord.toString();\n      if (!sourceCache.containsKey(key)) {\n        const source = factory(tileCoord);\n        sourceCache.set(key, source);\n      }\n      wantedSources.push(sourceCache.get(key));\n    });\n    return wantedSources;\n  };\n}\n","/**\n * @module ol/structs/LinkedList\n */\n\n/**\n * @typedef {Object} Item\n * @property {Item} [prev] Previous.\n * @property {Item} [next] Next.\n * @property {?} data Data.\n */\n\n/**\n * @classdesc\n * Creates an empty linked list structure.\n */\nclass LinkedList {\n  /**\n   * @param {boolean} [circular] The last item is connected to the first one,\n   * and the first item to the last one. Default is true.\n   */\n  constructor(circular) {\n    /**\n     * @private\n     * @type {Item|undefined}\n     */\n    this.first_;\n\n    /**\n     * @private\n     * @type {Item|undefined}\n     */\n    this.last_;\n\n    /**\n     * @private\n     * @type {Item|undefined}\n     */\n    this.head_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.circular_ = circular === undefined ? true : circular;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.length_ = 0;\n  }\n\n  /**\n   * Inserts an item into the linked list right after the current one.\n   *\n   * @param {?} data Item data.\n   */\n  insertItem(data) {\n    /** @type {Item} */\n    const item = {\n      prev: undefined,\n      next: undefined,\n      data: data,\n    };\n\n    const head = this.head_;\n\n    //Initialize the list.\n    if (!head) {\n      this.first_ = item;\n      this.last_ = item;\n      if (this.circular_) {\n        item.next = item;\n        item.prev = item;\n      }\n    } else {\n      //Link the new item to the adjacent ones.\n      const next = head.next;\n      item.prev = head;\n      item.next = next;\n      head.next = item;\n      if (next) {\n        next.prev = item;\n      }\n\n      if (head === this.last_) {\n        this.last_ = item;\n      }\n    }\n    this.head_ = item;\n    this.length_++;\n  }\n\n  /**\n   * Removes the current item from the list. Sets the cursor to the next item,\n   * if possible.\n   */\n  removeItem() {\n    const head = this.head_;\n    if (head) {\n      const next = head.next;\n      const prev = head.prev;\n      if (next) {\n        next.prev = prev;\n      }\n      if (prev) {\n        prev.next = next;\n      }\n      this.head_ = next || prev;\n\n      if (this.first_ === this.last_) {\n        this.head_ = undefined;\n        this.first_ = undefined;\n        this.last_ = undefined;\n      } else if (this.first_ === head) {\n        this.first_ = this.head_;\n      } else if (this.last_ === head) {\n        this.last_ = prev ? this.head_.prev : this.head_;\n      }\n      this.length_--;\n    }\n  }\n\n  /**\n   * Sets the cursor to the first item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  firstItem() {\n    this.head_ = this.first_;\n    if (this.head_) {\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the cursor to the last item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  lastItem() {\n    this.head_ = this.last_;\n    if (this.head_) {\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the cursor to the next item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  nextItem() {\n    if (this.head_ && this.head_.next) {\n      this.head_ = this.head_.next;\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the next item's data without moving the cursor.\n   *\n   * @return {?} Item data.\n   */\n  getNextItem() {\n    if (this.head_ && this.head_.next) {\n      return this.head_.next.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the cursor to the previous item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  prevItem() {\n    if (this.head_ && this.head_.prev) {\n      this.head_ = this.head_.prev;\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the previous item's data without moving the cursor.\n   *\n   * @return {?} Item data.\n   */\n  getPrevItem() {\n    if (this.head_ && this.head_.prev) {\n      return this.head_.prev.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the current item's data.\n   *\n   * @return {?} Item data.\n   */\n  getCurrItem() {\n    if (this.head_) {\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the first item of the list. This only works for circular lists, and sets\n   * the last item accordingly.\n   */\n  setFirstItem() {\n    if (this.circular_ && this.head_) {\n      this.first_ = this.head_;\n      this.last_ = this.head_.prev;\n    }\n  }\n\n  /**\n   * Concatenates two lists.\n   * @param {LinkedList} list List to merge into the current list.\n   */\n  concat(list) {\n    if (list.head_) {\n      if (this.head_) {\n        const end = this.head_.next;\n        this.head_.next = list.first_;\n        list.first_.prev = this.head_;\n        end.prev = list.last_;\n        list.last_.next = end;\n        this.length_ += list.length_;\n      } else {\n        this.head_ = list.head_;\n        this.first_ = list.first_;\n        this.last_ = list.last_;\n        this.length_ = list.length_;\n      }\n      list.head_ = undefined;\n      list.first_ = undefined;\n      list.last_ = undefined;\n      list.length_ = 0;\n    }\n  }\n\n  /**\n   * Returns the current length of the list.\n   *\n   * @return {number} Length.\n   */\n  getLength() {\n    return this.length_;\n  }\n}\n\nexport default LinkedList;\n"],"names":["BaseEvent","constructor","type","this","propagationStopped","defaultPrevented","target","preventDefault","stopPropagation","evt","ObjectEventType","Disposable","disposed","dispose","disposeInternal","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","length","found","a","b","descending","linearFindNearest","arr","direction","n","i","candidate","reverseSubArray","begin","end","tmp","extend","data","extension","Array","isArray","equals","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","index","res","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","called","nextArgs","prototype","slice","call","arguments","arrayEquals","apply","toPromise","getter","value","err","Promise","reject","resolve","promiseGetter","clear","object","property","isEmpty","Target","super","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","push","dispatchEvent","event","isString","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","Object","keys","indexOf","splice","EventType","listen","thisArg","once","bind","originalListener","eventsKey","listenOnce","unlistenByKey","key","Observable","EventTarget","on","un","revision_","changed","getRevision","onInternal","len","onceInternal","ol_key","unInternal","unByKey","abstract","Error","uidCounter_","getUid","obj","ol_uid","String","ObjectEvent","oldValue","BaseObject","values","values_","setProperties","get","hasOwnProperty","getKeys","getProperties","assign","getPropertiesInternal","hasProperties","notify","eventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","CollectionEventType","Property","CollectionEvent","element","Collection","array","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","forEach","f","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","except","TileState","easeIn","t","Math","pow","easeOut","inAndOut","linear","Tile","tileCoord","state","interimTile","transition_","transition","transitionStarts_","interpolate","release","setState","getKey","getInterimTile","tile","getState","refreshInterimChain","getTileCoord","load","getAlpha","id","time","start","delta","inTransition","endTransition","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","SAFARI_BUG_237906","test","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","CREATE_IMAGE_BITMAP","createImageBitmap","PASSIVE_EVENT_LISTENERS","passive","defineProperty","window","error","createCanvasContext2D","width","height","canvasPool","settings","canvas","shift","document","createElement","getContext","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","context","clearRect","outerWidth","offsetWidth","style","getComputedStyle","parseInt","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","insertBefore","appendChild","asImageLike","HTMLCanvasElement","HTMLVideoElement","ImageBitmap","asArrayLike","Uint8Array","Uint8ClampedArray","Float32Array","DataView","sharedContext","toArray","image","willReadFrequently","drawImage","getImageData","defaultSize","DataTile","loader_","loader","data_","error_","size_","size","getSize","imageData","getData","getError","then","catch","assert","assertion","errorMessage","Feature","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","createStyleFunction","setId","name","styles","tmp_","create","reset","transform","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","d","e","setFromArray","coordinate","x","y","rotate","angle","cos","sin","scale","translate","dx","dy","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","det","determinant","mat","matrixPrecision","toString","map","round","join","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","buffer","dest","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","Infinity","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","approximatelyEquals","tolerance","abs","extendCoordinates","extendXY","extendRings","rings","min","max","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","resolution","rotation","x0","y0","x1","y1","x2","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","xs","ys","l","_boundingExtentXYs","wrapX","projection","projectionExtent","getExtent","canWrapX","worldWidth","floor","wrapAndSliceX","multiWorld","isFinite","unitByCode","METERS_PER_UNIT","radians","PI","degrees","ft","m","Projection","code_","code","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection","units","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","atan","exp","EPSG4326Projection","cache","replace","add","transforms","destination","sourceCode","destinationCode","clamp","squaredSegmentDistance","squaredDistance","solveLinearSystem","maxRow","maxEl","r","absValue","j","coef","k","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","factor","ceil","padNumber","number","precision","numberString","decimal","compareVersions","v1","v2","s1","split","s2","n1","n2","closestOnCircle","circle","getRadius","sqrt","closestOnSegment","segment","along","degreesToStringHDMS","hemispheres","fractionDigits","normalizedDegrees","deg","sec","hdms","charAt","format","template","coordinate1","coordinate2","cosAngle","sinAngle","coord1","coord2","distance","squaredDistanceToSegment","toStringXY","worldsAway","getWorldsAway","sourceExtentWidth","DEFAULT_RADIUS","getDistance","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","getLengthInternal","getAreaInternal","bearing","lon1","dByR","lat","asin","levels","info","warn","none","level","args","console","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","pointResolution","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","jj","addCoordinateTransforms","forward","inverse","sourceProj","destProj","toLonLat","lonLat","lon","equivalent","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","transformExtent","userProjection","setUserProjection","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","sourceMetersPerUnit","userMetersPerUnit","fromUserResolution","destMetersPerUnit","createSafeCoordinateTransform","coord","transformed","sourceExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","transform2D","anchor","anchorX","anchorY","tmpTransform","Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getSimplifiedGeometry","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","getClosestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","simplify","getType","intersectsExtent","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","SimpleGeometry","layout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","setLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","multiArrayMaxSquaredDelta","endss","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","radialDistance","snap","quantize","quantizeArray","quantizeMultiArray","simplifiedEndss","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","linearRing","twiceArea","linearRings","linearRingss","LinearRing","maxDelta_","maxDeltaRevision_","linearRingArea","Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","ret","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","reverseCoordinates","orientLinearRingsArray","inflateEnds","startOrientation","prevEndIndex","orientation","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","linearRingsArea","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","circular","sphereRadius","sphereOffset","fromExtent","fromCircle","sides","arrayLength","makeRegular","startAngle","GeolocationErrorType","GeolocationError","message","ImageState","IDLE","LOADING","LOADED","ERROR","EMPTY","ImageWrapper","pixelRatio","stateOrLoader","pixelRatio_","image_","getImage","getPixelRatio","getResolution","requestResolution","HTMLImageElement","finally","setImage","setResolution","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","src","handleLoad","unlisten","handleError","decodeFallback","complete","ImageCanvas","canvas_","handleLoad_","ImageTile","crossOrigin","tileLoadFunction","crossOrigin_","src_","unlisten_","tileLoadFunction_","unlistenImage_","handleImageError_","ctx","fillStyle","fillRect","getBlankImage","handleImageLoad_","naturalWidth","naturalHeight","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","Date","now","lastIndex","firstIndex","duration","getAngle","LayerProperty","BaseLayer","background_","background","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getBackground","getClassName","getLayerState","managed","layer","getZIndex","getOpacity","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","RenderEventType","ViewHint","ViewProperty","CENTER","RESOLUTION","ROTATION","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","result","createSnapToResolutions","resolutions","cappedMaxRes","capped","z","createSnapToPower","power","minZoomLevel","cappedZoomLevel","zoomLevel","createMinMaxResolution","createSnapToN","theta","createSnapToZero","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","padding_","padding","minZoom_","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","setRotation","setCenterInternal","zoom","setZoom","oldPadding","getCenterInternal","newPadding","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","animateInternal","animationCount","animationCallback","series","animation","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","targetRotation","isNoopAnimation","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","rotateCoordinate","addCoordinate","currentResolution","w","h","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","constrainResolution","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","viewState","nearest","baseLevel","fit","geometryOrExtent","polygonFromExtent","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","position","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","returnValue","setTimeout","smoothExtentConstraint","constrainOnlyCenter","centerNone","smoothResolutionConstraint","projExtent","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","enableRotation","constrainRotation","rotationNone","coordinatesEqual","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","render","setMap","handleSourcePropertyChange_","setSource","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","isVisible","view","frameState","getMapInternal","layerState","getView","layerStatesArray","getLayerGroup","find","layerExtent","inView","getAttributions","attributions","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","getDeclutter","renderDeclutter","renderDeferred","setMapInternal","some","arrayLayerState","createRenderer","hasRenderer","quickselect","left","quickselectStep","defaultCompare","s","sd","swap","RBush$1","maxEntries","_maxEntries","_minEntries","all","_all","search","bbox","toBBox","nodesToSearch","child","childBBox","leaf","contains","collides","insert","_build","_splitRoot","tmpNode","_insert","createNode","equalsFn","path","indexes","goingUp","findItem","_condense","compareMinX","compareMinY","toJSON","fromJSON","items","N","M","calcBBox","N2","N1","multiSelect","right2","right3","_chooseSubtree","targetNode","minArea","minEnlargement","bboxArea","enlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareNodeMinX","compareNodeMinY","_allDistMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","p","destNode","hasArea","toSize","ImageStyle","opacity_","rotateWithView_","rotateWithView","rotation_","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getHitDetectionImage","getImageState","getImageSize","getOrigin","setDisplacement","setRotateWithView","setScale","listenImageChange","unlistenImageChange","ready","rgb","channel","alias","xyz","A","C","D50","D55","D65","D75","F2","F7","F11","E","whitepoint","_xyz","white","g","xyz$1","luv","arg","o","_u","_v","u","v","xn","yn","zn","vn","yr","lchuv","hr","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","whitesmoke","yellow","yellowgreen","baseHues","hsl","t1","t2","t3","rgba","color","raw","Number","parsed","cstr","space","parts","alpha","names","base","exec","dims","trim","parseFloat","endsWith","match","parse","asString","MAX_CACHE_SIZE","cacheSize","withAlpha","rgbaToLcha","lchaToRgba","fromString","parseRgba","normalize","asArray","isStringColor","_","IconImageCache","cache_","patternCache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","getCacheKey","getPattern","pattern","createPattern","setSize","maxCacheSize","shared","taintedTestContext","IconImage","imageState","hitDetectionImage_","color_","imageState_","tainted_","ready_","initializeImage_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","globalCompositeOperation","onChange","cacheKey","iconImageCache","asColorLike","iconCache","canvasPattern","patternCanvasContext","getIconImage","asCanvasPattern","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","lineHeight","weight","variant","families","family","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","checkedFonts","measureFont","measureContext","textHeights","registerFont","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","border","display","body","measureAndCacheTextWidth","reduce","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","originX","originY","save","globalAlpha","contextInstructions","label","executeLabelInstructions","restore","RegularShape","canvases_","hitDetectionCanvas_","fill_","fill","origin_","points","radius_","radius2_","radius2","stroke_","stroke","renderOptions_","loading","getFill","getPoints","getRadius2","getStroke","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineCap","lineDash","lineDashOffset","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","maxRadius","createPath_","setLineDash","drawHitDetectionCanvas_","arc","step","angle0","radiusC","lineTo","closePath","CircleStyle","setRadius","Fill","patternImage_","setColor","patternImage","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometry_","geometryFunction_","defaultGeometryFunction","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setText","feature","toFunction","styleFunction","defaultStyles","createDefaultStyle","createEditingStyle","concat","calculateScale","wantedWidth","wantedHeight","Icon","anchor_","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","iconImage_","offset_","offsetOrigin_","offsetOrigin","initialOptions_","onload","imageSize","setAnchor","iconImageSize","Text","font_","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","numTypes","NoneType","BooleanType","NumberType","StringType","ColorType","NumberArrayType","SizeType","AnyType","typeNames","namedTypes","typeName","namedType","includesType","broad","specific","overlapsType","oneType","otherType","isType","expected","LiteralExpression","CallExpression","operator","newParsingContext","variables","Set","featureId","geometryType","encoded","typeHint","parser","parsers","parseCallExpression","Ops","Get","Var","Concat","GeometryType","Any","All","Not","Resolution","Zoom","Time","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","Between","Interpolate","Coalesce","Case","In","Color","Id","Band","Palette","ToString","createParser","getTypeFromHint","withArgsCount","firstArg","parsedArgs","varName","initialValue","withNoArgs","parseArgsOfType","narrowArgsType","outputType","withEvenArgs","argsCount","inputType","fallback","expectedInputType","JSON","stringify","interpolationType","interpolation","stop","operation","argCount","condition","needleType","colors","parsedColors","minArgs","maxArgs","argType","expression","gotType","expectedType","sameType","returnType","argValidators","actualType","computeGeometryType","substring","getGeometries","newEvaluationContext","buildExpression","actual","compileExpression","colorValue","compileAssertionExpression","nameExpression","compileAccessorExpression","op","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileCaseExpression","compileMatchExpression","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","compileInterpolateExpression","compileConvertExpression","input1","output1","input2","output2","rgba1","rgba2","lcha1","lcha2","deltaHue","always","rulesToStyleFunction","rules","parsingContext","evaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","buildStyle","nonNullCount","compiledRules","rule","styleLength","someMatched","filterEvaluator","else","styleEvaluator","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","prefix","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","numberArrayEvaluator","optionalDeclutterMode","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","optionalNumber","optionalSize","icon","buildIcon","pointsName","radiusName","requireNumber","shape","buildShape","evaluateRadius","Circle","buildCircle","buildImage","evaluateZIndex","empty","evaluateColor","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","colorLikeEvaluator","patternEvaluator","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","requireSize","requireSizeLike","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","declutterGroup","RBush","setRenderOrder","renderOrder","styleLike","toStyleLike","toStyleFunction","MapRenderer","map_","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","layerFilter","thisArg2","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","getWrapX","order","distanceSq","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","expireIconCache","RenderEvent","inversePixelTransform","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","container","getViewport","firstChild","children_","renderedVisible_","renderedLayerStates","previousElement","layerIndex","sourceState","GroupEvent","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","MapEvent","MapBrowserEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","MapBrowserEventType","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","PointerEventType","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","clearTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","MapEventType","MapProperty","DROP","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","Control","pointerEvents","target_","setTarget","getOverlayContainerStopEvent","mapEvent","getElementById","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","visibleAttributions","from","getAllLayers","flatMap","getAttributionsCollapsible","setCollapsible","updateElement_","attribution","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","resetNorth_","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","defaults","controls","zoomOptions","rotateOptions","attributionOptions","InteractionProperty","Interaction","setActive","getActive","mapBrowserEvent","active","pan","zoomByDelta","DoubleClickZoom","delta_","stopEvent","browserEvent","shiftKey","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","centroid","conditions","pass","altKeyOnly","altKey","metaKey","ctrlKey","altShiftKeysOnly","focus","targetElement","getTargetElement","activeElement","focusWithTabindex","hasAttribute","mouseActionButton","never","singleClick","noModifierKeys","platformModifierKey","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","onFocusOnly","noKinetic_","centroidFromPointers","scaleCoordinate","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","DragRotate","lastAngle_","RenderBox","startPixel_","endPixel_","render_","startPixel","endPixel","px","top","getOverlayContainer","setPixels","createOrUpdateGeometry","DragBoxEventType","DragBoxEvent","DragBox","box_","minArea_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","DragZoom","out_","out","Key","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","mapUnitsDelta","KeyboardZoom","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","interactions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","removeLayerMapProperty","setLayerMapProperty","Map","optionsInternal","keyboardEventTarget","layerGroup","overlays","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","defaultControls","defaultInteractions","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","getPixelFromCoordinate","viewCoordinate","ownerDocument","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","handlePostRender","tileQueue","viewHints","lowOnFrameBudget","unobserve","ShadowRoot","host","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","usedTiles","mapId","renderTargets","nextExtent","equalsExtent","setLayerGroup","oldLayerGroup","computedStyle","getClientRects","oldSize","Overlay","insertFirst","autoPan","transform_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","performAutoPan","panIntoView","panIntoViewOptions","mapRect","getRect","overlayRect","myMargin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","box","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","posX","posY","getOptions","LRUCache","highWaterMark","count_","entries_","oldest_","newest_","expireCache","keep","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","getKeyZXY","fromKey","hash","withinExtentAndZ","tileRange","getFullTileRange","TileCache","pruneExceptNewestZ","TileRange","containsTileRange","originalXHR","withCredentials","loadFeaturesXhr","url","success","failure","xhr","XMLHttpRequest","open","responseType","status","responseText","responseXML","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","addFeatures","jsonp","errback","callbackParam","script","cleanup","async","timer","head","ResponseError","response","ClientError","client","getJSON","setRequestHeader","resolveUrl","URL","href","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","CanvasImmediateRenderer","viewRotation","userTransform","context_","transformRotation_","viewRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","drawRings_","beginPath","setTransform","geometries","getGeometriesArray","flatMidpoint","getFlatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","textState","contextTextState","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textOffsetX","textOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","textTextBaseline","acc","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","hasText","imageReplay","getBuilder","textReplay","LineString","lineStringReplay","polygonReplay","MultiPoint","hasImage","MultiLineString","MultiPolygon","GeometryCollection","replayGroup","declutterBuilderGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","loadingPromises","renderGeometry","renderFeatureInternal","getVectorContext","CanvasRenderingContext2D","canvasPixelRatio","multiplyTransform","brokenDiagonalRendering_","drawTestTriangle","u1","u2","clip","verifyBrokenDiagonalRendering","calculateSourceResolution","targetProj","targetMetersPerUnit","compensationFactor","calculateSourceExtentResolution","targetExtent","triangulation","sources","gutter","renderEdges","drawSingle","clipExtent","imageSmoothingEnabled","pixelRound","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","rect","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","isBrokenDiagonalRendering","steps","ud","vd","fromResolutionLike","ERROR_THRESHOLD","Triangulation","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","clipExtent_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","TileEventType","Source","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","getInterpolate","refresh","setAttributions","attributionLike","tmpTileCoord","TileGrid","origins","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","getTileCoordForCoordAndZ","getTileCoordResolution","opt_direction","tileCoordIntersectsViewport","viewport","fullTileRanges","WMTSTileGrid","matrixIds_","matrixIds","getMatrixId","getMatrixIds","createFromCapabilitiesMatrixSet","matrixSet","matrixLimits","matrixIdsPropName","identifierPropName","scaleDenominatorPropName","topLeftCornerPropName","switchOriginXY","substr","elt","matrixAvailable","elt_ml","tileWidth","tileHeight","getForProjection","createForProjection","extentFromProjection","createForExtent","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","half","TileSource","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","tmpSize","tileOptions","zDirection","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","covered","getGutterForProjection","setKey","getOpaque","getTileGridForProjection","getTile","getTileGrid","getTilePixelRatio","getTilePixelSize","scaleSize","getTileCoordForTileUrlFunction","updateCacheSize","tileCount","useTile","TileSourceEvent","createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","range","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","nullTileUrlFunction","expandUrl","urls","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","uid","tileState","setTileLoadFunction","setTileUrlFunction","TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","getTileInternal","newTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","quadKey","digits","mask","XYZ","rbush_","RBush_","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","rbush","setCenterAndRadius","getRadiusSquared_","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","cloneGeometries","getGeometriesArrayRecursive","geometriesArray","simplifiedGeometries","simplified","setGeometries","setGeometriesArray","interpolatePoint","cumulativeLengths","lineStringCoordinateAtM","extrapolate","lo","hi","m0","lineStringsCoordinateAtM","lineStringLength","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","getCoordinateAtM","getCoordinateAt","lineStrings","appendLineString","multiLineString","getLineString","getLineStrings","midpoints","appendPoint","multiPoint","getPoint","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","thisEndss","appendPolygon","newEndss","multiPolygon","linearRingssArea","linearRingssCenter","getInteriorPoints","getPolygon","prevEnds","getPolygons","lastEnds","RenderFeature","type_","flatCoordinates_","flatMidpoints_","properties_","stride_","simplifiedGeometry_","midpoint","enableSimplifyTransformed","toGeometry","VectorEventType","VectorSourceEvent","VectorSource","format_","overlaps_","overlaps","url_","strategy_","strategy","allStrategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","indexedFeature","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removeFeatures","removedFeatures","removedFeature","featureChangeKeys","idString","removed","setLoader","ReprojDataTile","reprojData_","reprojError_","reprojSize_","sourceTileGridExtent","dataSources","tileData","arrayData","pixelSize","isFloat","pixelCount","DataType","tileDataR","bytesPerElement","BYTES_PER_ELEMENT","bytesPerPixel","bytesPerRow","byteLength","bandCount","packedLength","packedData","dataIndex","rowOffset","colCount","rowIndex","colIndex","dataType","targetWidth","targetHeight","dataR","dataU","reproj","dataSource","createImageData","putImageData","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","DECIMALS","ImageSourceEventType","ImageSourceEvent","ImageSource","reprojectedImage_","reprojectedRevision_","wantedExtent_","wantedResolution_","static_","wantedProjection_","setResolutions","findNearestResolution","getImageInternal","requestExtent","getRequestExtent","handleImageChange","defaultImageLoadFunction","imageResolution","appendParams","uri","params","keyParams","encodeURIComponent","qs","getRequestUrl","baseUrl","srid","createLoader","hidpi","F","FORMAT","TRANSPARENT","imageExtent","resolutionX","resolutionY","DEFAULT_VERSION","GETFEATUREINFO_IMAGE_SIZE","v13","getImageSrc","serverType","REQUEST","dpi","getRequestParams","request","SERVICE","VERSION","STYLES","getFeatureInfoUrl","projectionObj","baseParams","QUERY_LAYERS","INFO_FORMAT","getLegendUrl","LAYERS","mpu","knownMapMediaTypes","knownVectorMediaTypes","appendCollectionsQueryParam","tileUrlTemplate","collections","pathname","logError","encodedCollections","searchParams","append","decodeURIComponent","getMapTileUrlTemplate","links","mediaType","fallbackUrlTemplate","link","rel","startsWith","getVectorTileUrlTemplate","supportedMediaTypes","hrefLookup","supportedMediaType","parseTileMatrixSet","sourceInfo","tileMatrixSet","tileMatrixSetLimits","crs","orderedAxes","backwards","matrices","tileMatrices","matrixLookup","matrix","limitLookup","limit","tileMatrix","pointOfOrigin","cellSize","matrixWidth","matrixHeight","tileMapWidth","minTileCol","maxTileCol","tileMapHeight","cornerOfOrigin","minTileRow","maxTileRow","intersectExtents","grid","urlTemplate","urlFunction","upsideDown","localContext","tileCol","tileRow","getTileSetInfo","tileSet","tileMatrixSetLink","tileMatrixSetDefinition","parseTileSetMetadata","ATTRIBUTION","BaseImageLayer","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","loadedTileCallback","tiles","createLoadedTileFinder","getLayer","renderIfReadyAndVisible","loadImage","ZIndexContext","instructions_","Proxy","pushMethodArgs_","pushFunction","draw","instructionsAtIndex","instructionAtIndex","pixelContext","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","deferredContext_","containerReused","pixelContext_","col","row","useContainer","backgroundColor","layerClassName","firstElementChild","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","prepareContainer","canvasTransform","toTransformString","dispatchRenderEvent_","preRender","postRender","renderDeferredInternal","getRenderContext","getRenderTransform","CanvasImageLayerRenderer","imageLayer","viewResolution","imageSource","renderedExtent","imageMapWidth","imageMapHeight","imageResolutionX","imageResolutionY","viewCenter","clipped","dw","dh","ImageLayer","TileProperty","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileOrigin","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","clips","clipZs","currentClip","zs","reverse","currentZ","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","postRenderFunction","tileCallback","TileLayer","hasImageData","ImageData","newImageData","createMinion","workerHasImageData","newWorkerImageData","buffers","meta","imageOps","numBuffers","numBytes","images","arrays","pixels","createWorker","config","onMessage","lines","lib","worker","Worker","Blob","Buffer","createObjectURL","Processor","threads","_imageOps","workers","_onWorkerMessage","minion","terminated","postMessage","terminate","createFauxWorker","_workers","_queue","_maxQueueLength","queue","_running","_dataLookup","_job","process","inputs","_enqueue","_dispatch","job","slices","_resolveJob","RasterEventType","RasterSourceEvent","RasterSource","processor_","operationType_","operationType","threads_","layers_","createLayer","createLayers","useResolutions_","processSources_","requestedFrameState_","renderedImageCanvas_","renderedRevision_","iMax","sourceOrLayer","attributionGetter","sourceAttribution","setOperation","updateFrameState_","allSourcesReady_","imageDatas","onWorkerComplete_","layerOrSource","LayerConfig","stamen_terrain","stamen_terrain_background","stamen_terrain_labels","stamen_terrain_lines","stamen_toner_background","stamen_toner","stamen_toner_labels","stamen_toner_lines","stamen_toner_lite","stamen_watercolor","alidade_smooth","alidade_smooth_dark","alidade_satellite","outdoors","osm_bright","ProviderConfig","retina","CustomTile","preemptive","preemptive_","grid_","keys_","jsonp_","xRelative","yRelative","forDataAtCoordinate","loadInternal_","handleError_","json","requestJSONP","onXHRLoad_","onXHRError_","XML_SCHEMA_INSTANCE_URI","createElementNS","namespaceURI","qualifiedName","getDocument","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","nextSibling","isDocument","getAttributeNS","xml","DOMParser","parseFromString","makeArrayExtender","valueReader","objectStack","makeArrayPusher","makeReplacer","makeObjectPropertyPusher","localName","makeObjectPropertySetter","makeChildAppender","nodeWriter","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","fixedNodeName","fixedNamespaceURI","newNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","structureNS","parseNode","parsersNS","nextElementSibling","pushParseAndPop","pushSerializeAndPop","xmlSerializer_","document_","getXMLSerializer","XMLSerializer","implementation","createDocument","fromTransform","mat4","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","CanvasInstruction","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillPatternScale","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasImageBuilder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","filteredFlatCoordinates","sharedData","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","CanvasTextBuilder","labels_","fillStates","strokeStates","textStates","textKey_","fillKey_","strokeKey_","geometryWidths","beg","saveTextStates_","p0","p1","p2","p3","flatOffset","oo","cc","chunk","chunkBegin","drawChars_","strokeKey","textKey","fillKey","baseline","BATCH_CONSTRUCTORS","PolygonBuilder","Default","Builder","ImageBuilder","LineStringBuilder","TextBuilder","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","line","Executor","deferredRendering","alignAndScaleFill_","coordinateCache_","renderedTransform_","widths_","zIndexContext_","getZIndexContext","createLabel","textIsArray","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","scaledCanvasSize","imageOrLabel","dimensions","strokePadding","alignAndScale","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","declutterTree","zIndexContext","transformSetFromArray","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","widthIndex","imageArgs","imageDeclutterMode","imageDeclutterBox","renderImage","renderText","imageDeclutter","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","drawChars","part","execute","executeHitDetection","ALL","DECLUTTER","NON_DECLUTTER","ExecutorGroup","allInstructions","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","renderedContext_","deferredZIndexContexts_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","getPixelIndexArray","idx","executor","targetContext","builderTypes","maxBuilderTypes","requireClip","getDeferredZIndexContexts","getRenderedContext","deferredZIndexContexts","circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","HIT_DETECT_RESOLUTION","createHitDetectionImageData","userExtent","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","imgContext","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","clipped_","renderedFeatures_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedPixelRatio_","renderedRenderOrder_","renderedFrameDeclutter_","replayGroup_","replayGroupChanged","clipping","targetContext_","renderWorlds","executorGroup","declutterable","vectorSource","endWorld","world","setDrawContext_","resetDrawContext_","getSquaredRenderTolerance","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","loadExtents","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","dirty","replayGroupInstructions","CanvasVectorImageLayerRenderer","vectorRenderer_","layerImageRatio_","getImageRatio","coordinateToVectorPixelTransform_","renderedPixelToCoordinateTransform_","vectorPixel","vectorRenderer","imageLayerState","imageFrameState","emptyImage","registered","register","proj4","projCodes","defs","def","projName","axis","to_meter","code1","proj1","code2","proj2","epsgLookup","fetch","ok","VectorLayer","geoA","geoB","geoStack","fractionStack","fractions","geoM","fracA","fracB","fracM","maxIterations","meridian","frac","parallel","lon2","DEFAULT_STROKE_STYLE","INTERVALS","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","DYNAMIC_DRAW","CONTEXT_IDS","BufferUsage","WebGLArrayBuffer","usage","usage_","ofSize","getArrayClassForType","fromArray","fromArrayBuffer","getUsage","Uint32Array","ContextEventType","WebGLPostProcessingPass","gl_","webGlContext","gl","scaleRatio_","scaleRatio","renderTargetTexture_","createTexture","renderTargetTextureSize_","frameBuffer_","createFramebuffer","depthBuffer_","createRenderbuffer","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","renderTargetProgram_","createProgram","attachShader","linkProgram","renderTargetVerticesBuffer_","createBuffer","bindBuffer","bufferData","STATIC_DRAW","renderTargetAttribLocation_","getAttribLocation","renderTargetUniformLocation_","getUniformLocation","renderTargetOpacityLocation_","renderTargetTextureLocation_","uniforms_","uniforms","location","getGL","init","textureSize","drawingBufferWidth","drawingBufferHeight","bindFramebuffer","FRAMEBUFFER","getFrameBuffer","bindRenderbuffer","RENDERBUFFER","getDepthBuffer","internalFormat","RGBA","UNSIGNED_BYTE","bindTexture","TEXTURE_2D","texImage2D","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","framebufferTexture2D","COLOR_ATTACHMENT0","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","nextPass","preCompose","postCompose","activeTexture","TEXTURE0","canvasId","attributes","getContextAttributes","preserveDrawingBuffer","clearColor","clearDepth","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","DEPTH_TEST","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform2f","uniform1i","uniform1f","applyUniforms","drawArrays","TRIANGLES","textureSlot","uniform","texture","uniform3f","uniform4f","DefaultUniform","AttributeType","UNSIGNED_SHORT","UNSIGNED_INT","canvasCache","getSharedCanvasCacheKey","uniqueCanvasCacheKeyCount","getOrCreateContext","cacheItem","antialias","users","WebGLHelper","boundHandleWebGLContextLost_","handleWebGLContextLost","boundHandleWebGLContextRestored_","handleWebGLContextRestored","canvasCacheKey_","canvasCacheKey","getUniqueCanvasCacheKey","bufferCache_","extensionCache_","currentProgram_","needsToBeRecreated_","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","uniformLocationsByProgram_","attribLocationsByProgram_","setUniforms","postProcessPasses_","postProcesses","shaderCompileErrors_","addUniforms","canvasCacheKeyMatches","getExtension","bufferKey","bufferCache","webGlBuffer","flushBufferData","deleteBuffer","buf","bufferCacheEntry","isContextLost","loseContext","prepareDraw","disableAlphaBlend","enableDepth","getCanvas","depthRange","ZERO","depthFunc","LEQUAL","slot","uniformName","prepareDrawToRenderTarget","renderTarget","getFramebuffer","getDepthbuffer","getTexture","drawElements","elementType","numItems","offsetInBytes","finalizeDraw","applyFrameState","setUniformFloatValue","setUniformFloatVec2","applyHitDetectionUniform","loc","WebGLTexture","prevValue","imageReady","setUniformMatrixValue","program","shader","getProgram","fragmentShaderSource","vertexShaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","getProgramParameter","LINK_STATUS","getProgramInfoLog","programUid","getAttributeLocation","makeProjectionTransform","uniform2fv","setUniformFloatVec4","uniform4fv","uniformMatrix4fv","enableAttributeArray_","attribName","enableAttributes","attr","getByteSizeFromType","computeAttributesStride","needsToBeRecreated","Uint16Array","WebGLLayerRenderer","inversePixelTransform_","postProcesses_","helper","removeHelper","dispatchPreComposeEvent","dispatchPostComposeEvent","incrementGroup","groupNumber","afterHelperCreated","prepareFrameInternal","tmpArray4","WebGLRenderTarget","helper_","texture_","framebuffer_","depthbuffer_","dataCacheDirty_","updateSize_","clearCachedData","readAll","readPixels","readPixel","WebGLWorkerMessageType","earcut","holeIndices","dim","invSize","hasHoles","outerLen","outerNode","linkedList","triangles","next","list","steiner","getLeftmost","compareX","eliminateHole","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","filterPoints","again","ear","zOrder","prevZ","nextZ","q","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","ax","bx","cx","ay","by","cy","pointInTriangle","minZ","maxZ","locallyInside","isValidDiagonal","splitPolygon","hole","bridge","hx","hy","qx","mx","my","tanMin","sectorContainsSector","findHoleBridge","bridgeReverse","leftmost","py","intersectsPolygon","inside","middleInside","q1","q2","o1","sign","o2","o3","o4","onSegment","num","an","bp","sum","earcutModule","exports","default","deviation","polygonArea","trianglesArea","flatten","holes","holeIndex","colorEncodeId","radix","divide","WebGLPointsLayerRenderer","projectionMatrixTransform","sourceRevision_","verticesBuffer_","indicesBuffer_","vertexShader_","fragmentShader_","program_","hitDetectionEnabled_","hitDetectionEnabled","customAttributes","attribute","currentTransform_","renderTransform_","invertRenderTransform_","renderInstructions_","hitRenderTarget_","lastSentId","worker_","createWebGLWorker","received","projectionTransform","vertexBuffer","indexBuffer","makeInverseTransform","renderInstructions","featureCache_","featureCount_","sourceListenKeys_","handleSourceFeatureAdded_","handleSourceFeatureChanged_","handleSourceFeatureDelete_","handleSourceFeatureClear_","startWorld","getWorldParameters","viewNotMoving","sourceChanged","BaseVector","rebuildBuffers_","singleInstructionLength","totalSize","featureCache","tmpCoords","tmpColor","featureUid","userCoords","hitColor","customAttributesSize","mult","colorDecodeId","forHitDetection","translateTransform","renderCount","PaletteTexture","NEAREST","TEXTURE_MAG_FILTER","deleteTexture","Uniforms","TILE_TRANSFORM","TRANSITION_ALPHA","DEPTH","RENDER_EXTENT","PATTERN_ORIGIN","ZOOM","GLOBAL_ALPHA","PROJECTION_MATRIX","SCREEN_TO_WORLD_MATRIX","TILE_TEXTURE_ARRAY","TEXTURE_PIXEL_WIDTH","TEXTURE_PIXEL_HEIGHT","TEXTURE_RESOLUTION","TEXTURE_ORIGIN_X","TEXTURE_ORIGIN_Y","numberToGlsl","arrayToGlsl","colorToGlsl","sizeToGlsl","stringToFloatMap","stringToFloatCounter","getStringNumberEquivalent","string","stringToGlsl","uniformNameForVariable","variableName","GET_BAND_VALUE_FUNC","PALETTE_TEXTURE_ARRAY","createCompiler","compile","compilers","propName","inFragmentShader","compiledArgs","firstValue","secondValue","exponent","stop1","stop2","funcName","functions","computeOperatorFunctionName","tests","band","xOffset","yOffset","ifBlocks","colorIndex","bandIndex","numColors","palette","paletteTextures","paletteName","paletteTexture","compiler","COMMON_HEADER","DEFAULT_STYLE","ShaderBuilder","attributes_","varyings_","hasSymbol_","symbolSizeExpression_","symbolRotationExpression_","symbolOffsetExpression_","symbolColorExpression_","texCoordExpression_","discardExpression_","symbolRotateWithView_","hasStroke_","strokeWidthExpression_","strokeColorExpression_","strokeOffsetExpression_","strokeCapExpression_","strokeJoinExpression_","strokeMiterLimitExpression_","strokeDistanceFieldExpression_","hasFill_","fillColorExpression_","vertexShaderFunctions_","fragmentShaderFunctions_","addUniform","addAttribute","addVarying","setSymbolSizeExpression","getSymbolSizeExpression","setSymbolRotationExpression","setSymbolOffsetExpression","getSymbolOffsetExpression","setSymbolColorExpression","getSymbolColorExpression","setTextureCoordinateExpression","setFragmentDiscardExpression","getFragmentDiscardExpression","setSymbolRotateWithView","setStrokeWidthExpression","setStrokeColorExpression","getStrokeColorExpression","setStrokeOffsetExpression","setStrokeCapExpression","setStrokeJoinExpression","setStrokeMiterLimitExpression","setStrokeDistanceFieldExpression","setFillColorExpression","getFillColorExpression","addVertexShaderFunction","addFragmentShaderFunction","getSymbolVertexShader","varying","getSymbolFragmentShader","getStrokeVertexShader","getStrokeFragmentShader","getFillVertexShader","getFillFragmentShader","DEFAULT_GRADIENT","DragAndDropEventType","DragAndDropEvent","file","DrawEventType","DrawEvent","getSquaredDistance","getCoordinate","getCumulativeSquaredDistance","endIndex","lowIndex","highIndex","lowWholeIndex","highWholeIndex","interpolateCoordinate","appendGeometryTraceTargets","targets","appendTraceTarget","polys","sharedUpdateInfo","ring","getPointSegmentRelationship","sharedRel","getDefaultStyleFunction","ExtentEventType","ExtentEvent","getDefaultExtentStyleFunction","getDefaultPointerStyleFunction","getPointHandler","fixedPoint","getEdgeHandler","fixedP1","fixedP2","readNumber","writeNumber","to5","differentNumber","tempSegment","ModifyEventType","ModifyEvent","compareIndexes","projectedDistanceToSegmentDataSquared","pointCoordinates","segmentData","distanceToCenterSquared","squaredCoordinateDistance","distanceToCircumference","closestOnSegmentData","SelectEventType","SelectEvent","selected","deselected","originalFeatureStyles","Select","boundAddFeature_","addFeature_","boundRemoveFeature_","removeFeature_","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","features_","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","getHitTolerance","setHitTolerance","restorePreviousStyle_","applySelectedStyle_","removeFeatureLayerAssociation_","SnapEventType","SnapEvent","vertex","vertexPixel","getFeatureFromEvent","TranslateEventType","TranslateEvent","startCoordinate","flipXY","destOffset","FeatureFormat","defaultFeatureProjection","featureClass","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","write","equivalentProjection","fromProjection","toProjection","transformExtentWithOptions","GeometryConstructor","createRenderFeature","orientFlatCoordinates","createGeometry","XMLFeature","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","readBoolean","readBooleanString","readDateTime","dateTime","readDecimal","readDecimalString","readPositiveInteger","readNonNegativeIntegerString","readString","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","writeDecimalTextNode","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","AUTHOR_PARSERS","email","getAttribute","domain","parseLink","METADATA_PARSERS","desc","author","copyright","COPYRIGHT_PARSERS","keywords","bounds","minlat","minlon","maxlat","maxlon","extensions","parseExtensions","year","license","GPX_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","TRK_SEQUENCE","TRK_SERIALIZERS","writeWptType","RTE_PARSERS","cmt","rtept","RTEPT_PARSERS","rteValues","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","writeLink","RTEPT_TYPE_SEQUENCE","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","GEOMETRY_TYPE_TO_NODENAME","GPX_NODE_FACTORY","layoutOptions","hasZ","hasM","applyLayoutOptions","setAttributeNS","JSONFeature","readFeatureFromObject","getObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","writeFeatureObject","writeFeaturesObject","writeGeometryObject","readGeometryInternal","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","TextFeature","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","B_RECORD_RE","H_RECORD_RE","HFDTE_RECORD_RE","HFDTEDATE_RECORD_RE","NEWLINE_RE","GX_NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","insetPixels","PLACEMARK_PARSERS","ExtendedData","extendedDataParser","Region","regionParser","MultiGeometry","readMultiGeometry","readLineString","readLinearRing","readPoint","readPolygon","readStyle","StyleMap","styleMapValue","readStyleMapValue","placemarkObject","address","description","phoneNumber","styleUrl","readStyleURL","visibility","MultiTrack","GX_MULTITRACK_GEOMETRY_PARSERS","Track","readGxTrack","NETWORK_LINK_PARSERS","Link","readURI","CAMERA_PARSERS","Altitude","Longitude","Latitude","Tilt","AltitudeMode","Heading","Roll","REGION_PARSERS","LatLonAltBox","LAT_LON_ALT_BOX_PARSERS","regionObject","Lod","LOD_PARSERS","lodObject","KML_SEQUENCE","KML_SERIALIZERS","Document","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","Placemark","writePlacemark","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_FILL_STYLE","DEFAULT_NO_IMAGE_STYLE","DEFAULT_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","DEFAULT_TEXT_STYLE","TEXTAREA","DEFAULT_STYLE_ARRAY","scaleForSize","defaultIconUrlFunction","findStyle","styleValue","defaultStyle","sharedStyles","readColor","hexColor","readFlatCoordinates","re","baseURI","readScale","STYLE_MAP_PARSERS","Pair","pairObject","PAIR_PARSERS","ICON_STYLE_PARSERS","iconObject","ICON_PARSERS","heading","hotSpot","xunits","yunits","LABEL_STYLE_PARSERS","LINE_STYLE_PARSERS","POLY_STYLE_PARSERS","outline","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","GX_TRACK_PARSERS","when","whens","gxTrackObject","GEOMETRY_FLAT_COORDINATES_PARSERS","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","extrude","tessellate","altitudeMode","MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","setCommonGeometryProperties","FLAT_LINEAR_RINGS_PARSERS","innerBoundaryIs","innerBoundaryFlatLinearRings","INNER_BOUNDARY_IS_PARSERS","outerBoundaryIs","flatLinearRing","OUTER_BOUNDARY_IS_PARSERS","flatLinearRings","STYLE_PARSERS","IconStyle","styleObject","IconObject","drawIcon","iconUrlFunction_","resizeScale","LabelStyle","LineStyle","PolyStyle","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DATA_PARSERS","displayName","EXTENDED_DATA_PARSERS","Data","featureObject","SchemaData","SCHEMA_DATA_PARSERS","SimpleData","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","writeColorTextNode","abgr","hex","EXTENDEDDATA_NODE_SERIALIZERS","pair","DATA_NODE_FACTORY","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","vec2","writeScaleTextNode","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","factory","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","namesAndValues","pointStyles","lineStyles","polyStyles","STYLE_SEQUENCE","STYLE_SERIALIZERS","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","styleArray","writeStyles_","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","POLY_STYLE_SEQUENCE","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","outerRing","POLY_STYLE_SERIALIZERS","iconProperties","ieee754","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","LN2","pbf","Pbf","require$$0","ArrayBuffer","isView","Varint","Fixed64","Bytes","Fixed32","SHIFT_LEFT_32","SHIFT_RIGHT_32","utf8TextDecoder","TextDecoder","readPackedEnd","readVarint","toNum","isSigned","makeRoomForExtraLength","startPos","extraLen","realloc","writePackedVarint","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","readInt32","destroy","readFields","readField","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","read","readDouble","readVarintRemainder","readVarint64","readSVarint","subarray","readUtf8TextDecoder","str","b3","b0","bytesPerSequence","readUtf8","readBytes","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","writeUtf8","writeBytes","writeRawMessage","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","layersPBFReader","layerPBFReader","version","featurePBFReader","readRawFeature","WAY_PARSERS","nd","ndrefs","readTag","PARSERS","nodes","tags","NODE_PARSERS","way","ways","XML","readFromDocument","readFromNode","NAMESPACE_URI","readHref","ServiceIdentification","SERVICE_IDENTIFICATION_PARSERS","ServiceProvider","SERVICE_PROVIDER_PARSERS","OperationsMetadata","OPERATIONS_METADATA_PARSERS","OWS","owsObject","ADDRESS_PARSERS","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","ALLOWED_VALUES_PARSERS","Value","CONSTRAINT_PARSERS","AllowedValues","CONTACT_INFO_PARSERS","Phone","PHONE_PARSERS","Address","DCP_PARSERS","HTTP","HTTP_PARSERS","REQUEST_METHOD_PARSERS","Post","OPERATION_PARSERS","DCP","Operation","Voice","Facsimile","Constraint","SERVICE_CONTACT_PARSERS","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","encodeDeltas","numbers","lastNumbers","encodeFloats","decodeDeltas","decodeFloats","encodeSignedIntegers","decodeSignedIntegers","encodeUnsignedIntegers","decodeUnsignedIntegers","encodeUnsignedInteger","current","GEOMETRY_READERS","transformVertex","arcs","concatenateArcs","polyArray","ringCoords","indices","readFeaturesFromGeometryCollection","readFeatureFromGeometry","geometryReader","transformArc","GMLNS","ONLY_WHITESPACE_RE","GMLBase","featureType","featureNS","srsName","schemaLocation","FEATURE_COLLECTION_PARSERS","namespace","featureMember","readFeaturesInternal","featureMembers","defaultPrefix","ns","featureTypes","readFeatureElement","readGeometryOrExtent","GEOMETRY_PARSERS","readExtentElement","readGeometryElement","readFeatureElementInternal","asFeature","geometryName","_content_","fid","readMultiPoint","MULTIPOINT_PARSERS","readMultiLineString","MULTILINESTRING_PARSERS","readMultiPolygon","MULTIPOLYGON_PARSERS","pointMemberParser","POINTMEMBER_PARSERS","lineStringMemberParser","LINESTRINGMEMBER_PARSERS","polygonMemberParser","POLYGONMEMBER_PARSERS","internalOptions","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","MULTIGEOMETRY_TO_MEMBER_NODENAME","MultiCurve","MultiSurface","GML2","containerSrs","coordsGroups","readBox","BOX_PARSERS_","innerBoundaryIsParser","outerBoundaryIsParser","GEOMETRY_NODE_FACTORY_","multiSurface","surface","multiCurve","writeFeatureElement","writeGeometryElement","writeCurveOrLineString","createCoordinatesNode_","writeCoordinates_","segments","writeCurveSegments_","writeLineStringOrCurveMember","writeMultiCurveOrLineString","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","GEOMETRY_SERIALIZERS","getCoords_","writeSurfaceOrPolygon","RING_SERIALIZERS","RING_NODE_FACTORY_","patches","writeSurfacePatches_","exteriorWritten","writeRing","writeLinearRing","writePoint","writeMultiPoint","POINTMEMBER_SERIALIZERS","writePointMember","writeMultiSurfaceOrPolygon","SURFACEORPOLYGONMEMBER_SERIALIZERS","writeSurfaceOrPolygonMember","writeEnvelope","ENVELOPE_SERIALIZERS","Box","Curve","Surface","Envelope","curveMember","surfaceMember","lowerCorner","upperCorner","GML3","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve","MULTICURVE_PARSERS","readFlatCurveRing","readMultiSurface","MULTISURFACE_PARSERS","curveMemberParser","CURVEMEMBER_PARSERS","surfaceMemberParser","SURFACEMEMBER_PARSERS","readPatch","PATCHES_PARSERS","readSegment","SEGMENTS_PARSERS","readPolygonPatch","readLineStringSegment","interiorParser","exteriorParser","readSurface","SURFACE_PARSERS","readCurve","CURVE_PARSERS","readEnvelope","ENVELOPE_PARSERS","readFlatPos","readFlatPosList","contextDimension","writePos_","srsDimension","writePosList_","posList","writeFeatureMembers_","geom","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","Ring","GML32","Filter","tagName_","getTagName","LogicalNary","And","Bbox","boundedBy","member","TRANSACTION_SUMMARY_PARSERS","totalInserted","totalUpdated","totalDeleted","TRANSACTION_RESPONSE_PARSERS","TransactionSummary","readTransactionSummary","InsertResults","readInsertResults","QUERY_SERIALIZERS","PropertyName","TRANSACTION_SERIALIZERS","Insert","Update","writeUpdate","Delete","writeDelete","writeProperty","Native","writeNative","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","SCHEMA_LOCATIONS","GML_FORMATS","serializeTransactionRequest","OGC_FID_PARSERS","FeatureId","fidParser","INSERT_RESULTS_PARSERS","gmlVersion","writeOgcFidFilter","getTypeName","featurePrefix","nativeElement","vendorId","safeToIgnore","GETFEATURE_SERIALIZERS","Query","writeQuery","During","writeDuringFilter","writeLogicalFilter","Or","writeNotFilter","BBOX","writeBboxFilter","Contains","writeSpatialFilter","Intersects","Within","DWithin","writeDWithinFilter","PropertyIsEqualTo","writeComparisonFilter","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","writeIsNullFilter","PropertyIsBetween","writeIsBetweenFilter","PropertyIsLike","writeIsLikeFilter","Disjoint","ResourceId","propertyNames","typeNameAttr","getFilterNS","writeFilterCondition","writePropertyName","unit","writeExpression","propertyName","timePeriod","writeTimeInstant","matchCase","writeLiteral","lowerBoundary","upperBoundary","wildCard","singleChar","escapeChar","timeInstant","timePosition","writeGetFeature","OWS_NAMESPACE_URIS","Contents","CONTENTS_PARSERS","LAYER_PARSERS","TileMatrixSet","TMS_PARSERS","isDefault","Format","TileMatrixSetLink","TMS_LINKS_PARSERS","Dimension","DIMENSION_PARSERS","ResourceURL","resourceType","resource","WGS84BoundingBox","readBoundingBox","BoundingBox","WGS84_BBOX_READERS","Identifier","LegendURL","legend","TileMatrixSetLimits","TMS_LIMITS_LIST_PARSERS","TileMatrixLimits","TMS_LIMITS_PARSERS","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","LowerCorner","readCoordinates","UpperCorner","WellKnownScaleSet","TM_PARSERS","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","events","FullScreenEventType","isFullScreenSupported","requestFullscreen","fullscreenEnabled","isFullScreen","fullscreenElement","requestFullScreen","PROJECTION","COORDINATE_FORMAT","MAX_RATIO","MIN_RATIO","UNITS_PROP","LEADING_DIGITS","DEFAULT_DPI","Direction","ol","$ol$Collection","_ol_Collection$CollectionEvent","$ol$DataTile","_ol_DataTile$asArrayLike","_ol_DataTile$asImageLike","_ol_DataTile$toArray","$ol$Disposable","$ol$Feature","_ol_Feature$createStyleFunction","Geolocation","position_","watchId_","handleProjectionChanged_","handleTrackingChanged_","setProjection","trackingOptions","setTrackingOptions","setTracking","tracking","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","accuracy","altitude","altitudeAccuracy","longitude","latitude","projectedPosition","speed","circularPolygon","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getSpeed","_ol_Geolocation$GeolocationError","$ol$Image","_ol_Image$decode","_ol_Image$decodeFallback","_ol_Image$listenImage","_ol_Image$load","$ol$ImageCanvas","$ol$ImageTile","$ol$Kinetic","$ol$Map","$ol$MapBrowserEvent","$ol$MapBrowserEventHandler","$ol$MapEvent","$ol$Object","_ol_Object$ObjectEvent","$ol$Observable","_ol_Observable$unByKey","$ol$Overlay","$ol$Tile","$ol$TileCache","$ol$TileQueue","_ol_TileQueue$getTilePriority","$ol$TileRange","_ol_TileRange$createOrUpdate","VectorRenderTile","getSourceTiles","loadingSourceTiles","hitDetectionImageData","replayState_","sourceTiles","errorTileKeys","wantedResolution","hasContext","getReplayState","renderedRenderOrder","renderedTileResolution","renderedTileRevision","renderedTileZ","$ol$View","_ol_View$createCenterConstraint","_ol_View$createResolutionConstraint","_ol_View$createRotationConstraint","_ol_View$isNoopAnimation","_ol_array$ascending","_ol_array$binarySearch","_ol_array$descending","_ol_array$equals","_ol_array$extend","_ol_array$isSorted","_ol_array$linearFindNearest","_ol_array$reverseSubArray","stableSort","compareFnc","asserts","_ol_asserts$assert","centerconstraint","_ol_centerconstraint$createExtent","_ol_centerconstraint$none","_ol_color$asArray","_ol_color$asString","_ol_color$fromString","_ol_color$isStringColor","_ol_color$lchaToRgba","_ol_color$normalize","_ol_color$rgbaToLcha","_ol_color$toString","_ol_color$withAlpha","colorlike","_ol_colorlike$asColorLike","_ol_console$error","setLevel","_ol_console$warn","$ol$control$Attribution","$ol$control$Control","FullScreen","source_","isInFullscreen_","boundHandleMapTargetChange_","handleMapTargetChange_","cssClassName_","documentListeners_","activeClassName_","activeClassName","inactiveClassName_","inactiveClassName","labelNode_","labelActive","labelActiveNode_","button_","setClassName_","handleFullScreen_","exitFullscreen","exitFullScreen","requestFullScreenWithKeys","handleFullScreenChange_","wasInFullscreen","fullscreen","oldMap","MousePosition","coordinateFormat","setCoordinateFormat","renderOnMouseOut_","placeholder","placeholder_","renderedHTML_","mapProjection_","getCoordinateFormat","handleMouseMove","updateHTML_","handleMouseOut","html","OverviewMap","boundHandleRotationChanged_","handleRotationChanged_","viewExtent_","ovmapDiv_","view_","ovmap","ovmap_","boxSizing","boxOverlay_","scope","overlayBox","move","mousePosition","endMoving","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","updateBoxAfterOvmapIsRendered_","newView","validateExtent_","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","updateBox_","ovresolution","ovmapPostrenderKey_","getOverviewMap","$ol$control$Rotate","ScaleLine","bar","innerElement_","viewState_","minWidth_","minWidth","maxWidth_","maxWidth","renderedWidth_","handleUnitsChanged_","setUnits","scaleBar_","scaleBarSteps_","scaleBarText_","dpi_","setDpi","pointResolutionUnits","nominalCount","suffix","metersPerDegree","decimalCount","previousCount","previousWidth","previousDecimalCount","createScaleBar","resolutionScale","getScaleForResolution","mapScale","toLocaleString","stepWidth","scaleSteps","createMarker","cls","createStepText","isLast","lengthString","$ol$control$Zoom","ZoomSlider","currentResolution_","direction_","heightLimit_","widthLimit_","startX_","startY_","thumbSize_","sliderInitialized_","thumbElement","containerElement","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","initSlider_","containerWidth","containerHeight","containerStyle","thumb","thumbStyle","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","drag","setThumbPosition_","getPositionForResolution_","amount","ZoomToExtent","handleZoomToExtent","_ol_control_defaults$defaults","_ol_coordinate$add","_ol_coordinate$closestOnCircle","_ol_coordinate$closestOnSegment","createStringXY","_ol_coordinate$degreesToStringHDMS","_ol_coordinate$distance","_ol_coordinate$equals","_ol_coordinate$format","_ol_coordinate$getWorldsAway","_ol_coordinate$rotate","_ol_coordinate$scale","_ol_coordinate$squaredDistance","_ol_coordinate$squaredDistanceToSegment","toStringHDMS","_ol_coordinate$toStringXY","_ol_coordinate$wrapX","css","_ol_css$CLASS_COLLAPSED","_ol_css$CLASS_CONTROL","_ol_css$CLASS_HIDDEN","_ol_css$CLASS_SELECTABLE","_ol_css$CLASS_UNSELECTABLE","_ol_css$CLASS_UNSUPPORTED","_ol_css$getFontParameters","dom","_ol_dom$createCanvasContext2D","_ol_dom$getSharedCanvasContext2D","_ol_dom$outerHeight","_ol_dom$outerWidth","_ol_dom$releaseCanvas","_ol_dom$removeChildren","_ol_dom$removeNode","_ol_dom$replaceChildren","_ol_dom$replaceNode","_ol_easing$easeIn","_ol_easing$easeOut","_ol_easing$inAndOut","_ol_easing$linear","upAndDown","$ol$events$Event","_ol_events_Event$stopPropagation","_ol_events_SnapEvent$SnapEvent","$ol$events$Target","_ol_events_condition$all","_ol_events_condition$altKeyOnly","_ol_events_condition$altShiftKeysOnly","_ol_events_condition$always","click","doubleClick","_ol_events_condition$focus","_ol_events_condition$focusWithTabindex","_ol_events_condition$mouseActionButton","_ol_events_condition$mouseOnly","_ol_events_condition$never","_ol_events_condition$noModifierKeys","penOnly","pointerEvt","_ol_events_condition$platformModifierKey","platformModifierKeyOnly","pointerMove","_ol_events_condition$primaryAction","_ol_events_condition$shiftKeyOnly","_ol_events_condition$singleClick","_ol_events_condition$targetNotEditable","touchOnly","_ol_events$listen","_ol_events$listenOnce","_ol_events$unlistenByKey","expr","cpu","_ol_expr_cpu$buildExpression","_ol_expr_cpu$newEvaluationContext","_ol_expr_expression$AnyType","_ol_expr_expression$BooleanType","_ol_expr_expression$CallExpression","_ol_expr_expression$ColorType","_ol_expr_expression$LiteralExpression","_ol_expr_expression$NoneType","_ol_expr_expression$NumberArrayType","_ol_expr_expression$NumberType","_ol_expr_expression$Ops","_ol_expr_expression$SizeType","_ol_expr_expression$StringType","_ol_expr_expression$computeGeometryType","_ol_expr_expression$includesType","_ol_expr_expression$isType","_ol_expr_expression$newParsingContext","_ol_expr_expression$overlapsType","_ol_expr_expression$parse","_ol_expr_expression$typeName","gpu","_ol_expr_gpu$PALETTE_TEXTURE_ARRAY","_ol_expr_gpu$arrayToGlsl","compilationContext","_ol_expr_gpu$colorToGlsl","_ol_expr_gpu$getStringNumberEquivalent","newCompilationContext","_ol_expr_gpu$numberToGlsl","_ol_expr_gpu$sizeToGlsl","_ol_expr_gpu$stringToGlsl","_ol_expr_gpu$uniformNameForVariable","_ol_extent$applyTransform","_ol_extent$approximatelyEquals","_ol_extent$boundingExtent","_ol_extent$buffer","_ol_extent$clone","_ol_extent$closestSquaredDistanceXY","_ol_extent$containsCoordinate","_ol_extent$containsExtent","_ol_extent$containsXY","_ol_extent$coordinateRelationship","_ol_extent$createEmpty","_ol_extent$createOrUpdate","_ol_extent$createOrUpdateEmpty","_ol_extent$createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","_ol_extent$createOrUpdateFromFlatCoordinates","createOrUpdateFromRings","_ol_extent$equals","_ol_extent$extend","_ol_extent$extendCoordinate","_ol_extent$extendCoordinates","_ol_extent$extendFlatCoordinates","_ol_extent$extendRings","_ol_extent$extendXY","_ol_extent$forEachCorner","_ol_extent$getArea","_ol_extent$getBottomLeft","_ol_extent$getBottomRight","_ol_extent$getCenter","_ol_extent$getCorner","getEnlargedArea","_ol_extent$getForViewAndSize","_ol_extent$getHeight","_ol_extent$getIntersection","getIntersectionArea","getMargin","_ol_extent$getRotatedViewport","_ol_extent$getTopLeft","_ol_extent$getTopRight","_ol_extent$getWidth","_ol_extent$intersects","_ol_extent$intersectsSegment","_ol_extent$isEmpty","_ol_extent$returnOrUpdate","_ol_extent$scaleFromCenter","_ol_extent$wrapAndSliceX","_ol_extent$wrapX","featureloader","_ol_featureloader$loadFeaturesXhr","setWithCredentials","xhrWithCredentials","_ol_featureloader$xhr","$ol$format$Feature","_ol_format_Feature$createGeometry","_ol_format_Feature$createRenderFeature","_ol_format_Feature$transformExtentWithOptions","_ol_format_Feature$transformGeometryWithOptions","GPX","readExtensions_","readExtensions","handleReadExtensions_","extensionsNode","readMetadata","readMetadataFromDocument","readMetadataFromNode","metadata","featureReader","gpx","GeoJSON","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","geometryObject","objects","IGC","altitudeMode_","lad_","lod_","ladStart_","ladStop_","lodStart_","lodStop_","month","day","lastDateTime","hour","minute","second","UTC","numberAdds","addCode","addStart","addStop","$ol$format$JSONFeature","KML","defaultStyle_","extractStyles_","extractStyles","writeStyles","sharedStyles_","showPointNames_","showPointNames","iconUrlFunction","readDocumentOrFolder_","Folder","readPlacemark_","readSharedStyle_","readSharedStyleMap_","drawName","multiGeometryPoints","featureStyle","nameStyle","foundStyle","textOffset","createNameStyleFunction","createFeatureStyleFunction","styleUri","fs","readName","readNameFromDocument","readNameFromNode","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","readCamera","cameras","readCameraFromDocument","readCameraFromNode","kml","xmlnsUri","getDefaultFillStyle","getDefaultImageStyle","getDefaultStrokeStyle","getDefaultStyle","getDefaultStyleArray","getDefaultTextStyle","_ol_format_KML$readFlatCoordinates","MVT","layerName_","layerName","idProperty_","idProperty","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","ctor","PBF","pbfLayers","pbfLayer","OSMXML","$ol$format$OWS","Polyline","factor_","geometryLayout_","geometryLayout","_ol_format_Polyline$decodeDeltas","_ol_format_Polyline$decodeFloats","_ol_format_Polyline$decodeSignedIntegers","_ol_format_Polyline$decodeUnsignedIntegers","_ol_format_Polyline$encodeDeltas","_ol_format_Polyline$encodeFloats","_ol_format_Polyline$encodeSignedIntegers","_ol_format_Polyline$encodeUnsignedInteger","_ol_format_Polyline$encodeUnsignedIntegers","$ol$format$TextFeature","TopoJSON","topoJSONTopology","transformArcs","topoJSONFeatures","objectName","WFS","version_","featureType_","featureNS_","gmlFormat_","gmlFormat","schemaLocation_","getFeatureType","setFeatureType","featuresNS","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","handle","outputFormat","maxFeatures","resultType","viewParams","combineBboxAndFilter","completeFilter","bboxFilter","bboxFilterFn","Function","andFilterFn","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","createTransactionRequest","nativeElements","writeFilter","WMSGetFeatureInfo","readFeatures_","layerElement","toRemove","layerFeatures","gmlFeatures","WMTSCapabilities","owsParser_","WMTSCapabilityObject","xlink","_ol_format_xlink$readHref","xsd","_ol_format_xsd$readBoolean","_ol_format_xsd$readBooleanString","_ol_format_xsd$readDateTime","_ol_format_xsd$readDecimal","_ol_format_xsd$readDecimalString","_ol_format_xsd$readNonNegativeIntegerString","_ol_format_xsd$readPositiveInteger","_ol_format_xsd$readString","_ol_format_xsd$writeBooleanTextNode","_ol_format_xsd$writeCDATASection","_ol_format_xsd$writeDateTimeTextNode","_ol_format_xsd$writeDecimalTextNode","_ol_format_xsd$writeNonNegativeIntegerTextNode","_ol_format_xsd$writeStringTextNode","_ol_functions$FALSE","_ol_functions$TRUE","_ol_functions$VOID","_ol_functions$memoizeOne","_ol_functions$toPromise","$ol$geom$Circle","$ol$geom$Geometry","$ol$geom$GeometryCollection","$ol$geom$LineString","$ol$geom$LinearRing","$ol$geom$MultiLineString","$ol$geom$MultiPoint","$ol$geom$MultiPolygon","$ol$geom$Point","$ol$geom$Polygon","_ol_geom_Polygon$circular","_ol_geom_Polygon$fromCircle","_ol_geom_Polygon$fromExtent","_ol_geom_Polygon$makeRegular","$ol$geom$SimpleGeometry","_ol_geom_SimpleGeometry$getLayoutForStride","_ol_geom_SimpleGeometry$getStrideForLayout","_ol_geom_SimpleGeometry$transformGeom2D","_ol_geom_flat_area$linearRing","_ol_geom_flat_area$linearRings","_ol_geom_flat_area$linearRingss","_ol_geom_flat_center$linearRingss","closest","_ol_geom_flat_closest$arrayMaxSquaredDelta","_ol_geom_flat_closest$assignClosestArrayPoint","_ol_geom_flat_closest$assignClosestMultiArrayPoint","_ol_geom_flat_closest$assignClosestPoint","_ol_geom_flat_closest$maxSquaredDelta","_ol_geom_flat_closest$multiArrayMaxSquaredDelta","_ol_geom_flat_contains$linearRingContainsExtent","_ol_geom_flat_contains$linearRingContainsXY","_ol_geom_flat_contains$linearRingsContainsXY","_ol_geom_flat_contains$linearRingssContainsXY","deflate","_ol_geom_flat_deflate$deflateCoordinate","_ol_geom_flat_deflate$deflateCoordinates","_ol_geom_flat_deflate$deflateCoordinatesArray","_ol_geom_flat_deflate$deflateMultiCoordinatesArray","flip","_ol_geom_flat_flip$flipXY","geodesic","greatCircleArc","geoProjection","cosLat1","sinLat1","cosLat2","sinLat2","cosDeltaLon","sinDeltaLon","D","cosD","sinD","_ol_geom_flat_geodesic$meridian","_ol_geom_flat_geodesic$parallel","inflate","_ol_geom_flat_inflate$inflateCoordinates","_ol_geom_flat_inflate$inflateCoordinatesArray","_ol_geom_flat_inflate$inflateMultiCoordinatesArray","interiorpoint","_ol_geom_flat_interiorpoint$getInteriorPointOfArray","_ol_geom_flat_interiorpoint$getInteriorPointsOfMultiArray","_ol_geom_flat_interpolate$interpolatePoint","_ol_geom_flat_interpolate$lineStringCoordinateAtM","_ol_geom_flat_interpolate$lineStringsCoordinateAtM","intersectsextent","_ol_geom_flat_intersectsextent$intersectsLineString","_ol_geom_flat_intersectsextent$intersectsLineStringArray","_ol_geom_flat_intersectsextent$intersectsLinearRing","_ol_geom_flat_intersectsextent$intersectsLinearRingArray","_ol_geom_flat_intersectsextent$intersectsLinearRingMultiArray","_ol_geom_flat_length$lineStringLength","linearRingLength","perimeter","orient","_ol_geom_flat_orient$inflateEnds","_ol_geom_flat_orient$linearRingIsClockwise","_ol_geom_flat_orient$linearRingsAreOriented","_ol_geom_flat_orient$linearRingssAreOriented","_ol_geom_flat_orient$orientLinearRings","_ol_geom_flat_orient$orientLinearRingsArray","_ol_geom_flat_reverse$coordinates","_ol_geom_flat_segments$forEach","_ol_geom_flat_simplify$douglasPeucker","_ol_geom_flat_simplify$douglasPeuckerArray","douglasPeuckerMultiArray","_ol_geom_flat_simplify$quantize","_ol_geom_flat_simplify$quantizeArray","_ol_geom_flat_simplify$quantizeMultiArray","_ol_geom_flat_simplify$radialDistance","simplifyLineString","highQuality","_ol_geom_flat_simplify$snap","straightchunk","_ol_geom_flat_straightchunk$matchingChunk","textpath","_ol_geom_flat_textpath$drawTextOnPath","topology","lineStringIsClosed","lastCoord","_ol_geom_flat_transform$rotate","_ol_geom_flat_transform$scale","_ol_geom_flat_transform$transform2D","_ol_geom_flat_transform$translate","has","_ol_has$CREATE_IMAGE_BITMAP","_ol_has$DEVICE_PIXEL_RATIO","_ol_has$FIREFOX","_ol_has$IMAGE_DECODE","_ol_has$MAC","_ol_has$PASSIVE_EVENT_LISTENERS","_ol_has$SAFARI","_ol_has$SAFARI_BUG_237906","_ol_has$WEBKIT","_ol_has$WORKER_OFFSCREEN_CANVAS","DblClickDragZoom","opt_options","scaleDeltaByPixel_","handlingDownUpSequence_","handlingDoubleDownSequence_","doubleTapTimeoutId_","trackedPointers_","waitForDblTap_","isPointerDraggingEvent","$ol$interaction$DoubleClickZoom","DragAndDrop","readAsBuffer_","formats_","formatConstructors","dropListenKeys_","handleResult_","formats","tryReadFeatures_","registerListeners_","dropArea","handleDrop","handleStop","unregisterListeners_","files","dataTransfer","reader","FileReader","readAsArrayBuffer","readAsText","dropEffect","_ol_interaction_DragAndDrop$DragAndDropEvent","$ol$interaction$DragBox","_ol_interaction_DragBox$DragBoxEvent","$ol$interaction$DragPan","$ol$interaction$DragRotate","DragRotateAndZoom","lastMagnitude_","magnitude","angleDelta","$ol$interaction$DragZoom","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","pointerType_","freehand_","snapTolerance_","snapTolerance","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","mode","squaredLength","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","freehandCondition_","freehand","freehandCondition","traceCondition_","setTrace","trace","traceState_","traceSource_","traceSource","updateState_","getOverlay","addToDrawing_","startDrawing_","deactivateTrace_","toggleTraceState_","getTraceTargets","startPx","targetIndex","addOrRemoveTracedCoordinates_","previouslyForward","addTracedCoordinates_","removeTracedCoordinates_","fromIndex","toIndex","removeLastPoints_","appendCoordinates","updateTrace_","traceState","updatedTraceTarget","closestTargetDistance","newTargetIndex","newEndIndex","minSegmentDistance","coordinateIndex","newTarget","considerBothDirections","newCoordinate","forwardDistance","reverseDistance","getTraceTargetUpdate","oldTarget","tracing","startingToDraw","finishDrawing","atFinish_","abortDrawing","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","createOrUpdateCustomSketchLine_","sketchLineGeom","removeLastPoint","sketchFeature","abortDrawing_","newDrawing","ending","sketchFeatures","overlaySource","_ol_interaction_Draw$DrawEvent","createBox","boxCoordinates","createRegularPolygon","internalAngle","Extent","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","vertexOverlay_","pointerStyle","snapToVertex_","pixelCoordinate","sortByDistance","getExtentInternal","getSegments","closestSegment","coordinateDistance","pixel1","pixel2","squaredDist1","squaredDist2","dist","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","vertexFeature","getOpposingPoint","x_","y_","_ol_interaction_Extent$ExtentEvent","$ol$interaction$Interaction","_ol_interaction_Interaction$pan","_ol_interaction_Interaction$zoomByDelta","$ol$interaction$KeyboardPan","$ol$interaction$KeyboardZoom","animationOptions","animationOptions_","params_","replace_","prefix_","initial_","trackedCallbacks_","trackedValues_","getParamName_","get_","set_","delete_","delete","updateUrl_","handleChangeLayerGroup_","history","replaceState","updateView","viewProperties","layersParam","track","updateHistory_","visibilities","pushState","Modify","boundHandleFeatureChange_","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","featuresBeingModified_","rBush_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","hitDetection_","handleSourceAdd_","handleSourceRemove_","hitDetection","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","snapToPointer_","snapToPointer","writer","handlePointerAtPixel_","willModifyFeatures_","ss","removeFeatureSegmentData_","rBush","nodesToRemove","nodeToRemove","depth","centerSegmentData","circumferenceSegmentData","featureSegments","createOrUpdateVertexFeature_","removePoint","dragSegment","setGeometryCoordinates_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","insertVertex_","hitPointGeometry","bufferExtent","vertexSegments","geometryUid","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","dragSegments","segmentsByFeature","component","newIndex","deleted","_ol_interaction_Modify$ModifyEvent","$ol$interaction$MouseWheelZoom","$ol$interaction$PinchRotate","$ol$interaction$PinchZoom","Pointer","$ol$interaction$Pointer","_ol_interaction_Pointer$centroid","$ol$interaction$Select","_ol_interaction_Select$SelectEvent","Snap","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","GEOMETRY_SEGMENTERS_","segmentPointGeometry_","segmentLineStringGeometry_","segmentPolygonGeometry_","segmentMultiPointGeometry_","segmentMultiLineStringGeometry_","segmentMultiPolygonGeometry_","segmentGeometryCollectionGeometry_","segmentCircleGeometry_","feature_uid","segmenter","segmentsData","getFeatures_","snapTo","updateFeature_","featuresToUpdate","unregister","currentMap","projectedCoordinate","segmentsLength","closestVertex","squaredPixelTolerance","getResult","tempVertexCoord","segmentStart","segmentEnd","Translate","lastCoordinate_","startCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","newViewCoordinate","lastViewCoordinate","_ol_interaction_Translate$TranslateEvent","_ol_interaction_defaults$defaults","Base","$ol$layer$Base","BaseImage","$ol$layer$BaseImage","BaseTile","$ol$layer$BaseTile","$ol$layer$BaseVector","Graticule","maxLines","targetSize","showLabels","lonLabelFormatter","latLabelFormatter","lonLabelPosition","latLabelPosition","lonLabelStyle","latLabelStyle","intervals","maxLat_","maxLon_","minLat_","minLon_","maxX_","maxY_","minX_","minY_","targetSize_","maxLines_","meridians_","parallels_","strokeStyle_","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","bottomLeft_","bottomRight_","topLeft_","topRight_","meridiansLabels_","parallelsLabels_","lonLabelFormatter_","latLabelFormatter_","lonLabelPosition_","latLabelPosition_","lonLabelStyleBase_","lonLabelStyle_","latLabelStyleBase_","latLabelStyle_","drawLabels_","intervals_","loaderFunction","strategyFunction","featurePool_","lineStyle_","loadedExtent_","realWorldExtent","renderExtent","updateProjectionInfo_","createGraticule_","featuresColl","poolIndex","addMeridian_","minLat","maxLat","getMeridian_","addParallel_","minLon","maxLon","getParallel_","rotationCenter","rotationExtent","unrotatedWidth","unrotatedHeight","labelsAtStart","vectorContext","textPoint","getMeridianPoint_","getParallelPoint_","getInterval_","validCenterP","centerLonLat","centerLon","centerLat","cnt","validExtentP","validExtent","clampedLat","clampedBottom","clampedTop","getMeridians","clampedLeft","clampedRight","getParallels","epsg4326Projection","toLonLatTransform","lonLatCoordinates","worldExtentP","Group","$ol$layer$Group","_ol_layer_Group$GroupEvent","Heatmap","gradient","blur","gradient_","handleGradientChanged_","setGradient","setBlur","weightFunction_","getBlur","getGradient","createLinearGradient","addColorStop","createGradient","builder","u_size","u_blurSlope","u_gradientTexture","u_opacity","$ol$layer$Image","$ol$layer$Layer","_ol_layer_Layer$inView","$ol$layer$Tile","Vector","$ol$layer$Vector","VectorImage","imageRatio","imageRatio_","loadingstrategy","_ol_loadingstrategy$all","math","_ol_math$ceil","_ol_math$clamp","_ol_math$floor","_ol_math$lerp","_ol_math$modulo","_ol_math$round","_ol_math$solveLinearSystem","_ol_math$squaredDistance","_ol_math$squaredSegmentDistance","_ol_math$toDegrees","_ol_math$toFixed","_ol_math$toRadians","net","_ol_net$ClientError","_ol_net$ResponseError","_ol_net$getJSON","_ol_net$jsonp","overrideXHR","_ol_net$resolveUrl","restoreXHR","_ol_obj$clear","_ol_obj$isEmpty","$ol$proj$Projection","Units","_ol_proj_Units$METERS_PER_UNIT","fromCode","_ol_proj$addCommon","_ol_proj$addCoordinateTransforms","_ol_proj$addEquivalentProjections","_ol_proj$addEquivalentTransforms","_ol_proj$addProjection","_ol_proj$addProjections","clearAllProjections","clearProj","clearTransformFuncs","clearUserProjection","_ol_proj$cloneTransform","_ol_proj$createProjection","_ol_proj$createSafeCoordinateTransform","_ol_proj$createTransformFromCoordinateTransform","_ol_proj$disableCoordinateWarning","epsg3857","_ol_proj_epsg3857$EXTENT","_ol_proj_epsg3857$HALF_SIZE","_ol_proj_epsg3857$MAX_SAFE_Y","_ol_proj_epsg3857$PROJECTIONS","_ol_proj_epsg3857$RADIUS","_ol_proj_epsg3857$WORLD_EXTENT","_ol_proj_epsg3857$fromEPSG4326","_ol_proj_epsg3857$toEPSG4326","epsg4326","_ol_proj_epsg4326$EXTENT","_ol_proj_epsg4326$METERS_PER_UNIT","_ol_proj_epsg4326$PROJECTIONS","_ol_proj_epsg4326$RADIUS","_ol_proj$equivalent","fromLonLat","_ol_proj$fromUserCoordinate","_ol_proj$fromUserExtent","_ol_proj$fromUserResolution","_ol_proj$get","_ol_proj$getPointResolution","_ol_proj$getTransform","_ol_proj$getTransformFromProjections","_ol_proj$getUserProjection","_ol_proj$identityTransform","epsgLookupMapTiler","results","defaultTransform","fromEPSGCode","epsgCode","getEPSGLookup","isRegistered","_ol_proj_proj4$register","setEPSGLookup","_ol_proj_projections$add","_ol_proj_projections$clear","_ol_proj_projections$get","_ol_proj$setUserProjection","_ol_proj$toLonLat","_ol_proj$toUserCoordinate","_ol_proj$toUserExtent","_ol_proj$toUserResolution","_ol_proj$transform","_ol_proj$transformExtent","transformWithProjections","_ol_proj_transforms$add","_ol_proj_transforms$clear","_ol_proj_transforms$get","useGeographic","$ol$render$Box","$ol$render$Event","$ol$render$Feature","toFeature","_ol_render_Feature$toGeometry","$ol$render$VectorContext","$ol$render$canvas$Builder","$ol$render$canvas$BuilderGroup","$ol$render$canvas$Executor","$ol$render$canvas$ExecutorGroup","_ol_render_canvas_ExecutorGroup$ALL","_ol_render_canvas_ExecutorGroup$DECLUTTER","_ol_render_canvas_ExecutorGroup$NON_DECLUTTER","_ol_render_canvas_ExecutorGroup$getPixelIndexArray","$ol$render$canvas$ImageBuilder","Immediate","$ol$render$canvas$Immediate","_ol_render_canvas_Instruction$beginPathInstruction","_ol_render_canvas_Instruction$closePathInstruction","_ol_render_canvas_Instruction$fillInstruction","_ol_render_canvas_Instruction$strokeInstruction","$ol$render$canvas$LineStringBuilder","$ol$render$canvas$PolygonBuilder","$ol$render$canvas$TextBuilder","_ol_render_canvas_TextBuilder$TEXT_ALIGN","$ol$render$canvas$ZIndexContext","_ol_render_canvas$checkedFonts","_ol_render_canvas$defaultFillStyle","_ol_render_canvas$defaultFont","_ol_render_canvas$defaultLineCap","_ol_render_canvas$defaultLineDash","defaultLineDashOffset","_ol_render_canvas$defaultLineJoin","defaultLineWidth","_ol_render_canvas$defaultMiterLimit","_ol_render_canvas$defaultPadding","_ol_render_canvas$defaultStrokeStyle","_ol_render_canvas$defaultTextAlign","_ol_render_canvas$defaultTextBaseline","_ol_render_canvas$drawImageOrLabel","_ol_render_canvas$getTextDimensions","hitdetect","_ol_render_canvas_hitdetect$HIT_DETECT_RESOLUTION","_ol_render_canvas_hitdetect$createHitDetectionImageData","_ol_render_canvas_hitdetect$hitDetect","_ol_render_canvas$measureAndCacheTextWidth","_ol_render_canvas$measureTextHeight","_ol_render_canvas$measureTextWidth","_ol_render_canvas$registerFont","rotateAtOffset","_ol_render_canvas_style$buildRuleSet","_ol_render_canvas_style$buildStyle","_ol_render_canvas_style$flatStylesToStyleFunction","_ol_render_canvas_style$rulesToStyleFunction","_ol_render_canvas$textHeights","getRenderPixel","_ol_render$getVectorContext","toContext","scaleTransform","Composite","$ol$renderer$Composite","$ol$renderer$Layer","$ol$renderer$Map","$ol$renderer$canvas$ImageLayer","$ol$renderer$canvas$Layer","_ol_renderer_canvas_Layer$canvasPool","$ol$renderer$canvas$TileLayer","VectorImageLayer","$ol$renderer$canvas$VectorImageLayer","$ol$renderer$canvas$VectorLayer","vector","_ol_renderer_vector$defaultOrder","_ol_renderer_vector$getSquaredTolerance","_ol_renderer_vector$getTolerance","_ol_renderer_vector$renderFeature","$ol$reproj$DataTile","$ol$reproj$Image","$ol$reproj$Tile","$ol$reproj$Triangulation","_ol_reproj$calculateSourceExtentResolution","_ol_reproj$calculateSourceResolution","_ol_reproj$canvasPool","common","_ol_reproj_common$ERROR_THRESHOLD","_ol_reproj$render","_ol_resolution$fromResolutionLike","resolutionconstraint","_ol_resolutionconstraint$createMinMaxResolution","_ol_resolutionconstraint$createSnapToPower","_ol_resolutionconstraint$createSnapToResolutions","rotationconstraint","_ol_rotationconstraint$createSnapToN","_ol_rotationconstraint$createSnapToZero","_ol_rotationconstraint$disable","_ol_rotationconstraint$none","_ol_size$hasArea","_ol_size$scale","_ol_size$toSize","BingMaps","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","placeholderTiles_","placeholderTiles","handleImageryMetadataResponse","getApiKey","getImagerySet","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","zoomMax","imageWidth","imageHeight","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","imageryProviders","imageryProvider","intersecting","coverageAreas","coverageArea","_ol_source_BingMaps$quadKey","Cluster","interpolationRatio","createCustomCluster_","createCluster","boundRefresh_","updateDistance","setDistance","setMinDistance","getMinDistance","cluster","mapDistance","clustered","neighbors","neighbor","searchCenter","tileGridForProjection_","tileCacheForProjection_","setTileSizes","getReprojTile_","reprojTilePixelRatio","sourceLoader","Google","highDpi","sessionTokenRequest","mapType","language","region","imageFormat","layerTypes","sessionTokenRequest_","sessionTokenValue_","sessionRefreshId_","previousViewportAttribution_","previousViewportExtent_","createSession_","fetchSessionToken","createSessionUrl","method","headers","sessionTokenResponse","session","expiry","fetchAttributions_","viewportExtent","$ol$source$Image","_ol_source_Image$ImageSourceEvent","_ol_source_Image$defaultImageLoadFunction","_ol_source_Image$getRequestExtent","ImageArcGISRest","imageLoadFunction_","imageLoadFunction","imageSize_","ratio_","loaderProjection_","getParams","getImageLoadFunction","setImageLoadFunction","updateParams","canvasFunction_","canvasFunction","canvasElement","ImageStatic","imageExtent_","getImageExtent","ImageWMS","serverType_","sourceProjectionObj","OGCMapTile","handleTileSetInfo_","tileSetInfo","OSM","_ol_source_OSM$ATTRIBUTION","Raster","$ol$source$Raster","_ol_source_Raster$Processor","_ol_source_Raster$RasterSourceEvent","_ol_source_Raster$newImageData","$ol$source$Source","StadiaMaps","provider","providerConfig","layerConfig","query","apiKey","OSM_ATTRIBUTION","$ol$source$Tile","_ol_source_Tile$TileSourceEvent","TileArcGISRest","getKeyForParams_","getRequestUrl_","tileExtent","TileDebug","strokeRect","$ol$source$TileImage","TileJSON","tileJSON_","handleTileJSONResponse","handleTileJSONError","tileJSON","getTileJSON","gridExtent","attributionExtent","TileWMS","transparent","v13_","updateV13_","sourceProjCoord","UTFGrid","tileUrlFunction_","template_","getTemplate","forDataAtCoordinateAndResolution","grids","_ol_source_UTFGrid$CustomTile","$ol$source$UrlTile","$ol$source$Vector","_ol_source_Vector$VectorSourceEvent","WMTS","requestEncoding","dimensions_","matrixSet_","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","tilematrixset","Service","Request","Version","TileCol","TileRow","optionsFromCapabilities","wmtsCap","tileMatrixSets","findIndex","supportedCRS","el","matrixSetObj","projConfig","switchXY","selectedMatrixLimit","tileMatrixValue","tileSpanX","tileSpanY","matrixSetExtent","wgs84BoundingBox","wgs84ProjectionExtent","wgs84MatrixSetExtent","gets","encodings","$ol$source$XYZ","arcgisRest","_ol_source_arcgisRest$createLoader","_ol_source_arcgisRest$getRequestUrl","_ol_source_common$DECIMALS","DEFAULT_WMS_VERSION","ogcTileUtil","_ol_source_ogcTileUtil$appendCollectionsQueryParam","_ol_source_ogcTileUtil$getMapTileUrlTemplate","_ol_source_ogcTileUtil$getTileSetInfo","_ol_source_ogcTileUtil$getVectorTileUrlTemplate","sourcesFromTileGrid","sourceCache","tileGridExtent","wantedSources","static","_ol_source_static$createLoader","wms","_ol_source_wms$DEFAULT_VERSION","_ol_source_wms$createLoader","_ol_source_wms$getFeatureInfoUrl","_ol_source_wms$getImageSrc","_ol_source_wms$getLegendUrl","_ol_source_wms$getRequestParams","_ol_source_wms$getRequestUrl","sphere","_ol_sphere$DEFAULT_RADIUS","_ol_sphere$getDistance","_ol_sphere$offset","_ol_string$compareVersions","_ol_string$padNumber","structs","$ol$structs$LRUCache","LinkedList","first_","last_","head_","circular_","length_","insertItem","removeItem","firstItem","lastItem","nextItem","getNextItem","prevItem","getPrevItem","getCurrItem","setFirstItem","$ol$structs$PriorityQueue","_ol_structs_PriorityQueue$DROP","$ol$structs$RBush","$ol$style$Circle","$ol$style$Fill","$ol$style$Icon","$ol$style$IconImage","_ol_style_IconImage$get","$ol$style$IconImageCache","_ol_style_IconImageCache$getCacheKey","_ol_style_IconImageCache$shared","$ol$style$Image","$ol$style$RegularShape","$ol$style$Stroke","$ol$style$Style","_ol_style_Style$createDefaultStyle","_ol_style_Style$createEditingStyle","_ol_style_Style$toFunction","$ol$style$Text","_ol_style_flat$createDefaultStyle","tilecoord","_ol_tilecoord$createOrUpdate","_ol_tilecoord$fromKey","getCacheKeyForTileKey","_ol_tilecoord$getKey","_ol_tilecoord$getKeyZXY","_ol_tilecoord$hash","_ol_tilecoord$withinExtentAndZ","$ol$tilegrid$TileGrid","$ol$tilegrid$WMTS","_ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet","_ol_tilegrid_common$DEFAULT_MAX_ZOOM","_ol_tilegrid_common$DEFAULT_TILE_SIZE","_ol_tilegrid$createForExtent","_ol_tilegrid$createForProjection","_ol_tilegrid$createXYZ","_ol_tilegrid$extentFromProjection","_ol_tilegrid$getForProjection","_ol_tilegrid$wrapX","tileurlfunction","_ol_tileurlfunction$createFromTemplate","_ol_tileurlfunction$createFromTemplates","_ol_tileurlfunction$createFromTileUrlFunctions","_ol_tileurlfunction$expandUrl","_ol_tileurlfunction$nullTileUrlFunction","_ol_transform$apply","_ol_transform$compose","composeCssTransform","_ol_transform$create","_ol_transform$determinant","invert","_ol_transform$makeInverse","makeScale","_ol_transform$multiply","_ol_transform$reset","_ol_transform$rotate","_ol_transform$scale","_ol_transform$set","_ol_transform$setFromArray","_ol_transform$toString","_ol_transform$translate","_ol_uri$appendParams","util","_ol_util$abstract","_ol_util$getUid","vec","_ol_vec_mat4$create","_ol_vec_mat4$fromTransform","_ol_xml$OBJECT_PROPERTY_NODE_FACTORY","_ol_xml$XML_SCHEMA_INSTANCE_URI","_ol_xml$createElementNS","_ol_xml$getAllTextContent","_ol_xml$getAllTextContent_","_ol_xml$getAttributeNS","_ol_xml$getDocument","_ol_xml$getXMLSerializer","_ol_xml$isDocument","_ol_xml$makeArrayExtender","_ol_xml$makeArrayPusher","_ol_xml$makeArraySerializer","_ol_xml$makeChildAppender","_ol_xml$makeObjectPropertyPusher","_ol_xml$makeObjectPropertySetter","_ol_xml$makeReplacer","_ol_xml$makeSequence","_ol_xml$makeSimpleNodeFactory","_ol_xml$makeStructureNS","_ol_xml$parse","_ol_xml$parseNode","_ol_xml$pushParseAndPop","_ol_xml$pushSerializeAndPop","registerDocument","registerXMLSerializer","xmlSerializer","_ol_xml$serialize"],"mappings":"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","x_google_ignoreList":[71,72,75,76,77,78,79,80,81,82,231,261,262]}